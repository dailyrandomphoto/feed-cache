<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Good News and Bad News, Pivot and Turn - Building DDTJ Day 6</title>
      <author>Shai Almog</author>
      <pubDate>Mon, 27 Dec 2021 10:52:41 +0000</pubDate>
      <link>https://dev.to/codenameone/good-news-and-bad-news-pivot-and-turn-building-ddtj-day-6-1pl4</link>
      <guid>https://dev.to/codenameone/good-news-and-bad-news-pivot-and-turn-building-ddtj-day-6-1pl4</guid>
      <description>&lt;p&gt;Last week I &lt;a href="https://dev.to/codenameone/series/15971"&gt;spent 5 days building and designing&lt;/a&gt; the &lt;a href="https://github.com/ddtj/ddtj"&gt;DDTJ project&lt;/a&gt;. Hopefully, I’ll complete the MVP by this weekend. As we left the series last week, I was stuck. This week there’s a bit of an improvement…&lt;/p&gt;

&lt;p&gt;There are a lot of variations on the good news/bad news joke. I’m sure you all know some form of it… Here’s a programming oriented one: &lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;developer: so i have good news and bad news&lt;br&gt;&lt;br&gt;manager: what's the good news?&lt;br&gt;&lt;br&gt;developer: i've discovered that the "5 second rule" only applies to food&lt;br&gt;&lt;br&gt;manager: and the bad news?&lt;br&gt;&lt;br&gt;developer: i dropped our tables&lt;/p&gt;— Kat Maddox (&lt;a class="mentioned-user" href="https://dev.to/ctrlshifti"&gt;@ctrlshifti&lt;/a&gt;) &lt;a href="https://twitter.com/ctrlshifti/status/1352103674030432257?ref_src=twsrc%5Etfw"&gt;January 21, 2021&lt;/a&gt;
&lt;/blockquote&gt;  

&lt;p&gt;In that spirit, I’ve made some progress and we are now collecting some data… The bad news: I had to throw away a lot of concepts and performance is roughly 700x worse than without our instrumentation. Ugh.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-did-i-get-here"&gt;
  &lt;/a&gt;
  How did I get Here?
&lt;/h2&gt;

&lt;p&gt;Last week I was still modeling the objects stored locally when debugging the remote VM. As you may recall, the debug API needs to copy objects locally so we can later on analyze them. We can’t leave this in the target VM as the data will get lost as the VM continues.&lt;/p&gt;

&lt;p&gt;I created a data model and implemented a debugger of sorts that effectively automatically debugs the application and stores all the data. Unfortunately, this isn’t as simple as one would hope.&lt;/p&gt;

&lt;p&gt;Initially, I thought I’d use the step over API to review individual lines. This includes some problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I don’t know what a line contains without looking at the source/bytecode and I don’t want to get into that complexity&lt;/li&gt;
&lt;li&gt;I can’t have two instances of a step over monitor at the same time. This is something I’ll need for nested method calls, threads, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So using the approach of stepping over code isn’t practical for this tool…&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#method-enterexit"&gt;
  &lt;/a&gt;
  Method Enter/Exit
&lt;/h3&gt;

&lt;p&gt;Luckily, pretty much any debugging API supports setting a method enter/exit event. This lets us monitor all the important points and log all the relevant information. Perfect… Almost…&lt;/p&gt;

&lt;p&gt;Here’s the problem, say we have code like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;myMethod&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;otherObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;otherMethod&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I’ll get 4 events for this sequence:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Method enter to myMethod
Method enter to otherMethod
Method exit on otherMethod
Method exit on myMethod
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So far, so good. But here’s the thing. I need to log the invocation of &lt;code&gt;otherMethod&lt;/code&gt; inside &lt;code&gt;myMethod&lt;/code&gt; so I can mock that later on. &lt;/p&gt;

&lt;p&gt;How would I do that?&lt;/p&gt;

&lt;p&gt;We need to analyze the data and see the data related to &lt;code&gt;myMethod&lt;/code&gt;’s call hierarchy. &lt;/p&gt;

&lt;p&gt;The solution is to somehow know that the enter event and the exit events are related. Initially, I tried to create the exit event dynamically and restrict it to a specific object instance. But that fails with recursion.&lt;/p&gt;

&lt;p&gt;I’ve tried several approaches. I now have one that works, but it isn’t ideal…&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-current-approach"&gt;
  &lt;/a&gt;
  The Current Approach
&lt;/h3&gt;

&lt;p&gt;I create a uniquely repeatable string when method entry occurs. It’s built with roughly this formula:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;threadId + object instance id (if not static) + frame count + callstack
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a relatively long string, but it’s unique. We place an object in the map with this as a key when entering a method. Then, when exiting the method, we find the object using an identical key. &lt;/p&gt;

&lt;p&gt;We can now connect the method entry/exit and as a result log all the data we need. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h3&gt;

&lt;p&gt;Unfortunately, that isn’t enough. &lt;code&gt;700x&lt;/code&gt; is way above a reasonable &lt;code&gt;10x&lt;/code&gt; or bearable &lt;code&gt;20x&lt;/code&gt; reduction in performance for a debugging environment. Normally we need to stay away from premature optimizations, but if there’s a conceptual flaw in the architecture, we need to understand it. &lt;code&gt;700x&lt;/code&gt; isn’t something we can realistically work with.&lt;/p&gt;

&lt;p&gt;So my next focus is to get the current code in shape for a pull request and then move on to understand the performance implications and what exactly causes this overhead.&lt;/p&gt;

&lt;p&gt;I have a lot of theories on the subject, but experience taught me to ignore them. A lot of times, the things we think are “expensive” turn out to be a tiny bump. The things we discounted end up being the big penalty. A profiler will tell us where time is wasted and I can evaluate based on facts. Right now I don’t want to look. If I do, I won’t be able to stop and it’s important to stop, synchronize with the trunk and move iteratively.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tomorrow"&gt;
  &lt;/a&gt;
  Tomorrow
&lt;/h2&gt;

&lt;p&gt;This has been a short post since I’m still pretty busy getting the PR out and bringing the tests up to speed. Once it’s done, I hope to get to the profiling session.&lt;br&gt;
At the current rate, I think my initial goal of having a tool that can generate tests for spring boot might be high for this week. I’ll lower the expectations to debugging a hello world application and generating a simple test case. After everything I’ve been through with this API, it seems like a pretty ambitious goal too.&lt;/p&gt;

&lt;p&gt;If you want to keep up with the latest updates on this series and the many other things I work on then &lt;a href="https://twitter.com/debugagent"&gt;follow me on twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>startup</category>
      <category>programming</category>
      <category>architecture</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How to Root LG Stylo 2 Device With PC?</title>
      <author>Safe Box Guide</author>
      <pubDate>Mon, 27 Dec 2021 10:34:29 +0000</pubDate>
      <link>https://dev.to/box_guide/how-to-root-lg-stylo-2-device-with-pc-1eef</link>
      <guid>https://dev.to/box_guide/how-to-root-lg-stylo-2-device-with-pc-1eef</guid>
      <description>&lt;h2&gt;&lt;span&gt;Guide To Root LG Stylo 2 Device&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;&lt;span&gt;As you know, before installing recovery, you need to root your device. You don't need any PC/laptop to root the LG Stylo 2 device. Just follow our steps to root LG Stylo 2 without a PC.&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;Vital Steps&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;&lt;span&gt;These steps are the same for installing recovery and rooting. &lt;/span&gt; &lt;span&gt;You need to enable the developer option and also Unlock OEM unlock. Now you're good to go.&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;Steps To Root LG Stylo 2 Without PC&lt;/span&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;span&gt;First, Download the &lt;/span&gt;&lt;span&gt;&lt;a href="https://twrpupdate.com/download-latest-magisk-zip/"&gt;latest magisk zip&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Switch off your LG Stylo 2 Device and boot into the recovery mode.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Now Press and hold the &lt;span&gt;volume up + Power button&lt;/span&gt;, and don't leave until you see the boot logo. And always note down, don't release the volume up buttons until the TWRP mode open in the device.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Next, Tap on install and select the downloaded magisk zip file.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Now your device screen will look like this below screenshot.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span&gt;As you'll see, the button on your screen, i.e., "&lt;span&gt;Swipe to confirm flash&lt;/span&gt;," Right! Just Swipe up, and you're done. Congrats, you have successfully Root your LG Stylo 2 device.&lt;/span&gt; &lt;span&gt;You clear the first barrier to install recovery. &lt;/span&gt; Hope you enjoy this article.&lt;/p&gt;

</description>
      <category>android</category>
      <category>root</category>
    </item>
    <item>
      <title>DevOps Myths! Are these true?
</title>
      <author>aashiya123</author>
      <pubDate>Mon, 27 Dec 2021 09:56:50 +0000</pubDate>
      <link>https://dev.to/aashiya123/devops-myths-are-these-true-4bjl</link>
      <guid>https://dev.to/aashiya123/devops-myths-are-these-true-4bjl</guid>
      <description>&lt;p&gt;Irrespective of many DevOps myths around the market, it is still deployed to achieve effective decision making. DevOps definition may vary from company to company, thus results in a different way of implementation. DevOps tends to improve the speed and quality of the software delivery process with agile technology, but it may not work in the same way. DevOps results are significant when it is appropriately implemented and can improve the working within the organization. &lt;/p&gt;

&lt;p&gt;But before we implement it, we need to understand what it means to the organization and how we want it to impact our work. So we have to consider and understand the myths that are revolving around the market. We have discussed a few of them in detail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Myth 1- DevOps is a replacement for Agile.&lt;/strong&gt;&lt;br&gt;
It is not entirely true that DevOps is a replacement, but it is more a successor to Agile that has overcome some of the hindrances using Agile. With time, Agile has been evolved and grown with some of the challenges, which later on optimized with DevOps. Agile lacks communications among different team members working on various project stages resolved by DevOps and saves the team morale without any blame game. Unlike Agile, a DevOps service engineer will perform activities from developing to deploying code into production.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Myth 2- DevOps implementation may vary from project to project&lt;/strong&gt;&lt;br&gt;
Though every project has different requirements and demands from the coding, testing, and deployment perspective, so DevOps practice must be flexible so that every team can adapt accordingly. If you have the proper understanding of the DevOps procedure, only you will be able to implement it efficiently based on different project needs. But the working process will be the same if you are implementing DevOps as the procedure are standard.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Myth 3- DevOps deals with automated tools&lt;/strong&gt;&lt;br&gt;
DevOps is an approach that provides you with a different way to deploy and manage your applications and project. DevOps comes with many practices like collaboration, CI/CD, and continuous testing, which need to be understood for implementation. Well, the DevOps procedure can be implemented using various tools like JIRA, Git Hub, Chef, Puppet, and many more. But you will be able to perform the DevOps process efficiently when you know how to leverage and optimize these tools. So, DevOps is all about methodology and standard procedures that need to be followed irrespective of the provided toolset.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Myth 4- Error rates tend to raise using DevOps&lt;/strong&gt;&lt;br&gt;
Well, DevOps is an approach where you follow procedures to get immediate feedback about your application code. This will intend to discover more errors than before to make the application completely error-free. This will, in turn, log several mistakes than before, which is obvious. Many organizations feel using DevOps raising the level of accounted errors without even realizing that the mistakes have always been there. Still, with the DevOps approach, errors are now coming up to the surface more clearly. In this way, you will get the learning and a way to remove all possible errors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Myth 5- Automation will overcome all hindrances.&lt;/strong&gt;&lt;br&gt;
DevOps offers you benefits like automating the deployment process, but it will not completely solve all the problems. Automating the continuous integration and deployment process will be efficient to some extent as it is applicable for one or two stages of the software delivery process. DevOps process requires team collaboration; otherwise, automating the process at one stage will move all the bottlenecks to another stage. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Myth 6- DevOps means NoOps&lt;/strong&gt;&lt;br&gt;
It is a myth that DevOps has nothing to do with IT operations. It is because mostly DevOps is more dedicated to deploy codes and maintain service levels. But, we cannot say that the development part is overpowering IT operational services. If we want to leverage DevOps completely to get instant feedback, speed, and quality, IT operations have a significant role in implementing it. There is also a great dependency of DevOps on IT services to get the work done in lead time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Myth 7- DevOps is not suitable for large and complex systems.&lt;/strong&gt;&lt;br&gt;
Working with a complex system requires team collaboration on a large scale to get the work done efficiently. DevOps comes with the benefit of collaborating, integrating, and integration features, making it suitable for large projects. However, the complex system has various demands of software and hardware pertaining to different delivery cycles, which is also handled by DevOps with excellent coordination.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>java</category>
      <category>cloud</category>
      <category>javascript</category>
    </item>
    <item>
      <title>5 Reasons Why You Should Prefer PHP for Website Development</title>
      <author>Freita Browning</author>
      <pubDate>Mon, 27 Dec 2021 09:53:19 +0000</pubDate>
      <link>https://dev.to/freita_browning/5-reasons-why-you-should-prefer-php-for-website-development-4c46</link>
      <guid>https://dev.to/freita_browning/5-reasons-why-you-should-prefer-php-for-website-development-4c46</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bsQmSzo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8os3jstthpbks3eq1wt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bsQmSzo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8os3jstthpbks3eq1wt.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
PHP has emerged as a leading technology for creating dynamic and static websites and web applications. And, there are lots of websites or web app already using PHP today. PHP is a popular server-side scripting language offering several benefits in website development. If you want to develop a complete website or web application for your business, you can choose PHP for creating the desired solution. Indeed, PHP provides several benefits over other web development technologies to develop well-customized solutions. There are many reasons you should choose PHP web development to create your website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-are-the-five-reasons-for-choosing-php-for-web-development"&gt;
  &lt;/a&gt;
  Here are the five reasons for choosing PHP for web development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Open-source and free&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;PHP, which is an acronym for Hypertext Preprocessor, is a free and open-source technology. Since it is a free technology, everyone can use this tech without incurring any cost or having a paid license. Like any other open-source technology, PHP has a cost-benefit for any business to create various web solutions. You can choose a reliable PHP development service to create the desired web solutions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Support multiple platforms&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;PHP is a cross-platform technology that means it is supported on different types of operating systems. It is fully compatible with major operating systems and many servers. Hence, PHP scripts can run on most major servers, making it easy to develop web applications on various servers. So, PHP's multi-server and multi-platform compatibility make it a preferred choice for web development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Flexible and dynamic&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;PHP is a flexible technology because of its open-source nature. It allows web developers to build customized solutions. PHP-based websites and web applications are also secure because it offers numerous security features such as fool-proof encryption. Further, PHP-based web apps can load automatically and don’t require mutual intervention. It provides greater flexibility than other server-side languages, along with scalability and encryption that make PHP a robust option for creating top-notch web solutions. You can &lt;a href="https://www.csschopper.com/hire-dedicated-php-developer-professional.shtml"&gt;hire the best PHP developer&lt;/a&gt; to create unique web solutions as per your requirements leveraging the flexibility of the PHP language. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. PHP frameworks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;PHP frameworks are conducive to developing top-notch solutions with expedited workflows and simplified coding. There are lots of PHP frameworks like Laravel, CodeIgniter, CakePHP, Zend, etc., that enable developers to create PHP solutions efficiently. These frameworks offer extensive functions and libraries, various development architecture support such as MVVM and MVC. PHP frameworks help in deep-down PHP coding and developers' additional libraries and tools to create custom web solutions. All in all, these frameworks are powerful tools for creating efficient and out-of-box solutions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. PHP powers CMSs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another solid reason why PHP web development is a preferred CMS (Content Management System). Drupal, WordPress, Joomla, Magento, and many more CMSs work on PHP that means they are written in PHP. PHP is your entry ticket if you want to develop a custom website with any of these CMSs. You need to &lt;a href="https://www.csschopper.com/php-web-development.shtml"&gt;choose a reliable PHP website development company&lt;/a&gt; for creating the desired website using any CMS. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-note"&gt;
  &lt;/a&gt;
  Final note
&lt;/h2&gt;

&lt;p&gt;Websites have become a crucial factor for every business because they help them reach out to customers easily. However, PHP offers many advantages and features for website development. There are a lot of things like core PHP, CMSs, and PHP frameworks that you can utilize to create a perfect website for your business. You can use these frameworks and platforms to build customized web solutions according to your business needs. However, selecting the right PHP Web Development Company can help you create quality solutions.&lt;/p&gt;

</description>
      <category>php</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>ES6 way of coding Javascript!</title>
      <author>Ritesh Kumar</author>
      <pubDate>Mon, 27 Dec 2021 09:40:46 +0000</pubDate>
      <link>https://dev.to/wordssaysalot/es6-way-of-coding-javascript-2kl2</link>
      <guid>https://dev.to/wordssaysalot/es6-way-of-coding-javascript-2kl2</guid>
      <description>&lt;p&gt;JavaScript is an incredibly fast and efficient programming language to use for a variety of purposes. Today Every type of software uses JavaScript, including Web apps, 3D games, robots, IoT devices, etc.&lt;br&gt;&lt;br&gt;
Back in 2007, Jeff Atwood (founder of StackOverflow), made a case that JavaScript would become a bigger part of web development. Atwood coined the term  &lt;code&gt;Atwood’s Law&lt;/code&gt;, which states:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Any application that can be written in JavaScript, will eventually be written in JavaScript.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It’s now ten years later, and Atwood’s statement is truer than ever. JavaScript is continuing to gain more and more adoption. The “next generation” of Javascript is something known as ES6. ES6 is so far the best and biggest update javascript has ever received. It streamlined the javascript development and almost killed jQuery's career. ES6 mainly allows you to write less code and do more.&lt;br&gt;
In this post, I'll go over the six major differences between ES6 and ES5. Let’s take a look.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#arrow-function-write-less-do-more"&gt;
  &lt;/a&gt;
  Arrow function: write less do more
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ES5 WAY&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function add(a,b){ 
    return a+b
}
console.log(add(2,3))
//OUTPUT: 5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;ES6 WAY&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const add (a,b)=&amp;gt; a+b
console.log(add(2,3))
//OUTPUT: 5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#use-const-if-you-dont-want-to-reassign-the-element-variable-by-mistake"&gt;
  &lt;/a&gt;
  Use const if you don't want to reassign the 'element variable by mistake.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ES5 WAY&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var element = document.getElementById('myForm')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;ES6 WAY&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const element= document.getElementById('myForm')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#destructuring-write-less-do-more"&gt;
  &lt;/a&gt;
  De-structuring: write less do more!
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ES5 WAY&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var user = {
    name "Ritesh Kumar", 
    username: "@0xRitesh"
}
const name = user.name
const username user.username
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;ES6 WAY&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var user = {
    name "Ritesh Kumar".
    username: "@0xRitesh"
}
const {name,username} = user
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#template-literals"&gt;
  &lt;/a&gt;
  Template Literals
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ES5 WAY&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getUsertMessage(name,country){
    console.log('Hi, my name is '+ name+ ',and I am from '+ country)
}
logUserMessage('Ritesh, 'India')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;ES6 WAY&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function logUserMessage(name,country){
    console.log('Hi, my name is ${name}, and I am from ${country}')
}
logUserMessage('Ritesh', 'India')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#improve-object-literals"&gt;
  &lt;/a&gt;
  improve Object Literals
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ES5 WAY&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getUserObj ( name, age, address){
    return {
        name: name,
        age: age,
        address: address
        }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;ES6 WAY&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getUserObj ( name, age, address){
    return {
        name,
        age,
        address
        }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#default-parameters"&gt;
  &lt;/a&gt;
  Default Parameters
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ES5 WAY&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function ES5Fun( username, platform){
    username, = username, || '@wordssaysalot';
    platform = platform || 'Hashnode';
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;ES6 WAY&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function ES6Fun( username = '@wordssaysalot' , platform= 'Hashnode') {
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Thanks for reading the article! I hope you guys found this article useful, and I hope I was able to introduce you to some of the ES6 features. &lt;/p&gt;




</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>I finally learnt some Rust</title>
      <author>Liftoff Studios</author>
      <pubDate>Mon, 27 Dec 2021 09:27:47 +0000</pubDate>
      <link>https://dev.to/liftoffstudios/i-finally-learnt-some-rust-1op2</link>
      <guid>https://dev.to/liftoffstudios/i-finally-learnt-some-rust-1op2</guid>
      <description>&lt;p&gt;Yay.... I can now make proper functional programs in Rust. &lt;/p&gt;

&lt;p&gt;I found Rust to be a joy to work with... Cargo and the way the language is structured was amazing. Much more challenging and interesting than learning Go for that matter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-your-opinion-on-rust"&gt;
  &lt;/a&gt;
  What's your opinion on Rust
&lt;/h2&gt;

&lt;p&gt;I feel it is way more better and productive once you get the hang of it 😃&lt;/p&gt;

&lt;p&gt;Comment your opinion below too&lt;/p&gt;

</description>
      <category>rust</category>
      <category>beginners</category>
      <category>programming</category>
      <category>career</category>
    </item>
    <item>
      <title>Getting started with Docker &amp; Flask.</title>
      <author>Phylis Jepchumba</author>
      <pubDate>Mon, 27 Dec 2021 09:15:45 +0000</pubDate>
      <link>https://dev.to/phylis/getting-started-with-docker-flask-262p</link>
      <guid>https://dev.to/phylis/getting-started-with-docker-flask-262p</guid>
      <description>&lt;h6&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h6&gt;

&lt;p&gt;Docker makes it easier, simpler and safer to build, deploy and manage applications in a docker container.&lt;br&gt;
This article will help you get a detailed understanding of;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is docker?&lt;/li&gt;
&lt;li&gt;Why use Docker?&lt;/li&gt;
&lt;li&gt;What is a docker image?&lt;/li&gt;
&lt;li&gt;What is a docker container?&lt;/li&gt;
&lt;li&gt;Dockerizing a flask application&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;
  &lt;a href="#what-is-docker"&gt;
  &lt;/a&gt;
  What is Docker?
&lt;/h6&gt;

&lt;p&gt;Docker is an open source containerization platform for developing, shipping and running applications.&lt;/p&gt;

&lt;p&gt;Docker packages software into standardized units called containers. Containers have everything the software needs to run including libraries, system tools, code, and runtime.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/get-started/overview/"&gt;More about what docker is&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#why-use-docker"&gt;
  &lt;/a&gt;
  Why use Docker?
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;Responsive deployment and scaling.&lt;/li&gt;
&lt;li&gt;Faster And Consistent Delivery Of Applications.&lt;/li&gt;
&lt;li&gt;Automated container creation- with docker, one can automatically build a container based on application source code.&lt;/li&gt;
&lt;li&gt;Container reuse- just like templates for building new containers, existing containers can be used as base images. &lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;
  &lt;a href="#docker-image"&gt;
  &lt;/a&gt;
  Docker image.
&lt;/h6&gt;

&lt;p&gt;Image is a read-only template with instruction for creating containers.&lt;br&gt;
Docker images can be considered as the blueprint of the entire application environment that you create. &lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#docker-container"&gt;
  &lt;/a&gt;
  Docker container.
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;A Docker container is a virtualized run-time environment where users can isolate applications from the underlying system.&lt;/li&gt;
&lt;li&gt;Containers are compact, portable units in which you can start up an application quickly and easily.&lt;/li&gt;
&lt;li&gt;Docker containers contains all the essential things required to run an application like code, runtime, system tools, system libraries, and settings. &lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;
  &lt;a href="#dockerizing-a-flask-application"&gt;
  &lt;/a&gt;
  Dockerizing a flask application
&lt;/h6&gt;
&lt;h6&gt;
  &lt;a href="#file-structure-and-setup"&gt;
  &lt;/a&gt;
  File structure and setup
&lt;/h6&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;\-- dockerExample
    |-- app.py
    |-- Dockerfile
    |-- requirements.txt
   \-- templates
        |-- index.html

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;First I created a simple Flask application and added the following code to app.py.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;render_template&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;home&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'index.html'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://dev.to/phylis/my-first-flask-application-2mm"&gt;Check how to create a simple flask application&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add the following code to index.html&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Getting started with Docker&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is my Dockerfile&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to dockerize the flask application by creating a &lt;strong&gt;Dockerfile&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Dockerfile&lt;/strong&gt;is a text document that contains all the commands a user could call on the command line to assemble an image.&lt;/p&gt;

&lt;p&gt;Add the following code to docker;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; python:3.9.6&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . /doc&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; ./requirements.txt /doc/requirements.txt&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /doc&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 5000:5000&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["python","app.py"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;FROM&lt;/strong&gt; keyword is used to specify the base image to be used. We'll be making use of a python base image.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;WORKDIR&lt;/strong&gt; defines the main directory of operations.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;EXPOSE&lt;/strong&gt; informs Docker that the container listens on the specified network ports at runtime. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;RUN&lt;/strong&gt;  is used to install the project’s dependencies.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CMD&lt;/strong&gt; provide defaults for an executing container.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/engine/reference/builder/"&gt;Read more&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can now build our image with the &lt;strong&gt;docker build&lt;/strong&gt; command as shown below;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker image build -t docker_example .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oNPxYvVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/diz8ysgh6lusn2mew4bm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oNPxYvVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/diz8ysgh6lusn2mew4bm.png" alt="Screenshot (119)" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the build process is done, we can run the application with the docker run command as shown below;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run -p 5000:5000 docker_example
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_FIKY0By--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ytw5p8frcbtjcxspnp4c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_FIKY0By--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ytw5p8frcbtjcxspnp4c.png" alt="Screenshot (122)" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>docker</category>
      <category>100daysofcode</category>
      <category>webdev</category>
    </item>
    <item>
      <title>🚀 Angular 13 Starter with ESLint, Material, Transloco, Jest, TestCafe, Docker &amp; Prettier 🚀</title>
      <author>wlucha</author>
      <pubDate>Mon, 27 Dec 2021 09:15:25 +0000</pubDate>
      <link>https://dev.to/wlucha/angular-13-starter-with-eslint-material-transloco-jest-testcafe-docker-prettier-56di</link>
      <guid>https://dev.to/wlucha/angular-13-starter-with-eslint-material-transloco-jest-testcafe-docker-prettier-56di</guid>
      <description>&lt;p&gt;Angular 13 Starter with Material, Transloco, Jest, Compodoc, Docker Support, ESLint &amp;amp; Prettier&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can find the project here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/wlucha/angular-starter"&gt;https://github.com/wlucha/angular-starter&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;p&gt;✅ &lt;a href="https://angular.io/"&gt;Angular 13&lt;/a&gt;&lt;br&gt;&lt;br&gt;
✅ &lt;a href="https://material.angular.io/"&gt;Angular Material&lt;/a&gt;&lt;br&gt;&lt;br&gt;
✅ Unit Testing with &lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt;&lt;br&gt;&lt;br&gt;
✅ End-to-End Testing with &lt;a href="https://testcafe.io/"&gt;TestCafé&lt;/a&gt;&lt;br&gt;&lt;br&gt;
✅ Internationalization with &lt;a href="https://github.com/ngneat/transloco"&gt;Transloco&lt;/a&gt;&lt;br&gt;&lt;br&gt;
✅ Auto documentation with &lt;a href="https://compodoc.app/"&gt;Compodoc&lt;/a&gt;&lt;br&gt;&lt;br&gt;
✅ Analyse your project with &lt;a href="https://www.npmjs.com/package/webpack-bundle-analyzer"&gt;webpack-bundle-analyzer&lt;/a&gt;&lt;br&gt;&lt;br&gt;
✅ &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;&lt;br&gt;&lt;br&gt;
✅ &lt;a href="https://eslint.org/"&gt;ESLint&lt;/a&gt;&lt;br&gt;&lt;br&gt;
✅ &lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt;&lt;br&gt;&lt;br&gt;
✅ &lt;a href="https://github.com/conventional-changelog/commitlint"&gt;Commit Linting&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://stackblitz.com/github/wlucha/angular-starter"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--98Y60Jnj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/7531596/83507657-2424e180-a4c9-11ea-8e4f-b3f8e7d6b4c5.png" alt="StackBlitz Demo" width="146" height="37"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-development"&gt;
  &lt;/a&gt;
  Install / Development
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Clone the project&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/wlucha/angular-starter
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;angular-starter

&lt;span class="c"&gt;# Install dependencies&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="c"&gt;# Start server&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm run start

&lt;span class="c"&gt;# Open in browser: http://localhost:4200&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#docker-deployment"&gt;
  &lt;/a&gt;
  Docker Deployment
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Build Docker image&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker build &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; angular-starter

&lt;span class="c"&gt;# Run Docker Container&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;-p&lt;/span&gt; 3000:80 angular-starter
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#docker-hub"&gt;
  &lt;/a&gt;
  Docker Hub
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://hub.docker.com/r/wlucha/angular-starter"&gt;https://hub.docker.com/r/wlucha/angular-starter&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#commands"&gt;
  &lt;/a&gt;
  Commands
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;npm run start&lt;/code&gt; - start the app&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run lint&lt;/code&gt; - lint the project&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run test&lt;/code&gt; - run unit tests&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run build&lt;/code&gt; - build the project&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run build:prod&lt;/code&gt; - build the project in production mode&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run build:prod:stats&lt;/code&gt; - build the project in product mode with stats&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run analyse&lt;/code&gt; - analyse bundle with &lt;a href="https://github.com/webpack-contrib/webpack-bundle-analyzer"&gt;webpack-bundle-analyzer&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run compodoc&lt;/code&gt; - generate &lt;a href="https://github.com/compodoc/compodoc"&gt;compodoc&lt;/a&gt; documentation&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run changelog&lt;/code&gt; - generate changelog&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run prettier&lt;/code&gt; - format the whole project&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>Introduction to the AWS CLI</title>
      <author>Donald Sebastian Leung</author>
      <pubDate>Mon, 27 Dec 2021 09:14:38 +0000</pubDate>
      <link>https://dev.to/donaldsebleung/introduction-to-the-aws-cli-e6o</link>
      <guid>https://dev.to/donaldsebleung/introduction-to-the-aws-cli-e6o</guid>
      <description>&lt;p&gt;This post will walk you through setting up AWS CLI, an IAM administrator account for use with AWS CLI, and creating an AWS EC2 Ubuntu instance plus associated resources from the CLI.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;It is assumed that you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Possess a working familiarity with the Linux command line and able to perform troubleshooting tasks&lt;/li&gt;
&lt;li&gt;Have an AWS account&lt;/li&gt;
&lt;li&gt;Know the basics of AWS services. At the very least, you should be able to provision an AWS EC2 instance through the web interface and connect to it&lt;/li&gt;
&lt;li&gt;Are aware that following this hands-on session may incur monetary costs and you are solely responsible for any such costs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Introductory knowledge of cloud computing and the underlying technology (hypervisors, hardware virtualization, OS virtualization) would be beneficial.&lt;/p&gt;

&lt;p&gt;With the prerequisites addressed, let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preparation"&gt;
  &lt;/a&gt;
  Preparation
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Reference: &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-prereqs.html"&gt;Prerequisites to use the AWS CLI version 2&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Log in to your AWS account. To use the AWS CLI securely, we need to set up an IAM(1) administrator account and associated access key(s) which will be used for authenticating against AWS and performing tasks through the CLI. Technically, you could set up access key(s) for your root account(2) and configure AWS CLI to use them, but AWS strongly recommends against it, for reasons similar to why you shouldn't log in to a Linux system directly as root and perform everyday tasks that way.&lt;/p&gt;

&lt;p&gt;(1) &lt;em&gt;Identity Access Management&lt;/em&gt;&lt;br&gt;
(2) &lt;em&gt;This is the account with an associated email address and password that you likely used to log in to the AWS web console&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Visit the IAM console at &lt;a href="https://console.aws.amazon.com/iam/"&gt;https://console.aws.amazon.com/iam/&lt;/a&gt; which should bring you to the dashboard. To the left of the dashboard under "Access management", click "Users":&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5ZyR1ouH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0h1fub5la2yjgubv1yl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ZyR1ouH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0h1fub5la2yjgubv1yl.png" alt="IAM users" width="271" height="208"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This brings you to a page where you can view and manage IAM users. Near the top right hand corner is an "Add users" button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HeZ8bfr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1owyvn4669rrhuzsj6p8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HeZ8bfr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1owyvn4669rrhuzsj6p8.png" alt="Add IAM user" width="880" height="215"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you should see a form with two sections, "Set user details" and "Select AWS access type" (in that order). Under the first section, fill in "Administrator" as the username:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cLqm91iV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zoyelhv09q5xb6tnjk4t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cLqm91iV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zoyelhv09q5xb6tnjk4t.png" alt="IAM administrator" width="880" height="146"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the next section, make sure "Access key - Programmatic access" is checked. Depending on your preferences, you may also wish to enable password access for logging in (as the IAM administrator) through the web console:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MjvURLLj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q9avsgwi8xlqfjfqtqt1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MjvURLLj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q9avsgwi8xlqfjfqtqt1.png" alt="Enable programmatic access" width="762" height="75"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now click "Next: Permissions" near the bottom right hand corner:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QNY0neqF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofhpz35ueehyu7aqa4zw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QNY0neqF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofhpz35ueehyu7aqa4zw.png" alt="Next: Permissions" width="155" height="39"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This brings you to a page where you can "Set permissions" and "Set permissions boundary". The latter can be used to fine-tune the permissions of the IAM user which we will not cover here. For the former, ensure "Add user to group" is selected:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--skYa0p2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x813zzv3zun8wlydg4yj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--skYa0p2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x813zzv3zun8wlydg4yj.png" alt="Add user to group" width="726" height="115"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have not dealt with IAM before, you should have no IAM groups. Click "Create group" under "Get started with groups":&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mL8xaPO2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqh33hmf48r6wbl11mij.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mL8xaPO2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqh33hmf48r6wbl11mij.png" alt="Create group" width="880" height="145"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now name your group "Administrators":&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_UcqZpV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dn15diftu5u7hbzemlgg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_UcqZpV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dn15diftu5u7hbzemlgg.png" alt="Group name: Administrators" width="510" height="42"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And ensure the "AdministratorAccess" policy is checked:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YPlN-RrL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0zwl9h4wmf45khi8fl78.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YPlN-RrL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0zwl9h4wmf45khi8fl78.png" alt="AdministratorAccess" width="880" height="107"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click "Create group":&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m02eIFgN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hopwpo7no28qlvv1x63h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m02eIFgN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hopwpo7no28qlvv1x63h.png" alt="Create group" width="126" height="39"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Back in "Add user to group", ensure your newly created group is checked:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AAyzeVIa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oai2r4zuhm1qvkdr7nkf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AAyzeVIa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oai2r4zuhm1qvkdr7nkf.png" alt="Administrators" width="880" height="209"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you can't see your created group, you may need to click "Refresh" until it appears. Now click "Next: Tags":&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d3MHXsU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cws6488ty0fiy1r6yw0r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d3MHXsU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cws6488ty0fiy1r6yw0r.png" alt="Next: Tags" width="109" height="41"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following page allows you to associate &lt;em&gt;tags&lt;/em&gt; (key-value pairs) with your IAM user. Since the IAM administrator is a general-purpose account that can perform &lt;em&gt;almost&lt;/em&gt; all AWS tasks, there probably isn't much point associating it with tags, though a full discussion of tagging AWS resources and their uses can be found in &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html"&gt;https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;Click "Next: Review":&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nDvW3OMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pymvhs48maeg244hr4qr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nDvW3OMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pymvhs48maeg244hr4qr.png" alt="Next: Review" width="126" height="40"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Confirm that everything looks fine, then click "Create user" to confirm the action:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aWKtqX0J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9w4za2qrqlt17oeuziz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aWKtqX0J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9w4za2qrqlt17oeuziz.png" alt="Create user" width="117" height="43"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the IAM administrator is created. Notice that you have not yet returned to the dashboard. Instead, you are shown the access key ID and secret access key of the IAM administrator, and &lt;strong&gt;this is the only time they will be shown&lt;/strong&gt;. Therefore, &lt;strong&gt;it is imperative that you take note of these values and store them in a safe place&lt;/strong&gt;, such as by downloading the associated CSV file:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--se26RCPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqnp5kjvfu53ukgnzdhi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--se26RCPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqnp5kjvfu53ukgnzdhi.png" alt="Download access key ID and secret access key as CSV file" width="880" height="215"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now click "Close":&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xIvf_2EE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9shc5e6gjh296phlq18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xIvf_2EE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9shc5e6gjh296phlq18.png" alt="Close" width="76" height="40"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations! You have successfully created an IAM administrator account with access key ID and secret access key which can be used with AWS CLI in a later section.&lt;/p&gt;

&lt;p&gt;At this point, if you weren't simply following the instructions blindly, you might be wondering what security benefits using an IAM administrator provides over using the root account directly, if the former has (almost) all of the permissions of the latter anyway. In fact, if an attacker gains access to your IAM administrator account, they can perform &lt;em&gt;almost&lt;/em&gt; any action on your account, except for a few privileged actions restricted to the root account as documented in &lt;a href="https://docs.aws.amazon.com/accounts/latest/reference/root-user-tasks.html"&gt;https://docs.aws.amazon.com/accounts/latest/reference/root-user-tasks.html&lt;/a&gt; , such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Changing your account settings&lt;/li&gt;
&lt;li&gt;Allowing IAM users to view your billing details&lt;/li&gt;
&lt;li&gt;Closing your AWS account&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So it's &lt;em&gt;nearly&lt;/em&gt; as bad as having your root account compromised, but not quite. Either way, you should take great care not to leak your IAM administrator credentials, and definitely not your root account credentials! If it happens anyway, you should delete and recreate your IAM administrator account ASAP, with a new set of credentials.&lt;/p&gt;

&lt;p&gt;Of course, if you know precisely what permissions are required for accessing a particular AWS service through the AWS CLI, you could (should) create a new IAM user with just those permissions to minimize the potential impact of leaking your IAM credentials to an attacker, but that is beyond the scope of this article.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installing-aws-cli"&gt;
  &lt;/a&gt;
  Installing AWS CLI
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Reference: &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html"&gt;Installing or updating the latest version of the AWS CLI&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At the time of writing (December 2021), the latest version of AWS CLI is 2.x.x, though AWS CLI 1.x.x is still supported, with the former containing breaking changes that are not backward compatible with the latter. Here, we will install the newer version 2.x.x, and subsequent mentions of AWS CLI should be taken to imply 2.x.x unless otherwise noted.&lt;/p&gt;

&lt;p&gt;AWS CLI is available on Linux, macOS and Windows. We'll assume here that you are installing AWS CLI onto a Linux environment:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Linux: just follow the instructions directly in the terminal&lt;/li&gt;
&lt;li&gt;macOS: Spin up a Linux VM using your hypervisor of choice, e.g. VirtualBox, VMware Fusion or Parallels, and follow the instructions in the VM&lt;/li&gt;
&lt;li&gt;Windows: use WSL2, or follow a similar approach as on macOS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you plan to follow this article in another environment, you may have to adapt the instructions accordingly.&lt;/p&gt;

&lt;p&gt;On Linux, you can install AWS CLI by following the instructions on the official website, or on most mainstream distributions through the system package manager. However, depending on the nature of your distribution, the version of AWS CLI provided by your system package manager may be outdated, possibly up to a full major version behind. For example, running &lt;code&gt;apt-cache show awscli | grep -i version&lt;/code&gt; on Ubuntu 20.04 LTS gives:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Version: 1.18.69-1ubuntu0.20.04.1
Version: 1.17.14-1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Therefore, in order to access the latest features of AWS CLI, it is highly recommended to install directly from the official website.&lt;/p&gt;

&lt;p&gt;The installation is a simple 3-step process: fetching the zip archive from upstream, unpacking it, and executing the install script as root:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl &lt;span class="s2"&gt;"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="s2"&gt;"awscliv2.zip"&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;unzip awscliv2.zip
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo&lt;/span&gt; ./aws/install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your machine uses ARM architecture, simply replace &lt;code&gt;x86_64&lt;/code&gt; in the first command with &lt;code&gt;aarch64&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Updating AWS CLI is equally simple: follow the instructions above as with first install, but pass the &lt;code&gt;--update&lt;/code&gt; flag to the last command, as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo&lt;/span&gt; ./aws/install &lt;span class="nt"&gt;--update&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Unfortunately, there is no uninstall script so if you wish to uninstall AWS CLI (assuming you did so through the official website) and know exactly what you are doing, you'll have to manually find and remove the &lt;code&gt;aws&lt;/code&gt; binary and associated resources. By default, the binary is located under &lt;code&gt;/usr/local/bin&lt;/code&gt; and resources under &lt;code&gt;/usr/local/aws-cli&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Check which version of AWS CLI is installed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws &lt;span class="nt"&gt;--version&lt;/span&gt;
aws-cli/2.4.7 Python/3.8.8 Linux/5.11.0-43-generic exe/x86_64.ubuntu.20 prompt/off
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In my case, AWS CLI v2.4.7 is installed.&lt;/p&gt;

&lt;p&gt;Print a help message (not very useful, unfortunately):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws &lt;span class="nt"&gt;--help&lt;/span&gt;
usage: aws &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;-h&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--profile&lt;/span&gt; PROFILE] &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--debug&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

optional arguments:
  &lt;span class="nt"&gt;-h&lt;/span&gt;, &lt;span class="nt"&gt;--help&lt;/span&gt;         show this &lt;span class="nb"&gt;help &lt;/span&gt;message and &lt;span class="nb"&gt;exit&lt;/span&gt;
  &lt;span class="nt"&gt;--profile&lt;/span&gt; PROFILE
  &lt;span class="nt"&gt;--debug&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To learn more about the subcommands provided by AWS CLI, refer to the online documentation: &lt;a href="https://awscli.amazonaws.com/v2/documentation/api/latest/index.html"&gt;https://awscli.amazonaws.com/v2/documentation/api/latest/index.html&lt;/a&gt; . Alternatively, as mentioned in online documentation, the proper way of obtaining useful help information directly from the AWS CLI is &lt;code&gt;aws help&lt;/code&gt; or &lt;code&gt;aws &amp;lt;command&amp;gt; help&lt;/code&gt;, which opens the top-level man page and an appropriate man page for the AWS command respectively.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuring-aws-cli-to-use-our-iam-administrator"&gt;
  &lt;/a&gt;
  Configuring AWS CLI to use our IAM administrator
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Reference: &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html"&gt;Configuration basics - AWS Command Line Interface&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The command to configure AWS CLI is (unsurprisingly) &lt;code&gt;configure&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws configure
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This prompts you to enter 4 pieces of information:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Access Key ID: this is the access key ID of your IAM administrator. You should have saved this information in a CSV file when creating your IAM user&lt;/li&gt;
&lt;li&gt;AWS Secret Access Key: this is the secret access key of your IAM administrator. Again, refer to the CSV file you downloaded&lt;/li&gt;
&lt;li&gt;Default region name: recall that AWS resources are divided into regions and availability zones. Enter the name of the region you would like to use by default, if no region is explicitly specified. For example, I live in Hong Kong so I might set it to &lt;code&gt;ap-east-1&lt;/code&gt;. You can get a list of region names through the web interface, and later through the &lt;code&gt;aws ec2 describe-regions&lt;/code&gt; command&lt;/li&gt;
&lt;li&gt;Default output format: what type of output the AWS CLI should generate by default when most commands are run. For example, setting this to &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;yaml&lt;/code&gt; causes AWS CLI to generate JSON and YAML output by default respectively which could be piped to another program or redirected to an output file for further processing. In this tutorial we will be using the AWS CLI interactively so we could set it to &lt;code&gt;table&lt;/code&gt; for human-friendly output, though you can set it to whatever value you see fit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When the command completes, the information is saved in a &lt;code&gt;default&lt;/code&gt; &lt;em&gt;profile&lt;/em&gt; that AWS CLI uses for authentication, if no profile is explicitly specified. You can think of a profile as a particular named account, though there is nothing stopping you from creating two different named profiles with the same user credentials.&lt;/p&gt;

&lt;p&gt;The information you entered is saved in two separate files, &lt;code&gt;$HOME/.aws/config&lt;/code&gt; and &lt;code&gt;$HOME/.aws/credentials&lt;/code&gt;, where the former stores non-sensitive values and the latter sensitive ones:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.aws/config
&lt;span class="o"&gt;[&lt;/span&gt;default]
region &lt;span class="o"&gt;=&lt;/span&gt; ap-east-1
output &lt;span class="o"&gt;=&lt;/span&gt; table
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.aws/credentials
&lt;span class="o"&gt;[&lt;/span&gt;default]
aws_access_key_id &lt;span class="o"&gt;=&lt;/span&gt; XXXXXXXXXXXXXXXXXXXX
aws_secret_access_key &lt;span class="o"&gt;=&lt;/span&gt; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To configure a profile other than &lt;code&gt;default&lt;/code&gt;, pass the &lt;code&gt;--profile&lt;/code&gt; flag followed by the profile name, as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws configure &lt;span class="nt"&gt;--profile&lt;/span&gt; &amp;lt;profile&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To learn more about the &lt;code&gt;configure&lt;/code&gt; command, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws configure &lt;span class="nb"&gt;help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or refer to the online documentation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#provisioning-an-aws-ec2-ubuntu-instance-with-aws-cli"&gt;
  &lt;/a&gt;
  Provisioning an AWS EC2 Ubuntu instance with AWS CLI
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Reference: &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-services-ec2.html"&gt;Using Amazon EC2 with the AWS CLI&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The command for managing EC2-related services is &lt;code&gt;ec2&lt;/code&gt;. Skim through the man page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 &lt;span class="nb"&gt;help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example, we can view a list of available regions and their associated information:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-regions
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;View the output in YAML:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-regions &lt;span class="nt"&gt;--output&lt;/span&gt; yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Get the output in JSON and redirect to an output file, for use with another program at a later date:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-regions &lt;span class="nt"&gt;--output&lt;/span&gt; json &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; regions.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;View the availability zones in the default region:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-availability-zones
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;View the availability zones in the &lt;code&gt;us-west-1&lt;/code&gt; region:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-availability-zones &lt;span class="nt"&gt;--region&lt;/span&gt; us-west-1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;View information on EC2 instances in the default region:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-instances
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;View information on security groups in the default region:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-security-groups
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;View information on key pairs in the default region:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-key-pairs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;View information on instance types available in the default region:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-instance-types
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we've taken a look at the man page and tried out some commands for viewing EC2-related information, let's move on and provision a new instance with the AWS CLI. But before we continue, I've realized that I actually find &lt;code&gt;table&lt;/code&gt; output difficult to parse and would prefer reading JSON output instead. Let's also change our default region to &lt;code&gt;us-west-1&lt;/code&gt; for performing experiments, as I have a production web server running in the &lt;code&gt;ap-east-1&lt;/code&gt; region (actually just my personal website) and want to minimize the chances of messing that up by accident.&lt;/p&gt;

&lt;p&gt;To change the settings in the default profile, we just have to run &lt;code&gt;configure&lt;/code&gt; again:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws configure
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For fields that you do not intend to change, simply leave it blank and press Enter. Here, I skip through access key ID and secret access key since they haven't changed, but enter &lt;code&gt;us-west-1&lt;/code&gt; for the default region name and &lt;code&gt;json&lt;/code&gt; for the output format when prompted.&lt;/p&gt;

&lt;p&gt;Now let's see what Ubuntu AMIs are available in our new default region. With the web interface, we can just search for the term "Ubuntu" and look at the results, and we can usually expect the first few results to contain what we are looking for. However, with the AWS CLI, if we just list all images without filtering them beforehand, it will take at least a few dozen seconds fetching all of the detailed information on all types of images (not just AMIs) and it would be infeasible to skim through the entire list to find what we are looking for. Therefore, take a look at the associated man page and I encourage you to try out various filtering options on your own:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-images &lt;span class="nb"&gt;help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After some experimentation on my own, here's what worked for me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The name of the AMI should contain "ubuntu" (with lowercase "u")&lt;/li&gt;
&lt;li&gt;The description should contain "20.04 LTS", so Ubuntu Bionic (18.04 LTS) images are not returned&lt;/li&gt;
&lt;li&gt;The image architecture should be &lt;code&gt;x86_64&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;The image type should be &lt;code&gt;machine&lt;/code&gt;, so I don't get results for other non-AMI image types such as kernel and ramdisk images&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's the command I used:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-images &lt;span class="nt"&gt;--filters&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="s2"&gt;"Name=name,Values=*ubuntu*"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="s2"&gt;"Name=description,Values=*20.04 LTS*"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="s2"&gt;"Name=architecture,Values=x86_64"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="s2"&gt;"Name=image-type,Values=machine"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here's the first result that I get:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Architecture"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"x86_64"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"CreationDate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2021-04-16T06:48:46.000Z"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ImageId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ami-000773770ac55efb2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ImageLocation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"aws-marketplace/ubuntu-minimal/images/hvm-ssd/ubuntu-focal-20.04-amd64-minimal-20210416-d5944ad4-5199-4cf3-ab4c-c2c4598f880b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ImageType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"machine"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Public"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"OwnerId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"679593333241"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"PlatformDetails"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Linux/UNIX"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"UsageOperation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"RunInstances"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ProductCodes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"ProductCodeId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cn75kij0iclp333uyrx6uqp6z"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"ProductCodeType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"marketplace"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"State"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"available"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"BlockDeviceMappings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"DeviceName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/dev/sda1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Ebs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"DeleteOnTermination"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"SnapshotId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"snap-01325cd2ee26537f0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"VolumeSize"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"VolumeType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"gp2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"Encrypted"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"DeviceName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/dev/sdb"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"VirtualName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ephemeral0"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"DeviceName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/dev/sdc"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"VirtualName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ephemeral1"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Canonical, Ubuntu Minimal, 20.04 LTS, amd64 focal image build on 2021-04-16"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"EnaSupport"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Hypervisor"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"xen"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ImageOwnerAlias"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"aws-marketplace"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ubuntu-minimal/images/hvm-ssd/ubuntu-focal-20.04-amd64-minimal-20210416-d5944ad4-5199-4cf3-ab4c-c2c4598f880b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"RootDeviceName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/dev/sda1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"RootDeviceType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ebs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"SriovNetSupport"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"simple"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"VirtualizationType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"hvm"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This looks about right. Take a note of the image ID, that is, &lt;code&gt;ami-000773770ac55efb2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now let's see what VPCs we have. This will be useful for creating an appropriate security group to be attached to our instance later.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-vpcs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In my case, I only have a default VPC with ID &lt;code&gt;vpc-6d7aaf0b&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Even though we will create a new security group, let's see what security groups we already have anyway:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-security-groups
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In my case, I only have a default security group, as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"default VPC security group"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"GroupName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"default"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"IpPermissions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"IpProtocol"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"IpRanges"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Ipv6Ranges"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"PrefixListIds"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"UserIdGroupPairs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"GroupId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sg-bc3d9df5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"UserId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"477657529190"&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"OwnerId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"477657529190"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"GroupId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sg-bc3d9df5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"IpPermissionsEgress"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"IpProtocol"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"IpRanges"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"CidrIp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.0.0/0"&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Ipv6Ranges"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"PrefixListIds"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"UserIdGroupPairs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"VpcId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vpc-6d7aaf0b"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This security group blocks all inbound traffic (&lt;code&gt;IpPermissions&lt;/code&gt;), so we won't be able to connect to our instance if we attach this security group to it, hence the need to create a new security group.&lt;/p&gt;

&lt;p&gt;Skim through the man page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 create-security-group &lt;span class="nb"&gt;help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's create a new security group "UbuntuSG", with the VPC ID we obtained earlier:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 create-security-group &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--group-name&lt;/span&gt; UbuntuSG &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--description&lt;/span&gt; &lt;span class="s2"&gt;"Security group for Ubuntu 20.04"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--vpc-id&lt;/span&gt; vpc-6d7aaf0b
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This prints a group ID on success. Take note of the group ID:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"GroupId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sg-047de2bb619edd924"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we obtain information on our newly created security group with &lt;code&gt;ec2 describe-security-groups&lt;/code&gt;, we notice that no inbound traffic is allowed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Security group for Ubuntu 20.04"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"GroupName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"UbuntuSG"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"IpPermissions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"OwnerId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"477657529190"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"GroupId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sg-047de2bb619edd924"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"IpPermissionsEgress"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"IpProtocol"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"IpRanges"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"CidrIp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.0.0/0"&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Ipv6Ranges"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"PrefixListIds"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"UserIdGroupPairs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"VpcId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vpc-6d7aaf0b"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we need to add inbound rules with &lt;code&gt;ec2 authorize-security-group-ingress&lt;/code&gt;. Skim through the man page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 authorize-security-group-ingress &lt;span class="nb"&gt;help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add an inbound rule for SSH (&lt;code&gt;22/tcp&lt;/code&gt;) from anywhere. For optimal security, you can discover your public IP address and only allow SSH from that IP instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 authorize-security-group-ingress &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--group-id&lt;/span&gt; sg-047de2bb619edd924 &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--protocol&lt;/span&gt; tcp &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--port&lt;/span&gt; 22 &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--cidr&lt;/span&gt; 0.0.0.0/0
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"Return"&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;,
    &lt;span class="s2"&gt;"SecurityGroupRules"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;"SecurityGroupRuleId"&lt;/span&gt;: &lt;span class="s2"&gt;"sgr-04c28eddbcd8b598a"&lt;/span&gt;,
            &lt;span class="s2"&gt;"GroupId"&lt;/span&gt;: &lt;span class="s2"&gt;"sg-047de2bb619edd924"&lt;/span&gt;,
            &lt;span class="s2"&gt;"GroupOwnerId"&lt;/span&gt;: &lt;span class="s2"&gt;"477657529190"&lt;/span&gt;,
            &lt;span class="s2"&gt;"IsEgress"&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
            &lt;span class="s2"&gt;"IpProtocol"&lt;/span&gt;: &lt;span class="s2"&gt;"tcp"&lt;/span&gt;,
            &lt;span class="s2"&gt;"FromPort"&lt;/span&gt;: 22,
            &lt;span class="s2"&gt;"ToPort"&lt;/span&gt;: 22,
            &lt;span class="s2"&gt;"CidrIpv4"&lt;/span&gt;: &lt;span class="s2"&gt;"0.0.0.0/0"&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that we used the group ID here. You can also specify the group name instead if that's easier.&lt;/p&gt;

&lt;p&gt;Now our security group looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Security group for Ubuntu 20.04"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"GroupName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"UbuntuSG"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"IpPermissions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"FromPort"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"IpProtocol"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tcp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"IpRanges"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"CidrIp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.0.0/0"&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Ipv6Ranges"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"PrefixListIds"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"ToPort"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"UserIdGroupPairs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"OwnerId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"477657529190"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"GroupId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sg-047de2bb619edd924"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"IpPermissionsEgress"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"IpProtocol"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"IpRanges"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nl"&gt;"CidrIp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.0.0/0"&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Ipv6Ranges"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"PrefixListIds"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"UserIdGroupPairs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"VpcId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vpc-6d7aaf0b"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another thing we need to connect to an instance is a key pair. Currently, I do not have any key pairs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-key-pairs
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"KeyPairs"&lt;/span&gt;: &lt;span class="o"&gt;[]&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In my case, I have to create or import a key pair. If you do not already have a key pair, generate one with &lt;code&gt;ssh-keygen&lt;/code&gt;. Since I already have a key pair, with my public key at &lt;code&gt;$HOME/.ssh/id_rsa.pub&lt;/code&gt;, I can import it into AWS using &lt;code&gt;ec2 import-key-pair&lt;/code&gt;. Skim through the man page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 import-key-pair &lt;span class="nb"&gt;help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's actually import the key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 import-key-pair &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--key-name&lt;/span&gt; &lt;span class="s2"&gt;"MacBook Air Ubuntu 20.04"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--public-key-material&lt;/span&gt; fileb://&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember the key name.&lt;/p&gt;

&lt;p&gt;With a security group and key pair, we can finally provision our AWS EC2 Ubuntu instance and connect to it. The subcommand for creating and starting an instance is &lt;code&gt;ec2 run-instances&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 run-instances &lt;span class="nb"&gt;help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's use the following information:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AMI ID: &lt;code&gt;ami-000773770ac55efb2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Instance type: &lt;code&gt;t2.micro&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Security group ID: &lt;code&gt;sg-047de2bb619edd924&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Key name: &lt;code&gt;MacBook Air Ubuntu 20.04&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 run-instances &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--image-id&lt;/span&gt; ami-000773770ac55efb2 &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--instance-type&lt;/span&gt; t2.micro &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--security-group-ids&lt;/span&gt; sg-047de2bb619edd924 &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--key-name&lt;/span&gt; &lt;span class="s2"&gt;"MacBook Air Ubuntu 20.04"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Chances are you will receive an &lt;code&gt;OptInRequired&lt;/code&gt; error like I did:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An error occurred (OptInRequired) when calling the RunInstances operation: In order to use this AWS Marketplace product you need to accept terms and subscribe. To do so please visit &lt;a href="https://aws.amazon.com/marketplace/pp?sku=cn75kij0iclp333uyrx6uqp6z"&gt;https://aws.amazon.com/marketplace/pp?sku=cn75kij0iclp333uyrx6uqp6z&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To the best of my knowledge, it is not possible to subscribe to an AWS Marketplace product programmatically, possibly to force the user to read the terms and conditions properly before accepting it. Follow the link shown in the error message, subscribe to the product and retry the same command.&lt;/p&gt;

&lt;p&gt;On success, you should see relevant JSON info printed to the console, such as the instance ID.&lt;/p&gt;

&lt;p&gt;Now check that the instance is running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 describe-instances
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example, the state of my instance is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Code"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"running"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I also learn that the public IP address of my instance is &lt;code&gt;52.53.151.210&lt;/code&gt;, from the &lt;code&gt;PublicIpAddress&lt;/code&gt; field.&lt;/p&gt;

&lt;p&gt;Now connect to the instance via SSH (replace &lt;code&gt;52.53.151.210&lt;/code&gt; with the public IP of your instance):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh ubuntu@52.53.151.210
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Congratulations! You have successfully provisioned an EC2 instance through the AWS CLI and connected to it.&lt;/p&gt;

&lt;p&gt;Some additional subcommands for managing EC2 instances:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ec2 stop-instances&lt;/code&gt; for stopping instances&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ec2 start-instances&lt;/code&gt; for starting existing instances that have been stopped&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ec2 reboot-instances&lt;/code&gt; for requesting a reboot on existing instances&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cleaning-up"&gt;
  &lt;/a&gt;
  Cleaning up
&lt;/h2&gt;

&lt;p&gt;Unless you plan to continue using the instance, terminate it, replacing the instance ID below as appropriate:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 terminate-instances &lt;span class="nt"&gt;--instance-ids&lt;/span&gt; i-02eb9bb3b0989c57e
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember that we also created a security group and imported a key pair. You might want to keep them for use with future instances, but in my case, I will delete them as well:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 delete-security-group &lt;span class="nt"&gt;--group-id&lt;/span&gt; sg-047de2bb619edd924
&lt;span class="nv"&gt;$ &lt;/span&gt;aws ec2 delete-key-pair &lt;span class="nt"&gt;--key-name&lt;/span&gt; &lt;span class="s2"&gt;"MacBook Air Ubuntu 20.04"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We learned what the AWS CLI is, how to install it on Linux, how to configure an IAM administrator for use with the AWS CLI (and why it is important to do so), how to get help with the AWS CLI, the &lt;code&gt;ec2&lt;/code&gt; command and its various subcommands, and how we can combine those commands to manage EC2 instances &lt;em&gt;almost&lt;/em&gt; entirely from the CLI. But that is just the tip of the iceberg. AWS is so much more than just EC2, and I encourage you to take the time to explore other AWS services and how they can be manipulated through the AWS CLI.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this hands-on session and found it useful. Stay tuned ;-) Until then, happy holidays!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Prerequisites to use the AWS CLI version 2: &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-prereqs.html"&gt;https://docs.aws.amazon.com/cli/latest/userguide/getting-started-prereqs.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Tagging AWS resources: &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html"&gt;https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Tasks that require root user credentials: &lt;a href="https://docs.aws.amazon.com/accounts/latest/reference/root-user-tasks.html"&gt;https://docs.aws.amazon.com/accounts/latest/reference/root-user-tasks.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Installing or updating the latest version of the AWS CLI: &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html"&gt;https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;AWS CLI Command Reference: &lt;a href="https://awscli.amazonaws.com/v2/documentation/api/latest/index.html"&gt;https://awscli.amazonaws.com/v2/documentation/api/latest/index.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Using Amazon EC2 with the AWS CLI: &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-services-ec2.html"&gt;https://docs.aws.amazon.com/cli/latest/userguide/cli-services-ec2.html&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>cloudcomputing</category>
      <category>linux</category>
      <category>ubuntu</category>
    </item>
    <item>
      <title>My 2021 Recap</title>
      <author>Yehezkiel Gunawan</author>
      <pubDate>Mon, 27 Dec 2021 09:09:57 +0000</pubDate>
      <link>https://dev.to/yehezkielgunawan/my-2021-recap-kk8</link>
      <guid>https://dev.to/yehezkielgunawan/my-2021-recap-kk8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Well, without realizing it we are already at the end of 2021. Is it just me or not, this pandemic era makes time goes faster? I remember the last time we can meet each other by a person is about March 2020, and we're almost done everything online for nearly 2 years LOL.&lt;/p&gt;

&lt;p&gt;I hope you're all good until today. Like most people do at the end of the year, I'd like to write some of my yearly recap and hope for the next year as a newbie frontend developer. Feels opinionated, but I think this can give you some new insight for planning what to do for the next year. For me, writing this can also be a self-reminder for myself when I read it again.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-ive-learned-throughout-the-year"&gt;
  &lt;/a&gt;
  What I've Learned Throughout The Year
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#struggling-to-overcome-burnout-of-fulltime-job-workload"&gt;
  &lt;/a&gt;
  Struggling to Overcome Burnout of Fulltime Job Workload
&lt;/h3&gt;

&lt;p&gt;We all know the Covid-19 pandemic has caused a lot of companies to enable Work From Home (WFH) regulation, except my previous company at that time LOL. From February 2021 until I resigned, still had to Work From Office (WFO) 100% every day even it's a software house company and very possible to do everything remotely.&lt;/p&gt;

&lt;p&gt;I started to feel that I'm not enjoying my job at my previous company due to the toxic environment. I even did not learn anything except about mitigation and survival, LOL. For about one year I work spontaneously rather than making planning like a sprint planning routine like common tech companies did. When there're requests from the client, then my senior and I just work on it based on the requests.&lt;/p&gt;

&lt;p&gt;The manager didn't give support at all. They just give ideas (actually add the workload for the devs) without explicit and concrete examples. So I have to think harder about the implementation. When the app is successfully developed, the developer never received any appreciation, only the managers.&lt;/p&gt;

&lt;p&gt;In August 2021, I got burned out and didn't have the energy to work anymore because of the workload and the workflow. It lasts for several weeks. Luckily it was not a busy moment because there's a lack of client requests at that time. Actually, I still love coding, but not for the company's tasks.&lt;/p&gt;

&lt;p&gt;I even spoke directly to him, and luckily the manager did not deny the facts that I've spoken. But the general environment and situation make the changes very impossible to be implemented. So I can say, there're no changes until I resigned from that place.&lt;/p&gt;

&lt;p&gt;I learned that &lt;strong&gt;work culture and environment are very crucial&lt;/strong&gt;. After I survived in this company for about one year and three months, I decided to not extend the work contract and luckily I got a new job for the next year.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-favourite-learning-path"&gt;
  &lt;/a&gt;
  My Favourite Learning Path
&lt;/h3&gt;

&lt;p&gt;In August 2021, after I healed from my burnout, I work on a freelance project with 2 of my former college friends. We made a web app using React (frontend) and Node.js (backend). I fell in love with React because of this.&lt;/p&gt;

&lt;p&gt;I struggled a lot on the first week because I used Angular before then I have to switch to React in a short time. But, when I understand the code pattern and the basic things of React I finally finished all of my tasks for the project. Thanks to &lt;a href="https://sznm.dev/"&gt;Agustinus Nathaniel&lt;/a&gt; for guiding and helping me to understand React properly.&lt;/p&gt;

&lt;p&gt;After that, I invested my money to buy a domain for myself and challenged myself to build my own portfolio site using Next.js. Finally, I can finish it within a month. Not only that, I still developed some personal projects using React &amp;amp; Next.js to sharpen my understanding of React things.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#finally-i-got-a-new-job"&gt;
  &lt;/a&gt;
  Finally I Got a New Job
&lt;/h3&gt;

&lt;p&gt;I remember the moment I decided to prepare for my resignation in September 2021. After I finished developing my personal site, I challenged myself to make several personal projects and published them on Linkedin. Sometimes I wrote some articles and published them on Linkedin once a week.&lt;/p&gt;

&lt;p&gt;My life changed since that time. I got several direct messages which contain a job offer as a frontend engineer (React-based). I also got a lot of phone calls from the talent hunter who offered me a job for their client company.&lt;/p&gt;

&lt;p&gt;Now, I'm very selective in finding a job because of my past job experience. I don't want to get into the same toxic place. So when I got a phone call from the talent hunter or recruiter, I &lt;strong&gt;did some research by myself to find out the information details about the company&lt;/strong&gt;, including the company reviews at &lt;a href="https://www.glassdoor.com/"&gt;Glassdoor&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I can identify the red flags regarding that company just by looking at the former employee reviews. Not only reviews, if the company does not have a professional profile like Linkedin Page, actually it can be a red flag too. &lt;/p&gt;

&lt;p&gt;Besides that, if I know that I have some friends who work there, I usually contact them and ask them about the work culture and situation there. Actually, I have got an offer letter from a Financial Technology (FinTech) company where some of my friends work there with a high salary. But without asking for more details, I canceled the offer because my friend often overwork and still have to work remotely from home on the weekend (hustle culture). I know the salary is interesting, but hustle culture is not for me and can lead me to burnout again.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What you see is what you get. If you know you've been warned through the red flag that you got from the previous reviews or the information that got from friends, the reality won't be far from that.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Luckily, in November 2021, a recruiter from another hospitality company reach me through Linkedin. Then I followed the recruitment process and finished the take-home project. The pleasant moment is when during the user interview session with the squad leader. The user was not judgemental. He was even amazed at my take-home project result when he reviewed it. We spent time for the interview for about one hour, talking about my previous projects and experiences. It was so fun.&lt;/p&gt;

&lt;p&gt;Several days later, I do the final interview with the manager. He is the first supportive manager that I've ever met. He cares about the employees' mental health and workload. He even explained and tell the truth of the company's current situation to me during the interview. We talk about many things during the interview for about more than one hour, LOL.&lt;/p&gt;

&lt;p&gt;Finally, after the salary negotiation and the last interview, I received the offer letter. The recruiter was very helpful. She even reminds me of when there are some mistakes in my submitted personal data.&lt;/p&gt;

&lt;p&gt;For your information, I live in Bogor, Indonesia, and the company is at Bandung. It's pretty far from my home city, but luckily I got the option to work remotely even after the pandemic ends, yeah!!!&lt;/p&gt;

&lt;p&gt;I'll start to work again in January 2022. Wish me luck and I hope this is the better job for me to grow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#projects-ive-worked-on-in-2021"&gt;
  &lt;/a&gt;
  Projects I've Worked on in 2021
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#yehezguncom"&gt;
  &lt;/a&gt;
  yehezgun.com
&lt;/h3&gt;

&lt;p&gt;As I mentioned before, this is the first personal project that I've done in 2021 using React &amp;amp; Next.js. You can access and take a look at &lt;a href="https://yehezgun.com"&gt;yehezgun.com&lt;/a&gt;. I don't like to make complex designs. I'd rather make the simple one so I can understand it by myself when I want to make some improvements, LOL.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#personalized-starter-template"&gt;
  &lt;/a&gt;
  Personalized Starter Template
&lt;/h3&gt;

&lt;p&gt;So far there are two starter templates that I've made.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://yehez-nextchakra-starter.yehezgun.com"&gt;yehez-nextchakra-starter.yehezgun.com&lt;/a&gt; -&amp;gt; Next.js (Typescript) + Chakra UI starter template&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://yehez-vitechakra-starter.yehezgun.com/"&gt;yehez-vitechakra-starter.yehezgun.com&lt;/a&gt; -&amp;gt; React (using  Typescript and Vite as builder) + Chakra UI starter template&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can read my previous article about the benefits of making your own starter template &lt;a href="https://yehezgun.com/articles/why-making-a-starter-template-matters"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#personal-link-shortener"&gt;
  &lt;/a&gt;
  Personal Link Shortener
&lt;/h3&gt;

&lt;p&gt;When I wrote an article, sometimes I refer to some links as references. So I thought it will be great if I can have my own link shortener, so I don't need to use and repeatedly search for a link shortener. You can access and even use it at &lt;a href="https://link.yehezgun.com/"&gt;link.yehezgun.com&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#personal-live-markdown-editor"&gt;
  &lt;/a&gt;
  Personal Live Markdown Editor
&lt;/h3&gt;

&lt;p&gt;The reason I made this is because I need a live markdown previewer when I wrote documentation (Readme file) for a project that I have made. I made it using React Markdown Previewer to enable the live markdown preview. You can access the live demo at &lt;a href="https://markdown.yehezgun.com"&gt;markdown.yehezgun.com&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#personal-docs-site"&gt;
  &lt;/a&gt;
  Personal Docs Site
&lt;/h3&gt;

&lt;p&gt;I've been exhausted from googling the same thing repeatedly. So I decided to make a site that contains the frequent things that I usually access or use to resolve "the redundancy" LOL. I made it using &lt;a href="https://github.com/shuding/nextra"&gt;Shuding's Nextra&lt;/a&gt;. You can see mine at &lt;a href="https://docs.yehezgun.com"&gt;docs.yehezgun.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can read my previous article about the reason why I made my own personal docs site &lt;a href="https://yehezgun.com/articles/why-I-made-my-own-personal-docs-site"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kai-access-app-amp-a-freelance-project"&gt;
  &lt;/a&gt;
  KAI Access App &amp;amp; A Freelance Project
&lt;/h3&gt;

&lt;p&gt;As I told you before, I never worked on a freelance project with my friends. Unfortunately, it's a private project based on client requests. But I can explain a little about what we've made.&lt;/p&gt;

&lt;p&gt;We made a warehousing system in the form of web and mobile apps. One of my friends created the mobile app, and I developed the web app, especially the CRUD process. So the employee just needs to scan the QR Code of the goods and the changes will be automatically done on the server. The other employee can also check and validate the data through the website.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://play.google.com/store/apps/details?id=com.kai.kaiticketing&amp;amp;hl=en_US&amp;amp;gl=US"&gt;KAI Access App&lt;/a&gt;, actually it's an app developed by my senior and me when I was working in the previous company. My senior developed it from scratch using Ionic &amp;amp; Angular. I just developed the requested feature like the Taxi Order system and PPOB feature.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hope-for-2022"&gt;
  &lt;/a&gt;
  Hope For 2022
&lt;/h2&gt;

&lt;p&gt;2021 is a tough year for me personally. You have read my experience about how I struggled to survive and finally can get the new job. Thank God I can survive this year, LOL.&lt;/p&gt;

&lt;p&gt;I know there're a lot of things changed and delayed due to the Covid-19 pandemic since 2020. But there're some things that I want to achieve and learn more deeply in 2022.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I know I'm still a newbie in React development. I even still struggled with CSS even I'm a frontend engineer, LOL. So I decided to learn Tailwind CSS as my preferred and go-to CSS utility tool. Why? Because after I read the docs, it can push me to understand the design and little CSS fundamentals while I learn and use it. It also allows me to make my own design system.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Clean Code&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For about one year I work in the previous company, I got a bad legacy code. It was very exhausting when I have to improve some features. The code is like a mess, LOL. If I optimize my parts, it also means I have to optimize the following features. That's why I often code like a barbarian. I realized that I can do this anymore and had to change my behavior.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Work-Life Balance&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is actually the common dream. Every people want to achieve it, LOL. I wish can achieve it through my new job soon. Hopefully, I also get a healthy environment and work culture, especially supportive colleagues.&lt;/p&gt;

&lt;p&gt;Yeah, that's all from me. That's my 2021 recap and hope for the next year. What's yours?&lt;/p&gt;

</description>
      <category>2021</category>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Remove console logs in production build (Angular 2.x)</title>
      <author>Akiko IKEHARA</author>
      <pubDate>Mon, 27 Dec 2021 09:01:43 +0000</pubDate>
      <link>https://dev.to/ikeakiko/remove-console-logs-in-production-build-angular-2x-1b43</link>
      <guid>https://dev.to/ikeakiko/remove-console-logs-in-production-build-angular-2x-1b43</guid>
      <description>&lt;h3&gt;
  &lt;a href="#problem-goal"&gt;
  &lt;/a&gt;
  Problem / Goal
&lt;/h3&gt;

&lt;p&gt;For debugging, most of us often write console.log to enable us to analyze problems. &lt;br&gt;
But, it is might be dangerous because there is a risk of accidentally outputting confidential information (api key, password, etc).&lt;br&gt;
Therefor, we don't want to output console.log in production.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#solution-overview"&gt;
  &lt;/a&gt;
  Solution Overview
&lt;/h3&gt;

&lt;p&gt;Override console.log method on a function that does nothing.&lt;br&gt;
(There is also another way that use webpack settings.)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#concrete-steps"&gt;
  &lt;/a&gt;
  Concrete Steps
&lt;/h3&gt;

&lt;p&gt;Override console.log method on a function that does nothing.&lt;/p&gt;

&lt;p&gt;app/main.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (environment.production) {
  window.console.log = () =&amp;gt; {};
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>angular</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Custom React useFetch() hook for data fetching with revalidation</title>
      <author>damilola jerugba</author>
      <pubDate>Mon, 27 Dec 2021 08:55:34 +0000</pubDate>
      <link>https://dev.to/brimble/custom-react-usefetch-hook-for-data-fetching-with-revalidation-f7k</link>
      <guid>https://dev.to/brimble/custom-react-usefetch-hook-for-data-fetching-with-revalidation-f7k</guid>
      <description>&lt;p&gt;This guide is to show you how to create a simple react hook for data fetching (with revalidation).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-this-hook"&gt;
  &lt;/a&gt;
  🤨 Why this hook?
&lt;/h2&gt;

&lt;p&gt;When fetching data for your react applications, you'd usually use both &lt;code&gt;useState&lt;/code&gt; and &lt;code&gt;useEffect&lt;/code&gt;, with values like &lt;code&gt;loading&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; e.g &lt;a href="https://github.com/damiisdandy/use-pagination/blob/master/src/App.tsx"&gt;This example&lt;/a&gt;, this hook is to help abstract that functionality into one simple hook that can be used anywhere and multiple times.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-project"&gt;
  &lt;/a&gt;
  🕺 Setting up the project
&lt;/h2&gt;

&lt;p&gt;We would be using the &lt;code&gt;create-react-app&lt;/code&gt; boiler template for typescript and the only external library we would be using is &lt;code&gt;axios&lt;/code&gt; for data fetching.&lt;/p&gt;

&lt;p&gt;Open up your terminal and type in the following commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn create react-app use-fetch --template typescript
# for npm
npx create-react-app use-fetch --template typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Change into the directory and install &lt;code&gt;axios&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd use-fetch
yarn add axios
# for npm
npm install axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Within the &lt;code&gt;src&lt;/code&gt; directory delete the following file (because they aren't needed)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;App.css&lt;/li&gt;
&lt;li&gt;App.test.tsx&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#custom-raw-usefetch-endraw-hook"&gt;
  &lt;/a&gt;
  🎣 Custom &lt;code&gt;useFetch&lt;/code&gt; hook
&lt;/h2&gt;

&lt;p&gt;Within the &lt;code&gt;src&lt;/code&gt; directory create another directory called &lt;code&gt;hooks&lt;/code&gt;, this is where our hook will reside.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd src
mkdir hooks
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Your file structure should look something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z2erQZS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3e1l0z0k8qi5nfsfj21m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z2erQZS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3e1l0z0k8qi5nfsfj21m.png" alt="file structure" width="256" height="393"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Within the &lt;code&gt;hooks&lt;/code&gt; directory create a file called &lt;code&gt;useFetch.tsx&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Type in the following inside the &lt;code&gt;useFetch&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;UseFetchProps&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;UseFetchProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// function to fetch data&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchedData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fetchedData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// on first load fetch data&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The hook takes in a prop &lt;code&gt;url&lt;/code&gt;, which is the API url at which we want to fetch data from. It has two states &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; which are used to store data gotten from the API and check for errors respectively.&lt;/p&gt;

&lt;p&gt;We created a separate function for fetching the data called &lt;code&gt;fetch&lt;/code&gt; and wrapped it within a &lt;code&gt;useCallback&lt;/code&gt; hook, Visit &lt;a href="https://www.geeksforgeeks.org/react-js-usecallback-hook/#:~:text=The%20useCallback%20hook%20is%20used,of%20the%20dependencies%20has%20changed."&gt;here&lt;/a&gt; to see the reason why we used a &lt;code&gt;useCallback&lt;/code&gt; hook.&lt;/p&gt;

&lt;p&gt;Then we simply used a &lt;code&gt;useEffect&lt;/code&gt; hook to run the &lt;code&gt;fetch&lt;/code&gt; function as soon as the hook is mounted 🙂.&lt;/p&gt;

&lt;p&gt;The hook returns &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;revalidate&lt;/code&gt; which is the &lt;code&gt;fetch&lt;/code&gt; function for when we want to programmatically revalidate the data.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#using-the-hook"&gt;
  &lt;/a&gt;
  😎 Using the hook
&lt;/h2&gt;

&lt;p&gt;To use the hook we simply just import it and extract its values.&lt;br&gt;
Within the &lt;code&gt;App.tsx&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./hooks/useFetch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;logo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./logo.svg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidate&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://random-data-api.com/api/users/random_user?size=5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt; &lt;span class="nx"&gt;fetching&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;useFetch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;items&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="na"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;
              &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`https://avatars.dicebear.com/api/big-smile/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.svg`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
              &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; profile`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
              &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item__img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item__info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;}{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(@{&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;job&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;employment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;
                &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`status &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;
                  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;active&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blocked&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;danger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;warn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
              &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;))}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#adding-interval-revalidation"&gt;
  &lt;/a&gt;
  ⏰ Adding Interval revalidation
&lt;/h2&gt;

&lt;p&gt;You might need to fetch data from your API every 5 seconds for revalidation (ensuring your data is up-to-date).&lt;/p&gt;

&lt;p&gt;We need to add some modifications to our &lt;code&gt;useFetch&lt;/code&gt; hook. Lets and more props.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;UseFetchProps&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;revalidate&lt;/code&gt; will be a boolean to check if we want to implement interval revalidation or not, &lt;code&gt;interval&lt;/code&gt; will be the time taken between every revalidation (in seconds).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;UseFetchProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We'll create a state called &lt;code&gt;revalidateKey&lt;/code&gt; that we will change on every interval which will be added to our &lt;code&gt;useEffect&lt;/code&gt; dependency array. Adding this to our dependency array will ensure that the function within our &lt;code&gt;useEffect&lt;/code&gt; will run everytime the &lt;code&gt;revalidateKey&lt;/code&gt; changes.&lt;/p&gt;

&lt;p&gt;To change the &lt;code&gt;revalidateKey&lt;/code&gt;, we will create a new &lt;code&gt;useEffect&lt;/code&gt; that has a &lt;code&gt;setInterval&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;revalidateKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setRevalidateKey&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;revalidateInterval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setRevalidateKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="c1"&gt;// if no interval is given, use 3 seconds&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;revalidateInterval&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Our &lt;code&gt;useFetch&lt;/code&gt; hook should then look something like this.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;UseFetchProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;revalidateKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setRevalidateKey&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// function to fetch data&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchedData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fetchedData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;revalidateInterval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setRevalidateKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="c1"&gt;// if no interval is given, use 3 seconds&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;revalidateInterval&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// on first load fetch data and when revalidateKey changes&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidateKey&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Using the &lt;code&gt;useFetch&lt;/code&gt; hook ✨&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidate&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://random-data-api.com/api/users/random_user?size=5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;// fetch every 5 seconds&lt;/span&gt;
    &lt;span class="na"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#graphql-support"&gt;
  &lt;/a&gt;
  ⚠️ Graphql support
&lt;/h3&gt;

&lt;p&gt;This hook uses only the &lt;code&gt;GET&lt;/code&gt; method, and Graphql uses &lt;code&gt;POST&lt;/code&gt; method for &lt;a href="https://medium.com/@stubailo/how-to-call-a-graphql-server-with-axios-337a94ad6cf9"&gt;data fetching&lt;/a&gt;. To make the hook more dynamic you can add more props like &lt;code&gt;isGraphql&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt;, &lt;code&gt;isGraphql&lt;/code&gt; will be a boolean to check if its Graphql or REST so you can have a condition in your hook to use &lt;code&gt;axios.post()&lt;/code&gt; instead of &lt;code&gt;axios.get()&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt; for the graphql query.&lt;/p&gt;

&lt;p&gt;Thank you for reading 🙏🏾, If you have any questions, additions, or subtractions please comment below.&lt;/p&gt;

&lt;p&gt;The full source code is linked below 👇👇&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/brimblehq"&gt;
        brimblehq
      &lt;/a&gt; / &lt;a href="https://github.com/brimblehq/use-fetch"&gt;
        use-fetch
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      data fetching hook with revalidation
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>react</category>
      <category>typescript</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
