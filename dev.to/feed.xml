<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Custom JavaScript CreateElement Function</title>
      <author>Ahmed Adel</author>
      <pubDate>Sat, 28 Aug 2021 13:24:38 +0000</pubDate>
      <link>https://dev.to/ahmedadel/custom-javascript-createelement-function-244f</link>
      <guid>https://dev.to/ahmedadel/custom-javascript-createelement-function-244f</guid>
      <description>&lt;p&gt;• One of the most common functions to create &lt;code&gt;HTML&lt;/code&gt; elements &lt;strong&gt;dynamically&lt;/strong&gt; using &lt;code&gt;Vanilla JS&lt;/code&gt; is &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement"&gt;Document.createElement()&lt;/a&gt; which takes 1 parameter which is the tag name, this function returns the newly created element, then after that you will write some code to add properties or attributes to it then append it to another element in your &lt;code&gt;DOM&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;• This process usually takes many lines which makes creating a simple html structure a headache.&lt;/p&gt;

&lt;p&gt;• So let me introduce a simple function that can make this process easier :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initObj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Tag&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;initObj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;childNodes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;initObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;childNodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;attributes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;initObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;initObj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#so-lets-see-what-this-function-can-do"&gt;
  &lt;/a&gt;
  So, let's see what this function can do:
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Create the html element normally.&lt;/li&gt;
&lt;li&gt;Add attributes to it (Key value pairs).&lt;/li&gt;
&lt;li&gt;Add any custom property or events to it&lt;/li&gt;
&lt;li&gt;Add child nodes to this element&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;All in one line&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-use-it"&gt;
  &lt;/a&gt;
  How to use it:
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;First of all, this function takes an object that must have a property named Tag, to specify the element &lt;strong&gt;Tag name&lt;/strong&gt;:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CreateElement&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;Tag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To add an &lt;strong&gt;id&lt;/strong&gt; and some &lt;strong&gt;classes&lt;/strong&gt; for example:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CreateElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;Tag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myId&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;btn btn-danger&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To add an &lt;strong&gt;on click function&lt;/strong&gt; and an &lt;strong&gt;inner html&lt;/strong&gt;:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CreateElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;Tag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;innerHTML&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;i class='fas fa-trash-alt'&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;onclick&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;yourOnClickFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and it is the same for all object properties or even new properties you need to add to the object.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To add &lt;strong&gt;attributes&lt;/strong&gt; with &lt;strong&gt;keys &amp;amp; values&lt;/strong&gt;:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CreateElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;Tag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;customAttr1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;500&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;customAttr2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ABC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To add &lt;strong&gt;Child Nodes&lt;/strong&gt; to this node after it is created:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CreateElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;Tag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;childNodes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;nodeElement1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;nodeElement2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;This is how easy you can use it&lt;/strong&gt;🤷‍♂️&lt;br&gt;
It's a function that I love to use in each project I am involved in.&lt;br&gt;
Hope you like it 👋&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>The Phoenix Project by Gene Kim</title>
      <author>Sandor Dargo</author>
      <pubDate>Sat, 28 Aug 2021 12:34:24 +0000</pubDate>
      <link>https://dev.to/sandordargo/the-phoenix-project-by-gene-kim-3an</link>
      <guid>https://dev.to/sandordargo/the-phoenix-project-by-gene-kim-3an</guid>
      <description>&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/1942788290/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1942788290&amp;amp;linkId=fc9c78132b98763cc56dca36a783a5f4"&gt;The Phoenix Project&lt;/a&gt; is a fantastic book that is both a professional book aiming to guide teams and &lt;em&gt;"a **novel&lt;/em&gt;* about IT, DevOps, and how to help your business win"*.&lt;/p&gt;

&lt;p&gt;It's written in a style I love the most and I think we have a clear lack of this type of book. It offers both what I'd look for in fiction and in non-fiction books. The author is a great storyteller, he makes you not want to put the book down, not only because you want to learn about DevOps and how to organize properly a modern organization, but also because you are interested in how the story unfolds. Whether the CISO commits suicide or just leaves the city without notifying anyone from the organization or if the main character actually finds another job instead.&lt;/p&gt;

&lt;p&gt;The only book of similar style is &lt;a href="https://www.amazon.com/gp/product/1982063742/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1982063742&amp;amp;linkId=a09eb2af4520bbf25642d58904093001"&gt;Code Ahead by Yegor Bugayenko&lt;/a&gt;. Let me know in the comments if you know any similar books!&lt;/p&gt;

&lt;p&gt;You probably already guessed that I more than recommend reading &lt;a href="https://www.amazon.com/gp/product/1942788290/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1942788290&amp;amp;linkId=fc9c78132b98763cc56dca36a783a5f4"&gt;The Phoenix Project&lt;/a&gt;. Let me share a couple of details from the book.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overtime-overtime-overtime"&gt;
  &lt;/a&gt;
  Overtime, overtime, overtime
&lt;/h2&gt;

&lt;p&gt;The Phoenix Project is about an enterprise where the business is not happy. They lost their competitive edge and they feel that they are kept hostage by their IT organization.&lt;/p&gt;

&lt;p&gt;IT is not happy either because nothing works well, their opinions are always neglected, CIOs come and go and whenever there is a deployment, problems are guaranteed.&lt;/p&gt;

&lt;p&gt;As Erik Reid, a board candidate described, the relationship between a CEO and a CIO (or business and IT) is often like a dysfunctional marriage. Both sides feel powerless and held hostage by the other.&lt;/p&gt;

&lt;p&gt;Being hostage often manifests in the book by constant overtime. All-nighters, working through the weekends, skipping festivities with your spouse, with your kids.&lt;/p&gt;

&lt;p&gt;I was reading the book and shaking my head. People would really do that? If they would, why? For money? There are plenty of jobs...&lt;/p&gt;

&lt;p&gt;Of course, the book also shares some of the reasons. You have a calling, you or your spouse appreciate a high salary and you don't want to move for another opportunity, etc. &lt;/p&gt;

&lt;p&gt;Anyway, shit happens and there are definitely unanticipated events when someone has to solve the problem immediately and not during the next business day. There are emergencies and I think employees can be flexible in such cases, just like employers should be flexible with personal emergencies. &lt;/p&gt;

&lt;p&gt;But when it happens every month or every week, it's not an emergency anymore. It's just expected unplanned work. It's work that is in fact normal.&lt;/p&gt;

&lt;p&gt;Leaving your life behind should not be normal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.sandordargo.com/blog/2021/06/09/3-ways-to-prevent-micro-burnouts"&gt;Don't burn out.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-need-for-mentoring"&gt;
  &lt;/a&gt;
  The need for mentoring
&lt;/h2&gt;

&lt;p&gt;Although the author doesn't write about mentoring explicitly, if you follow the story of Bill Palmer, the new VP of IT Operations, you will notice that there are two key factors to his success. The first one is his attitude. He doesn't accept things as they are but he does whatever he can to change whatever he can for the better.&lt;/p&gt;

&lt;p&gt;As a former Navy officer, he is willing to fight back, he is willing to share his opinion and he doesn't only have preferences, but he has principles. When he realized that his opinion doesn't matter, he gave his resignation.&lt;/p&gt;

&lt;p&gt;The other key element is Erik, whom he first described as a &lt;em&gt;raving madman&lt;/em&gt;. He turned out to be his most important help. He became his mentor who did not solve problems on behalf of Bill, but instead, he gave some ideas, some clues that Bill could follow upon.&lt;/p&gt;

&lt;p&gt;He couldn't have been succeeded the way he did without his mentor Erik. We all need help, we all need teachers, mentors who don't feed us the solutions on a silver spoon, but who help us to discover the right thing to do on our own - with the initial spark.&lt;/p&gt;

&lt;p&gt;Ideally, you don't only have one mentor or at least not the same one throughout your career. On different levels, you'll need different mentors. Maybe even in different areas of your lives.&lt;/p&gt;

&lt;p&gt;And how to find them?&lt;/p&gt;

&lt;p&gt;As Lao Tzu said, &lt;em&gt;"when the student is ready the teacher will appear. When the student is truly ready, the teacher will disappear."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So don't worry. Learn, be open and you'll find your mentor. Just like Bill did.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-3-ways"&gt;
  &lt;/a&gt;
  The 3 ways
&lt;/h2&gt;

&lt;p&gt;Erik keeps telling Bill that IT work, IT operations is like plant operations and there are essentially 3 ways to be mastered in order to successfully support the development and after all, the business.&lt;/p&gt;

&lt;p&gt;The first way is the traditional left to right flow of work. From development, the work flows to IT operations so that it can be delivered to the customer. The question is how to make this flow effective.&lt;/p&gt;

&lt;p&gt;In plant operations, the key is to keep the amount of Work In Process small. In IT it's not different. Big deployments suck. Reviewing big pull requests sucks. You need small changes, small batches of changes, continuous integration, continuous delivery and deployment to limit the work in process.&lt;/p&gt;

&lt;p&gt;The second way is about having fast feedback from right to left at all of the work. This is needed so that teams can improve, so that the same failures are not happening again and again. If development makes things more difficult for deploying and operating a system, but they don't get the feedback for it, they cannot improve.&lt;/p&gt;

&lt;p&gt;Ideally, if something is broken the production system must be stopped until the error is fixed. In a plant, this might mean stopping the assembly lines. In software, on a smaller scale, this means that when you break a unit test, you cannot integrate your change until all the tests are fixed. On a bigger scale, it might mean a complete change freeze if the system becomes too difficult to change, too shaky to operate.&lt;/p&gt;

&lt;p&gt;The second way is about sending feedback back from each step to the previous ones. One can only improve with feedback. If errors are made at a work centre, but they are never told so, they cannot fix their processes.&lt;/p&gt;

&lt;p&gt;The third way is what makes the first two happen and in a sustainable way. It's the right culture. You need a team culture, a company culture that cultivates experimentation, as such it doesn't punish for failures as long as you learn from them.&lt;/p&gt;

&lt;p&gt;You need a culture where people care about their craft, where they hone their skills, they practice towards mastery and as a result, they dare to take some risks to experiment to innovate, to get better.&lt;/p&gt;

&lt;p&gt;You need a culture where you don't have to hide feedback, where it's taken into account, where problems are not swept under the carpet but where they are welcome as opportunities to make things better.&lt;/p&gt;

&lt;p&gt;If you want a healthy organization, these 3 ways have to be mastered.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-4-types-of-work"&gt;
  &lt;/a&gt;
  The 4 types of work
&lt;/h2&gt;

&lt;p&gt;Finally, let me share the 4 types of work that are explained in the book. Erik told Bill that there are 4 categories of work and if he really wants to manage IT operations well, he must understand the different types.&lt;/p&gt;

&lt;p&gt;Bill recognized the first 3 types quite easily, the last one was a bit more difficult whereas often that's the most common one.&lt;/p&gt;

&lt;p&gt;First, you have &lt;em&gt;business projects&lt;/em&gt;. This is quite straightforward. New feature requests coming from the sponsoring business units as new projects.&lt;/p&gt;

&lt;p&gt;Then you have &lt;em&gt;internal IT projects&lt;/em&gt;, such as modernizing the infrastructure, improving the pipeline or even refactoring the code to accommodate changes easier. Even if these activities are not budgeted directly by business units, it's important to keep track of the money, the resources they take so that you have a clear understanding of capacities for the other types of work.&lt;/p&gt;

&lt;p&gt;The third category is a broad one, &lt;em&gt;changes&lt;/em&gt;. Changes are often generated from the first two categories and they are usually tracked in ticketing systems.&lt;/p&gt;

&lt;p&gt;The last category is &lt;em&gt;unplanned or recovery work&lt;/em&gt;. If you have an unhealthy organization, this is going to be the most common one.&lt;/p&gt;

&lt;p&gt;It is always urgent, otherwise, it can be planned and deferred as a change. Unplanned work comes to the expense of the first three categories and as such it's disruptive, it makes plans inaccurate and if it's too frequent, even makes planning impossible.&lt;/p&gt;

&lt;p&gt;Building a predictable organization requires that you limit the possibilities of unplanned work appearing out of nowhere.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/1942788290/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1942788290&amp;amp;linkId=fc9c78132b98763cc56dca36a783a5f4"&gt;The Phoenix Project&lt;/a&gt; is a mix of a novel and a cookbook for implanting a successful DevOps mindset. More than that a mindset that will help you turn a dysfunctional IT - business relationship into prospering collaboration. &lt;/p&gt;

&lt;p&gt;Yet, I found the first part of the book unusually depressing. Maybe because I felt strong sympathy for Bill Palmer.&lt;/p&gt;

&lt;p&gt;Speaking of Bill, he has a great personality as a leader and reflects traits that can be useful for many of us. He relentlessly asks questions and looks for solutions to problems instead of complaining. And he doesn't stop until he understands what goes on.&lt;/p&gt;

&lt;p&gt;I already tried to put in place some items I learnt from him.&lt;/p&gt;

&lt;p&gt;The Phoenix Project is a must-read for everyone who works in IT, and probably even for those who work &lt;strong&gt;with&lt;/strong&gt; IT.&lt;/p&gt;

&lt;p&gt;I can't wait for &lt;a href="https://www.amazon.com/gp/product/1942788762/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1942788762&amp;amp;linkId=9e9b64c0b50993a4d56f1989ddf25908"&gt;&lt;em&gt;The Unicorn Project&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy reading!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-deeper"&gt;
  &lt;/a&gt;
  Connect deeper
&lt;/h2&gt;

&lt;p&gt;If you liked this article, please &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hit on the like button,
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/gvcv1j"&gt;subscribe to my newsletter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;and let's connect on &lt;a href="https://twitter.com/SandorDargo"&gt;Twitter&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>books</category>
      <category>watercooler</category>
      <category>management</category>
    </item>
    <item>
      <title>Why is my choice Windows !?</title>
      <author>Amirreza karimi </author>
      <pubDate>Sat, 28 Aug 2021 12:07:58 +0000</pubDate>
      <link>https://dev.to/amirrezakarimip/why-is-my-choice-windows-2bc3</link>
      <guid>https://dev.to/amirrezakarimip/why-is-my-choice-windows-2bc3</guid>
      <description>&lt;p&gt;Hello friends, I am Amir Reza Karimi. Today I want to tell my personal reasons for choosing Windows.&lt;/p&gt;

&lt;p&gt;Of course, choosing an operating system is a matter of taste, for example, Linux has good services for programmers, or for example, Windows is a gamer's paradise.&lt;/p&gt;

&lt;p&gt;So in general the choice of operating system depends on two things&lt;/p&gt;

&lt;p&gt;Your job or professionYour taste or liking&lt;/p&gt;

&lt;p&gt;But in this post, we will look at some of the good features of Windows&lt;/p&gt;

&lt;p&gt;First of all, let's look at the explanation of Wikipedia from Windows&lt;/p&gt;

&lt;p&gt;Microsoft Windows (in English : Microsoft Windows) is a group of multi-family operating system graphics , all of which by Microsoft, developed, marketed and sold. This operating system has several versions that have been released to the market since 1985 . Active Windows families include Windows Anti , Windows Embedd, and Windows Phone . Each of these families may include several subsets. (Example: Windows Server ) Older Windows families also include Windows 9x and Windows Mobile . The latest version of Windows, officially released on June 24, 2021,Windows 11 .&lt;/p&gt;

&lt;p&gt;First of all, the Windows operating system is very complete and professional in terms of default programs and apps, which are becoming more complete and more lovable day by day.Voice Assistant! Windows operating system has a professional voice assistant, which is a very useful and interesting feature that in new Android phones, Bixby applications and Google Personal Assistant program (tough competitors) provide this possibility in Android, of course in iOS. It is also possible. Well, now Microsoft has brought this possibility to the desktop in Windows 10Email account Microsoft email account or the same outlook as Google's big competitorOffice : No descriptionDirect connection with Android and iOS. You can connect to your mobile phone with the Euron app. Have a gallery. Open apps on your computer. Send an SMS. Bring it completely to the desktop, which I will teach you in the future 🤗OneDrive File upload space This part of itself is really a reason for choosing Windows OneDrive can eliminate the need for Google Sea or file review cable, for example.Great Windows environment can be a good reason for Menu Start or My Computer which are really professionally designedDedicated browser _ Windows's design eliminates the need for Google Chrome usersWindows is designed by the big company Microsoft, so it can be trustedSupport for Android applications in Windows 11 😍 is the best option for Android and Gimera developersMillions of companies produce Windows software and many apps, for example, can not be installed for Linux and Mac operating systems.Windows gamers paradise! Xbox or Game Bar, etc. were the features of Windows 10 that are available to gamersMost graphics programs are compatible with Windows, such as Adobe products, and similar versions are available for operating systems such as Linux.Popular ! If Windows was bad, why the most widely used operating system?Windows has good features for the login screen and device security.&lt;/p&gt;

&lt;p&gt;The last word&lt;/p&gt;

&lt;p&gt;If you are Windows, you can also explain the reason for choosing Windows in the comments, but if you have another operating system, so be it&lt;/p&gt;

&lt;p&gt;Finally, copying the text is not allowed, and if there is a misspelling or something, count it as a novice&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Introducing image download sites in the production of high quality content</title>
      <author>Amirreza karimi </author>
      <pubDate>Sat, 28 Aug 2021 12:04:19 +0000</pubDate>
      <link>https://dev.to/amirrezakarimip/introducing-image-download-sites-in-the-production-of-high-quality-content-15pc</link>
      <guid>https://dev.to/amirrezakarimip/introducing-image-download-sites-in-the-production-of-high-quality-content-15pc</guid>
      <description>&lt;p&gt;Hello, we are at your service with another training and introduction. Today, we want to introduce websites for you that you can download photos from these websites in good quality for free and for money, but it is necessary to mention that some of these Website in Iran is banned&lt;/p&gt;

&lt;p&gt;Freepik&lt;/p&gt;

&lt;p&gt;This site has two sections, free and paid, you can also download open layer images in vector format from this site for free, download from this site is only possible for its members. And some images are available for free on the free courier site.&lt;/p&gt;

&lt;p&gt;Picjumbo&lt;/p&gt;

&lt;p&gt;On this site you can find a lot of amazing and beautiful images in any subject and title that you do not need to get a license to use on your site.&lt;/p&gt;

&lt;p&gt;Pexels&lt;/p&gt;

&lt;p&gt;This site is one of the largest free image directories   . This site has collected many images from various other sites, so you can have a large and diverse collection of images in one place. So if you do not have much time to search for images when producing blog content or copywriting, this site can be one of the best.&lt;/p&gt;

&lt;p&gt;Stocksnap&lt;/p&gt;

&lt;p&gt;The stocksnap.io site, like other photo download sites, has very good quality images that you can download by subscribing to the site and use it to produce your content.&lt;/p&gt;

&lt;p&gt;Flickr&lt;/p&gt;

&lt;p&gt;In this site, in addition to being able to access high quality photos, you can also share your own photos. You can also edit your images on this site. Of course, you can use the features of this site when you must register on this site. This site is also a social network&lt;/p&gt;

&lt;p&gt;Until the next training, God bless the producer Amir Reza Karimi&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Laravel Tutorial - Create a new page and list the users from the database using Livewire</title>
      <author>Zoltán Szőgyényi</author>
      <pubDate>Sat, 28 Aug 2021 11:37:21 +0000</pubDate>
      <link>https://dev.to/themesberg/laravel-tutorial-create-a-new-page-and-list-the-users-from-the-database-using-livewire-fkd</link>
      <guid>https://dev.to/themesberg/laravel-tutorial-create-a-new-page-and-list-the-users-from-the-database-using-livewire-fkd</guid>
      <description>&lt;p&gt;In this tutorial, I am going to show you how to start building interactive web applications starting from scratch using a &lt;strong&gt;Laravel Admin Dashboard&lt;/strong&gt; and the latest version of &lt;strong&gt;Livewire&lt;/strong&gt;. At the end of this, you will know how to create pages, use and create Laravel components, and customize the appearance of the application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fTpq88fj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/laravel/dashboard-tutorial/laravel-dashboard-tutorial.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fTpq88fj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/laravel/dashboard-tutorial/laravel-dashboard-tutorial.jpg" alt="Laravel Admin Dashboard Tutorial"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me give you a brief introduction to the two main technologies that we will be using in this guide.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#laravel"&gt;
  &lt;/a&gt;
  Laravel
&lt;/h2&gt;

&lt;p&gt;Laravel is a web application framework with expressive, elegant syntax. A web framework provides a structure and starting point for creating your application, allowing you to focus on creating something amazing while we sweat the details.&lt;/p&gt;

&lt;p&gt;Laravel strives to provide an amazing developer experience while providing powerful features such as thorough dependency injection, an expressive database abstraction layer, queues and scheduled jobs, unit and integration testing, and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#livewire"&gt;
  &lt;/a&gt;
  Livewire
&lt;/h2&gt;

&lt;p&gt;Livewire is a full-stack framework for Laravel that makes building dynamic interfaces simple, without leaving the comfort of Laravel.&lt;/p&gt;

&lt;p&gt;Here’s the table of contents for this tutorial:&lt;/p&gt;

&lt;p&gt;In order to save time setting up the project we will use a free and open-source Laravel admin dashboard interface that we’ve built here at Themesberg. It’s based on the Bootstrap 5 CSS framework and uses Laravel and Livewire.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#download-and-install-volt-laravel-dashboard"&gt;
  &lt;/a&gt;
  Download and install Volt Laravel Dashboard
&lt;/h2&gt;

&lt;p&gt;Depending on your personal preferences you can either download the Volt Laravel Dashboard directly from &lt;a href="https://themesberg.com/product/laravel/volt-admin-dashboard-template"&gt;Themesberg for free&lt;/a&gt;, or just clone the project from the &lt;a href="https://github.com/themesberg/volt-laravel-dashboard"&gt;public repository on Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themesberg.com/product/laravel/volt-admin-dashboard-template"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kbegHFub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/laravel/dashboard-tutorial/volt-laravel-admin-dashboard-min.png" alt="Volt Free Admin Laravel Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After you’ve unzipped the file (if you’ve downloaded it), use the terminal and go to the root project folder and follow the instructions.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download the project’s zip then copy and paste volt-dashboard-master folder in your projects folder. Rename the folder to your project’s name;&lt;/li&gt;
&lt;li&gt;Make sure you have Node and Composer locally installed;&lt;/li&gt;
&lt;li&gt;Run the following command in order to download all the project dependencies: &lt;code&gt;composer install&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; in your terminal;&lt;/li&gt;
&lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and update the configurations (mainly the database configuration);&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;php artisan key:generate&lt;/code&gt; in your terminal;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;php artisan migrate --seed&lt;/code&gt; to create the database tables and seed the roles and users tables;&lt;/li&gt;
&lt;li&gt;Finally, run &lt;code&gt;php artisan storage:link&lt;/code&gt; to create the storage symlink (if you are using Vagrant with Homestead for development, remember to ssh into your virtual machine and run the command from there).&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#learn-the-project-structure"&gt;
  &lt;/a&gt;
  Learn the project structure
&lt;/h2&gt;

&lt;p&gt;It’s always a good idea to have a good overview and understanding of the folder structure before starting to code. Allow me to explain some of the folders and what they are for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;public/&lt;/code&gt;: this folder contains the compiled Javascript and CSS files. You can also add assets such as images here;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;resources/&lt;/code&gt;: this folder contains the blade files, the SCSS, CSS and Javascript files that are not compiled;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;node_modules/&lt;/code&gt;: this is the folder where all dependencies will be installed after running npm install;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.gitignore&lt;/code&gt;: here you can add files or folders to be ignored by the git version control system, such as the node_modules folder;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app/Http/&lt;/code&gt;: here are all the Laravel classes corresponding to the blade files.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we’ve broken down the folder structure, let’s start by exploring some of the UI components that you can use with the freshly installed project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#explore-the-bootstrap-ui-components"&gt;
  &lt;/a&gt;
  Explore the Bootstrap UI components
&lt;/h2&gt;

&lt;p&gt;One of the reasons why I chose Volt Laravel Dashboard is because of the vast amount of UI components, sections, and pages that you can choose from to customize and build a good user interface to show the data and actions for your users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://volt-laravel-admin-dashboard.updivision.com/documentation/components/accordions/index.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IDJQdw89--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/laravel/dashboard-tutorial/laravel-ui-components-bootstrap.png" alt="Laravel UI components"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can explore the components of the project by going to the &lt;a href="https://volt-laravel-admin-dashboard.updivision.com/documentation/components/accordions/index.html"&gt;online documentation&lt;/a&gt; and select components such as buttons, accordions, alerts, modals, navbars, and many more.&lt;/p&gt;

&lt;p&gt;This set of UI elements will be very helpful down the line when you will face unique challenges and features that you want to integrate into your application and you can’t find a similar page already built for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-a-new-page-in-laravel"&gt;
  &lt;/a&gt;
  Building a new page in Laravel
&lt;/h2&gt;

&lt;p&gt;After you have explored the UI components, it’s time to show you how you can create a brand new page, add new components to it, register it as a route and add it to the sidebar. You’ll build a page which will show a list of users.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-create-a-new-page"&gt;
  &lt;/a&gt;
  Step 1: create a new page
&lt;/h3&gt;

&lt;p&gt;The first step is to create a new page using Livewire, which makes things a lot easier. Just enter the command &lt;code&gt;php artisan make:livewire UserManagement&lt;/code&gt; and Livewire will make sure to create everything you need, from a migration to blade file and a Laravel class.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-declare-and-register-it-a-route"&gt;
  &lt;/a&gt;
  Step 2: declare and register it a route
&lt;/h3&gt;

&lt;p&gt;Now go to the &lt;code&gt;web.php&lt;/code&gt; in the &lt;code&gt;/routes&lt;/code&gt; directory and register the new page as a route.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::get('/user-management', Users::class)-&amp;gt;name('user-management');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then go in the &lt;code&gt;app.blade.php&lt;/code&gt; file and enter the name of the route in the first array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@if(in_array(request()-&amp;gt;route()-&amp;gt;getName(), ['dashboard','user-management', etc]))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you now go to the page at &lt;code&gt;http://localhost:3000/#/user-management&lt;/code&gt; you will see a blank new page with a sidebar, the navigation, and the footer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-build-the-page-using-bootstrap-5-components"&gt;
  &lt;/a&gt;
  Step 3: build the page using Bootstrap 5 components
&lt;/h3&gt;

&lt;p&gt;Great job! Now that you have created a new page, you’re free to build it however you want it using the UI elements that are provided with the Volt Laravel Dashboard project. The page needs a title, a description, and some breadcrumb elements.&lt;/p&gt;

&lt;p&gt;Add the following block of code in order to create the breadcrumb component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="d-block mb-4 mb-md-0"&amp;gt;
    &amp;lt;nav aria-label="breadcrumb" class="d-none d-md-inline-block"&amp;gt;
        &amp;lt;ol class="breadcrumb breadcrumb-dark breadcrumb-transparent"&amp;gt;
            &amp;lt;li class="breadcrumb-item"&amp;gt;
                &amp;lt;a href="#"&amp;gt;
                    &amp;lt;svg class="icon icon-xxs" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"&amp;gt;
                        &amp;lt;path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"&amp;gt;
                        &amp;lt;/path&amp;gt;
                    &amp;lt;/svg&amp;gt;
                &amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li class="breadcrumb-item"&amp;gt;&amp;lt;a href="#"&amp;gt;Volt&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li class="breadcrumb-item active" aria-current="page"&amp;gt;{{__('Users List')}}&amp;lt;/li&amp;gt;
        &amp;lt;/ol&amp;gt;
    &amp;lt;/nav&amp;gt;
    &amp;lt;h2 class="h4"&amp;gt;{{__('User Management')}}&amp;lt;/h2&amp;gt;
    &amp;lt;p class="mb-0"&amp;gt;{{__('Your user management dashboard template.')}}&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you now head back to the browser, you’ll see that a breadcrumb component, title, and a description has been added to the page.&lt;/p&gt;

&lt;p&gt;Let’s continue by adding a few elements that will let you to search, update, or add new users to the list:&lt;/p&gt;

&lt;p&gt;Add the following block of code in order to create the breadcrumb component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="table-settings mb-4"&amp;gt;
    &amp;lt;div class="row justify-content-between align-items-center"&amp;gt;
        &amp;lt;div class="col-9 col-lg-8 d-md-flex"&amp;gt;
            &amp;lt;div class="input-group me-2 me-lg-3 fmxw-300"&amp;gt;
                &amp;lt;span class="input-group-text"&amp;gt;&amp;lt;svg class="icon icon-xs"
                        x-description="Heroicon name: solid/search" xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"&amp;gt;
                        &amp;lt;path fill-rule="evenodd"
                            d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                            clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;
                    &amp;lt;/svg&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;
                &amp;lt;input wire:model="search" type="text" class="form-control" placeholder="Search users"&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div class="col-3 d-flex"&amp;gt;
                &amp;lt;select wire:model="entries" class="form-select fmxw-100 d-none d-md-inline" id="entries"
                    aria-label="Entries per page"&amp;gt;
                    &amp;lt;option value="10"&amp;gt;10&amp;lt;/option&amp;gt;
                    &amp;lt;option value="25"&amp;gt;25&amp;lt;/option&amp;gt;
                    &amp;lt;option value="50"&amp;gt;50&amp;lt;/option&amp;gt;
                    &amp;lt;option value="100"&amp;gt;100&amp;lt;/option&amp;gt;
                &amp;lt;/select&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great job! Now you’ve added all of the essential elements for the top side of this page. The result should look like the following image in your browser.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-making-use-of-laravel-and-livewire"&gt;
  &lt;/a&gt;
  Step 4: Making use of Laravel and Livewire
&lt;/h3&gt;

&lt;p&gt;Our next step is to implement the table, a very easy task using the already made Livewire component for a table. We will be adding our table heading like this:&lt;/p&gt;

&lt;p&gt;Add the following block of code in order to create the breadcrumb component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;x-slot name="head"&amp;gt;
    &amp;lt;x-table.heading sortable wire:click="sortBy('first_name')"
        :direction="$sortField === 'first_name' ? $sortDirection : null"&amp;gt;{{__('Name')}}
    &amp;lt;/x-table.heading&amp;gt;
    &amp;lt;x-table.heading sortable wire:click="sortBy('role_id')"
        :direction="$sortField === 'role_id' ? $sortDirection : null"&amp;gt;{{__('Role')}}
    &amp;lt;/x-table.heading&amp;gt;
    &amp;lt;x-table.heading sortable wire:click="sortBy('created_at')"
        :direction="$sortField === 'created_at' ? $sortDirection : null"&amp;gt;{{__('Date created')}}
    &amp;lt;/x-table.heading&amp;gt;
    &amp;lt;x-table.heading sortable wire:click="sortBy('status')"
        :direction="$sortField === 'status' ? $sortDirection : null"&amp;gt;{{__('Status')}}
    &amp;lt;/x-table.heading&amp;gt;
    @can('manage-users', auth()-&amp;gt;user())
    &amp;lt;x-table.heading&amp;gt;{{__('Action')}}&amp;lt;/x-table.heading&amp;gt;
    @endcan
&amp;lt;/x-slot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The sorting functionality is taken care of in the &lt;code&gt;Users.php&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;In the body section of the table, instead of hard coding every row and cell, we will be going through each entry of the users table from our database and show our data in a dynamic way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;x-slot name="body"&amp;gt;
    @foreach ($users as $user)
    &amp;lt;x-table.row&amp;gt;
        &amp;lt;x-table.cell&amp;gt;
            &amp;lt;a href="#" class="d-flex align-items-center"&amp;gt;
                &amp;lt;img src="{{$user-&amp;gt;avatarUrl()}}" class="avatar rounded-circle me-3" alt="Avatar"&amp;gt;
                &amp;lt;div class="d-block"&amp;gt;
                    &amp;lt;span class="fw-bold"&amp;gt;{{ $user-&amp;gt;first_name . ' ' . $user-&amp;gt;last_name }}&amp;lt;/span&amp;gt;
                    &amp;lt;div class="small text-gray"&amp;gt;{{ $user-&amp;gt;email }}&amp;lt;/div&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/a&amp;gt;
        &amp;lt;/x-table.cell&amp;gt;
        &amp;lt;x-table.cell&amp;gt;{{ $user-&amp;gt;role-&amp;gt;name }}&amp;lt;/x-table.cell&amp;gt;
        &amp;lt;x-table.cell&amp;gt;{{ $user-&amp;gt;date_for_humans }}&amp;lt;/x-table.cell&amp;gt;
        &amp;lt;x-table.cell&amp;gt;&amp;lt;span class="fw-normal text-{{ $user-&amp;gt;status_color }}"&amp;gt; {{ $user-&amp;gt;status }} &amp;lt;/span&amp;gt;
        &amp;lt;/x-table.cell&amp;gt;
        @can('manage-users', auth()-&amp;gt;user())
        &amp;lt;x-table.cell&amp;gt;
            @can('update', $user)
            @if($user-&amp;gt;id !=1 &amp;amp;&amp;amp; auth()-&amp;gt;user()-&amp;gt;can('update', $user) || auth()-&amp;gt;user()-&amp;gt;can('delete',
            $user))
            @if($user-&amp;gt;id != auth()-&amp;gt;user()-&amp;gt;id)
            &amp;lt;x-button.link&amp;gt;
                @can('update', $user)
                &amp;lt;a class="dropdown-item d-flex align-items-center"
                    href="{{ route('edit-user', ['id' =&amp;gt; $user-&amp;gt;id]) }}"&amp;gt;&amp;lt;span
                        class="fas fa-user-shield me-2"&amp;gt;&amp;lt;/span&amp;gt; {{__('Edit user')}}&amp;lt;/a&amp;gt;
                @endcan
                @can('delete', $user)
                &amp;lt;a onclick="confirm('Are you sure you want to remove the user from this group?') || event.stopImmediatePropagation()"
                    wire:click="delete({{ $user-&amp;gt;id }})"
                    class="dropdown-item text-danger rounded-bottom"&amp;gt;&amp;lt;span
                        class="fas fa-user-times me-2"&amp;gt;&amp;lt;/span&amp;gt;{{__('Delete user')}}&amp;lt;/a&amp;gt;
                @endcan
            &amp;lt;/x-button.link&amp;gt;
            @endif
            @endif
            @endcan
        &amp;lt;/x-table.cell&amp;gt;
        @endcan
    &amp;lt;/x-table.row&amp;gt;
    @endforeach
&amp;lt;/x-slot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result should look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---bOjFq_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/laravel/dashboard-tutorial/volt-laravel-dashboard-tutorial-result.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---bOjFq_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/laravel/dashboard-tutorial/volt-laravel-dashboard-tutorial-result.png" alt="Laravel dashboard tutorial result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations! Now you’ve learned how to build a new page, a data source, and show multiple users using Laravel components and from a data source.&lt;/p&gt;

&lt;p&gt;In the next section I’ll show you how easy it is to change the appearance of the dashboard using Sass variables.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customize-using-sass-variables"&gt;
  &lt;/a&gt;
  Customize using Sass variables
&lt;/h2&gt;

&lt;p&gt;Another useful feature of this dashboard is that you can easily customize the appearance of the user interface by changing the Sass variables for the colors, fonts, spacings, shadows, container, and many more.&lt;/p&gt;

&lt;p&gt;For example, you can go to the &lt;code&gt;resources/scss/volt/_variables.scss&lt;/code&gt; and update the following values:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$primary : #1F2937 !default;
$secondary: #fb503b !default;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then you have to run the command npm run scss in order to compile all the scss files into one new css file that you can then use to style your project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You’ve learned how to install a Laravel project, build a new page, customize the appearance using Sass variables and build the final production files. I hope you learned a lot and that the dashboard will help you with your project and career.&lt;/p&gt;

&lt;p&gt;Before you go, I’d like to introduce you to the premium version of the Volt Laravel Dashboard, which has twice as many components, pages, plugins and a few more features compared to the open source version of it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themesberg.com/product/laravel/volt-pro-admin-dashboard-template"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kbegHFub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://themesberg.s3.us-east-2.amazonaws.com/public/posts/laravel/dashboard-tutorial/volt-laravel-admin-dashboard-min.png" alt="Volt Pro Admin Laravel Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themesberg.com/product/laravel/volt-pro-admin-dashboard-template"&gt;Volt Dashboard PRO Laravel&lt;/a&gt; is a powerful, versatile dashboard which comes with the most commonly used CRUDs in any app: #users, #roles, #items, #categories, #tags. Add in a clean design with over 800 handcrafted UI components and you`ve got an awesome starter pack for building web apps.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://volt-pro-laravel-admin-dashboard.updivision.com/"&gt;Live Preview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://themesberg.com/product/laravel/volt-admin-dashboard-template"&gt;Free version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://themesberg.com/product/laravel/volt-pro-admin-dashboard-template"&gt;Pro version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>laravel</category>
      <category>livewire</category>
      <category>opensource</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Let, Run, Apply, &amp; Also di Kotlin</title>
      <author>alfianandinugraha</author>
      <pubDate>Sat, 28 Aug 2021 11:15:51 +0000</pubDate>
      <link>https://dev.to/alfianandinugraha/let-run-apply-also-di-kotlin-2inb</link>
      <guid>https://dev.to/alfianandinugraha/let-run-apply-also-di-kotlin-2inb</guid>
      <description>&lt;p&gt;Fungsi dari scope function adalah untuk mengelola object menggunakan lambda / fungsi ekstensi. Kegunaan ini adalah agar kode mudah dibaca karena memiliki scope masing-masing. Buat kode class terlebih dahulu untuk nanti dipakai lagi :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;data class&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#jenisjenis"&gt;
  &lt;/a&gt;
  Jenis-jenis
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#let"&gt;
  &lt;/a&gt;
  Let
&lt;/h2&gt;

&lt;p&gt;Let lambda memungkinkan untuk mengelola object sekaligus mengembalikan sesuatu. Let juga memiliki satu parameter yang nantinya juga bisa dialiaskan dengan keyword &lt;code&gt;it&lt;/code&gt;. Contoh kode :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;asus&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Asus"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6_000_000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;asus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="s"&gt;"Name ${product.name}, Price: Rp${product.price}"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hasil output :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q6hLeuvP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpezjoibbsc5qrybzqxi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q6hLeuvP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpezjoibbsc5qrybzqxi.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#run"&gt;
  &lt;/a&gt;
  Run
&lt;/h2&gt;

&lt;p&gt;Lambda ini hampir mirip dengan let yang membedakan adalah lambda ini tidak memiliki parameter jadi untuk mengakses objectnya menggunakan keyword &lt;code&gt;this&lt;/code&gt;. Contoh kode :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;lenovo&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Lenovo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3_000_000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lenovo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;run&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="s"&gt;"Name ${this.name}, Price: Rp${this.price}"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hasil output :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bVBuvmhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yji06ov3l42wp4i4jo6b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bVBuvmhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yji06ov3l42wp4i4jo6b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#also"&gt;
  &lt;/a&gt;
  Also
&lt;/h2&gt;

&lt;p&gt;Also memiliki 1 parameter dan mengembalikan nilai object itu sendiri. Contoh :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;msi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MSI"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5_000_000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;newMsi&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;msi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;also&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hasil Output :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y0yKAZ8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z6amd1cmayg2ljthx3g9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y0yKAZ8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z6amd1cmayg2ljthx3g9.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#apply"&gt;
  &lt;/a&gt;
  Apply
&lt;/h2&gt;

&lt;p&gt;Berbeda dengan sebelumnya, apply hanya mengembalikan nilai Object itu sendiri saja dan tidak memiliki paramater. Jadi untuk mengakses properti nya menggunakan keyword &lt;code&gt;this&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;hp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"HP"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4_000_000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;newHp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hasil Output :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cfXmMpgs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k7ye0qyltgsimgmxldy4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cfXmMpgs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k7ye0qyltgsimgmxldy4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>basic</category>
      <category>oop</category>
    </item>
    <item>
      <title>Git Merge: The Final Guide</title>
      <author>ZigRazor</author>
      <pubDate>Sat, 28 Aug 2021 11:08:43 +0000</pubDate>
      <link>https://dev.to/zigrazor/git-merge-the-final-guide-ldn</link>
      <guid>https://dev.to/zigrazor/git-merge-the-final-guide-ldn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#merging"&gt;
  &lt;/a&gt;
  Merging
&lt;/h2&gt;

&lt;p&gt;Having multiple branches is extremely convenient to keep new changes separated from each other, and to make sure you don't accidentally push unapproved or broken changes to production. Once the changes have been approved, we want to get these changes in our &lt;em&gt;main&lt;/em&gt; branch!&lt;/p&gt;

&lt;p&gt;One way to get the changes from one branch to another is by performing a &lt;code&gt;git merge&lt;/code&gt;! There are two types of merges &lt;em&gt;Git&lt;/em&gt; can perform: a &lt;strong&gt;fast-forward&lt;/strong&gt;, or a &lt;strong&gt;no-fast-forward&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fastforward"&gt;
  &lt;/a&gt;
  Fast-forward
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git merge --ff 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A &lt;strong&gt;fast-forward&lt;/strong&gt; merge can happen when the current branch has no extra commits compared to the branch we’re merging. Git is... lazy and will first try to perform the easiest option: the fast-forward! This type of merge doesn’t create a new commit, but rather merges the commit(s) on the branch we’re merging right in the current branch &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nofastfoward"&gt;
  &lt;/a&gt;
  No-fast-foward
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git merge --no-ff 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not ever your current branch doesn't have any extra commits compared to the branch that you want to merge. If we committed changes on the current branch that the branch we want to merge doesn't have, git will perform a &lt;strong&gt;no-fast-forward&lt;/strong&gt; merge.&lt;/p&gt;

&lt;p&gt;With a &lt;strong&gt;no-fast-forward&lt;/strong&gt; merge, Git creates a new merging commit on the active branch. The commit's parent commits point to both the active branch and the branch that we want to merge!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#merge-conflicts"&gt;
  &lt;/a&gt;
  Merge Conflicts
&lt;/h3&gt;

&lt;p&gt;Although &lt;em&gt;Git&lt;/em&gt; is good at deciding how to merge branches and add changes to files, it cannot always make this decision all by itself. This can happen when the two branches we're trying to merge have changes on the same line in the same file, or if one branch deleted a file that another branch modified, and so on.&lt;/p&gt;

&lt;p&gt;In that case, &lt;em&gt;Git&lt;/em&gt; will ask you to help decide which of the two options we want to keep! Let's say that on both branches, we edited the nineth line of &lt;em&gt;file.txt&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;If we want to merge &lt;em&gt;dev&lt;/em&gt; into &lt;em&gt;master&lt;/em&gt;, this will end up in a merge conflict: which is the correct line? Git can't knows this.&lt;/p&gt;

&lt;p&gt;When trying to merge the branches, &lt;em&gt;Git&lt;/em&gt; will show you where the conflict happens. We can manually remove the changes we don't want to keep, save the changes, add the changed file again, and commit the changes.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>git</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>As a beginner to JavaScript, which stack should I learn first MEAN/MERN ?</title>
      <author>Nawaz Warsi</author>
      <pubDate>Sat, 28 Aug 2021 11:00:28 +0000</pubDate>
      <link>https://dev.to/nawazwarsi761/as-a-beginner-to-javascript-which-stack-should-i-learn-first-mean-mern-4ngh</link>
      <guid>https://dev.to/nawazwarsi761/as-a-beginner-to-javascript-which-stack-should-i-learn-first-mean-mern-4ngh</guid>
      <description></description>
      <category>javascript</category>
      <category>mongodb</category>
      <category>node</category>
      <category>react</category>
    </item>
    <item>
      <title>[Part 4/4] ⚛️ Senior React Coding Interview, By A Professional React Developer 👨‍💻</title>
      <author>Better Coding Academy</author>
      <pubDate>Sat, 28 Aug 2021 10:51:06 +0000</pubDate>
      <link>https://dev.to/bettercodingacademy/part-4-4-senior-react-coding-interview-by-a-professional-react-developer-1gln</link>
      <guid>https://dev.to/bettercodingacademy/part-4-4-senior-react-coding-interview-by-a-professional-react-developer-1gln</guid>
      <description>&lt;p&gt;&lt;strong&gt;About Me:&lt;/strong&gt; I've been a professional web developer for just over 10 years now. I'm currently the lead web development instructor at &lt;a href="https://codebetter.com.au"&gt;Better Coding Academy&lt;/a&gt;, and as part of what I do, I post videos on our YouTube channel at &lt;a href="https://www.youtube.com/c/BetterCodingAcademy"&gt;https://www.youtube.com/c/BetterCodingAcademy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Subscribe for awesome web development content!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here's the final part of the mock React coding interview! I polish off a few loose ends of the reusable table hook, fixing up things such as adding rows, removing rows, and changing &lt;code&gt;pageSize&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I hope you've enjoyed this series! Be sure to check out my channel for many more tutorial series just like this 😄&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9Qt1IfiZjik"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Why I went back to college at age of 44</title>
      <author>Martijn</author>
      <pubDate>Sat, 28 Aug 2021 10:37:12 +0000</pubDate>
      <link>https://dev.to/martijnvann/why-i-went-back-to-college-at-age-of-44-7mb</link>
      <guid>https://dev.to/martijnvann/why-i-went-back-to-college-at-age-of-44-7mb</guid>
      <description>&lt;p&gt;Two weeks ago during a refreshing holiday in Italy, after reading a few books, I felt the urge to move forward.&lt;/p&gt;

&lt;p&gt;I work as a freelance full stack developer for more than 15 years and have a small software company in Skopje that helps me servicing some of my client projects. They do an excellent job!&lt;/p&gt;

&lt;p&gt;Programming is my first love. I love solving problems with code and I still code in my &lt;em&gt;“spare time”&lt;/em&gt; for fun. During the years I built a more than solid foundation in PHP, javascript and all the techniques needed to build, run and maintain complex web applications.&lt;/p&gt;

&lt;p&gt;I never finished any formal education after high school. I got my Propaedeutics Journalism, but never finished it as I did not liked it as much as I liked programming.&lt;/p&gt;

&lt;p&gt;I also like working on business development. But as much as I like it: &lt;em&gt;I’m not very good at it&lt;/em&gt;. I never really worked in other companies, since I started working as a freelance / remote developer early on in my working career. And I never had a real business education as well, so most company stuff went with trial and error.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t get me wrong.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I make a more than a decent income from coding and I’m really happy at where I am now, even with minimal formal education.&lt;/p&gt;

&lt;p&gt;I'm even more fortunate that I can provide a living with a skill that can be learned pretty much for free online.&lt;/p&gt;

&lt;p&gt;But I sometimes have the feeling I have gaps in my knowledge. Both in technical as in managing a business. Some people have the natural talent to make gold from everything they touch. I have to work for it. And no shame in that!&lt;/p&gt;

&lt;p&gt;I thought about doing some more formal education several times, but as live came in the way, I never pulled the trigger.&lt;/p&gt;

&lt;p&gt;Last summer holiday I finally managed to read some books.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rich dad, poor dad&lt;/strong&gt; from &lt;em&gt;Robert T. Kiyosaki&lt;/em&gt; was one of them. While becoming a millionaire is not really one of my priorities, the way he reasons about income, knowledge and assets and liabilities, I realized I needed more knowledge and change a few things in how I think in time and money. Wish I read that book 20 years ago. I can highly recommend it.&lt;/p&gt;

&lt;p&gt;Another book was &lt;strong&gt;What they teach you at Harvard Business School&lt;/strong&gt; where &lt;em&gt;Philip Delves Broughton&lt;/em&gt; went back to school after a career in journalism and while having a family. The book triggered me to also getting more business knowledge and wanting to do an MBA in The Netherlands too.&lt;/p&gt;

&lt;p&gt;But…. To enroll to an official MBA education, in The Netherlands, you need a Bachelor degree. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Which I don’t have.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Yet.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The path of least resistance to get a Bachelor degree for me, is getting one in IT. I hope… And this will also be an excellent way to broaden my current knowledge about development and IT.&lt;/p&gt;

&lt;p&gt;The study will be part-time: classes on 2 evenings, some hours of self-study. This in addition to my family life, day job(s) and mild fitness addiction.&lt;/p&gt;

&lt;p&gt;Hobbies like gaming and playing bass, will be put on ice for a while.&lt;/p&gt;

&lt;p&gt;While maybe the path of least resistance, it is not the shortest path. &lt;strong&gt;Four years&lt;/strong&gt; before getting my bachelor, is quite a commitment. It will be a marathon. &lt;/p&gt;

&lt;p&gt;And I know from experience that starting something is easy. But actually, finish something is way harder.&lt;/p&gt;

&lt;p&gt;But even when I don’t finish the study, the upsides will be there. I will learn new languages, new tools, new ways of thinking and approaching problems. I will get to know a ton of new people. And I have found a new way to challenge myself.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The ultimate goal - of course - is to get the degree.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;This new adventure is also a new trigger to start blogging and add more consistent content to twitter. There are tons of people that do an outstanding job in teaching programming, selling courses, running businesses and blog about it. Much better than I would be able to.&lt;/p&gt;

&lt;p&gt;But to keep myself accountable and to share my experiences as an adult programmer following a bachelor study in IT, I will share my wins – and bloopers – online.&lt;/p&gt;

&lt;p&gt;Maybe it will inspire you to start an education at later age as well, as you were even thinking 30-ish is too old to start a study.&lt;/p&gt;

&lt;p&gt;So, if you want to see how this will evolve, or if you can help me finish this adventure with an occasional like or encouraging comment, please follow me on Twitter where I will post the smaller experiences, wins and bloopers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/martijnvann"&gt;Follow my adventure on Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>education</category>
      <category>business</category>
      <category>health</category>
    </item>
    <item>
      <title>Github 101</title>
      <author>rkganeshan</author>
      <pubDate>Sat, 28 Aug 2021 10:13:17 +0000</pubDate>
      <link>https://dev.to/rkganeshan/github-101-hda</link>
      <guid>https://dev.to/rkganeshan/github-101-hda</guid>
      <description>&lt;p&gt;Hey, if you are absolute beginner or just started to code recently, and have seen your peers showcasing their projects and works in platforms like GitHub, then you are at the right spot!&lt;/p&gt;

&lt;p&gt;I'll let you know some quick easy peasy tools online where in you can code and "PUSH" your code to github by just a click.&lt;br&gt;
Also, I will let you know how to push your entire codebase from your system to GitHub.&lt;/p&gt;

&lt;p&gt;(Now here I am assuming that you have created an account on GitHub, if not - do it first, it's simple , create an account directly from your Google Account.)&lt;/p&gt;

&lt;p&gt;01 ) If you are quite new to web dev and just trying your hands on experimenting a few stuffs here and there, then try using platforms such as CodeSandbox and Repl.&lt;br&gt;
All you need to is , go to the github icon, connect your sandbox to your github by providing your credentials and after authorization(this is just a one time step) you just need to type out your repository name, a few words about your project and hit the Create button. Similar steps for Repl too. Isn't that easy?&lt;br&gt;
Now you are all set to show case your project.&lt;br&gt;
Bonus here is: You can copy the URL from the output sample browser in your sandbox, go to your Github repo, and in the about section,paste this link under the wesite input field.&lt;br&gt;
So, now your work is all set, pushed into github and your peers can also directly view your project up and running from the URL that you had provided from the Sandbox!&lt;/p&gt;

&lt;p&gt;02) If you want to push your project from your System to Github, download GitBash terminal, it helps you to do this in no time.&lt;br&gt;
Now follow the steps:&lt;br&gt;
Step 0: Open the GitBash terminal in the directory wherein your desired project folder(s) exists.&lt;br&gt;
Now type the following commands.&lt;br&gt;
Step 01:git init&lt;br&gt;
Step 02:git add   &lt;br&gt;
Step 03:git commit -m "Your message about the commit"&lt;br&gt;
(Now go to GitHub, under repositories create a new Repo by hitting the New button and provide the name of your repository and give some description about it, and you may also set you repo to private or public)&lt;br&gt;
Step 04:git remote add origin &lt;a href="https://github.com/yourUsername/yourRepository.git"&gt;https://github.com/yourUsername/yourRepository.git&lt;/a&gt;&lt;br&gt;
Step 05:git push -u origin master&lt;br&gt;
Step 06:git push origin master&lt;br&gt;
That's it, now you can check your repo(give a refresh maybe), and in the master branch you would be able to see the changes.&lt;br&gt;
Similar to 01) if you want to host it live, we'll that's for some other day , for sure!&lt;/p&gt;

</description>
      <category>github</category>
      <category>beginners</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Terraform Modules: Atomic Design</title>
      <author>Matheus Cunha</author>
      <pubDate>Sat, 28 Aug 2021 10:10:48 +0000</pubDate>
      <link>https://dev.to/macunha/terraform-modules-atomic-design-3i7m</link>
      <guid>https://dev.to/macunha/terraform-modules-atomic-design-3i7m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;Following &lt;a href="https://pragprog.com/titles/tpp20/the-pragmatic-programmer-20th-anniversary-edition/"&gt;The Pragmatic Programmer&lt;/a&gt; mantra, I do my best to ...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Learn at least one new language every year.&lt;/strong&gt; Different languages solve the same problems in different ways. By learning several different approaches, you can help broaden your thinking and avoid getting stuck in a rut.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not necessarily to show it off or to be capable of talking about random technologies, but to expand and train my problem-solving skills, to get new perspectives when approaching a challenge.&lt;/p&gt;

&lt;p&gt;We might not notice it but when we learn (or have learned) to code we aren't just learning to type some characters that a compiler/interpreter can understand, it is a new way of thinking, a new way of breaking down solutions (into sequential steps).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It doesn't matter whether you ever use any of these technologies on a project, or even whether you put them on your resume. The process of learning will expand your thinking, opening you to new possibilities and new ways of doing things.&lt;br&gt;
The cross-pollination of ideas is important;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As someone who works intensively with infrastructure components (servers, databases, Kubernetes, CI/CD, etc) I aimed for something completely different this year. Something that stands on &lt;em&gt;a whole different spectrum&lt;/em&gt; of the system, this year I decided to learn &lt;a href="https://flutter.dev/"&gt;Flutter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In-a-nutshell, Flutter is a better React Native. A framework that enables implementation of GUI applications for multiple platforms with a single code base.&lt;/p&gt;

&lt;p&gt;Then it reminded me a discussion I had with a friend in the past about React components and the &lt;a href="https://bradfrost.com/blog/post/atomic-web-design/"&gt;Atomic Design&lt;/a&gt; methodology, which helps to structure web components into modules.&lt;/p&gt;

&lt;p&gt;In the Atomic Design methodology, the granularity of modules is distinguished by using chemistry inspired names: atoms, molecules and organisms.&lt;/p&gt;

&lt;p&gt;Then the connection of the ideas from&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pragmatic Programmer's cross-pollination to&lt;/li&gt;
&lt;li&gt;Atomic Design (on Flutter components) to&lt;/li&gt;
&lt;li&gt;Terraform modules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;came almost like a thunderbolt, striking me with this insight when I was working with a huge legacy Terraform code base refactoring with lots of code duplication (read: copy+paste, "we fix it later", then the author quits the company and&lt;br&gt;
never fix anything).&lt;/p&gt;

&lt;p&gt;Although initially proposed as a Web UI methodology, Infrastructure as Code tools such as Terraform that makes heavy usage of modules can benefit from Atomic Design to improve its code reusability and massively reduce duplication.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#details"&gt;
  &lt;/a&gt;
  Details
&lt;/h2&gt;

&lt;p&gt;The Atomic Design methodology proposes five distinct levels, listed from the finest to the thickest:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Atom;&lt;/li&gt;
&lt;li&gt; Molecules;&lt;/li&gt;
&lt;li&gt; Organisms;&lt;/li&gt;
&lt;li&gt; Templates;&lt;/li&gt;
&lt;li&gt; Pages.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;However, to extract the gist, we'll only be focusing on Atoms, Molecules, and Organisms (from 1. to 3.). Templates and Pages are too domain-specific focused on Web UI development.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#atoms"&gt;
  &lt;/a&gt;
  Atoms
&lt;/h3&gt;

&lt;p&gt;Atoms represent the finest grain in terms of granularity in the design. When referring specifically to its implementation in Terraform a &lt;code&gt;resource&lt;/code&gt; and a small scoped single-purpose &lt;code&gt;module&lt;/code&gt; could be used interchangeably.&lt;/p&gt;

&lt;p&gt;Sometimes the idea of turning a simple resource into a module makes sense to ease parameterization and reusability, especially when it is necessary to parse inputs. Although, due to its extreme limited scope it might not look attractive&lt;br&gt;
to convert the &lt;code&gt;resource&lt;/code&gt; into a &lt;code&gt;module&lt;/code&gt; at first sight, on the long run it pays off to do so in order to achieve scalability and reproducibility.&lt;/p&gt;

&lt;p&gt;e.g.:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="s2"&gt;"aws_route53_zone"&lt;/span&gt; &lt;span class="s2"&gt;"default"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;zone_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zone_id&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zone_name&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_route53_record"&lt;/span&gt; &lt;span class="s2"&gt;"default"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;zone_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aws_route53_zone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zone_id&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;

  &lt;span class="nx"&gt;ttl&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ttl&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;record_type&lt;/span&gt;

  &lt;span class="nx"&gt;records&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;records&lt;/span&gt;

  &lt;span class="nx"&gt;dynamic&lt;/span&gt; &lt;span class="s2"&gt;"alias"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;for_each&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alias&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
      &lt;span class="nx"&gt;zone_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;try&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zone_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aws_route53_zone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zone_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="nx"&gt;evaluate_target_health&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lookup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"evaluate_target_health"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, even though &lt;code&gt;aws_route53_record&lt;/code&gt; is a simple resource that might feel too narrow in scope to write a module, the implementation of the module allows to bundle the AWS Route53 Zone data source together, which helps to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; provide a simpler contract by allowing the usage of &lt;code&gt;zone_name&lt;/code&gt; alone;&lt;/li&gt;
&lt;li&gt; validate the &lt;code&gt;zone_name&lt;/code&gt; input, ensuring that a given &lt;code&gt;zone_name&lt;/code&gt; corresponds to an actual &lt;strong&gt;existing and valid&lt;/strong&gt; AWS resource;&lt;/li&gt;
&lt;li&gt; same goes to &lt;code&gt;zone_id&lt;/code&gt;, which will feel (and oftentimes, be) redundant, &lt;em&gt;when&lt;/em&gt; specified as an input Terraform will read the data from AWS API ensuring consistency.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;e.g.:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;"awesome_dns_fqdn"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"path/to/modules/atoms/aws_route53_record"&lt;/span&gt;
  &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 1.0"&lt;/span&gt;

  &lt;span class="nx"&gt;name&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"record.example.com"&lt;/span&gt;
  &lt;span class="nx"&gt;zone_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"example.com."&lt;/span&gt;

  &lt;span class="nx"&gt;record_type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"A"&lt;/span&gt;
  &lt;span class="nx"&gt;records&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"1.2.3.4"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hence, resources and modules are sometimes interchangeable as they deliver the same outcome for the finest resources' granularity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#molecules"&gt;
  &lt;/a&gt;
  Molecules
&lt;/h3&gt;

&lt;p&gt;When groups of atoms are bounded together, they create a molecule which is the smallest fundamental unit of a compound.&lt;/p&gt;

&lt;p&gt;Contrary to the original Atomic Design for Web UI, in Terraform, Atoms are useful on their own. However, the usage of atoms comes with a high price on scalability: code duplication. Actually, duplication is an understatement, it is more like code exponentiation (more on this later).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#implementation-example"&gt;
  &lt;/a&gt;
  Implementation example
&lt;/h4&gt;

&lt;p&gt;Suppose we are creating a public facing API Gateway that needs a DNS record.&lt;/p&gt;

&lt;p&gt;Let's compose it with the previous example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="s2"&gt;"aws_route53_zone"&lt;/span&gt; &lt;span class="s2"&gt;"default"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zone_name&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;"awesome_api_gateway_certificate"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;source&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"terraform-aws-modules/acm/aws"&lt;/span&gt;
  &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; v3.0"&lt;/span&gt;

  &lt;span class="nx"&gt;domain_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domain_name&lt;/span&gt;
  &lt;span class="nx"&gt;zone_id&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aws_route53_zone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zone_id&lt;/span&gt;

  &lt;span class="nx"&gt;wait_for_validation&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;"awesome_api_gateway"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"terraform-aws-modules/apigateway-v2/aws"&lt;/span&gt;
  &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 1.0"&lt;/span&gt;

  &lt;span class="nx"&gt;name&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api_gateway_name&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api_gateway_description&lt;/span&gt;
  &lt;span class="nx"&gt;protocol_type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"HTTP"&lt;/span&gt;

  &lt;span class="nx"&gt;cors_configuration&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;allow_headers&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="s2"&gt;"content-type"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"x-amz-date"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"authorization"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"x-api-key"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"x-amz-security-token"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"x-amz-user-agent"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;allow_methods&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;allow_origins&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;# Custom domain&lt;/span&gt;
  &lt;span class="nx"&gt;domain_name&lt;/span&gt;                 &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domain_name&lt;/span&gt;
  &lt;span class="nx"&gt;domain_name_certificate_arn&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;awesome_api_gateway_certificate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;acm_certificate_arn&lt;/span&gt;

  &lt;span class="c1"&gt;# Routes and integrations&lt;/span&gt;
  &lt;span class="nx"&gt;integrations&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api_gateway_integrations&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;"awesome_dns_fqdn"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;source&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"path/to/modules/atoms/aws_route53_record"&lt;/span&gt;
  &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 1.0"&lt;/span&gt;

  &lt;span class="nx"&gt;name&lt;/span&gt;    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domain_name&lt;/span&gt;
  &lt;span class="nx"&gt;zone_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aws_route53_zone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zone_id&lt;/span&gt;

  &lt;span class="nx"&gt;record_type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"CNAME"&lt;/span&gt;
  &lt;span class="nx"&gt;alias&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;awesome_api_gateway&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apigatewayv2_domain_name_configuration&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;target_domain_name&lt;/span&gt;
    &lt;span class="nx"&gt;zone_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;awesome_api_gateway&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apigatewayv2_domain_name_configuration&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;hosted_zone_id&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This helps illustrating an example in which the &lt;code&gt;aws_route53_record&lt;/code&gt; atom could be easily replaced with its equivalent resource and it would still provide the &lt;strong&gt;same&lt;/strong&gt; outcome.&lt;/p&gt;

&lt;p&gt;Commonly it is possible to use &lt;code&gt;module&lt;/code&gt; and &lt;code&gt;resource&lt;/code&gt; interchangeably as Atoms, the decision of whether or not to implement a &lt;code&gt;module&lt;/code&gt; is ultimately defined by the need of parsing and/or validating the inputs (variables).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#usage-example"&gt;
  &lt;/a&gt;
  Usage example
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;"awesome_lambda"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;source&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"path/to/modules/molecules/aws_lambda_function"&lt;/span&gt;
  &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 1.0"&lt;/span&gt;

  &lt;span class="nx"&gt;function_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"awesome"&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"An Awesome lambda function for the Awesome API Gateway"&lt;/span&gt;
  &lt;span class="nx"&gt;handler&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"index.lambda_handler"&lt;/span&gt;
  &lt;span class="nx"&gt;runtime&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"python3.8"&lt;/span&gt;

  &lt;span class="c1"&gt;# Incomplete implementation, don't use this on production&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;"another_awesome_lambda"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;source&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"path/to/modules/molecules/aws_lambda_function"&lt;/span&gt;
  &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 1.0"&lt;/span&gt;

  &lt;span class="nx"&gt;function_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"awesome"&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"An Awesome lambda function for the Awesome API Gateway"&lt;/span&gt;
  &lt;span class="nx"&gt;handler&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"index.lambda_handler"&lt;/span&gt;
  &lt;span class="nx"&gt;runtime&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"python3.8"&lt;/span&gt;

  &lt;span class="c1"&gt;# Incomplete implementation, don't use this on production&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;"awesome_api_gateway"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"path/to/modules/molecules/aws_api_gateway"&lt;/span&gt;
  &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 1.0"&lt;/span&gt;

  &lt;span class="nx"&gt;domain_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"record.example.com"&lt;/span&gt;
  &lt;span class="nx"&gt;zone_name&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"example.com."&lt;/span&gt;

  &lt;span class="nx"&gt;api_gateway_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"awesome-api-gateway"&lt;/span&gt;
  &lt;span class="nx"&gt;api_gateway_description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"An Awesome API Gateway"&lt;/span&gt;

  &lt;span class="nx"&gt;api_gateway_integrations&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"POST /"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;lambda_arn&lt;/span&gt;             &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;awesome_lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;function_arn&lt;/span&gt;
      &lt;span class="nx"&gt;payload_format_version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"2.0"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="s2"&gt;default"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;lambda_arn&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;another_awesome_lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;function_arn&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you probably have already realized, when the level of abstraction goes up (e.g. from atom to molecule) the module implementation is in itself a good implementation example (i.e. as in &lt;a href="https://github.com/terraform-aws-modules/terraform-aws-lambda/blob/master/main.tf"&gt;community modules examples&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;They help to self-document the usage and implementation of a given module and through generic implementations it allows us to have multiple molecules implementing multiple distinct use-cases. e.g.:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Public API Gateway with DNS record + TLS certificate;&lt;/li&gt;
&lt;li&gt; Public API Gateway v1, no DNS record;&lt;/li&gt;
&lt;li&gt; Private API Gateway.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Why would we chose to implement multiple times the Atom modules in order to create multiple distinct use-cases? We are getting closer to the &lt;em&gt;code exponentiation&lt;/em&gt; problem and solution proposal. Can you feel it?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#organisms"&gt;
  &lt;/a&gt;
  Organisms
&lt;/h3&gt;

&lt;p&gt;Going further, the &lt;a href="#usage-example"&gt;example of composition for molecules&lt;/a&gt; can have its hard-coded values turned into variables in order to compose an Organism, which can facilitate the implementation of the same definition across different environments. Thus, achieving reproducibility as well as the &lt;a href="https://12factor.net/dev-prod-parity"&gt;Factor X.&lt;/a&gt; of the Twelve Factor App.&lt;/p&gt;

&lt;p&gt;However, it is important to note that the level of abstraction between Organisms and Molecules can be easily confused or misunderstood. Generally speaking, as a&lt;br&gt;
rule of thumb an Organism is the composition of Molecules that allow parameterization for business or domain-specific logic (e.g. the actual &lt;code&gt;awesome_api&lt;/code&gt; configuration).&lt;br&gt;
Therefore, in comparison with the previous, Organisms (usually) have a lower level of generalization since they are business-specialized modules.&lt;/p&gt;

&lt;p&gt;Iterating over our implementation example, the Organism would implement the &lt;code&gt;awesome_api&lt;/code&gt;, creating the following resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Lambda function;&lt;/li&gt;
&lt;li&gt;AWS API Gateway;&lt;/li&gt;
&lt;li&gt;TLS Certificate on AWS ACM;&lt;/li&gt;
&lt;li&gt;DNS record on AWS Route53.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By implementing the previous examples as organisms we:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; reduce the amount of boilerplate code;&lt;/li&gt;
&lt;li&gt; foster reusability of modules;&lt;/li&gt;
&lt;li&gt; provide a simple interface for non-operators to manage TF code.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When you sum it all up, you will notice that it is &lt;strong&gt;all about autonomy&lt;/strong&gt; and "DevOps" through encouragement of self-service Ops. One wouldn't need to know a lot about Terraform to grab a module and pass some parameters to it, followed by&lt;br&gt;
a code review process Operators and Software Developers can manage the Infrastructure in harmony, &lt;strong&gt;together&lt;/strong&gt;. (:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#code-exponentiation-what"&gt;
  &lt;/a&gt;
  Code Exponentiation? What?
&lt;/h3&gt;

&lt;p&gt;Read that as a dramatization of the &lt;a href="https://en.wikipedia.org/wiki/Duplicate%5Fcode"&gt;"code duplication"&lt;/a&gt; term.&lt;/p&gt;

&lt;p&gt;When it comes to Infrastructure as Code, there is no easy way around the jungle of resources that grows over time. Fast pacing tech companies are "moving fast and breaking things", oftentimes the Operators are worried about a massive&lt;br&gt;
amount of challenges at once: keep the servers up and running, with a consistent response time, low error rate, and all that &lt;a href="https://sre.google/sre-book/table-of-contents/"&gt;playbook from Google's SRE wisdom&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All things considered, a good Infrastructure as Code design is generally a first-world problem. However, as the time passes it evolves into a real issue that slows down the implementation of resources as code. Either that or there&lt;br&gt;
will be a &lt;strong&gt;huge ton&lt;/strong&gt; of copy+paste to keep up with the pace, followed by a routine of find+replace when changes are applied, &lt;em&gt;then&lt;/em&gt; harder to track pull requests and slower code reviews.&lt;/p&gt;

&lt;p&gt;Lets take our &lt;code&gt;awesome_api&lt;/code&gt; example and scale it up to multiple environments followed by a second &lt;code&gt;awesome_api&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── development
│   ├── an-awesome-api
│   │   └── main.tf
│   └── another-awesome-api
│       └── main.tf
├── staging
│   ├── an-awesome-api
│   │   └── main.tf
│   └── another-awesome-api
│       └── main.tf
└── production
    ├── an-awesome-api
    │   └── main.tf
    └── another-awesome-api
        └── main.tf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to replicate the configuration and ensure consistency, the following is way simpler to implement (and review) than copy+paste huge chunks of Terraform definitions&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;"awesome_api"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"path/to/modules/organisms/aws_lambda_with_api_gateway"&lt;/span&gt;
  &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 1.0"&lt;/span&gt;

  &lt;span class="nx"&gt;domain_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"record.example.com"&lt;/span&gt;
  &lt;span class="nx"&gt;zone_name&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"example.com."&lt;/span&gt;

  &lt;span class="nx"&gt;lambda_functions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="c1"&gt;# Index 0 -- An Awesome Lambda Function, used for POST&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;name&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"an-awesome"&lt;/span&gt;
      &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"An Awesome lambda function for the Awesome API Gateway"&lt;/span&gt;
      &lt;span class="nx"&gt;handler&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"an_awesome.lambda_handler"&lt;/span&gt;
      &lt;span class="nx"&gt;runtime&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"python3.8"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="c1"&gt;# Index 1 -- Another Awesome Lambda Function, used as $default&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;name&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"another-awesome"&lt;/span&gt;
      &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Another Awesome lambda function for the Awesome API Gateway"&lt;/span&gt;
      &lt;span class="nx"&gt;handler&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"another_awesome.lambda_handler"&lt;/span&gt;
      &lt;span class="nx"&gt;runtime&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"python3.8"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="nx"&gt;api_gateway_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"awesome-api-gateway"&lt;/span&gt;
  &lt;span class="nx"&gt;api_gateway_description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"An Awesome API Gateway"&lt;/span&gt;

  &lt;span class="nx"&gt;api_gateway_integrations&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"POST /"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;lambda_function_index&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
      &lt;span class="nx"&gt;payload_format_version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"2.0"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="s2"&gt;default"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;lambda_function_index&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;At the end of the day we get an ugly Terraform state containing many&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.something.module.something_else.module.yet_another_thing...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But the productivity boost gained by merging modules based on context is a worth investment. Especially for huge Terraform repositories with multiple teams collaborating and managing a lot of resources.&lt;/p&gt;

&lt;p&gt;Cross-team collaboration is fostered by applying the Atomic Design methodology for Terraform modules, code reusability becomes an important factor over copy+paste and the repository gravitates towards the &lt;a href="https://en.wikipedia.org/wiki/Don%27t%5Frepeat%5Fyourself"&gt;DRY principle&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#same-post-different-places"&gt;
  &lt;/a&gt;
  Same post, different places
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.reddit.com/r/Terraform/comments/pd708z/terraform_modules_atomic_design/"&gt;Reddit r/Terraform post: Terraform Modules: Atomic Design&lt;/a&gt;&lt;/p&gt;

</description>
      <category>terraform</category>
      <category>devops</category>
      <category>infrastructureascode</category>
      <category>design</category>
    </item>
  </channel>
</rss>
