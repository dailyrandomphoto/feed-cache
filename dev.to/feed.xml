<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What is Parcel JS ? 📦</title>
      <author>Mayank Kumar</author>
      <pubDate>Mon, 16 Aug 2021 06:18:36 +0000</pubDate>
      <link>https://dev.to/mayank0508/what-is-parcel-js-4bfj</link>
      <guid>https://dev.to/mayank0508/what-is-parcel-js-4bfj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#first-of-all-we-will-start-by-understanding-what-is-a-module-bundler-"&gt;
  &lt;/a&gt;
  First of all we will start by understanding &lt;em&gt;What is a Module Bundler ?&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;A module bundler is a tool that takes pieces of JavaScript and their dependencies and bundles them into a single file, usually for use in the browser. You may have used tools such as Browserify, Webpack, Rollup or one of many others.&lt;/p&gt;

&lt;p&gt;Today we will only be discussing about &lt;strong&gt;Parcel JS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/VVn7hZqr5gYmeLl6fq/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/VVn7hZqr5gYmeLl6fq/giphy-downsized.gif" alt="gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-parcel-js-and-why-should-we-use-it-over-webpack-or-rollup-"&gt;
  &lt;/a&gt;
  What is Parcel JS and why should we use it over Webpack or Rollup ??
&lt;/h2&gt;

&lt;p&gt;Parcel is a web application bundler, differentiated by its developer experience. It offers blazing fast performance utilizing multicore processing, and requires zero configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nb"&gt;global&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;parcel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;bundler&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Many front-end developers have become frustrated with some of the complexities involved with building web apps today. It’s pretty standard practice to include some kind of build or bundling tool in a front-end workflow, thus many developers have looked into using a front-end tool like webpack/Rollup/Parcel.&lt;/p&gt;

&lt;p&gt;But the learning curve for a tool like webpack is steep. Getting started with webpack isn’t easy due to its complex configurations. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/26gR0YFZxWbnUPtMA/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/26gR0YFZxWbnUPtMA/giphy-downsized.gif" alt="gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-is-where-parcel-js-kicks-in-"&gt;
  &lt;/a&gt;
  &lt;em&gt;This is where Parcel JS Kicks in !!! 🚀&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;Parcel.js is exactly what many newbie developers want, A simple, low-configuration bundler that you can get up and running with quickly without much hustle in learning the tool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qdADs1Hb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pv4s49m6h9o3vm913cbn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qdADs1Hb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pv4s49m6h9o3vm913cbn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-you-want-to-go-in-depth-about-parcel-js-and-how-to-use-it-in-your-project-check-this-documentation-out-form-is-official-website"&gt;
  &lt;/a&gt;
  &lt;em&gt;If you want to go in depth about Parcel JS and how to use it in your project check this documentation out form is official website&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://parceljs.org/getting_started.html"&gt;Parcel JS 📦🚀&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meme:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DUIi-ypq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqidamj2bs4rpxu0zvou.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DUIi-ypq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqidamj2bs4rpxu0zvou.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#happy-coding"&gt;
  &lt;/a&gt;
  HAPPY CODING 🚀🥂
&lt;/h1&gt;

</description>
      <category>javascript</category>
      <category>webpack</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>JavaScript Weak Set (Dev Docs Breakdown)</title>
      <author>Clean Code Studio</author>
      <pubDate>Mon, 16 Aug 2021 05:42:54 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/javascript-weak-set-dev-docs-breakdown-22ch</link>
      <guid>https://dev.to/cleancodestudio/javascript-weak-set-dev-docs-breakdown-22ch</guid>
      <description>&lt;h2&gt;
  &lt;a href="#javascript-weakset-devdocs"&gt;
  &lt;/a&gt;
  JavaScript / WeakSet — DevDocs
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#weakset"&gt;
  &lt;/a&gt;
  WeakSet
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;WeakSet&lt;/code&gt; object lets you store weakly held &lt;em&gt;objects&lt;/em&gt; in a collection.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;WeakSet&lt;/code&gt; objects are collections of objects. Just as with &lt;a href="https://devdocs.io/javascript//set"&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;s, each object in a &lt;code&gt;WeakSet&lt;/code&gt; may occur only once; all objects in a &lt;code&gt;WeakSet&lt;/code&gt;'s collection are unique.&lt;/p&gt;

&lt;p&gt;The main differences to the &lt;a href="https://devdocs.io/javascript//set"&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; object are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;WeakSet&lt;/code&gt;s are collections of &lt;strong&gt;objects only&lt;/strong&gt;. They cannot contain arbitrary values of any type, as &lt;a href="https://devdocs.io/javascript//set"&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;s can.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;WeakSet&lt;/code&gt; is &lt;em&gt;weak&lt;/em&gt;, meaning references to objects in a &lt;code&gt;WeakSet&lt;/code&gt; are held &lt;em&gt;weakly&lt;/em&gt;. If no other references to an object stored in the &lt;code&gt;WeakSet&lt;/code&gt; exist, those objects can be garbage collected.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This also means that there is no list of current objects stored in the collection. &lt;code&gt;WeakSets&lt;/code&gt; are not enumerable.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#use-case-detecting-circular-references"&gt;
  &lt;/a&gt;
  Use case: Detecting circular references
&lt;/h3&gt;

&lt;p&gt;Functions that call themselves recursively need a way of guarding against circular data structures by tracking which objects have already been processed.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;WeakSet&lt;/code&gt;s are ideal for this purpose:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Execute a callback on everything stored inside an object&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;execRecursively&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;_refs&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;_refs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;_refs&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;WeakSet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="c1"&gt;// Avoid infinite recursion&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;_refs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;_refs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;execRecursively&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;subject&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;_refs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Foo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baz&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Circular reference!&lt;/span&gt;
&lt;span class="nx"&gt;execRecursively&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, a &lt;code&gt;WeakSet&lt;/code&gt; is created on the first run, and passed along with every subsequent function call (using the internal &lt;code&gt;_refs&lt;/code&gt; parameter).&lt;/p&gt;

&lt;p&gt;The number of objects or their traversal order is immaterial, so a &lt;code&gt;WeakSet&lt;/code&gt; is more suitable (and performant) than a &lt;a href="https://devdocs.io/javascript//set"&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; for tracking object references, especially if a very large number of objects is involved.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#constructor"&gt;
  &lt;/a&gt;
  Constructor
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://devdocs.io/javascript//weakset/weakset"&gt;&lt;code&gt;WeakSet()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Creates a new &lt;code&gt;WeakSet&lt;/code&gt; object.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#instance-methods"&gt;
  &lt;/a&gt;
  Instance methods
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://devdocs.io/javascript//weakset/add"&gt;&lt;code&gt;WeakSet.prototype.add(value)&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Appends &lt;code&gt;value&lt;/code&gt; to the &lt;code&gt;WeakSet&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdocs.io/javascript//weakset/delete"&gt;&lt;code&gt;WeakSet.prototype.delete(value)&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Removes &lt;code&gt;value&lt;/code&gt; from the &lt;code&gt;WeakSet&lt;/code&gt;. &lt;code&gt;WeakSet.prototype.has(value)&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; afterwards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdocs.io/javascript//weakset/has"&gt;&lt;code&gt;WeakSet.prototype.has(value)&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Returns a boolean asserting whether &lt;code&gt;value&lt;/code&gt; is present in the &lt;code&gt;WeakSet&lt;/code&gt; object or not.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#using-the-weakset-object"&gt;
  &lt;/a&gt;
  Using the WeakSet object
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ws&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;WeakSet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;

&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// true&lt;/span&gt;

&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// removes foo from the set&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// false, foo has been removed&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// true, bar is retained&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that &lt;code&gt;foo !== bar&lt;/code&gt;. While they are similar objects, &lt;em&gt;they are not &lt;strong&gt;the same object&lt;/strong&gt;&lt;/em&gt;. And so they are both added to the set.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>6 Awesome CSS Layout Generators</title>
      <author>Palash Mondal</author>
      <pubDate>Mon, 16 Aug 2021 05:42:07 +0000</pubDate>
      <link>https://dev.to/palashmon/6-awesome-css-layout-generators-pbc</link>
      <guid>https://dev.to/palashmon/6-awesome-css-layout-generators-pbc</guid>
      <description>&lt;p&gt;Hi everyone 👋&lt;/p&gt;

&lt;p&gt;Today I wanted to share with you 6 awesome CSS layout generators/tools that will help you in rapid prototyping and front-end development of CSS layouts for your projects. I hope you will find it useful and bookmark it so that you can refer to it easily in future.&lt;/p&gt;

&lt;p&gt;Let's start!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-interactive-css-grid-generator-by-layoutit"&gt;
  &lt;/a&gt;
  1. Interactive CSS Grid Generator By Layoutit
&lt;/h3&gt;

&lt;p&gt;Quickly design web layouts, and get HTML and CSS code. Learn CSS Grid visually and build web layouts with this interactive CSS Grid Generator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sGUORfM7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628350757804/YN3-8DBYZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sGUORfM7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628350757804/YN3-8DBYZ.png" alt="grid.layoutit.com_.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://grid.layoutit.com/"&gt;https://grid.layoutit.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a simple layout created using the code generated from this site and also adding some custom CSS:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/codewithpalash/embed/JjNeGXV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#2-css-layout"&gt;
  &lt;/a&gt;
  2. CSS Layout
&lt;/h3&gt;

&lt;p&gt;Popular Layouts &amp;amp; patterns made with CSS. Zero Dependencies. No Frameworks. No CSS Hacks. Real Use Cases. Good Practices. You can select a pattern and it has all the code related to that pattern which we can copy-paste in our projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yO_sjPtn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628353576210/H_EaoIHfV7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yO_sjPtn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628353576210/H_EaoIHfV7.png" alt="csslayout.io_patterns_holy-grail_.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://csslayout.io/"&gt;https://csslayout.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a simple layout created using the code present on the site for the most common &lt;a href="https://csslayout.io/patterns/holy-grail/"&gt;Holy Grail Pattern&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/codewithpalash/embed/MWmzKdx?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#3-griddy"&gt;
  &lt;/a&gt;
  3. Griddy
&lt;/h3&gt;

&lt;p&gt;Easily create CSS Grid layouts by setting the number of columns and rows using various units. We can also set column and row gap and see the generated code at the bottom which we can copy-paste in our projects. It doesn't support adding &lt;code&gt;grid-template-areas&lt;/code&gt; or &lt;code&gt;grid-area&lt;/code&gt; like the Layoutit site, but still it's a very helpful tool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lJyR4qCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628433690939/EqSOH6YvV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lJyR4qCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628433690939/EqSOH6YvV.png" alt="griddy.io_.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://griddy.io/"&gt;https://griddy.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a simple layout created using the CSS code generated from this site and also adding some custom CSS:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/codewithpalash/embed/GRmwQwB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#4-css-grid-layout-generator-by-masaya-kazama"&gt;
  &lt;/a&gt;
  4. CSS Grid Layout generator by Masaya Kazama
&lt;/h3&gt;

&lt;p&gt;This layout generator has two awesome presets: &lt;code&gt;Holy Grail&lt;/code&gt; &amp;amp; &lt;code&gt;Article List&lt;/code&gt;, which we can modify visually based on our requirements and all of the HTML &amp;amp; CSS code is generated for us. It also supports grid areas, which is super cool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xIxyBY8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628436479697/Jp9ZmmHx-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xIxyBY8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628436479697/Jp9ZmmHx-.png" alt="vue-grid-generator.netlify.app_.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://vue-grid-generator.netlify.app/"&gt;https://vue-grid-generator.netlify.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a simple demo using the code from this site:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/codewithpalash/embed/OJmavPq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#5-css-grid-generator-by-sarah-drasner"&gt;
  &lt;/a&gt;
  5. CSS Grid Generator by Sarah Drasner
&lt;/h3&gt;

&lt;p&gt;A small tool for everyone. You can designate rows, columns, gaps, and units, and then drag to create child divs to make dynamic layouts with ease! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xs76Xwd7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628437551184/tMdxTv8F7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xs76Xwd7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628437551184/tMdxTv8F7.png" alt="cssgrid-generator.netlify.app_.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://cssgrid-generator.netlify.app/"&gt;https://cssgrid-generator.netlify.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a simple demo using the code from this site:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/codewithpalash/embed/BaRGrQg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#6-bootstrap-4-interface-builder-layoutit"&gt;
  &lt;/a&gt;
  6. Bootstrap 4 Interface Builder | LayoutIt
&lt;/h3&gt;

&lt;p&gt;Another awesome site by LayoutIt helps us to quickly drag-and-drop Bootstrap 4 Grid system, base CSS elements, components, etc., and build web layouts with this interactive Bootstrap 4 Interface Builder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D7pbDQY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628433520142/82YmY5vO7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D7pbDQY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628433520142/82YmY5vO7.png" alt="www.layoutit.com_build.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://www.layoutit.com/build"&gt;https://www.layoutit.com/build&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;I hope these layout generators/tools will help you to create awesome layouts rapidly and increase your front-end development productivity.&lt;/p&gt;

&lt;p&gt;Is there any other site which you like to use for this purpose? Please add them in the comments below. It would help a lot. &lt;/p&gt;

&lt;p&gt;If you liked this article, be sure to ❤ it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#happy-coding"&gt;
  &lt;/a&gt;
  Happy Coding!
&lt;/h2&gt;

</description>
      <category>css</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Security Overview of AWS Lambda | AWS White Paper Summary</title>
      <author>Salah Elhossiny</author>
      <pubDate>Mon, 16 Aug 2021 05:29:26 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/security-overview-of-aws-lambda-aws-white-paper-summary-17dc</link>
      <guid>https://dev.to/awsmenacommunity/security-overview-of-aws-lambda-aws-white-paper-summary-17dc</guid>
      <description>&lt;ul&gt;
&lt;li&gt;The managed runtime environment model further reduces the attack surface while making cloud security simpler. &lt;/li&gt;
&lt;li&gt;This whitepaper presents the underpinnings of that model, along with best practices, to developers, security analysts, security and compliance teams, and other stakeholders.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-shared-responsibility-model"&gt;
  &lt;/a&gt;
  The Shared Responsibility Model
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Security and Compliance is a shared responsibility between AWS and the customer. &lt;/li&gt;
&lt;li&gt;This shared responsibility model can help relieve your operational burden, as AWS operates, manages, and controls the components from the host operating system and virtualization layer, down to the physical security of the facilities in which the service operates.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vOmdCqKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/127966363-024e9080-3a6c-4d36-ae80-4652256a5999.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vOmdCqKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/127966363-024e9080-3a6c-4d36-ae80-4652256a5999.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lambda-functions-and-layers"&gt;
  &lt;/a&gt;
  Lambda Functions and Layers
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;With Lambda, you can run code virtually with zero administration of the underlying infrastructure.&lt;/li&gt;
&lt;li&gt;You are responsible only for the code that you provide Lambda, and the conﬁguration of how Lambda runs that code on your behalf.&lt;/li&gt;
&lt;li&gt;Today, Lambda supports two types of code resources: Functions and Layers.&lt;/li&gt;
&lt;li&gt;Layers can be used to share common code or data across diﬀerent functions or AWS accounts. &lt;/li&gt;
&lt;li&gt;You can also control the entire lifecycle of your functions and layers through Lambda's control plane APIs. &lt;/li&gt;
&lt;li&gt;For example, you can choose to delete your function by calling DeleteFunction, or revoke permissions from another account by calling RemovePermission.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lambda-invoke-modes"&gt;
  &lt;/a&gt;
  Lambda Invoke Modes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The Invoke API can be called in two modes: event mode and request-response mode. 

&lt;ul&gt;
&lt;li&gt;Event mode queues the payload for an asynchronous invocation.&lt;/li&gt;
&lt;li&gt;Request-response mode synchronously invokes the function with the provided payload and returns a response immediately.&lt;/li&gt;
&lt;li&gt;In both cases, the function execution is always performed in a Lambda execution environment, but the payload takes diﬀerent paths.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sSrTHTjQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/128178489-e7c349a8-64e0-48c9-a18e-9588dbeb7729.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sSrTHTjQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/128178489-e7c349a8-64e0-48c9-a18e-9588dbeb7729.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Eventinvocation mode payloads are always queued for processing before invocation.&lt;/li&gt;
&lt;li&gt;All payloads are queued for processing in an Amazon Simple Queue Service (Amazon SQS) queue. &lt;/li&gt;
&lt;li&gt;Queued events are always secured in-transit with TLS 1.2+, but they are not currently encrypted at-rest.&lt;/li&gt;
&lt;li&gt;Queued events are retrieved in batches by Lambda’s poller ﬂeet. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;The poller ﬂeet is a group of EC2 instances whose purpose is to process queued event invocations which have not yet been processed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the invocation cannot be performed, the poller ﬂeet will temporarily store the event, in-memory, on the host until it is either able to successfully              complete the execution, or until the number of run retry attempts have been exceeded.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lambda-executions"&gt;
  &lt;/a&gt;
  Lambda Executions
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The Lambda service is split into the control plane and the data plane. &lt;/li&gt;
&lt;li&gt;Each plane serves a distinct purpose in the service. &lt;/li&gt;
&lt;li&gt;The control plane provides the management APIs (for example, CreateFunction, UpdateFunctionCode, PublishLayerVersion, and so on), and manages integrations with all AWS services. &lt;/li&gt;
&lt;li&gt;Communications to Lambda's control plane are protected in-transit by TLS. &lt;/li&gt;
&lt;li&gt;All customer data stored within Lambda's control plane is encrypted at-rest through the use of AWS KMS, which is designed to protect it from unauthorized disclosure or tampering.&lt;/li&gt;
&lt;li&gt;The data plane is Lambda's Invoke API that triggers the invocation of Lambda functions. &lt;/li&gt;
&lt;li&gt;When a Lambda function is invoked, the data plane allocates an execution environmenton an AWS Lambda Worker (or simply Worker, a type of Amazon EC2 instance) to that function version, or chooses an existing execution environment that has already been set up for that function version, which it then uses to complete the invocation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lambda-execution-environments"&gt;
  &lt;/a&gt;
  Lambda execution environments
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Each invocation is routed by Lambda's invoke service to an execution environment on a Worker that is able to service the request. &lt;/li&gt;
&lt;li&gt;Other than through data plane, customers and other users cannot directly initiate inbound/ingress network communications with an execution environment. &lt;/li&gt;
&lt;li&gt;This helps to ensure that communications to your execution environment are authenticated and authorized.&lt;/li&gt;
&lt;li&gt;Each execution environment may only be used for one concurrent invocation at a time, and they may be reused across multiple invocations of the same function version for performance reasons.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#execution-role"&gt;
  &lt;/a&gt;
  Execution role
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Each Lambda function must also be conﬁgured with an execution role, which is an IAM role that is assumed by the Lambda service when performing control plane and data plane operations related to the function.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lambda-microvms-and-workers"&gt;
  &lt;/a&gt;
  Lambda MicroVMs and Workers
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lambda will create its execution environments on a ﬂeet of Amazon EC2 instances called AWS Lambda Workers. &lt;/li&gt;
&lt;li&gt;Workers are bare metalEC2 Nitro instances which are launched and managed by Lambda in a separate isolated AWS account which is not visible to customers.&lt;/li&gt;
&lt;li&gt;Workers have one or more hardware-virtualized Micro Virtual Machines (MVM) created by Firecracker. &lt;/li&gt;
&lt;li&gt;Firecracker is an open-source Virtual Machine Monitor (VMM) that uses Linux’s Kernel-based Virtual Machine (KVM) to create and manage MVMs. &lt;/li&gt;
&lt;li&gt;It is purpose-built for creating and managing secure, multi-tenant container and function-based services that provide serverless operational models.&lt;/li&gt;
&lt;li&gt;As a part of the shared responsibility model, Lambda is responsible for maintaining the security conﬁguration, controls, and patching level of the Workers. &lt;/li&gt;
&lt;li&gt;The Lambda team uses Amazon Inspector to discover known potential security issues, as well as other custom security issue notiﬁcation mechanisms and pre-disclosure lists, so that customers don’t need to manage the underlying security posture of their execution environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0oVpJIl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/128300028-bb770510-8453-41b0-9220-22946dadd39e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0oVpJIl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/128300028-bb770510-8453-41b0-9220-22946dadd39e.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lambda-isolation-technologies"&gt;
  &lt;/a&gt;
  Lambda Isolation Technologies
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lambda uses a variety of open-source and proprietary isolation technologies to protect Workers and execution environments. &lt;/li&gt;
&lt;li&gt;Each execution environment contains a dedicated copy of the following items:

&lt;ul&gt;
&lt;li&gt;The code of the particular function version&lt;/li&gt;
&lt;li&gt;Any AWS Lambda Layers selected for your function version&lt;/li&gt;
&lt;li&gt;The chosen function runtime (for example, Java 11, NodeJS 12, Python 3.8, and so on) or the function's custom runtime&lt;/li&gt;
&lt;li&gt;A writeable /tmp directory&lt;/li&gt;
&lt;li&gt;A minimal Linux user space based on Amazon Linux 2&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#storage-and-state"&gt;
  &lt;/a&gt;
  Storage and state
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Execution environments are never reused across diﬀerent function versions or customers. &lt;/li&gt;
&lt;li&gt;But a single environment can be reused between invocations of the same function version.&lt;/li&gt;
&lt;li&gt;Customers that want to persist data to the ﬁle system outside of the execution environment should consider using Lambda’s integration with Amazon EFS.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#runtime-maintenance-in-lambda"&gt;
  &lt;/a&gt;
  Runtime Maintenance in Lambda
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lambda tests and deploys the runtime updates without any involvement from customers.&lt;/li&gt;
&lt;li&gt;Typically, no action is required to pick up the latest patches for supported Lambda runtimes, but sometimes action might be required to test patches before they are deployed (for example, known incompatible runtime patches).&lt;/li&gt;
&lt;li&gt;The Lambda team uses Amazon Inspector to discover known security issues. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#monitoring-and-auditing-lambda-functions"&gt;
  &lt;/a&gt;
  Monitoring and Auditing Lambda Functions
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Cloudwatch &lt;/li&gt;
&lt;li&gt;X-Ray&lt;/li&gt;
&lt;li&gt;Cloudtrail&lt;/li&gt;
&lt;li&gt;Config &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#architecting-and-operating-lambda-functions"&gt;
  &lt;/a&gt;
  Architecting and Operating Lambda Functions
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This section relates to the best practices of well designing and architecting Lambda Functions according to the 5 principles of Well-Architecting Framework. 

&lt;ul&gt;
&lt;li&gt;Operational Excellence Pillar &lt;/li&gt;
&lt;li&gt;Security Pillar &lt;/li&gt;
&lt;li&gt;Reliability Pillar
&lt;/li&gt;
&lt;li&gt;Performance Eﬃciency Pillar &lt;/li&gt;
&lt;li&gt;Cost Optimization Pillar &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lambda-and-compliance"&gt;
  &lt;/a&gt;
  Lambda and Compliance
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You are responsible for determining which compliance regime applies to your data. &lt;/li&gt;
&lt;li&gt;After you have determined your compliance regime needs, you can use the various Lambda features to match those controls.&lt;/li&gt;
&lt;li&gt;You can contact AWS experts (such as Solution Architects, domain experts, technical account managers and other human resources) for assistance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lambda-event-sources"&gt;
  &lt;/a&gt;
  Lambda Event Sources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lambda integrates with more than 140 AWS services via direct integration and the Amazon EventBridge event bus.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/whitepapers/latest/security-overview-aws-lambda/security-overview-aws-lambda.pdf"&gt; Original White Paper &lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>security</category>
    </item>
    <item>
      <title>Extreme programming Principles</title>
      <author>Aatmaj</author>
      <pubDate>Mon, 16 Aug 2021 05:21:38 +0000</pubDate>
      <link>https://dev.to/aatmaj/extreme-programming-principles-3k9a</link>
      <guid>https://dev.to/aatmaj/extreme-programming-principles-3k9a</guid>
      <description>&lt;h1&gt;
  &lt;a href="#principles-of-extreme-programming-xp"&gt;
  &lt;/a&gt;
  Principles of Extreme Programming XP
&lt;/h1&gt;

&lt;p&gt;Xp is based on a set of proven practices that are all designed to work together, although many folks do pick and choose, and adopt only a portion of XP's rules&lt;/p&gt;

&lt;p&gt;Here are a few practices.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make small, but frequent releases.&lt;/li&gt;
&lt;li&gt;Develop in iteration cycles and not in big-bang models&lt;/li&gt;
&lt;li&gt;Don't put anything that is not in the spec, no matter how tempted you to put in functionality for the future.&lt;/li&gt;
&lt;li&gt;Write the test code first&lt;/li&gt;
&lt;li&gt;No killer schedules, work regular hours&lt;/li&gt;
&lt;li&gt;Refactor (improve the code) whenever and wherever you notice the opportunity&lt;/li&gt;
&lt;li&gt;Don't release anything until it passes all tests&lt;/li&gt;
&lt;li&gt;Set realistic schedules, based around small releases.&lt;/li&gt;
&lt;li&gt;Keep it simple&lt;/li&gt;
&lt;li&gt;Program in pairs, and move people around so that everybody knows pretty much everything about code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Adapted from the book &lt;a href="https://www.amazon.in/Head-First-Java-Brain-Friendly-Guide/dp/8173666024"&gt;Headfirst Java&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Look back on these three months: I release an app and write an article every week</title>
      <author>Yuiko Ito</author>
      <pubDate>Mon, 16 Aug 2021 05:16:45 +0000</pubDate>
      <link>https://dev.to/yuikoito/look-back-on-these-three-months-i-release-an-app-and-write-an-article-every-week-503d</link>
      <guid>https://dev.to/yuikoito/look-back-on-these-three-months-i-release-an-app-and-write-an-article-every-week-503d</guid>
      <description>&lt;p&gt;Hey guys,&lt;/p&gt;

&lt;p&gt;I've been challenging myself #tryAtleast1Article1week to release an app and write an article in both English and Japanese per week since the latter half of May.&lt;/p&gt;

&lt;p&gt;I'm planning to continue this challenge for a little while longer, but anyway, I've completed this challenge for three months, so I would like to look back!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-1-react-typescript-face-detection-with-tensorflow"&gt;
  &lt;/a&gt;
  Week 1: React + TypeScript: Face detection with Tensorflow
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BNhhgJ64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jtm443pisq3ut9obmxs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BNhhgJ64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jtm443pisq3ut9obmxs.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There were not many examples of using TensorFlow.js with React and TypeScript, so I got stuck at first.&lt;br&gt;
But now I know how to run it with TypeScript, so actually this was good choice for me to use TensorFlow.js with TypeScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/yuikoito/face-detection-by-using-tensorflow-react-typescript-3dn5"&gt;https://dev.to/yuikoito/face-detection-by-using-tensorflow-react-typescript-3dn5&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This was the first time I wrote an article in English, and I was happy to see that it became the 4th most trending article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dormoshe.io/newsletters/ag/typescript/42?utm_source=twitter&amp;amp;utm_campaign=twitter"&gt;https://dormoshe.io/newsletters/ag/typescript/42?utm_source=twitter&amp;amp;utm_campaign=twitter&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-2-ui-components-website-released"&gt;
  &lt;/a&gt;
  Week 2: UI Components website Released!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://gyazo.com/f26cc3a67cc5374cb9bcbc471640ccfc"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UPE3iooj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gyazo.com/f26cc3a67cc5374cb9bcbc471640ccfc.gif" alt="Image from Gyazo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/yuikoito/ui-components-website-released-2g8e"&gt;https://dev.to/yuikoito/ui-components-website-released-2g8e&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm not very good at animations, so I've been keeping all the animations I used in a notepad so I can copy and paste them, but I thought it was getting a bit hard to see, so I decided to put them together.&lt;/p&gt;

&lt;p&gt;Pretty convenient, isn't it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-3-i-made-18-ui-components-for-all-developers"&gt;
  &lt;/a&gt;
  Week 3: I made 18 UI components for all developers
&lt;/h2&gt;

&lt;p&gt;I added 18 components on UI Components, which I release last week.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gyazo.com/58c38dd277a6669a2305c3aa5eac0a4f"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HBjkPfH3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gyazo.com/58c38dd277a6669a2305c3aa5eac0a4f.gif" alt="Image from Gyazo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gyazo.com/53f15ba54cc914618781d5dae62b0173"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aa7ZOCxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gyazo.com/53f15ba54cc914618781d5dae62b0173.gif" alt="Image from Gyazo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gyazo.com/df7822f488a5029efdea84c633729b05"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5x8W3QC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gyazo.com/df7822f488a5029efdea84c633729b05.gif" alt="Image from Gyazo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-4-image-transformation-convert-pictures-to-add-styles-from-famous-paintings"&gt;
  &lt;/a&gt;
  Week 4: Image Transformation: Convert pictures to add styles from famous paintings
&lt;/h2&gt;

&lt;p&gt;I made this app because I was interested in image processing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gyazo.com/190f53a9bbdef934a251581b42e07b68"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i9OxEKEe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gyazo.com/190f53a9bbdef934a251581b42e07b68.gif" alt="Image from Gyazo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was happy to see that someone wrote an article about it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://momosiri.nagoya/33835"&gt;https://momosiri.nagoya/33835&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-5-developed-an-app-to-transcribe-and-translate-from-images"&gt;
  &lt;/a&gt;
  Week 5: Developed an app to transcribe and translate from images
&lt;/h2&gt;

&lt;p&gt;I developed this app because there are only a few applications to translate from pictures.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gyazo.com/eec97dbffb7364afd24f2e9a2e0372b8"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Dcyae1f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gyazo.com/eec97dbffb7364afd24f2e9a2e0372b8.gif" alt="Image from Gyazo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/yuikoito/developed-an-app-to-transcribe-and-translate-from-images-32gp"&gt;https://dev.to/yuikoito/developed-an-app-to-transcribe-and-translate-from-images-32gp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are many apps to translate but for almost all of apps, we have to choose which language we want to translate.&lt;br&gt;
So, I thought it was good to translate automatically to user language.&lt;/p&gt;

&lt;p&gt;I think it's more useful.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-6-generate-open-graph-images-with-nextjs-and-typescript-on-vercel"&gt;
  &lt;/a&gt;
  Week 6: Generate Open Graph images with Next.js and TypeScript on Vercel
&lt;/h2&gt;

&lt;p&gt;Actually this is even not an app, but I wanted to try open graph images with Next.js and TypeScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/yuikoito/generate-open-graph-images-with-next-js-and-typescript-on-vercel-110j"&gt;https://dev.to/yuikoito/generate-open-graph-images-with-next-js-and-typescript-on-vercel-110j&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-7-opencv-in-lambda-created-an-api-to-convert-images-to-pok%C3%A9mon-ascii-art-style-using-aws-and-opencv"&gt;
  &lt;/a&gt;
  Week 7: OpenCV in Lambda: Created an API to convert images to Pokémon ASCII art style using AWS and OpenCV
&lt;/h2&gt;

&lt;p&gt;I was looking at Pokémon images, and I thought it would be fun to use this to convert images. Then I developed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m9ScsKIT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/670446/677c7bea-2923-2a9d-a9b3-1e5dce6029c5.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m9ScsKIT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/670446/677c7bea-2923-2a9d-a9b3-1e5dce6029c5.jpeg" alt="1.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QzVulWWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/670446/1f3cf240-af77-089d-5184-ef18d1cc6f3e.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QzVulWWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/670446/1f3cf240-af77-089d-5184-ef18d1cc6f3e.jpeg" alt="2.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vAfTYFt_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/670446/a33fee59-6f44-1f4a-c98f-227c7bc1ed92.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vAfTYFt_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/670446/a33fee59-6f44-1f4a-c98f-227c7bc1ed92.jpeg" alt="3.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/yuikoito/opencv-in-lambda-created-an-api-to-convert-images-to-pokemon-ascii-art-style-using-aws-and-opencv-287l"&gt;https://dev.to/yuikoito/opencv-in-lambda-created-an-api-to-convert-images-to-pokemon-ascii-art-style-using-aws-and-opencv-287l&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using OpenCV in Lambda is the part that I struggled with.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-8-developed-a-web-app-to-convert-images-to-pok%C3%A9mon-ascii-art-style"&gt;
  &lt;/a&gt;
  Week 8: Developed a web app to convert images to Pokémon ASCII art style
&lt;/h2&gt;

&lt;p&gt;I made a web app using the API I made last week.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yOFNGpkM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dc0qhmr31a0x2idhpgxs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yOFNGpkM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dc0qhmr31a0x2idhpgxs.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/yuikoito/developed-a-web-app-to-convert-images-to-pokemon-ascii-art-style-mb7"&gt;https://dev.to/yuikoito/developed-a-web-app-to-convert-images-to-pokemon-ascii-art-style-mb7&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-9-using-opencv-developed-a-web-app-to-convert-images-to-manga-style"&gt;
  &lt;/a&gt;
  Week 9: Using OpenCV: Developed a web app to convert images to manga style
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5iztK1Tg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knnj4kdn6q4afpy7r80q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5iztK1Tg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knnj4kdn6q4afpy7r80q.png" alt="4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JOQIcSSb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6n0izk8nrf5cdpmal426.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JOQIcSSb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6n0izk8nrf5cdpmal426.png" alt="5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/yuikoito/using-opencv-developed-a-web-app-to-convert-images-to-manga-style-23p0"&gt;https://dev.to/yuikoito/using-opencv-developed-a-web-app-to-convert-images-to-manga-style-23p0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think it's pretty fun, so please play with it if you like.&lt;/p&gt;

&lt;p&gt;If you want to replace the background, you need to use an image without anything in the background, because it does not extract people.&lt;/p&gt;

&lt;p&gt;I'm almost new to image processing, but I'm getting used to it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-10-tensorflow-nextjs-typescript-remove-background-and-add-virtual-background-image-with-web-camera"&gt;
  &lt;/a&gt;
  Week 10: TensorFlow + Next.js + TypeScript: Remove background and add virtual background image with web camera
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://gyazo.com/d38a9a41d834d767588917846bce4d7a"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bxiBVy_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gyazo.com/d38a9a41d834d767588917846bce4d7a.gif" alt="Image from Gyazo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I just changed the background, but to my surprise, it became the first place for trending! Yey.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dormoshe.io/newsletters/ag/typescript/50?utm_source=twitter&amp;amp;utm_campaign=twitter"&gt;https://dormoshe.io/newsletters/ag/typescript/50?utm_source=twitter&amp;amp;utm_campaign=twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, this article triggered three inquiries.&lt;/p&gt;

&lt;p&gt;I struggled quite a bit when I ran TensorFlow.js with React+TypeScript in the first week, but this time I didn't struggle that much and was able to do it easily, so I was happy to feel my growth a little bit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-11-use-pose-detection-of-tensorflow-with-nextjs-and-typescript-lets-become-pictograms-with-pose-detection-tokyo2020"&gt;
  &lt;/a&gt;
  Week 11: Use Pose detection of TensorFlow with Next.js and TypeScript: Let's become pictograms with Pose detection #Tokyo2020
&lt;/h2&gt;

&lt;p&gt;For this challenge, my friend, &lt;a href="https://twitter.com/tommy19970714"&gt;Tommy&lt;/a&gt; contacted me and we decided to develop a pictogram application together.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gyazo.com/f663cfd8cb13b0415650fa357fb2df81"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cOcCnL8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gyazo.com/f663cfd8cb13b0415650fa357fb2df81.gif" alt="Image from Gyazo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/yuikoito/tensorflow-next-js-typescript-let-s-become-pictograms-with-pose-detection-tokyo2020-17ia"&gt;https://dev.to/yuikoito/tensorflow-next-js-typescript-let-s-become-pictograms-with-pose-detection-tokyo2020-17ia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We developed for two days from morning to midnight, connected to Discord all the time.&lt;/p&gt;

&lt;p&gt;It was much fun and I would love to do again.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-12-recognize-facial-expressions-and-change-face-to-emoji-using-faceapijs-with-nextjstypescript"&gt;
  &lt;/a&gt;
  Week 12: Recognize facial expressions and change face to Emoji using face-api.js with Next.js+TypeScript
&lt;/h2&gt;

&lt;p&gt;I've been having a lot of online meetings lately, and it's a pain to have to put on makeup every time.&lt;br&gt;
But it's also a pain to not be able to see my facial expressions, so I created an app that solves that problem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gyazo.com/c20f064084a23c5e5a11cb2068623d6f"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z-bgFxQt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gyazo.com/c20f064084a23c5e5a11cb2068623d6f.gif" alt="Image from Gyazo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/yuikoito/recognize-facial-expressions-and-change-face-to-emoji-using-face-api-js-with-next-js-typescript-21n9"&gt;https://dev.to/yuikoito/recognize-facial-expressions-and-change-face-to-emoji-using-face-api-js-with-next-js-typescript-21n9&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If there was a demand for it, I was going to make it a Chrome extension so that I could use it in actual meetings.&lt;br&gt;
What do you think? :D&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it!
&lt;/h2&gt;

&lt;p&gt;It was really hard for me to release and write an article every week. lol&lt;/p&gt;

&lt;p&gt;Many times I wondered &lt;strong&gt;why am I doing this painstaking work&lt;/strong&gt;, but sometimes it makes me happy to get a response, so I plan to continue for a little while longer.&lt;/p&gt;

&lt;p&gt;It was my first challenge to write an article in English, but I'm happy to see that I'm getting some inquiries.&lt;/p&gt;

&lt;p&gt;Thank you for reading. See you next week!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contact"&gt;
  &lt;/a&gt;
  Contact
&lt;/h2&gt;

&lt;p&gt;Please send me a message if you want to offer a job or ask me something.&lt;/p&gt;

&lt;p&gt;&lt;a href="mailto:yuiko.dev@gmail.com"&gt;yuiko.dev@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/yui_active"&gt;https://twitter.com/yui_active&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>typescript</category>
      <category>challenge</category>
    </item>
    <item>
      <title>Vscode Extension For Every Front-end Developer</title>
      <author>Abkseo</author>
      <pubDate>Mon, 16 Aug 2021 05:06:25 +0000</pubDate>
      <link>https://dev.to/abks/vscode-extension-for-every-front-end-developer-4mfa</link>
      <guid>https://dev.to/abks/vscode-extension-for-every-front-end-developer-4mfa</guid>
      <description>&lt;p&gt; &lt;span&gt;Hello everyone, my name is suman and I'm a frontend developer. In this blog post, I would like to share 10 VS code extensions that every frontend developer should use. The purpose of using these extensions is to write faster, cleaner, and more consistent code. &lt;/span&gt;&lt;span&gt;Let's Jump in!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://www.codelivly.com/10-vs-code-extensions-every-frontend-developer-should-use/"&gt;10 VS Code extensions every Frontend Developer should use&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>I made an open-source, fun indie game!</title>
      <author>Virej Dasani</author>
      <pubDate>Mon, 16 Aug 2021 04:59:01 +0000</pubDate>
      <link>https://dev.to/virejdasani/i-made-an-open-source-fun-indie-game-22hf</link>
      <guid>https://dev.to/virejdasani/i-made-an-open-source-fun-indie-game-22hf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#this-is-cuboidal-drift"&gt;
  &lt;/a&gt;
  This is Cuboidal Drift
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0_qvrFxAGY4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#downloads"&gt;
  &lt;/a&gt;
  Downloads:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.VirejDasani.CuboidalDrift"&gt;Google PlayStore&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://virejdasani.itch.io/cuboidaldrift"&gt;itch.io&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/virejdasani/cuboidaldrift"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cuboidal Drift currently has only 4 levels but because of it being 100% open source, you too can contribute levels on &lt;a href="https://github.com/virejdasani/CuboidalDrift"&gt;GitHub&lt;/a&gt;!&lt;br&gt;
The game is made in Unity3D using the C# language&lt;/p&gt;

&lt;p&gt;A ⭐ to the &lt;a href="https://github.com/virejdasani/CuboidalDrift"&gt;GitHub repo&lt;/a&gt; and a review on the &lt;a href="https://play.google.com/store/apps/details?id=com.VirejDasani.CuboidalDrift"&gt;Google Playstore&lt;/a&gt; is highly appreciated!&lt;/p&gt;

</description>
      <category>unity3d</category>
      <category>gamedev</category>
      <category>opensource</category>
      <category>contributorswanted</category>
    </item>
    <item>
      <title>Stop Using ../../../ While Importing Components, Instead Use This Method</title>
      <author>Suhail Kakar</author>
      <pubDate>Mon, 16 Aug 2021 04:50:21 +0000</pubDate>
      <link>https://dev.to/suhailkakar/stop-using-while-importing-components-instead-use-this-method-3lme</link>
      <guid>https://dev.to/suhailkakar/stop-using-while-importing-components-instead-use-this-method-3lme</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction 📚
&lt;/h3&gt;

&lt;p&gt;When you go to GitHub and see some other developers code, most of them are importing their components like this👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../../components/Buttons/Button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is called relative import. Relative import will start with either &lt;code&gt;./&lt;/code&gt;,&lt;code&gt;/&lt;/code&gt; or &lt;code&gt;../&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I am not telling that this is the wrong way and even there is no issue if you import like that, but if you have a very big and complex project, relative imports will look a lot messy similar to this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../../../../../components/Buttons/Button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, there is a very better and cleaner way to import these components. This method is called absolute import. An absolute import will look this like 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;components/Buttons/Button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-absolute-imports-to-react-apps-cra"&gt;
  &lt;/a&gt;
  Adding absolute imports to React Apps (CRA) 💡
&lt;/h3&gt;

&lt;p&gt;Open your project in any code editor and create a new file in your project's root directory named &lt;code&gt;jsconfig.json&lt;/code&gt;. Once you created the file paste the below JSON inside of it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"compilerOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"baseUrl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"src"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will instruct Webpack to use the &lt;code&gt;src&lt;/code&gt; directory as a base one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion ⌛
&lt;/h3&gt;

&lt;p&gt;I hope you found this short article helpful. If you need any help please let me know in the comment section. &lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;👋 Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>JavaScript Cheat sheet from beginners to advance</title>
      <author>Code Hunter </author>
      <pubDate>Mon, 16 Aug 2021 04:37:43 +0000</pubDate>
      <link>https://dev.to/codehunterbd/javascript-cheat-sheet-from-beginners-to-advance-4i1o</link>
      <guid>https://dev.to/codehunterbd/javascript-cheat-sheet-from-beginners-to-advance-4i1o</guid>
      <description>&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#javascript-basics"&gt;
  &lt;/a&gt;
  JavaScript Basics
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Set of JavaScript basic syntax to add, execute and write basic programming paradigms in JavaScript&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On Page Script&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Adding internal JavaScript to HTML&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text/javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;//JS code goes here &amp;lt;/script&amp;gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;External JS File&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Adding external JavaScript to HTML&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;filename.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JavaScript Function syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;nameOfFunction&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// function body &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;DOM Element&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Changing content of a DOM Element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;elementID&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello 
World!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This will print the value of a in JavaScript console&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#conditional-statements"&gt;
  &lt;/a&gt;
  Conditional Statements
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Conditional statements are used to perform operations based on some conditions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;If Statement&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
The block of code to be executed, when the condition specified is true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// block of code to be executed if the condition is true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;If-else Statement&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
If the condition for the if block is false, then the else block will be executed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// block of code to be executed if the condition is true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// block of code to be executed if the condition is false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Else-if Statement&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
A basic if-else ladder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// block of code to be executed if condition1 is true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// block of code to be executed if the condition1 is false and condition2 is true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// block of code to be executed if the condition1 is false and condition2 is false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Switch Statement&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Switch case statement in JavaScript&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;// code block&lt;/span&gt;
&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;// code block&lt;/span&gt;
&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;// code block&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#iterative-statements-loops"&gt;
  &lt;/a&gt;
  Iterative Statements (Loops)
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Iterative statement facilitates programmer to execute any block of code lines repeatedly and can be controlled as per conditions added by the programmer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;For Loop&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For loop syntax in javascript&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// code block to be executed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;While Loop&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Runs the code till the specified condition is true&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// code block to be executed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Do While Loop&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A do while loop is executed at least once despite the condition being true or false&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// run this code in block&lt;/span&gt;
&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#strings"&gt;
  &lt;/a&gt;
  Strings
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;The string is a sequence of characters that is used for storing and managing text data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;charAt method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the character from the specified index.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;concat method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Joins two or more strings together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;index of method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the index of the first occurrence of the specified character from the string else -1 if not found.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;substr&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;match method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Searches a string for a match against a regular expression.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;chapter &lt;/span&gt;&lt;span class="se"&gt;\d&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;(\.\d)&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/i&lt;/span&gt;&lt;span class="p"&gt;;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;replace method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Searches a string for a match against a specified string or char and returns a new string by replacing the specified values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;search method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Searches a string against a specified value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;term&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;split method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Splits a string into an array consisting of substrings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#arrays"&gt;
  &lt;/a&gt;
  Arrays
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;The array is a collection of data items of the same type. In simple terms, it is a variable that contains multiple values.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;variable&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Containers for storing data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;element1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;element2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;element3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;concat method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Joins two or more arrays together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;indexOf method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the index of the specified item from the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;join method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Converts the array elements to a string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;pop method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Deletes the last element of the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;reverse method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This method reverses the order of the array elements&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;sort method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sorts the array elements in a specified manner.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;toString method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Converts the array elements to a string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;valueOf method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;returns the relevant Number Object holding the value of the argument passed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#number-methods"&gt;
  &lt;/a&gt;
  Number Methods
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;JS math and number objects provide several constant and methods to perform mathematical operations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;toExponential method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Converts a number to its exponential form.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;toExponential&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;toPrecision method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Formats a number into a specified length.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;toPrecision&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;toString method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Converts an object to a string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;valueOf method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the primitive value of a number.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#maths-methods"&gt;
  &lt;/a&gt;
  Maths Methods
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;ceil method&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Rounds a number upwards to the nearest integer, and returns the result&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;exp method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the value of E^x.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;log method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the logarithmic value of x.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;pow method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the value of x to the power y.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;random method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns a random number between 0 and 1.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;sqrt method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the square root of a number x&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#dates"&gt;
  &lt;/a&gt;
  Dates
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Date object is used to get the year, month and day. It has methods to get and set day, month, year, hour, minute, and seconds.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling Date from the Date object&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Returns the date from the date object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling Day from the Date object&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Returns the day from the date object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getDay&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling Hours from the Date object&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Returns the hours from the date object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling Minutes from the Date object&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Returns the minutes from the date object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling Seconds from the Date object&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Returns the seconds from the date object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling Time from the Date object&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Returns the time from the date object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#mouse-events"&gt;
  &lt;/a&gt;
  Mouse Events
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Any change in the state of an object is referred to as an Event. With the help of JS, you can handle events, i.e., how any specific HTML tag will work when the user does something.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;click&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Fired when an element is clicked&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;oncontextmenu&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when an element is right-clicked&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;contextmenu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;dblclick&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when an element is double-clicked&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dblclick&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;mouseenter&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when an element is entered by the mouse arrow&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseenter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;mouseleave&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when an element is exited by the mouse arrow&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseleave&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;mousemove&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when the mouse is moved inside the element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#keyboard-events"&gt;
  &lt;/a&gt;
  Keyboard Events
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;keydown&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when the user is pressing a key on the keyboard&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;keydown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;keypress&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when the user presses the key on the keyboard&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;keypress&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;keyup&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when the user releases a key on the keyboard&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;keyup&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#errors"&gt;
  &lt;/a&gt;
  Errors
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Errors are thrown by the compiler or interpreter whenever they find any fault in the code, and it can be of any type like syntax error, run-time error, logical error, etc. JS provides some functions to handle the errors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;try and catch&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Try the code block and execute catch when err is thrown&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="k"&gt;try&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;handle&lt;/span&gt; &lt;span class="nx"&gt;errors&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;alert method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Used to alert something on the screen&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;blur method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The blur() method removes focus from the current window.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;setInterval&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Keeps executing code at a certain interval&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;setTimeout&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Executes the code after a certain interval of time&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;close&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Window. close() method closes the current window&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;confirm&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The window.confirm() instructs the browser to display a dialog with an optional message, and to wait until the user either confirms or cancels&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Are you sure?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;open&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Opens a new window&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://www.anmolraj.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;prompt&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prompts the user with a text and takes a value. Second parameter is the default value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;What is your name?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Anmol&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;scrollBy&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Scroll 100px to the right&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;scrollTo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Scrolls the document to the specified coordinates.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Scroll to horizontal position 500&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#clearinterval"&gt;
  &lt;/a&gt;
  clearInterval
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Clears the setInterval. var is the value returned by setInterval call&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;clearTimeout&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Clears the setTimeout. var is the value returned by setTimeout call&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;clearTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;stop&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Stops the further resource loading&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#queryget-elements"&gt;
  &lt;/a&gt;
  Query/Get Elements
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;The browser creates a DOM (Document Object Model) whenever a web page is loaded, and with the help of HTML DOM, one can access and modify all the elements of the HTML document.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;querySelector&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Selector to select first matching element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;css-selectors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;querySelectorAll&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A selector to select all matching elements&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;css-selectors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;getElementsByTagName&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Select elements by tag name&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;element-name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;getElementsByClassName&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Select elements by class name&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;class-name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Get Element by Id&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Select an element by its id&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#creating-elements"&gt;
  &lt;/a&gt;
  Creating Elements
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Create new elements in the DOM&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;createElement&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Create a new element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;createTextNode&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a new text node&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTextNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;some text here&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#code-hunter"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CODE HUNTER&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;If you like it then please like share &amp;amp; follow more&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>frontend</category>
    </item>
    <item>
      <title>🚀20 Best CSS3 Library For Developers.</title>
      <author>Abkseo</author>
      <pubDate>Mon, 16 Aug 2021 04:20:58 +0000</pubDate>
      <link>https://dev.to/abks/20-best-css3-library-for-developers-4g2i</link>
      <guid>https://dev.to/abks/20-best-css3-library-for-developers-4g2i</guid>
      <description>&lt;p&gt;Web Developers used to spend a lot of time creating beautiful CSS. Thanks to the CSS libraries, we now have a better, faster, and more effective way to build responsive websites and web applications.&lt;/p&gt;
&lt;p&gt;Are you still looking for the best CSS libraries? Do you want to know which library you should try? In this article, we have 20 best CSS libraries for your inspiration.&lt;/p&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#how-do-css-libraries-work"&gt;&lt;/a&gt;🤔 How do CSS libraries work?&lt;/h2&gt;
&lt;p&gt;CSS library gives web developers a basic structure, which includes grid, interactive UI patterns, web typography, tooltips, buttons, form elements, icons. This structure helps web developers to start quickly and efficiently when they are designing a website or web applications.&lt;/p&gt;
&lt;p&gt;Here we have put together &lt;span&gt;20 best CSS libraries.&lt;/span&gt; We hope you like them, and most importantly, find the best one for your needs.&lt;/p&gt;
&lt;h4&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#lets-go"&gt;&lt;/a&gt;Let's go....🤩&lt;/h4&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwii76qFzaPyAhWvyzgGHX9RA-kQFnoECAMQBQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;🚀20 Best CSS3 Library For Developers&lt;/a&gt;&lt;/b&gt;.

</description>
    </item>
    <item>
      <title>Getting Started with Git-GitHub</title>
      <author>Prathamesh Dukare</author>
      <pubDate>Mon, 16 Aug 2021 04:16:31 +0000</pubDate>
      <link>https://dev.to/prathameshkdukare/getting-started-with-git-github-1c1i</link>
      <guid>https://dev.to/prathameshkdukare/getting-started-with-git-github-1c1i</guid>
      <description>&lt;p&gt;If you don't know about Git-GitHub and wanna getting started, then this may be a good starting guide for you. I will explain it in a very simple language.&lt;br&gt;
but, first of all, you should know what Git and GitHub are!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-git-ltgt"&gt;
  &lt;/a&gt;
  What is Git &amp;lt;&amp;gt;?
&lt;/h2&gt;

&lt;p&gt;Git is a Version Control system that maintains the log of your projects (Code) and tracks the changes as you update the files or contents within the file. Git also comes with Branching where you can create the branches to avoid any problems in the main code.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-githubltgt"&gt;
  &lt;/a&gt;
  What is GitHub&amp;lt;&amp;gt;?
&lt;/h2&gt;

&lt;p&gt;GitHub is a project hosting &amp;amp; management platform which comes (works) with git. You can put your code online on GitHub to share it with the world or your team members to collaborate on it. GitHub is so popular that most of the open-source projects are on GitHub &amp;amp; the community contributes to it. &lt;/p&gt;

&lt;p&gt;Now you know what git &amp;amp; GitHub is now let's move ahead to know how it actually works. There are two main methods of working with Git-GitHub,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;With GitHub Desktop App &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With Command Line Interface / Terminal&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here we are gonna see the CLI method ...&lt;/p&gt;

&lt;p&gt;Before starting ,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download Git from &lt;a href="https://git-scm.com/downloads"&gt;Here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;You can use any terminal for this (Cmd, Bash, Powershell, etc).
Let's begin...&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#initializing-a-git-repository"&gt;
  &lt;/a&gt;
  Initializing a git repository
&lt;/h2&gt;

&lt;p&gt;You need to initialise the git repository which will store all your tracking information &amp;amp; logs.&lt;/p&gt;

&lt;p&gt;CD into Project Folder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd &amp;lt;Folder Name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Initialize the git repo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#start-tracking-files"&gt;
  &lt;/a&gt;
  Start Tracking Files
&lt;/h2&gt;

&lt;p&gt;You need to start git repo to track files for that you need to add files to the staging area to track.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also add all files once,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now all the files now being tracked&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-first-commit"&gt;
  &lt;/a&gt;
  Your First commit
&lt;/h2&gt;

&lt;p&gt;The commit is like a taking snapshot of the stage which will be stored in log files. Once you are done with all changes &amp;amp; ready to take Snapshot, commit your changes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m "&amp;lt;commit message&amp;gt;"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you don't use -m, git will open a vim editor (you can select which editor you prefer while running the installation of git) for you to enter the commit message. &lt;/p&gt;

&lt;p&gt;Now your changes are ready and you can upload your project to GitHub with all tracking information.&lt;br&gt;
Let's see how &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#add-remote-repo"&gt;
  &lt;/a&gt;
  Add Remote Repo
&lt;/h2&gt;

&lt;p&gt;For uploading files to GitHub you need to create a repository on GitHub (You can create it by clicking on create repository button) &lt;br&gt;
Now you have a remote repo, to push local changes to the remote you add a remote&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Git remote add &amp;lt;remote name&amp;gt; &amp;lt;remote url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#push-to-remote-repo"&gt;
  &lt;/a&gt;
  Push to Remote Repo
&lt;/h2&gt;

&lt;p&gt;Push your all local files to remote&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Git push -u &amp;lt;remote name&amp;gt; &amp;lt;upstream branch name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Congratulations, you have successfully uploaded your project to GitHub with all tracking information such as commit messages, changes, log, etc&lt;/p&gt;

&lt;p&gt;This was a beginner guide to publish your first project to GitHub. I hope it was fun. This is the most simple thing you can do with git-GitHub, there are lots of things you should check such as CI/CD with GitHub actions, GitHub pages etc. &lt;/p&gt;

&lt;p&gt;To explore all power of Git &amp;amp; GitHub feal free to google &amp;amp; you will find tons of resources. &lt;/p&gt;

&lt;p&gt;Let me know your thoughts on this post. I tried to explain in most simple manner. I hope you liked it! &lt;/p&gt;

&lt;p&gt;Also, any suggestion or feedback is always appreciated🙏. &lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/prathameshtwits"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>management</category>
    </item>
  </channel>
</rss>
