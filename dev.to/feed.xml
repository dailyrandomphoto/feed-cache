<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>7 Tips our Developers recommend to Newbie Devs</title>
      <author>EmilyCook321</author>
      <pubDate>Thu, 15 Jul 2021 08:14:50 +0000</pubDate>
      <link>https://dev.to/taxdoo/7-tips-our-developers-recommend-to-newbie-devs-50ji</link>
      <guid>https://dev.to/taxdoo/7-tips-our-developers-recommend-to-newbie-devs-50ji</guid>
      <description>&lt;p&gt;Today is &lt;a href="https://www.un.org/en/observances/world-youth-skills-day"&gt;World Youth Skills Day&lt;/a&gt; so we want to celebrate young people‚Äôs access to training and career opportunities by providing some inspiration for anyone interested in working in tech.&lt;/p&gt;

&lt;p&gt;We asked our developers, product managers and even our CEO about the resources that sparked their interest in tech and helped to hone their skills; here are their recommendations. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Practise this&lt;/strong&gt; ‚è∞&lt;br&gt;
If you have 30 minutes a day, try completing a few exercises on &lt;a href="https://www.freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt;. This is a great way to learn to code in bitesize amounts of time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Try this&lt;/strong&gt; üí°&lt;br&gt;
A good starting point are the Hello World courses on &lt;a href="https://www.codecademy.com/learn/learn-java/modules/learn-java-hello-world"&gt;Codecademy&lt;/a&gt;, which helps with learning tooling set-up and understanding how things work in that language. You can also test your knowledge by modifying the code and adding other statements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get stuck into this&lt;/strong&gt; üíª&lt;br&gt;
A slightly more advanced course for learning frontend development is &lt;a href="https://todomvc.com/"&gt;ToDoMVC&lt;/a&gt;, which also has a lot of other examples for each tech stack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Build this&lt;/strong&gt; üëæ&lt;br&gt;
Learning by doing is the best method which this &lt;a href="https://www.gamedev.tv/p/complete-c-unity-game-developer-3d-online-course-2020"&gt;C# Unity Game 3D course&lt;/a&gt; from gamedev.tv definitely will help you to do so.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read this&lt;/strong&gt; üìö&lt;br&gt;
&lt;a href="http://cleancoder.com/products"&gt;Clean Code&lt;/a&gt; is the classic book written by Uncle Bob, otherwise known as Robert Cecil Martin, who epitomizes the concept of clean code. From a product perspective, check out &lt;a href="https://leanproductplaybook.com/"&gt;Lean Product Playbook&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Watch this&lt;/strong&gt; üì∫&lt;br&gt;
&lt;a href="https://www.hbo.com/silicon-valley"&gt;Silicon Valley (HBO)&lt;/a&gt;; our co-founder, Dr. Matthias Allmendinger, recommends this series as it sparked the entrepreneurial spirit that brought Taxdoo to life.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eat this&lt;/strong&gt; üç±&lt;br&gt;
Sushi. Ok, just kidding. Although our developers do love a good Bento box, feel free to pick your favourite brain food for learning to code. Happy hacking doesn‚Äôt happen on an empty stomach!&lt;/p&gt;

&lt;p&gt;We hope this list was helpful! It is, of course, by no means complete- what else would you recommend for budding developers?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NP5gWL3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gc1ysfryomlx80qrfmvx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NP5gWL3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gc1ysfryomlx80qrfmvx.png" alt="Screen and VAT is Love logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We‚Äôre growing at Taxdoo! Follow us on &lt;a href="https://twitter.com/TaxdooEng"&gt;Twitter&lt;/a&gt; or &lt;a href="https://de.linkedin.com/company/taxdoo"&gt;LinkedIn&lt;/a&gt; for the latest news and job posts from us. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note: none of these posts are paid endorsements and are solely recommendations from individual colleagues at Taxdoo.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>React Dashboard - Open-source Full-stack Products</title>
      <author>Sm0ke</author>
      <pubDate>Thu, 15 Jul 2021 08:09:50 +0000</pubDate>
      <link>https://dev.to/sm0ke/react-dashboard-open-source-full-stack-products-4224</link>
      <guid>https://dev.to/sm0ke/react-dashboard-open-source-full-stack-products-4224</guid>
      <description>&lt;p&gt;Hello Coders,&lt;/p&gt;

&lt;p&gt;This article presents a curated list with open-source &lt;strong&gt;React Dashboards&lt;/strong&gt; crafted with &lt;strong&gt;JWT Authentication&lt;/strong&gt; Flow (register/login/logout) and a simple &lt;strong&gt;Node JS API&lt;/strong&gt; backend used to authenticate the users and manage the JWT tokens. All products, released under the MIT License, comes with active support and scheduled for future updates with more modules and features. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/product/react-node-js-datta-able"&gt;React Node Datta Able&lt;/a&gt; - Full-stack Seed Project&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/product/react-node-js-berry-dashboard"&gt;React Node JS Berry&lt;/a&gt; - Full-stack Seed Project &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/api-server-nodejs"&gt;Node JS API&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TFmNNbcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3h9fu3hf0by59psgbzi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TFmNNbcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3h9fu3hf0by59psgbzi.gif" alt="React Dashboard - Full-stack Datta Able Dashboard, now available wiht Node JS Backend."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-nodejs-datta-able"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/product/react-node-js-datta-able"&gt;React Nodejs Datta Able&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Datta Able&lt;/strong&gt; is an open-source &lt;strong&gt;React Dashboard&lt;/strong&gt; that provides a colorful and modern design. Datta Able React Free is the most stylised React Free Admin Template, around all other admin templates in the market. It comes with high feature-rich pages and components with fully developer-centric code. The product comes with a simple JWT authentication flow: login/register/logout.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Features: &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Modern aesthetics UI design - Designed by &lt;a href="https://codedthemes.com/"&gt;CodedThemes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;React, Redux, Redux-persist&lt;/li&gt;
&lt;li&gt;Authentication: JWT Login/Register/Logout&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/product/react-node-js-datta-able"&gt;React Nodejs Datta Able&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/react-datta-able-dashboard"&gt;React Nodejs Datta Able&lt;/a&gt; - Source Code &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H_UOa4bM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lp2svrrcnim5a3q6qqu9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H_UOa4bM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lp2svrrcnim5a3q6qqu9.jpg" alt="React Nodejs Datta Able - Full-stack open-source React Dashboard provided by AppSeed and CodedThemes."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-node-js-berry"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/product/react-node-js-berry-dashboard"&gt;React Node JS Berry&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Berry&lt;/strong&gt; is a creative free &lt;strong&gt;React Dashboard&lt;/strong&gt; build using the Material-UI. It is meant to be the best User Experience with highly customizable feature-riched pages. It is a complete game-changer React Dashboard Template with easy and intuitive responsive design as on retina screens or laptops. The product comes with a simple JWT authentication flow: login/register/logout. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Features&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Modern aesthetics UI design - Designed by &lt;a href="https://codedthemes.com/"&gt;CodedThemes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Material-UI components&lt;/li&gt;
&lt;li&gt;React, Redux, Redux-persist&lt;/li&gt;
&lt;li&gt;Authentication: JWT Login/Register/Logout&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/product/react-node-js-berry-dashboard"&gt;React Nodejs Berry&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-node-js-berry-dashboard.appseed-srv1.com/"&gt;React Nodejs Berry&lt;/a&gt; - LIVE Demo (UI only)&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ozQcakI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aj43uz1bfo7o0np1cu5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ozQcakI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aj43uz1bfo7o0np1cu5x.png" alt="React Node JS Berry - Open-source React Dashboard crafted as a full-stack project with a Node JS Backend."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;The products communicate with the Node JS API using a simple API with usable registration/login/logout flow. From this point, event the unexperienced programmers should be able to enhance the existing codebase and code more features. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources and support feel free to AMA in the comments section or access: &lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;Free &lt;a href="https://appseed.us/support"&gt;Support&lt;/a&gt; provided by AppSeed&lt;/li&gt;
&lt;li&gt;Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a curated list | Dev.to&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>fullstack</category>
      <category>appseed</category>
    </item>
    <item>
      <title>Placeholder text on an input instead of a label - does it pass WCAG‚Åâ The answer may surprise you! üò±</title>
      <author>InHuOfficial</author>
      <pubDate>Thu, 15 Jul 2021 07:52:38 +0000</pubDate>
      <link>https://dev.to/inhuofficial/placeholder-text-on-an-input-instead-of-a-label-does-it-pass-wcag-the-answer-may-surprise-you-94m</link>
      <guid>https://dev.to/inhuofficial/placeholder-text-on-an-input-instead-of-a-label-does-it-pass-wcag-the-answer-may-surprise-you-94m</guid>
      <description>&lt;p&gt;Technically yes, but don't do it!&lt;/p&gt;

&lt;p&gt;Oh you want more? &lt;/p&gt;

&lt;p&gt;I thought everyone was in a rush nowadays so I just thought I would answer the question.&lt;/p&gt;

&lt;p&gt;For those of you who like deep dives and want to see how the hell I, the guy who prattles on about accessibility all the time, came to that conclusion...strap in!&lt;/p&gt;

&lt;p&gt;I am about to get heavily into &lt;a href="https://www.w3.org/WAI/standards-guidelines/wcag/"&gt;Web Content Accessibility Guidelines (WCAG)&lt;/a&gt; and show (as far as I am aware) that because of the over complicated, edge case, loop the loops that exist in WCAG , answering the simplest accessibility question of them all is far from simple.&lt;/p&gt;

&lt;p&gt;For those of you who missed it, &lt;a href="https://dev.to/inhuofficial/w1y-d2s-a11y-h2e-to-be-so-b4y-c9d-a1d-i10e-38no"&gt;I did have an "angry rant" about WCAG in the past&lt;/a&gt; you might enjoy, if you like sarcasm and swearing that is! &lt;/p&gt;

&lt;p&gt;In fact that post was what reminded me about this and the Stack Overflow answer I gave on the same subject (which is the inspiration for this post)!&lt;/p&gt;

&lt;p&gt;Anyway, lets start with an important message! &lt;a href="#mainarticle"&gt;If you already know you should &lt;strong&gt;always have a visible, properly associated label&lt;/strong&gt; then you can skip to the main content.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-we-start"&gt;
  &lt;/a&gt;
  Before we start
&lt;/h2&gt;

&lt;p&gt;While I may land on "technically yes" at the end of this article, I want to warn you that having a placeholder as a label &lt;strong&gt;is not accessible&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Just because it might "pass" WCAG AA guidance doesn't mean you should do it. &lt;/p&gt;

&lt;p&gt;Visible labels (that are properly associated with an input) have hundreds of benefits over a placeholder:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;people with anxiety disorders need visible labels to stop them having to keep deleting their input to see your placeholder and check they filled in the correct field.&lt;/li&gt;
&lt;li&gt;people with poor vision may be using a screen magnifier to zoom to part of the page, it is easy to lose your position and a label lets them know they are still filling in the correct field / where they are in the form&lt;/li&gt;
&lt;li&gt;people with very poor vision (as well as people with learning impairments, people from other countries trying to improve understanding etc.) may use a screen reader - a properly associated label is important for them!&lt;/li&gt;
&lt;li&gt;people with no disabilities will find your form easier to use and will be more likely to fill it in, so even if you don't care about other people your conversion rate will improve and that will benefit you.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#accessible-input-example"&gt;
  &lt;/a&gt;
  Accessible input example
&lt;/h3&gt;

&lt;p&gt;Notice how I don't use &lt;strong&gt;implicit&lt;/strong&gt; labels (wrapping the input in the label). &lt;/p&gt;

&lt;p&gt;While it is far neater, semantically correct etc. there is an unfortunate failing in voice software. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://a11ysupport.io/tech/html/label_element"&gt;Dragon Naturally Speaking and Apple Voice control don't work properly with implicit labels&lt;/a&gt; (no I am not joking!).&lt;/p&gt;

&lt;p&gt;So you should probably stay old school with your labels and use the &lt;code&gt;for&lt;/code&gt; attribute on your labels to &lt;strong&gt;explicitly&lt;/strong&gt; associate the label with the input.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"first-name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;First Name&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"first-name"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üò¢&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#anyway-to-the-question-does-placeholder-text-on-an-input-pass-wcag"&gt;
  &lt;/a&gt;
  Anyway - to the question - does placeholder text on an input pass WCAG?
&lt;/h2&gt;

&lt;p&gt;For the purposes of this article I am talking about standard &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; elements. &lt;/p&gt;

&lt;p&gt;Checkboxes, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; etc. etc. must have visible labels. &lt;/p&gt;

&lt;p&gt;But as &lt;code&gt;placeholder&lt;/code&gt; attributes appear on standard &lt;code&gt;&amp;lt;input type="text"&amp;gt;&lt;/code&gt; elements and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; elements that is what I am focusing on here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-which-wcag-rules-apply"&gt;
  &lt;/a&gt;
  So which WCAG rules apply?
&lt;/h3&gt;

&lt;p&gt;Out of the 80+ Success Criterion (rules) in &lt;a href="https://www.w3.org/TR/WCAG22/"&gt;WCAG 2.2&lt;/a&gt; there are only 6 that seem to be applicable.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#sc111"&gt;1.1.1 Non-text Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sc131"&gt;1.3.1 Info and Relationships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sc246"&gt;2.4.6 Headings and Labels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#sc253"&gt;2.5.3: Label in Name&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#sc332"&gt;3.3.2 labels or instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sc412"&gt;4.1.2 Name, Role, Value&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lets tackle each one and see whether any of them give us an answer!&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#111-nontext-context"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/text-equiv-all.html"&gt;1.1.1 Non-text Context&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The general idea of this Success Criterion is that anything that is not text (images, controls etc.) should have an alternative way of describing those items programatically to assistive technology. For example &lt;code&gt;alt&lt;/code&gt; attributes on images describe an image to assistive technology such as screen readers.&lt;/p&gt;

&lt;p&gt;So a key sentence in this Success Criterion is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Controls, Input:&lt;/strong&gt; If non-text content is a control or accepts user input, then it has a name that describes its purpose. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;OK, so that means we need to know what is a "name" in the context of WCAG.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#name-in-the-context-of-wcag"&gt;
  &lt;/a&gt;
  Name in the context of WCAG
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;text by which software can identify a component within Web content to the user&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/text-equiv-all.html#namedef"&gt;https://www.w3.org/TR/UNDERSTANDING-WCAG20/text-equiv-all.html#namedef&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well that is super useful, now we need to know how software can identify a component.&lt;/p&gt;

&lt;p&gt;Luckily we have that covered too (and specifically for &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements which is super helpful!)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;5.1.1 input type="text", input type="password", input type="search", input type="tel", input type="email", input type="url" and textarea Element Accessible Name Computation&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If the control has an aria-label or an aria-labelledby attribute the accessible name is to be calculated using the algorithm defined in Accessible Name and Description: Computation and API Mappings 1.1.&lt;/li&gt;
&lt;li&gt;Otherwise use the associated label element(s) accessible name(s) - if more than one label is associated; concatenate by DOM order, delimited by spaces.&lt;/li&gt;
&lt;li&gt;If the accessible name is still empty, then: use the control's title attribute.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Otherwise use the control's placeholder attribute.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;If none of the above yield a usable text string there is no accessible name.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href="https://www.w3.org/TR/html-aam-1.0/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-name-computation"&gt;https://www.w3.org/TR/html-aam-1.0/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-name-computation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Right, that is a lot to digest but point 4 is the one that is relevant to this article, the &lt;code&gt;placeholder&lt;/code&gt; attribute can be used to calculate the name for an element.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#so-does-111-nontext-context-contain-anything-that-requires-a-visible-label"&gt;
  &lt;/a&gt;
  So does 1.1.1 Non-text Context contain anything that requires a visible label?
&lt;/h4&gt;

&lt;p&gt;Nope!&lt;/p&gt;

&lt;p&gt;If you read the whole page there is not one specific mention of a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element needing to be used on a form control.&lt;/p&gt;

&lt;p&gt;So far, we have no answer üò¢.&lt;/p&gt;

&lt;p&gt;Maybe Info and Relationships will help us!&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#131-info-and-relationships"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/content-structure-separation-programmatic.html"&gt;1.3.1 Info and Relationships&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The general idea of this Success Criterion is that structure and relationships can be programatically determined and don't rely solely on visual cues. (For example if you just used &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements for your whole application there is no way for a screen reader to work out what information is related as &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements have no semantic meaning.)&lt;/p&gt;

&lt;p&gt;Checking 1.3.1 - although it mentions labels, it does not specifically mention the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element anywhere. It also states that it is a "judgement call" as to whether relationships should be programmatically determined or presented in text.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There may also be cases where it may be a &lt;strong&gt;judgment call&lt;/strong&gt; as to whether the relationships should be programmatically determined or be presented in text. However, when technologies support programmatic relationships, it is strongly encouraged that information and relationships be programmatically determined rather than described in text. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Anyway, this Criterion is more likely to cover "does a label have to be associated with an input"...which worryingly may also be questionable given "strongly encouraged" is the wording here. &lt;/p&gt;

&lt;p&gt;Anyway, that isn't the point of this article. As it stands, will still have no answer either way!&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#246-headings-and-labels"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/headings-and-labels"&gt;2.4.6 Headings and Labels&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Rather than spend too much time here we get an early answer as to whether this Success Criterion is relevant:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This Success Criterion &lt;strong&gt;does not require headings or labels&lt;/strong&gt;. This Success Criterion requires that &lt;strong&gt;if headings or labels are provided, they be descriptive.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well as we are arguing that we might not need labels this obviously won't apply!&lt;/p&gt;

&lt;p&gt;So as this point isn't relevant, lets try SC 2.5.3 &lt;strong&gt;Label&lt;/strong&gt; in name (sounds promising!)&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#253-label-in-name"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/label-in-name.html"&gt;2.5.3: Label in Name&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The idea behind this Success Criterion is that if there is a label with text, then that text can be accessed programatically (so you can't use just an image of text for example without an &lt;code&gt;alt&lt;/code&gt; attribute...but if you are using images of text for labels you have bigger problems! ü§£)&lt;/p&gt;

&lt;p&gt;Well unfortunately WCAG ties itself in knots again here:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that placeholder text within an input field is not considered an appropriate means of providing a label. The HTML5 specification states The placeholder attribute should not be used as an alternative to a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;. However, it is worth noting that "label" in that HTML5 statement is in code brackets and links to the label element. &lt;strong&gt;For the purposes of this Label in Name Success Criterion, "label" is not used in such a programmatic sense but is simply referring to a text string in close visual proximity to a component. As such, in the absence of any other nearby text string (as described in the preceding list), if an input contains placeholder text, such text may be a candidate for Label in Name.&lt;/strong&gt; This is supported both through the accessible name calculation (discussed later) and from the practical sense that where a visible label is not otherwise provided, it is likely that a speech-input user may attempt to use the placeholder text value as a means of interacting with the input.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So this Success Criterion still doesn't give us an answer, if anything it actually looks like it is supporting &lt;code&gt;placeholder&lt;/code&gt; text as a viable (sub-optimal and not recommended) alternative to a properly associated &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However there is another thing to note here. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The HTML5 specification states The placeholder attribute should not be used as an alternative to a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;.&lt;/strong&gt;]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that should persuade you that a visible and properly associated label is essential. &lt;/p&gt;

&lt;p&gt;But it says it shouldn't be used, not that it cannot be used. SO the question is...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#is-an-input-with-just-a-raw-placeholder-endraw-attribute-valid-html"&gt;
  &lt;/a&gt;
  Is an input with just a &lt;code&gt;placeholder&lt;/code&gt; attribute valid HTML?
&lt;/h4&gt;

&lt;p&gt;Well we have the W3C Validator to check this against.&lt;/p&gt;

&lt;p&gt;So is an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with a placeholder valid HTML? Well the answer (according to the &lt;a href="https://validator.w3.org/nu/#textarea"&gt;W3C validator&lt;/a&gt;) is yes! The following is valid HTML!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;test&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"test"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I am growing weary now, but "labels or instructions"...this is it, this is all about labelling things! &lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#332-labels-or-instructions"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/labels-or-instructions.html"&gt;3.3.2 labels or instructions&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This Success Criterion is all about authors providing labels or instructions in forms. &lt;/p&gt;

&lt;p&gt;However out hopes are destroyed almost instantly:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This Success Criterion does not require that labels or instructions be correctly marked up, identified, or associated with their respective controls.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our last hope, Name, Role, Value....come on 4.1.2...you can do it!&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#412-name-role-value"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/ensure-compat-rsv.html"&gt;4.1.2 Name, Role, Value&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This Success Criterion is to ensure that important information about all elements on a page can be programatically determined.&lt;/p&gt;

&lt;p&gt;We already covered this in &lt;a href="#sc111"&gt;1.1.1 Non-text Context&lt;/a&gt;. A placeholder attribute is considered acceptable for name computations and therefore we pass this Success Criterion too!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#one-final-swing-of-the-sword-surely-there-is-something-that-states-a-label-must-always-be-visible"&gt;
  &lt;/a&gt;
  One final swing of the sword, surely there is something that states a label must always be visible!
&lt;/h2&gt;

&lt;p&gt;As &lt;code&gt;placeholder&lt;/code&gt; attributes disappear once data is entered perhaps the answer is now looking at it from a code standards standpoint but purely from a perspective of a label having to be visible?&lt;/p&gt;

&lt;p&gt;Interestingly you do not have to have a visible label for &lt;a href="#sc111"&gt;1.1.1 Non-text Context&lt;/a&gt;, &lt;a href="#sc131"&gt;1.3.1 Info and Relationships&lt;/a&gt; and &lt;a href="#sc412"&gt;4.1.2 Name, Role, Value&lt;/a&gt; so we can't use that argument as to needing an actual &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Taken from [H44: Using label elements to associate text labels with form controls][&lt;a href="https://www.w3.org/TR/2016/NOTE-WCAG20-TECHS-20161007/H44"&gt;https://www.w3.org/TR/2016/NOTE-WCAG20-TECHS-20161007/H44&lt;/a&gt;]&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This technique (associating a label with an input) is sufficient for Success Criteria 1.1.1, 1.3.1 and 4.1.2 &lt;strong&gt;whether or not the label element is visible.&lt;/strong&gt; That is, it may be hidden using CSS. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With that being said the next sentence says...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;However, for Success Criterion 3.3.2, the label element must be visible since it provides assistance to all users who need help understanding the purpose of the field.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But in &lt;a href="#sc332"&gt;3.3.2 labels or instructions&lt;/a&gt; although it has to be visible, it doesn't have to be correctly marked up (remember, I did say it a long time ago!).&lt;/p&gt;

&lt;p&gt;The loops continue!&lt;/p&gt;

&lt;p&gt;So there is all the relevant information I could find in WCAG and the outcome is still fuzzy, but with that being said I do have a conclusion for you!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Nowhere in WCAG does it &lt;strong&gt;explicitly&lt;/strong&gt; state that a placeholder cannot be used as a label.&lt;/p&gt;

&lt;p&gt;WCAG also states that a &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H65.html"&gt;title can be used to label an input&lt;/a&gt; üôÑ and that is worse than a placeholder as it is completely inaccessible to keyboard users! &lt;/p&gt;

&lt;p&gt;We also covered this &lt;a href="#sc111"&gt;1.1.1 Non-text Context&lt;/a&gt; when we were discussing accessible name computations. &lt;/p&gt;

&lt;p&gt;You may have missed it as we were focused on point 4 about placeholders but point 3 says the &lt;code&gt;title&lt;/code&gt; attribute can be used! (yes, &lt;code&gt;title&lt;/code&gt; attributes are used &lt;strong&gt;before&lt;/strong&gt; &lt;code&gt;placeholder&lt;/code&gt; attributes to calculate the accessible name...it shows the age of the documents as &lt;code&gt;title&lt;/code&gt; attributes are useless nowadays with touch devices and useless to keyboard users ü§¶‚Äç‚ôÇÔ∏è)  &lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;If the accessible name is still empty, then: use the control's title attribute.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#am-i-100-certain"&gt;
  &lt;/a&gt;
  Am I 100% certain?
&lt;/h3&gt;

&lt;p&gt;Well WCAG is hundreds of thousands of words so it is possible I have missed a key sentence somewhere that would tie it all together.&lt;/p&gt;

&lt;p&gt;But from what I have read I believe (&lt;strong&gt;very surprisingly!!&lt;/strong&gt;) that it is valid under WCAG 2.1 to only have a &lt;code&gt;placeholder&lt;/code&gt; on an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; if we are going by "the letter of the law".&lt;/p&gt;

&lt;p&gt;Obviously as I stated several times &lt;strong&gt;DO NOT USE A PLACEHOLDER ONLY ON AN INPUT&lt;/strong&gt; as it is not accessible to a lot of users rely on visible labels.&lt;/p&gt;

&lt;p&gt;For example: People with anxiety disorders or learning difficulties really hate inputs with &lt;code&gt;placeholder&lt;/code&gt; attributes as labels. This is because the label disappears when they type so they can't check they have filled the correct field in without deleting everything.&lt;/p&gt;

&lt;p&gt;Also some screen reader and browser combinations do not work with them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And above all&lt;/strong&gt; - if you can somehow find a definitive answer to this question within WCAG then please let me know in the comments. While this has been a fun article to write I would hope that somewhere there is a line of text I have missed!&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>html</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>JavaScript question #Day 6</title>
      <author>Sooraj S</author>
      <pubDate>Thu, 15 Jul 2021 07:49:17 +0000</pubDate>
      <link>https://dev.to/soorajs98/javascript-question-day-6-3pe7</link>
      <guid>https://dev.to/soorajs98/javascript-question-day-6-3pe7</guid>
      <description>&lt;p&gt;&lt;strong&gt;What's the output ?&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Chameleon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;colorChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;newColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;freddie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Chameleon&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;purple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;freddie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;colorChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;orange&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A: &lt;code&gt;orange&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B: &lt;code&gt;purple&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C: &lt;code&gt;green&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;D: &lt;code&gt;TypeError&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;colorChange&lt;/code&gt; function is static. Static methods are designed to live only on the constructor in which they are created, and cannot be passed down to any children. Since &lt;code&gt;freddie&lt;/code&gt; is a child, the function is not passed down, and not available on the &lt;code&gt;freddie&lt;/code&gt; instance: a &lt;code&gt;TypeError&lt;/code&gt; is thrown.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>node</category>
    </item>
    <item>
      <title>Getting started with chrome developer tools </title>
      <author>krishna kakade</author>
      <pubDate>Thu, 15 Jul 2021 06:58:18 +0000</pubDate>
      <link>https://dev.to/krishnakakade/getting-started-with-chrome-developer-tools-fin</link>
      <guid>https://dev.to/krishnakakade/getting-started-with-chrome-developer-tools-fin</guid>
      <description>&lt;p&gt;Hello there :) &lt;br&gt;
today we are going to learn practically about how we can use chrome developer tools if your into webdev/security related domain then it is more beneficial to you .&lt;br&gt;
So let's start &lt;br&gt;
First thing you need is latest chrome browser installed then do a right click and look for &lt;code&gt;Inspect&lt;/code&gt; or do &lt;code&gt;CTRL+SHIFT+I&lt;/code&gt; then you can see developer tools section out there.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DiwEtha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6xlhslpy2oppk7u4wny3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DiwEtha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6xlhslpy2oppk7u4wny3.png" alt="devtools"&gt;&lt;/a&gt;&lt;br&gt;
In this above image in preferences you can do basic things like theme changes and formatting disable / enable javascript and in the &lt;strong&gt;Workspace&lt;/strong&gt; section you can add your own reactjs or any project and you can change code from your browser also and in the experiments section those are upcoming features you can test it out in your browser in &lt;code&gt;Devices&lt;/code&gt; you can add custom devices or existing devices for checking in different different devices how your website/web-app behaves or work and in throttling you can customise your internet connection speed according to your needs and in &lt;code&gt;shortcuts&lt;/code&gt; you can use &lt;code&gt;CTRL+L&lt;/code&gt; for clearing console and many more shortcuts to save your seconds/minutes :)&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Elements section *&lt;/em&gt;&lt;br&gt;
if you go the elements section and did right click to the header or any tag you can edit that with right click and then below thing &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Vglp_Yw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9f184081ngvai91qg19j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Vglp_Yw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9f184081ngvai91qg19j.png" alt="Elements"&gt;&lt;/a&gt;&lt;br&gt;
and also if you do select to the specific heading tag or paragraph then after right clicks you can copy all his CSS styles and improve it and use it for yourself or for your project like implementing twitter animations for buttons in your webapp &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8J8naJPE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/247galruz6zgx3f3cqf3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8J8naJPE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/247galruz6zgx3f3cqf3.png" alt="selector"&gt;&lt;/a&gt; &lt;br&gt;
and also you can do duplicate or copy of the elements &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sources&lt;/strong&gt;&lt;br&gt;
In the sources section you we can create breakpoints for our code which to execute or not or stop only execute not debug &lt;br&gt;
like that &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Kc4CeIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9a7sypt8bnglnbhfrc6j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Kc4CeIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9a7sypt8bnglnbhfrc6j.png" alt="sources"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have ul(un ordered list and you want to copy this js path particlular list item then you can get js path by this)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pa_rI-_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ob6hib8yu94i8vuwpzql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pa_rI-_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ob6hib8yu94i8vuwpzql.png" alt="sources"&gt;&lt;/a&gt; &lt;br&gt;
and you can remove that item using this thing&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;onClickEvent&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;mycount&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;your a best learner&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;mycount&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;excercise&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;body &amp;gt; ul &amp;gt; li:nth-child(2)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we use it as IDE(Integrated Development Environment) chrome workspace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Console&lt;/strong&gt;&lt;br&gt;
"Preserve Log upon Navigation"&lt;br&gt;
will persist console content by default. You can clear the console log by clicking the 'clear' button in the top right or opening and closing the tools.&lt;br&gt;
we can use console.log to debug and for solving errors and also for displaying data more precisely using console.table().&lt;br&gt;
&lt;strong&gt;Network&lt;/strong&gt;&lt;br&gt;
In this section you can turn on throttling like this change your network within in the browser &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pr2YZBYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b3um65fnc8c1sc0m9w35.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pr2YZBYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b3um65fnc8c1sc0m9w35.png" alt="throttling"&gt;&lt;/a&gt; &lt;br&gt;
and also you can check how much time content is taking to load &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7wTvGR6n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otlr0cudkhnrni5gjoa4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7wTvGR6n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otlr0cudkhnrni5gjoa4.png" alt="speed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Application&lt;/strong&gt;&lt;br&gt;
if open same application in another tabs then that data should be shared that called &lt;code&gt;localstorage&lt;/code&gt; and data that is limited for that Session only that called sessionStorage we can save that data for that session &lt;br&gt;
you can add items to sessionStorage using this&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;js sessionStorage.setItem("name","krishna");&lt;br&gt;
undefined&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;br&gt;
For knowing more performance using you can refer &lt;a href="https://web.dev/measure/"&gt;web.dev&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Security&lt;/strong&gt;&lt;br&gt;
you can know more about site is secured or not which certificates like &lt;a href="https://www.digicert.com/tls-ssl/business-tls-ssl-certificates?ef_id=CjwKCAjwlrqHBhByEiwAnLmYUGLn72x56d2SJTXbz2D_jO2J_ZxfaHdkLz6G4ygFFJ02UEv_9AaoZBoCT9cQAvD_BwE:G:s&amp;amp;s_kwcid=AL!6100!3!474776495915!e!!g!!secure%20site&amp;amp;campaignid=197474813&amp;amp;adgroupid=59344376853&amp;amp;gclid=CjwKCAjwlrqHBhByEiwAnLmYUGLn72x56d2SJTXbz2D_jO2J_ZxfaHdkLz6G4ygFFJ02UEv_9AaoZBoCT9cQAvD_BwE"&gt;digicerti&lt;/a&gt; site is using .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Memory&lt;/strong&gt;&lt;br&gt;
We can take heap snapshots to see it to take JS heap snapshots, analyze memory graphs, compare snapshots, and find memory leaks.&lt;br&gt;
&lt;a href="https://developer.chrome.com/docs/devtools/memory-problems/heap-snapshots/"&gt;Know more hear&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;thank you for reading &lt;br&gt;
And also i am open for front-end web development jobs and i have experience with react(8 months) a if anyone is having opportunity related to this domains please let me know i am passionate about learning new things and implementing projects.&lt;br&gt;
have a great day ahead :)&lt;/p&gt;

</description>
      <category>chrome</category>
      <category>devtools</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Displaying Real-Time Data in Your Web Application Without Hassle: IHP Auto Refresh ‚ú®</title>
      <author>digitallyinduced</author>
      <pubDate>Thu, 15 Jul 2021 06:42:59 +0000</pubDate>
      <link>https://dev.to/digitallyinduced/displaying-real-time-data-in-your-web-application-without-hassle-ihp-auto-refresh-4e7a</link>
      <guid>https://dev.to/digitallyinduced/displaying-real-time-data-in-your-web-application-without-hassle-ihp-auto-refresh-4e7a</guid>
      <description>&lt;p&gt;&lt;strong&gt;In the IHP framework we have one feature that typically looks like dark magic to people coming from other frameworks: Auto Refresh ‚ú®. Ever wanted to display real-time data in your web application, but found WebSockets too much of a hassle? Add a single keyword in your IHP controller, and you are all set.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Auto Refresh offers a way to re-render the HTML views of your application when the underlying data changes, as long as the page is still open inside the user‚Äôs browser window. Auto Refresh replaces manually polling for status updates or complicated Websocket code.&lt;/p&gt;

&lt;p&gt;Without any manual work we can have e.g. live updating dashboards, chat message views that automatically display new messages when they arrive, or news feeds that automatically display new activities.&lt;/p&gt;

&lt;p&gt;If you have a react.js background, you can think of an Auto Refresh view as a react component where the state is the actual backend PostgreSQL database. Whenever the database state changes, the view is re-rendered. Like a normal react component. The only major difference in our approach is that all the rendering is happening on the server side. So you have access to all your application code. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#realworld-example-ihp-cloud"&gt;
  &lt;/a&gt;
  Real-world example: IHP Cloud
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ihpcloud.com/"&gt;IHP Cloud&lt;/a&gt; is a deployment platform for IHP applications. After clicking on the ‚ÄúDeploy now‚Äù button, the user is redirected to a deployment status page. Similar to GitHub actions you can see the current status of the deployment and all the logs. Once the deployment is finished, the status turns green.&lt;/p&gt;

&lt;p&gt;Before IHP Auto Refresh was invented, this page was implemented using a manual ajax polling every 1 second. This was very error prone and polling too fast sometimes caused the CPU coolers to turn on.&lt;/p&gt;

&lt;p&gt;Here‚Äôs how it looks now with Auto Refresh:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Rty2Nyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/ihp-cloud.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Rty2Nyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/ihp-cloud.gif" alt="Preview of auto refresh on the progress page of IHP cloud"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The progress bar, logs and the deployment status is automatically updated without any app-specific javascript. Whenever the deployment progresses, the IHP server pushes an updated view to the browser.&lt;/p&gt;

&lt;p&gt;Auto Refresh can be activated for any IHP controller action by adding a single &lt;code&gt;autoRefresh&lt;/code&gt; keyword in front of the action.&lt;/p&gt;

&lt;p&gt;Here‚Äôs the code of the above deployment status view: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XajIt3Kr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/ihp-cloud-code.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XajIt3Kr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/ihp-cloud-code.png" alt="Code editor with an arrow pointing to the use of the autoRefresh function to enable it for an action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see that there‚Äôs an &lt;code&gt;autoRefresh&lt;/code&gt; keyword in front of the ‚Äúdo‚Äù in the first line of the action. This enables auto refresh. This single keyword is all it needs for IHP auto refresh to get going.&lt;/p&gt;

&lt;p&gt;If we would remove the &lt;code&gt;autoRefresh&lt;/code&gt; keyword, we would need to manually refresh the page all the time to see the latest deployment status.&lt;/p&gt;

&lt;p&gt;Let‚Äôs take a look at what IHP‚Äôs &lt;code&gt;autoRefresh&lt;/code&gt; keyword does. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ihp-auto-refresh-technical-overview"&gt;
  &lt;/a&gt;
  IHP Auto Refresh: Technical Overview
&lt;/h2&gt;

&lt;p&gt;When we first load a page like the deployment status page above, the &lt;code&gt;autoRefresh&lt;/code&gt; keyword activates IHP Auto Refresh for this action. Once activated it starts tracking all SQL queries the controller action is running against the database. It inspects the &lt;code&gt;SELECT * FROM ‚Ä¶&lt;/code&gt; queries and keeps track of all the tables that have been used.&lt;/p&gt;

&lt;p&gt;After the page is initially rendered on the browser, a small JavaScript function provided by IHP will connect back to the Server using a WebSocket connection.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jPJcFI1W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/auto-refresh-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jPJcFI1W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/auto-refresh-1.png" alt="Diagram showing how browser and server interact in the case of an autoRefresh action. First, the browser makes a GET request for the action, in this case /ShowDeployment. The server executes two SELECT statements, which are automatically recognized using by autoRefresh. The server sends the initial HTML to the browser, which initiates a new websocket connection to the server. The server then watches the tables used in the SELECT statements for changes."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When the WebSocket connection is established, IHP starts watching the tables your action has been using for changes.&lt;/p&gt;

&lt;p&gt;In our example view from above, it starts watching on the deployments and deployment_logs tables, as these have been used for rendering the initial deployment status page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0GYLBGGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/auto-refresh-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0GYLBGGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/auto-refresh-2.png" alt='A diagram showing how the server watches for data changes to send new data to the browser. First, the server tells the postgres database that it wants to "watch" the deployments and deployment_logs table. Then the database notifies the server for INSERT and UPDATE statements executed on those tables. As a result, the originally requested action is re-run with the new data, and the result is sent to the browser using the websocket connection that was previously established. The same happens for any later changes to the data in the database.'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now a job worker starts working on the deployment. It will insert new log lines into the &lt;code&gt;deployment_logs&lt;/code&gt; table and at the end update the &lt;code&gt;deployments&lt;/code&gt; table to mark the deployment status as completed.&lt;/p&gt;

&lt;p&gt;Whenever IHP auto refresh is notified about a table change via &lt;code&gt;pg_notify&lt;/code&gt;, it will re-run the action on the server-side. When the generated HTML looks different than the HTML generated on the initial page load, it will send the new HTML to the browser using the WebSocket connection.&lt;/p&gt;

&lt;p&gt;Whenever the JavaScript on the browser-side receives new HTML, it will update the current page using a DOM-diff approach (using &lt;a href="https://github.com/patrick-steele-idem/morphdom"&gt;morphdom&lt;/a&gt;). So only DOM nodes that have actually changed between the initial page load and the updated HTML will be updated.&lt;/p&gt;

&lt;p&gt;All of this happens behind the scenes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summing-things-up"&gt;
  &lt;/a&gt;
  Summing things up:
&lt;/h2&gt;

&lt;p&gt;Auto Refresh is a very handy tool to make ‚Äúlive‚Äù views that always display the latest data. It can replace most needs for manual ajax polling or complicated WebSocket update code. Because it‚Äôs so quick to set up, you typically end up using auto refresh in places where you otherwise wouldn‚Äôt add any auto-update logic, when you‚Äôd have to manually write it.&lt;/p&gt;

&lt;p&gt;If you're new to IHP, &lt;a href="https://youtu.be/UbDtS_mUMpI"&gt;check out the demo video üì∫&lt;/a&gt;.&lt;br&gt;
You can &lt;a href="https://ihp.digitallyinduced.com/Guide/auto-refresh.html"&gt;learn more about IHP Auto Refresh in the documentation üìö&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>haskell</category>
      <category>ihp</category>
      <category>functional</category>
    </item>
    <item>
      <title>Learning Go by examples: Introduction </title>
      <author>Aur√©lie Vache</author>
      <pubDate>Thu, 15 Jul 2021 06:17:11 +0000</pubDate>
      <link>https://dev.to/aurelievache/learning-go-by-examples-introduction-448n</link>
      <guid>https://dev.to/aurelievache/learning-go-by-examples-introduction-448n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-golang"&gt;
  &lt;/a&gt;
  Why Golang?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QGoLinJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4eq8zzjvrwbyj14x0lr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QGoLinJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4eq8zzjvrwbyj14x0lr.png" alt="love gopher"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Former Java developer for 10 years, I discovered &lt;a href="https://golang.org/"&gt;Golang&lt;/a&gt; (aka Go) more than 4 years ago and fell in love with its simplicity and learning curve. It's easy to start creating an application in Go but you have to dig deeper so as not to fall into certain pitfalls ^^.&lt;/p&gt;

&lt;p&gt;I like the explanation by example, so in this new series of articles, I will try to introduce you to Go with concrete applications in each article.&lt;/p&gt;

&lt;p&gt;Let's start this serie with a prerequisite ;-).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;The first thing to do is to install Golang in your local computer. You can follow the &lt;a href="https://golang.org/doc/install"&gt;installation procedure on the official website&lt;/a&gt; but I recommend to install and use &lt;a href="https://github.com/moovweb/gvm"&gt;GVM&lt;/a&gt;, a Go version manager, that will allow you to install and update the versions of Go by specifying which version you want.&lt;/p&gt;

&lt;p&gt;For bash:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bash &amp;lt; &amp;lt;(curl -s-S-L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For zsh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;zsh &amp;lt; &amp;lt;(curl -s-S-L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ gvm
Usage: gvm [command]

Description:
  GVM is the Go Version Manager

Commands:
  version    - print the gvm version number
  get        - gets the latest code (for debugging)
  use        - select a go version to use (--default to set permanently)
  diff       - view changes to Go root
  help       - display this usage text
  implode    - completely remove gvm
  install    - install go versions
  uninstall  - uninstall go versions
  cross      - install go cross compilers
  linkthis   - link this directory into GOPATH
  list       - list installed go versions
  listall    - list available versions
  alias      - manage go version aliases
  pkgset     - manage go packages sets
  pkgenv     - edit the environment for a package set
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The GVM command that will interest us especially is the command &lt;code&gt;gvm install&lt;/code&gt;, which we can use like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ gvm install [version] [options]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Go installation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ gvm install go1.16.5 -B
$ gvm use go1.16.5 --default
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your &lt;code&gt;.zshrc&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt; file, set your &lt;strong&gt;$GOROOT&lt;/strong&gt; and &lt;strong&gt;$GOPATH&lt;/strong&gt; environment variables.&lt;/p&gt;

&lt;p&gt;Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[[ -s "$HOME/.gvm/scripts/gvm" ]] &amp;amp;&amp;amp; source "$HOME/.gvm/scripts/gvm"
export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export PATH=${PATH}:$GOBIN:$GOROOT/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can check our current Go version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ go version
go version go1.16.5 darwin/amd64
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Cool!&lt;br&gt;
We now know how to install and switch between different versions of Go. We now can create our first applications!&lt;/p&gt;

</description>
      <category>go</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Maintainer AMA : Ajin Abraham of MobSF üôè</title>
      <author>Mathew J Padayatty</author>
      <pubDate>Thu, 15 Jul 2021 05:57:57 +0000</pubDate>
      <link>https://dev.to/aviyel/maintainer-ama-ajin-abraham-of-mobsf-42cf</link>
      <guid>https://dev.to/aviyel/maintainer-ama-ajin-abraham-of-mobsf-42cf</guid>
      <description>&lt;p&gt;We are super excited to  host a Data security AMA for the &lt;a href="https://aviyel.com/projects/mobsf"&gt;Mobile Security Framework (MobSF)&lt;/a&gt; community with the Maintainer &lt;a href="https://twitter.com/ajinabraham"&gt;Ajin Abraham&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aviyel.com/post/307/mobile-security-ama-with-maintainer-ajin-abraham-mobsf"&gt;*Post AMA Questions here *&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can‚Äôt wait to engage with the community that makes this project what it is today.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-in-the-open"&gt;
  &lt;/a&gt;
  Building in the open. üö©
&lt;/h2&gt;

&lt;p&gt;The Mobile Application market is growing at breakneck speed, and so is the Mobile Security industry. With frequent application releases and updates happening, conducting the complete security analysis of mobile applications becomes challenging.&lt;/p&gt;

&lt;p&gt;Ajin Abraham, started MobSF mainly to counteract the time-consuming and cumbersome overheads in setting up and maintaining a mobile application testing environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-join"&gt;
  &lt;/a&gt;
  Why should you join?üöÄ
&lt;/h2&gt;

&lt;p&gt;MobSF is on a mission to make the best security assessment tool for Android and iOS applications and make Mobile application security accessible&lt;/p&gt;

&lt;p&gt;MobSF is hosted on local environments so that the sensitive data doesn't interact with the cloud environment. With MobSF, mobile app test environments could be set up easily on all three major platforms, i.e. Android, iOS, and Windows.&lt;/p&gt;

&lt;p&gt;MobSF is also recommended by OWASP MSTG for static analysis of security in mobile applications and is almost industry standard when it comes to Mobile security.&lt;/p&gt;

&lt;p&gt;Let‚Äôs talk about Mobile security, Open-Source and everything in between.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#save-the-date-friday-july-16th-2021"&gt;
  &lt;/a&gt;
  Save the date: üìÜ&lt;strong&gt;Friday, July 16th, 2021&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Part I: üö©Ajin Abraham, Maintainer, MobSF.&lt;/p&gt;

&lt;p&gt;Time-&lt;strong&gt;7 PM IST¬†(Asia)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Part II: üö©Ajin Abraham, Maintainer, MobSF.&lt;/p&gt;

&lt;p&gt;Time-&lt;strong&gt;7 PM PST (North America)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join the conversation!&lt;/p&gt;

&lt;p&gt;Team Aviyel&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>showdev</category>
      <category>webdev</category>
      <category>ama</category>
    </item>
    <item>
      <title>Understanding Flutter - a beginner's guide</title>
      <author>Praveen Varma</author>
      <pubDate>Thu, 15 Jul 2021 05:51:19 +0000</pubDate>
      <link>https://dev.to/geekyprawins/understanding-flutter-a-beginner-s-guide-2l6h</link>
      <guid>https://dev.to/geekyprawins/understanding-flutter-a-beginner-s-guide-2l6h</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-flutter"&gt;
  &lt;/a&gt;
  &lt;em&gt;What is Flutter?&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://flutter.dev"&gt;Flutter&lt;/a&gt;&lt;/strong&gt; is a tool that allows to build &lt;em&gt;native cross-platform apps&lt;/em&gt; and that means for &lt;em&gt;iOS&lt;/em&gt; and &lt;em&gt;Android&lt;/em&gt;, with the one programming language and codebase. So let's have a closer look at this nice sentence here. Important is that we build &lt;em&gt;native cross-platform apps&lt;/em&gt;, so we build both an &lt;em&gt;iOS&lt;/em&gt; app and an &lt;em&gt;Android&lt;/em&gt; app. We're not building a &lt;em&gt;web app&lt;/em&gt; that runs in the browser, we're not building an app that gets &lt;em&gt;wrapped&lt;/em&gt; by native apps, we build real apps, two different kinds of apps in the end for &lt;em&gt;iOS&lt;/em&gt; and &lt;em&gt;Android&lt;/em&gt;, which you then distribute through the different app stores, so through the &lt;strong&gt;Apple App Store&lt;/strong&gt; and the &lt;strong&gt;Google Play store&lt;/strong&gt;, that's what you get as a result.&lt;/p&gt;

&lt;p&gt;Now you get there by using &lt;em&gt;one&lt;/em&gt; programming language, so that you don't have to learn two different programming languages, one for &lt;em&gt;iOS&lt;/em&gt;, one for &lt;em&gt;Android&lt;/em&gt;, instead you have one programming language, &lt;strong&gt;&lt;a href="https://dart.dev"&gt;Dart&lt;/a&gt;&lt;/strong&gt; and also one &lt;em&gt;codebase&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;So you work in one project, you write your code once and you still get two different apps as a result and that's the cool thing about Flutter, you only learn one programming language, you only write your code once and you get two apps. Without Flutter, you would normally build an &lt;strong&gt;iOS&lt;/strong&gt; app by writing some &lt;em&gt;&lt;a href="https://developer.apple.com/swift/"&gt;Swift&lt;/a&gt;&lt;/em&gt; or &lt;em&gt;&lt;a href="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html"&gt;Objective C&lt;/a&gt;&lt;/em&gt; code and using the iOS development environment and for &lt;strong&gt;Android&lt;/strong&gt;, you would be using &lt;em&gt;&lt;a href="//www.java.com"&gt;Java&lt;/a&gt;&lt;/em&gt; with the Android framework or you would be using &lt;em&gt;&lt;a href="https://kotlinlang.org"&gt;Kotlin&lt;/a&gt;&lt;/em&gt; and also the Android development environment and you would have to learn all these different languages and tools and you would have to write two totally different apps or work in two totally different projects and with Flutter, that's not the case, one programming language and one codebase!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ITFuSNW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ghtekgpp5iiogdmfa46.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ITFuSNW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ghtekgpp5iiogdmfa46.jpg" alt="Dart-Flutter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  &lt;em&gt;How it works?&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;The term &lt;em&gt;Flutter&lt;/em&gt; refers to two major things. One is an &lt;em&gt;&lt;a href="https://www.redhat.com/en/topics/cloud-native-apps/what-is-SDK"&gt;SDK&lt;/a&gt;&lt;/em&gt;, a &lt;em&gt;Software Development Kit&lt;/em&gt;, you could say a collection of tools that allows you to write one codebase with one programming language because it includes tools to then &lt;em&gt;compile&lt;/em&gt; this code, which normally would not run on &lt;em&gt;iOS&lt;/em&gt; and &lt;em&gt;Android&lt;/em&gt;, into &lt;em&gt;native machine code&lt;/em&gt; that does run on these platforms because if there would be one programming language that would work on both platforms, we wouldn't need &lt;em&gt;Flutter&lt;/em&gt;, but there isn't one!&lt;/p&gt;

&lt;p&gt;Now therefore, the one programming language Flutter uses doesn't work on &lt;em&gt;iOS&lt;/em&gt; and &lt;em&gt;Android&lt;/em&gt;, so it needs to be compiled to &lt;em&gt;native machine code&lt;/em&gt; for &lt;em&gt;iOS&lt;/em&gt; and native machine code for &lt;em&gt;Android&lt;/em&gt; so that we have code that has run on these platforms and that compilation task, along with a couple of other things,&lt;br&gt;
that's all part of Flutter but of course, it's not just a collection of tools, it also gives you everything you need to create beautiful applications.&lt;/p&gt;

&lt;p&gt;It gives you a &lt;em&gt;framework&lt;/em&gt;, a &lt;em&gt;widget library&lt;/em&gt; for that one programming language which is called &lt;strong&gt;Dart&lt;/strong&gt; which you can use to build beautiful Flutter apps.&lt;/p&gt;

&lt;p&gt;It gives you a vast collection of reusable &lt;em&gt;UI&lt;/em&gt; building blocks, these so-called &lt;em&gt;&lt;a href="https://developer.android.com/guide/topics/appwidgets/overview"&gt;widgets&lt;/a&gt;&lt;/em&gt;, so these are things like buttons, tabs, text inputs, drop downs, you get all of that out of the box. You can style them and customize them and then you build user interfaces with these tools. In addition, you get a couple of utility functions and generally, some &lt;em&gt;&lt;a href="https://pub.dev/"&gt;packages&lt;/a&gt;&lt;/em&gt; that help you build what your users see and what your users interact with and then that code which you built with the help of that framework, that is then compiled native machine code with the help of the &lt;em&gt;SDK&lt;/em&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ipJkVYQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dk9ky8qk45g30ysey4fj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ipJkVYQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dk9ky8qk45g30ysey4fj.png" alt="Why Dart?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dart"&gt;
  &lt;/a&gt;
  &lt;em&gt;Dart&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;Now as I mentioned, Flutter uses a programming language called &lt;em&gt;Dart&lt;/em&gt;. &lt;em&gt;Dart&lt;/em&gt; is a programming language which is focused on building front-end user interfaces, front-end apps. It's not limited to building mobile apps, that's just what Flutter uses it for but &lt;em&gt;Dart&lt;/em&gt; is independent of &lt;em&gt;Flutter&lt;/em&gt; and you can also build web apps with it. So it's a programming language built to make it really simple to build &lt;em&gt;front-end user interfaces&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It was developed by &lt;a href="//www.google.com"&gt;Google&lt;/a&gt;, just like Flutter, so these are actually two independent teams in Google but of course they're working together to improve each other and therefore, we have a hand in hand solution here and in case you already have some programming experience, it's an &lt;a href="https://en.wikipedia.org/wiki/Object-oriented_programming"&gt;object oriented&lt;/a&gt; and strongly typed language and its syntax is a bit like a mixture of &lt;em&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;JavaScript&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href="//www.java.com"&gt;Java&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/"&gt;C#&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-a-nutshell"&gt;
  &lt;/a&gt;
  &lt;em&gt;In a nutshell&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Flutter&lt;/em&gt; builds up on &lt;em&gt;Dart&lt;/em&gt;, it's a framework for &lt;em&gt;Dart&lt;/em&gt; and &lt;em&gt;Dart&lt;/em&gt; actually is the programming language which we're using, Flutter then just is a collection of tools, a set of features, utility functions and these widgets which are implemented using Dart, so that you don't have to reinvent the wheel there but you can write your own Dart code and use these existing widgets in your code so that you don't have to again reinvent how a button should look like and work but use the pre-built button instead and then just customize it to your requirements, that's how this works.&lt;br&gt;
And in addition as mentioned, Flutter also gives you that SDK, so all these tools for compiling your code in the end.&lt;/p&gt;

&lt;p&gt;Thanks for reading, hope you have a great day :)&lt;br&gt;
Find me on GitHub &lt;a href="https://github.com/geekyprawins"&gt;here&lt;/a&gt; to have a look at my Flutter repositories!üòä&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>android</category>
      <category>ios</category>
      <category>dart</category>
    </item>
    <item>
      <title>8 Best Web Font Pairing</title>
      <author>Vansh Sharma</author>
      <pubDate>Thu, 15 Jul 2021 05:40:43 +0000</pubDate>
      <link>https://dev.to/vanshsh/8-best-web-font-pairing-nb8</link>
      <guid>https://dev.to/vanshsh/8-best-web-font-pairing-nb8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#no-doubt"&gt;
  &lt;/a&gt;
  &lt;strong&gt;No doubt&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Why fonts are a necessary part of the Website? They cover 80% of your website. With such a high percentage we can't even think of neglecting them.&lt;/p&gt;

&lt;p&gt;But selecting the &lt;strong&gt;Best&lt;/strong&gt; and &lt;strong&gt;Appropriate&lt;/strong&gt; fonts from 1000s of fonts is in itself is a fight. But &lt;strong&gt;&lt;em&gt;no worries&lt;/em&gt;&lt;/strong&gt; with these üëá 8 ideas it will become a cakewalk for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-merriweather-and-open-sans"&gt;
  &lt;/a&gt;
  1. Merriweather and Open Sans
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Merriweather&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Open Sans&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jf35VZVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069510010/zXxTj4YS3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jf35VZVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069510010/zXxTj4YS3.png" alt="Screenshot (635).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-ubuntu-and-lora"&gt;
  &lt;/a&gt;
  2. Ubuntu and Lora
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Ubuntu&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Lora&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m1lABwZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069519342/jI-ELJIgC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m1lABwZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069519342/jI-ELJIgC.png" alt="Screenshot (636).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-abril-fatface-and-poppins"&gt;
  &lt;/a&gt;
  3. Abril Fatface and Poppins
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Abril Fatface&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Poppins&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qM8qUt0_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069529585/3Hn8KSXi1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qM8qUt0_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069529585/3Hn8KSXi1.png" alt="Screenshot (637).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-cinzel-and-fauna-one"&gt;
  &lt;/a&gt;
  4. Cinzel and Fauna One
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Cinzel&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Fauna One&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--om88MKPX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069538185/Vi67ygq0O.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--om88MKPX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069538185/Vi67ygq0O.png" alt="Screenshot (638).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-fjalla-one-and-libre-baskerville"&gt;
  &lt;/a&gt;
  5. Fjalla One and Libre Baskerville
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Fjalla&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Libre Baskerville&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SMGw49NE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069634401/8TJVzWQ9L.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SMGw49NE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069634401/8TJVzWQ9L.png" alt="Screenshot (639).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-space-mono-and-muli"&gt;
  &lt;/a&gt;
  6. Space Mono and Muli
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Space Mono&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Muli&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bQOxngpg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069651812/s3LC0qNOo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bQOxngpg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069651812/s3LC0qNOo.png" alt="Screenshot (640).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-spectral-and-rubik"&gt;
  &lt;/a&gt;
  7. Spectral and Rubik
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Spectral&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Rubik&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JRVS4Ug8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069713147/Y1Kvt2f_L.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JRVS4Ug8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069713147/Y1Kvt2f_L.png" alt="Screenshot (641).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-oswald-and-noto-sans"&gt;
  &lt;/a&gt;
  8. Oswald and Noto Sans
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Oswald&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Noto Sans&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EA3FYCBf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069721202/rrpQFXSyF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EA3FYCBf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069721202/rrpQFXSyF.png" alt="Screenshot (642).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all for this blog. Now we will meet in the next blog.&lt;/p&gt;

&lt;p&gt;Until then &lt;strong&gt;Keep Learning, Keep Growing&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;Connect with me üëá &lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Twitter&lt;/th&gt;
&lt;th&gt;LinkedIn&lt;/th&gt;
&lt;th&gt;Gmail&lt;/th&gt;
&lt;th&gt;DEV&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://twitter.com/Vanshsh2701"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y-ozPGI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.icons8.com/clouds/60/000000/twitter.png"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.linkedin.com/in/vanshsharma27/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ObNF6flA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.icons8.com/bubbles/60/000000/linkedin.png"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:vanshsharma9354@gmail.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VDnSwS5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.icons8.com/clouds/60/000000/gmail.png"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/vanshsh"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DfwG4qYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.icons8.com/office/50/000000/blog.png"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>webdev</category>
      <category>bestofdev</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Managing monorepos with lerna and yarn workspaces</title>
      <author>tevez07b9</author>
      <pubDate>Thu, 15 Jul 2021 05:14:02 +0000</pubDate>
      <link>https://dev.to/tevez07b9/managing-monorepos-with-lerna-and-yarn-workspaces-4bhl</link>
      <guid>https://dev.to/tevez07b9/managing-monorepos-with-lerna-and-yarn-workspaces-4bhl</guid>
      <description>&lt;p&gt;Reusing code is a good thing, splitting your project into multiple small packages could be helpful, its' easier to focus when working on teams. It's always better to split the problem into smaller pieces. &lt;/p&gt;

&lt;p&gt;But when it comes to managing these packages, it rapidly turns into a nightmare, things are dependent on one another, updating multiple packages and maintaing their separate repos.&lt;/p&gt;

&lt;p&gt;That's where monorepos come in. You can have multiple packages in a single repository. They all can share the same node_modules folder. You can easily make them dependent on one another, and publish them all at once. No need of managing versions, lerna will take care of that.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e158JJhE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/tevez07b9/courscate/raw/master/7c868c27-9989-48c7-b6b5-b108f9416743_text.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e158JJhE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/tevez07b9/courscate/raw/master/7c868c27-9989-48c7-b6b5-b108f9416743_text.gif" alt="Cool huh, gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h3&gt;

&lt;p&gt;Initialize your project with the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ yarn init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This should create your &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;You must have &lt;code&gt;workspaces&lt;/code&gt; here set to the folders where you have your packages created. Note the &lt;code&gt;version&lt;/code&gt; here, it's &lt;code&gt;1.0.0&lt;/code&gt; at start, but as you progess further, lerna is gonna update it according. &lt;/p&gt;

&lt;p&gt;A good pattern is to use the &lt;code&gt;conventionalCommits&lt;/code&gt; config with lerna to manage versions. You can read more about that &lt;a href="https://www.conventionalcommits.org/en/v1.0.0/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eg. &lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Next run &lt;code&gt;lerna init&lt;/code&gt;, you can combine the &lt;code&gt;--independent&lt;/code&gt; flag if you wanna maintain versions of each package separately.&lt;/p&gt;

&lt;p&gt;Eg. &lt;code&gt;lerna.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;code&gt;useWorkspaces&lt;/code&gt; option enables us to reuse the setting for Yarn Workspaces as Lerna's workspace setting.&lt;br&gt;
You can switch the &lt;code&gt;npmClient&lt;/code&gt; option from &lt;code&gt;yarn&lt;/code&gt; to &lt;code&gt;npm&lt;/code&gt;, if you want &lt;code&gt;npm&lt;/code&gt; to run all your commands. Finally &lt;code&gt;commands&lt;/code&gt; option is set to use &lt;code&gt;conventionalCommits&lt;/code&gt; for our publish process.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#adding-packages"&gt;
  &lt;/a&gt;
  Adding packages
&lt;/h3&gt;

&lt;p&gt;You can create a packages folder and start adding creating your packages there or use this command &lt;code&gt;$ npx lerna create @projectName/packagename&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#adding-npm-packages-as-dependencies"&gt;
  &lt;/a&gt;
  Adding npm packages as dependencies
&lt;/h3&gt;

&lt;p&gt;With yarn workspaces you don't need to cd to each packages folder in order to install dependcies, all you gotta do is &lt;code&gt;$ yarn workspace @projectName/yourpackagename add npm-package-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you want to install shared dependencies, &lt;code&gt;$ yarn add -W --dev typescript prettier eslint&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Pretty slick, right?üòé&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#publishing"&gt;
  &lt;/a&gt;
  Publishing
&lt;/h3&gt;

&lt;p&gt;Once you have coded your packages in the respective directories, now is the time to publish them. &lt;code&gt;lerna publish&lt;/code&gt; is the command used to publish your packges. &lt;/p&gt;

&lt;p&gt;If you used the &lt;a href="https://www.conventionalcommits.org/en/v1.0.0/"&gt;Conventional Commits&lt;/a&gt; pattern, you can use the &lt;code&gt;--conventional-commits&lt;/code&gt; flag with the above command to determine the version of your package. With this option, Lerna generates a &lt;code&gt;CHANGELOG.md&lt;/code&gt; for a new version.&lt;/p&gt;

&lt;p&gt;Here is an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npx lerna publish --conventional-commits
lerna notice cli v3.19.0
lerna info versioning independent
lerna info Looking for changed packages since @zoomify/rest-api-client@1.0.0
lerna info getChangelogConfig Successfully resolved preset "conventional-changelog-angular"

Changes:
    - @zoomify/rest-api-client: 1.0.0 =&amp;gt; 1.1.0
    - @zoomify/cutomize-uploader: 3.0.1 =&amp;gt; 3.0.2

? Are you sure you want to publish these packages? (ynH)
:
Successfully published:
    - @zoomify/rest-api-client@1.1.0
    - @zoomify/customize-uploader@3.0.2
lerna success published 2 packages
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#run-npmscripts-in-multiple-packages"&gt;
  &lt;/a&gt;
  Run npm-scripts in multiple packages
&lt;/h3&gt;

&lt;p&gt;Even with the handy yarn workspaces commands, it could be frustating to test and build each and every package, if you wanna run a command across all pacakges, just do this,&lt;/p&gt;

&lt;p&gt;Eg, let's say i wanna build all my packages before publishing.&lt;br&gt;
&lt;code&gt;$ npx lerna run build --stream&lt;/code&gt;, this will call the build command specified in &lt;code&gt;package.json&lt;/code&gt; files of each package.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mr4KORX_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/tevez07b9/courscate/raw/master/tenor.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mr4KORX_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/tevez07b9/courscate/raw/master/tenor.gif" alt="that's cool"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>npm</category>
    </item>
    <item>
      <title>Are you a Programmer? Then you must know this differences!</title>
      <author>SAIFULLAHüáÆüá≥</author>
      <pubDate>Thu, 15 Jul 2021 05:02:24 +0000</pubDate>
      <link>https://dev.to/saifullah/are-you-a-programmer-then-you-must-know-this-differences-oea</link>
      <guid>https://dev.to/saifullah/are-you-a-programmer-then-you-must-know-this-differences-oea</guid>
      <description>&lt;p&gt;Without any further delay let's start with the common differences you must know if you are a programmer!&lt;/p&gt;

&lt;p&gt;The First difference is about&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1 Front-end and Back-end&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FRONT-END&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Languages&lt;/strong&gt;&lt;br&gt;
HTML, CSS, JAVASCRIPT.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Frameworks&lt;/strong&gt;&lt;br&gt;
ReactJS, Vue.JS, AngularJS, Bootstrap etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Administration&lt;/strong&gt;&lt;br&gt;
Part of Website user can see and interact with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Database&lt;/strong&gt;&lt;br&gt;
No Database needed.&lt;br&gt;
Data stored in root directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Application&lt;/strong&gt;&lt;br&gt;
Client side Application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BACK-END&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Languages&lt;/strong&gt;&lt;br&gt;
PHP, Python, Java, Ruby etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Frameworks&lt;/strong&gt;&lt;br&gt;
DJango, NodeJS, ExpressJS, ASP.NET, Spring etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Admin Adminstration&lt;/strong&gt;&lt;br&gt;
In this everything happens behind the scene admin level.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Database&lt;/strong&gt;&lt;br&gt;
Database is needed and web server to manage data in DB.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Application&lt;/strong&gt;&lt;br&gt;
Server side Application.&lt;/p&gt;

&lt;p&gt;Next is,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2 IDE and Code editor&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IDE&lt;/strong&gt;&lt;br&gt;
Integrated Development Environment.&lt;br&gt;
An integrated development environment (IDE) is a software application that provides to edit programming for software development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IDE = Editor + Compiler + Debugger&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Support specific set of language.&lt;/p&gt;

&lt;p&gt;Heavy, it takes large space.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CODE Editor&lt;/strong&gt;&lt;br&gt;
Simply called code editor.&lt;/p&gt;

&lt;p&gt;It is a computer program and software that allows user to enter, change, store and edit the programming code for software development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TEXT EDITOR = Editor&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Support coding in different languages.&lt;/p&gt;

&lt;p&gt;Light weight takes less space.&lt;/p&gt;

&lt;p&gt;Another is,&lt;br&gt;
&lt;strong&gt;3 Programming and Coding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Programming is developing full fledged software.&lt;/p&gt;

&lt;p&gt;Use set of specific tools for different tasks such as testing, debugging and others.&lt;/p&gt;

&lt;p&gt;A person should expertise in Algorithms, project management and problem managing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coding&lt;/strong&gt;&lt;br&gt;
Coding is just taking part in programming.&lt;/p&gt;

&lt;p&gt;A simple text editor is enough for coding and with good themes in it.&lt;/p&gt;

&lt;p&gt;A person should good at basic knowledge of programming language and syntax.&lt;/p&gt;

&lt;p&gt;Last but not the least--&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4 Algorithm and PseudoCode&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Algorithm&lt;/strong&gt;&lt;br&gt;
Steps to solve a problem in english language(you can use any) by following some particular rules.&lt;/p&gt;

&lt;p&gt;Help to simplify and understand the problem so that a program can be made.&lt;/p&gt;

&lt;p&gt;Example below--&lt;br&gt;
&lt;strong&gt;Swapping of number using Algorithm&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i1tcEvjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p2bgvc1zbfp3nyx6auxh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i1tcEvjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p2bgvc1zbfp3nyx6auxh.jpg" alt="Program to show Algorithm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PseudoCode&lt;/strong&gt;&lt;br&gt;
Code written to solve a problem which doesn't required proper syntax.&lt;/p&gt;

&lt;p&gt;A method of developing an Algorithm by Writing a logical code to solve problems.&lt;/p&gt;

&lt;p&gt;Example below--&lt;br&gt;
&lt;strong&gt;Swapping of number by PseudoCode approach&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7FjWbB_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7nhjaltvv7bjslhsyfl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7FjWbB_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7nhjaltvv7bjslhsyfl.jpg" alt="Algorithm to show swapping"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank for reading.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>codenewbie</category>
      <category>codequality</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
