<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Comparing Memory Consumption of Delegated Event Listeners and Individual Event Listeners in Javascript </title>
      <author>Mohamad Harith</author>
      <pubDate>Sat, 25 Dec 2021 01:55:43 +0000</pubDate>
      <link>https://dev.to/mohamadharith/comparing-memory-consumption-of-delegated-event-listeners-and-individual-event-listeners-in-javascript-1l3e</link>
      <guid>https://dev.to/mohamadharith/comparing-memory-consumption-of-delegated-event-listeners-and-individual-event-listeners-in-javascript-1l3e</guid>
      <description>&lt;p&gt;&lt;em&gt;This article assumes the reader understands what is &lt;a href="https://javascript.info/event-delegation"&gt;event delegation&lt;/a&gt; and &lt;a href="https://javascript.info/bubbling-and-capturing"&gt;event bubbling&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;While working on a frontend project, being the amateur programmer that I am, I initially did not understand why my &lt;a href="https://github.com/si3nloong"&gt;HOD&lt;/a&gt; insisted that we handle events for long list of items by means of event delegation instead of attaching individual event listeners for each list item. After hearing his explanation and doing some readings, I came to an understanding that event delegation has several benefits in comparison to attaching individual event listeners to a long a list of items. Among the benefits are as follows:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Memory&lt;/strong&gt;: More event listeners means more memory consumption as the browser has to listen to more events.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Code maintainability&lt;/strong&gt;: Event delegation improves code maintainability because events from multiple elements can be handled all in one place in contrary to handling them individually.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sJzy0UVy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yo6knwcxa3oj2ipttbd2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sJzy0UVy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yo6knwcxa3oj2ipttbd2.jpeg" alt="Drake Event Delegation" width="500" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, in order to see the benefits of event delegation in terms of memory consumption before my own eyes, I have conducted an experiment where I wrote two HTML pages that each generated list of 100k items. For one of the lists I attached individual event listeners for each &lt;code&gt;li&lt;/code&gt; element and and for the other list I attached a single delegated event listener on the &lt;code&gt;ul&lt;/code&gt; element. I then compared the memory consumption of these two pages using Firefox's task manager.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Individual Event Listeners&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ul&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ul&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Item &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Delegated Event Listeners&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ul&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ul&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Item &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Memory Consumption&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CocdH-iW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rb2twtjyzsuuh87wil9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CocdH-iW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rb2twtjyzsuuh87wil9.png" alt="Image description" width="880" height="85"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see above, the memory consumption on the page that contains the list with individual event listeners was definitely higher than that of the list with delegated event listener. Therefore, it is proven that delegated event listener is more performant and should be used when listening to events from a large list of items.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Related Articles&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://betterprogramming.pub/event-delegation-in-javascript-boost-your-app-performance-5f10f25cec96#:~:text=Performance%3A%20The%20event%20delegation%20will,DOM%20will%20update%20every%20time."&gt;https://betterprogramming.pub/event-delegation-in-javascript-boost-your-app-performance-5f10f25cec96#:~:text=Performance%3A%20The%20event%20delegation%20will,DOM%20will%20update%20every%20time.&lt;/a&gt;&lt;br&gt;
&lt;a href="https://gomakethings.com/why-is-javascript-event-delegation-better-than-attaching-events-to-each-element/"&gt;https://gomakethings.com/why-is-javascript-event-delegation-better-than-attaching-events-to-each-element/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Best GitHub repos to learn Programming [UPDATED]</title>
      <author>Oussama Zeddam</author>
      <pubDate>Sat, 25 Dec 2021 00:34:04 +0000</pubDate>
      <link>https://dev.to/oussamazeddam/best-github-repos-to-learn-programming-updated-aec</link>
      <guid>https://dev.to/oussamazeddam/best-github-repos-to-learn-programming-updated-aec</guid>
      <description>&lt;p&gt;Sometimes knowing exactly what you should learn can be a daunting task , in this article I will provide the best GitHub repos to help you with your programming journey&lt;br&gt;
i will keep this article updated continuously &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Roadmap SH&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lW9xtGcW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovbhgppgbw8qm8qpuh0z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lW9xtGcW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovbhgppgbw8qm8qpuh0z.jpg" alt="Image description" width="880" height="589"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;roadmap.sh is a community effort to create roadmaps, guides and other educational content to help guide the developers in picking up the path and guide their learnings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://roadmap.sh/"&gt;https://roadmap.sh/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;30 Seconds Of Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dRutaqwP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zmnxduhkjk5o0nkwfkbe.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dRutaqwP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zmnxduhkjk5o0nkwfkbe.jpeg" alt="Image description" width="880" height="317"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a place to aggregate code snippets to help you solve common problems encountered in the process of implementing code into your project. It supports popular languages like React, Node.js, Git, CSS, Python and especially JavaScript algorithms, implemented JavaScript ES6, tutorials and examples for common data structures used in JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.30secondsofcode.org/collections"&gt;https://www.30secondsofcode.org/collections&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Airbnb JavaScript Style Guide&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RLEdDjLj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ilbtus5ey6hrqwmxgh1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RLEdDjLj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ilbtus5ey6hrqwmxgh1.jpg" alt="Image description" width="880" height="392"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a GitHub page that summarizes the best ways to write JavaScript code through real-world examples.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/airbnb/javascript"&gt;https://github.com/airbnb/javascript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Algorithm&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DoDv5weI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwc7dj97zzhg1untdt0n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DoDv5weI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwc7dj97zzhg1untdt0n.jpg" alt="Image description" width="880" height="524"&gt;&lt;/a&gt;&lt;br&gt;
It is one of the best GitHub repositories for learning data structures and algorithms using different languages. Data Structures must be known for every computer science student. Whether you are a python developer, Java developer, Go developer, or some old-school C++ developer, there is something for everyone in this repository that you should learn. All the algorithms and data structures present here are explained very easily. They also have a website for easy access to all the code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/TheAlgorithms"&gt;https://github.com/TheAlgorithms&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spellbook of Modern Web Dev&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2ijxYIQh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/414242q2pl2986tz4vg2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2ijxYIQh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/414242q2pl2986tz4vg2.png" alt="Image description" width="880" height="436"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a collection of learning resources (such as articles, books, etc.) useful for web developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/dexteryy/spellbook-of-modern-webdev"&gt;https://github.com/dexteryy/spellbook-of-modern-webdev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;33 JavaScript Concepts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rYsU7Pjp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7g38cgwgodnfwwuqnvp1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rYsU7Pjp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7g38cgwgodnfwwuqnvp1.jpg" alt="Image description" width="880" height="307"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Summary of detailed articles to help programmers master JavaScript concepts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/leonardomso/33-js-concepts"&gt;https://github.com/leonardomso/33-js-concepts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JS IQ&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0wHa-bz8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9dg5lpopp1qdbp6wjha0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0wHa-bz8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9dg5lpopp1qdbp6wjha0.jpg" alt="Image description" width="880" height="563"&gt;&lt;/a&gt;&lt;br&gt;
one of the best interview preparation kit for , javascript , react n angular&lt;/p&gt;

&lt;p&gt;&lt;a href="https://iq.js.org/"&gt;https://iq.js.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project Guidelines&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cx66PkPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wf9vihzge2swgj91jaoj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cx66PkPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wf9vihzge2swgj91jaoj.png" alt="Image description" width="880" height="430"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a GitHub page for tutorials and essentials when you start a website development project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines"&gt;https://github.com/elsewhencode/project-guidelines&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Front-end Developer Interview Questions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M74EryPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iwa4b0yatgd8bh2my63o.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M74EryPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iwa4b0yatgd8bh2my63o.jpg" alt="Image description" width="880" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A place to collect common questions in the front-end interview process. (You will have to find the answer yourself.)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://h5bp.org/Front-end-Developer-Interview-Questions/"&gt;https://h5bp.org/Front-end-Developer-Interview-Questions/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clean Code JavaScript&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I0ltW51A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4edidx8p9rckrh4dfte.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I0ltW51A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4edidx8p9rckrh4dfte.png" alt="Image description" width="880" height="399"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It synthesizes the author’s coding experience in the process of working with the JavaScript programming language. It helps us learn to write code that is easy to understand, can be easily reused, increases the efficiency of the code…&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;https://github.com/ryanmcdermott/clean-code-javascript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DevDocs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BaH0u1Br--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mc0wyzl4m8e0qm77rti1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BaH0u1Br--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mc0wyzl4m8e0qm77rti1.jpg" alt="Image description" width="880" height="432"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DevDocs is a collection of almost complete documents for today’s popular programming languages such as JavaScript, HTML, CSS, PHP, React, Vue.js.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdocs.io/"&gt;https://devdocs.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Every Programmer Should Know&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9rQ7Hwp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14wtzng121jflya9v0w4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9rQ7Hwp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14wtzng121jflya9v0w4.jpg" alt="Image description" width="880" height="337"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A place to synthesize technical knowledge that a programmer should know.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mtdvio/every-programmer-should-know"&gt;https://github.com/mtdvio/every-programmer-should-know&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tech Interview Handbook&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FfG9uVSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zd4oo5ivh1vr0wibmmud.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FfG9uVSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zd4oo5ivh1vr0wibmmud.png" alt="Image description" width="880" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tech Interview Handbook is a website that summarizes interview experiences for developers such as how to write a CV, introduce yourself, frequently asked questions in an interview and popular algorithms and techniques in programming.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://techinterviewhandbook.org/"&gt;https://techinterviewhandbook.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Grab Front End Guide&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MndvRG2L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/518jh1trr4o4cvmpy9qe.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MndvRG2L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/518jh1trr4o4cvmpy9qe.jpeg" alt="Image description" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This page will help frontend beginners understand the basic concepts as well as what tools and libraries to use for web projects through the practical handling experience of Grab’s engineering team.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/grab/front-end-guide"&gt;https://github.com/grab/front-end-guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn Git Branching&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--caX3sKJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqtfhhvc4ykk5p8dujui.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--caX3sKJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqtfhhvc4ykk5p8dujui.jpg" alt="Image description" width="880" height="438"&gt;&lt;/a&gt;&lt;br&gt;
A place to help you learn Git through tutorials and visual examples.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://learngitbranching.js.org/"&gt;https://learngitbranching.js.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vanilla Web Projects&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NNgtDB-k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqqdgju75xzbo4e8pfdv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NNgtDB-k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqqdgju75xzbo4e8pfdv.jpg" alt="Image description" width="880" height="341"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A place to help you practice pure javascript code in website development through more than 20 completely free projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bradtraversy/vanillawebprojects"&gt;https://github.com/bradtraversy/vanillawebprojects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Free Programming Books&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wbrBxrkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sw7v04trebyxschi8u6i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wbrBxrkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sw7v04trebyxschi8u6i.png" alt="Image description" width="880" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In my opinion, this is a website that gathers almost all of the free courses and programming books for programmers today. The point I like the most here is that it is divided into many different languages so that we can easily choose the right document. In addition to reading documents, it also provides you with other formats such as podcast, video, coding programs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ebookfoundation.github.io/free-programming-books/"&gt;https://ebookfoundation.github.io/free-programming-books/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Modern JavaScript Cheatsheet&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NxCcRMEy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcd3xsftmnk2hh97k00a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NxCcRMEy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcd3xsftmnk2hh97k00a.png" alt="Image description" width="880" height="277"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This page is a cheatsheet for JavaScript that helps you solve frequently encountered problems in building projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mbeaudru/modern-js-cheatsheet"&gt;https://github.com/mbeaudru/modern-js-cheatsheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Front-End Checklist&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4wYLT8jT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9b1o2plehh58ftmgmy9y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4wYLT8jT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9b1o2plehh58ftmgmy9y.png" alt="Image description" width="880" height="416"&gt;&lt;/a&gt;&lt;br&gt;
The Front-End Checklist is a list of all the elements that you need to have before your website goes into production.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://frontendchecklist.io/"&gt;https://frontendchecklist.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Front-End Performance Checklist&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4O4vsTCq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lxjh0xvbkj27bhis9z6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4O4vsTCq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lxjh0xvbkj27bhis9z6.jpg" alt="Image description" width="880" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Front-End Performance Checklist is a collection of knowledge and examples to help your website load faster and more optimally.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/thedaviddias/Front-End-Performance-Checklist"&gt;https://github.com/thedaviddias/Front-End-Performance-Checklist&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Awesome&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--amxqMYtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dt3d47ac2o6xklu69drl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--amxqMYtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dt3d47ac2o6xklu69drl.jpg" alt="Image description" width="880" height="343"&gt;&lt;/a&gt;&lt;br&gt;
Awesome is an almost complete collection of books, tools, libraries, etc. for today’s popular programming languages and topics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/sindresorhus/awesome"&gt;https://github.com/sindresorhus/awesome&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Design Resources For Developers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7MlZk45m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxovs4vyjsmou3go6eh0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7MlZk45m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxovs4vyjsmou3go6eh0.png" alt="Image description" width="880" height="437"&gt;&lt;/a&gt;&lt;br&gt;
Design Resources For Developers is a collection of design tools for programmers in the process of website development such as choosing colors, fonts, free templates, CSS framework.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bradtraversy/design-resources-for-developers"&gt;https://github.com/bradtraversy/design-resources-for-developers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;System Design Primer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JtxfLx5B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujncsuc12cpa0oqra19p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JtxfLx5B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujncsuc12cpa0oqra19p.png" alt="Image description" width="880" height="1188"&gt;&lt;/a&gt;&lt;br&gt;
It is a GitHub tutorial page that helps you learn how to design, optimize and easily extend for large systems.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/donnemartin/system-design-primer"&gt;https://github.com/donnemartin/system-design-primer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JavaScript Algorithms And Data Structures&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7mke_RvV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e44rppktaqq4j2wbqd0a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7mke_RvV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e44rppktaqq4j2wbqd0a.jpg" alt="Image description" width="880" height="341"&gt;&lt;/a&gt;&lt;br&gt;
JavaScript Algorithms And Data Structures is home to a full collection of real-world examples of popular algorithms and data structures.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;https://github.com/trekhleb/javascript-algorithms&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CSS Protips&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uWw6dmJu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0i99ql83bur37mo5qcu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uWw6dmJu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0i99ql83bur37mo5qcu.jpg" alt="Image description" width="880" height="307"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CSS Protips is a place that specializes in synthesizing knowledge to help you optimize CSS in website design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/AllThingsSmitty/css-protips#css-protips-"&gt;https://github.com/AllThingsSmitty/css-protips#css-protips-&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Awesome Web Development Resources&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Awesome Web Development Resources is an aggregator of free programming resources for developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/markodenic/web-development-resources"&gt;https://github.com/markodenic/web-development-resources&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JavaScript Questions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZozzTCKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cj2y34sy5mxmkxytkd4l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZozzTCKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cj2y34sy5mxmkxytkd4l.jpg" alt="Image description" width="880" height="447"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This website collects questions for the JavaScript programming language from basic to advanced. What I like most about it is that it has answers and detailed instructions for each question. It is also translated into many different languages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/lydiahallie/javascript-questions"&gt;https://github.com/lydiahallie/javascript-questions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Summary&lt;br&gt;
I hope the article will provide you with free places to learn programming for web development and design, and if you have any questions, just send an email; I will respond as soon as possible. I hope you continue to support the site so that I can write more good articles. Have a nice day!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>CONTROLLING HOME DEVICE (DVD) VIA TUYA LINK SDK AND ESP 32
</title>
      <author>Ogunbiyi Ibrahim</author>
      <pubDate>Fri, 24 Dec 2021 23:59:31 +0000</pubDate>
      <link>https://dev.to/comejoinfolks/controlling-home-device-dvd-via-tuya-link-sdk-and-esp-32-1hfa</link>
      <guid>https://dev.to/comejoinfolks/controlling-home-device-dvd-via-tuya-link-sdk-and-esp-32-1hfa</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Controlling your home devices via the cloud can be so cool and not stressful. With you just picking up your phone and controlling your home device is something you should know much about. In this tutorial, we are going to learn how to control your DVD/ Home theater(Works the same way) via Tuya link SDK and ESP 32.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What we will be building&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this tutorial, we will learn how to control our DVD/ Home theater via Tuya link SDK and ESP32.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hardware component&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; ESP32&lt;/li&gt;
&lt;li&gt;Infrared  led transmitter&lt;/li&gt;
&lt;li&gt;Transistor Bc457&lt;/li&gt;
&lt;li&gt;Ac/dc  5v power supply&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Software Component&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Tuya IoT platform&lt;/li&gt;
&lt;li&gt;Tuya smart App&lt;/li&gt;
&lt;li&gt;Arduino IDE&lt;/li&gt;
&lt;li&gt;Command Prompt&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;GitHub Link: &lt;a href="https://github.com/Folksconnect123/DVD-CONTROL"&gt;https://github.com/Folksconnect123/DVD-CONTROL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Tuya&lt;/strong&gt;&lt;br&gt;
Tuya Smart (NYSE: TUYA) is a global IoT development platform that creates interconnectivity standards to connect brands, OEMs, developers, and retailers across a variety of smart devices and industries. Tuya integrates many intelligent scenarios and smart devices by providing hardware development tools, integrating public cloud services, and giving an intelligent business development platform, all of which are based on the global public cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qAEzqqr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tspxmmxoka5mz72xzwsf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qAEzqqr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tspxmmxoka5mz72xzwsf.jpg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Tuya link Sdk?&lt;/strong&gt;&lt;br&gt;
Tuya link SDK makes life a lot easier. It facilitates the creation of cloud development projects involving OpenAPI or message subscription capabilities.&lt;/p&gt;

&lt;p&gt;Tuya Link SDK is one such SDK that encapsulates fundamental services like device activation, DP (Data-Points) upstream and downstream, and firmware OTA (Over-The-Air) upgrading into an interface. It is appropriate for connecting the logic services of a self-developed gadget to the cloud by developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RxNVBGPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wr0okxz0f0vr5lm7i0wi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RxNVBGPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wr0okxz0f0vr5lm7i0wi.png" alt="Image description" width="880" height="357"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is ESP32?&lt;/strong&gt;&lt;br&gt;
The ESP32 is a low-cost Wi-Fi microchip by Espressif Systems that has built-in TCP/IP networking software and a microprocessor/ Microcontroller capability.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-the-environment"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Setting up the environment&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Before we get started let me give you a heads up that if you haven’t created a tuya account before do create because you will be given a free device license to create a hands-on project.&lt;/p&gt;

&lt;p&gt;To use Tuya Link SDK, we will need to make a product to interact and connect to Tuya IoT Cloud. Go to your Tuya IoT account and log in, if you haven't registered for an account register one &lt;strong&gt;&lt;a href="http://iot.tuya.com/?_source=3bb57e086a1738fc4d1ecf7a7f79188e"&gt;click here&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Create a product by clicking on Create button on the home page&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mRJLLnkk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yrfpml40p0035vuubg5.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mRJLLnkk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yrfpml40p0035vuubg5.PNG" alt="Image description" width="880" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; A page will appear where you will need to select a category for your project or product, since we are using Esp32 as a custom device so we will need to click on “Can’t find the category” and enter the details as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-MZ8Msh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxb337zd5r5v1ip8bv5b.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-MZ8Msh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxb337zd5r5v1ip8bv5b.PNG" alt="Image description" width="880" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; We need a standard function for the power state of the DVD (On/Off) and a custom function to be able to control the DVD like (open and close, Skip, Play, etc.). To create a standard function to either switch the DVD on/ off. Click on add and search for Switch then click Ok. Now you have to edit the name of the Switch for more clarity. You can rename it to DVD power _state. If done click on add again and search for Switch 2, then click ok. Also, rename it to Open/close. We also need to create a standard function for Play/pause. Click on add again. And search for switch then rename to Play/Pause. We need to create a custom function for skip (Note that we can also create a standard function for Skip.). On the custom function tab click on add, then set the Data-point to (SkipFor), the identifier to (skipfor) Datatype to (Bool), Data transfer type (Send only). Do the rest for the other function To know more about creating custom functions click on this &lt;strong&gt;&lt;a href="http://iot.tuya.com/?_source=3bb57e086a1738fc4d1ecf7a7f79188e"&gt;link&lt;/a&gt;&lt;/strong&gt;. Keep note of the PID we will need it later.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uuYM3y51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx8tg5nv1jzgjr0ycca9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uuYM3y51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx8tg5nv1jzgjr0ycca9.PNG" alt="Image description" width="880" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; To interact with the device we need to have a beautiful Panel with all required functionalities, although you can drag and drop UI design in the Tuya design panel since we are working on a prototype and debugging I like to have things very quick I would click on the tuya DIY Style Panel. You can change it to your preference as soon as you are done.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Go to the Hardware Development Section of your product and click on Link SDK. You will need a license to be able to use link SDK, but don’t bother Tuya issues free licenses for new tech hobbyists.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hr0pn0Xw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkx7uut0zfbhbh4y8uyi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hr0pn0Xw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkx7uut0zfbhbh4y8uyi.PNG" alt="Image description" width="880" height="368"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For ESP32 we are going to use General CPU as a hardware type, also you would see an option to generate a free license if you are new to the platform. Click place the order and download the License list. The** license is composed of tuya UUID and AuthKey** which is needed to authorize the device to receive and send data to the Tuya Cloud.&lt;/p&gt;

&lt;p&gt;Now we are done with the major part of the software development for our Tuya IoT platform now we move to the setting up of the hardware and the implementation of our code.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installing-tuya-link-sdk"&gt;
  &lt;/a&gt;
  Installing Tuya Link SDK
&lt;/h2&gt;

&lt;p&gt;Now is time to install Tuya link SDK to be able to connect our just completed application above with ESP32. To do that we have to type this code on our command prompt in order to clone the GitHub repository and install tuya link SDK. &lt;/p&gt;

&lt;p&gt;Note: make sure you have Git installed on your pc. If you don’t you can download and install the application.&lt;/p&gt;

&lt;p&gt;The first step is to type this code on the command prompt.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/tuya/tuyaos-link-sdk-python.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The second step is to install the tuya link SDK. Note you have to have wheel installed on your machine if you don’t have one. Install it using this line of code. If done, you can finally type the below code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install wheel 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python -m pip install ./tuyaos-link-sdk-python
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we are done with the installation of the Tuya link SDK you should have this pop-up on your screen if due procedures are followed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YJDpzGcR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jc50eb6mdj896vob0nc1.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YJDpzGcR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jc50eb6mdj896vob0nc1.PNG" alt="Image description" width="880" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hardware-setup"&gt;
  &lt;/a&gt;
  Hardware setup:
&lt;/h2&gt;

&lt;p&gt;Grab your ESP32 and other required hardware projects we are ready to get our hands dirty.&lt;/p&gt;

&lt;p&gt;Make sure the required hardware items are complete. Follow the schematics of the hardware and make sure everything is connected properly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;For receiving the address use this schematic&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You connect the Signal/Data pin of the infrared to D15 on the ESP. The anode of the reciever to 5v and the cathode to the ground.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--khS8BFYI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8t8ysgsfdtz8d161wac.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--khS8BFYI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8t8ysgsfdtz8d161wac.PNG" alt="Image description" width="875" height="450"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;For sending the Address to the DVD use this schematic&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You connect the base pin of the transistor to pin D4 on the ESP 32. The Collector pin of the transistor to ground. Then the Emitter to the cathode of the LED.Then the Anode of the led must be connected with 220 ohms resistor to Vin.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_yFiw_vS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ccmia6vrmo8xqnff8g2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_yFiw_vS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ccmia6vrmo8xqnff8g2.PNG" alt="Image description" width="875" height="456"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#implementing-your-program"&gt;
  &lt;/a&gt;
  Implementing your Program
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#getting-the-address-from-the-remote"&gt;
  &lt;/a&gt;
  Getting the address from the remote.
&lt;/h3&gt;

&lt;p&gt;Now that we have gotten to this level, the next step to be done is to implement the code. Download the  IRremote_decode file from the Git hub account.&lt;/p&gt;

&lt;p&gt;Now run the IRremote_decode file and open the Serial monitor to get the address from your Remote after that you can now modify the DVD_control file to input the address.&lt;/p&gt;

&lt;p&gt;This is the hardware schematics for the remote decoder address.&lt;/p&gt;

&lt;p&gt;For ESP32 connect the Signal pin of the IR receiver to 15 and the Positive pin to 5v, the last pin to the ground.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7HrZij1d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5c9lflxugwyabhyihdhb.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7HrZij1d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5c9lflxugwyabhyihdhb.PNG" alt="Image description" width="880" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the address from my remote controller. Then I have inserted the address into the DVD code.&lt;/p&gt;

&lt;p&gt;Modifying the DVD_Control file&lt;/p&gt;

&lt;p&gt;After you’ve gotten the address you can now modify the DVD_control file from GitHub to your own address like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Bs-ggWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfvxoh5rbcqrcavme3xt.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Bs-ggWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfvxoh5rbcqrcavme3xt.PNG" alt="Image description" width="880" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can run the file and test the code via the serial monitor with your DVD on to see if everything is going perfectly.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#finalizing-our-work"&gt;
  &lt;/a&gt;
  Finalizing our work
&lt;/h2&gt;

&lt;p&gt;After you’ve successfully uploaded and run the above code it is time to control our microcontroller via the cloud. Now Download the TuyaLinkSDk file from GitHub and modify the code for your PID, Auth key and UUID, and the COM port of your microcontroller. After those are done then you can now run the code on your command prompt by using the cd method. Like in my own case I copied the file to the desktop, then I typed this on my command prompt&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd desktop&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Then you type the name of the file. In my own case TuyaLinkSDK.py&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VALZ7IYP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4hc5jpdodqdp6n2g6y0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VALZ7IYP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4hc5jpdodqdp6n2g6y0.PNG" alt="Image description" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should have this after you’ve successfully run the code. Now you can download the Tuya smart app from Playstore and click on add new device, then scan the code to add the device.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AALmDMaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8i1m5r3r6hu2zuu9b6pr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AALmDMaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8i1m5r3r6hu2zuu9b6pr.png" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sS7KC-4Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlh512oes06qgk1c6roh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sS7KC-4Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlh512oes06qgk1c6roh.jpg" alt="Image description" width="880" height="386"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the video to the output. &lt;a href="https://youtu.be/VcfcegE9fgk"&gt;https://youtu.be/VcfcegE9fgk&lt;/a&gt;. Thank you for reading.&lt;/p&gt;

</description>
      <category>iot</category>
      <category>cloud</category>
      <category>arduino</category>
      <category>tuya</category>
    </item>
    <item>
      <title>Custom Build folder for React</title>
      <author>Arjun Santhosh</author>
      <pubDate>Fri, 24 Dec 2021 23:48:56 +0000</pubDate>
      <link>https://dev.to/arjunsanthoshpnr/custom-build-folder-for-react-2oi</link>
      <guid>https://dev.to/arjunsanthoshpnr/custom-build-folder-for-react-2oi</guid>
      <description>&lt;p&gt;In this article, we will learn how to change the Build path of a React application. Here I'm using a shell script for moving the contents inside the build folder to another location. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create a &lt;strong&gt;{file-name}.sh&lt;/strong&gt; file inside the root directory of your react app. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open to your &lt;strong&gt;package.json&lt;/strong&gt; file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Just beneath the build script, add a new one called "&lt;strong&gt;postbuild&lt;/strong&gt;" with a value "./{file-name}.sh".&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;if you are using Windows, use bash before executing the script.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--veM76Egl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wu9ivyubo0hd3p1osbl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--veM76Egl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wu9ivyubo0hd3p1osbl.png" alt="Image description" width="416" height="173"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This shell script is executed right after the build process, and the actual magic happens inside the shell script.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#If the folder exists, remove it first, then copy the files
if [ -d "./../server/public/${APP_NAME}/" ]; then

    rm -rv ./../server/public/${APP_NAME}/*
    mv -v build/* ./../server/public/${APP_NAME}/

#Else make a new folder and then move the files.
else
    mkdir -p ./../server/public/${APP_NAME}
    mv -v build/* ./../server/public/${APP_NAME}/
fi

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In my case, I just wanted to move the build folder contents to my server folder.&lt;br&gt;
Before moving the content inside the build folder, I checked whether the output folder was already exiting. If there is a folder, I want to clean it first and move the contents. &lt;/p&gt;

&lt;p&gt;This script can be customized to your need. Just go through some simple shell-script tutorials. Here what is helping us is the '&lt;strong&gt;postbuild&lt;/strong&gt;' script that will be automatically executed after the build command.&lt;/p&gt;

&lt;p&gt;Happy Coding 🥳&lt;/p&gt;

</description>
      <category>react</category>
      <category>bash</category>
    </item>
    <item>
      <title>Happy Holidays: From a developer with code!</title>
      <author>Bruno Noriller</author>
      <pubDate>Fri, 24 Dec 2021 22:45:28 +0000</pubDate>
      <link>https://dev.to/noriller/happy-holidays-from-a-developer-with-code-5n7</link>
      <guid>https://dev.to/noriller/happy-holidays-from-a-developer-with-code-5n7</guid>
      <description>&lt;p&gt;This is a present for you!&lt;/p&gt;

&lt;p&gt;I wrapped it in a way you have to “open it” to learn what’s inside.&lt;/p&gt;

&lt;p&gt;Unless... can you can guess what this does before running it?&lt;/p&gt;

&lt;p&gt;The present:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Happy Holidays!&lt;/p&gt;




&lt;p&gt;Cover Photo by &lt;a href="https://unsplash.com/@kadh?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Kira auf der Heide&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/present?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>New Worktree? No Problem.</title>
      <author>wh1ter4bb1t</author>
      <pubDate>Fri, 24 Dec 2021 22:26:12 +0000</pubDate>
      <link>https://dev.to/wh1ter4bb1tjs/new-worktree-no-problem-25b</link>
      <guid>https://dev.to/wh1ter4bb1tjs/new-worktree-no-problem-25b</guid>
      <description>&lt;p&gt;&lt;em&gt;Note: This is a post shilling one of my github repos, but luckily for you, a shill for broke kids like me is free so if you like it try it&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;Have you heard, git worktrees is a thing. Of course you have, you're a hip young developer, following all the tweet-tweets. Worktrees, a simple concept that has been around for years has been gaining traction over the past couple of years, it's taking the internet by… well a Twitter thread here and there… on occasion… apparently… so I've been told. A single bare repo that you can you create branches as directories off of. It's revolutionary! If you don't understand why people who use worktrees often sing its praises you obviously do not have to deal with a lot of the cumbersome aspects of working with large codebases in large organizations. You lucky sonova….&lt;/p&gt;

&lt;p&gt;For the rest of us, the amount of times that I had stash my progress in order to checkout a co-workers "urgent" PR is countless, and the mere fact that I no longer have to stash a bunch of things and pray to the our loard and savior Linus Torvalds and can instead keep a worktree called "PR" that I use to checkout PR's is now as easy as well &lt;code&gt;cd ../pr&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There is one big caveat to worktrees, and a good majority of you readers, especially those who have used worktrees with any JS/TS project before are probably thinking it. I see you, you know whats up, you're looking might fine today.&lt;/p&gt;

&lt;p&gt;You see, for those who are uninitiated, every worktree is just a clean pull from your remote repo. Meaning just like using &lt;code&gt;git clone&lt;/code&gt; you have to at least run a clean npm install for every new worktree, not to mention if you have any .env files or anything else that is in your .gitignore that your environment need you have to copy those over from wherever they might be.  &lt;/p&gt;

&lt;p&gt;This is actually not such a big deal you can get both your &lt;code&gt;node_modules&lt;/code&gt; folder and dotfiles from another previous worktree so its just a simple &lt;code&gt;cp .env node_modules&lt;/code&gt; and your done. but if you just cloned that that bare naked repo (naughty) you still need to get those pesky dotfiles from somewhere, and you still need to run that dang npm install. &lt;br&gt;
However, like any true developer the mere fact that you have to think about all that and type the same same thing over and over for every new worktree should give shivers up your spine. And this is probably a good reason why a lot of web developers shy away from worktrees. Why go through that pain? We are pioneers! How dare someone set up a system that makes us have to type more! &lt;/p&gt;

&lt;p&gt;Enter my stupid ADHD brain.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/z8rEcJ6I0hiUM/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/z8rEcJ6I0hiUM/giphy.gif" alt="accurate depiction of my brain" width="360" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What if we unloaded our dotfiles to a completely different directory. and we kept that separate from everything else, you already do that with your config files(yeah I know whats going on that root directory that you can't be bothered to clean). I like my machine to be sleek and clean and only be running the projects I am working on at a single time. This means I could remove a repo once I was done with it on my local machine but still hold on to the dotfiles so that in the future when a client asks to change back that terrible idea that they had and wouldn't listen to reason I can quickly pull it down and still have the dotfiles. Great.&lt;/p&gt;

&lt;p&gt;But let's take that one step further. What if we could do that with the node modules as well. Sure it bloats our computer a bit depending on how many projects we have but it saves that time of running npm install on every new worktree. And let's be honest here, if you're working with Javascript or Typescript you accept the bloat, nay, you embrace is. STONKS BABY!&lt;/p&gt;

&lt;p&gt;Next, let's imagine that its the first worktree in a new repo that we just cloned down for the first time. We don't have the &lt;code&gt;node_modules&lt;/code&gt; directory for it so naturally we have to run an npm install. It's a pain but it's the first time we pulled the repo down, it can't be helped. However, I'm a one and done kinda guy. so let's make it so that if we run an npm install it should copy over those newly minted &lt;code&gt;node_modules&lt;/code&gt; to the correct dotfiles directory, because why should we go through the struggle of pressing those half-dozen or so keys. Do I go to work to work? NO, We want that automated.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/1lxryzbQaqo49cKhCw/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/1lxryzbQaqo49cKhCw/giphy.gif" alt="automated" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;finally, what if we are working with a couple different environments and… well our node configs are different for each of those environments well we should probably keep all those in our dotfiles directory as well. And we should probably realize that as developers our ability to name those environments extends to "prod", "test", "dev", "staging", "dev-feature", "dev-feature2"… I named these, but do you think I can be bothered to remember which is which? No, and I refuse to. Again, why work on bettering myself? The computer should better itself… and then, you know, eventually, maybe help me do my job better… But its on the computer!&lt;br&gt;
Enter, a fuzzy-finder to help coax my numb little brain into remembering which "dev-feature-blah-blah" I want. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V59piXqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh9r8bo382fv2u9j1ut5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V59piXqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh9r8bo382fv2u9j1ut5.jpg" alt="lazy me" width="880" height="572"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;so if your with me, and you have to work with package managers then you should understand that what we are looking for is a simple command that we can enter that will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;open a fuzzy finder of dotfile directories&lt;/li&gt;
&lt;li&gt;checks if there is a node_modules directory in the chosen dotfiles &lt;/li&gt;
&lt;li&gt;if there isn't, run npm install(again, I'm lazy. I cant be bothered to type npm i)&lt;/li&gt;
&lt;li&gt;if npm install was ran, copy over the new node_modules to that same dotfiles directory&lt;/li&gt;
&lt;li&gt;if there is already a node_modules directory just copy that over to the current worktree(why waste time and bandwidth, if we got it already)&lt;/li&gt;
&lt;li&gt;copy over any .env files we might have to the current worktree&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Oh and probably as a last little thing, we might want a check to just exit out if conditions aren't met. If I make this script and it has some shortcut my fat little stubby fingers are bound to accidentally bump those keys at some point and I don't need some script to come harass me or try to do all this work in folders that don't need it. &lt;/p&gt;

&lt;p&gt;Enter, &lt;a href="https://github.com/wh1ter4bb1t-js/nw"&gt;NW&lt;/a&gt;. Short for New Worktree… or North West if you're looking at a map or compass. A small little bash script that solves the above issue in the manner that we just outlined. And as a script, you can easily make a git hook or shortcut or add it to something like your editor to run automatically when you create a new worktree. I'm trying to solve a problem here people. My fingers, are short, stubby, there's no finger treadmill to get them slim and fit enough for writing npm install and cp .env . every time I make a new branch on my local machine. No, my fingers prefer to lay around all day and do nothing. &lt;/p&gt;

&lt;p&gt;So if you are interested in looking at this. Trying it out for yourself, seeing how it feels. heck if you want give your own fingers a push up(a single one, because thats all the work out they should need) and make some changes to the script to fit your own needs go for it, maybe even make a PR if your feeling adventurous. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/wh1ter4bb1t-js/nw"&gt;Lazy developers unite!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>productivity</category>
      <category>bash</category>
      <category>showdev</category>
    </item>
    <item>
      <title>DevSecOps: Implement security on CICD Pipeline</title>
      <author>Anshuman Abhishek</author>
      <pubDate>Fri, 24 Dec 2021 22:05:05 +0000</pubDate>
      <link>https://dev.to/_anshuman/devsecops-implement-security-on-cicd-pipeline-4kc5</link>
      <guid>https://dev.to/_anshuman/devsecops-implement-security-on-cicd-pipeline-4kc5</guid>
      <description>&lt;p&gt;&lt;strong&gt;Let' Start&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/wPDSMT9n2WCmVuHkJO/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/wPDSMT9n2WCmVuHkJO/giphy.gif" width="400" height="400"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-devsecops"&gt;
  &lt;/a&gt;
  What is Dev-Sec-Ops?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;DevSecOps&lt;/strong&gt; stands for development, security, and operations. It's an approach to culture, automation, and platform design that integrates security as a shared responsibility throughout the entire IT lifecycle.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is a endless field. Here we only focus about Infra and DevOps level security. We will discuss on both OSS and Paid tools which we can implement on CICD pipeline to make secure.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#what-is-cis"&gt;
  &lt;/a&gt;
  What is CIS?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;Centre for Internet Security&lt;/strong&gt; (CIS) provides a standardized set of security benchmarks to identify and refine effective security measures for specific set of tools and technologies.
&lt;/li&gt;
&lt;li&gt;It provides security benchmark and the National Checklist Program (NCP), defined by the NIST &lt;/li&gt;
&lt;li&gt;They offer guidance on the security configurations of the operating system, clouds, database, virtualization, framework, and application &lt;/li&gt;
&lt;li&gt;In addition to the benchmark documents, the CIS also provides downloadable tools for secure configuration scanning
&lt;a href="https://www.cisecurity.org/cis-benchmarks/"&gt;cisecurity.org/cis-benchmarks/ &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Best practice is to implement multiple scanning tool instead of trust on one.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#how-devsecops-pipeline-looks-like"&gt;
  &lt;/a&gt;
  How DevSecOps pipeline looks like?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gG_TdKRv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2mnmkd0d9vi5mtc89rol.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gG_TdKRv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2mnmkd0d9vi5mtc89rol.png" alt="DevSecOps Pipeline" width="880" height="606"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will cover how to implement these:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Design&lt;/li&gt;
&lt;li&gt;Develop&lt;/li&gt;
&lt;li&gt;Build&lt;/li&gt;
&lt;li&gt;Test&lt;/li&gt;
&lt;li&gt;Deploy&lt;/li&gt;
&lt;li&gt;Monitor&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#design"&gt;
  &lt;/a&gt;
  Design
&lt;/h2&gt;

&lt;p&gt;Security and monitoring is always a second step, 1st step is to harden your infrastructure. &lt;/p&gt;

&lt;p&gt;More than 80% attacks happens because of misconfiguration&lt;/p&gt;

&lt;p&gt;In AWS, you can check how much percentage your server follow the CIS benchmark. But also keep in mind CIS =! Enough &lt;br&gt;
You should not rely only on CIS and always follow best security practices &lt;/p&gt;

&lt;p&gt;When you create a server in AWS with just port 22 open. You notice that there will be multiple attempt start happening. It will reach to 100-1000 within 1 week. &lt;/p&gt;

&lt;p&gt;Check the vulnerability vectors you have in your system/environment where attacker can push their code or extract data. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attack Surface&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The attack surface of a system is the collection of points(attack vectors) where unauthorized user (attacker) may enter to inject data to or extract data from an environment &lt;/li&gt;
&lt;li&gt;Keeping the attack surface as small as possible is a basic security measure &lt;/li&gt;
&lt;li&gt;Ex - Use bastion server and put all the servers in private subnet
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;IAM&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Identity and Access Management (IAM) is the process of granting or restricting access to computing resources for individual users, groups, or systems. &lt;/li&gt;
&lt;li&gt;IAM - Authentication, Authorization, User Management, and Credentials Repository &lt;/li&gt;
&lt;li&gt;Best practice is to &lt;strong&gt;Fine-Grained&lt;/strong&gt; IAM Roles for Service Accounts and Users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Network Security&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Implement private subnets. Deploy your VMs with only private IPs. Provide secure outbound internet connections with Cloud NAT&lt;/li&gt;
&lt;li&gt;Turn on real-time monitoring, logging, and alerting&lt;/li&gt;
&lt;li&gt;Best practice is to only implement public faced LB. Also enable services like web-application firewall (WAF) and DDoS mitigation service like cloud armor.&lt;/li&gt;
&lt;li&gt;Fine grained networking policy on servers, resources and VPCs. Only open required IP range and ports.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Server Hardening&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is a practice of enhancing each server's security. Even though we use the containers for deployment we have to make sure the underlying infrastructure is also secure.&lt;/li&gt;
&lt;li&gt;Team can consult benchmark from CIS and application such as &lt;strong&gt;OpenSCAP&lt;/strong&gt; to review possible server vulnerabilities and determine what steps to take to mitigate risks &lt;/li&gt;
&lt;li&gt;A server must be hardened before the applications and tooling hosted on the server like Kubernetes worker server can be secured &lt;/li&gt;
&lt;li&gt;Implement App Armor Profile and Sec Comp Profile&lt;/li&gt;
&lt;li&gt;You can use Ansible playbook devsec.hardening to harden linux OS, mysql, nginx and ssh here is the link &lt;a href="https://github.com/dev-sec/ansible-collection-hardening"&gt;dev-sec
/
ansible-collection-hardening&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I assume that you are using service based Kubernetes cluster and only managing worker server. If you are managing master node then use &lt;strong&gt;kube-bench&lt;/strong&gt;. It is a tool that checks whether Kubernetes is deployed securely by running the checks documented in the CIS Kubernetes Benchmark.&lt;/li&gt;
&lt;li&gt;Only use harden image for worker server. All cloud provider provide CIS benchmark harden image.&lt;/li&gt;
&lt;li&gt;Secrets - Use them but make sure they're encrypted and have RBAC applied &lt;/li&gt;
&lt;li&gt;Security Context - Much of the Runtime practices mentioned can be enforced via SC &lt;/li&gt;
&lt;li&gt;Network Policy - Start with zero-trust(block every thing by default) and add allow rules only as necessary. Best practice to use Service Mesh(like Linkerd or Istio) which provide a lot of feature. If you don't want to implement service mesh then at least use calico overlay network instead of flannel because it support strong network policy management and access control list (ACLs). -- By default, pods accept traffic from any source. The network policy resource in k8s provides a means of configuring whether connections are accepted or refused. You can configure inbound and outbound rules by port, direction, protocol, and other attributes.&lt;/li&gt;
&lt;li&gt;Enforcement - Use OPA(Gatekeeper), Kyverno, etc to apply policies like 'each namespace should have tag of service mesh'.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#develop"&gt;
  &lt;/a&gt;
  Develop
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use IDE like VSCode where you can implement plugins.&lt;/li&gt;
&lt;li&gt;Use SonarLint's free and Open Source VS Code IDE extension. Perform static analysis on JavaScript, Java and Python code.&lt;/li&gt;
&lt;li&gt;Don't hardcode credentials and sensitive information in code instead use environment variable. Also when you use env variable give space at first to not record in history. Ex - $ export CRE=abcd&lt;/li&gt;
&lt;li&gt;Use branching and PR request methods.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#build"&gt;
  &lt;/a&gt;
  Build
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Sensitive Information Scanning&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Detecting and preventing hardcoded secrets like passwords, api keys, and tokens in git repos.&lt;/li&gt;
&lt;li&gt;Attackers keep scanning git repo for keys/secrets. If you by mistake upload keys in repo then automatic hacker tool start building VMs on cloud platform and use for mining. Now even cloud providers are smart enough and they also run tools to grep these sensitive information. If they find then immediately send you mail with all information. &lt;/li&gt;
&lt;li&gt;OSS - Gitleaks and truffleHog
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker pull zricethezav/gitleaks:latest
docker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] --source="/path" [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;SCA scanning&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SCA stands for the Source Composition Analysis. Scanning the dependency (eg library) used in the application for security vulnerabilities &lt;/li&gt;
&lt;li&gt;In any application code is just 10% and rest is Open Source Code which has ton of lines of codes which you have not written&lt;/li&gt;
&lt;li&gt;OSS for python is pyraider
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install pyraider
pyraider check -f /Users/raider/project/requirements.txt -e json result.json -e html result.html
pyraider check -f /Users/raider/project/Pipfile.lock
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;SAST Scanning&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SAST stands for Static Application Security Testing. It is the methodology for finding the security flaws in the application from the source code. It is White-box Security testing methodology.&lt;/li&gt;
&lt;li&gt;There are tons of tools available. You can refer this &lt;a href="https://owasp.org/www-community/Source_Code_Analysis_Tools"&gt;OWASP&lt;/a&gt;. Try to implement tool which follow CIS benchmark.&lt;/li&gt;
&lt;li&gt;OSS for python is bandit
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip3 install bandit
bandit -r path/to/your/code
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Static Code Analysis&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is Code Quality and Code Security scan. It empowers all developers to write cleaner and safer code.&lt;/li&gt;
&lt;li&gt;The only tools I know till now for this purpose is &lt;strong&gt;SonarQube&lt;/strong&gt; that is an open-source platform for continuous inspection of code quality to perform automatic reviews with static analysis of code to detect bugs, code smells, and security vulnerabilities on 20+ programming languages.&lt;/li&gt;
&lt;li&gt;Best practice is to enable gating with 80% code coverage.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run \
    --rm \
    -e SONAR_HOST_URL="http://${SONARQUBE_URL}" \
    -e SONAR_LOGIN="myAuthenticationToken" \
    -v "${YOUR_REPO}:/usr/src" \
    sonarsource/sonar-scanner-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;SBOM&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Modern software is assembled using third-party and open source components. They are glued together in complex and unique ways and integrated with original code to achieve the desired functionality. An accurate inventory of all components enables organizations to identify risk, allows for greater transparency, and enables rapid impact analysis.&lt;/li&gt;
&lt;li&gt;OSS for SBOM is CycloneDX. It is a lightweight software bill of materials (SBOM) standard designed for use in application security contexts and supply chain component analysis.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install cyclonedx-bom
pip freeze &amp;gt; requirements.txt
cyclonedx-bom -r -i PATH/TO/requirements.txt -o sbom.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#test"&gt;
  &lt;/a&gt;
  Test
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;DAST&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DAST stands for dynamic application security testing. It is the methodology for finding the security flaws in the application when running. It is Black-box Security testing methodology &lt;/li&gt;
&lt;li&gt;For DAST we need to implement test environment and after test complete destroy the environment to reduce cost. Best way to provision infrastructure for test environment is by using terraform.&lt;/li&gt;
&lt;li&gt;OSS for DAST testing is ZAP
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;zap.sh -daemon -host some-host -port some-port -config api.addrs.addr.regex=true -config api.disablekey=true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Performance Test&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is a practice of evaluating how a system performs in terms of responsiveness and stability under a particular workload. Performance tests are typically executed to examine speed, robustness, reliability, and application size. The process incorporates “performance” indicators such as:
&lt;/li&gt;
&lt;li&gt;It gathers all the tests that verify an application’s speed, robustness, reliability, and correct sizing. It examines several indicators such as a browser, page and network response times, server query processing time, number of acceptable concurrent users architected, CPU memory consumption, and number/type of errors which may be encountered when using an application.&lt;/li&gt;
&lt;li&gt;OSS tool is JMeter. It is one of popular open-source tool in the performance space to help measure load time.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;jmeter -n -t test.jmx -l testresult.jtl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Penetration Test&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Penetration tests (pentests)are a form of DAST (blackbox) that use external program to interrogate applications through their exposed API and HTTP endpoints. &lt;/li&gt;
&lt;li&gt;Penetration tests simulate automated cyber attacks on production infrastructure.
&lt;/li&gt;
&lt;li&gt;It detect common vulnerabilities such as injection, cross-site scripting and flaws in authentication and identity and access management(IAM) &lt;/li&gt;
&lt;li&gt;OSS for Pentest is Arachni. It is a feature-full, modular, high-performance Ruby framework aimed towards helping penetration testers and administrators evaluate the security of web applications.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;arachni $URL --report-save-path=$ {BUILD_TAG}.afr 
arachni_reporter ${BUILD_TAG}.afr --reporter=html:outfile=${BUILD_TAG}.zip 
unzip ${BUILD_TAG}.zip 
rm -f ${BUILD_TAG}.zip 
publish html report 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#deploy"&gt;
  &lt;/a&gt;
  Deploy
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;IaC Scanning&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scan cloud infrastructure configurations to find misconfigurations before they're deployed. It also scan security vulnerability in cloud infrastructure like IAM user has admin role.&lt;/li&gt;
&lt;li&gt;There are multiple of OSS available. Few of them are terrascan, tfsec and Checkov
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;terraform init
terraform plan -out tf.plan
terraform show -json tf.plan  &amp;gt; tf.json 
checkov -f tf.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;K8S Manifest Scanning&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Most of the scanner which scans IaC code are capable to scan kubernetes manifest files.&lt;/li&gt;
&lt;li&gt;It scan misconfigurations and security vulnerability in Kubernetes (JSON/YAML), Helm v3, and Kustomize.&lt;/li&gt;
&lt;li&gt;It scan manifest files for runAsNonRootCheck, privilegeEscalationCheck, readOnlyFileSystem, imageVersionnotusinglatest, securityContextUsed and many more. &lt;/li&gt;
&lt;li&gt;OSS are Terrascan, KubeLinter and Checkov
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;checkov -f deployment.yml -f service.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Image Scanning&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scan for vulnerabilities in container images, file systems, and Git repositories, as well as for configuration issues.&lt;/li&gt;
&lt;li&gt;Historically, developers have owned the security posture of their own code and the libraries used. Containers add security concerns at the operating-system level such as base-image selection, package installation, user and file permission, and more.&lt;/li&gt;
&lt;li&gt;Don't run as root - Yor probably don't need it. &lt;/li&gt;
&lt;li&gt;Privileged Containers - You almost definitely don't need it. &lt;/li&gt;
&lt;li&gt;Drop capabilities - Most apps don't need even Linux capabilities; dropping all and allow only what's needed. Most of the people consider alpine as a base image.&lt;/li&gt;
&lt;li&gt;Read Only Root Filesystem - Immutability makes exploiting your container harder. &lt;/li&gt;
&lt;li&gt;Deploy from known sources - Pull from known registries only&lt;/li&gt;
&lt;li&gt;OSS are trivy and Twistlock
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;trivy image python:3.4-alpine
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#monitoring"&gt;
  &lt;/a&gt;
  Monitoring
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It has combination monitoring, logging and alerting.&lt;/li&gt;
&lt;li&gt;Monitor resources, logging application outputs and alerting events like uptime checks.&lt;/li&gt;
&lt;li&gt;There are multiple stacks available one of them is EFK - Elasticsearch, Fluentd, and Kibana. They are resource consuming stack.&lt;/li&gt;
&lt;li&gt;One of best stack in this field is Prometheus, Grafana and Loki.&lt;/li&gt;
&lt;li&gt;In ISTIO service mesh, Jaeger and Kiali are available.&lt;/li&gt;
&lt;li&gt;Few paid services in this field which are known to be best in monitoring Kubernetes pods and services are New Relic, Dynatrace, Sysdig and Datadoghq.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;OSS tools mentioned:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;kube-bench - Kubernetes Hardening&lt;/li&gt;
&lt;li&gt;ansible-collection-hardening - Linux Hardening&lt;/li&gt;
&lt;li&gt;Linkerd or Istio - Service Mesh&lt;/li&gt;
&lt;li&gt;OPA(gatekeeper) and Kyverno - Policy&lt;/li&gt;
&lt;li&gt;Gitleaks and Trufflehog - Sensetive Information &lt;/li&gt;
&lt;li&gt;pyraider - Source Composition Analysis&lt;/li&gt;
&lt;li&gt;bandit - SAST&lt;/li&gt;
&lt;li&gt;SonarLint and SonarQube - Static Code Analysis&lt;/li&gt;
&lt;li&gt;Cyclonedx - SBOM&lt;/li&gt;
&lt;li&gt;ZAP - DAST&lt;/li&gt;
&lt;li&gt;Jmeter - Performance Test&lt;/li&gt;
&lt;li&gt;Arachni - Pentration Test&lt;/li&gt;
&lt;li&gt;Terrascan, Tfsec, KubeLinter and Checkov - IaC and k8S&lt;/li&gt;
&lt;li&gt;Trivy and Twistlock- Image Scanning&lt;/li&gt;
&lt;li&gt;Prometheus, Grafana and Loki - Monitoring&lt;/li&gt;
&lt;li&gt;Elasticsearch, Fluentd, and Kibana - Monitoring&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Paid Tools&lt;/strong&gt; which need to consider if you and your manager are more concerned about security:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Snyk - OpenSource, Code, Container and IaC Scan&lt;/li&gt;
&lt;li&gt;Fortify - Static Code Analyzer&lt;/li&gt;
&lt;li&gt;Codacy - Measure code quality&lt;/li&gt;
&lt;li&gt;New Relic&lt;/li&gt;
&lt;li&gt;Dynatrace&lt;/li&gt;
&lt;li&gt;Sysdig&lt;/li&gt;
&lt;li&gt;Datadoghq&lt;/li&gt;
&lt;/ol&gt;



&lt;h2&gt;
  &lt;a href="#final-notes"&gt;
  &lt;/a&gt;
  Final Notes:
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Almost all the scanning tools mentioned above can be implemented on any CICD pipeline like GitHub Action, GilabCI, CircleCI, Jenkins, Tekton, or any pipeline which support container based integration in it. I have tried to show examples of cli commands through which it scan. Almost all OSS scanning tools has docker image also on Dockerhub registry through that you can easily pull and run scan test. You need to implement checks after every scan and if it get failed then send reports to the person who trigger the pipeline.&lt;/code&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/mBdbauuNxUpnqr1B1u/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/mBdbauuNxUpnqr1B1u/giphy.gif" width="480" height="480"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>devsecops</category>
      <category>kubernetes</category>
      <category>cloudnative</category>
    </item>
    <item>
      <title>Prueba tus códigos html, css y javascript con MGPanel en spark</title>
      <author>Eloy Manuel Chacón Martínez</author>
      <pubDate>Fri, 24 Dec 2021 21:35:24 +0000</pubDate>
      <link>https://dev.to/eloymanuelch/prueba-tus-codigos-html-css-y-javascript-con-mgpanel-en-spark-1000</link>
      <guid>https://dev.to/eloymanuelch/prueba-tus-codigos-html-css-y-javascript-con-mgpanel-en-spark-1000</guid>
      <description>&lt;p&gt;Holaa programador, ya sea que estes comenzando en el mundo de la programación web o que ya tengas tiempo siempre vamos a necesitar un lugar donde probar nuestros códigos de una forma fácil, segura y a demás gratis.&lt;/p&gt;

&lt;p&gt;MGPanel tiene una herramienta gratuita para programadores que se llama &lt;strong&gt;Spark&lt;/strong&gt;, con el podrás probar tus html, css y javascript todo en tiempo real, a demás podrás guardarlos para tenerlos de referencia cuando estes programando algún proyecto real.&lt;/p&gt;

&lt;p&gt;Para usar la herramienta ingresa a: &lt;a href="https://app.mgpanel.org/spark"&gt;https://app.mgpanel.org/spark&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wlRBGuVT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kkl931ty1o2r00ez94g3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wlRBGuVT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kkl931ty1o2r00ez94g3.png" alt="Image description" width="880" height="470"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No tienes necesidad de registrarte a menos que quieras guardar tus sparks.  Espero te pueda ayudar en tus proyectos, tanto como me ayuda en los míos.&lt;/p&gt;

</description>
      <category>mgpanel</category>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Node.js and Redis deployed in Docker containers, using Docker Compose - then load-balancing the Node.js servers with Nginx</title>
      <author>marcelkatz</author>
      <pubDate>Fri, 24 Dec 2021 21:35:16 +0000</pubDate>
      <link>https://dev.to/marcelkatz/nodejs-and-redis-deployed-in-docker-containers-using-docker-compose-then-load-balancing-the-nodejs-servers-with-nginx-4omc</link>
      <guid>https://dev.to/marcelkatz/nodejs-and-redis-deployed-in-docker-containers-using-docker-compose-then-load-balancing-the-nodejs-servers-with-nginx-4omc</guid>
      <description>&lt;p&gt;This article contains two main stages:&lt;br&gt;
&lt;strong&gt;(1) Containerizing a Node.js server application and a Redis database instance into two separate Docker containers, using Dockerfile and Docker Compose, and showing how these two applications communicate with each other.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(2) Load-balancing the Node.js server, using a containerized Nginx reverse-proxy.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let’s start with Stage 1:&lt;br&gt;
(1) Containerizing a Node.js server application and a Redis instance into two separate Docker containers, using Dockerfile and Docker Compose, and showing how these two applications communicate with each other&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Starting with a simple &lt;strong&gt;Node.js server&lt;/strong&gt; application (we’ll call it “&lt;em&gt;test-webapp&lt;/em&gt;”) that responds to an &lt;em&gt;HTTP GET&lt;/em&gt; request by displaying the “numbers of visits”. The numbering scheme below (i.e. (1.1), (1.2), (1.3) etc.), matches the numbering in the diagram below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vjd6PFTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3yp6moj945jli4n6vfl4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vjd6PFTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3yp6moj945jli4n6vfl4.png" alt="Figure 1.a – Schematic diagram of the components" width="624" height="350"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Figure 1.a - Schematic diagram of the components&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In "&lt;strong&gt;Figure 1.a - Schematic diagram of the components&lt;/strong&gt;" above we have the following components:&lt;br&gt;
(&lt;strong&gt;1.1&lt;/strong&gt;) "&lt;em&gt;Docker Container 1&lt;/em&gt;" - container running the &lt;strong&gt;Node.js server&lt;/strong&gt; called "&lt;em&gt;test-webapp&lt;/em&gt;" that communicates with the browser on the left. Each time we refresh the URL &lt;code&gt;localhost:80&lt;/code&gt; i.e. we send a &lt;code&gt;GET&lt;/code&gt;command to the &lt;strong&gt;Node.js server&lt;/strong&gt; "&lt;em&gt;test-webapp&lt;/em&gt;", the server code increments the number of visits, then saves this value into the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; database instance that runs on "&lt;em&gt;Docker Container 2&lt;/em&gt;", and also displays the value back in the browser.&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;1.2&lt;/strong&gt;) “&lt;em&gt;Dockerfile&lt;/em&gt;” - defines and controls the &lt;strong&gt;Node.js server&lt;/strong&gt; process in “&lt;em&gt;Docker Container 1&lt;/em&gt;”. &lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;1.3&lt;/strong&gt;, &lt;strong&gt;1.3.1&lt;/strong&gt;, &lt;strong&gt;1.3.2&lt;/strong&gt;) “&lt;em&gt;&lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx/blob/main/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;&lt;/em&gt;” – the &lt;strong&gt;Docker Compose&lt;/strong&gt; config file defines and controls both “&lt;em&gt;Docker Container 1&lt;/em&gt;” and “&lt;em&gt;Docker Container 2&lt;/em&gt;”. “&lt;em&gt;Docker Container 1&lt;/em&gt;” runs the &lt;strong&gt;Node.js server&lt;/strong&gt; process “&lt;em&gt;test-webap_p”. “_Docker Container 2&lt;/em&gt;” runs the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; database instance.&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;1.3.3&lt;/strong&gt;) &lt;strong&gt;Docker Compose&lt;/strong&gt; establishes by default a communication network between “&lt;em&gt;Docker Container 1&lt;/em&gt;” and “&lt;em&gt;Docker Container 2&lt;/em&gt;” which allow the &lt;strong&gt;Node.js server&lt;/strong&gt; process “&lt;em&gt;test-webapp&lt;/em&gt;” to communicate with the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; database instance, and exchange between them the “number of visits to the app/web server” (&lt;code&gt;numVisits&lt;/code&gt;) value.&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;1.3.4&lt;/strong&gt;) &lt;strong&gt;Docker Compose&lt;/strong&gt; maps local hosting machine Port 80 to “&lt;em&gt;Docker Container 1&lt;/em&gt;” Port 5000. Port 5000 is the port on which the &lt;strong&gt;Node.js server&lt;/strong&gt; “&lt;em&gt;test-webapp&lt;/em&gt;” listens and reacts to the &lt;code&gt;GET&lt;/code&gt;commands sent by the browser.&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;1.4&lt;/strong&gt;) Connecting to the shell of “&lt;em&gt;Docker Container 2&lt;/em&gt;” and then to the client command line of the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; database instance via “&lt;code&gt;redis-cli&lt;/code&gt;” we can see that the value of &lt;code&gt;numVisits&lt;/code&gt; (which represents the number of times the browser issued a &lt;code&gt;GET&lt;/code&gt;command to the &lt;strong&gt;Node.js server&lt;/strong&gt;) is in sync with the value displayed in the browser by the &lt;strong&gt;Node.js server&lt;/strong&gt; – thus showing that inter-process communication occurs between the processes “&lt;em&gt;test-webapp&lt;/em&gt;” in “&lt;em&gt;Docker Container 1&lt;/em&gt;” and the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; process in “&lt;em&gt;Docker Container 2&lt;/em&gt;”.&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;1.5&lt;/strong&gt;) This step illustrates the &lt;code&gt;restart&lt;/code&gt; directive and capability in &lt;strong&gt;Docker Compose&lt;/strong&gt; (specified in config file “&lt;em&gt;docker-compose.yml&lt;/em&gt;”) – when connecting to the Linux shell of “&lt;em&gt;Docker Container 1&lt;/em&gt;”, we can &lt;code&gt;kill -9&lt;/code&gt; the &lt;strong&gt;Node.js server&lt;/strong&gt; process, but the &lt;strong&gt;Node.js server&lt;/strong&gt; process will be restarted automatically by &lt;strong&gt;Docker Compose&lt;/strong&gt; – illustrating the automatic recovery provided by &lt;strong&gt;Docker Compose&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;And now let’s describe the steps and the flow of this scenario. The numbering scheme in the description below (i.e. (1.1), (1.2), (1.3) etc.), matches the numbering in “&lt;strong&gt;Figure 1.a – Schematic diagram of the components&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(1.1) File structure:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_yC5myBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rm92ysovtnnq9azlunop.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_yC5myBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rm92ysovtnnq9azlunop.png" alt="Figure 1.b – File structure for Stage 1" width="864" height="688"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Figure 1.b – File structure for Stage 1&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Node.js files for process ‘test-webapp’:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The contents of directory “&lt;em&gt;test-webapp&lt;/em&gt;”, where the source code for the &lt;strong&gt;Node.js server&lt;/strong&gt; “&lt;em&gt;test-webapp&lt;/em&gt;” resides:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bSempo81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqed4cw6m1mpm1upws9m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bSempo81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqed4cw6m1mpm1upws9m.png" alt="Node.js files for process 'test-webapp'" width="165" height="164"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;1.2&lt;/strong&gt;) The &lt;em&gt;Dockerfile _containerizes and controls the &lt;strong&gt;Node.js application&lt;/strong&gt; by downloading the “_node:alpine&lt;/em&gt;” image from &lt;a href="https://hub.docker.com/"&gt;Docker Hub&lt;/a&gt;, installing &lt;strong&gt;Node.js&lt;/strong&gt; on the container, copying to the container the &lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx/tree/main/test-webapp"&gt;source files&lt;/a&gt; – then launching the &lt;strong&gt;Node.js server&lt;/strong&gt; web app (see source code in file “&lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx/blob/main/test-webapp/server.js"&gt;&lt;em&gt;server.js&lt;/em&gt;&lt;/a&gt;”).&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;1.3&lt;/strong&gt;) Going one directory above, we see the "&lt;em&gt;&lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx/blob/main/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;&lt;/em&gt;" file that organizes the containerization and sets up the architecture of all the components. (File &lt;br&gt;
“&lt;em&gt;&lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx/blob/main/docker-compose-nginx.yml"&gt;docker-composer-nginx.yml&lt;/a&gt;&lt;/em&gt;” will be presented and explained in &lt;strong&gt;Stage 2&lt;/strong&gt; of this article)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--naPa4IgZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tqtlkv6v7vams8x3xq9d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--naPa4IgZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tqtlkv6v7vams8x3xq9d.png" alt="'docker-compose.yml' file for process 'test-webapp'" width="312" height="88"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Purge all images and containers:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We run command &lt;code&gt;docker system prune -a&lt;/code&gt; to clear all Docker images and containers and start with a clean slate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\test-docker\test-redis&amp;gt;docker system prune -a                                          
WARNING! This will remove:                                                                                                
- all stopped containers                                                                                                
- all networks not used by at least one container                                                                       
- all images without at least one container associated to them                                                          
- all build cache                                                                                                                                                                                                                             
Are you sure you want to continue? [y/N] y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;(1.3) Build and run the 'test-webapp' image with Docker Compose&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use command &lt;code&gt;docker-compose -f &amp;lt;config-filename&amp;gt; build&lt;/code&gt; to build containers and the applications that will be running in each container:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C:\test-docker\test-redis&amp;gt;docker-compose -f docker-compose.yml build&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;See the results below of the built Docker image:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\test-docker\test-redis&amp;gt;docker images                                                                                                                     
REPOSITORY               TAG       IMAGE ID       CREATED         SIZE                                                                                                                     
test-redis_test-webapp   latest    e8145bea0fec   4 minutes ago   175MB
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Run the 'test-webapp' and 'redis' containers with 'docker-compose':&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let’s launch both “&lt;em&gt;test-webapp&lt;/em&gt;” and “&lt;em&gt;redis&lt;/em&gt;” services, as described in config file &lt;br&gt;
“&lt;em&gt;&lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx/blob/main/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;&lt;/em&gt;”, using the &lt;code&gt;docker-compose -f &amp;lt;config-filename&amp;gt; up&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7d3NTR5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/66ukw6kmm4djhk2nzxsa.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7d3NTR5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/66ukw6kmm4djhk2nzxsa.PNG" alt="docker-compose -f docker-compose.yml up" width="634" height="233"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can see from the output above, that both the “&lt;em&gt;redis&lt;/em&gt;” container (“&lt;em&gt;test-redis_1&lt;/em&gt;” – corresponding to “&lt;em&gt;Docker Container 2&lt;/em&gt;” in &lt;strong&gt;Figure 1.a&lt;/strong&gt;) and the “&lt;em&gt;test-webapp&lt;/em&gt;” container (“&lt;em&gt;test-webapp_1&lt;/em&gt;” corresponding to “&lt;em&gt;Docker Container 1&lt;/em&gt;” in &lt;strong&gt;Figure 1.a&lt;/strong&gt;) are running and printing to stdout in the command line window where we launched &lt;strong&gt;Docker Compose&lt;/strong&gt; to run these two containers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;View the 'test-webapp' and 'redis' running containers:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\test-docker\test-redis\test-webapp&amp;gt;docker ps                                                                                        
CONTAINER ID   IMAGE                    PORTS                
NAMES                                         
928b8b07415d   test-redis_test-webapp   0.0.0.0:80-&amp;gt;5000/tcp   test-redis_test-webapp_1                      
a8756127bff5   redis:alpine             6379/tcp               test-redis_test-redis_1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(&lt;strong&gt;1.3.1&lt;/strong&gt;, &lt;strong&gt;1.3.2&lt;/strong&gt;) The two containers above match the containers “&lt;em&gt;Docker Container 1&lt;/em&gt;” and “&lt;em&gt;Docker Container 2&lt;/em&gt;” in the &lt;strong&gt;Figure 1.a&lt;/strong&gt; above. Note the “&lt;em&gt;CONTAINER ID&lt;/em&gt;” column whose values we will use below to perform operation on each individual running container. &lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;1.3.4&lt;/strong&gt;) Port 5000 in the &lt;strong&gt;Node.js server&lt;/strong&gt; "&lt;em&gt;test-webapp&lt;/em&gt;" container is mapped to local (hosting) Port 80, so when one connects in the local (hosting) browser to URL &lt;strong&gt;&lt;a href="http://localhost:80"&gt;http://localhost:80&lt;/a&gt;&lt;/strong&gt;, for each refresh, the &lt;strong&gt;Node.js process&lt;/strong&gt; in the “&lt;em&gt;test-webapp&lt;/em&gt;” container increments the number of visits in variable &lt;code&gt;numVisits&lt;/code&gt; which is set and saved in the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; in variable &lt;code&gt;numVisits&lt;/code&gt; -- and this value is also send back and displayed in the browser. &lt;/p&gt;

&lt;p&gt;“Docker-compose” sets-up by default a network with both “&lt;em&gt;test-webapp&lt;/em&gt;” container (“&lt;em&gt;Docker Container 1&lt;/em&gt;” in &lt;strong&gt;Figure 1.a&lt;/strong&gt;) and “&lt;em&gt;redis&lt;/em&gt;” container (“&lt;em&gt;Docker Container 2&lt;/em&gt;” in &lt;strong&gt;Figure 1.a&lt;/strong&gt;) within this network, and both containers are reachable by each other via this network. &lt;/p&gt;

&lt;p&gt;The local browser communicates with the &lt;strong&gt;Node.js server&lt;/strong&gt; container. When refreshing the connection in the browser, the server callback is invoked which responds to the browser with the updated number of visits.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BKBbVg8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/euscx0msi6am2kz9tk7j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BKBbVg8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/euscx0msi6am2kz9tk7j.png" alt="1.3.4 Browser - localhost - number of visits 8" width="419" height="170"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;1.4&lt;/strong&gt;) We are using the &lt;code&gt;docker exec -it&lt;/code&gt; command that allows us to connect to a running container while the &lt;code&gt;-it&lt;/code&gt; option allows us to capture the stdin/stdout of that container. Then we specify the CONTAINER ID &lt;em&gt;a8756127bff5&lt;/em&gt; obtained from &lt;code&gt;docker ps&lt;/code&gt; command above, followed by the shell (&lt;strong&gt;&lt;em&gt;sh&lt;/em&gt;&lt;/strong&gt;) that we want to launch as we enter the container. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;C:\test-redis\test-webapp&amp;gt;docker exec -it a8756127bff5 sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then, once we are inside the container’s shell, we connect to the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; database using the &lt;code&gt;redis-cli&lt;/code&gt; command. At the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; prompt we use &lt;code&gt;get numVisits&lt;/code&gt; to obtain the value of the variable “&lt;strong&gt;numVisits&lt;/strong&gt;” inside “&lt;em&gt;redis&lt;/em&gt;”. We can see that the “&lt;em&gt;redis&lt;/em&gt;” instance communicates with the “&lt;em&gt;test-webapp&lt;/em&gt;” process in its respective container and the variable “&lt;em&gt;numVisits&lt;/em&gt;” in the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; database instance is in sync with its value in the browser. In this case both have the value “&lt;strong&gt;8&lt;/strong&gt;”, because we refreshed 8 times the “&lt;strong&gt;localhost:80&lt;/strong&gt;” URL thus issuing a &lt;code&gt;GET&lt;/code&gt; command in the browser that is intercepted by the *&lt;em&gt;Node.js server *&lt;/em&gt; which increments the “number of visits” (&lt;code&gt;numVisits&lt;/code&gt;) variable. The “number of visits” value is sent back to the browser by the “&lt;em&gt;test-webapp&lt;/em&gt;” process which also saves the value in the “&lt;em&gt;redis&lt;/em&gt;” database in variable &lt;code&gt;numVisits&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/data # redis-cli                                                                                                                                                     
127.0.0.1:6379&amp;gt; get numVisits                                                                                                                                      
"8"                                                                                                                                                                    
127.0.0.1:6379&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From within the “&lt;em&gt;redis-cli&lt;/em&gt;” in the “&lt;em&gt;redis&lt;/em&gt;” container (“&lt;em&gt;Docker Container 2&lt;/em&gt;”) we can also set in &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; manually the “&lt;em&gt;numVisits&lt;/em&gt;” variable to a random value of let’s say “&lt;strong&gt;342&lt;/strong&gt;”…&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5mFZNh5z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3snsztp8x4gcgco7t7ec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5mFZNh5z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3snsztp8x4gcgco7t7ec.png" alt="1.4 - redis - set num visits 342" width="407" height="91"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;…the &lt;code&gt;numVisits&lt;/code&gt; variable is updated in the “test-webapp” &lt;strong&gt;Node.js server&lt;/strong&gt; (running in “&lt;em&gt;Docker Container 1&lt;/em&gt;”), and therefore in the browser (due to the fact that in order to invoke the &lt;em&gt;callback&lt;/em&gt; in the &lt;strong&gt;&lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx/blob/main/test-webapp/server.js"&gt;Node.js server&lt;/a&gt;&lt;/strong&gt;, one needs to refresh the connection to “&lt;strong&gt;localhost:80&lt;/strong&gt;”, the number of visits increases by &lt;strong&gt;1&lt;/strong&gt;, thus &lt;strong&gt;342&lt;/strong&gt; + 1 = &lt;strong&gt;343&lt;/strong&gt;. This shows that we have two-way inter-process communications between the processes running in “&lt;em&gt;Docker Container 1&lt;/em&gt;” and “&lt;em&gt;Docker Container 2&lt;/em&gt;”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FNra9-r7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oapryvdzrnppyzztuxfn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FNra9-r7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oapryvdzrnppyzztuxfn.png" alt="1.4 Browser - localhost - number of visits 343" width="435" height="191"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;1.5&lt;/strong&gt;) A useful feature provided by &lt;strong&gt;Docker Compose&lt;/strong&gt; is the capability to specify in “&lt;em&gt;docker-compose.yml&lt;/em&gt;” a “&lt;a href="https://docs.docker.com/config/containers/start-containers-automatically/#use-a-restart-policy"&gt;restart&lt;/a&gt;” option. &lt;br&gt;
This will allow us when connecting to the shell of “&lt;em&gt;Docker Container 1&lt;/em&gt;”, to “kill” the &lt;strong&gt;Node.js server&lt;/strong&gt; process, but the &lt;strong&gt;Node.js server&lt;/strong&gt; process will be restarted automatically by the &lt;strong&gt;Docker Compose&lt;/strong&gt; “&lt;em&gt;restart&lt;/em&gt;” directive.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\test-docker\test-redis&amp;gt;docker ps
CONTAINER ID   IMAGE                      PORTS                    NAMES
c675ff6c0464   test-redis_nginx           0.0.0.0:80-&amp;gt;80/tcp       test-redis_nginx_1
3137d1468ec7   test-redis_test-webapp-2   0.0.0.0:3009-&amp;gt;5000/tcp   test-redis_test-webapp-2_1 
57d399295421   redis:alpine                                        test-redis_test-redis_1
b30635f44151   test-redis_test-webapp-1   0.0.0.0:3008-&amp;gt;5000/tcp   test-redis_test-webapp-1_1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Connect to the Docker container whose ID is &lt;em&gt;928b8b07415d&lt;/em&gt; and invoke the shell (&lt;strong&gt;&lt;em&gt;sh&lt;/em&gt;&lt;/strong&gt;). &lt;/p&gt;

&lt;p&gt;&lt;code&gt;C:\test-redis\test-webapp&amp;gt;docker exec -it 928b8b07415d sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Inside the container, at the shell prompt, show all process id’s using &lt;code&gt;ps -al&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/usr/src/app # ps -al
PID   USER     TIME  COMMAND
1     root     0:00  npm start
19    root     0:00  node server.js
30    root     0:00  sh
36    root     0:00  ps -al
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Proceed with “killing” the “&lt;em&gt;node server.js&lt;/em&gt;” process by issuing a &lt;code&gt;kill -9 &amp;lt;process-id&amp;gt;&lt;/code&gt; command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/usr/src/app # kill -9 19&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In the command line window that is running &lt;strong&gt;Docker Compose&lt;/strong&gt; we can see how the “&lt;em&gt;test-webapp&lt;/em&gt;” receives a “kill signal” (&lt;code&gt;SIGKILL&lt;/code&gt;), exited with code ‘&lt;strong&gt;1&lt;/strong&gt;’, and then restarted automatically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PyOXsmV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7m25v5kmnu9zlbobgqgf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PyOXsmV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7m25v5kmnu9zlbobgqgf.PNG" alt="npm ERR command sh -c node server.js" width="604" height="136"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;Stage 1&lt;/strong&gt; of this example we showed how &lt;strong&gt;Docker Compose&lt;/strong&gt; allows us to easily establish independent environments that communicate with each other, and also the automatic fault-tolerance (restart on failure) capability of Docker Compose.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let’s continue with Stage 2:&lt;br&gt;
(2) Load-balancing the Node.js server, with the help of a containerized Nginx reverse-proxy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The diagram in “&lt;strong&gt;Figure 2.a – Schematic diagram of the components for Stage 2&lt;/strong&gt;” describes an architecture similar to the one described earlier in “&lt;strong&gt;Figure 1.a – Schematic diagram of the components&lt;/strong&gt;” but with the changes described below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dW6tGtNm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/02s6wkco89eaeu00ezxu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dW6tGtNm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/02s6wkco89eaeu00ezxu.png" alt="Figure 2.a – Schematic diagram of the components for Stage 2" width="856" height="484"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Figure 2.a – Schematic diagram of the components for Stage 2&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In “&lt;strong&gt;Figure 2.a – Schematic diagram of the components for Stage 2&lt;/strong&gt;” we have the following components:&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;2.1.1&lt;/strong&gt;, &lt;strong&gt;2.1.2&lt;/strong&gt;) “&lt;em&gt;Docker Container 1&lt;/em&gt;” and “&lt;em&gt;Docker Container 2&lt;/em&gt;” – two identical containers whose source code reside in directories “&lt;em&gt;&lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx/tree/main/test-webapp-1"&gt;test-webapp-1&lt;/a&gt;&lt;/em&gt;” and “&lt;em&gt;&lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx/tree/main/test-webapp-2"&gt;test-webapp-2&lt;/a&gt;&lt;/em&gt;” (as shown in “&lt;strong&gt;Figure 2.b – File structure for Stage 2&lt;/strong&gt;” below), that are almost identical copies of the application “&lt;em&gt;test-webapp&lt;/em&gt;” that was described earlier in &lt;strong&gt;Stage 1&lt;/strong&gt;. This time we are using two &lt;strong&gt;Node.js server&lt;/strong&gt; processes that will serve the client browser from the local host machine, scaling up and load-balancing the original one-server configuration from &lt;strong&gt;Stage 1&lt;/strong&gt;. These two containers are defined and controlled each by their respective “&lt;em&gt;Dockerfile&lt;/em&gt;” (&lt;strong&gt;2.1.1.1&lt;/strong&gt;) and (&lt;strong&gt;2.1.1.2&lt;/strong&gt;). Each &lt;strong&gt;Node.js server&lt;/strong&gt; “&lt;em&gt;Docker Container 1&lt;/em&gt;” and “&lt;em&gt;Docker Container 2&lt;/em&gt;” counts the number of visits coming from the local host browser. Then it saves the number of visits into the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; database, and it also responds back to the browser with the number of visits and with which specific &lt;strong&gt;Node.js server&lt;/strong&gt; served each individual &lt;em&gt;HTTP GET&lt;/em&gt; request coming from the browser, by sending back to the browser a message of type: &lt;br&gt;
“&lt;strong&gt;test-webapp-1&lt;/strong&gt;: Number of visits is: ”, or &lt;br&gt;
“&lt;strong&gt;test-webapp-2&lt;/strong&gt;: Number of visits is: ”&lt;br&gt;
…thus highlighting the load-leveling nature of this stage.&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;2.1.3&lt;/strong&gt;) “Docker Container 3” – the container running the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; database instance, identical to the one described in &lt;strong&gt;Stage 1&lt;/strong&gt;, storing the “number of visits” performed by the localhost machine browser to “&lt;strong&gt;localhost:80&lt;/strong&gt;”. The number of visits is stored by the &lt;strong&gt;Node.js server&lt;/strong&gt; processes “&lt;em&gt;test-webapp-1&lt;/em&gt;” and “&lt;em&gt;test-webapp-2&lt;/em&gt;” in the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; variable &lt;code&gt;numVisits&lt;/code&gt; whose value is transmitted by each &lt;strong&gt;Node.js server&lt;/strong&gt; to the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; database on each refresh on the local host browser.&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;2.2&lt;/strong&gt;) “&lt;em&gt;&lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx/blob/main/docker-compose-nginx.yml"&gt;docker-compose-nginx.yml&lt;/a&gt;&lt;/em&gt;” – the main &lt;strong&gt;Docker Compose&lt;/strong&gt; config file defines and controls: (I) “&lt;em&gt;Docker Container 1&lt;/em&gt;” running &lt;strong&gt;Node.js server&lt;/strong&gt; “&lt;em&gt;test-webapp-1&lt;/em&gt;”,  (II) “&lt;em&gt;Docker Container 2&lt;/em&gt;” running &lt;strong&gt;Node.js server&lt;/strong&gt; “&lt;em&gt;test-webapp-2&lt;/em&gt;”, (III) “&lt;em&gt;Docker Container 3&lt;/em&gt;” running &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt;, and (IV) “&lt;em&gt;Docker Container 4&lt;/em&gt;” running &lt;strong&gt;&lt;em&gt;Nginx&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;2.3&lt;/strong&gt;) “&lt;em&gt;Docker Container 4&lt;/em&gt;” running “&lt;em&gt;Nginx&lt;/em&gt;” – This is an additional container introduced in &lt;strong&gt;Stage 2&lt;/strong&gt;, defined and controlled by its own &lt;em&gt;Dockerfile&lt;/em&gt; (&lt;strong&gt;2.3.1&lt;/strong&gt;), that runs an “&lt;em&gt;nginx&lt;/em&gt;” instance, and acts a as reverse-proxy that routes the &lt;em&gt;HTTP GET&lt;/em&gt; requests coming from the local host browser. The “&lt;strong&gt;&lt;em&gt;Nginx&lt;/em&gt;&lt;/strong&gt;” process in “&lt;em&gt;Docker Container 4&lt;/em&gt;” routes the &lt;em&gt;HTTP GET&lt;/em&gt; requests coming from local host browser “&lt;strong&gt;localhost:80&lt;/strong&gt;”, in a &lt;strong&gt;round-robin&lt;/strong&gt; manner (&lt;strong&gt;(2.3.3)&lt;/strong&gt; and &lt;strong&gt;(2.3.4)&lt;/strong&gt;), to either the “&lt;em&gt;test-webapp-1&lt;/em&gt;” &lt;strong&gt;Node.js server&lt;/strong&gt; in “&lt;em&gt;Docker Container 1&lt;/em&gt;” or to “&lt;em&gt;test-webapp-2&lt;/em&gt;” &lt;strong&gt;Node.js&lt;/strong&gt; server in “&lt;em&gt;Docker Container 2&lt;/em&gt;”. The “&lt;strong&gt;&lt;em&gt;nginx&lt;/em&gt;&lt;/strong&gt;” process in “&lt;em&gt;Docker Container 4&lt;/em&gt;” is defined and controlled by the &lt;strong&gt;_Nginx _&lt;/strong&gt;config file “&lt;em&gt;&lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx/blob/main/nginx/nginx.conf"&gt;nginx.conf&lt;/a&gt;&lt;/em&gt;” which is copied by &lt;strong&gt;&lt;em&gt;Nginx&lt;/em&gt;&lt;/strong&gt; container’s &lt;em&gt;Dockerfile&lt;/em&gt; to the “&lt;em&gt;Docker Container 4&lt;/em&gt;” environment file “&lt;em&gt;/etc/nginx/conf.d./&lt;strong&gt;default.conf&lt;/strong&gt;&lt;/em&gt;” (this is a standard &lt;strong&gt;&lt;em&gt;Nginx&lt;/em&gt;&lt;/strong&gt; setup). The “&lt;em&gt;nginx&lt;/em&gt;” instance distributes the incoming traffic from the local host browser, thus scaling up and load- balancing the single-container web/app server architecture presented in &lt;strong&gt;Stage 1&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;And now let’s describe the steps and the flow of this scenario. The numbering scheme in the description below (i.e. (2.1), (2.2), (2.3) etc.), matches the numbering in “&lt;strong&gt;Figure 2.a – Schematic diagram of the components for Stage 2&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(2.1) File structure:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5AOs-x2p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v7qndptehh545sknesh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5AOs-x2p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v7qndptehh545sknesh.png" alt="Figure 2.b – File structure for Stage 2" width="864" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The file structure described in “&lt;strong&gt;Figure 2.b – File structure for Stage 2&lt;/strong&gt;” is almost identical to the files structure described earlier in “&lt;strong&gt;Figure 1.b – File structure for Stage 1&lt;/strong&gt;” with the following changes:&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;2.1.1&lt;/strong&gt;, &lt;strong&gt;2.1.2&lt;/strong&gt;) The files from directory “&lt;em&gt;test-webapp&lt;/em&gt;” from &lt;strong&gt;Stage 1&lt;/strong&gt; were copied into directories “&lt;em&gt;test-webapp-1&lt;/em&gt;” and “&lt;em&gt;test-webapp-2&lt;/em&gt;”.&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;2.2&lt;/strong&gt;) Going one directory above, we see the "&lt;em&gt;&lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx/blob/main/docker-compose-nginx.yml"&gt;docker-compose-nginx.yml&lt;/a&gt;&lt;/em&gt;" config file that organizes the containerization and sets up the architecture of all the components:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A8ZD3MU4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/23ztsgagx0fthaktnn3n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A8ZD3MU4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/23ztsgagx0fthaktnn3n.png" alt="'docker-compose-nginx.yml' file" width="293" height="106"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Purge all images and containers:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As in &lt;strong&gt;Stage 1&lt;/strong&gt;, we run command &lt;code&gt;docker system prune -a&lt;/code&gt; to clear all Docker images and containers and start with a clean slate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(2.3) Build and run the 'test-webapp-1',  'test-webapp-2', ‘redis’, and ‘nginx’ images with Docker Compose&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Build with Docker Compose:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C:\test-docker\test-redis&amp;gt;docker-compose -f docker-compose-nginx.yml build&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Run with Docker Compose:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C:\test-docker\test-redis&amp;gt;docker-compose -f docker-compose-nginx.yml up&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In the command line window where we issue the &lt;code&gt;docker-compose -f docker-compose-nginx.yml up&lt;/code&gt; command, &lt;strong&gt;Docker Compose&lt;/strong&gt; replies with:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ufv9ddaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi20q9vn6kp7m67olqst.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ufv9ddaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi20q9vn6kp7m67olqst.PNG" alt="4 containers running" width="663" height="193"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;...showing that all 4 Docker containers have started successfully and are up and running: “&lt;em&gt;test-redis_1&lt;/em&gt;” corresponds to the &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; process running in “&lt;em&gt;Docker Container 3&lt;/em&gt;”, “&lt;em&gt;test-webapp-2_1&lt;/em&gt;” corresponds to the &lt;strong&gt;Node.js server&lt;/strong&gt; process running in “&lt;em&gt;Docker Container 2&lt;/em&gt;”, “&lt;em&gt;test-webapp-1_1&lt;/em&gt;” corresponds to the &lt;strong&gt;Node.js server&lt;/strong&gt; process running in “&lt;em&gt;Docker Container 1&lt;/em&gt;”, and “&lt;em&gt;nginx_1&lt;/em&gt;” corresponds to the &lt;strong&gt;&lt;em&gt;Nginx&lt;/em&gt;&lt;/strong&gt; server running in “&lt;em&gt;Docker Container 4&lt;/em&gt;”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;View the 'test-webapp-1', ‘test-webapp-2’, 'redis', and ‘nginx’ running containers:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\test-docker\test-redis&amp;gt;docker ps 
CONTAINER ID   IMAGE                       PORTS       NAMES                                            c675ff6c0464   test-redis_nginx            0.0.0.0:80-&amp;gt;80/tcp        test-redis_nginx_1                               
3137d1468ec7   test-redis_test-webapp-2    0.0.0.0:3009-&amp;gt;5000/tcp   
test-redis_test-webapp-2_1                       
57d399295421   redis:alpine                                                                         test-redis_test-redis_1                          
b30635f44151   test-redis_test-webapp-1    0.0.0.0:3008-&amp;gt;5000/tcp   test-redis_test-webapp-1_1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The four containers above match containers “&lt;em&gt;Docker Container 1&lt;/em&gt;” through “&lt;em&gt;Docker Container 4&lt;/em&gt;” in “&lt;strong&gt;Figure 2.a – Schematic diagram of the components for Stage 2&lt;/strong&gt;”&lt;br&gt;
above. Note the “&lt;em&gt;CONTAINER ID&lt;/em&gt;” column whose values we will use below to potentially perform operations on each individual running container.&lt;/p&gt;

&lt;p&gt;Let’s run first two instances of the browser on the hosting machine, and point them to URL “&lt;strong&gt;localhost:80&lt;/strong&gt;”:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OpVMnmS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42dwmonlt8jn07ifovp0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OpVMnmS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42dwmonlt8jn07ifovp0.png" alt="2.3 Browser - test-webapp-2 - number of visits 7" width="513" height="159"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sOWO-DD_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d06t4jutlz9c47pd5po8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sOWO-DD_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d06t4jutlz9c47pd5po8.png" alt="2.3 Browser - test-webapp-1 - number of visits 8" width="513" height="156"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice how due to the &lt;strong&gt;round-robin&lt;/strong&gt; routing mechanism employed by the &lt;strong&gt;&lt;em&gt;Nginx&lt;/em&gt;&lt;/strong&gt; reverse-proxy, the “&lt;em&gt;GET localhost:80&lt;/em&gt;” request is routed once to “&lt;em&gt;test-webapp-1&lt;/em&gt;” &lt;strong&gt;Node.js server&lt;/strong&gt;, and once to the “&lt;em&gt;test-webapp-2&lt;/em&gt;” &lt;strong&gt;Node.js server&lt;/strong&gt;, achieving the scaling-up and load balancing that we intended to demonstrate. &lt;/p&gt;

&lt;p&gt;Let’s connect to the container that is running &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt;, to its &lt;strong&gt;&lt;em&gt;sh&lt;/em&gt;&lt;/strong&gt; (shell) environment:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C:\test-docker\test-redis&amp;gt;docker exec -it 57d399295421 sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then, inside the container, let’s connect to &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; itself using “&lt;em&gt;redis-cli&lt;/em&gt;”:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/data #
/data # redis-cli
127.0.0.1:6379&amp;gt; 
127.0.0.1:6379&amp;gt; get numVisits
"8"
127.0.0.1:6379&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note how the &lt;code&gt;get numVisits&lt;/code&gt; command in &lt;strong&gt;&lt;em&gt;Redis&lt;/em&gt;&lt;/strong&gt; returns the expected value of “number of visits” that is communicated to the “&lt;strong&gt;&lt;em&gt;redis&lt;/em&gt;&lt;/strong&gt;” container from the containers that are running the &lt;strong&gt;Node.js app servers&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;Stage 2&lt;/strong&gt; of this example we showed how &lt;strong&gt;Docker Compose&lt;/strong&gt; allows us to easily establish multiple containers with their independent environments that communicate with each other, and also how scaling and load-balancing achieved with Nginx.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source code:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://github.com/marcelkatz/test-docker-nodejs-redis-nginx"&gt;https://github.com/marcelkatz/test-docker-nodejs-redis-nginx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>docker</category>
      <category>node</category>
      <category>redis</category>
      <category>nginx</category>
    </item>
    <item>
      <title>Free Ebook &amp; Courses for Frontend Devs</title>
      <author>Suprabha</author>
      <pubDate>Fri, 24 Dec 2021 21:30:39 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/free-ebook-courses-for-frontend-devs-17hm</link>
      <guid>https://dev.to/suprabhasupi/free-ebook-courses-for-frontend-devs-17hm</guid>
      <description>&lt;p&gt;As we know, online courses or ebooks are the best resources for learning Frontend Engineer/development. &lt;/p&gt;

&lt;p&gt;Sometimes it's really hard to buy ebooks or courses. Like when I was a student I was mostly trying to figure out where I can find the free resources for learning HTML, CSS, JavaScript.&lt;/p&gt;

&lt;p&gt;There I found MDN, FreeCodeCamp, a few more.&lt;/p&gt;

&lt;p&gt;I will be sharing the resources here in this post and hope they will be helpful.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#free-ebooks"&gt;
  &lt;/a&gt;
  Free Ebooks 📚
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-javascript-garden"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://bonsaiden.github.io/JavaScript-Garden/"&gt;JavaScript Garden&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qhk48W8l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Qg58g37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhk48W8l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Qg58g37.png" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JavaScript Garden is a growing collection of documentation about the most quirky parts of the JavaScript programming language.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-html5-notes-for-professionals-book"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://goalkicker.com/HTML5Book/"&gt;HTML5 Notes for Professionals book&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TEd_DYAh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/D5VUWiP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TEd_DYAh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/D5VUWiP.png" width="880" height="635"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free Programming Books. Disclaimer. This is an uno cial free book created for educational purposes and is.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-odin-project"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.theodinproject.com/home"&gt;Odin Project&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_CrHUsJH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/yyf49hi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_CrHUsJH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/yyf49hi.png" width="880" height="431"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Odin Project empowers aspiring web developers to learn together for free.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-css-animation"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://cssanimation.rocks/"&gt;CSS Animation&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IQSKo6PF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/vFd3mr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IQSKo6PF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/vFd3mr3.png" width="880" height="376"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn CSS Animation with awesome tutorials, video courses and a weekly CSS Animation newsletter.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-javascript-books-collection"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://jsbooks.revolunet.com/"&gt;JavaScript Books Collection &lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jLt-9VGl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/quV1DlS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jLt-9VGl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/quV1DlS.png" width="880" height="542"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JSbooks is a showcase of the bests free ebooks about Javascript. Find here the best publications about your favourite programming language.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-web-visual-effects-with-css3"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://leanpub.com/web-visual-effects-with-css3/read"&gt;Web Visual Effects with CSS3&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jZB2g1xK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/dQInrsz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jZB2g1xK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/dQInrsz.png" width="880" height="585"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a book with examples and solutions to create practical visual effects on the web by using CSS3.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#7-eloquent-javascript"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://eloquentjavascript.net/"&gt;Eloquent JavaScript&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_T4NFaGB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/59g5xfx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_T4NFaGB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/59g5xfx.png" width="880" height="519"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eloquent Javascript 3rd edition is widely considered one of the best books on Javascript. Released at the end of 2018, the book is still touted as the best Javascript book, even in 2020. Eloquent JavaScript is unlike so many of the educational materials out there.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#8-the-magic-of-css"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://adamschwartz.co/magic-of-css/"&gt;The Magic Of CSS&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L3oLSoKz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kOWWCUY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L3oLSoKz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kOWWCUY.png" width="880" height="781"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A CSS course to turn you into a magician. Contribute to adamschwartz/magic-of-css development by creating an account on GitHub.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#9-marksheet"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://marksheet.io/"&gt;MarkSheet&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zcdVDt9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/CN5fjQu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zcdVDt9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/CN5fjQu.png" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This ebook is a step by step guide in which I teach you how to build your own personal webpage from scratch, line by line, with HTML5, CSS3, and even JS.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#10-html-canvas-deep-dive"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://joshondesign.com/p/books/canvasdeepdive/toc.html"&gt; HTML Canvas Deep Dive&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--upd8oYRA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/scx3xfn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--upd8oYRA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/scx3xfn.png" width="880" height="655"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML Canvas Deep Dive is a hands on introduction to Canvas. Code along with the book and play with interactive examples&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#11-a-guide-to-html5-and-css3"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://html5hive.org/free-ebook-a-guide-to-html5-and-css3/"&gt;A Guide to HTML5 and CSS3&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4TAKlMc5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9OcFRhN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4TAKlMc5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9OcFRhN.png" width="880" height="874"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Essential Guide to HTML5 and CSS3 Web Design has been fully revised from its critically acclaimed first edition and updated to include all of the new features and best practices of HTML5 and CSS3.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#12-frontend-mentor"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://www.frontendmentor.io/"&gt;Frontend Mentor&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--admu36_C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/DyjXwS5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--admu36_C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/DyjXwS5.png" width="880" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Improve your front-end skills by building real projects. Solve real-world HTML, CSS and JavaScript challenges whilst working on professional designs.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#free-courses"&gt;
  &lt;/a&gt;
  Free Courses 🆓
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-learn-html5-and-css3-from-scratch"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.youtube.com/watch?v=mU6anWqZJcc&amp;amp;ab_channel=freeCodeCamp.org"&gt;Learn HTML5 and CSS3 From Scratch&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QygSzK9g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/bdWqPxP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QygSzK9g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/bdWqPxP.png" width="880" height="549"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A freecodecamp course on youtube to learn the basics of HTML5 and CSS.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-learn-javascript"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.codecademy.com/learn/introduction-to-javascript"&gt;Learn JavaScript&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UvpM-Xv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/LJCFzfh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UvpM-Xv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/LJCFzfh.png" width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-learning-ecmascript-the-next-generation-of-javascript"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.udemy.com/course/ecmascript2015/"&gt;Learning ECMAScript The Next Generation of Javascript&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bntqQMX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kIeXTih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bntqQMX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kIeXTih.png" width="880" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-learn-to-program-in-javascript-beginner-to-pro"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://www.udemy.com/course/programming-in-javascript/"&gt;Learn to Program in Javascript: Beginner to Pro&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sboDft20--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/fb32EX7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sboDft20--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/fb32EX7.png" width="880" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-build-a-quiz-app-with-html-css-and-javascript"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.udemy.com/course/build-a-quiz-app-with-html-css-and-javascript/"&gt;Build a Quiz App with HTML, CSS, and JavaScript&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gjRRMTcY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/cwGqgkc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gjRRMTcY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/cwGqgkc.png" width="880" height="477"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-advanced-and-object-oriented-javascript-and-es6"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://www.udemy.com/course/advanced-and-object-oriented-javascript/"&gt;Advanced and Object Oriented JavaScript and ES6&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Be0e2PzI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/saAsZiR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Be0e2PzI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/saAsZiR.png" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#7-foundations-of-frontend-web-development"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://www.udemy.com/course/foundations-of-front-end-development/"&gt;Foundations of Front-End Web Development&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZxRkdgRr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/AY9fmgU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZxRkdgRr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/AY9fmgU.png" width="880" height="419"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#8-master-the-basics-of-html5-amp-css3-beginner-web-development"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://www.udemy.com/course/master-the-basics-of-html5-css3-beginner-web-development/"&gt;Master the Basics of HTML5 &amp;amp; CSS3: Beginner Web Development&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gj1bwFyE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/r0twK4k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gj1bwFyE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/r0twK4k.png" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading the article ❤️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/suprabhasupi"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aDe0OdcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/4t25pJE.png" alt="Buy Me A Coffee" width="300" height="96"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        🌟 &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        📚 &lt;a href="https://gum.co/css-pseudo-class-elements"&gt; Ebooks&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        🌟 &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>css</category>
    </item>
    <item>
      <title>Basic Python Concepts</title>
      <author>Ashutosh Mishra</author>
      <pubDate>Fri, 24 Dec 2021 21:28:13 +0000</pubDate>
      <link>https://dev.to/ashutoshmishra/basic-python-concepts-o8d</link>
      <guid>https://dev.to/ashutoshmishra/basic-python-concepts-o8d</guid>
      <description>&lt;p&gt;In this post, we are going to learn about some of the basic concepts of Python which more or less are also found in other programming languages. We'll start from the installation of Python and cover mathematical operations, strings, user input, string operations, variables, and In place operators.&lt;/p&gt;

&lt;p&gt;If you don't know, this blog post and all other future posts in the Python series are part of  &lt;a href="https://www.udemy.com/course/python-masterclass-course/"&gt;this&lt;/a&gt; Udemy course. Do check it out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;Before starting if you don't have Python installed on your computer, install the latest version of &lt;a href="https://www.python.org/downloads/"&gt;Python 3&lt;/a&gt; from their website and a corresponding IDE to code which we'll use for writing big programs, you can either go with &lt;a href="https://code.visualstudio.com/download"&gt;VS Code&lt;/a&gt; or &lt;a href="https://www.jetbrains.com/pycharm/download/#section=windows"&gt;Pycharm&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#our-first-program"&gt;
  &lt;/a&gt;
  Our First Program
&lt;/h2&gt;

&lt;p&gt;We'll start with the basic &lt;em&gt;Hello World&lt;/em&gt; program. So open your Python console and follow the article -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print('Hello World')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Type the above code in the console and hit enter. By now you would have seen the &lt;strong&gt;Hello World&lt;/strong&gt; printed on your console. That's how easy it is to print something on the console in Python. But let's just move ahead because not everything is going to be that easy in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maths-operations"&gt;
  &lt;/a&gt;
  Maths Operations
&lt;/h2&gt;

&lt;p&gt;Python console can also be directly used as a calculator and we can perform most of the common operations which we do on a calculator.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#addition-subtraction-multiplication-and-division"&gt;
  &lt;/a&gt;
  Addition, Subtraction, Multiplication, and Division
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mi"&gt;120&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Type the above code and hit enter and you will see the right answer 200. You can also perform subtraction, multiplication, and division in the console. Copy the code below in your console and see the results.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;50 - 20

30 * 2

12 / 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you're focusing enough, you can see that when we divide certain numbers in Python, we get our result in decimal, just like we got 6.0 in the result of the above division. This is called a Float.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#float"&gt;
  &lt;/a&gt;
  Float
&lt;/h3&gt;

&lt;p&gt;Decimal numbers are known as Float in programming. Float is a number that is not an integer. &lt;br&gt;
Using float with any mathematical expression will always result in float. When dividing 2 numbers, you can avoid getting float as a result by using &lt;em&gt;double slash(//)&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;12 // 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code will give 6 as a result instead of 6.0, it happens because when we use a double slash in a division, Python gives us the quotient of the division.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#zerodivisionerror"&gt;
  &lt;/a&gt;
  ZeroDivisionError
&lt;/h3&gt;

&lt;p&gt;Dividing any number with zero in Python gives divide by zero error. So avoid dividing any number with zero or performing any other calculation which involves division by zero.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exponent"&gt;
  &lt;/a&gt;
  Exponent
&lt;/h3&gt;

&lt;p&gt;Exponent is a number raised to the power of a certain number. In Python, you can do this by using **&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;3 ** 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above expression will raise 2 to the power of 3 and you'll get 9 as the result.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#modulus"&gt;
  &lt;/a&gt;
  Modulus
&lt;/h3&gt;

&lt;p&gt;We already discussed how using double slash you can avoid getting float as a result of division. This happens because double slash gives the quotient of a division as a result.&lt;br&gt;
For Ex: 10//3 = 3&lt;/p&gt;

&lt;p&gt;But what if instead of getting quotient, you want the remainder of the division? We have something called &lt;strong&gt;Modulus&lt;/strong&gt; for this case. The symbol of modulus is percent(%). Let's see it in action below -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;11 % 3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above operation will result in 2 as the answer because that will be the actual result of the above division. This operation is incredibly useful when you want to know whether a certain number is odd or even. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#string"&gt;
  &lt;/a&gt;
  String
&lt;/h2&gt;

&lt;p&gt;Any text written in Python is a string or in other words, you can also say that anything written within quotes whether single('') or double("") is a string. If you type an integer within quotes, it will also be considered as a string, not an integer. &lt;br&gt;
For Ex: 5 is an integer, '5' is a string.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: While writing a string if you want to put an apostrophe somewhere in between, use a backslash(\)&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instead of writing, 'He's a good boy', write, &lt;code&gt;'He\'s a good boy'&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The latter version of the string will save you from error because you already have finished the string in the first 2 letters. According to Python, you started your string from &lt;strong&gt;H&lt;/strong&gt; and finished it at &lt;strong&gt;e&lt;/strong&gt; since you already have used 2 quotes up to that point.&lt;/li&gt;
&lt;li&gt;If you want your string to be printed on multiple lines instead of one, you can use &lt;code&gt;\n&lt;/code&gt; at the point after which you want to start a new line. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#accepting-input-from-the-user"&gt;
  &lt;/a&gt;
  Accepting input from the user
&lt;/h2&gt;

&lt;p&gt;User inputs are very common when building large applications. Consider the example of a &lt;strong&gt;Contacts&lt;/strong&gt; app where the user has to enter the phone number and name to save a contact or a &lt;strong&gt;Chat&lt;/strong&gt; app where users can input words, numbers, emojis, and whatnot. &lt;/p&gt;

&lt;p&gt;In Python, we have a function called &lt;strong&gt;&lt;em&gt;input()&lt;/em&gt;&lt;/strong&gt; that allow users to input numbers, strings, etc in our program.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;input('Please enter a value: ')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The string inside &lt;em&gt;input()&lt;/em&gt; will be displayed to the user when asked for input. You can modify it according to your needs. Whatever value user inputs will be displayed to the console.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#string-operation"&gt;
  &lt;/a&gt;
  String Operation
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#concatenation-operation"&gt;
  &lt;/a&gt;
  Concatenation operation
&lt;/h3&gt;

&lt;p&gt;Concatenation is the action of joining 2 or more strings together. Suppose there is a string called &lt;em&gt;'Hello'&lt;/em&gt; and there is another string called &lt;em&gt;'World'&lt;/em&gt;. When you concatenate these 2 strings, it becomes &lt;em&gt;'HelloWorld'&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'Hello' + 'World'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The plus sign above is the concatenation operator which is used to concatenate strings. If you enter the code right and hit enter, you'll see &lt;code&gt;'HelloWorld'&lt;/code&gt; printed on your console.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You cannot concatenate a string with a number. &lt;/li&gt;
&lt;li&gt;However, you can multiple a string with a certain number to repeat its occurrence. For Ex - &lt;code&gt;'Hello'*3&lt;/code&gt; will result in &lt;code&gt;'HelloHelloHello'&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Again you cannot multiple a string with a string, it will produce error.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#variables"&gt;
  &lt;/a&gt;
  Variables
&lt;/h2&gt;

&lt;p&gt;If you are familiar with Python or any other programming language, you might already know what a variable is. But in case you don't, you can think of it as a container to store data. Variables are common in every programming language and they let us store data types supported in that programming language. In Python, you can store all the supported data types in the variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a = 100
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, a is the variable that we've used to store the value of 100. The equal(=) sign is called an assignment operator whose job is to assign values. Type &lt;code&gt;print(a)&lt;/code&gt; to print the value of variable &lt;strong&gt;a&lt;/strong&gt; in the console.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-place-operators"&gt;
  &lt;/a&gt;
  In place operators
&lt;/h2&gt;

&lt;p&gt;Suppose you're recording your age in a variable and want to update it again this birthday.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;age = 21
age = age + 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, we first stored our age in a variable and then used a method to update the variable which is logical but isn't the best practice because writing the variable name twice in a line just to add a single value to it is not considered a great practice.&lt;/p&gt;

&lt;p&gt;Instead, we have In place operators which help us change the value without repeating the variable name twice in the line. See the code below -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;age+=1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;age+=1&lt;/code&gt; has same effect as &lt;code&gt;age=age+1&lt;/code&gt;. The &lt;code&gt;+=&lt;/code&gt; removes the need to repeat the variable name twice in the line totally.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can also use the subtract and multiplication operator instead of the addition operator to update the subtracted or multiplied value of the variable like &lt;code&gt;age-=2&lt;/code&gt; and &lt;code&gt;age*=4&lt;/code&gt;. The former will reduce the value of the age variable by 2 and the latter will multiply it by 4.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#parting-thoughts"&gt;
  &lt;/a&gt;
  Parting Thoughts
&lt;/h2&gt;

&lt;p&gt;In this article, we learned about maths operations, strings, variables, user input, In place operators, etc., and that marked the end of our &lt;strong&gt;Basic Python Concepts&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;There are thousands of things in a programming language and I don't mean that this article has covered every basic concept of Python but we've surely learned enough to move ahead and learn other topics and in the next article of the series we'll learn about &lt;strong&gt;Control Structures in Python&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Stay tuned.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>CI with Snyk using GitHub Actions</title>
      <author>Ada Cheng</author>
      <pubDate>Fri, 24 Dec 2021 20:53:15 +0000</pubDate>
      <link>https://dev.to/adafycheng/ci-with-snyk-using-github-actions-5f51</link>
      <guid>https://dev.to/adafycheng/ci-with-snyk-using-github-actions-5f51</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;GitHub Actions can be used as a CI tool for building, testing and deploying our code.  With the aid of &lt;a href="https://snyk.io"&gt;Synk&lt;/a&gt;, it can also automate the process of checking vulnerabilities.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Snyk is a developer security platform for securing code, dependencies, containers, and infrastructure as code.&lt;/p&gt;

&lt;p&gt;It can be used in IDE such as IntelliJ, Visual Studio Code and so on as a tool to scan vulnerabilities in the code and librabries.&lt;/p&gt;

&lt;p&gt;It can also be used to secure containers by finding and fixing issues in containers and continuously monitor container images.&lt;/p&gt;

&lt;p&gt;It can also be integrated with CI/CD tool to find and fix issues in application continuously.&lt;/p&gt;

&lt;p&gt;In this article, we will integrate Sync with GitHub Action, a CI tool from GitHub, in order to secure our application continuously.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-action-secrets"&gt;
  &lt;/a&gt;
  Create Action Secrets
&lt;/h2&gt;

&lt;p&gt;It is required to submit Access Tokens to Snyk and Npm Registry for authentication when performing security check and publishing respectively.&lt;/p&gt;

&lt;p&gt;Action Secrets are environment variables that are encrypted.  It is useful to store sensitive information such as access tokens.  Action Secrets can be used in Action Workflow file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nASg3sMw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uf9bk237wxz5w91atct9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nASg3sMw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uf9bk237wxz5w91atct9.png" alt="GitHub Action" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generate-access-token-for-publishing-packages-to-npm-registry"&gt;
  &lt;/a&gt;
  Generate Access Token for publishing packages to npm Registry.
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Login &lt;a href="https://www.npmjs.com"&gt;npm&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click "Access Tokens" on the popup menu shown when the profile image is clicked.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eqeyBdL5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eogvri2tgr9awx18d902.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eqeyBdL5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eogvri2tgr9awx18d902.png" alt="npm Access Token" width="200" height="377"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click the "Generate New Token" button on the "Access Tokens" page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3hbU8NqC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n5cn0yc0a0ym6ysp37bv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3hbU8NqC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n5cn0yc0a0ym6ysp37bv.png" alt="npm Access Token" width="880" height="210"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the "New Access Token" page shown, select "Automation" from the "Select type" list, and click "Generate Token".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aIv_6e2Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vf0mkta8ulthw3nxtp1g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aIv_6e2Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vf0mkta8ulthw3nxtp1g.png" alt="npm Access Token" width="880" height="830"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A new Token should then be generated.  Copy the token for later use.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HMDQuGCm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/krv33b90xjcbrhf15n3r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HMDQuGCm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/krv33b90xjcbrhf15n3r.png" alt="npm Access Token" width="880" height="128"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#generate-auth-token-for-authentication-to-snyk"&gt;
  &lt;/a&gt;
  Generate Auth Token for authentication to Snyk.
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Login &lt;a href="https://snyk.io"&gt;Snyk&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click Account Settings &amp;gt; API Token section.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the KEY field, click "click to show", then select and copy your token.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pr_qgNY2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkt9bgn5elx9rq4ob7h9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pr_qgNY2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkt9bgn5elx9rq4ob7h9.png" alt="Snyk Auth token" width="880" height="221"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#create-action-secrets"&gt;
  &lt;/a&gt;
  Create Action Secrets
&lt;/h3&gt;

&lt;p&gt;Create Actions Secrets NPM_TOKEN and SNYK_TOKEN for access to npm repository and Snyk respectively.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Login &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click the target repository.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select the "Settings" tab.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On the "Settings" page, select "Secrets" on the left navigation menu.  "Action secrets" page should be shown.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click the "New repository secret" button.  A "New secret" page should be shown.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Input "Name" and "Value" of the tokens, and then click the "Add secret" button.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;NPM_TOKEN&lt;/td&gt;
&lt;td&gt;{ Access Token for NPM }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SNYK_TOKEN&lt;/td&gt;
&lt;td&gt;{ Auth Token for Sync }&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nZ9zSDf6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oq2mf3zuzxxoseis8qis.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nZ9zSDf6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oq2mf3zuzxxoseis8qis.png" alt="GitHub Action" width="880" height="502"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#create-a-github-action"&gt;
  &lt;/a&gt;
  Create a GitHub Action.
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Open the target GitHub repository in browser.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on the &lt;em&gt;Actions&lt;/em&gt; tab.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click the link on "set up a workflow yourself".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwyXSTQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ksdfoepgv0re6wlk9t65.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwyXSTQm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ksdfoepgv0re6wlk9t65.png" alt="GitHub Action" width="880" height="200"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An editor should be shown for editing the workflow file &lt;em&gt;main.yml&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--esmqnHnr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fva85bg9u6vlr1nfj2rs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--esmqnHnr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fva85bg9u6vlr1nfj2rs.png" alt="Edit GitHub Action" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#compose-github-action-workflow-file"&gt;
  &lt;/a&gt;
  Compose GitHub Action workflow file.
&lt;/h2&gt;

&lt;p&gt;A basic GitHub Action workflow file consists of 3 secions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;name&lt;/em&gt;&lt;/strong&gt;: Action Name&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;on&lt;/em&gt;&lt;/strong&gt;: How the action will be triggered.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;jobs&lt;/em&gt;&lt;/strong&gt;: Jobs to be performed when the Action is triggered.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Update &lt;strong&gt;&lt;em&gt;name&lt;/em&gt;&lt;/strong&gt; section.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CI Publish, with security check using Snyk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep &lt;strong&gt;&lt;em&gt;on&lt;/em&gt;&lt;/strong&gt; section unchanged.  By default, the action is triggered when a push or a pull request occurs.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Controls when the workflow will run&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# Triggers the workflow on push or pull request events but only for the main branch&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update &lt;strong&gt;&lt;em&gt;jobs&lt;/em&gt;&lt;/strong&gt; section.&lt;/p&gt;

&lt;p&gt;There are 3 jobs that are set up in this Action:&lt;/p&gt;

&lt;p&gt;i. &lt;strong&gt;&lt;em&gt;security&lt;/em&gt;&lt;/strong&gt;: Use Snyk to check for any vulnerability.&lt;/p&gt;

&lt;p&gt;ii. &lt;strong&gt;&lt;em&gt;build&lt;/em&gt;&lt;/strong&gt;: This job is used to build the code.  In this example, we build a Node.js application with various Node versions defined in an array.  This allows us to test the application running on different Node versions in a very easy approach.&lt;/p&gt;

&lt;p&gt;iii. &lt;strong&gt;&lt;em&gt;publish&lt;/em&gt;&lt;/strong&gt;: Publish the package to nmp repository, allowing other developers to download and install the package, simple using the &lt;code&gt;npm insall&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;Here below list the entire workflow file:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# A workflow run is made up of one or more jobs that can run sequentially or in parallel&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;security&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@master&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run Snyk to check for vulnerabilities&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;snyk/actions/node@master&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="s"&gt;SNYK_TOKEN&amp;amp;#58; &amp;amp;#36;&amp;amp;#123;&amp;amp;#123; secrets.SNYK_TOKEN &amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;monitor&lt;/span&gt;

  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;matrix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;node-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;10.x&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;12.x&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;14.x&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;15.x&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Use Node.js &amp;amp;#36;&amp;amp;#123;&amp;amp;#123; matrix.node-version &amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="s"&gt;node-version&amp;amp;#58; &amp;amp;#36;&amp;amp;#123;&amp;amp;#123; matrix.node-version &amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install dependencies&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm ci&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm run build --if-present&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm test&lt;/span&gt;

  &lt;span class="na"&gt;publish&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Use Node.js&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;node-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;15.x'&lt;/span&gt;
          &lt;span class="na"&gt;registry-url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://registry.npmjs.org'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install dependencies&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm ci&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Publish&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm publish&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="s"&gt;NODE_AUTH_TOKEN&amp;amp;#58; &amp;amp;#36;&amp;amp;#123;&amp;amp;#123; secrets.NPM_TOKEN &amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit the workflow file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click "Start Commit" button on the left.&lt;/li&gt;
&lt;li&gt;Input description.  It is better to input the Action Name, since it will be shown in the Action History. &lt;/li&gt;
&lt;li&gt;Click "Commit changes" button.&lt;/li&gt;
&lt;li&gt;Once the "Commit changes" button is clicked, the Action will be triggered to execute.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n8Ng-GI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6925086lrf4adusyzi3j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n8Ng-GI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6925086lrf4adusyzi3j.png" alt="Commit GitHub Action workflow file" width="400" height="468"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#run-the-github-action"&gt;
  &lt;/a&gt;
  Run the GitHub Action
&lt;/h2&gt;

&lt;p&gt;Our GitHub Action action can be triggered when the workflow file is updated, push or pull request occurs.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Once the Action is triggered, the defined jobs will be run.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T3E-zE6o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9so1pc62nean6umjo27w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T3E-zE6o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9so1pc62nean6umjo27w.png" alt="GitHub Action In Progress" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the Action is completed successfully, a green tick will be shown.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uqa5DuUq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lqku11pcuy0h1s9sh6q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uqa5DuUq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lqku11pcuy0h1s9sh6q.png" alt="GitHub Action Completed" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upon completion, check the security job details by clicking the &lt;strong&gt;&lt;em&gt;security&lt;/em&gt;&lt;/strong&gt; link on the summary panel on the left.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hjhlI28Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dyvae3nsgvayzx63dll2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hjhlI28Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dyvae3nsgvayzx63dll2.png" alt="GitHub Action Completed - security job" width="880" height="550"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;security&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
  &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@master&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run Snyk to check for vulnerabilities&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;snyk/actions/node@master&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="s"&gt;SNYK_TOKEN&amp;amp;#58; &amp;amp;#36;&amp;amp;#123;&amp;amp;#123; secrets.SNYK_TOKEN &amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
       &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;monitor&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;With &lt;strong&gt;&lt;em&gt;monitor command&lt;/em&gt;&lt;/strong&gt;, the scan is performed and report is generated, but the process will not be interrupted.  In other words, even if vulnerabilities are found, the job is finished successfully without error and next job will not be interfered and will then start.&lt;/p&gt;

&lt;p&gt;To view the report, open the link stated as "Explore this snapshot at" in the result of "Run Snyk to check for vulnerabilities" section of the security job in a browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NVv4SrC0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m1klhaz6g1xc1x11h6jt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NVv4SrC0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m1klhaz6g1xc1x11h6jt.png" alt="GitHub Action - Snyk Report Link " width="880" height="633"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AyWSIKDc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qlhzp8kvev8838r9ap11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AyWSIKDc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qlhzp8kvev8838r9ap11.png" alt="GitHub Action - Snyk Report" width="880" height="947"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is recommended to use the &lt;strong&gt;&lt;em&gt;monitor command&lt;/em&gt;&lt;/strong&gt; at the beginning to find the vulnerabilities during development stage.  After the vulnerabilities are fixed or ignored, in production stage, we can then set to "synk test" command.  This command will fail the builds when vulnerabilities are found.  In this case, we can decide whether to stop or continue the build for production deployment. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check the build jobs details by clicking the &lt;strong&gt;&lt;em&gt;build&lt;/em&gt;&lt;/strong&gt; link on the summary panel on the left.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ldwQXLh1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j1c1ersb24da75l4kxn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ldwQXLh1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j1c1ersb24da75l4kxn8.png" alt="GitHub Action Completed - build job" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check the publish job details by clicking the &lt;strong&gt;&lt;em&gt;security&lt;/em&gt;&lt;/strong&gt; link on the summary panel on the left.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N9L1tEC8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hamgh548vm01oljw2ei7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N9L1tEC8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hamgh548vm01oljw2ei7.png" alt="GitHub Action Completed - publish job" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check whether the package is published at &lt;a href="https://www.npmjs.com/"&gt;npm repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G6G9_2h0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlcrohsqbm13amd3ygj2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G6G9_2h0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlcrohsqbm13amd3ygj2.png" alt="GitHub Action Completed - publish job" width="880" height="814"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Security vulnerabilities are subject to attack and should be closely monitored.  By applying security scan during CI/CD Integration, our applications can be continuously monitored against security threats.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/adafycheng/reactjs-tabbedpane-component"&gt;Source code in GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/reactjs-tabbedpane-component"&gt;Published component in npm repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions"&gt;Publishing and installing a package with GitHub Actions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.snyk.io/getting-started/snyk-cicd-integration-good-practices"&gt;Snyk CI/CD Integration: good practices&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>react</category>
      <category>node</category>
      <category>devops</category>
      <category>github</category>
    </item>
  </channel>
</rss>
