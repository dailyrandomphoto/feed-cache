<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to configure environment variables in node application</title>
      <author>Himanshu</author>
      <pubDate>Wed, 19 May 2021 07:23:03 +0000</pubDate>
      <link>https://dev.to/hima_khaitan/how-to-configure-environment-variables-in-node-application-4ejg</link>
      <guid>https://dev.to/hima_khaitan/how-to-configure-environment-variables-in-node-application-4ejg</guid>
      <description>&lt;p&gt;While building an application we come across several situations where we need to use several confidential data such as &lt;strong&gt;API keys&lt;/strong&gt;, &lt;strong&gt;Secrets&lt;/strong&gt; and Many More. &lt;em&gt;But is it safe to put this data directly into the Code?&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#well-the-answer-is-no"&gt;
  &lt;/a&gt;
  Well the answer is NO!
&lt;/h5&gt;

&lt;p&gt;For storing such variables we have so called environment variable. You might have come across the term earlier or maybe not.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-environment-variables"&gt;
  &lt;/a&gt;
  What are environment variables?
&lt;/h3&gt;

&lt;p&gt;Those variables whose values are set outside the project and is accessible across whole project is known as &lt;em&gt;Environment Variables.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-the-project"&gt;
  &lt;/a&gt;
  Setting up the Project
&lt;/h3&gt;

&lt;p&gt;For learning the concept of Environment Variables setup the project as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- index.js
- config
    - .env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;After this open the terminal and cd into the root of the project i.e. Folder containing the above files. We will initiate an npm project by writing the following command&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm init -y&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After the command is completed the file directory will look as follows:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- index.js
- config
    - .env
- package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#dotenv"&gt;
  &lt;/a&gt;
  DOTENV
&lt;/h3&gt;

&lt;p&gt;For configuring environment variables we will be using an NPM package called DOTEVN.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---57MYSjX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sykaq3oq18sqe289c9in.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---57MYSjX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sykaq3oq18sqe289c9in.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#installing-the-package"&gt;
  &lt;/a&gt;
  Installing the Package
&lt;/h4&gt;

&lt;p&gt;Use &lt;code&gt;npm install dotenv&lt;/code&gt; or &lt;code&gt;npm i dotenv&lt;/code&gt; to install the package.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#package-in-use"&gt;
  &lt;/a&gt;
  Package in Use
&lt;/h4&gt;

&lt;p&gt;Now you can configure this package in which ever file you like but it is suggested to configure it as soon as possible.&lt;/p&gt;

&lt;p&gt;This is so because if you are using the environment variable before configuration of the package then your app may crash or work unexpected.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./config/.env&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You &lt;code&gt;index.js&lt;/code&gt; should look as shown above. The &lt;code&gt;path&lt;/code&gt;  property should be specified with respect to file location you are writing the require statement.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/hima_khaitan" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6pp9-sSA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HqJ6F18c--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/629989/94e5c19e-ce31-4a7d-a20b-603def943e7d.jpeg" alt="hima_khaitan image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/hima_khaitan/i-built-this-dark-ui-25ej" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I Built this Dark UI&lt;/h2&gt;
      &lt;h3&gt;Himanshu ・ May 15 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#uiweekly&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#setting-up-the-env-file"&gt;
  &lt;/a&gt;
  Setting Up the .ENV file
&lt;/h4&gt;

&lt;p&gt;IT is essential to write variable name in all capital letters and the value for the variable should be written in plane text without any quotation marks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;VARIABLE_NAME=VALUE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;For eg: You want to set up your &lt;code&gt;PORT&lt;/code&gt; at &lt;code&gt;5000&lt;/code&gt; or Apikey to "helloworld" then the code in .env file will be&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;PORT=3000
API_KEY=helloworld
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#accessing-the-variable-value"&gt;
  &lt;/a&gt;
  Accessing the Variable Value
&lt;/h4&gt;

&lt;p&gt;The environment variables are set in env object as a property of process parameter.&lt;/p&gt;

&lt;p&gt;Hence The variable can be accessed through&lt;/p&gt;

&lt;p&gt;&lt;code&gt;process.env.VARIABLE_NAME&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#predefined-environment-variables"&gt;
  &lt;/a&gt;
  Predefined Environment Variables
&lt;/h4&gt;

&lt;p&gt;The system has some pre-defined environment variables which you can access through the same method i.e. &lt;code&gt;process.env.VARIABLE_NAME&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To know the predefined environment variable try console logging the whole environment object i.e.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#help"&gt;
  &lt;/a&gt;
  HELP
&lt;/h4&gt;

&lt;p&gt;I would highly appreciate if you leave a feedback, criticism or suggestion of any kind.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/himakhaitan"&gt;
        himakhaitan
      &lt;/a&gt; / &lt;a href="https://github.com/himakhaitan/himakhaitan"&gt;
        himakhaitan
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/home.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jMPN0xw4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/home.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
I'm a computer engineering student 💻 from India who loves to code.&lt;/h4&gt;
&lt;p&gt;
  &lt;a href="https://raw.githubusercontent.com/himakhaitan/himakhaitan/main/readme.md/mailto:himanshukhaitan10@gmail.com"&gt;&lt;img height="25" src="https://camo.githubusercontent.com/36e8ddc2cc525629d5b25538fbd4a1ac43498b4dd3093b46eaddc98637a22210/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f676d61696c2d6331343433383f267374796c653d666f722d7468652d6261646765266c6f676f3d676d61696c266c6f676f436f6c6f723d7768697465"&gt;&lt;/a&gt;
  &lt;a href="https://www.linkedin.com/in/himanshu-khaitan-431666204/" rel="nofollow"&gt;&lt;img height="25" src="https://camo.githubusercontent.com/6549bff183e235def27bedde5b2a47ac1d2b42b0c6e9bf9e10acdd6353a7b1ea/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4c696e6b6564496e2d3065373661383f7374796c653d666f722d7468652d6261646765266c6f676f3d4c696e6b6564696e266c6f676f436f6c6f723d7768697465"&gt;&lt;/a&gt;
  &lt;a href="https://raw.githubusercontent.com/himakhaitan/himakhaitan/main/readme.md/"&gt;&lt;img height="25" src="https://camo.githubusercontent.com/89ca143c1091e0f460e558df68893c35cda1de1bc7981246558a5d0f6ba3fbb6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f576562736974652d3362353939383f7374796c653d666f722d7468652d6261646765266c6f676f3d676f6f676c652d6368726f6d65266c6f676f436f6c6f723d7768697465"&gt;&lt;/a&gt;
  &lt;a href="https://twitter.com/HimanshuKhaita4" rel="nofollow"&gt;&lt;img height="25" src="https://camo.githubusercontent.com/e2737a713cf7c063499068511be507982999e2ce6d8f4f741e41d459936ecbe9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d547769747465722d3030616365653f7374796c653d666f722d7468652d6261646765266c6f676f3d54776974746572266c6f676f436f6c6f723d7768697465"&gt;&lt;/a&gt;
  &lt;a href="https://dev.to/hima_khaitan" rel="nofollow"&gt;&lt;img height="27" src="https://camo.githubusercontent.com/53ede7ea380d03fa347ad4061200210e486497ce92e000e79cfe1de3534118b7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4445562e544f2d2532333041304130412e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d6465762d646f742d746f266c6f676f436f6c6f723d7768697465"&gt;&lt;/a&gt;
  &lt;a href="https://www.instagram.com/hima_khaitan/" rel="nofollow"&gt;&lt;img height="25" src="https://camo.githubusercontent.com/c42b43b4d5217e26fcc4e45e003e50004adcbeadd0cc8d855321d9c3d0ff2e39/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d496e7374616772616d2d3030383863633f7374796c653d666f722d7468652d6261646765266c6f676f3d496e7374616772616d266c6f676f436f6c6f723d7768697465"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;An avid and passionate coder specializing in different languages. I love to build and design websites which the end user would enjoy using while keeping the website performant and the code clean. Up for freelance web development work and collaborating on exciting &lt;b&gt;Open Source &amp;amp; Personal&lt;/b&gt; projects.&lt;/p&gt;

&lt;h2&gt;
⚡ Stuff I Know&lt;/h2&gt;
&lt;br&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0c3a16a22ae058cfe38a06dc9ea16404cf006409262f547c9ccfa3ec8b30f71e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d48544d4c352d4533344632363f7374796c653d666c61742d737175617265266c6f676f3d68746d6c35266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/0c3a16a22ae058cfe38a06dc9ea16404cf006409262f547c9ccfa3ec8b30f71e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d48544d4c352d4533344632363f7374796c653d666c61742d737175617265266c6f676f3d68746d6c35266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/2435c2a64789b8a71c701a1a593b4a6e6869789bfb0626e515dc2a6b6dffa6c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d435353332d3135373242363f7374796c653d666c61742d737175617265266c6f676f3d63737333"&gt;&lt;img src="https://camo.githubusercontent.com/2435c2a64789b8a71c701a1a593b4a6e6869789bfb0626e515dc2a6b6dffa6c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d435353332d3135373242363f7374796c653d666c61742d737175617265266c6f676f3d63737333" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a932e056e553a5efb2f24e78a18c8e18da8f401d0bf074697f6574281b111e2b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d534153532d4343363639393f7374796c653d666c61742d737175617265266c6f676f3d73617373266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/a932e056e553a5efb2f24e78a18c8e18da8f401d0bf074697f6574281b111e2b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d534153532d4343363639393f7374796c653d666c61742d737175617265266c6f676f3d73617373266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e56d586bf373ad33a4e8c7101246d54d5edc0fb52b87d309b899ce4818bd6086/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d426f6f7473747261702d3536334437433f7374796c653d666c61742d737175617265266c6f676f3d626f6f747374726170"&gt;&lt;img src="https://camo.githubusercontent.com/e56d586bf373ad33a4e8c7101246d54d5edc0fb52b87d309b899ce4818bd6086/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d426f6f7473747261702d3536334437433f7374796c653d666c61742d737175617265266c6f676f3d626f6f747374726170" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/713265309efc25edcf85261d9812b9c6df09528cdaa2c468b6d5e4f9a2440c96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4a6176615363726970742d4637444631453f7374796c653d666c61742d737175617265266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d626c61636b"&gt;&lt;img src="https://camo.githubusercontent.com/713265309efc25edcf85261d9812b9c6df09528cdaa2c468b6d5e4f9a2440c96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4a6176615363726970742d4637444631453f7374796c653d666c61742d737175617265266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d626c61636b" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/dd2b3c7a38881ac6bb7a14e5720793e06ffa08365342cf67ededb41185138db3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4e6f64656a732d3333393933333f7374796c653d666c61742d737175617265266c6f676f3d4e6f64652e6a73266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/dd2b3c7a38881ac6bb7a14e5720793e06ffa08365342cf67ededb41185138db3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4e6f64656a732d3333393933333f7374796c653d666c61742d737175617265266c6f676f3d4e6f64652e6a73266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cf392c4915ac247942ce57d8691e3cb17ed7531eaa92c3dcafb6185b86a38e11/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d457870726573732d626c61636b3f7374796c653d666c61742d737175617265266c6f676f3d65787072657373266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/cf392c4915ac247942ce57d8691e3cb17ed7531eaa92c3dcafb6185b86a38e11/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d457870726573732d626c61636b3f7374796c653d666c61742d737175617265266c6f676f3d65787072657373266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/873577be097bc1124ebf1ecad4ca8182f9116778576e1c18c62dfef5dec94234/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d506f73746d616e2d4632344531453f7374796c653d666c61742d737175617265266c6f676f3d506f73746d616e266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/873577be097bc1124ebf1ecad4ca8182f9116778576e1c18c62dfef5dec94234/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d506f73746d616e2d4632344531453f7374796c653d666c61742d737175617265266c6f676f3d506f73746d616e266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9c2aec1092e6af5636e9b56c49603d067594f426721f57a1a20833b24653af06/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d52656163742d3631444146423f7374796c653d666c61742d737175617265266c6f676f3d7265616374266c6f676f436f6c6f723d626c61636b"&gt;&lt;img src="https://camo.githubusercontent.com/9c2aec1092e6af5636e9b56c49603d067594f426721f57a1a20833b24653af06/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d52656163742d3631444146423f7374796c653d666c61742d737175617265266c6f676f3d7265616374266c6f676f436f6c6f723d626c61636b" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/7d1185f225f6a50bec4b592550f74887647c5acf33d02324b51294e0674487ce/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4d6f6e676f44422d3437413234383f7374796c653d666c61742d737175617265266c6f676f3d6d6f6e676f6462266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/7d1185f225f6a50bec4b592550f74887647c5acf33d02324b51294e0674487ce/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4d6f6e676f44422d3437413234383f7374796c653d666c61742d737175617265266c6f676f3d6d6f6e676f6462266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8f43425702111cf74b8533f47f540e0800740979cdd6a0d59fafef11d1287cc1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d432b2b2d3030353939433f7374796c653d666c61742d737175617265266c6f676f3d63"&gt;&lt;img src="https://camo.githubusercontent.com/8f43425702111cf74b8533f47f540e0800740979cdd6a0d59fafef11d1287cc1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d432b2b2d3030353939433f7374796c653d666c61742d737175617265266c6f676f3d63" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/291f70f35f0735830b90c4f80906fbc3b818c72195817e8b87bd0458923f0888/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d432d4637444631453f7374796c653d666c61742d737175617265266c6f676f3d43266c6f676f436f6c6f723d626c61636b"&gt;&lt;img src="https://camo.githubusercontent.com/291f70f35f0735830b90c4f80906fbc3b818c72195817e8b87bd0458923f0888/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d432d4637444631453f7374796c653d666c61742d737175617265266c6f676f3d43266c6f676f436f6c6f723d626c61636b" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/edd3031a0956c904634f9a394267a6ba61e9a0bb95c9512a1fbc0725b4014d03/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4769742d626c61636b3f7374796c653d666c61742d737175617265266c6f676f3d676974"&gt;&lt;img src="https://camo.githubusercontent.com/edd3031a0956c904634f9a394267a6ba61e9a0bb95c9512a1fbc0725b4014d03/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4769742d626c61636b3f7374796c653d666c61742d737175617265266c6f676f3d676974" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/85dc47a56a4e73ae7b6e64b3b4416785497e74219ae179ae8faaaca10d5a78d9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4769744875622d3138313731373f7374796c653d666c61742d737175617265266c6f676f3d676974687562"&gt;&lt;img src="https://camo.githubusercontent.com/85dc47a56a4e73ae7b6e64b3b4416785497e74219ae179ae8faaaca10d5a78d9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4769744875622d3138313731373f7374796c653d666c61742d737175617265266c6f676f3d676974687562" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/98cab04b1fbe9d67fc8a05c663eea1c032c955cdf883e8e5e613372a239b658e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4c696e75782d626c61636b3f7374796c653d666c61742d737175617265266c6f676f3d4c696e7578"&gt;&lt;img src="https://camo.githubusercontent.com/98cab04b1fbe9d67fc8a05c663eea1c032c955cdf883e8e5e613372a239b658e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4c696e75782d626c61636b3f7374796c653d666c61742d737175617265266c6f676f3d4c696e7578" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/118db644beb6a0a51235005c7050e02759203dd52f820f1c3483e2928edcc01e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4865726f6b752d3433303039383f7374796c653d666c61742d737175617265266c6f676f3d6865726f6b75"&gt;&lt;img src="https://camo.githubusercontent.com/118db644beb6a0a51235005c7050e02759203dd52f820f1c3483e2928edcc01e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4865726f6b752d3433303039383f7374796c653d666c61742d737175617265266c6f676f3d6865726f6b75" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0a4576d7e83fb17c1b5f663e0174dd49303ea9c98fb4bf8f8cd31ab2d8b50a07/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4669676d612d4632344531453f7374796c653d666c61742d737175617265266c6f676f3d6669676d61266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/0a4576d7e83fb17c1b5f663e0174dd49303ea9c98fb4bf8f8cd31ab2d8b50a07/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4669676d612d4632344531453f7374796c653d666c61742d737175617265266c6f676f3d6669676d61266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a2ff5e58dab990a743c49ba48f8f2e09cb6c50b3f76fa589b3f636c1362ec9e2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d43616e76612d3230633463623f7374796c653d666c61742d737175617265266c6f676f3d63616e7661266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/a2ff5e58dab990a743c49ba48f8f2e09cb6c50b3f76fa589b3f636c1362ec9e2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d43616e76612d3230633463623f7374796c653d666c61742d737175617265266c6f676f3d63616e7661266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
🤔 Stuff To Explore&lt;/h2&gt;
&lt;br&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/b350ea89143d830fd3bec1143820119897deec9fb163e911f6a547781cfcdbc0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4e6578742e6a732d3030303030303f7374796c653d666c61742d737175617265266c6f676f3d6e6578742e6a73"&gt;&lt;img src="https://camo.githubusercontent.com/b350ea89143d830fd3bec1143820119897deec9fb163e911f6a547781cfcdbc0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4e6578742e6a732d3030303030303f7374796c653d666c61742d737175617265266c6f676f3d6e6578742e6a73" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4acedb76895407cf253a680267c9b105d2d3a858926620ce510c393f2e797425/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d416e67756c61722d4531303039383f7374796c653d666c61742d737175617265266c6f676f3d616e67756c6172"&gt;&lt;img src="https://camo.githubusercontent.com/4acedb76895407cf253a680267c9b105d2d3a858926620ce510c393f2e797425/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d416e67756c61722d4531303039383f7374796c653d666c61742d737175617265266c6f676f3d616e67756c6172" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/823d7d6a4602de45556e3858fdbfada1c4aaa92c3a080d6a795582ea748e4706/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d5048502d3839393362653f7374796c653d666c61742d737175617265266c6f676f3d706870266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/823d7d6a4602de45556e3858fdbfada1c4aaa92c3a080d6a795582ea748e4706/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d5048502d3839393362653f7374796c653d666c61742d737175617265266c6f676f3d706870266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/214dc071bf895a473ecc10774289b2bb9f760377c12e298d198574eb821a9313/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4c61726176656c2d6238336235653f7374796c653d666c61742d737175617265266c6f676f3d4c61726176656c266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/214dc071bf895a473ecc10774289b2bb9f760377c12e298d198574eb821a9313/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4c61726176656c2d6238336235653f7374796c653d666c61742d737175617265266c6f676f3d4c61726176656c266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/47be33b89e292483b3e1dd7c354fdf6f1199e6d301fdf65c61dc30a238210787/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d42756c6d612d3030443142323f7374796c653d666c61742d737175617265266c6f676f3d62756c6d61266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/47be33b89e292483b3e1dd7c354fdf6f1199e6d301fdf65c61dc30a238210787/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d42756c6d612d3030443142323f7374796c653d666c61742d737175617265266c6f676f3d62756c6d61266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/50034d9c1abf2cf2d7e8e3205a20c309ee5a8507c5d4b3dfab33bd83d71bf66b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d5675652e6a732d3446433038443f7374796c653d666c61742d737175617265266c6f676f3d7675652e6a73266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/50034d9c1abf2cf2d7e8e3205a20c309ee5a8507c5d4b3dfab33bd83d71bf66b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d5675652e6a732d3446433038443f7374796c653d666c61742d737175617265266c6f676f3d7675652e6a73266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4a3926686f11b267c1300861aee873e92f80717d44028bb67cc7677cd2cecc28/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4d6174657269616c55492d3030383143423f7374796c653d666c61742d737175617265266c6f676f3d6d6174657269616c2d7569"&gt;&lt;img src="https://camo.githubusercontent.com/4a3926686f11b267c1300861aee873e92f80717d44028bb67cc7677cd2cecc28/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4d6174657269616c55492d3030383143423f7374796c653d666c61742d737175617265266c6f676f3d6d6174657269616c2d7569" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8c47a87a67476aa542fe4b9070696f07959083359bd6d4db8ecd9c8ed95463ed/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d466c75747465722d3030303030303f7374796c653d666c61742d737175617265266c6f676f3d666c7574746572"&gt;&lt;img src="https://camo.githubusercontent.com/8c47a87a67476aa542fe4b9070696f07959083359bd6d4db8ecd9c8ed95463ed/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d466c75747465722d3030303030303f7374796c653d666c61742d737175617265266c6f676f3d666c7574746572" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/fb7d886067c48addbfdf1e6f5409014b56a929ee7ecbc1d2251747c81f7d8d11/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4b6f746c696e2d4637444631453f7374796c653d666c61742d737175617265266c6f676f3d6b6f746c696e266c6f676f436f6c6f723d626c61636b"&gt;&lt;img src="https://camo.githubusercontent.com/fb7d886067c48addbfdf1e6f5409014b56a929ee7ecbc1d2251747c81f7d8d11/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4b6f746c696e2d4637444631453f7374796c653d666c61742d737175617265266c6f676f3d6b6f746c696e266c6f676f436f6c6f723d626c61636b" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/7c47c0d734cdcb66a9b86d4abed131865b3a90d920fb9c1d915210e89081eb73/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d507974686f6e2d3337373641423f7374796c653d666c61742d737175617265266c6f676f3d507974686f6e266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/7c47c0d734cdcb66a9b86d4abed131865b3a90d920fb9c1d915210e89081eb73/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d507974686f6e2d3337373641423f7374796c653d666c61742d737175617265266c6f676f3d507974686f6e266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/13855be443a6264cfa009aed0d16da81242ae41ec05ee5a648d774de3cb4b389/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d53776966742d6630386135643f7374796c653d666c61742d737175617265266c6f676f3d7377696674266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/13855be443a6264cfa009aed0d16da81242ae41ec05ee5a648d774de3cb4b389/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d53776966742d6630386135643f7374796c653d666c61742d737175617265266c6f676f3d7377696674266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/28d236158411ab8db013dd219b09cd8dafb68df4e08b27de5592cbbcdbf5bd50/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d446a616e676f2d3039324532303f7374796c653d666c61742d737175617265266c6f676f3d446a616e676f"&gt;&lt;img src="https://camo.githubusercontent.com/28d236158411ab8db013dd219b09cd8dafb68df4e08b27de5592cbbcdbf5bd50/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d446a616e676f2d3039324532303f7374796c653d666c61742d737175617265266c6f676f3d446a616e676f" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1c0bfddb693ac787e75dc83730c34e04d52abcb46acefd0c7459e7533fa215fc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4a6176612d4533344138363f7374796c653d666c61742d737175617265266c6f676f3d6a617661"&gt;&lt;img src="https://camo.githubusercontent.com/1c0bfddb693ac787e75dc83730c34e04d52abcb46acefd0c7459e7533fa215fc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4a6176612d4533344138363f7374796c653d666c61742d737175617265266c6f676f3d6a617661" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d60afb008bc0bcde7ea8720637928cb02c0f9a6d795dad7382f688a17e7515de/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d547970655363726970742d3030374143433f7374796c653d666c61742d737175617265266c6f676f3d74797065736372697074266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/d60afb008bc0bcde7ea8720637928cb02c0f9a6d795dad7382f688a17e7515de/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d547970655363726970742d3030374143433f7374796c653d666c61742d737175617265266c6f676f3d74797065736372697074266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/77bd5e6a17071b0a508f9815bfff782af2020ea1d4b4b26d253ec61ac6be4b14/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d506f737467726553514c2d3333363739313f7374796c653d666c61742d737175617265266c6f676f3d706f737467726573716c"&gt;&lt;img src="https://camo.githubusercontent.com/77bd5e6a17071b0a508f9815bfff782af2020ea1d4b4b26d253ec61ac6be4b14/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d506f737467726553514c2d3333363739313f7374796c653d666c61742d737175617265266c6f676f3d706f737467726573716c" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/7a9ec9434b5ef9b957fd1ede730b21226fbf5acb82b4f6d96160de8e2f04057f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d52656475782d3736344142433f7374796c653d666c61742d737175617265266c6f676f3d7265647578"&gt;&lt;img src="https://camo.githubusercontent.com/7a9ec9434b5ef9b957fd1ede730b21226fbf5acb82b4f6d96160de8e2f04057f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d52656475782d3736344142433f7374796c653d666c61742d737175617265266c6f676f3d7265647578" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1c935f97f2c23496e933634923b8a00e82a3421cd78b753972d739fea8675ea6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4772617068514c2d4531303039383f7374796c653d666c61742d737175617265266c6f676f3d6772617068716c"&gt;&lt;img src="https://camo.githubusercontent.com/1c935f97f2c23496e933634923b8a00e82a3421cd78b753972d739fea8675ea6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4772617068514c2d4531303039383f7374796c653d666c61742d737175617265266c6f676f3d6772617068716c" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3246e583710ae2d6acae05321720158a75b7a0d1148ace995f8957061dc5bb7d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4761747362792d3636333339393f7374796c653d666c61742d737175617265266c6f676f3d676174736279"&gt;&lt;img src="https://camo.githubusercontent.com/3246e583710ae2d6acae05321720158a75b7a0d1148ace995f8957061dc5bb7d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4761747362792d3636333339393f7374796c653d666c61742d737175617265266c6f676f3d676174736279" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/06907b5f170a45a8f7beeae190ef6f9f3c102ab653078d81b97016a8120cdc93/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d476974687562416374696f6e732d3230383846463f7374796c653d666c61742d737175617265266c6f676f3d6769746875622d616374696f6e73266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/06907b5f170a45a8f7beeae190ef6f9f3c102ab653078d81b97016a8120cdc93/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d476974687562416374696f6e732d3230383846463f7374796c653d666c61742d737175617265266c6f676f3d6769746875622d616374696f6e73266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/54e5f6a0376e1ccf9f8d3a9903fd60225f60a0e6495ea5fff47fb103473d3a54/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4157532d3233324633453f7374796c653d666c61742d737175617265266c6f676f3d616d617a6f6e2d617773"&gt;&lt;img src="https://camo.githubusercontent.com/54e5f6a0376e1ccf9f8d3a9903fd60225f60a0e6495ea5fff47fb103473d3a54/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4157532d3233324633453f7374796c653d666c61742d737175617265266c6f676f3d616d617a6f6e2d617773" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/994f4f1f9cf771cf63f7117720af5cebe66cf7d9851abfc05ad402fad2f9ee74/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d5461696c77696e644353532d3338423241433f7374796c653d666c61742d737175617265266c6f676f3d7461696c77696e642d637373266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/994f4f1f9cf771cf63f7117720af5cebe66cf7d9851abfc05ad402fad2f9ee74/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d5461696c77696e644353532d3338423241433f7374796c653d666c61742d737175617265266c6f676f3d7461696c77696e642d637373266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e0147f0edff52ce51a11bd63ff02ed510dce76d5cf2b86c24384463ab0318a6e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4a6573742d4332313332353f7374796c653d666c61742d737175617265266c6f676f3d6a657374266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/e0147f0edff52ce51a11bd63ff02ed510dce76d5cf2b86c24384463ab0318a6e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4a6573742d4332313332353f7374796c653d666c61742d737175617265266c6f676f3d6a657374266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a0d66e7483e8410695dea829855b50855d172c0a3b50ddc842582184250413fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d52656163744e61746976652d3631444146423f7374796c653d666c61742d737175617265266c6f676f3d7265616374266c6f676f436f6c6f723d626c61636b"&gt;&lt;img src="https://camo.githubusercontent.com/a0d66e7483e8410695dea829855b50855d172c0a3b50ddc842582184250413fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d52656163744e61746976652d3631444146423f7374796c653d666c61742d737175617265266c6f676f3d7265616374266c6f676f436f6c6f723d626c61636b" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e471b1d43105aa760b93e1f61b8c78be6f4364b15ae697a4e212d661bb81280c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4672616d65724d6f74696f6e2d3030353546463f7374796c653d666c61742d737175617265266c6f676f3d6672616d6572266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/e471b1d43105aa760b93e1f61b8c78be6f4364b15ae697a4e212d661bb81280c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4672616d65724d6f74696f6e2d3030353546463f7374796c653d666c61742d737175617265266c6f676f3d6672616d6572266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5fa84f7f0b6497e78c2fbabba7155b6d87816b1fa0b2e8a1759991afafd7adaf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d46697265626173652d4646434132383f7374796c653d666c61742d737175617265266c6f676f3d6669726562617365266c6f676f436f6c6f723d626c61636b"&gt;&lt;img src="https://camo.githubusercontent.com/5fa84f7f0b6497e78c2fbabba7155b6d87816b1fa0b2e8a1759991afafd7adaf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d46697265626173652d4646434132383f7374796c653d666c61742d737175617265266c6f676f3d6669726562617365266c6f676f436f6c6f723d626c61636b" height="20"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4eade77f6242a74645c408f1cc48b4c05f3c7c8a74d0bf15c2a1e259e4d357d9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4d7953514c2d3434373941313f7374796c653d666c61742d737175617265266c6f676f3d6d7973716c266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/4eade77f6242a74645c408f1cc48b4c05f3c7c8a74d0bf15c2a1e259e4d357d9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4d7953514c2d3434373941313f7374796c653d666c61742d737175617265266c6f676f3d6d7973716c266c6f676f436f6c6f723d7768697465" height="20"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5cd0e432748fe6fadd1080baf5b3d53da9b53afbe033de40b5b7d3c019c3b615/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d446172742d3030303030303f7374796c653d666c61742d737175617265266c6f676f3d64617274"&gt;&lt;img src="https://camo.githubusercontent.com/5cd0e432748fe6fadd1080baf5b3d53da9b53afbe033de40b5b7d3c019c3b615/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d446172742d3030303030303f7374796c653d666c61742d737175617265266c6f676f3d64617274" height="20"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/ce7b9188f079294587c7bcb5e720bd2a54a4a393913c48c78c6a1c939fcd93a0/68747470733a2f2f6769746875622d726561646d652d73747265616b2d73746174732e6865726f6b756170702e636f6d3f757365723d68696d616b68616974616e267468656d653d746f6b796f6e6967687426686964655f626f726465723d7472756526666972653d444432373237"&gt;&lt;img src="https://camo.githubusercontent.com/ce7b9188f079294587c7bcb5e720bd2a54a4a393913c48c78c6a1c939fcd93a0/68747470733a2f2f6769746875622d726561646d652d73747265616b2d73746174732e6865726f6b756170702e636f6d3f757365723d68696d616b68616974616e267468656d653d746f6b796f6e6967687426686964655f626f726465723d7472756526666972653d444432373237"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h6&gt;
Happily turning coffee into code!✅
&lt;/h6&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/himakhaitan/himakhaitan"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you're interested in contributing, the projects is open-source and I would appreciate any sort of help. Otherwise, you can share it or star the repo, if you want to of course.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>showdev</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>TedX talk for Developer</title>
      <author>Vanshika Pandey</author>
      <pubDate>Wed, 19 May 2021 06:37:34 +0000</pubDate>
      <link>https://dev.to/vanshika3018/tedx-talk-for-developer-ai3</link>
      <guid>https://dev.to/vanshika3018/tedx-talk-for-developer-ai3</guid>
      <description>&lt;p&gt;A delightful way to teach kids about computers | Linda Liukas&lt;/p&gt;

&lt;p&gt;PC codes is the following all inclusive language, and its syntax will be restricted simply by the minds of the up and coming age of developers. Linda Liukas is assisting with teaching critical thinking kids, urging them to see PCs not as mechanical, exhausting and confounded however as bright, expressive machines intended to be dabbled with.&lt;/p&gt;

&lt;p&gt;Thomas Suarez | 12 Year Old Developer (2012)&lt;/p&gt;

&lt;p&gt;Most 12-year-olds love playing videogames - Thomas Suarez showed himself how to make them. In the wake of creating iPhone applications like "Bustin Jeiber," a whack-a-mole game, he is currently utilizing his abilities to help different children become engineers&lt;/p&gt;

&lt;p&gt;Elon Musk | The future we're building&lt;/p&gt;

&lt;p&gt;Elon Musk talks about his new task burrowing burrows under LA, the most recent from Tesla and SpaceX and his inspiration for building a future on Mars in discussion with TED's Head Curator, Chris Anderson.&lt;/p&gt;

&lt;p&gt;Inside the mind of a master procrastinator | Tim Urban&lt;/p&gt;

&lt;p&gt;Tim Urban realizes that lingering doesn't bode well, however he's always been unable to shake his propensity for holding up until the last moment to complete things.&lt;/p&gt;

&lt;p&gt;The mind behind Linux&lt;/p&gt;

&lt;p&gt;Linus Torvalds changed innovation twice — first with the Linux kernel, which helps power the Internet, and again with Git, the source code the executives framework utilized by designers around the world. In an uncommon meeting with TED Curator Chris Anderson, Torvalds talks about with astounding receptiveness the character characteristics that incited his exceptional way of thinking of work, designing and life.&lt;/p&gt;

&lt;p&gt;How algorithms shape our world - Kevin Slavin&lt;/p&gt;

&lt;p&gt;Kevin Slavin contends that we're living in a world intended for - and progressively constrained by - algorithms. In this arresting talk from TEDGlobal, he shows how these intricate PC programs decide surveillance strategies, stock costs, film contents, and design. Slavin additionally cautions that we are composing code we can't comprehend with suggestions we can't handle.&lt;/p&gt;

&lt;p&gt;How a handful of tech companies control billions of minds every day | Tristan Harris&lt;/p&gt;

&lt;p&gt;A small bunch of individuals working at a modest bunch of tech organizations steer the contemplation of billions of individuals consistently, says design thinker Tristan Harris. From Facebook notices to Snapstreaks to YouTube autoplays, they're all going after a certain something: your consideration. Harris shares how these organizations go after our brain science for their own benefit and requires a plan renaissance wherein our tech rather urges us to experience the timetable we need.&lt;/p&gt;

&lt;p&gt;How to Get Your Brain to Focus | Chris Bailey | TEDxManchester&lt;/p&gt;

&lt;p&gt;So how would we tackle our thoughtfulness regarding center further, get occupied less, and surprisingly become more inventive? Chris Bailey, writer of the new book Hyperfocus, discusses how our capacity to center is the way to profitability, innovativeness, and carrying on with a significant life.&lt;/p&gt;

&lt;p&gt;😎Thanks For Reading | Happy Coding⚡&lt;/p&gt;

&lt;p&gt;Article by Dev Write Ups&lt;/p&gt;

</description>
    </item>
    <item>
      <title>5 Ways to Promote Your YouTube Channel For More Views</title>
      <author>Amywhite-design</author>
      <pubDate>Wed, 19 May 2021 06:37:02 +0000</pubDate>
      <link>https://dev.to/amywhitedesign/5-ways-to-promote-your-youtube-channel-for-more-views-2ahb</link>
      <guid>https://dev.to/amywhitedesign/5-ways-to-promote-your-youtube-channel-for-more-views-2ahb</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. Customize Your Thumbnails&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Creating custom thumbnails is one of the simplest yet most effective ways to promote your YouTube channel.&lt;/p&gt;

&lt;p&gt;Consider your title and thumbnail as a one-two punch to outrage a viewer's interest.&lt;/p&gt;

&lt;p&gt;YouTube automatically grabs a screenshot from any given video and uses it as the thumbnail. Unfortunately, the image it captures is occasionally a hazy photograph of you adjusting the camera or a transition.&lt;/p&gt;

&lt;p&gt;Making your own thumbnails by using &lt;a href="https://photoadking.com/design/youtube-thumbnail/" rel="nofollow noreferrer"&gt; thumbnail maker&lt;/a&gt; not only makes your movies look more appealing at a glance, but it also conveys a sense of professionalism. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LSCXAwqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jnz2p6zdpmoded5j5l80.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LSCXAwqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jnz2p6zdpmoded5j5l80.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Run a Contest or Giveaway&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A giveaway is something that YouTube subscribers love. Create a YouTube contest or giveaway to encourage people to subscribe to and interact with your channel.&lt;/p&gt;

&lt;p&gt;To join your contests, ask people to like your video, make a comment, and subscribe to your channel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Create Playlists to Organize Your YouTube Content&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The more videos you make, the more difficult it is for visitors to find their way around your channel.&lt;/p&gt;

&lt;p&gt;That is why playlists are so valuable. Playlists not only help you to manage your channel by categorizing your videos, but they also appeal to your viewers' need to binge.&lt;/p&gt;

&lt;p&gt;Beardbrand's grooming channel, for example, updates every day and so contains hundreds of videos covering a wide range of themes. The playlists on the channel allow subscribers to find relevant information without having to search for it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R3Q6LXvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r92vdfxrbywl3k78blp4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R3Q6LXvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r92vdfxrbywl3k78blp4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Give Live Streaming a Try&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Live video is one of the most popular social media fads, and it isn't going away anytime soon.&lt;/p&gt;

&lt;p&gt;With apps like Facebook, Periscope, and Instagram making live video streaming easier than ever, more and more brands are jumping on board.&lt;/p&gt;

&lt;p&gt;YouTube has been giving live videos for years, but it has only just begun to gain traction. You can get a sense of how other firms are using the platform by watching some popular YouTube Live videos.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MRka-xg_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqmtow8inyi3u1olekk3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MRka-xg_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqmtow8inyi3u1olekk3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Collaborate With Other Creators and Brands&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Collaborating with other users is a strategy employed by some of YouTube's top performers to expand their audience. Each cooperation exposes you to a new audience. And the greatest part is that because you're working with a content creator they already know, like, and trust, those new viewers are more inclined to subscribe to your channel.&lt;/p&gt;

</description>
      <category>design</category>
      <category>youtube</category>
      <category>tooling</category>
    </item>
    <item>
      <title>Ionic tab bar circle middle button</title>
      <author>Chris Bongers</author>
      <pubDate>Wed, 19 May 2021 06:32:58 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/ionic-tab-bar-circle-middle-button-43il</link>
      <guid>https://dev.to/dailydevtips1/ionic-tab-bar-circle-middle-button-43il</guid>
      <description>&lt;p&gt;Today I'll be showing you how to make a circle middle button inside a tab bar.&lt;/p&gt;

&lt;p&gt;It's a way to make a button stand out more from the tab bar, and it can be your center of attention inside your app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KXxdvTjS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621167888069/uE8pRg5vI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KXxdvTjS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621167888069/uE8pRg5vI.png" alt="Ionic tab bar circle middle button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#circle-middle-tab-bar-button"&gt;
  &lt;/a&gt;
  Circle middle tab bar button
&lt;/h2&gt;

&lt;p&gt;We won't be making everything from scratch, so if you plan to work with me on this article, download the &lt;a href="https://daily-dev-tips.com/posts/creating-segment-tabs-in-ionic/"&gt;Ionic tab bar starter&lt;/a&gt; from &lt;a href="https://github.com/rebelchris/ionic-app/tree/segments"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From there, open up the project in your editor of choice.&lt;br&gt;
If we then run the application, we will get a basic tab bar, and we will focus on changing this tab bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3caMm7qS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621167346918/16BpF6X3o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3caMm7qS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621167346918/16BpF6X3o.png" alt="Ionic basic tabbar"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open up the &lt;code&gt;tabs/tabs.page.html&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;For our example, we will make five buttons in our tab bar. The middle one will be outstanding.&lt;/p&gt;

&lt;p&gt;Let's start by adding the five buttons and make the middle one an empty one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ion-tabs&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ion-tab-bar&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"bottom"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ion-tab-button&lt;/span&gt; &lt;span class="na"&gt;tab=&lt;/span&gt;&lt;span class="s"&gt;"tab1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ion-icon&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"triangle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/ion-icon&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ion-label&amp;gt;&lt;/span&gt;Tab 1&lt;span class="nt"&gt;&amp;lt;/ion-label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ion-tab-button&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;ion-tab-button&lt;/span&gt; &lt;span class="na"&gt;tab=&lt;/span&gt;&lt;span class="s"&gt;"tab2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ion-icon&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"ellipse"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/ion-icon&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ion-label&amp;gt;&lt;/span&gt;Tab 2&lt;span class="nt"&gt;&amp;lt;/ion-label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ion-tab-button&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;ion-tab-button&amp;gt;&amp;lt;/ion-tab-button&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;ion-tab-button&lt;/span&gt; &lt;span class="na"&gt;tab=&lt;/span&gt;&lt;span class="s"&gt;"tab3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ion-icon&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"square"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/ion-icon&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ion-label&amp;gt;&lt;/span&gt;Tab 4&lt;span class="nt"&gt;&amp;lt;/ion-label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ion-tab-button&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;ion-tab-button&lt;/span&gt; &lt;span class="na"&gt;tab=&lt;/span&gt;&lt;span class="s"&gt;"tab3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ion-icon&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"egg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/ion-icon&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ion-label&amp;gt;&lt;/span&gt;Tab 5&lt;span class="nt"&gt;&amp;lt;/ion-label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ion-tab-button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ion-tab-bar&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ion-tabs&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will result in the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OkKcYhD4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621167568524/TM72TjTOj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OkKcYhD4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621167568524/TM72TjTOj.png" alt="Ionic 5 tabs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You might think, cool, but we are missing that bottom one!&lt;br&gt;
And you're right, so what we'll do is add a FAB button for that.&lt;/p&gt;

&lt;p&gt;It will take place outside of our tabs and look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ion-fab&lt;/span&gt; &lt;span class="na"&gt;vertical=&lt;/span&gt;&lt;span class="s"&gt;"bottom"&lt;/span&gt; &lt;span class="na"&gt;horizontal=&lt;/span&gt;&lt;span class="s"&gt;"center"&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"fixed"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ion-fab-button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ion-icon&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"leaf"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/ion-icon&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ion-fab-button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ion-fab&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this will give us the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w4oSt8Pk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621167818482/9RHxSaLDVq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w4oSt8Pk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621167818482/9RHxSaLDVq.png" alt="Middle fab button tab bar Ionic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cool and simple right?&lt;br&gt;
You can find today's code on &lt;a href="https://github.com/rebelchris/ionic-app/tree/circle-middle-button"&gt;GitHub&lt;/a&gt; as well!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ionic</category>
      <category>ios</category>
      <category>android</category>
    </item>
    <item>
      <title>Redux for Beginners – Learn Redux with Code Examples</title>
      <author>Yogesh Chavan</author>
      <pubDate>Wed, 19 May 2021 06:12:27 +0000</pubDate>
      <link>https://dev.to/myogeshchavan97/redux-for-beginners-learn-redux-basics-with-code-examples-4b1e</link>
      <guid>https://dev.to/myogeshchavan97/redux-for-beginners-learn-redux-basics-with-code-examples-4b1e</guid>
      <description>&lt;p&gt;Redux can be confusing for beginner React developers to understand. There are a lot of concepts you need to know to use it properly, like reducers, actions, store, pure functions, immutability, and much more.&lt;/p&gt;

&lt;p&gt;But every React developer should know the basics of how to work with Redux since industry projects often use Redux to manage larger projects.&lt;/p&gt;

&lt;p&gt;So in this article, we'll explore the basics of Redux and how to use it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here's a preview of the app which we'll be building in the &lt;a href="https://master-redux.yogeshchavan.dev/"&gt;Mastering Redux&lt;/a&gt; course.It's a great project you can add to your portfolio and resume.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Today is the last day to get the course at discounted price.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Note that, in this app, I have used INR as the currency for displaying the prices but you can easily change it to USD or AUD or any other currency with a single configuration change in the app.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/izSw74H08Bc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-redux"&gt;
  &lt;/a&gt;
  What Is Redux?
&lt;/h2&gt;

&lt;p&gt;Redux is a state management library that helps to better manage state in the application.&lt;/p&gt;

&lt;p&gt;Redux library is not specific to React. It's a library that you can use in any other library or framework like Angular, Vue and even vanilla JavaScript.&lt;/p&gt;

&lt;p&gt;But Redux is mostly used when working with React.&lt;/p&gt;

&lt;p&gt;Redux provides a single store that we can use to manage a large amount of data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-started-with-redux"&gt;
  &lt;/a&gt;
  How to Get Started with Redux
&lt;/h2&gt;

&lt;p&gt;Let's create a new React project to learn Redux basics.&lt;/p&gt;

&lt;p&gt;Execute the following command in the terminal/command prompt to create a new React project using create-react-app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;redux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;demo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;npx&lt;/code&gt; in this case allows us to use the &lt;code&gt;create-react-app&lt;/code&gt; npm package to create a new React project without installing it on our local machine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once the project is created delete all the files from the &lt;code&gt;src&lt;/code&gt; folder and create a new file &lt;code&gt;index.js&lt;/code&gt; inside the &lt;code&gt;src&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;Now open the terminal again and execute the following command from the &lt;code&gt;redux-demo&lt;/code&gt; folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;redux&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will install the redux library with version &lt;code&gt;4.1.0&lt;/code&gt; to use in our project which is the latest version at the time of writing this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-the-redux-store"&gt;
  &lt;/a&gt;
  How to Create the Redux Store
&lt;/h2&gt;

&lt;p&gt;In Redux, the store is used to manage and track the changing data in the application. &lt;/p&gt;

&lt;p&gt;To create a store we need to import the &lt;code&gt;createStore&lt;/code&gt; function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;createStore&lt;/code&gt; function accepts three arguments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the first argument is a function that is normally known as a reducer (required)&lt;/li&gt;
&lt;li&gt;the second argument is the initial value of the state (optional)&lt;/li&gt;
&lt;li&gt;the third argument is an enhancer where we can pass middleware If any (optional)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You will see how to create your own middleware as well as use the already available middleware libraries in the course.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Take a look at the below code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;reducer called&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we've first defined a reducer function using ES6 arrow function syntax. You can use the normal function instead of the arrow function If you want.&lt;/p&gt;

&lt;p&gt;Inside the reducer function, we're logging some text to the console and then returning the value of the state from the function.&lt;/p&gt;

&lt;p&gt;Then we pass that reducer function to the &lt;code&gt;createStore&lt;/code&gt; function as the first argument and &lt;code&gt;0&lt;/code&gt; as the initial value of the state as the second argument.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;createStore&lt;/code&gt; function returns a store that we can use to manage the application data.&lt;/p&gt;

&lt;p&gt;The reducer function receives state and action as the parameters.&lt;/p&gt;

&lt;p&gt;The initial value of the state which we passed as &lt;code&gt;0&lt;/code&gt; for the &lt;code&gt;createStore&lt;/code&gt; function is automatically passed as the value of the &lt;code&gt;state&lt;/code&gt; parameter.&lt;/p&gt;

&lt;p&gt;But it's a much more common practice to initialize the state inside the reducer itself rather than passing it as a second argument to the &lt;code&gt;createStore&lt;/code&gt; function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;reducer called&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we're using ES6 default parameter syntax for initializing the state parameter to value &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once the store is created, we can use the &lt;code&gt;subscribe&lt;/code&gt; method provided by the store to subscribe to the changes in the store as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;current state&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getState&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, using the &lt;code&gt;subscribe&lt;/code&gt; function, we're registering a callback function that will be called once the store is changed.&lt;/p&gt;

&lt;p&gt;And inside the callback function, we're calling the &lt;code&gt;store.getState&lt;/code&gt; method to get the current value of the state.&lt;/p&gt;

&lt;p&gt;Now, open the &lt;code&gt;src/index.js&lt;/code&gt; file and add the following contents inside it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;reducer called&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;current state&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getState&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, If you run the application by executing the &lt;code&gt;npm start&lt;/code&gt; command from the terminal and access &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;,  you will see the &lt;code&gt;reducer called&lt;/code&gt; message printed in the console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QNNhWEO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621391651358/qoB6XXwU7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QNNhWEO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621391651358/qoB6XXwU7.png" alt="reducer_log.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is because the reducer gets called immediately once we pass it to the &lt;code&gt;createStore&lt;/code&gt; function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-change-the-store"&gt;
  &lt;/a&gt;
  How to Change the Store
&lt;/h2&gt;

&lt;p&gt;Now, we're done with creating the store. But the store is not much of use right now. Because the store is connected using the reducer function but we have not added any code inside the reducer to manage the store. So let's do that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The only way to change the store is by dispatching actions.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An action is an object sent to the store like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we're calling the dispatch function available on the &lt;code&gt;store&lt;/code&gt; to send an action with the type &lt;code&gt;INCREMENT&lt;/code&gt; to the store.&lt;/p&gt;

&lt;p&gt;The dispatch function takes an object as a parameter which is known as action.&lt;/p&gt;

&lt;p&gt;The action must have a &lt;code&gt;type&lt;/code&gt; property as shown above. If you don't pass the &lt;code&gt;type&lt;/code&gt; property then you will get an error.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It's a common practice and recommended to specify the &lt;code&gt;type&lt;/code&gt; value in uppercase.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The type can be any operation you want to perform like &lt;code&gt;ADD_USER&lt;/code&gt;, &lt;code&gt;DELETE_RECORD&lt;/code&gt;, &lt;code&gt;GET_USERS&lt;/code&gt; and so on.&lt;/p&gt;

&lt;p&gt;If you've multiple words you can separate them with underscores like this &lt;code&gt;{ type: 'INCREMENT_NUMBER' }&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, open the &lt;code&gt;index.js&lt;/code&gt; file and replace its contents with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;current state&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getState&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, If you run the application by executing the &lt;code&gt;npm start&lt;/code&gt; command from the terminal, you will see the following logs printed in the console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C2VTamCS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621391663932/da5lc7uLm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C2VTamCS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621391663932/da5lc7uLm.png" alt="changing_store.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see for every action dispatched to the store, the store gets changed and so we're able to see the different values of the state in the console.&lt;/p&gt;

&lt;p&gt;In the above code, our reducer function looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whenever we call the &lt;code&gt;store.dispatch&lt;/code&gt; function, the reducer function will be called and whatever returned from the reducer will become the new value of the store.&lt;/p&gt;

&lt;p&gt;So when the first time we dispatch an action to the store like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the first If condition inside the reducer function will be executed that will increment the &lt;code&gt;state&lt;/code&gt; value to &lt;code&gt;1&lt;/code&gt; which was initially initialized to &lt;code&gt;0&lt;/code&gt; using ES6 default parameter syntax and it will be returned from the reducer function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note that we're using the value of the &lt;code&gt;state&lt;/code&gt; to calculate the new value and we're not modifying the original &lt;code&gt;state&lt;/code&gt; value like this:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So the above code is wrong because in reducer we should not modify the original state. Doing so will create issues in your application and is not recommended.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You will learn why we don't directly change the state and various ways of creating copies of array and object in detail in the course.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And because we've added &lt;code&gt;store.subscribe&lt;/code&gt; function in the &lt;code&gt;index.js&lt;/code&gt; file, we're getting notified about the changing store as we can see the logs in the console.&lt;/p&gt;

&lt;p&gt;So when we again call the dispatch with type &lt;code&gt;INCREMENT&lt;/code&gt;, the first If condition will be executed again so 1 will be added to the previous state value which was 1 and the final state value will become 2.&lt;/p&gt;

&lt;p&gt;Then we're dispatching the &lt;code&gt;DECREMENT&lt;/code&gt; action to the store like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which will execute the else condition inside the reducer and it will decrement the state value by 1 so 2 - 1  will become 1.&lt;/p&gt;

&lt;p&gt;Note that, inside the reducer, we're also returning state at the end so If none of the condition matches, the default previous state will be returned from the function.&lt;/p&gt;

&lt;p&gt;It's a common practice to use a switch statement inside the reducer instead of the if-else condition like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In addition to the type, we can also pass extra information as a part of the action.&lt;/p&gt;

&lt;p&gt;Replace the contents of the &lt;code&gt;index.js&lt;/code&gt; file with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;current state&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getState&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, If you run the application by executing the &lt;code&gt;npm start&lt;/code&gt; command from the terminal, you will see the following logs printed in the console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ycONlScF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621391678225/I_x5S5SMK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ycONlScF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621391678225/I_x5S5SMK.png" alt="with_payload.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, while dispatching an action to the store, we're passing a &lt;code&gt;payload&lt;/code&gt; with some value which we're using inside the reducer to increment or decrement the store value. &lt;/p&gt;

&lt;p&gt;Here, we've used &lt;code&gt;payload&lt;/code&gt; as a property name but you can name it whatever you want.&lt;/p&gt;

&lt;p&gt;Our reducer function looks like this now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So when we dispatch actions with type &lt;code&gt;INCREMENT&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INCREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the following code from the reducer will be executed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which will first add 1 and then 5 to the previous value of the state so we go from 1 to 6 and because of the &lt;code&gt;DECREMENT&lt;/code&gt; action type&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECREMENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we go from 6 to 4 so the final value of the store will become 4.&lt;/p&gt;

&lt;p&gt;Here's a &lt;a href="https://codesandbox.io/s/goofy-hooks-y1w9s?file=/src/index.js"&gt;Code Sandbox Demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h3&gt;

&lt;p&gt;This was a quick introduction to Redux from my &lt;a href="https://master-redux.yogeshchavan.dev/"&gt;Mastering Redux&lt;/a&gt; course.&lt;/p&gt;

&lt;p&gt;In the Mastering Redux course, you will learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic and advanced Redux&lt;/li&gt;
&lt;li&gt;How to manage the complex state of array and objects&lt;/li&gt;
&lt;li&gt;How to use multiple reducers to manage complex redux state&lt;/li&gt;
&lt;li&gt;How to debug Redux application&lt;/li&gt;
&lt;li&gt;How to use Redux in React using react-redux library to make your app reactive.&lt;/li&gt;
&lt;li&gt;How to use redux-thunk library to handle async API calls and much more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and then finally we'll build a complete &lt;a href="https://www.youtube.com/watch?v=izSw74H08Bc"&gt;food ordering app&lt;/a&gt; from scratch with stripe integration for accepting payments and deploy it to the production.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Today is the last day to get the &lt;a href="https://master-redux.yogeshchavan.dev/"&gt;Mastering Redux&lt;/a&gt; course at discounted price&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So click the below image to get the course at just $12 instead of the original price of $19.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You will also get a free copy of my popular &lt;a href="https://modernjavascript.yogeshchavan.dev/"&gt;Mastering Modern JavaScript&lt;/a&gt; book If you purchase the course till 19th May 2021.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3w0DGum"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Taa9-Eif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/98ae4f4ead57fde8d47fcf7641220b72/raw/c3e4265df4396d639a7938a83bffd570130483b1/banner.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Want to stay up to date with regular content regarding JavaScript, React, Node.js? &lt;a href="https://www.linkedin.com/in/yogesh-chavan97/"&gt;Follow me on LinkedIn&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/myogeshchavan97"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xG4nnUnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-yellow.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Weekly web development resources #74</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 19 May 2021 06:09:43 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-74-khn</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-74-khn</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#mmmpage"&gt;
  &lt;/a&gt;
  &lt;a href="https://build.mmm.page/"&gt;mmm.page&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://build.mmm.page/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S5LCg5sT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/74/mmmpage.jpg" alt="mmm.page"&gt;&lt;/a&gt;&lt;br&gt;
A simple tool to create unique personal websites with drag &amp;amp; drop.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pintr"&gt;
  &lt;/a&gt;
  &lt;a href="https://javier.xyz/pintr/"&gt;PINTR&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://javier.xyz/pintr/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iA1-pDB8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/74/PINTR.jpg" alt="PINTR"&gt;&lt;/a&gt;&lt;br&gt;
Create single-line SVG illustrations from your pictures.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#syncthing"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/syncthing/syncthing"&gt;syncthing&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/syncthing/syncthing"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--htX4r7_w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/74/syncthing.jpg" alt="syncthing"&gt;&lt;/a&gt;&lt;br&gt;
An open-source continuous file synchronization.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#codewell"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.codewell.cc/"&gt;Codewell&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.codewell.cc/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c5T_vQcH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/74/codewell.jpg" alt="Codewell"&gt;&lt;/a&gt;&lt;br&gt;
A website to improve your HTML and CSS skills by practicing on real design templates.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#modern-javascript"&gt;
  &lt;/a&gt;
  &lt;a href="https://turriate.com/articles/modern-javascript-everything-you-missed-over-10-years"&gt;Modern Javascript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://turriate.com/articles/modern-javascript-everything-you-missed-over-10-years"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U4Q419Wz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/74/modernjs.jpg" alt="Modern Javascript"&gt;&lt;/a&gt;&lt;br&gt;
An article with everything you might have missed over the last 10 years.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#undoing-mistakes-with-git"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.smashingmagazine.com/2021/05/undoing-mistakes-git-part1/"&gt;Undoing Mistakes With Git&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.smashingmagazine.com/2021/05/undoing-mistakes-git-part1/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0jYN-YLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/74/undoing-mistakes-git.jpg" alt="Undoing Mistakes With Git"&gt;&lt;/a&gt;&lt;br&gt;
A cool guide to repair mistakes by using Git.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mantine"&gt;
  &lt;/a&gt;
  &lt;a href="https://mantine.dev/"&gt;Mantine&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mantine.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AAJvomUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/74/mantine.jpg" alt="Mantine"&gt;&lt;/a&gt;&lt;br&gt;
An open-source react components and hooks library.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#24-html-tags-you-may-not-know"&gt;
  &lt;/a&gt;
  &lt;a href="https://cmsinstallation.blogspot.com/2021/05/24-html-tags-you-may-not-know.html"&gt;24 HTML Tags you may not know&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cmsinstallation.blogspot.com/2021/05/24-html-tags-you-may-not-know.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qgDU-R0_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/74/html-tags.jpg" alt="24 HTML Tags you may not know"&gt;&lt;/a&gt;&lt;br&gt;
An article with some lesser-known HTML Tags.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#open-color"&gt;
  &lt;/a&gt;
  &lt;a href="https://yeun.github.io/open-color/"&gt;Open color&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://yeun.github.io/open-color/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K0jQvqmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/74/open-color.jpg" alt="Open color"&gt;&lt;/a&gt;&lt;br&gt;
An open-source color scheme for UI like font, background, border, etc.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#100-css-loaders"&gt;
  &lt;/a&gt;
  &lt;a href="https://dev.to/afif/i-made-100-css-loaders-for-your-next-project-4eje"&gt;100 CSS loaders&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/afif/i-made-100-css-loaders-for-your-next-project-4eje"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C1wYjIiA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/74/css-loaders.jpg" alt="100 CSS loaders"&gt;&lt;/a&gt;&lt;br&gt;
A cool article with a lot of pure CSS loaders.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dom-events"&gt;
  &lt;/a&gt;
  &lt;a href="https://domevents.dev/"&gt;DOM Events&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://domevents.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dqN_t8vE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/74/domevents.jpg" alt="DOM Events"&gt;&lt;/a&gt;&lt;br&gt;
A website to learn about the DOM Event system through exploration.&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>weekly</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The big STL Algorithms tutorial: binary_search et al.</title>
      <author>Sandor Dargo</author>
      <pubDate>Wed, 19 May 2021 06:01:33 +0000</pubDate>
      <link>https://dev.to/sandordargo/the-big-stl-algorithms-tutorial-binarysearch-et-al-cpj</link>
      <guid>https://dev.to/sandordargo/the-big-stl-algorithms-tutorial-binarysearch-et-al-cpj</guid>
      <description>&lt;p&gt;In this next part of &lt;a href="http://sandordargo.com/blog/2019/01/30/stl-algos-intro"&gt;the big STL algorithm tutorial&lt;/a&gt;, we cover the binary search operations. I use plural because there isn't simply &lt;code&gt;std::binary_search&lt;/code&gt; available for us, but other algorithms as well:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;binary_seach&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;equal_range&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lower_bound&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;upper_bound&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-raw-binaryseach-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;binary_seach&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;std::binary_seach&lt;/code&gt; helps us - guess what - to search for an element in a container. As the first two parameters, you have to pass two iterators defining the input range.&lt;/p&gt;

&lt;p&gt;Give that we haven't discussed algorithms for a while, here are a few reminders:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the two iterators must point to the same container, otherwise, the behaviour is undefined&lt;/li&gt;
&lt;li&gt;the compiler has no way to validate this requirement, it's up to the caller&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Binary search operations have an additional requirement for their input ranges, &lt;strong&gt;they must be sorted&lt;/strong&gt;, otherwise, the behaviour is undefined.&lt;/p&gt;

&lt;p&gt;The first time when I learned about this I felt a bit perplexed. Isn't that a bit too much? Shouldn't the algorithm take care of this? Maybe just sort it when needed.&lt;/p&gt;

&lt;p&gt;If you think about it a little bit longer, it makes perfect sense. One of the main principles of (C and) C++ is that you should only pay for what you use. The name &lt;code&gt;binary_seach&lt;/code&gt; is pretty straightforward. It will search for elements with a given mathematical algorithm. Why should it sort anything? Sorting doesn't come for free. If you need to sort your container, use &lt;a href="https://www.sandordargo.com/blog/2021/02/03/stl-alogorithms-tutorial-part-19-sorting#sort"&gt;&lt;code&gt;std::sort&lt;/code&gt; or something similar&lt;/a&gt;, if you need to check first if the input range is sorted, &lt;a href="https://www.sandordargo.com/blog/2021/02/03/stl-alogorithms-tutorial-part-19-sorting#is_sorted"&gt;use &lt;code&gt;is_sorted&lt;/code&gt; or &lt;code&gt;is_sorted_until&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If &lt;code&gt;binary_seach&lt;/code&gt; would do anything else, it would be a problem for those who use it as it is supposed to be used. Given that checking this semantic requirement has a cost, it's preferable to simply declare that the outcome is undefined if we pass in unsorted elements.&lt;/p&gt;

&lt;p&gt;That's enough about the input range.&lt;/p&gt;

&lt;p&gt;As a third parameter we have to pass in the value that we are searching for and there is an optional 4th element that is the comparator. As we got used to it, it can be a lambda, a function pointer or a function object (a functor). It's a binary function, it accepts two elements and returns a value that is convertible to a &lt;code&gt;bool&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In any case, &lt;code&gt;binary::search&lt;/code&gt; will return a boolean, &lt;code&gt;true&lt;/code&gt; in case an element is found in the input range, &lt;code&gt;false&lt;/code&gt; otherwise.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;boolalpha&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Looking for 1 in the unsorted container&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;binary_search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Looking for 1 once the container is sorted&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;binary_search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;is_equal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;lhs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;lhs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;;};&lt;/span&gt;

  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Looking for 1 once the container is sorted with custom comparator&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;binary_search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_equal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But what if you need the element that you were looking for? We &lt;a href="https://www.sandordargo.com/blog/2019/05/15/stl-algorithm-tutorial-part-3-find"&gt;learnt about the different &lt;code&gt;find*&lt;/code&gt; algorithms earlier&lt;/a&gt; that you can use to return find one element, but if you look for a range of elements, you have other options than nesting &lt;code&gt;std::find&lt;/code&gt; into a loop.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-equalrange-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;equal_range&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;equal_range&lt;/code&gt; returns a pair of iterators giving a handle to all the matching items.&lt;/p&gt;

&lt;p&gt;The first iterator points to the first element that is not less than the searched for value and the second element points to the first element that is greater than that value. We are going to check what are the different scenarios, but first, we have to briefly talk about the inputs.&lt;/p&gt;

&lt;p&gt;The input parameters are the very same as for &lt;code&gt;binary_seach&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;at the first two positions we define the input range&lt;/li&gt;
&lt;li&gt;then the value we are looking for&lt;/li&gt;
&lt;li&gt;and finally the optional comparator&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once again, the input range should be fully sorted.&lt;/p&gt;

&lt;p&gt;So let's get back to the different scenarios.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#value-not-found-and-its-bigger-than-any-elements"&gt;
  &lt;/a&gt;
  Value not found and it's bigger than any elements
&lt;/h3&gt;

&lt;p&gt;When the value cannot be found and it is bigger than any elements, both &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; point right after the container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Size of numbers: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;equal_range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"First distance from numbers.begin(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of first: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"First distance from numbers.last(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of last: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
Size of numbers: 9
First distance from numbers.begin(): 9
Value of first: 0
First distance from numbers.last(): 9
Value of last: 0
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#value-not-found-and-its-smaller-than-any-elements"&gt;
  &lt;/a&gt;
  Value not found and it's smaller than any elements
&lt;/h3&gt;

&lt;p&gt;When the value cannot be found and it is smaller than any elements, both &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; point at the first element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Size of numbers: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;equal_range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"First distance from numbers.begin(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of first: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"First distance from numbers.last(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of last: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;/*&lt;/span&gt;
&lt;span class="n"&gt;Size&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#value-not-found-there-are-smaller-and-bigger-items-in-the-container"&gt;
  &lt;/a&gt;
  Value not found, there are smaller and bigger items in the container
&lt;/h3&gt;

&lt;p&gt;When the value cannot be found, but there are smaller and bigger elements as well in the container, both &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; point at the first element greater than the searched value.&lt;/p&gt;

&lt;p&gt;It makes sense as that's the first element that is not less than the looked for value and also the first that is greater than it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Size of numbers: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;equal_range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"First distance from numbers.begin(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of first: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"First distance from numbers.last(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of last: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;/*&lt;/span&gt;
&lt;span class="n"&gt;Size&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#value-found"&gt;
  &lt;/a&gt;
  Value found
&lt;/h3&gt;

&lt;p&gt;This is the nominal case and it behaves as it's expected. &lt;code&gt;first&lt;/code&gt; is the last one smaller than the looked for value and &lt;code&gt;last&lt;/code&gt; is the first one that is greater.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Size of numbers: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;equal_range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"First distance from numbers.begin(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of first: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"First distance from numbers.last(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of last: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;/*&lt;/span&gt;
&lt;span class="n"&gt;Size&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Having seen all these examples, we can observe that in case &lt;code&gt;equal_range&lt;/code&gt; couldn't find the value it looked for, then both iterators will point at the same place, otherwise not. This means that we don't need &lt;code&gt;binary_search&lt;/code&gt; to validate first the existence of the element when we look for the range, we can simply check if the two iterators are pointing to the same place or not&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-lowerbound-endraw-and-raw-upperbound-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;lower_bound&lt;/code&gt; and &lt;code&gt;upper_bound&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;While &lt;code&gt;equal_range&lt;/code&gt; returns a pair of iterators &lt;code&gt;lower_bound&lt;/code&gt; and &lt;code&gt;upper_bound&lt;/code&gt; returns only one:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;lower_bound&lt;/code&gt; returns an iterator pointing to the first item not less than the searched value&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;upper_bound&lt;/code&gt; returns an iterator pointing to the first element greater than the searched value&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The parameters, these functions take are really the same as we saw before:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;at the first two positions we define the input range&lt;/li&gt;
&lt;li&gt;then the value we are looking for&lt;/li&gt;
&lt;li&gt;and finally the optional comparator&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now let's see a couple of examples.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;for_each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;;});&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Size of numbers: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"========&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Looking for "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;", that is inside the container&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;lower&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;lower_bound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;upper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;upper_bound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"lower's distance from numbers.begin(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of lower: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"upper's distance from numbers.begin(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of upper: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"========&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Looking for "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;", that is smaller than the smallest item of the container&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;lower&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;lower_bound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;upper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;upper_bound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"lower's distance from numbers.begin(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of lower: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"upper's distance from numbers.begin(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of upper: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"========&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Looking for "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;", that is larger than the largest item of the container&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;lower&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;lower_bound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;upper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;upper_bound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"lower's distance from numbers.begin(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of lower: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"upper's distance from numbers.begin(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of upper: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"========&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Looking for "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;", that is not in the container that contains both smaller and larger values than "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;lower&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;lower_bound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;upper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;upper_bound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"lower's distance from numbers.begin(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of lower: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"upper's distance from numbers.begin(): "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Value of upper: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
1 2 2 3 4 5 5 5 7 
Size of numbers: 9

========
Looking for 5, that is inside the container
lower's distance from numbers.begin(): 5
Value of lower: 5
upper's distance from numbers.begin(): 8
Value of upper: 7
========
Looking for 0, that is smaller than the smallest item of the container
lower's distance from numbers.begin(): 0
Value of lower: 1
upper's distance from numbers.begin(): 0
Value of upper: 1
========
Looking for 9, that is larger than the largest item of the container
lower's distance from numbers.begin(): 9
Value of lower: 0
upper's distance from numbers.begin(): 9
Value of upper: 0
========
Looking for 6, that is not in the container that contains both smaller and larger values than 6
lower's distance from numbers.begin(): 8
Value of lower: 7
upper's distance from numbers.begin(): 8
Value of upper: 7
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I don't share any comments on the results, essentially they are the same as for &lt;code&gt;equal_range&lt;/code&gt;, you can find a deeper explanation at that section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This time, we learned about binary search algorithms. We saw how to check if an item can be found in the container and also how to get its or even their position (in case there are multiple items with the same value).&lt;/p&gt;

&lt;p&gt;Next time we'll discover merging algorithms.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-deeper"&gt;
  &lt;/a&gt;
  Connect deeper
&lt;/h2&gt;

&lt;p&gt;If you found interesting this article, please &lt;a href="http://eepurl.com/gvcv1j"&gt;subscribe to my personal blog&lt;/a&gt; and let's connect on &lt;a href="https://twitter.com/SandorDargo"&gt;Twitter&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>tutorial</category>
      <category>stl</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>3 Tips to Grow your Business Online</title>
      <author>Raymond Halliwell</author>
      <pubDate>Wed, 19 May 2021 04:59:58 +0000</pubDate>
      <link>https://dev.to/raymondhalliwell/3-tips-to-grow-your-business-online-gcm</link>
      <guid>https://dev.to/raymondhalliwell/3-tips-to-grow-your-business-online-gcm</guid>
      <description>&lt;p&gt;There is no two-way to it. Having an online presence in today’s digitalized age is essential for business success. It is the tool to growing a business reputation, generating leads and driving sales. However, we can’t ignore the fact that there are more than enough businesses daily selling the same products, marketing the same services, using ads, building social media presence and many more. After all, everyone wants to have their own share of what the power of the internet has to offer. ‘Companies need to understand how to cut through the noise, make an impression and grow their business amidst the highly competitive landscape. Although there might not be anything new when it comes to online business. But business unique needs are different and understanding what works for you is the key, says &lt;a href="https://twitter.com/raymondhalliwel"&gt;Raymond Halliwell&lt;/a&gt;, a passionate digital marketing professional.&lt;/p&gt;

&lt;p&gt;Here are important things businesses need to do shared by the digital marketing expert, &lt;a href="https://www.youtube.com/channel/UC0ZXH8PCoTJ9kNWumYpWUzg"&gt;Raymond Halliwell&lt;/a&gt; to set up their brands for successful online business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-a-business-website"&gt;
  &lt;/a&gt;
  Build a business website
&lt;/h2&gt;

&lt;p&gt;Anyone can create a website these days, but not everyone can build a website that drives results. This means you need a team of experts who understand what it takes to build a high-quality and high performing website. For this,&lt;/p&gt;

&lt;p&gt;Build a unique website that reflects your brand, needs and meets your audience demands. While at it, keep it simple, and easy for anyone who visits your website.&lt;/p&gt;

&lt;p&gt;Give your website a flawless customer experience. The loading speed, the design, visuals and images, all should be one that delights consumers.&lt;/p&gt;

&lt;p&gt;Make your website mobile-friendly. Modern consumers have gone from desktop to mobile which means you need to make your website mobile-friendly to attract mobile users.&lt;/p&gt;

&lt;p&gt;Create high-quality content and give your audience the right information to keep them engaging with your brand.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#invest-in-ppc-and-seo"&gt;
  &lt;/a&gt;
  Invest in PPC and SEO
&lt;/h2&gt;

&lt;p&gt;Understand that having a website alone cannot make your business grow, it is simply the starting point and a means to an end. You also need to adopt the right strategies and techniques to position your business right in front of your target audience in order to build traffic, drive leads to increase the bottom line. When it comes to marketing, two of the major approaches employed are PPC and SEO.&lt;/p&gt;

&lt;p&gt;PPC stands for pay-per-click in which you make use of paid ads to drive traffic to your site.&lt;/p&gt;

&lt;p&gt;SEO stands for Search engine optimization and it is the process of improving your site to increase its visibility and get it ranking high on the search result.&lt;/p&gt;

&lt;p&gt;SEO provides the visibility that your business needs to drive traffic to your site. For this, you do not need to pay but only need to optimize the website to increase searchability. This way, your business will be easily discovered by anyone in need of your business.&lt;/p&gt;

&lt;p&gt;PPC allows you to display your advertisement in front of actively engaged consumers at the right moment they are looking for your products or services online. It’s a great way to gain instant visibility while providing more opportunities to convert prospects to paying customers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#take-charge-of-your-online-presence"&gt;
  &lt;/a&gt;
  Take charge of your online presence
&lt;/h2&gt;

&lt;p&gt;Having an online presence also comes with its own negativity if not managed properly. That is why you need to take full control of your digital presence to ensure it is working for your good. This will require you to:&lt;/p&gt;

&lt;p&gt;Build a positive brand image and engage with your audience at all levels. This way, you will be able to understand their needs, and work towards making it happen.&lt;/p&gt;

&lt;p&gt;Track reviews and mentions to correct any negative ones and appreciate the positive ones.&lt;/p&gt;

&lt;p&gt;Correct errors and update any old information to ensure consumers stay up-to-date with your business.&lt;/p&gt;

&lt;p&gt;Ensure consistent connection with the audience to create a buzz around your brand while building customer trust.&lt;/p&gt;

</description>
      <category>raymondhalliwell</category>
      <category>digitalmarketing</category>
      <category>seo</category>
      <category>onlinemarketing</category>
    </item>
    <item>
      <title>Architecture: Web app[front-end] from scratch 2021 </title>
      <author>lakshmanan-arumugam</author>
      <pubDate>Wed, 19 May 2021 04:48:11 +0000</pubDate>
      <link>https://dev.to/lakshmananarumugam/architecture-web-app-front-end-from-scratch-2021-f6</link>
      <guid>https://dev.to/lakshmananarumugam/architecture-web-app-front-end-from-scratch-2021-f6</guid>
      <description>&lt;p&gt;Currently, I work as a front-end engineer and I worked on some of the frameworks Ember, React, and Vue. during that time I learned a lot of things about the web application. some of the learnings I wish to share here.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h1&gt;

&lt;p&gt;At some stage, a front-end developer not only knows how to develop a feature. Should know what are the main components must-have in a web application.&lt;/p&gt;

&lt;p&gt;Here I am sharing as much of waht I know here.  If, you will feel I missed anything here please, feel free to add a comment below here the post. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#architecture-components"&gt;
  &lt;/a&gt;
  Architecture components:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Choosing the right JS framework&lt;/li&gt;
&lt;li&gt;File system&lt;/li&gt;
&lt;li&gt;Typescript&lt;/li&gt;
&lt;li&gt;Styling system&lt;/li&gt;
&lt;li&gt;Design documentation&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#1choosing-the-right-js-framework"&gt;
  &lt;/a&gt;
  1.Choosing the right JS framework
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kX9UqaHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9hzp2geg3rz42nm7f8d.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kX9UqaHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9hzp2geg3rz42nm7f8d.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
 The first is the best. we solve 60% of problems by choosing the right framework for your product. when you choose consider the below points:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Don't choose a framework based on popularity until suit for your tech.&lt;/li&gt;
&lt;li&gt;Availability of Learning Resources&lt;/li&gt;
&lt;li&gt;Core Features (Which your product required)&lt;/li&gt;
&lt;li&gt;Active community and version release.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At least the above points when you decide on a framework for your product.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2file-system"&gt;
  &lt;/a&gt;
  2.File system
&lt;/h3&gt;

&lt;p&gt;As a product, the code files will grow year by year. so, later stage with a poor file system we have a code file finding and organizing, dynamic module loading issue. nowadays by default, all frameworks give a default file structure. but, we have to reconsider when files grow it will work for maintainability.&lt;/p&gt;

&lt;p&gt;Some popular file system:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Classic
|--components
|--services
|--utils
|--store
|--icons
|--routes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//Pods 
|--FeatureOne
   |--components
   |--services
   |--store
   index.js
|--FeatureTwo
   |--components
   |--services
   |--store
   index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3typescript"&gt;
  &lt;/a&gt;
  3.Typescript
&lt;/h3&gt;

&lt;p&gt;Why we have to consider &lt;a href="https://www.typescriptlang.org/"&gt;typescript&lt;/a&gt; nowadays in the web app. even though has a modern javascript.&lt;/p&gt;

&lt;p&gt;because typescript builds some additional features on top of the javascript only. Reason is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;1. one of the big benefits is to enable IDEs to provide a richer environment for spotting common errors as you type the code.&lt;/code&gt;&lt;br&gt;
&lt;code&gt;2. TypeScript makes code easier to read and understand&lt;/code&gt;&lt;br&gt;
&lt;code&gt;3. Make app development as quick and easy as possible,&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4styling-system"&gt;
  &lt;/a&gt;
  4.Styling system
&lt;/h3&gt;

&lt;p&gt;I mean styling system is organizing your style codes like CSS, sass, or CSS-in-JS. It looks like a small one. but, this only later is harder to maintain. &lt;code&gt;As a product design may change every 3/6 months. so, we able to change the design without the code duplication&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Styling tools:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://acss.io/"&gt;Atomic CSS&lt;/a&gt;(New one (Facebook using this))&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://styled-components.com/"&gt;CSS-in-JS&lt;/a&gt; (Popular one)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sass-lang.com/"&gt;SASS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS"&gt;CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#5design-documentation"&gt;
  &lt;/a&gt;
  5.Design documentation
&lt;/h3&gt;

&lt;p&gt;The design style guides nothing but, it's used to find co-worked what are the component available in the product and how to use them. &lt;/p&gt;

&lt;p&gt;Why it's important:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When a web app grows people may not know what are the components available.&lt;/li&gt;
&lt;li&gt;The Same component creates multiple times due to the different names. (Ex: UserLink vs Hyperlink(both do the same thing)).
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Design documentation tools:&lt;br&gt;
&lt;a href="https://storybook.js.org/"&gt;Storybook&lt;/a&gt;&lt;br&gt;
&lt;a href="https://react-styleguidist.js.org/"&gt;styleguidist&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I am not able to cover all the web app architecture components in one post. because the post will grow too much. so, remaining I will share in part 2.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thanks to all who read this post.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>architecture</category>
      <category>javascript</category>
    </item>
    <item>
      <title>🤯 30DaysChallenge - 30 Days Extreme HTML &amp; CSS CHALLENGE 🤯</title>
      <author>Somanath Goudar</author>
      <pubDate>Wed, 19 May 2021 04:37:50 +0000</pubDate>
      <link>https://dev.to/somanathgoudar/30dayschallenge-30-days-extreme-html-css-challenge-50k1</link>
      <guid>https://dev.to/somanathgoudar/30dayschallenge-30-days-extreme-html-css-challenge-50k1</guid>
      <description>&lt;p&gt;Hey, This is Somanath Goudar. Things are about to get Hard for me these next 30 Days 🤯. You wont Believe What I have planned for these 30 Days 😱. I will be pushing my Limits to the edges to achieve this goal.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;So here is what I have Planned :&lt;/strong&gt;&lt;br&gt;
➜ 1) Code a HTML CSS Project Every day (Simple like Hover Effects, form design, CSS animations, which can be used in real world websites etc..) &lt;br&gt;
➜ 2) Make a Video Tutorial on it and upload to YouTube Every day (so that anyone here can follow along and be a part of this Challenge).&lt;br&gt;
➜ 3) Write a Blog About it and post Every Day.&lt;br&gt;
➜ 4) Post a Instagram Post About it Every Day.&lt;br&gt;
➜ 5) Post a Instagram Reel on it Every Day.&lt;/p&gt;




&lt;p&gt;So, Now you know what I have planned and why I am calling it the Extreme Challenge. You might be having so many questions in your head about this. Same here, I too have so many questions about this Challenge 😂. How am I gonna do it? That is a lot to do in a single day, right?.&lt;/p&gt;

&lt;p&gt;The thing is I want to provide Something Valuable to this Developers Community 😇 that we have here. I want to help other developers.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;At the end of this challenge&lt;/strong&gt; &lt;br&gt;
➜ 1) You guys will be having 30 Different HTML CSS Projects all at the Same Place. &lt;br&gt;
➜ 2) 30 YouTube Tutorial Videos if you want to follow along with me and be a part of this challenge&lt;br&gt;
➜ 3) All the Source Code will be shared with love, here on dev.to and on my Blog.&lt;br&gt;
➜ 4) I want to let others know about this challenge, so I will be posting on Instagram and keep track of this challenge here and on Instagram.&lt;/p&gt;




&lt;p&gt;Now the question is Can I Do it? The answer is Yes, I will do it. I have learned a lot from this Developers Community and its time that I Provide the same value to others in this community. And Anyone from here is welcome to join me in this challenge.&lt;/p&gt;

&lt;p&gt;I Have Spent Day and Night to Make this challenge possible and to put everything together. And for me this will be the first biggest thing that I will be doing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here are the links through which you can keep track of this Challenge.&lt;/strong&gt;&lt;br&gt;
👉 &lt;a href="https://dev.to/"&gt;Dev.to&lt;/a&gt; : Originally Posting Here&lt;br&gt;
👉 &lt;a href="https://www.youtube.com/channel/UCzGSyMOf2jPt1MkNBB3SJ3g"&gt;YouTube&lt;/a&gt; : Video Tutorials&lt;br&gt;
👉 &lt;a href="https://www.instagram.com/future_coderss/"&gt;Instagram&lt;/a&gt; : Posting Every Day &lt;br&gt;
👉 &lt;a href="https://www.mrwebwolf.com"&gt;My Blog&lt;/a&gt; : Blog Posts Every Day&lt;/p&gt;

&lt;p&gt;Hope You guys like What I am Doing Here&lt;br&gt;
Please Wish me Luck 😅&lt;/p&gt;

&lt;p&gt;The Challenge Will Start on &lt;strong&gt;20th May 2021&lt;/strong&gt; (Tomorrow)&lt;/p&gt;




&lt;p&gt;Support Me :&lt;br&gt;
👉 Buy me a Coffee: &lt;a href="https://www.buymeacoffee.com/somanathgoudar"&gt;https://www.buymeacoffee.com/somanathgoudar&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://www.instagram.com/somanath_goudar/"&gt;Follow Me on Instagram&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://www.instagram.com/future_coderss/"&gt;Follow Future Coders on Instagram&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA"&gt;Subscribe to My Main Channel&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://www.youtube.com/channel/UCzGSyMOf2jPt1MkNBB3SJ3g"&gt;Subscribe to Channel Created for this Challenge&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>frontend</category>
      <category>30daysofcode</category>
    </item>
    <item>
      <title>Learn Fullstack | 2021</title>
      <author>Anguram Shanmugam</author>
      <pubDate>Wed, 19 May 2021 04:32:09 +0000</pubDate>
      <link>https://dev.to/retr0c0de/learn-fullstack-2021-54gd</link>
      <guid>https://dev.to/retr0c0de/learn-fullstack-2021-54gd</guid>
      <description>&lt;p&gt;This article focus on Fullstack web development. So, Don't blame me for the "anaconda article".&lt;/p&gt;

&lt;p&gt;If you're not using React or using Angular/Vue. It's totally fine and will be compatible for you. You can start with idea and gist that I provide. Then Ladder up your skills with your taste 😉.&lt;/p&gt;

&lt;p&gt;let's begin 🚀&lt;br&gt;
&lt;a href="https://i.giphy.com/media/QxePySHSUR97cXmCH0/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/QxePySHSUR97cXmCH0/giphy-downsized.gif" alt="Laugh at your time"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#fullstack-web-development"&gt;
  &lt;/a&gt;
  Fullstack web development
&lt;/h1&gt;

&lt;h4&gt;
  &lt;a href="#according-to-w3schools"&gt;
  &lt;/a&gt;
  According to W3Schools:
&lt;/h4&gt;

&lt;p&gt;A full stack web developer is a person who can develop both client and server software.&lt;/p&gt;

&lt;p&gt;In addition to mastering HTML and CSS, he/she also knows how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Program a browser (like using JavaScript, jQuery, Angular, or Vue)&lt;/li&gt;
&lt;li&gt;Program a server (like using PHP, ASP, Python, or Node)&lt;/li&gt;
&lt;li&gt;Program a database (like using SQL, SQLite, or MongoDB)
&lt;img src="https://i.giphy.com/media/5kFJkMhfOnQ02VdkHy/giphy-downsized.gif" alt="Thats what she said!"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But If you ask me. An fullstack devloper is a "wizard" in web dev universe. Because you can do literally everything from backend to frontend. So, Enough about the inaugurals.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/5wWf7H89PisM6An8UAU/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/5wWf7H89PisM6An8UAU/giphy-downsized.gif" alt="Fullstack Freakin Dev"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#learning-curve"&gt;
  &lt;/a&gt;
  Learning Curve
&lt;/h1&gt;

&lt;p&gt;There's a gotcha though i.e. the "Learning Curve". It's High if you look as a big picture. The first thing is to breakdown/compartmentalize your stack(Stack is nothing but like a stack of cards. But here each card is each tech e.g. React is an Tech in your tech Stack.)&lt;/p&gt;

&lt;p&gt;People will usually tell don't start with library or framework. Just start with Plain HTML, CSS, JAVASCRIPT.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/x54JG1A3WEzvEpsUuK/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/x54JG1A3WEzvEpsUuK/giphy-downsized.gif" alt="Mop the floor first"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, It's crucial to have a crisp knowledge on Fundamentals. Because the reason is very simple. End of the day you'll be working on a Enterprise. In which you probably work for your company on a budgeted project. So, All your knowledge will be compromised for their requirements. You may learn in way that suits you. But it won't fit on their belts and they'll shape it according to their needs. For example: You learn modern database system. But what if your project have that old SQL system. will you fit in?&lt;/p&gt;

&lt;p&gt;The thing you missed probably is 'Standard'. The more standard you're, The more flexible you'll be. So, immediatly don't start from Assembly language😂. Just keep this in your mind. You'll know these in long run.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#checkpoint-reached"&gt;
  &lt;/a&gt;
  Checkpoint Reached
&lt;/h1&gt;

&lt;p&gt;If you're this far. congratulations🙌. You have the patience to master the full stack.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/5wWf7GW1AzV6pF3MaVW/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/5wWf7GW1AzV6pF3MaVW/giphy-downsized.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Frontend
&lt;/h2&gt;

&lt;p&gt;If you're a beginner and new to programming world. Start with HTML, CSS, JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/"&gt;w3schools&lt;/a&gt; is the best resource for newbies. But if you wanna be sassy😎 in it. Here are my recommendations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PL7TLF4T4Tq2RNvYzF45yOeFi-O1KRAWtu"&gt;DevDreamer HTML Playlist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/playlist?list=PL7TLF4T4Tq2RCWa-ZRkEWXVtXteyZ2CjK"&gt;DevDreamer CSS Playlist&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/guides/"&gt;css-tricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#some-css-related-link-will-help-in-learning-process"&gt;
  &lt;/a&gt;
  Some CSS related link will help in learning process
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/"&gt;css-tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cubic-bezier.com/#.17,.67,.83,.67"&gt;cubic-bezier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cssgrid-generator.netlify.app/"&gt;CSS Grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flexboxfroggy.com/"&gt;CSS Flexbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redd.gitbook.io/atomic-layout/"&gt;Atomic Layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cssgradient.io/"&gt;CSS Gradiant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#for-javascript"&gt;
  &lt;/a&gt;
  For JavaScript
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://javascript.info/"&gt;JavaScript.info&lt;/a&gt; Beginner Friendly&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;MDN Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wanna-get-more-sassy"&gt;
  &lt;/a&gt;
  Wanna get more sassy!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;use MDN for everything 😂 &lt;a href="https://developer.mozilla.org/en-US/docs/Web"&gt;MDN Docs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Learn TypeScript for making better JavaScript codes &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you're strong enough to survive in web-dev-world. But that's not enough. why?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frontend-framework"&gt;
  &lt;/a&gt;
  Frontend Framework
&lt;/h2&gt;

&lt;p&gt;However we're going work with more and more pages and logics right?&lt;/p&gt;

&lt;p&gt;So, we need some tools or heavy-lifters to get things done in a organized and maintainable way for long-run. So, we're going to use library/Framework in it.&lt;/p&gt;

&lt;p&gt;Here comes the problem of 'This or That'. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Which framework library should I learn?&lt;/li&gt;
&lt;li&gt;Which is best?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The question is more like Batman or Ironman, Superman or Thor. Each of them is best in their universe. So, It's not necessary to stick with one. Also remember, End of the Day it's all corporate.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Don't put all your apples in one basket! - EDWARD SNOWDEN&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you're beginner. Not in programming, But in web dev. Start with React. Since, it has good community and learning curve too simple. Once you got the hold. Try Vue, Svelte, Gatsby, Next.js, etc,.&lt;/p&gt;

&lt;p&gt;Checkout this youtube channel. It's awesome "one stop shop" for React:&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UC80PWRj_ZU8Zu0HSMNVwKWw"&gt;CODEVOLTION&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/XYrHWGJPtaQMM/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/XYrHWGJPtaQMM/giphy.gif" alt="Knowledge is power"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backend"&gt;
  &lt;/a&gt;
  Backend
&lt;/h2&gt;

&lt;p&gt;oof! finally the second-half 😒&lt;code&gt;kill me right!&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here's the another 'This or That'. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;which language for backend?&lt;/li&gt;
&lt;li&gt;Is node.js is secure like java, Python?&lt;/li&gt;
&lt;li&gt;SEO, ORM, blah blah.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;😂 This is were I stuck myself for long time. It's a black hole if you're learning on your own. &lt;/p&gt;

&lt;p&gt;The only way is start with one. Once you got the rhythm then learn new things. Have a standard knowledge about one thing(helps you in crucial scenario).&lt;/p&gt;

&lt;p&gt;My recommended resource for NodeJS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TNV0_7QRDwY"&gt;Node.js with REST_API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#api-is-the-most-vital-part"&gt;
  &lt;/a&gt;
  API is the most vital part
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;NOTE: You don't really need to learn Database side to learn BACKEND just know why's and what's. when you're doing things that you do!&lt;/code&gt;&lt;br&gt;
Learn graphql because most of the enterprises moving from REST to GraphQL. It's more like JQuery thing!. &lt;/p&gt;

&lt;p&gt;GraphQL is simple when you keep things simple.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.howtographql.com/"&gt;HowToGraphQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://graphql.org/learn/"&gt;GraphQL Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#database-side"&gt;
  &lt;/a&gt;
  Database side
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o6UBgDNiVZHmypHuU/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o6UBgDNiVZHmypHuU/giphy.gif" alt="Kill me"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;I know it's killing you already. But com'on guys!&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You may pick whatever you want. Unless or untill your boss thinks that you're a moron😂. Yeah that's true modern database can do anything. &lt;/p&gt;

&lt;p&gt;For example: If you see SQLite. It store every data not as traditional table format but as files.&lt;br&gt;
But If you proposed this idea to an enterprise which has terabytes of data!. you'll be kicked out of the office right away. I'm not trolling SQLite 😅😅😅 anyway some enterprise using SQLite.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/YMdekbXhqGkyyn048e/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/YMdekbXhqGkyyn048e/giphy-downsized.gif" alt="They're just jokes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Recommendation is Go for MongoDB or PostgreSQL. Both awesome, beginner friendly, had good community support.&lt;/p&gt;

&lt;p&gt;After learning all the above go for these link: &lt;a href="https://fullstackopen.com/en/"&gt;https://fullstackopen.com/en/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's an anaconda article, I know. But I need to make sure that the content I provide is pretty good and meaningful.&lt;/p&gt;

&lt;p&gt;Have a blast🎉. Never get tired. If you got just watch something that get you out of the box for sometime!&lt;br&gt;
&lt;a href="https://i.giphy.com/media/IffwQuk0uYwOIJEpon/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/IffwQuk0uYwOIJEpon/giphy-downsized.gif" alt="IDC"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>fullstack</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>All of Your React Utility Hooks in One Place</title>
      <author>PRANTA Dutta</author>
      <pubDate>Wed, 19 May 2021 04:20:42 +0000</pubDate>
      <link>https://dev.to/pranta/all-of-your-react-util-hooks-in-one-place-3kid</link>
      <guid>https://dev.to/pranta/all-of-your-react-util-hooks-in-one-place-3kid</guid>
      <description>&lt;p&gt;# 🛠 All of Your Utility Hooks in One Place.&lt;/p&gt;

&lt;p&gt;When using react(or other frameworks like NextJS and Gatsby), we often need to use some kind of hooks to make our lives&lt;br&gt;
a bit easier. But each time, we have to create these hooks ourselves. So I created this library where you can find all&lt;br&gt;
the utility hooks you ever need (Kinda).&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#these-lines-are-extremely-important"&gt;
  &lt;/a&gt;
  These Lines are &lt;em&gt;Extremely&lt;/em&gt; Important
&lt;/h3&gt;

&lt;p&gt;I don't own any of these hooks. I found these hooks on the internet and every time I wanted to use them, I had to search&lt;br&gt;
again and again. So I created this library so that I can use it anytime I want. Don't worry you can use it too 🤝🤝🤝&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#original-hooks-taken-from-usehookts-amp-usehookcom"&gt;
  &lt;/a&gt;
  Original Hooks Taken from &lt;a href="https://usehooks-typescript.com/"&gt;useHook.ts&lt;/a&gt; &amp;amp; &lt;a href="https://usehooks.com/"&gt;useHook.com&lt;/a&gt;
&lt;/h3&gt;
&lt;h3&gt;
  &lt;a href="#what-are-react-hooks"&gt;
  &lt;/a&gt;
  What are React Hooks?
&lt;/h3&gt;

&lt;p&gt;Hooks are a new addition in React that lets you use state and other React features without writing a class. This library&lt;br&gt;
provides easy to understand code examples to help you learn how hooks work and inspire you to take advantage of them in&lt;br&gt;
your next project. Learn more from &lt;a href="https://reactjs.org/docs/hooks-overview.html"&gt;react docs&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Doesn't have any Dependency (Except for React)&lt;/li&gt;
&lt;li&gt;Only 5 KB in Minified/GZIP&lt;/li&gt;
&lt;li&gt;100% Modular. Just Use the Hooks you need.&lt;/li&gt;
&lt;li&gt;Detailed Documentation with Example&lt;/li&gt;
&lt;li&gt;Written in Typescript&lt;/li&gt;
&lt;li&gt;Most of the hooks are Generic&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#current-hooks"&gt;
  &lt;/a&gt;
  Current Hooks
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#useasync"&gt;useAsync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#usedebounce"&gt;useDebounce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#useelementsize"&gt;useElementSize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#useeventlistener"&gt;useEventListener&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#usefetch"&gt;useFetch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#usehover"&gt;useHover&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#useimageonload"&gt;useImageOnLoad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#useintersectionobserver"&gt;useIntersectionObserver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#useinterval"&gt;useInterval&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#useisclient"&gt;useIsClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#usekeypress"&gt;useKeyPress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#uselocalstorage"&gt;useLocalStorage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#uselockedbody"&gt;useLockedBody&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#usemedia"&gt;useMedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#useonclickoutside"&gt;useOnClickOutside&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#useonscreen"&gt;useOnScreen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#useprevious"&gt;usePrevious&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#usescreen"&gt;useScreen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#usescript"&gt;useScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#usetimeout"&gt;useTimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#usetoggle"&gt;useToggle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#usewindowsize"&gt;useWindowSize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#usesessionstorage"&gt;useSessionStorage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prantaDutta/react-util-hooks#usesessionstoragewithobject"&gt;useSessionStorageWithObject&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;
&lt;h3&gt;
  &lt;a href="#important"&gt;
  &lt;/a&gt;
  Important
&lt;/h3&gt;

&lt;p&gt;This library doesn't have any default export.&lt;/p&gt;

&lt;p&gt;So you shouldn't do the following (remember you can, but you shouldn't):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactUtilHooks&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-util-hooks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="c1"&gt;// OR&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;ReactUtilHooks&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-util-hooks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead, you should only import the hook/hooks you need. Let's say, you only need useClient hook. Do the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useIsClient&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-util-hooks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="c1"&gt;// OR&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useIsClient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-util-hooks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way, your bundle size will be much smaller, and your app performance will be better. You can also do not&lt;br&gt;
recommended way&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactUtilHooks&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-util-hooks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="c1"&gt;// Not Recommended&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ReactUtilHooks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useIsClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will find detailed documentation with examples in &lt;a href="https://github.com/prantaDutta/react-util-hooks#readme"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;I didn't write any of these hooks. But I edited and optimized them and bundled them together.&lt;/p&gt;

&lt;p&gt;I really hope you like it and feel free to send a PR to add a new hook.&lt;/p&gt;

&lt;p&gt;If you want, you can also send a hook request or create a bug &lt;a href="https://github.com/prantaDutta/react-util-hooks/issues"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, this is my first blog post, so I really hope this isn't too bad.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

</description>
      <category>react</category>
      <category>hooks</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
  </channel>
</rss>
