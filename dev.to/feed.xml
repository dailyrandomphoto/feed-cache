<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>JavaScript for Beginners: Chapter 1 - Variables</title>
      <author>Danish Saleem</author>
      <pubDate>Wed, 01 Dec 2021 12:43:11 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/javascript-for-beginners-chapter-1-variables-j8g</link>
      <guid>https://dev.to/mrdanishsaleem/javascript-for-beginners-chapter-1-variables-j8g</guid>
      <description>&lt;p&gt;This first chapter is all about variables, the way to declare and change them as well as some of the naming rules and different types of variables.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-variables"&gt;
  &lt;/a&gt;
  What are variables?
&lt;/h2&gt;

&lt;p&gt;A variable is named storage for data. Each variable must have a unique name which is called an identifier. Variables can be hard-coded to hold predefined values of dynamically generated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#declaring-variables"&gt;
  &lt;/a&gt;
  Declaring variables
&lt;/h2&gt;

&lt;p&gt;You can easily declare a variable using the &lt;code&gt;let&lt;/code&gt; keyword followed by the name of the variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You have the option to declare a variable and assign a value later or do both at once.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;loggedIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#changing-value"&gt;
  &lt;/a&gt;
  Changing value
&lt;/h2&gt;

&lt;p&gt;You can easily change the value of a variable by easily assigning a new one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;testVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;testVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript dynamically types so you can even assign a value of a different type (although that is not advised)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;testVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;testVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;testVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#naming-rules"&gt;
  &lt;/a&gt;
  Naming rules
&lt;/h2&gt;

&lt;p&gt;JavaScript variable names can only contain &lt;code&gt;letters&lt;/code&gt;, &lt;code&gt;numbers&lt;/code&gt; or the &lt;code&gt;symbols $&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;However, the first character can't be a number and you can't use reserved keywords (such as &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;return&lt;/code&gt;) for variable names.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Valid variable names&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;variable_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user_1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Invalid variable names&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#constants"&gt;
  &lt;/a&gt;
  Constants
&lt;/h2&gt;

&lt;p&gt;If the value of your variable is constant and won't be re-assigned you can use the &lt;code&gt;const&lt;/code&gt; keyword instead of &lt;code&gt;let&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;welcomeMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are useful to create a distinction between constant and changeable variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isLoggedIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#uppercase-constants"&gt;
  &lt;/a&gt;
  Uppercase Constants
&lt;/h2&gt;

&lt;p&gt;It has also become common practice to use constant aliases for known values that are used throughout a site or application. These are written with uppercase letters and underscores.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PRIMARY_BRAND_COLOUR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#1c3aa4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CONTACT_EMAIL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dev@mail.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;COMPANY_REG_NUMBER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;9876543210&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is technically no difference between them as far as JavaScript is concerned, it is just a style choice to differentiate them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-about-var"&gt;
  &lt;/a&gt;
  What about var?
&lt;/h2&gt;

&lt;p&gt;You can still declare variables using &lt;code&gt;var&lt;/code&gt;, however, the practice is now considered outdated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Old standard&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// New standard&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Variable declared with &lt;code&gt;var&lt;/code&gt; aren't scoped and have various other flaws, so unless you need to support a really old browser it's best to use &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; variables.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;let&lt;/code&gt; to declare variables with changeable values.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;const&lt;/code&gt; to declare constant, non-changeable values.&lt;/li&gt;
&lt;li&gt;Follow the naming rules and name your variables well.&lt;/li&gt;
&lt;li&gt;User uppercase constants for hard-coded global constant values.&lt;/li&gt;
&lt;li&gt;Don't use &lt;code&gt;var&lt;/code&gt; to declare variables unless you require legacy browser support.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect 💜
&lt;/h3&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.instagram.com/mrdanishsaleem/"&gt;Instagram&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" alt="Buy Me a Coffee" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>How we track our todo comments using GitHub Actions</title>
      <author>Michael Schuster</author>
      <pubDate>Wed, 01 Dec 2021 12:37:43 +0000</pubDate>
      <link>https://dev.to/schustmi/how-we-track-our-todo-comments-using-github-actions-2bei</link>
      <guid>https://dev.to/schustmi/how-we-track-our-todo-comments-using-github-actions-2bei</guid>
      <description>&lt;p&gt;If you're a software developer, you're probably familiar with the following scenario: You're working on a new feature or trying to fix a bug, and while reading through some code existing code you notice that there's a nicer way to write it, or maybe a potential edge case isn't handled.&lt;br&gt;
But where to go from here? Write a todo comment and let your future self handle it of course!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zoNlYZl8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aqveaauub88s9ddp7uch.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zoNlYZl8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aqveaauub88s9ddp7uch.jpg" alt="Problems for future me" width="702" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While this might not be the optimal solution, I still regularly use todo comments if the fix is too complicated to implement right away as I find it can get quite distracting to repeatedly switch to my browser and create an issue with a meaningful description.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-keep-todo-comments-in-sync-with-jira-issues"&gt;
  &lt;/a&gt;
  How to keep todo comments in sync with Jira issues
&lt;/h2&gt;

&lt;p&gt;This however brings a problem with it: these todos are separated from our Jira board so we did not take them into account when planning our sprints. &lt;br&gt;
Keeping the comments in code in sync with our Jira issues manually would require a considerable amount of effort. We would have to periodically go over the entire codebase and create issues for new todos as well as delete issues and todos if their counterpart was removed.&lt;br&gt;
Instead, we looked at multiple GitHub integrations in the Jira marketplace but couldn't find an existing solution with similar features, so we decided to implement a GitHub Action that helps us track todos automatically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T5m7ixGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnmn5jv2ggx3r0xv0s2m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T5m7ixGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnmn5jv2ggx3r0xv0s2m.png" alt="GitHub Action" width="880" height="287"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#github-actions-to-the-rescue"&gt;
  &lt;/a&gt;
  GitHub Actions to the rescue
&lt;/h2&gt;

&lt;p&gt;Each time something is pushed to the main branch, a GitHub workflow is triggered which simply calls a python script to do the heavy lifting. &lt;br&gt;
The script itself uses the following regular expression to find todo comments in our python files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;"(^[ \t]*#) TODO ?\[(LOWEST|LOW|MEDIUM|HIGH|HIGHEST|[A-Z]*?-[0-9]*?)\]:(.*$\n(\1 {2}.*$\n)*)"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't worry I won't bore you with the details of how this expression works, but it essentially means that our todo comments have to conform to a certain syntax (a comment starting with a capital TODO followed by a priority in square brackets and a colon) in order for the script to detect them.&lt;br&gt;
Once all syntactically correct todos are found, they are processed as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create issues for new todos:&lt;/strong&gt; Each time new code gets merged into the main branch of our repository, our script detects all new todos and creates Jira issues with the specified priority and description. The created issues include a github link to the actual comment for more context and are tagged with a separate label so we can quickly find them later. Additionally, we modify the comments to include a reference to the created issue which is not only used to avoid creating duplicated issues but also comes in quite handy if you come across a comment and want to for example check if there's already someone working on it.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# before
# TODO [HIGH]: Do something very important here
&lt;/span&gt;
&lt;span class="c1"&gt;# after
# TODO [ENG-123]: Do something very important here
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Delete todos for closed issues:&lt;/strong&gt; Our codebase is evolving quite quickly at the moment and we closed some obsolete issues from time to time. To automatically keep the todo comments and issues in sync, the script also deletes todo comments when the corresponding issue was closed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tag issues when a todo is deleted:&lt;/strong&gt; Now there is just one case left to handle: what if a todo comment gets deleted and the corresponding issue is still open? We decided to handle this with caution and not close the issue automatically to guard against accidentally deleted comments. Instead, our script adds a separate label to these "orphan" issues so we can easily discuss whether they should actually be closed during our planning meetings. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're interested in more details or having something similar in your projects, check out the &lt;a href="https://github.com/zenml-io/zenml/blob/f5e7f688e102db80d87a6d4ba4513fcff84a242d/scripts/update_todos.py"&gt;script&lt;/a&gt; and the accompanying &lt;a href="https://github.com/zenml-io/zenml/blob/f5e7f688e102db80d87a6d4ba4513fcff84a242d/.github/workflows/update_todos.yml"&gt;GitHub workflow&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Michael Schuster is a Machine Learning Engineer at ZenML.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>tooling</category>
      <category>github</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Day 77/100 Happy Coding!</title>
      <author>Rio Cantre</author>
      <pubDate>Wed, 01 Dec 2021 12:37:23 +0000</pubDate>
      <link>https://dev.to/riocantre/day-77100-happy-coding-179e</link>
      <guid>https://dev.to/riocantre/day-77100-happy-coding-179e</guid>
      <description>&lt;p&gt;This year I participated in the annual event hosted by Digital Ocean and partners. It was my first time joining the Hacktoberfest 2021 and there are steps you need to follow before you start your journey.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pf8mS2o7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4bc6eq73673x8blu9tg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pf8mS2o7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4bc6eq73673x8blu9tg.png" alt="banner" width="880" height="439"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;First of all you need to register to the &lt;a href="https://hacktoberfest.digitalocean.com"&gt;official website&lt;/a&gt; before participating and contribute to open source projects. Once you are officially registered, get familiar with Git and Github if you're a beginner. Furthermore, there is a &lt;a href="https://hacktoberfest.digitalocean.com/faq"&gt;FAQ section&lt;/a&gt; where you can view informations about the event. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rules"&gt;
  &lt;/a&gt;
  Rules
&lt;/h2&gt;

&lt;p&gt;The rules are simple: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;participants must contribute to open source projects&lt;/li&gt;
&lt;li&gt;submit relevant pull request that fall from the category &lt;/li&gt;
&lt;li&gt;made significant changes to the task.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you successfully submitted four or more pull request, the Project maintainers will review your contributions within 14 days.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-contributions"&gt;
  &lt;/a&gt;
  My Contributions
&lt;/h2&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/nidhisingh-1/OnlyHTML-CSS/pull/40"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg"&gt;
      &lt;span class="issue-title"&gt;
        Added Random survey form
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#40&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/RioCantre"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--iscJC6Dc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/78406788%3Fv%3D4" alt="RioCantre avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/RioCantre"&gt;RioCantre&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/nidhisingh-1/OnlyHTML-CSS/pull/40"&gt;&lt;time&gt;Oct 11, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;Hi! I added a new Project.&lt;/p&gt;
&lt;p&gt;HacktoberFest Maintainers.&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nidhisingh-1/OnlyHTML-CSS/pull/40"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/zero-to-mastery/Canvaz/pull/119"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg"&gt;
      &lt;span class="issue-title"&gt;
        Added The Black Moon Project
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#119&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/RioCantre"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--iscJC6Dc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/78406788%3Fv%3D4" alt="RioCantre avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/RioCantre"&gt;RioCantre&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/zero-to-mastery/Canvaz/pull/119"&gt;&lt;time&gt;Oct 11, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      
    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/zero-to-mastery/Canvaz/pull/119"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/pandeyom331/Sign-Up-Form/pull/22"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg"&gt;
      &lt;span class="issue-title"&gt;
        Corrected some UI interface
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#22&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/RioCantre"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--iscJC6Dc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/78406788%3Fv%3D4" alt="RioCantre avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/RioCantre"&gt;RioCantre&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/pandeyom331/Sign-Up-Form/pull/22"&gt;&lt;time&gt;Oct 17, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;Hi!
I corrected some issues and made some decent changes. Also added Font awesome CDN in my account, kindly make your own account in the future. &lt;a href="https://fontawesome.com" rel="nofollow"&gt;https://fontawesome.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hactoberfest mainteners&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pandeyom331/Sign-Up-Form/pull/22"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/Junior-Developer-Group/HacktoberPet/pull/19"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg"&gt;
      &lt;span class="issue-title"&gt;
        Added Mingkay card
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#19&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/RioCantre"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--iscJC6Dc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/78406788%3Fv%3D4" alt="RioCantre avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/RioCantre"&gt;RioCantre&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/Junior-Developer-Group/HacktoberPet/pull/19"&gt;&lt;time&gt;Oct 03, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;Hi, I added a new card titled "Mingkay".&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Junior-Developer-Group/HacktoberPet/pull/19"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#things-to-remember"&gt;
  &lt;/a&gt;
  Things to Remember
&lt;/h2&gt;

&lt;p&gt;There are repositories who are not participating to the event and must be avoided. Some pull request are not accepted because the repository or project don't follow the values of the event. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5nUp35kj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og5rminz4zav0c8k8suf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5nUp35kj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og5rminz4zav0c8k8suf.png" alt="excluded" width="460" height="185"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tXUXF7ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kon7c3cvo85dmcjl8oo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tXUXF7ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kon7c3cvo85dmcjl8oo.png" alt="not participating" width="459" height="184"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rewards"&gt;
  &lt;/a&gt;
  Rewards
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CpJPgD8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pnkhth54o9e0l5xboxox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CpJPgD8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pnkhth54o9e0l5xboxox.png" alt="Profile" width="880" height="443"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are brilliant prices you receive once your contributions are accepted as valid and relevant. It's either you choose between the following: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A Tree&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A T-Shirt&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You'll also received other perks after a successful participation. In my case, I have chosen to have a Tree. The event has a great idea to make an environmental impact on the community. Once you select a Tree, you'll get an email notifying you that your order has been received, and once your tree gets planted, afterward, you'll get an update.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tree-nation.com/plant/user/digitalocean"&gt;Link to Tree Nation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rish_0oW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gi70a6eq1duahcu18xpv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rish_0oW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gi70a6eq1duahcu18xpv.png" alt="Tree" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reflection"&gt;
  &lt;/a&gt;
  Reflection
&lt;/h2&gt;

&lt;p&gt;As a first-timer of this event, it was a pleasant experience to get involved in an annual event that promotes developers of different levels to contribute to open source projects. My Hacktoberfest 2021 journey was incredible, even though some experience was not appealing and pushed me to motivate myself to keep going despite the unforeseen events happening in the surrounding. I am grateful for this event because it helped me gain confidence and learn more about PR and open source projects. I got to know the DEV community, where I am now frequently having my experience and learning shared with others.&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>What is Google Lighthouse and Why You Should Use it</title>
      <author>Mazdak</author>
      <pubDate>Wed, 01 Dec 2021 12:33:55 +0000</pubDate>
      <link>https://dev.to/mazdak23/what-is-google-lighthouse-and-why-you-should-use-it-48ib</link>
      <guid>https://dev.to/mazdak23/what-is-google-lighthouse-and-why-you-should-use-it-48ib</guid>
      <description>&lt;p&gt;Google Lighthouse is a free and powerful review tool that helps improve the quality of our website. In fact, using Google lighthouse we can evaluate all the pages of our website. One of the great advantages of Google Lighthouse is that it is easy to use, which at the same time gives us accurate information about the pages of the website. But let’s take a closer look at what is Google Lighthouse is and why we should use it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;What is Google Lighthouse&lt;/li&gt;
&lt;li&gt;Speed ​​is one of the basic criteria&lt;/li&gt;
&lt;li&gt;How Google Lighthouse works&lt;/li&gt;
&lt;li&gt;PageSpeed ​​Insights vs Google Lighthouse&lt;/li&gt;
&lt;li&gt;How to work with Google Lighthouse&lt;/li&gt;
&lt;li&gt;Work with Google Lighthouse in Google Chrome&lt;/li&gt;
&lt;li&gt;Work with Google Lighthouse in Chrome with browser extension&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-google-lighthouse"&gt;
  &lt;/a&gt;
  What is Google Lighthouse
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vt8T4c1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xksjdkfh7p0zy2ei8sk7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vt8T4c1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xksjdkfh7p0zy2ei8sk7.png" alt="Image description" width="531" height="215"&gt;&lt;/a&gt;&lt;br&gt;
Each report provided by this tool has five parts: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;li&gt;Best Practices&lt;/li&gt;
&lt;li&gt;SEO&lt;/li&gt;
&lt;li&gt;Progressive Web App&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these sections gives you a score from zero to one hundred for reviewing web pages, so you can understand your strengths or weaknesses in each section. Google Lighthouse first examines each section and gives you a score. Google Lighthouse has a feature to click on the desired section for a better and more accurate analysis of your page and see more details. After analyzing and fixing the weaknesses of the website, you can re-analyze your page with this tool and watch the process of improving your website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#speed-%E2%80%8B%E2%80%8Bis-one-of-the-basic-criteria"&gt;
  &lt;/a&gt;
  Speed ​​is one of the basic criteria
&lt;/h2&gt;

&lt;p&gt;In fact, Google Lighthouse metrics help you understand how fast a website loads and how long it takes for a user to interact with the website. Note that website loading speed is very important in how users interact with your website. To better understand this issue, consider the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Many users say that the worst part of the UI experience is the long wait for the website pages to load.&lt;/li&gt;
&lt;li&gt;On average, it takes about 15 seconds to load most landing pages on a mobile phone.&lt;/li&gt;
&lt;li&gt;On average, 70% of users spend their time on websites with a loading speed of more than five seconds.&lt;/li&gt;
&lt;li&gt;By increasing every second of the webpage load time, the user interaction rate decreases by seven percent.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The statistics you see are a huge part of the UI experience. With the help of the Google Lighthouse tool, you can understand the performance and quality of your website. Also, according to the information obtained by using this tool, you can easily improve the status of your website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-google-lighthouse-works"&gt;
  &lt;/a&gt;
  How Google Lighthouse works
&lt;/h2&gt;

&lt;p&gt;You might think that you can simply enter the website address in the browser search bar and then find out how fast a website is loading. But website users live in different areas and have access to other internet ISPs; even the type of search and how users use them may differ. Although most website traffic is usually from mobile devices, most users do not have access to the fourth-generation (4G) and fifth-generation (5G) Internet. For this reason, Google lighthouse performs a simulation and measures the website’s loading speed with a third-generation (3G) Internet.&lt;/p&gt;

&lt;p&gt;You may now be wondering why Google is doing this. Almost every website loads with very high-speed fourth and fifth-generation internet. But most users do not have access to such high-speed internet. For this reason, Google considers the majority of users and tests websites with a three-generation Internet speed. Since Google has a similar algorithm that scans such websites, you should check your website in the same way. Google lighthouse tools will help you to do this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pagespeed-%E2%80%8B%E2%80%8Binsights-vs-google-lighthouse"&gt;
  &lt;/a&gt;
  PageSpeed ​​Insights vs Google Lighthouse
&lt;/h2&gt;

&lt;p&gt;The PageSpeed ​​Insight tool focuses only on the performance of your web pages. Still, as mentioned, the Google lighthouse tool has the ability to analyze performance, accessibility, best practices, SEO, and advanced web applications. Although the Google lighthouse tool analyzes the website more accurately and completely, what is the purpose of the PageSpeed ​​Insights tool?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b0oxf40i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i57jkplffh8pw4c3vfq9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b0oxf40i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i57jkplffh8pw4c3vfq9.png" alt="Image description" width="820" height="273"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In fact, PageSpeed ​​Insights scans the website using real-world data, while the Google lighthouse tool scans the website based on a comprehensive scan and does not necessarily use real-world data to analyze the site. Therefore, it can be said that the PageSpeed ​​Insights tool is more suitable for checking the website’s performance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-work-with-google-lighthouse"&gt;
  &lt;/a&gt;
  How to work with Google Lighthouse
&lt;/h2&gt;

&lt;p&gt;There are two ways to use this tool, both of which are very simple, easy, and understandable so that any website administrator with any amount of technical knowledge, can use this tool well. Follow us to get acquainted with two ways to do this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#work-with-google-lighthouse-in-google-chrome"&gt;
  &lt;/a&gt;
  Work with Google Lighthouse in Google Chrome
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;First, open your desired website in the Google Chrome browser.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Right-click on the website page and click Inspect (or you can press the F12 key on the keyboard).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;From the tabs, click on the Lighthouse.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;From the Device section, specify that you want to evaluate the website’s performance on mobile or desktop.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click the Generate report button to review and analyze the website.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#work-with-google-lighthouse-in-chrome-with-browser-extension"&gt;
  &lt;/a&gt;
  Work with Google Lighthouse in Chrome with browser extension
&lt;/h2&gt;

&lt;p&gt;Search for the word &lt;strong&gt;Lighthouse&lt;/strong&gt; in the &lt;a href="https://chrome.google.com/webstore/category/extensions?utm_source=chrome-ntp-icon"&gt;Chrome Web Store&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Click on the first plugin (Lighthouse) as shown.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PCb7KCmM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qiysvrps8wu9kcej4z1m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PCb7KCmM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qiysvrps8wu9kcej4z1m.png" alt="Image description" width="880" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click the Add to Chrome button to install the plugin.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HP3aw27X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2fwswyfmawvnd91n0th.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HP3aw27X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2fwswyfmawvnd91n0th.png" alt="Image description" width="880" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A window will open, click the Add extension button.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pYpuqEI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5eftws242ql3wka7ync.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pYpuqEI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5eftws242ql3wka7ync.png" alt="Image description" width="447" height="112"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enter your desired website.&lt;/p&gt;

&lt;p&gt;In the upper right corner of your browser, click on a puzzle-like icon.&lt;/p&gt;

&lt;p&gt;Click on the Lighthouse plugin.&lt;/p&gt;

&lt;p&gt;To specify the desired device, click on the gear icon, and select the desired device.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mUX5pAIz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yjobqcpg14k0i11dkqt5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mUX5pAIz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yjobqcpg14k0i11dkqt5.png" alt="Image description" width="270" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click the Generate report button to analyze and review the website.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ny_UBmb---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2kxlk00hk06fkfbafpu9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ny_UBmb---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2kxlk00hk06fkfbafpu9.png" alt="Image description" width="880" height="186"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;as you see, you can easily check and analyze the quality of the website in the shortest possible time using the powerful Google Lighthouse tool. In addition to helping you rank well in search results, this tool also provides important information about the website’s user experience. The user interface experience is a very important factor for Google, and it is certainly an important issue for a webmaster who should take it seriously.&lt;/p&gt;

&lt;p&gt;Good Luck🍀&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you for being with us until the end of this article. If you liked this article, do not forget to like and follow.❤&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>googlelighthouse</category>
      <category>seo</category>
    </item>
    <item>
      <title>How to Create a ChatBot Assistant using NextJs, TailwindCss and Strapi</title>
      <author>Shada </author>
      <pubDate>Wed, 01 Dec 2021 12:12:23 +0000</pubDate>
      <link>https://dev.to/strapi/how-to-create-a-chatbot-assistant-using-nextjs-tailwindcss-and-strapi-3ome</link>
      <guid>https://dev.to/strapi/how-to-create-a-chatbot-assistant-using-nextjs-tailwindcss-and-strapi-3ome</guid>
      <description>&lt;p&gt;Communication is key to building great brands, in this digital age we have got lots of opportunities and ways to carry out great communications. From social media to emails, to text and calls, the limit of communications has been tested. One major innovation in communication has got to be ChatBots.&lt;/p&gt;

&lt;p&gt;Simply put a &lt;code&gt;chatbot&lt;/code&gt; is a software application used to conduct an online chat conversation via text or text-to-speech. It can be used to substitute a real chat with a live human agent. It has been used in various scenarios ranging but not limited to personal assistants, customer support, booking of tickets, e-shopping, also e-banking to mention a few.&lt;/p&gt;

&lt;p&gt;This tutorial will show you how to build a Rule-Based Chatbot Assistant using Next.js and Tailwind CSS as frontend and Strapi headless CMS as backend. .&lt;/p&gt;

&lt;p&gt;You can find the link to the &lt;a href="https://github.com/chyke007/strapi-nextjs-tutorial-chatbot"&gt;finished frontend code here&lt;/a&gt;, as well as the &lt;a href="https://github.com/chyke007/strapi-tutorial-chatbot"&gt;backend code here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-using-chatbot"&gt;
  &lt;/a&gt;
  Advantages of using Chatbot
&lt;/h2&gt;

&lt;p&gt;It is necessary that before we proceed further into this article, we have a picture of what chatbot brings to the table when used adequately. Some of the advantages of using a chatbot include:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Availability: Since a chatbot is a software application that can be hosted, it means it doesn't sleep, hence it is always available at any time of the day. This gives a company or person a great brand image that at any time of the day clients can get support on their varying requests.&lt;/li&gt;
&lt;li&gt;Cost reduction: As an application that can be deployed in multiple places, it reduces the cost of running a large number of customer care representatives.&lt;/li&gt;
&lt;li&gt; Efficiency: A single chatbot can be deployed in various places and also simultaneously attend to multiple requests at once.&lt;/li&gt;
&lt;li&gt;Improved online presence: Some chatbots allow for the integration to other messaging platforms, this allows a consistent response sent across multiple platforms and which leads to improved brand identity.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;p&gt;Before starting this tutorial, you need to have&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node.js installed on your local machine (v12 or v14) - Check this &lt;a href="https://codex.so/how-to-install-the-latest-node-js-npm-and-yarn"&gt;tutorial&lt;/a&gt; for instructions on how to install Node.js&lt;/li&gt;
&lt;li&gt;Basic understanding of Strapi - Get started with this &lt;a href="https://strapi.io/documentation/developer-docs/latest/getting-started/quick-start.html"&gt;quick guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Basic knowledge of &lt;a href="https://nextjs.org/docs/getting-started"&gt;Next.js&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Basic knowledge of &lt;a href="https://tailwindcss.com/docs"&gt;Tailwind CSS&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-next-js"&gt;
  &lt;/a&gt;
  What is Next Js
&lt;/h2&gt;

&lt;p&gt;Next.js is an awesome React framework for building highly dynamic applications. It comes with pre-rendering, automatic code-splitting amongst many other great features out of the box.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tailwind-css"&gt;
  &lt;/a&gt;
  What is Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;Tailwind CSS is a utility-first CSS framework for rapidly building custom user interfaces. With Tailwind CSS, we write our CSS directly in our HTML classes. This is quite useful as we don't need to import an external stylesheet or use a separate library for UI designs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-strapi"&gt;
  &lt;/a&gt;
  What is Strapi
&lt;/h2&gt;

&lt;p&gt;Strapi is a Node.js open-source headless CMS that allows us to develop APIs and manage content easily without the hassle of building out a project from scratch. It allows for customization and self-hosting as opposed to the rigid traditional CMS we are used to.&lt;/p&gt;

&lt;p&gt;We can easily build out APIs faster and consume the contents via APIs using any REST API client or GraphQL.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scaffolding-a-strapi-project"&gt;
  &lt;/a&gt;
  Scaffolding a Strapi Project
&lt;/h2&gt;

&lt;p&gt;To setup a new Strapi Project is quite straightforward, just run this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    npx create-strapi-app chatbot-assistant &lt;span class="nt"&gt;--quickstart&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change &lt;code&gt;chatbot-assistant&lt;/code&gt; to the preferred name of your project&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nb: During the setup, we would not be using any Strapi template&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This would install and create a Strapi application and set up the project locally.&lt;/p&gt;

&lt;p&gt;After installation, the browser would open a page on localhost:1337 which would prompt to set up a super admin account to proceed with Strapi.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-the-interchange-collection"&gt;
  &lt;/a&gt;
  Building the Interchange collection
&lt;/h2&gt;

&lt;p&gt;Next, we will create a new collection type that will store the details of each question and their respective answers.&lt;/p&gt;

&lt;p&gt;Hence, create a collection type called ‘interchange’ that has these fields: &lt;code&gt;question&lt;/code&gt;, &lt;code&gt;answer&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D0aytoBs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636572411431_Screenshot%2B2021-11-10%2Bat%2B20.26.45.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D0aytoBs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636572411431_Screenshot%2B2021-11-10%2Bat%2B20.26.45.png" alt="" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clicking “Continue” would bring up another screen to select the fields for this collection. Choose the “Text” field from the list and provide &lt;code&gt;question&lt;/code&gt; as its name. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O3OuwMmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636572552842_Screenshot%2B2021-11-10%2Bat%2B20.29.07.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O3OuwMmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636572552842_Screenshot%2B2021-11-10%2Bat%2B20.29.07.png" alt="" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, we select the &lt;code&gt;Long Text&lt;/code&gt; type in the Base Settings, this would allow us to enter longer and more descriptive questions when creating an &lt;code&gt;interchange&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xVRfsUe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636572663219_Screenshot%2B2021-11-10%2Bat%2B20.30.59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xVRfsUe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636572663219_Screenshot%2B2021-11-10%2Bat%2B20.30.59.png" alt="" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, we proceed to the  “Advanced settings” tab and check the “Required field” box to ensure this field is required when creating a new interchange. Also, we check the “Unique field” box to prevent having the same question our interchange.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gtEajNuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636572861278_Screenshot%2B2021-11-10%2Bat%2B20.34.17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gtEajNuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636572861278_Screenshot%2B2021-11-10%2Bat%2B20.34.17.png" alt="" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We click on the Add another field to add the answer field. Below is a table showing the properties for both fields in this collection:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Field Name&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Field Type&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Unique&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;question&lt;/td&gt;
&lt;td&gt;long text&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;answer&lt;/td&gt;
&lt;td&gt;rich text&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#seeding-strapi"&gt;
  &lt;/a&gt;
  Seeding Strapi
&lt;/h2&gt;

&lt;p&gt;We would proceed next to define the questions and respective answers given by our bot.&lt;/p&gt;

&lt;p&gt;To add data to the collection, we select the &lt;code&gt;Interchanges&lt;/code&gt; Collection on the left sidebar, click “Add New Interchanges” and fill in the details.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xT0TnOks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636573966990_Screenshot%2B2021-11-10%2Bat%2B20.52.41.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xT0TnOks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636573966990_Screenshot%2B2021-11-10%2Bat%2B20.52.41.png" alt="Interchanges collection" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this tutorial, I would be seeding the interchange with an about me interchange in mind, so our bot can act as an assistant that tells visitors more about us and our services. After seeding our collection looks thus:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UqlvmqiL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636582185036_Screenshot%2B2021-11-10%2Bat%2B23.09.41.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UqlvmqiL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636582185036_Screenshot%2B2021-11-10%2Bat%2B23.09.41.png" alt="Seeded Interchanges collection" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#allowing-public-access"&gt;
  &lt;/a&gt;
  Allowing Public access
&lt;/h2&gt;

&lt;p&gt;By default, whenever you create an API, Strapi creates six endpoints from the name given to the API. The endpoints generated for &lt;code&gt;Interchange&lt;/code&gt;  should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ajpZtLQk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636582427444_Screenshot%2B2021-11-10%2Bat%2B23.13.40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ajpZtLQk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636582427444_Screenshot%2B2021-11-10%2Bat%2B23.13.40.png" alt="" width="880" height="609"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By default, they’re all going to be restricted from public access. We need to tell Strapi that you’re okay with exposing these checked endpoints to the public. Go to &lt;em&gt;Settings &amp;gt; Users &amp;amp; Permissions Plugin &amp;gt; Roles&lt;/em&gt; and click to edit the &lt;em&gt;Public Role&lt;/em&gt;. Next, scroll down to permissions and check &lt;code&gt;find&lt;/code&gt;  for &lt;code&gt;Interchange&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This endpoint: &lt;a href="http://localhost:1337/interchanges"&gt;http://localhost:1337/interchanges&lt;/a&gt; should now be available. And the sample response this :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    [{"id":2,"question":"What are your skills?","answer":"I am skilled at frontend development as well as backend development.","published_at":"2021-11-10T22:04:01.379Z","created_at":"2021-11-10T22:00:18.983Z","updated_at":"2021-11-10T22:04:01.445Z"},
    {"id":3,"question":"How can I reach you?","answer":"You can reach me via my phone line: 0900000000 or via my twitter handle: interchange_demo.","published_at":"2021-11-10T22:04:09.033Z","created_at":"2021-11-10T22:01:07.886Z","updated_at":"2021-11-10T22:04:09.039Z"},
    {"id":4,"question":"How long have you been a developer?","answer":"6 years.","published_at":"2021-11-10T22:04:15.757Z","created_at":"2021-11-10T22:01:50.037Z","updated_at":"2021-11-10T22:04:15.765Z"},
    {"id":5,"question":"Do you have leadership experience?","answer":"Yes, I do.","published_at":"2021-11-10T22:04:21.346Z","created_at":"2021-11-10T22:02:23.115Z","updated_at":"2021-11-10T22:04:21.354Z"},
    {"id":6,"question":"What other skills do you have apart from software development?\n","answer":"I am a technical writer and also a community builder.","published_at":"2021-11-10T22:04:26.091Z","created_at":"2021-11-10T22:03:21.103Z","updated_at":"2021-11-10T22:04:26.102Z"}]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#scaffolding-a-nextjs-project"&gt;
  &lt;/a&gt;
  Scaffolding a NextJs project
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Create a Next.js app&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To create a Next.js app, open your terminal, &lt;code&gt;cd&lt;/code&gt; into the directory you’d like to create the app in, and run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    npx create-next-app &lt;span class="nt"&gt;-e&lt;/span&gt; with-tailwindcss nextjs-chatbot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This would also configure Tailwind CSS with the project&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run the Next.js development server&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Next we &lt;code&gt;cd&lt;/code&gt; into the newly created directory, in our case that would be &lt;code&gt;nextjs-chatbot&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="nb"&gt;cd &lt;/span&gt;nextjs-chatbot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After which we start up the development server, by running this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything was set up fine, the next.js server should now be running on &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; we should get this shown on our browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vr2ocKp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634387555599_Screenshot%2B2021-10-16%2Bat%2B13.32.30.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vr2ocKp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634387555599_Screenshot%2B2021-10-16%2Bat%2B13.32.30.png" alt="" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-nextjs-components"&gt;
  &lt;/a&gt;
  Building NextJs Components
&lt;/h2&gt;

&lt;p&gt;Next, we proceed to any text editor of our choice to develop the rest of the application. We use Visual Studio Code for this tutorial. Opening up the installed project, we should have a folder structure such as this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FkP5Flqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636639126217_Screenshot%2B2021-11-11%2Bat%2B14.58.42.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FkP5Flqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_61EC144653D77A5A3225C05DD53ECF56DD8B12AF0D4564DE52DDD1C630653BE1_1636639126217_Screenshot%2B2021-11-11%2Bat%2B14.58.42.png" alt="" width="636" height="580"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To begin the design of the interface, we would remove all the content of the index.js file which is found inside the &lt;code&gt;pages&lt;/code&gt; folder, this is the entry point of the NextJs project. We replace it with the content below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import Head from 'next/head'
    import { useState, useEffect } from 'react'
    import { createMarkup, tranformInterchanges, showBotTyping, getBotAnswer, fetchQuery } from '../utils/helper'
    export default function Home( { interchanges }) {
      const [userQuestion, setUserQuestion] = useState('')
      const [allow, setAllow] = useState(false)
      const [interchange, setInterchange] = useState([])

    useEffect(async () =&amp;gt; {
     await showBotTyping(setInterchange, [], setAllow)
     setInterchange([{
      owner: false,
      text: tranformInterchanges(interchanges, true)
    }])
    }, [interchanges])

    const handleSubmit = async (e) =&amp;gt; {
      e.preventDefault()
      if(!userQuestion || !allow) return
      const uQ = userQuestion
      const newInterchange = [...interchange, {
        owner: true,
        text: userQuestion
      }]
      setInterchange(newInterchange)
      setUserQuestion('')
      setAllow(false)
      getBotAnswer(interchanges, setInterchange,  uQ, newInterchange, setAllow)
    }
      return (
        &amp;lt;div className="flex flex-col font-mono items-center justify-center min-h-screen"&amp;gt;
          &amp;lt;Head&amp;gt;
            &amp;lt;title&amp;gt;ChatBot Assistant&amp;lt;/title&amp;gt;
            &amp;lt;link rel="icon" href="/favicon.ico" /&amp;gt;
          &amp;lt;/Head&amp;gt;
          &amp;lt;form className="flex flex-col w-full flex-1" onSubmit={handleSubmit}&amp;gt;

            &amp;lt;header className="flex w-full h-24 fixed bg-black border-b"&amp;gt;

              &amp;lt;span className="flex items-center text-white font-bold text-lg p-2"&amp;gt; Bot Assistant&amp;lt;/span&amp;gt;
           &amp;lt;/header&amp;gt;
            &amp;lt;div className="flex flex-col mt-24 bg-gray-200  overflow-scroll p-2 w-full" style={{ height: "80vh"}}&amp;gt;
            {interchange.map((chat,i) =&amp;gt; (
              chat.owner ? 
              &amp;lt;div key={i} className = "user flex flex-row my-2 w-full p-2"&amp;gt;
              &amp;lt;span className = "w-2/3"&amp;gt;&amp;lt;/span&amp;gt;
              &amp;lt;span className = "w-1/3 bg-gray-100 p-2 rounded"&amp;gt;
               {chat.text}
              &amp;lt;/span&amp;gt;
            &amp;lt;/div&amp;gt;
             :   
              &amp;lt;div key={i} className = "bot my-2 bg-gray-100 w-1/2 lg:w-1/3  p-2 rounded"&amp;gt;
                &amp;lt;span dangerouslySetInnerHTML={createMarkup(chat.text)} /&amp;gt;
              &amp;lt;/div&amp;gt;
            ))}
            &amp;lt;div id="scrollTo"&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;footer className = "flex flex-row justify-between items-center p-1 h-5/6  w-full -bottom-5"&amp;gt;
            &amp;lt;div className = "flex flex-row justify-between flex-1 bg-white w-full"&amp;gt;
              &amp;lt;input className = " bg-gray-200 w-2/3 p-2 " placeholder="Type a message" value={userQuestion} onChange={ (e) =&amp;gt; { setUserQuestion(e.target.value)}}/&amp;gt;
              &amp;lt;button className = " bg-black p-2 ml-2 w-1/3  text-white" type="submit"&amp;gt; Send&amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;/footer&amp;gt;
          &amp;lt;/form&amp;gt;

        &amp;lt;/div&amp;gt;
      )
    }

    export async function getStaticProps() {
      const interchanges = await fetchQuery('interchanges')
      return {
        props: {
          interchanges
        }
      }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#explanation-of-above-code"&gt;
  &lt;/a&gt;
  Explanation of above code
&lt;/h2&gt;

&lt;p&gt;The above code is used to display the UI for the chat interface, that is both the messages, input area as well and the send button. &lt;/p&gt;

&lt;p&gt;In the upper section we imported the helper function from a helper.js file, these functions would be used to make the app functional:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import Head from 'next/head'
    import { useState, useEffect } from 'react'
    import { createMarkup, tranformInterchanges, showBotTyping, getBotAnswer, fetchQuery } from '../utils/helper'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, using the useState hooks, we create multiple variables we would use later in the app to achieve various purposes: &lt;br&gt;
The &lt;code&gt;userQuestion&lt;/code&gt; is used to keep track of the current question  being typed by the user, that is the text in the input box.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;allow&lt;/code&gt; state is used to prevent a user from sending multiple messages when the bot is currently still replying to a previously sent message.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;interchange&lt;/code&gt; state is used to store internally the messages between both the &lt;code&gt;bot&lt;/code&gt; and the &lt;code&gt;user&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;      const [userQuestion, setUserQuestion] = useState('')
      const [allow, setAllow] = useState(false)
      const [interchange, setInterchange] = useState([])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The portion of code in the &lt;code&gt;useEffect&lt;/code&gt; fires once the app is started and does the following:&lt;br&gt;
Firstly, it shows an animation of the bot typing for a few seconds.&lt;/p&gt;

&lt;p&gt;Next, it sets the first/default message sent by the bot to the user, this message contains the question gotten from the &lt;code&gt;Strapi API&lt;/code&gt; when the app was started.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    useEffect(async () =&amp;gt; {
     await showBotTyping(setInterchange, [], setAllow)
     setInterchange([{
      owner: false,
      text: tranformInterchanges(interchanges, true)
    }])
    }, [interchanges])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;handleSubmit&lt;/code&gt;  function is the handler that gets called once the user sends their message to the bot. &lt;/p&gt;

&lt;p&gt;We only allow a successful submit if the user indeed has entered value in the text box and also only if the bot doesn’t have a question it is currently processing.&lt;/p&gt;

&lt;p&gt;Next, add the new question of the user into the interchange state, remove the typed text of the user from the input box and set the allow state to false, to prevent the user from sending another text till the bot returns with a result.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;getBotAnswer&lt;/code&gt; helper function  is then used to get the answer from the bot and update the UI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const handleSubmit = async (e) =&amp;gt; {
      e.preventDefault()
      if(!userQuestion || !allow) return
      const uQ = userQuestion
      const newInterchange = [...interchange, {
        owner: true,
        text: userQuestion
      }]
      setInterchange(newInterchange)
      setUserQuestion('')
      setAllow(false)
      getBotAnswer(interchanges, setInterchange,  uQ, newInterchange, setAllow)
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As can be seen in the &lt;code&gt;index.js&lt;/code&gt; file, we imported a &lt;code&gt;helper.js&lt;/code&gt; file. This means we need to create this file, to do this we create a folder at the root of our application called &lt;code&gt;utils&lt;/code&gt; and then create a file in it called &lt;code&gt;helper.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next, copy the content of the file below into the newly created &lt;code&gt;helper.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const baseUrl = process.env.BASE_URL || 'localhost:1337'
    export const createMarkup = (text) =&amp;gt; {
      return {__html: text};
    }
    export const tranformInterchanges = (interchanges, initial = false) =&amp;gt; {
      let initialText = initial ? `&amp;lt;b&amp;gt;Welcome to my page, glad to have you here 🥰&amp;lt;/b&amp;gt; &amp;lt;br/&amp;gt;
     Tell me what you would like to know: &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt; `: ''

      interchanges.map((e, i) =&amp;gt; {
          initialText += `${(i+1)}. ${e.question} &amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt;`
      })
      return initialText
    }
    export const searchInterchange = (interchanges, question) =&amp;gt; {
      let result = interchanges.find(e =&amp;gt; e.question.toLowerCase().includes(question.toLowerCase()))
      if(result) return result.answer
      return `Cant seem to understand your question, please try again 😔&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
        Here are the options again: &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;
        ${tranformInterchanges(interchanges)}
      `
    }

    export const showBotTyping = async (setInterchange, prevState, setAllow) =&amp;gt; {
      scrollDown()
      await new Promise(resolve =&amp;gt; setTimeout(resolve, 1000));
      setInterchange([...prevState, {
        owner: false,
        text: 'Bot Assistant is typing.'
      }])
      scrollDown()
      await new Promise(resolve =&amp;gt; setTimeout(resolve, 1000));
      setInterchange([...prevState, {
        owner: false,
        text: 'Bot Assistant is typing..'
      }])
      scrollDown()
      await new Promise(resolve =&amp;gt; setTimeout(resolve, 1000));
      setInterchange([...prevState, {
        owner: false,
        text: 'Bot Assistant is typing...'
      }])
      scrollDown()

      await new Promise(resolve =&amp;gt; setTimeout(resolve, 1000));
      setAllow(true)
      scrollDown()
    }

    export const getBotAnswer = async (interchanges, setInterchange, question, prevState, setAllow) =&amp;gt; {
      await showBotTyping(setInterchange, prevState, setAllow)
      setInterchange([...prevState, {
        owner: false,
        text: searchInterchange(interchanges,question)
      }])
      scrollDown()
    }

    const scrollDown = () =&amp;gt; {
      document.getElementById('scrollTo').scrollIntoView({behavior: "smooth", block: "start"});
    }

    export const fetchQuery = async (path, params = null) =&amp;gt; {
      let url
      if (params !== null) {
        url = `${baseUrl}/${path}/${params}`
      } else {
        url = `${baseUrl}/${path}`
      }
      const response = await fetch(`http://${url}`)
      const data = await response.json()
      return data
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#explanation-of-above-code"&gt;
  &lt;/a&gt;
  Explanation of above code
&lt;/h2&gt;

&lt;p&gt;The above code contains various helper functions that are used in the app. &lt;/p&gt;

&lt;p&gt;First, we set the &lt;code&gt;base URL&lt;/code&gt; for the API, which in our case is &lt;code&gt;localhost:1337&lt;/code&gt; but if we eventually host the &lt;code&gt;Strapi API&lt;/code&gt;, we would then update the &lt;code&gt;BASE_URL&lt;/code&gt; in the &lt;code&gt;.env&lt;/code&gt; file to the remote &lt;code&gt;Strapi API&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Next, we use &lt;code&gt;createMarkup&lt;/code&gt; to show the messages from the bot with any HTML formatting it comes with.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const baseUrl = process.env.BASE_URL || 'localhost:1337'
    export const createMarkup = (text) =&amp;gt; {
      return {__html: text};
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;tranformInterchanges&lt;/code&gt; function is used to display the first message sent by the bot to the user, which contains all possible questions that can be asked in a finely formatted way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    export const tranformInterchanges = (interchanges, initial = false) =&amp;gt; {
      let initialText = initial ? `&amp;lt;b&amp;gt;Welcome to my page, glad to have you here 🥰&amp;lt;/b&amp;gt; &amp;lt;br/&amp;gt;
     Tell me what you would like to know: &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt; `: ''

      interchanges.map((e, i) =&amp;gt; {
          initialText += `${(i+1)}. ${e.question} &amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt;`
      })
      return initialText
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;searchInterchange&lt;/code&gt; is the heart of the app, it is where all user questions are scanned to see if there is an adequate response for it. If there is, it returns a response from the provided &lt;code&gt;answers&lt;/code&gt; else it returns a response indicating that no results were found while and also displaying all questions the user can ask.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    export const searchInterchange = (interchanges, question) =&amp;gt; {
      let result = interchanges.find(e =&amp;gt; e.question.toLowerCase().includes(question.toLowerCase()))
      if(result) return result.answer
      return `Cant seem to understand your question, please try again 😔&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
        Here are the options again: &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;
        ${tranformInterchanges(interchanges)}
      `
    }

    export const showBotTyping = async (setInterchange, prevState, setAllow) =&amp;gt; {
      scrollDown()
      await new Promise(resolve =&amp;gt; setTimeout(resolve, 1000));
      setInterchange([...prevState, {
        owner: false,
        text: 'Bot Assistant is typing.'
      }])
      scrollDown()
      await new Promise(resolve =&amp;gt; setTimeout(resolve, 1000));
      setInterchange([...prevState, {
        owner: false,
        text: 'Bot Assistant is typing..'
      }])
      scrollDown()
      await new Promise(resolve =&amp;gt; setTimeout(resolve, 1000));
      setInterchange([...prevState, {
        owner: false,
        text: 'Bot Assistant is typing...'
      }])
      scrollDown()

      await new Promise(resolve =&amp;gt; setTimeout(resolve, 1000));
      setAllow(true)
      scrollDown()
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;showBotTyping&lt;/code&gt; is used to mimic a human, it gives the bot a human feeling by delaying its response a bit and using that time to display a message that the bot is typing. This typing animation would be removed from the chat history once a response comes back from the bot.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    export const showBotTyping = async (setInterchange, prevState, setAllow) =&amp;gt; {
      scrollDown()
      await new Promise(resolve =&amp;gt; setTimeout(resolve, 1000));
      setInterchange([...prevState, {
        owner: false,
        text: 'Bot Assistant is typing.'
      }])
      scrollDown()
      await new Promise(resolve =&amp;gt; setTimeout(resolve, 1000));
      setInterchange([...prevState, {
        owner: false,
        text: 'Bot Assistant is typing..'
      }])
      scrollDown()
      await new Promise(resolve =&amp;gt; setTimeout(resolve, 1000));
      setInterchange([...prevState, {
        owner: false,
        text: 'Bot Assistant is typing...'
      }])
      scrollDown()

      await new Promise(resolve =&amp;gt; setTimeout(resolve, 1000));
      setAllow(true)
      scrollDown()
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;getBotAnswer&lt;/code&gt; function sends the user question to the bot and then updates the chat with the bot response.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    export const getBotAnswer = async (interchanges, setInterchange, question, prevState, setAllow) =&amp;gt; {
      await showBotTyping(setInterchange, prevState, setAllow)
      setInterchange([...prevState, {
        owner: false,
        text: searchInterchange(interchanges,question)
      }])
      scrollDown()
    }

    const scrollDown = () =&amp;gt; {
      document.getElementById('scrollTo').scrollIntoView({behavior: "smooth", block: "start"});
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use the &lt;code&gt;scrollDown&lt;/code&gt; function to smoothly bring the current message sent by either the &lt;code&gt;bot&lt;/code&gt; or the &lt;code&gt;user&lt;/code&gt; into view. This makes it more like a &lt;code&gt;chat app&lt;/code&gt;, with users not having to manually scroll down to see recent messages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const scrollDown = () =&amp;gt; {
      document.getElementById('scrollTo').scrollIntoView({behavior: "smooth", block: "start"});
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it for the code section of the frontend part of this tutorial. In the next section, we would be seeing a demo of the finished app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finished-app"&gt;
  &lt;/a&gt;
  Finished App
&lt;/h2&gt;

&lt;p&gt;The finished app looks like this:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;There’s no doubt that the benefit a chatbot assistant brings outweigh any negative effect it could have. This method allows us to free up our time by allowing this bot to answer repetitive questions about us, our business, our organization, or event. The possibilities of this are endless and can only be left to one’s imagination.&lt;/p&gt;

&lt;p&gt;This tutorial demonstrated how easily you can build a bot using technologies already very much common. If this interests you, check out &lt;a href="https://strapi.io/"&gt;Strapi's website&lt;/a&gt; to learn more about the headless CMS.&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>strapi</category>
      <category>nextjs</category>
      <category>cms</category>
    </item>
    <item>
      <title>Wednesday Links - Edition 2021-12-01</title>
      <author>Christopher Kocel</author>
      <pubDate>Wed, 01 Dec 2021 12:11:33 +0000</pubDate>
      <link>https://dev.to/0xkkocel/wednesday-links-edition-2021-12-01-661</link>
      <guid>https://dev.to/0xkkocel/wednesday-links-edition-2021-12-01-661</guid>
      <description>&lt;p&gt;GC progress from JDK 8 to JDK 17 (7 min)📈&lt;br&gt;
&lt;a href="https://kstefanj.github.io/2021/11/24/gc-progress-8-17.html"&gt;https://kstefanj.github.io/2021/11/24/gc-progress-8-17.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A tale of Java Hash Tables (35 min)#️&lt;br&gt;
&lt;a href="https://www.andreinc.net/2021/11/08/a-tale-of-java-hash-tables"&gt;https://www.andreinc.net/2021/11/08/a-tale-of-java-hash-tables&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How compilers work: from source to execution (4 min)📜&lt;br&gt;
&lt;a href="https://nurkiewicz.com/59"&gt;https://nurkiewicz.com/59&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Welcome to Fleet! (1 min)🛰️&lt;br&gt;
&lt;a href="https://blog.jetbrains.com/blog/2021/11/29/welcome-to-fleet/"&gt;https://blog.jetbrains.com/blog/2021/11/29/welcome-to-fleet/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You Can't Buy Integration (6 min)🔌&lt;br&gt;
&lt;a href="https://martinfowler.com/articles/cant-buy-integration.html"&gt;https://martinfowler.com/articles/cant-buy-integration.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;IntelliJ IDEA 2021.3 is here (30 sec) ✨&lt;br&gt;
&lt;a href="https://twitter.com/intellijidea/status/1465726428184399879"&gt;https://twitter.com/intellijidea/status/1465726428184399879&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O Kafka, Where Art Thou? (7 min)💫&lt;br&gt;
&lt;a href="https://www.morling.dev/blog/kafka-where-art-thou/"&gt;https://www.morling.dev/blog/kafka-where-art-thou/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kafka Streams with Quarkus (11 min)🏞️&lt;br&gt;
&lt;a href="https://piotrminkowski.com/2021/11/24/kafka-streams-with-quarkus"&gt;https://piotrminkowski.com/2021/11/24/kafka-streams-with-quarkus&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hibernate goes Reactive - What Does That Mean? (4 min)⚛️&lt;br&gt;
&lt;a href="https://www.i-programmer.info/news/80-java/15025-hibernate-goes-reactive-but-what-does-that-mean.html"&gt;https://www.i-programmer.info/news/80-java/15025-hibernate-goes-reactive-but-what-does-that-mean.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>kafka</category>
      <category>architecture</category>
      <category>hibernate</category>
    </item>
    <item>
      <title>Create a timeout hook in React</title>
      <author>coder4life</author>
      <pubDate>Wed, 01 Dec 2021 11:58:22 +0000</pubDate>
      <link>https://dev.to/coder4_life/create-a-timeout-hook-in-react-102j</link>
      <guid>https://dev.to/coder4_life/create-a-timeout-hook-in-react-102j</guid>
      <description>&lt;p&gt;Create a reuseable hook for setting a timeout (using JavaScripts setTimeout).&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nmLhEj2IZH4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Pepper - open source Chatroulette app</title>
      <author>Lorenzo Tinfena</author>
      <pubDate>Wed, 01 Dec 2021 11:56:44 +0000</pubDate>
      <link>https://dev.to/lorenzotinfena/pepper-open-source-chatroulette-app-580f</link>
      <guid>https://dev.to/lorenzotinfena/pepper-open-source-chatroulette-app-580f</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MpMWccOv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zsdtnfp0pnqxnjwa2atz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MpMWccOv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zsdtnfp0pnqxnjwa2atz.png" alt="Image description" width="880" height="919"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S9Tq-_z2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mk81apph6vuu8favp2h1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S9Tq-_z2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mk81apph6vuu8favp2h1.png" alt="Image description" width="513" height="1074"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This app us built in go (server) and flutter (app ios and android), it used grpc for apis, and remote container extension for development of the server (using docker)&lt;/p&gt;

&lt;p&gt;The app is not yet puclished, and i think im not going to add ads inside, only donations, so it will be free, i think i will publish it only on play store due app store restrictions for chatroulette apps&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/LorenzoTinfena/pepper-client"&gt;https://github.com/LorenzoTinfena/pepper-client&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/LorenzoTinfena/pepper-server"&gt;https://github.com/LorenzoTinfena/pepper-server&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>flutter</category>
      <category>android</category>
      <category>ios</category>
    </item>
    <item>
      <title>Shortest Javascript Program , window and this</title>
      <author>Magnus</author>
      <pubDate>Wed, 01 Dec 2021 11:56:20 +0000</pubDate>
      <link>https://dev.to/magnus0045/shortest-js-program-window-and-this-jbc</link>
      <guid>https://dev.to/magnus0045/shortest-js-program-window-and-this-jbc</guid>
      <description>&lt;p&gt;The shortest JS Program is an empty program. When we run an empty Javascript code , a global execution context is created. The JS Engine sets up the &lt;strong&gt;global execution context&lt;/strong&gt; and &lt;strong&gt;global memory space&lt;/strong&gt; even though there is no code. In addition to that JS engine do something interesting, It also create &lt;strong&gt;window object&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A1oKK8Pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5vfnkzqblrqh6pc4tvu1.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A1oKK8Pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5vfnkzqblrqh6pc4tvu1.PNG" alt="Image description" width="880" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do this window object came out?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This window object is created by JS Engine which has many functions and variables. These are created in global memory space. So, we can access these variables and functions anywhere in Javascript program. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9d3cRjtr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h476witc4rt9144sls7x.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9d3cRjtr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h476witc4rt9144sls7x.PNG" alt="Image description" width="880" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition to that JS Engine will also create &lt;strong&gt;this&lt;/strong&gt; variable. At the global level &lt;strong&gt;this&lt;/strong&gt; points to &lt;strong&gt;window&lt;/strong&gt; object .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B6YnYL2h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7g35hddivifxzi2i22q.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B6YnYL2h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7g35hddivifxzi2i22q.PNG" alt="Image description" width="880" height="386"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So,&lt;strong&gt;what is window?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Window is a  global object which is created along with the global execution context.&lt;/p&gt;

&lt;p&gt;Whenever any JS Program is run, a &lt;strong&gt;global execution context&lt;/strong&gt; is created ,&lt;strong&gt;window object&lt;/strong&gt; and along with the global execution context a &lt;strong&gt;this&lt;/strong&gt; variable is created.&lt;/p&gt;

&lt;p&gt;Let us now know more about global object created.&lt;/p&gt;

&lt;p&gt;So, the global object in case of browser is called as window. Javascript not only runs on browsers. It runs on servers and a lot of other devices and places. Wherever Javascript is running, there must be a javascript engine there. Just like in chrome it is v8, Mozilla has it own. Likewise Safari, Edge has it own. So all these JS engine has the responsibility to create a global object. In case of browser it is called as window. In case of node it is called something else. Whereever you runs a Javascript, the names are different but always there is common features i.e a global object is created. Even though our file is empty JS will create a global object.&lt;/p&gt;

&lt;p&gt;At the global level &lt;strong&gt;this===window&lt;/strong&gt; is &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Iw5SeDSv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl5pd2k6y8d6x329w61u.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iw5SeDSv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl5pd2k6y8d6x329w61u.PNG" alt="Image description" width="880" height="386"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we all know, when global execution context is created, along with it global memory space is created. We can view it through developer tools in scope tab.&lt;/p&gt;

&lt;p&gt;So, What is global memory space?&lt;/p&gt;

&lt;p&gt;Any code which is not inside a function is in global memory space. In a simple way we can say that anything which is not inside a function is in global memory space.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//Not in global memory space&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we debug the above code. We will see the variable and functions which are in global memory space are in windows object and not &lt;strong&gt;c=20&lt;/strong&gt; which is not in global space. So, whenever we create variable and functions in global space, these gets attached in window object.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0X12SLRE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbgtxun1k7sotof6e4iw.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0X12SLRE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbgtxun1k7sotof6e4iw.PNG" alt="Image description" width="880" height="421"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cm"&gt;/*
Output:
10
10
Not defined error as it is not in global
10
*/&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whenever we try to access any functions and variables in our program and  if we do not put anything infront of it ,it assumes that it is in the global space.&lt;/p&gt;

&lt;p&gt;So, we can come to a conclusion that &lt;strong&gt;window.a&lt;/strong&gt; ,&lt;strong&gt;a&lt;/strong&gt; and &lt;strong&gt;this.a&lt;/strong&gt; all points to the &lt;strong&gt;window object&lt;/strong&gt; I.e all are referring to the same place in the memory space.&lt;/p&gt;

&lt;p&gt;Reference:&lt;a class="mentioned-user" href="https://dev.to/akshaymarch7"&gt;@akshaymarch7&lt;/a&gt;
 &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>How to Convert Audio File into Text With Machine Learning</title>
      <author>Mike</author>
      <pubDate>Wed, 01 Dec 2021 11:53:14 +0000</pubDate>
      <link>https://dev.to/hmscore/how-to-convert-audio-file-into-text-with-machine-learning-fd4</link>
      <guid>https://dev.to/hmscore/how-to-convert-audio-file-into-text-with-machine-learning-fd4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction%E2%80%8B"&gt;
  &lt;/a&gt;
  Introduction​
&lt;/h2&gt;

&lt;p&gt;Converting audio into text has a wide range of applications: generating video subtitles, taking meeting minutes, and writing interview transcripts. Machine learning makes doing so easier than ever before, converting audio files into meticulously accurate text, with correct punctuation as well!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#actual-effects%E2%80%8B"&gt;
  &lt;/a&gt;
  Actual Effects​
&lt;/h2&gt;

&lt;p&gt;Build and run an app with audio file transcription integrated. Then, select a local audio file and convert it into text.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TWVjh0lD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2za7l7vxnxxnimt6jpqy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TWVjh0lD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2za7l7vxnxxnimt6jpqy.png" alt="Image1" width="428" height="797"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#development-preparations%E2%80%8B"&gt;
  &lt;/a&gt;
  Development Preparations​
&lt;/h2&gt;

&lt;p&gt;For details about configuring the Huawei Maven repository and integrating the audio file transcription SDK, please refer to the &lt;a href="https://developer.huawei.com/consumer/en/doc/development/hiai-Guides/audio-sdk-0000001050038090?ha_source=hms1"&gt;Development Guide of ML Kit&lt;/a&gt; on HUAWEI Developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Declaring Permissions in the AndroidManifest.xml File&lt;/strong&gt;&lt;br&gt;
Open the AndroidManifest.xml in the main folder. Add the network connection, network status access, and storage read permissions before &amp;lt;application.&lt;br&gt;
Please note that these permissions need to be dynamically applied for. Otherwise, Permission Denied will be reported.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;uses-permission android:name="android.permission.INTERNET" /&amp;gt;
&amp;lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&amp;gt;
&amp;lt;uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#development-procedure%E2%80%8B"&gt;
  &lt;/a&gt;
  Development Procedure​
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Creating and Initializing an Audio File Transcription Engine&lt;/strong&gt;&lt;br&gt;
Override onCreate in MainActivity to create an audio transcription engine.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;private MLRemoteAftEngine mAnalyzer;

mAnalyzer = MLRemoteAftEngine.getInstance();
mAnalyzer.init(getApplicationContext());
mAnalyzer.setAftListener(mAsrListener);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use MLRemoteAftSetting to configure the engine. The service currently supports Mandarin Chinese and English, that is, the options of mLanguage are zh and en.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MLRemoteAftSetting setting = new MLRemoteAftSetting.Factory()
        .setLanguageCode(mLanguage)
        .enablePunctuation(true)
        .enableWordTimeOffset(true)
        .enableSentenceTimeOffset(true)
        .create();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;enablePunctuation indicates whether to automatically punctuate the converted text, with a default value of false.&lt;br&gt;
If this parameter is set to true, the converted text is automatically punctuated; false otherwise.&lt;/p&gt;

&lt;p&gt;enableWordTimeOffset indicates whether to generate the text transcription result of each audio segment with the corresponding offset. The default value is false. You need to set this parameter only when the audio duration is less than 1 minute.&lt;br&gt;
If this parameter is set to true, the offset information is returned along with the text transcription result. This applies to the transcription of short audio files with a duration of 1 minute or shorter. If this parameter is set to false, only the text transcription result of the audio file will be returned.&lt;/p&gt;

&lt;p&gt;enableSentenceTimeOffset indicates whether to output the offset of each sentence in the audio file. The default value is false.&lt;br&gt;
If this parameter is set to true, the offset information is returned along with the text transcription result. If this parameter is set to false, only the text transcription result of the audio file will be returned.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating a Listener Callback to Process the Transcription Result&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;private MLRemoteAftListener mAsrListener = new MLRemoteAftListener()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the listener is initialized, call startTask in AftListener to start the transcription.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@Override
public void onInitComplete(String taskId, Object ext) {
    Log.i(TAG, "MLRemoteAftListener onInitComplete" + taskId);
    mAnalyzer.startTask(taskId);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Override onUploadProgress, onEvent, and onResult in MLRemoteAftListener.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@Override
public void onUploadProgress(String taskId, double progress, Object ext) {
    Log.i(TAG, " MLRemoteAftListener onUploadProgress is " + taskId + " " + progress);
}

@Override
public void onEvent(String taskId, int eventId, Object ext) {
    Log.e(TAG, "MLAsrCallBack onEvent" + eventId);
    if (MLAftEvents.UPLOADED_EVENT == eventId) { // The file is uploaded successfully.
        showConvertingDialog();
        startQueryResult(); // Obtain the transcription result.
    }
}

@Override
public void onResult(String taskId, MLRemoteAftResult result, Object ext) {
    Log.i(TAG, "onResult get " + taskId);
    if (result != null) {
        Log.i(TAG, "onResult isComplete " + result.isComplete());
        if (!result.isComplete()) {
            return;
        }
        if (null != mTimerTask) {
            mTimerTask.cancel();
        }
        if (result.getText() != null) {
            Log.e(TAG, result.getText());
            dismissTransferringDialog();
            showCovertResult(result.getText());
        }

        List&amp;lt;MLRemoteAftResult.Segment&amp;gt; segmentList = result.getSegments();
        if (segmentList != null &amp;amp;&amp;amp; segmentList.size() != 0) {
            for (MLRemoteAftResult.Segment segment : segmentList) {
                Log.e(TAG, "MLAsrCallBack segment  text is : " + segment.getText() + ", startTime is : " + segment.getStartTime() + ". endTime is : " + segment.getEndTime());
            }
        }

        List&amp;lt;MLRemoteAftResult.Segment&amp;gt; words = result.getWords();
        if (words != null &amp;amp;&amp;amp; words.size() != 0) {
            for (MLRemoteAftResult.Segment word : words) {
                Log.e(TAG, "MLAsrCallBack word  text is : " + word.getText() + ", startTime is : " + word.getStartTime() + ". endTime is : " + word.getEndTime());
            }
        }

        List&amp;lt;MLRemoteAftResult.Segment&amp;gt; sentences = result.getSentences();
        if (sentences != null &amp;amp;&amp;amp; sentences.size() != 0) {
            for (MLRemoteAftResult.Segment sentence : sentences) {
                Log.e(TAG, "MLAsrCallBack sentence  text is : " + sentence.getText() + ", startTime is : " + sentence.getStartTime() + ". endTime is : " + sentence.getEndTime());
            }
        }
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Processing the Transcription Result in Polling Mode&lt;/strong&gt;&lt;br&gt;
After the transcription is completed, call getLongAftResult to obtain the transcription result. Process the obtained result every 10 seconds.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;private void startQueryResult() {
    Timer mTimer = new Timer();
    mTimerTask = new TimerTask() {
        @Override
        public void run() {
            getResult();
        }
    };
    mTimer.schedule(mTimerTask, 5000, 10000); // Process the obtained long speech transcription result every 10s.
}

private void getResult() {
    Log.e(TAG, "getResult");
    mAnalyzer.setAftListener(mAsrListener);
    mAnalyzer.getLongAftResult(mLongTaskId);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;For more details, you can go to:&lt;br&gt;
ML Kit &lt;a href="https://developer.huawei.com/consumer/en/hms/huawei-mlkit?ha_source=hms1"&gt;official website&lt;/a&gt;&lt;br&gt;
ML Kit &lt;a href="https://developer.huawei.com/consumer/en/doc/development/hiai-Guides/service-introduction-0000001050040017?ha_source=hms1"&gt;Development Documentation page&lt;/a&gt;, to find the documents you need&lt;br&gt;
&lt;a href="https://www.reddit.com/r/HMSCore/"&gt;Reddit&lt;/a&gt; to join our developer discussion&lt;br&gt;
&lt;a href="https://github.com/HMS-Core/hms-ml-demo"&gt;GitHub&lt;/a&gt; to download ML Kit sample codes&lt;br&gt;
&lt;a href="https://stackoverflow.com/questions/tagged/huawei-mobile-services?tab=Votes"&gt;Stack Overflow&lt;/a&gt; to solve any integration problems&lt;/p&gt;

</description>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Check out my portfolio</title>
      <author>Naveenkumar M</author>
      <pubDate>Wed, 01 Dec 2021 11:36:24 +0000</pubDate>
      <link>https://dev.to/naveenkumarmd/check-out-my-portfolio-47p6</link>
      <guid>https://dev.to/naveenkumarmd/check-out-my-portfolio-47p6</guid>
      <description>&lt;p&gt;I have created my portfolio and have hosted it and I like to have some suggestions to improve it so that it could increase the probability of getting a job in a good company&lt;br&gt;
&lt;a href="https://mdnaveenkumar.web.app/"&gt;https://mdnaveenkumar.web.app/&lt;/a&gt;&lt;br&gt;
Feel free to provide your suggestions&lt;/p&gt;

</description>
      <category>portfolio</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>How to use Go With MongoDB</title>
      <author>bseyhan</author>
      <pubDate>Wed, 01 Dec 2021 11:36:02 +0000</pubDate>
      <link>https://dev.to/bseyhan/how-to-use-go-with-mongodb-3e8d</link>
      <guid>https://dev.to/bseyhan/how-to-use-go-with-mongodb-3e8d</guid>
      <description>&lt;p&gt;&lt;a href="https://medium.com/yemeksepeti-teknoloji/how-to-use-go-with-mongodb-72963c8cebbc"&gt;https://medium.com/yemeksepeti-teknoloji/how-to-use-go-with-mongodb-72963c8cebbc&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>mongodb</category>
    </item>
  </channel>
</rss>
