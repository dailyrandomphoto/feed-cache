<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>This is what gatekeeping looks like in the cloud industry (or how to not be a reply guy)</title>
      <author>Andrew Brown 🇨🇦</author>
      <pubDate>Tue, 20 Jul 2021 16:43:45 +0000</pubDate>
      <link>https://dev.to/andrewbrown/this-is-what-gatekeeping-look-like-in-the-cloud-industry-j17</link>
      <guid>https://dev.to/andrewbrown/this-is-what-gatekeeping-look-like-in-the-cloud-industry-j17</guid>
      <description>&lt;p&gt;I was recently working on expanding the definition of &lt;strong&gt;multi-cloud&lt;/strong&gt; based on what I had observed as a shift in language being used by cloud vendors and cloud service providers.&lt;/p&gt;

&lt;p&gt;So I thought to go to twitter to give a two sentence example of the expansion of the term to gauge interest before I wrote a new article.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--nlDT_3Bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1410937091274547203/dg1bmjmO_normal.jpg" alt="Andrew Brown profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Andrew Brown
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/andrewbrown"&gt;@andrewbrown&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Multi-cloud doesn't just mean I a combination of cloud service providers eg. AWS and Azure. It can mean also cloud services: Fastly, BamboHR, Github, Godaddy, Heroku Auth0, JIRA.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:34 AM - 20 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1417311864338403332" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1417311864338403332" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1417311864338403332" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;My primary goal is to make cloud more accessible by being inclusive of people who do not yet use a cloud service provider (CSP) but primary rely on cloud services like Heroku, Github, JIRA to treat them like first-class cloud citizens.&lt;/p&gt;

&lt;p&gt;I am open to hearing people voice their thoughts, but when it becomes a back and forth, where I've been pulled into unwanted argument that doesn't relent, when my replies serve to save   save face and the end the conversation for future discussion on a more suited platform, and yet the person continues I know I am experiencing gatekeeping.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--nlDT_3Bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1410937091274547203/dg1bmjmO_normal.jpg" alt="Andrew Brown profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Andrew Brown
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/andrewbrown"&gt;@andrewbrown&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      What does gatekeeping look like? 👇&lt;br&gt;&lt;br&gt;When someone argues DevOps isn't a thing, because they were doing this stuff before DevOps existed, and they relentlessly argue the dismantling of the term.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:33 PM - 20 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1417507981999190019" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1417507981999190019" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1417507981999190019" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#what-does-gatekeeping-look-like-in-the-cloud-industry"&gt;
  &lt;/a&gt;
  What does gatekeeping look like in the cloud industry? 👇
&lt;/h2&gt;

&lt;p&gt;Gatkeeping comes in many forms, and one form of gatekeeping which is the easiest to come across is the argument around the definition of emerging terminologies. For example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;When someone argues &lt;strong&gt;DevOps&lt;/strong&gt; isn't a thing, because they were doing this stuff before DevOps existed, and they relentlessly argue the dismantling of the term.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When someone argues &lt;strong&gt;Zero Trust Model&lt;/strong&gt; isn't a thing, because they were doing this stuff before Zero Trust Model existed, and they relentlessly argue the dismantling of the term.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When someone argues &lt;strong&gt;Multi-cloud term&lt;/strong&gt; can't be expanded or changed, because they were doing this stuff and have an expected definition, and they relentlessly argue any form of change of the term.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When someone argues that &lt;strong&gt;Serverless&lt;/strong&gt; has to be described as a mindset and can't just be utilizing serverless services because they were doing this stuff before anyone else was doing this stuff.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While it's possible that terms may be overused and become annoying, you need to consider terms like DevOps have done more to bring people into the fold of systems operations than would not have been.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-gatekeepers-thoughts-about-gatekeeping"&gt;
  &lt;/a&gt;
  The gatekeeper's thoughts about gatekeeping
&lt;/h2&gt;

&lt;p&gt;If you were to confront a gatekeeper, its not hard to predict the outcome:&lt;/p&gt;

&lt;p&gt;A gatekeeper's first thought is we cannot have any discussion around tech terminologies because they'll be viewed upon as gatekeeping! Evenly possibly its a silencing or muting tactic to surpass criticism. &lt;/p&gt;

&lt;p&gt;To which I say, we can have productive conversations, but you need to be aware of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;your position in the hierarchy relative to who you're talking to&lt;/li&gt;
&lt;li&gt;the format of the discussion and its limitations&lt;/li&gt;
&lt;li&gt;the intended shared outcome &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;before you &lt;strong&gt;open your mouth to begin a discussion&lt;/strong&gt; so it does not become an argument.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#once-a-gatekeeper-not-always-a-gatekeeper"&gt;
  &lt;/a&gt;
  Once a gatekeeper not always a gatekeeper
&lt;/h2&gt;

&lt;p&gt;I am certain that I have had instances of gatekeeping in the past. (I am Star Trek fan!) &lt;/p&gt;

&lt;p&gt;But it's not a permanent label, and it can be mild to severe.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-it-gatekeeping-and-selfpreservation"&gt;
  &lt;/a&gt;
  Is it Gatekeeping and Self-preservation?
&lt;/h2&gt;

&lt;p&gt;I think Chris had a good thought here.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--u23mS3JE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1389597126515122176/nd88JyLk_normal.jpg" alt="Chris Munns profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Chris Munns
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @chrismunns
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/andrewbrown"&gt;@andrewbrown&lt;/a&gt; One way to look at this (as I've found with both DevOps and serverless) is that these things threaten previous models and so making them seem lesser helps make people reduce that threat (mentally). it's less gatekeeping and more self preservation IMO
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:51 PM - 20 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1417527527107665923" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1417527527107665923" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1417527527107665923" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Is there a distinguish between Gatekeeping and Self-preservation, and can one be acting in a Self-preservation way without also being a gatekeeper?&lt;/p&gt;

&lt;p&gt;I would think that to preserve one's position, a bi-product of that would be gatekeeping.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;It's not my goal here to convince a person they are gatekeeping, for you to confront instances of gatekeepers, but to validate that it does occur, and what I think it looks like.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What does gatekeeping look like to you? &lt;/li&gt;
&lt;li&gt;Do you have any personal stories you can could share with us?&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>discuss</category>
      <category>career</category>
      <category>aws</category>
      <category>azure</category>
    </item>
    <item>
      <title>Which versioning should be use for my project? - Versioning system comparison</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 20 Jul 2021 16:27:03 +0000</pubDate>
      <link>https://dev.to/adaendra/which-versioning-should-be-use-for-my-project-versioning-system-comparison-3h2k</link>
      <guid>https://dev.to/adaendra/which-versioning-should-be-use-for-my-project-versioning-system-comparison-3h2k</guid>
      <description>&lt;p&gt;Depending of the kind of project you are working on or if it's your first project, you may ask you which versioning system you want to use. &lt;/p&gt;

&lt;p&gt;And the answer is simple&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What ever you want!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes, for sure! You can do what ever you want! You can establish your standard. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But is it great to be understandable by everyone? &lt;em&gt;May be not. (It will depend the context)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So here are some versioning standard which are ready to use, or ready to use as basis to create your standard.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#versioning-system"&gt;
  &lt;/a&gt;
  Versioning System
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#3-digits-versioning"&gt;
  &lt;/a&gt;
  3 digits versioning
&lt;/h2&gt;

&lt;p&gt;The 3 digits versioning is the most common version presentation that we will found on IT projects. But here I will talk about a particular one which I saw on multiple projects in my career. &lt;em&gt;(So there may be is a standard somewhere, but I haven't found it.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The version contains 3 numbers :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;MAJOR&lt;/strong&gt; . &lt;strong&gt;MINOR&lt;/strong&gt; . &lt;strong&gt;BUG&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;MAJOR&lt;/strong&gt; : Change when you add a new big feature or a new feature related to any existing feature&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;MINOR&lt;/strong&gt; : Change when you add a little feature on an existing feature or do an update&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;BUG&lt;/strong&gt; : When you correct a bug&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;For a frontend project, it can be ok. For a backend project... it will be confusing.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;example&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- 0.1.0 -&amp;gt; Start first feature
- 0.2.0 -&amp;gt; Code update
- ...
- 0.5.1 -&amp;gt; Correct a bug
- ...
- 1.0.0 -&amp;gt; Release of the first feature
- 1.1.0 -&amp;gt; Code update
- 1.1.1 -&amp;gt; Correct a bug
- ...
- 2.0.0 -&amp;gt; Release of a new big feature
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;








&lt;h2&gt;
  &lt;a href="#semantic-versioning"&gt;
  &lt;/a&gt;
  Semantic Versioning
&lt;/h2&gt;

&lt;p&gt;If you want to have a clear versioning for your backend project, use the &lt;a href="https://semver.org/"&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also based on a 3 digits versioning, it will be easier for your and your consumer to know what's happening in a quick look.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;MAJOR&lt;/strong&gt;.&lt;strong&gt;MINOR&lt;/strong&gt;.&lt;strong&gt;BUGFIX&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here, the &lt;strong&gt;MAJOR&lt;/strong&gt; stay at 0 until you go in prod. Then you update it when you &lt;strong&gt;have a breaking change in your API&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;MINOR&lt;/strong&gt; will change for every changed until you go in prod. Then, it will change everytime you do a change which is not a breaking change and not a bugfix.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;BUGFIX&lt;/strong&gt; will change every time you have to do a correction in prod.&lt;/p&gt;

&lt;p&gt;So clearly, when your customer will see a new version, they will know if they have to do an update or not.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;example&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- 0.1.0 -&amp;gt; Start of your project
- ...
- 0.14.0 -&amp;gt; Code update
- 0.15.0 -&amp;gt; Bug correction
- ...
- 1.0.0 -&amp;gt; First release in prod
- 1.0.1 -&amp;gt; Bug correction
- 1.1.0 -&amp;gt; New feature
- 1.2.0 -&amp;gt; Update without breaking change
- ...
- 2.0.0 -&amp;gt; Update with a breaking change
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;








&lt;h2&gt;
  &lt;a href="#4-digits-versioning"&gt;
  &lt;/a&gt;
  4 digits versioning
&lt;/h2&gt;

&lt;p&gt;Another kind of versioning is with 4 digits. Here is an &lt;a href="https://www.sos.state.co.us/pubs/elections/VotingSystems/systemsDocumentation/HartIntercivic/FullEAC-TDP/2-11-ConfigurationManagement/2-11-3-ConfigurationManagementAndReleaseProcesss/Software-Versioning-Procedure1001070-C00-Redacted.pdf"&gt;example about it&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;MAJOR&lt;/strong&gt; . &lt;strong&gt;MINOR&lt;/strong&gt; . &lt;strong&gt;REVISION&lt;/strong&gt; . &lt;strong&gt;BUILD&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;The following description is coming from the pdf file.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A &lt;strong&gt;Major Release&lt;/strong&gt; is a full product release of the software. It generally contains new customer-facing functionality and represents a significant change to the code base comprising the software product or family of products, or is used to represent a significant marketing change or direction in the product. Major version numbers are generally incremented by the product management team, and generally are accompanied with a new&lt;br&gt;
marketing push, or to communicate a significant improvement to the product. The major version number is identified by the digit or set of digits to the left of the decimal point (e.g., x.0, segment 1 with a placeholder value of x).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A &lt;strong&gt;Minor Release&lt;/strong&gt; of the software may be comprised a rollup of several branched releases, enhancements/extensions to existing features or interfaces driven by internal or external requirements, external requirements could be driven by enhancements to meet new sales area (State specific features or rules), internal requirements could be enhancements aligned&lt;br&gt;
to a new marketing push. The minor version number is identified by the digit or set of digits to the right of the decimal point separating it from the Major Release number (e.g., 2.x, x&lt;br&gt;
indicates the Minor Release placeholder).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A &lt;strong&gt;Revision&lt;/strong&gt; (Rev) is a build of all or part of the software that is initially distributed to an internal audience, specifically software quality assurance, for software validation. If the Rev is successfully validated and accepted, this version is “released” to manufacturing. If defects are found that prevent the Rev from successfully being validated and prevent the release to&lt;br&gt;
manufacturing, the Rev value will be incremented prior to the next validation cycle.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A &lt;strong&gt;Build Release&lt;/strong&gt; is a build of all or part of the software distributed to an internal audience, these releases should have targeted feature enhancements and issue resolution documented to allow testing in the targeted/specific areas where the changes were implemented. The Build version number is denoted by a fourth digit or set of digits (e.g. 2.4.7.x, segment 4 with a placeholder value of x), corresponding to an internal build number. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;






&lt;h2&gt;
  &lt;a href="#calendar-versioning"&gt;
  &lt;/a&gt;
  Calendar versioning
&lt;/h2&gt;

&lt;p&gt;A completly other kind of versioning is the &lt;a href="https://calver.org/"&gt;Calendar versioning&lt;/a&gt;. As it said in the name, we are using a date as version.&lt;/p&gt;

&lt;p&gt;Depending the project, a lot of format can be used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Windows : YY/YYYY -&amp;gt; 95, 98, 2000&lt;/li&gt;
&lt;li&gt;Ubuntu : YY.0M -&amp;gt; 16.04&lt;/li&gt;
&lt;li&gt;JetBrains : YYYY.MINOR.MICRO -&amp;gt; 2017.1.2&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, you can add &lt;strong&gt;MINOR&lt;/strong&gt; and &lt;strong&gt;MICRO&lt;/strong&gt; if your date is too large and you have a lot of small releases to do.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#modifiers"&gt;
  &lt;/a&gt;
  Modifiers
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#alphabetarc"&gt;
  &lt;/a&gt;
  Alpha-beta-RC
&lt;/h2&gt;

&lt;p&gt;And depending the kind of versioning you are using, you can use &lt;a href="https://en.wikipedia.org/wiki/Software_release_life_cycle"&gt;&lt;strong&gt;modifiers&lt;/strong&gt;&lt;/a&gt;. It is a complementary element to your version.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MAJOR.MINOR.BUGFIX-&lt;strong&gt;MODIFIER&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you can see, the modifier is an element that you can add at the end of your version after a "-".&lt;/p&gt;

&lt;p&gt;The major modifier are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Software_release_life_cycle#Alpha"&gt;&lt;strong&gt;Alpha&lt;/strong&gt;&lt;/a&gt; : For an internal release to do white box tests&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Software_release_life_cycle#Beta"&gt;&lt;strong&gt;Beta&lt;/strong&gt;&lt;/a&gt; : For a release which can be accessible to customers and we know that several errors can exists&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Software_release_life_cycle#Release_candidate"&gt;&lt;strong&gt;RC&lt;/strong&gt; (Release Candidate)&lt;/a&gt; : Is a beta version which we think stable to be delivered in production.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope it will help you!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please don't hesitate to give me a feedback to improve my writing skills! Thanks!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>devops</category>
    </item>
    <item>
      <title>Hurricano</title>
      <author>Achal Jhawar</author>
      <pubDate>Tue, 20 Jul 2021 16:25:01 +0000</pubDate>
      <link>https://dev.to/achaljhawar/hurricano-1mce</link>
      <guid>https://dev.to/achaljhawar/hurricano-1mce</guid>
      <description>&lt;p&gt;An open source Discord bot!&lt;/p&gt;

&lt;h2&gt;Features⭐ :&lt;/h2&gt;

&lt;p&gt;⭐ Mongoose-Based Command Cooldowns&lt;br&gt;
⭐ Command Permissions&lt;br&gt;
⭐ Slash Command Handler&lt;br&gt;
⭐ Subcommands system&lt;br&gt;
⭐ OwnerOnly Commands&lt;br&gt;
⭐ Args required or not Option&lt;br&gt;
⭐ Permissions handler&lt;br&gt;
⭐ Role-Requirement Giveaways&lt;br&gt;
⭐ Customizable server settings using MongoDB&lt;br&gt;
⭐ Button help-menu&lt;br&gt;
⭐ Starboard&lt;br&gt;
⭐ Logging&lt;br&gt;
⭐ a lot of &lt;code&gt;/&lt;/code&gt; commands&lt;br&gt;
⭐ ...And many interesting commands!&lt;/p&gt;

&lt;h1&gt; Getting Started  🚀&lt;/h1&gt;

&lt;p&gt;These instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.&lt;/p&gt;

&lt;h2&gt; Prerequisites 📋 &lt;/h2&gt;

&lt;p&gt;You'll need Git and Node.js (which comes with NPM) installed on your computer.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node@v14.0.0 or higher
npm@7.0.0 or higher
git@2.17.1 or higher
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;Bot setup  🔧&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Lets get started by cloning Hurricano on your local machine.


&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# cloning the repository&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/HurricanoBot/Hurricano.git

&lt;span class="c"&gt;# go into the repository&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;Hurricano

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Now rename the config.example.json file to config.json and the required enviormental variables like bot token, ownerIds etc.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"token"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Your bot token"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"mongouri"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Mongodb uri"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"prefix"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Your prefix"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"ownerIds"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Owner's USER IDs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Like this"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"can be as many"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"statcordKey"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"optional, leave empty if you don't want statcord"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"website"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"enabled"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ip"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Website IP"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Port"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"topgg"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"enabled"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"token"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"only put something here if you set top.gg api to true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"webhook"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"enabled"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"webhookPassword"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"top.gg vote webhook password"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"webhookPort"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1234&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"channelID"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vote webhook channel ID"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"webhookIP"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vote webhook IP"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"botChannels"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"bugReport"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"..."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"feedback"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"..."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"serverJoinChannel"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"..."&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Now install all the required dependecies for the bot and run the bot.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# install the required dependencies&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="c"&gt;# Run the bot&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;node &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;h2&gt; Hosting ☁️&lt;/h2&gt;

&lt;p&gt;
&lt;a href="https://heroku.com/"&gt;&lt;img alt="heroku" src="https://res.cloudinary.com/practicaldev/image/fetch/s--yzBXPae8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Heroku-430098%3Fstyle%3Dfor-the-badge%26logo%3Dheroku%26logoColor%3Dwhite"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;So you might be thinking how to host your bot on a cloud service so that it remains active 24/7 so currently we are hosting Hurricano on heroku which supports node v14.0.0 and npm v7.0.0 and above. &lt;/p&gt;

&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 

&lt;p&gt;Any idea on how we can make this more awesome ? &lt;a href="https://github.com/Hurricanobot/Hurricano/issues"&gt;Open a new issue&lt;/a&gt;! We need all the help we can get to make this project awesome! You can also join the discord server to give suggestions. You can read the &lt;a href="//CONTRIBUTING.md"&gt;Contributing guidelines&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  License 📝
&lt;/h2&gt;

&lt;p&gt;Hurricano™ Bot is licensed under the GPL 3.0 license. See the file &lt;code&gt;LICENSE&lt;/code&gt; for more information. If you plan to use any part of this source code in your own bot, We would be grateful if you would include some form of credit somewhere.&lt;/p&gt;

&lt;h2&gt;Invite Hurricano 🌀&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://top.gg/bot/803169312827113483"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--naNJNLU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://top.gg/api/widget/803169312827113483.svg" alt="HurricanoBot"&gt;&lt;br&gt;
&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/Hurricanobot/Hurricano"&gt;https://github.com/Hurricanobot/Hurricano&lt;/a&gt;&lt;br&gt;
Invite Hurricano: &lt;a href="https://dsc.gg/novusbot"&gt;https://dsc.gg/novusbot&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Making Project Management Not Suck w/ Zach Ozer of Clubhouse</title>
      <author>Conor Bronsdon</author>
      <pubDate>Tue, 20 Jul 2021 15:50:39 +0000</pubDate>
      <link>https://dev.to/linearb/making-project-management-not-suck-w-zach-ozer-of-clubhouse-4ln4</link>
      <guid>https://dev.to/linearb/making-project-management-not-suck-w-zach-ozer-of-clubhouse-4ln4</guid>
      <description>&lt;p&gt;It’s time for project management not to suck anymore.&lt;/p&gt;

&lt;p&gt;That’s why on this week’s episode of &lt;a href="https://devinterrupted.com/podcast/making-project-management-not-suck/"&gt;Dev Interrupted&lt;/a&gt; we've brought in Zach Ozer, the VP of Engineering at Clubhouse.io, to talk about how the new partnership between &lt;a href="https://linearb.io/"&gt;LinearB&lt;/a&gt; and &lt;a href="https://clubhouse.io/signup/"&gt;Clubhouse&lt;/a&gt; is helping dev teams eliminate the need for status update meetings, and automate the manual tasks so many project management tools require from developers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/50FuvvMf5bQPNyigTaVI85"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;What’s broken with software development and project management today&lt;/li&gt;
&lt;li&gt;How engineering organizations can eliminate status update meetings&lt;/li&gt;
&lt;li&gt;What a dev-first project management tool does different&lt;/li&gt;
&lt;li&gt;Why &lt;a href="https://linearb.io/clubhouse-and-linearb/"&gt;LinearB and Clubhouse.io are partnering&lt;/a&gt; and what it means for you&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>management</category>
      <category>leadership</category>
      <category>productivity</category>
      <category>agile</category>
    </item>
    <item>
      <title>.NET 6: The MOST promising FEATURES 🔥</title>
      <author>Dotnetsafer</author>
      <pubDate>Tue, 20 Jul 2021 15:38:47 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/net-6-the-most-promising-features-1i5n</link>
      <guid>https://dev.to/dotnetsafer/net-6-the-most-promising-features-1i5n</guid>
      <description>&lt;p&gt;&lt;strong&gt;Microsoft&lt;/strong&gt; is putting the batteries and already presents .NET 6 Preview 5. According to what they tell us, they are already in the second half of the &lt;strong&gt;.NET 6&lt;/strong&gt; version and they are beginning to teach new features that promise a lot. 🤗&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-net-what-is-it-for"&gt;
  &lt;/a&gt;
  What is .NET? What is it for?
&lt;/h2&gt;

&lt;p&gt;What is .NET in general, is a &lt;em&gt;Microsoft&lt;/em&gt; platform to develop Software, covering many operating systems such as &lt;strong&gt;Windows&lt;/strong&gt;, &lt;strong&gt;iOS&lt;/strong&gt;, &lt;strong&gt;Linux&lt;/strong&gt;, &lt;strong&gt;Android&lt;/strong&gt; … The main idea of ​​.NET is to be able to develop applications independent of the physical architecture or the operating system in the one that was going to be executed.&lt;br&gt;&lt;br&gt;
Its main advantages are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Decreased&lt;/strong&gt; development time&lt;/li&gt;
&lt;li&gt;  Use of &lt;strong&gt;predesigned functionalities&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Reduction&lt;/strong&gt; of development and maintenance cost&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Simplification&lt;/strong&gt; of maintenance&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Okay, I understand. And what is .NET 6? &lt;em&gt;🤔&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;.NET 6 is the new version of .NET &lt;em&gt;(currently .NET 5)&lt;/em&gt; that Microsoft promises to release on &lt;strong&gt;November 9&lt;/strong&gt; of this year. It brings many improvements and new features compared to .NET 5.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#what-are-net-6-new-features"&gt;
  &lt;/a&gt;
  What are .NET 6 new features?
&lt;/h2&gt;

&lt;p&gt;If we speak in general, we can speak from .NET MAUI, through the new implementation of the 64-bit architecture, to Visual Studio 2022 and its function more... 😎 But we are going to explain the most important ones and the ones you should know.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#nuget-package-validation"&gt;
  &lt;/a&gt;
  NuGet package validation
&lt;/h3&gt;

&lt;p&gt;Package validation tools will allow &lt;strong&gt;NuGet&lt;/strong&gt; library developers to validate that their packages are consistent and well-formed.&lt;/p&gt;

&lt;p&gt;Its main characteristics are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Validate that there are &lt;strong&gt;no important change&lt;/strong&gt;s in the versions&lt;/li&gt;
&lt;li&gt;  Validate that the package &lt;strong&gt;has the same set of public APIs&lt;/strong&gt; for all specific runtime implementations.&lt;/li&gt;
&lt;li&gt;  Determine &lt;strong&gt;applicability gaps in the target framework&lt;/strong&gt; or in the execution time.&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;
  &lt;a href="#workload-enhancements-in-the-net-sdk"&gt;
  &lt;/a&gt;
  Workload Enhancements in the .NET SDK
&lt;/h3&gt;

&lt;p&gt;Microsoft reports that it has added new workload commands in .NET 6 to improve administration:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;dotnet workload search&lt;/code&gt; List the workloads available to install.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;dotnet workload unistall&lt;/code&gt; Removes the specified workload if you no longer need a workload. It is also a good option to save space.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;dotnet workload repair&lt;/code&gt; Reinstall all previously installed workloads.&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;
  &lt;a href="#crossgen2"&gt;
  &lt;/a&gt;
  Crossgen2
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/crossgen.md"&gt;Crossgen&lt;/a&gt; allows &lt;strong&gt;IL&lt;/strong&gt; precompiling into native code as a publishing step. Pre-compiling is primarily beneficial to improve startup. &lt;strong&gt;Crossgen2&lt;/strong&gt; is a scratch implementation that is already proving to be a superior platform for code generation innovation.&lt;/p&gt;

&lt;p&gt;Here we can see how to enable the pre-compilation with Crossgen2 from the &lt;em&gt;MSBuild&lt;/em&gt; properties:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="n"&gt;Enable&lt;/span&gt; &lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;compiling&lt;/span&gt; &lt;span class="n"&gt;native&lt;/span&gt; &lt;span class="nf"&gt;code&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;crossgen2&lt;/span&gt; &lt;span class="p"&gt;--&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;PublishReadyToRun&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;PublishReadyToRun&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="n"&gt;Enable&lt;/span&gt; &lt;span class="n"&gt;generating&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;composite&lt;/span&gt; &lt;span class="n"&gt;R2R&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="p"&gt;--&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;PublishReadyToRunComposite&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;PublishReadyToRunComposite&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#windows-forms-the-default-font"&gt;
  &lt;/a&gt;
  Windows Forms: The default font
&lt;/h3&gt;

&lt;p&gt;Already with .NET 6 you can set a default font for an &lt;code&gt;Application.SetDefaultFont&lt;/code&gt;application. Also the pattern it uses is similar to setting high dpi or visual styles. An example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Program&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;STAThread&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetHighDpiMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HighDpiMode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SystemAware&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;EnableVisualStyles&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetCompatibleTextRenderingDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;
&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetDefaultFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;FontFamily&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Microsoft Sans Serif"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;8f&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Form1&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here are &lt;strong&gt;2 examples&lt;/strong&gt; after you set the default font.&lt;/p&gt;

&lt;p&gt;Microsoft Sans Serif, 8pt:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hYxSucBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AvmG68_KDdFHO40cI3iUACg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hYxSucBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AvmG68_KDdFHO40cI3iUACg.png" alt=".NET 6 default Microsoft Sans Serif font feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chiller, 12pt:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aO7e6CJ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/702/1%2Aj5KboU7AIu-Uy8wyvlDOAw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aO7e6CJ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/702/1%2Aj5KboU7AIu-Uy8wyvlDOAw.png" alt=".NET 6 default Chiller font feature"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#performance-increase-in-the-biginteger-library"&gt;
  &lt;/a&gt;
  Performance increase in the BigInteger library
&lt;/h3&gt;

&lt;p&gt;BigIntegers parsing of decimal and hexadecimal strings has been improved. In the following photo you can see improvements of up to &lt;strong&gt;89%&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H7nPSkoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/567/1%2An1SEZhv0BfnD_OEOW8gMsQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H7nPSkoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/567/1%2An1SEZhv0BfnD_OEOW8gMsQ.png" alt=".NET 6 performance test"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#ssl-3-support"&gt;
  &lt;/a&gt;
  SSL 3 support
&lt;/h3&gt;

&lt;p&gt;The .NET crypto APIs support the use of &lt;strong&gt;OpenSSL 3&lt;/strong&gt; as the preferred native crypto provider on &lt;em&gt;Linux&lt;/em&gt;. .NET 6 will use &lt;strong&gt;OpenSSL 3&lt;/strong&gt; if available. Otherwise, it will use &lt;strong&gt;OpenSSL 1.x&lt;/strong&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#ios-cpu-sampling-speedscope"&gt;
  &lt;/a&gt;
  IOS CPU Sampling (SpeedScope)
&lt;/h3&gt;

&lt;p&gt;The graph below shows part of an &lt;strong&gt;iOS&lt;/strong&gt; startup &lt;em&gt;CPU&lt;/em&gt; sampling session seen in &lt;strong&gt;SpeedScope&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---YQ76oIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/567/1%2AttzNOe-QN8oIFPGF5yMEvw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---YQ76oIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/567/1%2AttzNOe-QN8oIFPGF5yMEvw.png" alt="iOS CPU performance test in .NET 6"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#android-cpu-sampling-perfview"&gt;
  &lt;/a&gt;
  Android CPU Sampling (PerfView)
&lt;/h3&gt;

&lt;p&gt;The following image shows the &lt;strong&gt;Android&lt;/strong&gt; &lt;em&gt;CPU&lt;/em&gt; sampling seen in &lt;strong&gt;PerfView&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n-HA9Hki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/567/1%2AoTV4Yz_afyq9iWAyy8zAAw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n-HA9Hki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/567/1%2AoTV4Yz_afyq9iWAyy8zAAw.png" alt="Android CPU performance test in .NET 6"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#net-6-conclusion"&gt;
  &lt;/a&gt;
  .NET 6 Conclusion
&lt;/h2&gt;

&lt;p&gt;This .NET 6 Preview 5 is perhaps the biggest so far of all the ones that have been released in terms of quantity and quality of features. Right now you can try .NET 6 by downloading it from the &lt;strong&gt;Official Web of .NET 6.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As Microsoft says…&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The future has arrived&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With all the tools already announced and all that remain to be shown and released, development will become a much easier, more optimized and more productive task, highly improving the developer experience in their current and future projects.&lt;/p&gt;

&lt;p&gt;From &lt;a href="https://dotnetsafer.com/"&gt;&lt;strong&gt;Dotnetsafer&lt;/strong&gt;&lt;/a&gt; we would like to know your opinion. Sound good features? Anything you would like them to take out? Leave it in the comments so we can talk about it. 😊&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>netcore</category>
      <category>csharp</category>
      <category>dotnet6</category>
    </item>
    <item>
      <title>Are Amazon and Google at odds with Agile?</title>
      <author>scottshipp</author>
      <pubDate>Tue, 20 Jul 2021 15:18:50 +0000</pubDate>
      <link>https://dev.to/scottshipp/are-amazon-and-google-at-odds-with-agile-4ga6</link>
      <guid>https://dev.to/scottshipp/are-amazon-and-google-at-odds-with-agile-4ga6</guid>
      <description>&lt;p&gt;&lt;em&gt;Working software over comprehensive documentation&lt;/em&gt; is one of the core values of &lt;a href="https://agilemanifesto.org/"&gt;The Agile Manifesto&lt;/a&gt;. And even though this carries the caveat "...while there is value in the items on the right, we value the items on the left more..." it typically means that Agile approaches such as scrum, kanban, or XP avoid rather than emphasize documentation.&lt;/p&gt;

&lt;p&gt;It is interesting, then, that two of our times' largest and most successful companies place written documentation at the core of their work.&lt;/p&gt;

&lt;p&gt;Amazon is well-known for its &lt;a href="https://www.cnbc.com/2018/04/23/what-jeff-bezos-learned-from-requiring-6-page-memos-at-amazon.html"&gt;6-pager&lt;/a&gt; approach to outlining positions, gaining consensus, and, finally, &lt;a href="https://aws.amazon.com/blogs/enterprise-strategy/guts-part-three-having-backbone-disagreeing-and-committing/"&gt;disagreeing and committing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Google, on the other hand, expects that employees work together via &lt;a href="https://www.industrialempathy.com/posts/design-docs-at-google/"&gt;design docs&lt;/a&gt;. The constant collaboration on documentation promotes a deeper level of shared understanding.&lt;/p&gt;

&lt;p&gt;Both approaches run aground of the now-traditional Agile recommendation to prefer working software instead. It wouldn't be hard to make an argument that by so blatantly ignoring such a core Agile principle, these two software behemoths are &lt;em&gt;not agile at all.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It has even led to the popular Quora question, &lt;a href="https://www.quora.com/Why-do-some-developers-at-strong-companies-like-Google-consider-Agile-development-to-be-nonsense"&gt;"Why do some developers at strong companies like Google consider Agile development to be nonsense?"&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vx9mt_gH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hf3n3vnugwycmoqedkrl.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vx9mt_gH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hf3n3vnugwycmoqedkrl.jpeg" alt="Jeff Bezos, founder of Amazon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yet, at a deeper level there is harmony between the underlying motivations here. Both companies have cited writing documentation as a way  to be &lt;em&gt;more efficient,&lt;/em&gt; which is the explicit goal of Agile. Consider the &lt;a href="https://dev.toJeff%20Bezos%20and%20the%20Six-Page%20Memo"&gt;following summary of an interview with Jeff Bezos&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Working out a careful six-page narrative memo, [Bezos] told Rose, calls for “deeper thinking” and “clarity.” When the meeting convenes, the leader distributes the memo and a thirty-minute “study hall” begins, during which the attendees read the memo and make notes. Only then does discussion begin. Bezos said that this method saves time in the long run because 1) everyone is reading it together so it will be fresh in their minds; and 2) the kinds of questions people tend to ask—ones that are often answered in the next slide or paragraph—aren’t necessary. This process of reading and discussing the memos, Bezos said, fuels the kind of inventiveness that Amazon is known for.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The questions this raises are fascinating and thought-provoking. The obvious question surrounding whether or not written documentation of this form can be considered "agile" will soon be replaced by the other usual questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Is &lt;em&gt;not&lt;/em&gt; being agile really so bad?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Are Google and Amazon perhaps successful in spite of focusing on written documentation and not because of it?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the age of remote work, where written documentation is often the best way to communicate, how can we reconcile the idea that we should prefer "working software" to "comprehensive documentation?"&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What does "comprehensive" even mean?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Just because Google and Amazon do it, why should we?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don't mean to answer any of these questions. But I think it's worth a glass of {coffee, wine, beer, tea, _________} and a think through. Whatever answer you land on, I hope your  team and company have a look at both sides of the conversation before jumping headfirst either way.&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>agile</category>
      <category>development</category>
    </item>
    <item>
      <title>All About Web Development </title>
      <author>Harshit Dugar </author>
      <pubDate>Tue, 20 Jul 2021 15:17:02 +0000</pubDate>
      <link>https://dev.to/harshitdugar/all-about-web-development-5679</link>
      <guid>https://dev.to/harshitdugar/all-about-web-development-5679</guid>
      <description>&lt;p&gt;Technology plays a huge role in our daily lives, from the simplest of apps to the most groundbreaking inventions. Every website or piece of software that we encounter has been built by a web developer—but what exactly is web development, and what does a web developer do?&lt;/p&gt;

&lt;p&gt;In this guide, we’ll go through the basics of web development.&lt;br&gt;
And one more important point , there is no prerequisite to learn web development , if you are a beginner or from non technical background then also you can get started .&lt;/p&gt;

&lt;p&gt;There are three phases to become a FULL STACK WEB DEVELOPER.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-know-the-basic-essentials"&gt;
  &lt;/a&gt;
  1. Know the basic essentials
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#2-front-end"&gt;
  &lt;/a&gt;
  2. Front End
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#3-back-end"&gt;
  &lt;/a&gt;
  3. Back End
&lt;/h3&gt;

&lt;p&gt;Now the question comes how to get started and which resources to follow .&lt;br&gt;
I will be giving all the resources and how to get started in a particular manner . &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-basic-essentials-"&gt;
  &lt;/a&gt;
  1. Basic Essentials -
&lt;/h1&gt;

&lt;p&gt;As you are going to start your web development journey  you should know some basic knowledge of HTTP , API and how internet  works .&lt;br&gt;
Not to worry about this that how we will learn . It will not take much time . Here is the list &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-git-and-github"&gt;
  &lt;/a&gt;
  a. Git and Github
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W6WYaqDA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zefwjaxoj8c03tm6jdzj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W6WYaqDA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zefwjaxoj8c03tm6jdzj.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Git is a version control system which basically manages your project i.e. every change you make in your project it will keep a record of it .&lt;br&gt;
Now from where to learn  --&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;Free Udacity course &lt;a href="https://www.udacity.com/course/version-control-with-git--ud123"&gt;click here&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#b-http-and-browser-system"&gt;
  &lt;/a&gt;
  b. HTTP and Browser system
&lt;/h3&gt;

&lt;p&gt;HTTP means &lt;strong&gt;Hyper Text Transfer Protocol&lt;/strong&gt;, to learn more about http and how server client works you can read this article &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP"&gt;click here &lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c-api"&gt;
  &lt;/a&gt;
  c. API
&lt;/h3&gt;

&lt;p&gt;API i.e. &lt;strong&gt;Application Programming Interface&lt;/strong&gt; , is a two way system between softwares . to learn more about API &lt;a href="https://apifriends.com/api-management/what-is-an-api/"&gt;click here&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-front-end-development"&gt;
  &lt;/a&gt;
  2. Front End Development
&lt;/h1&gt;

&lt;p&gt;Now as you have learned basic essentials now lets get started to real web development .&lt;br&gt;
Front end means the actual page you see like YouTube page , Facebook and other websites . They are basically made of 3 components 1.) HTML   2.) CSS  3.) JavaScript&lt;br&gt;
When you make a request to the server to load the website it basically sends you HTML CSS Js code to the browser and you are able to see that web app.&lt;br&gt;
To get started --&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-html5"&gt;
  &lt;/a&gt;
  a. HTML5
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j30NYJpW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dpmb9f8l6bfkwcsofdk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j30NYJpW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dpmb9f8l6bfkwcsofdk.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
HTML &lt;strong&gt;Hypertext Markup Language&lt;/strong&gt; makes the skeleton of you web page . It is very easy to learn and implement . As a beginner I will not suggest you to do 100% of HTML as there are some advanced concepts like svg and canvas which is not used as a beginner .&lt;br&gt;
Here is a documentation from where you can learn &lt;a href="https://www.w3schools.com/html/"&gt;HTML&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#b-css3"&gt;
  &lt;/a&gt;
  b. CSS3
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dRag1cwI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dyyi14s9xl0hupej642i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dRag1cwI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dyyi14s9xl0hupej642i.png" alt="image"&gt;&lt;/a&gt; &lt;br&gt;
CSS i.e. &lt;strong&gt;Cascading Style Sheet&lt;/strong&gt; is a styling language that provides styles and enhancement to the web page .&lt;br&gt;
All the images collars and effects are done by css .&lt;br&gt;
&lt;a href="https://www.w3schools.com/css/"&gt;click here&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c-javascript"&gt;
  &lt;/a&gt;
  c. JavaScript
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sVRd-Z9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qci79d3uv18itw756hy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sVRd-Z9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qci79d3uv18itw756hy.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
JavaScript is a programming language . It is the brain of you whole web page, it decides the behaviour of web page , you can think it as a full working system . How the button will be clickable and what to do when a particular action is taking place is done through js. For full tutorial of javascript &lt;a href="https://www.w3schools.com/js/"&gt;click here&lt;/a&gt; &lt;br&gt;
After doing Javascript I will suggest to do &lt;strong&gt;Bootstrap&lt;/strong&gt; which is a css framework. You cam do this from &lt;a href="https://www.w3schools.com/bootstrap4/default.asp"&gt;w3schools&lt;/a&gt;.&lt;br&gt;
Also do react a javascript library  which is developed by Facebook &lt;a href="https://www.w3schools.com/react/default.asp"&gt;click here&lt;/a&gt;&lt;br&gt;
This completes the front end part .&lt;br&gt;
But only learning is not important I will also recommend to do some small projects while learning .&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-back-end-development"&gt;
  &lt;/a&gt;
  3. Back End Development
&lt;/h1&gt;

&lt;p&gt;As you have successfully completed Front End you are good to go for back end .&lt;br&gt;
All the server side process like searching and storing data to cloud  happens in backend part . Backend gives full functionality to our website , we can communicate with data on the server using backend . &lt;br&gt;
To get started first you have to learn a backend programming language , it can be Python , PHP , Java , node.js&lt;br&gt;
I will recommend to use node.js as there is a big community for this language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-nodejs"&gt;
  &lt;/a&gt;
  a. Node.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hk4n5u85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n90wgl7xf9pt7g8ju1c4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hk4n5u85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n90wgl7xf9pt7g8ju1c4.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 Node.js is used for backend development . It is a server side language .&lt;a href="https://www.w3schools.com/nodejs/default.asp"&gt;Click here&lt;/a&gt; for full documentation .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#b-database-management-system-dbms"&gt;
  &lt;/a&gt;
  b. Database Management System (DBMS)
&lt;/h3&gt;

&lt;p&gt;As we move forward  and make a responsive website it is also important to know &lt;strong&gt;Database Management System&lt;/strong&gt;. It is a way to store and manage data . You will be storing some data to your page or your website will ask for user input , this all Data will be stored and managed using DBMS. And to do all these task you need Query language. SQL,MongoDB are best and  I will recommend to do MongoDB (NoSQL) if you are doing node.js.&lt;a href="https://university.mongodb.com/"&gt;Click here&lt;/a&gt;  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-a-stack-mern-vs-mean"&gt;
  &lt;/a&gt;
  What is a stack (MERN vs MEAN)
&lt;/h1&gt;

&lt;p&gt;Stack means set of technologies , in web development stack means set of technology or languages used to make a single project .&lt;/p&gt;

&lt;p&gt;There are main two stacks in web development -&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-mern-stack"&gt;
  &lt;/a&gt;
  1. MERN stack
&lt;/h3&gt;

&lt;p&gt;This is the most recommended stack as it is most used in the industry level.&lt;br&gt;
M =&amp;gt; MongoDB&lt;br&gt;
E =&amp;gt; Express.js&lt;br&gt;
R =&amp;gt; React&lt;br&gt;
N =&amp;gt; Node.js&lt;br&gt;
In the above guide I have discussed about MERN stack &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-mean-stack"&gt;
  &lt;/a&gt;
  2. MEAN stack
&lt;/h3&gt;

&lt;p&gt;M =&amp;gt; MongoDB&lt;br&gt;
E =&amp;gt; Express.js&lt;br&gt;
A =&amp;gt; Angular&lt;br&gt;
N =&amp;gt; Node.js&lt;/p&gt;

&lt;p&gt;This was all about the full roadmap to become a Full Stack Web Developer.&lt;br&gt;
Thanks for reading article, if you found it helpful do comment your reviews.  &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
      <category>node</category>
    </item>
    <item>
      <title>How to hide Feature A and show Feature B for different users in React</title>
      <author>Alex Barashkov</author>
      <pubDate>Tue, 20 Jul 2021 15:16:18 +0000</pubDate>
      <link>https://dev.to/alex_barashkov/how-to-hide-feature-a-and-show-feature-b-for-different-users-in-react-j6e</link>
      <guid>https://dev.to/alex_barashkov/how-to-hide-feature-a-and-show-feature-b-for-different-users-in-react-j6e</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h3&gt;

&lt;p&gt;Have you ever wondered how do companies like Slack, Netlify, Zoom, Facebook (and rest of FAANG for sure)  gradually roll out new features just for some users?  🤔  &lt;/p&gt;

&lt;p&gt;Wonder no more! It is done via Feature Flags (or FF for short) and we're just about to dive into this concept.&lt;/p&gt;

&lt;p&gt;Feature Flags services work the following way. You define a list of features(eg. dark mode, horizontal login layout, design 2.0) and assign it to a group of users specifying conditions whether it should be enabled or disabled.&lt;/p&gt;

&lt;p&gt;Chances are that you've already used FF in your projects but wasn't aware of this. Did you store in a database some booleans that indicate whether particular user should have an access to a certain feature? If yes, then congratulations - you indeed have experience working with feature flags.&lt;/p&gt;

&lt;p&gt;Booleans in DB were good up to a certain point, but progress never stops and now we have much more flexible and dev friendly way to control feature presence. Let's take a look at feature flags services.  FF services have the following bonuses:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;UI where you can define and manage features&lt;/li&gt;
&lt;li&gt;Users segmentation&lt;/li&gt;
&lt;li&gt;A/B testing&lt;/li&gt;
&lt;li&gt;Flags analytics&lt;/li&gt;
&lt;li&gt;Staged feature rollouts&lt;/li&gt;
&lt;li&gt;SDKs for different languages/frameworks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this article, we are going to use &lt;a href="https://github.com/Flagsmith/flagsmith"&gt;Flagsmith&lt;/a&gt; - open source feature flag and remote config service, but you can check commercial alternatives such as &lt;a href="https://launchdarkly.com/"&gt;LaunchDarkly&lt;/a&gt;. Our goal is to learn how to start using feature flags in React and make the process of launching new functionality for users smoother.&lt;/p&gt;

&lt;p&gt;FF manipulation with Flagsmith can be done pretty much anywhere (frontend/backend/mobile platform). Let's take a look at the following schema: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ri8eP2U3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70xojzecxzyo7tmgrwyy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ri8eP2U3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70xojzecxzyo7tmgrwyy.png" alt="diagram"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Let's break down what is happening here.&lt;/p&gt;

&lt;p&gt;1) User requests the page&lt;br&gt;
2) A certain side of your app (FE/BE) makes a call to Flagsmith service with user uuid&lt;br&gt;
3) Flagsmith matches received uuid with the configuration of available features for this particular user and returns the info on that&lt;br&gt;
4) App generates a page based on received feature info&lt;/p&gt;

&lt;p&gt;Definitely not a rocket science. Now to practice! &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Flagsmith"&gt;
        Flagsmith
      &lt;/a&gt; / &lt;a href="https://github.com/Flagsmith/flagsmith"&gt;
        flagsmith
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Feature flagging and remote config service. Host yourself or use our hosted version at https://flagsmith.com/
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#our-goal"&gt;
  &lt;/a&gt;
  Our goal
&lt;/h3&gt;

&lt;p&gt;We want to build pretty much standard dashboard app (sorry, no todos today) with authorization set up. We want to show certain feature components only to those users who opted-in for beta. &lt;/p&gt;

&lt;p&gt;React, Next.js, Next-Auth and beautiful dashboard components from Tailwind UI are going to help us building it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dN2TSMBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7c0sxyirkx8wzplpi8om.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dN2TSMBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7c0sxyirkx8wzplpi8om.png" alt="4-pinned-projects"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequirements"&gt;
  &lt;/a&gt;
  Pre-requirements
&lt;/h3&gt;

&lt;p&gt;Create a new app with Next.js, React and Next-Auth or clone this &lt;a href="https://github.com/Flagsmith/flagsmith-js-client/tree/main/examples/nextjs-auth"&gt;sample repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Additional links&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextjs.org/docs/getting-started"&gt;Getting started with Next.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://next-auth.js.org/getting-started/introduction"&gt;Getting started with nextauth&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://flagsmith.com/"&gt;Then create an account&lt;/a&gt; in the cloud version of Flagsmith.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9orzVOJb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxnnpxq5xrcdb4eice5a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9orzVOJb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxnnpxq5xrcdb4eice5a.png" alt="1-sing-up"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-flagsmith-environment"&gt;
  &lt;/a&gt;
  Configure Flagsmith environment
&lt;/h3&gt;

&lt;p&gt;The configuration process is simple. Once you've signed up, create a new project. In Flagsmith you can define multiple environments per project, each environment keeps its own features/users/segments and API key.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NQLGLJBf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mme9h5kf9m0e5jl7ew8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NQLGLJBf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mme9h5kf9m0e5jl7ew8.png" alt="2-onboarding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's create our first feature, we will name it - "pinned_projects". Beta users will be able to pin projects and see them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T-lcXQwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qbsi72oxlx36wfgieu65.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T-lcXQwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qbsi72oxlx36wfgieu65.png" alt="3-create-feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next step we need to install &lt;code&gt;flagsmith-react&lt;/code&gt; package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;flagsmith&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As an initial step, we will wrap our _app.js with &lt;code&gt;FlagsmithProvider&lt;/code&gt; and pass Flagsmith API key, which we can get from the Settings page in Flagsmith UI. FlagsmithProvider will allow to use &lt;code&gt;useFlagsmith&lt;/code&gt; hook and pass the state to underlying components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Auth&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;components/auth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;SessionProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next-auth/client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;FlagsmithProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;flagsmith-react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../styles/globals.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pageProps&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;FlagsmithProvider&lt;/span&gt; &lt;span class="na"&gt;environmentId&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_FLAGSMITH_API_KEY&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;SessionProvider&lt;/span&gt; &lt;span class="na"&gt;session&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Auth&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Auth&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;SessionProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;FlagsmithProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;FlagsmithProvider&lt;/code&gt; will initialise Flagsmith javascript client under the hood and you will be able to start getting flags declared in the UI. But it does not make too much sense unless we get user-specific flags. To let Flagsmith know which user requests flags, we need to &lt;code&gt;identify&lt;/code&gt; him. The perfect place for this Auth component, that responsible for checking user session and redirecting users to the sign-in page in case it's expired.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useSession&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;signIn&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next-auth/client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useFlagsmith&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;flagsmith-react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Auth&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;identify&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isIdentified&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getTrait&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTrait&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useFlagsmith&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSession&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Identify user and set email trait if does not exist&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;identifyUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;identify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hasEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="nx"&gt;getTrait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;hasEmail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setTrait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Do nothing while loading&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isUser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;signIn&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// If not authenticated, force log in&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isUser&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isIdentified&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// In the example we don't save users in the database so we don't have id that should be used for identification&lt;/span&gt;
      &lt;span class="c1"&gt;// Instead we're going to use email as a trait and id&lt;/span&gt;
      &lt;span class="nx"&gt;identifyUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isIdentified&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;identify&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isUser&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isUser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Session is being fetched, or no user.&lt;/span&gt;
  &lt;span class="c1"&gt;// If no user, useEffect() will redirect.&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you can see that we use &lt;code&gt;getTrait&lt;/code&gt; and &lt;code&gt;setTrait&lt;/code&gt;. Traits are simply key/value pairs that are associated with individual Identities. You can pass any additional information to the user, that later could be used for segmentation eg. current plan, opt-in for beta features or newsletters, etc. &lt;/p&gt;

&lt;p&gt;Let's create first segment and call it &lt;code&gt;beta_opt_in&lt;/code&gt; . Go to Segments → Create Segment. Here you also could define an expression based on the trait which will add users that match that condition to the segment. We can start from a simple one, such as if email has &lt;code&gt;[pixelpoint.io](http://pixelpoint.io)&lt;/code&gt; consider them as opted-in for beta features.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3I8xRa1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/auwahcvy2viz7vhzhmue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3I8xRa1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/auwahcvy2viz7vhzhmue.png" alt="5-segment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The final step is to add a check to our React component using &lt;code&gt;hasFeature("pinned_projects")&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;hasFeature&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useFlagsmith&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flex-1 relative z-0 overflow-y-auto focus:outline-none"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"border-b border-gray-200 px-4 py-4 sm:flex sm:items-center sm:justify-between sm:px-6 lg:px-8"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;HomeHeader&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;hasFeature&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pinned_projects&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-4 mt-6 sm:px-6 lg:px-8"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PinnedProjects&lt;/span&gt; &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;pinnedProjects&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ProjectsTable&lt;/span&gt; &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#here-you-go"&gt;
  &lt;/a&gt;
  Here you go!
&lt;/h3&gt;

&lt;p&gt;If you've been following along, by this time you should have a nice little pet project demonstrating a modern approach to feature flags. Congratulations🎉&lt;/p&gt;

&lt;p&gt;Don't hesitate to extend it or leverage the idea in your existing project.&lt;/p&gt;

&lt;p&gt;P.S. Further reading&lt;/p&gt;

&lt;p&gt;In this article we just took a quick glance at Feature Flags and built a simple example app, but FF system is capable of much more. Check out: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.flagsmith.com/advanced-use/ab-testing"&gt;A/B testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flagsmith.com/advanced-use/flag-analytics"&gt;Feature flags analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flagsmith.com/advanced-use/staged-feature-rollouts"&gt;Staged rollouts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>react</category>
    </item>
    <item>
      <title>Logging Exceptions via Slack in Laravel</title>
      <author>Colby Garland</author>
      <pubDate>Tue, 20 Jul 2021 15:02:23 +0000</pubDate>
      <link>https://dev.to/colbygarland/logging-exceptions-via-slack-in-laravel-33b7</link>
      <guid>https://dev.to/colbygarland/logging-exceptions-via-slack-in-laravel-33b7</guid>
      <description>&lt;p&gt;Logging can be a powerful tool that people tend to gloss over. Most developers still view logging as an archaic way of dealing with bugs and user issues. Laravel has a very easy and eloquent way of dealing with the logging problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The Problem
&lt;/h2&gt;

&lt;p&gt;Logging is usually done by creating a log file on your server, and telling your backend to send all errors to that file. While this is a good temporary solution, this system tends to fill up fast, and is a pain to search and find certain things.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-solution-one-of-many"&gt;
  &lt;/a&gt;
  The Solution (one of many)
&lt;/h2&gt;

&lt;p&gt;Using Laravel’s built-in logging system, you can log to many different “channels”, including our old tried and true, file logging on the server. But that isn’t why you are reading this post, is it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#slack-it-to-me"&gt;
  &lt;/a&gt;
  Slack it to me
&lt;/h2&gt;

&lt;p&gt;If you have ever used Slack, you’ve grown to love the instant messaging capabilities, and the searching function. Search is great on Slack. And one of our problems with logging was search, wasn’t it? Wouldn’t it be great if we could log all our errors to Slack? Good news!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-log-exceptions-to-slack"&gt;
  &lt;/a&gt;
  How to log exceptions to Slack
&lt;/h2&gt;

&lt;p&gt;Logging is relatively easy in Laravel (&lt;a href="https://laravel.com/docs/6.x/logging"&gt;see this page for how-to setup Slack logging&lt;/a&gt;). What we want is to nicely log all our exceptions.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This post is written assuming you have a Laravel project already set up.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Open your &lt;code&gt;app/Exceptions/Handler.php&lt;/code&gt; handler file. This is where Laravel gives you the option to send exceptions to Sentry, Bugsnag, or any other bug reporters you want to set up. This is also where we will be logging to our Slack channel.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;report&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Exception&lt;/span&gt; &lt;span class="nv"&gt;$exception&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;report&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$exception&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are going to change this function to do a few things.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Log to Slack (that is why you are here!)&lt;/li&gt;
&lt;li&gt;Format the exception nicely.&lt;/li&gt;
&lt;li&gt;We will do an optional filter to filter out any vendor code.&lt;/li&gt;
&lt;li&gt;Remove the &lt;code&gt;parent::report($exception)&lt;/code&gt; as we are going to be doing this ourselves.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Our function will now look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;report&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Exception&lt;/span&gt; &lt;span class="nv"&gt;$exception&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// You can specify which exceptions not to report here&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;shouldntReport&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$exception&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// We are getting the directory so we can filter out any vendor code,&lt;/span&gt;
    &lt;span class="c1"&gt;// along with the directory, so it looks better for the developer.&lt;/span&gt;
    &lt;span class="nv"&gt;$dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__DIR__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$backtrace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nv"&gt;$exception&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getTraceAsString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nv"&gt;$backtrace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nv"&gt;$dir&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$backtrace&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$backtrace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;preg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'^(.*vendor.*)\n^'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$backtrace&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// And finally, we log the exception! &lt;/span&gt;
    &lt;span class="nc"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'slack'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'@here'&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;PHP_EOL&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;' . PHP_EOL . '&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nc"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;:**&lt;/span&gt; &lt;span class="s1"&gt;'.$exception-&amp;gt;getMessage() . PHP_EOL. '&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nc"&gt;Line&lt;/span&gt;&lt;span class="o"&gt;:**&lt;/span&gt; &lt;span class="s1"&gt;' . $exception-&amp;gt;getLine() . PHP_EOL. '&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nc"&gt;File&lt;/span&gt;&lt;span class="o"&gt;:**&lt;/span&gt; &lt;span class="s1"&gt;'. $exception-&amp;gt;getFile() . PHP_EOL . '&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nc"&gt;Trace&lt;/span&gt;&lt;span class="o"&gt;:**&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;PHP_EOL&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$backtrace&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that’s it! It is very easy to nicely log your exceptions using Laravel’s built-in logging system.&lt;/p&gt;

&lt;p&gt;image credits: &lt;a href="https://unsplash.com/photos/gNoqNvYAsBg"&gt;https://unsplash.com/photos/gNoqNvYAsBg&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
    </item>
    <item>
      <title>FlaskCaption - Basic Flask Project</title>
      <author>Atharva Shirdhankar</author>
      <pubDate>Tue, 20 Jul 2021 14:45:30 +0000</pubDate>
      <link>https://dev.to/star_trooper/flaskcaption-basic-flask-project-p03</link>
      <guid>https://dev.to/star_trooper/flaskcaption-basic-flask-project-p03</guid>
      <description>&lt;p&gt;&lt;strong&gt;Pre-requisites:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python 3 or higher.&lt;/li&gt;
&lt;li&gt;Flask&lt;/li&gt;
&lt;li&gt;Html and CSS&lt;/li&gt;
&lt;li&gt;Editor - VSCode / PyCharm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Part 1: Dependencies Installation&lt;/strong&gt;&lt;br&gt;
Open terminal and install the following dependencies.&lt;br&gt;
Commands :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;pip install flask&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install SpeechRecognition&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Part 2: Setting-Up Project&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Now create a folder give it anyname. Here, I have given folder name as Flaskproject.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1HTKoLCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efs24f8fjunh09sjocg0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1HTKoLCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efs24f8fjunh09sjocg0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, open the empty folder in VSCode or PyCharm IDE(I preferred VSCode).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Inside the empty folder we have to create a python file (app.py), a templates directory and static directory and inside static directory create styles directory.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fVrDxg92--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4mphvg78na8dbesqqpj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fVrDxg92--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4mphvg78na8dbesqqpj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Part 3: Coding&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open the app.py file and enter the following code:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Code &lt;code&gt;app.py&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from flask import Flask, render_template , request , redirect
import speech_recognition as sr

app = Flask(__name__)

@app.route("/", methods=["GET","POST"])
def index():
    transcript = ''
    if request.method == "POST":
         print("FORM DATA RECEIVED")

         if "file" not in request.files:
              return redirect(request.url)

         file = request.files["file"]
         if file.filename == "":
             return redirect(request.url)

         if file:
             recognizer = sr.Recognizer()  
             wavfile = sr.AudioFile(file)
             with wavfile as source:
                 data = recognizer.record(source)
             transcript = recognizer.recognize_google(data, key=None)

    return render_template('index.html' , transcript = transcript)

if __name__ == " main ":
    app.run(debug=True, threaded=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.Create index.html file in templates directory:&lt;/p&gt;

&lt;p&gt;Code &lt;code&gt;index.html&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;FlaskProject - AudiotoText&amp;lt;/title&amp;gt;
    &amp;lt;link rel="stylesheet" href="{{url_for('static', filename='styles/style.css')}}"&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;header&amp;gt;FlaskCaption&amp;lt;/header&amp;gt;
    &amp;lt;div id="mainContainer"&amp;gt;
        &amp;lt;h2&amp;gt;Upload Audio File&amp;lt;/h2&amp;gt;
        &amp;lt;form method="post" enctype="multipart/form-data"&amp;gt;
           &amp;lt;input type="file" name="file" id="fileinput"&amp;gt;
           &amp;lt;br&amp;gt;
           &amp;lt;input type="submit" id="submitButton" value="Process"/&amp;gt;

        &amp;lt;/form&amp;gt;
        {% if transcript != "" %}
        &amp;lt;div class="speechTranscriptContainer"&amp;gt;
            &amp;lt;h1&amp;gt;Transcripted Text&amp;lt;/h1&amp;gt;
            &amp;lt;p&amp;gt;{{transcript}}&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        {% endif %}

    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3.Create a styles.css file inside static/styles directory:&lt;/p&gt;

&lt;p&gt;Code &lt;code&gt;style.css&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
body{
    margin: 0;
    padding: 0;
    background-color: aliceblue;

}

h1, p , input{
    font-family: cursive;
}

header{
    display: flex;
    justify-content: center; 
    font-size: 50px;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

#mainContainer{
    display: flex;
    align-items: center;
    flex-direction: column;
    border-radius: 10px;
    background-color: white;
    margin-top: 15%;   
}

#submitButton{
    background-color: #0191FE;
    color: white;
    border: none;
    border-radius: 10px;
    margin-top: 10px;
    margin-left: 30%;
    padding: 10px;   
}

#submitButton:hover{
    cursor: pointer;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Part 4: Execution&lt;/strong&gt;&lt;br&gt;
To run the flask webapp we need one command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;flask run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--39-a7-pO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l2hujywqdffmpyg3h818.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--39-a7-pO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l2hujywqdffmpyg3h818.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This command will run our flask webapp locally on port number 5000 by default.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 5: Output&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pWi_eYJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3r7rxeqw6yaae6mm3lf2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pWi_eYJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3r7rxeqw6yaae6mm3lf2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 6: Final File Structure:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0uJi6beB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/du6x5ssp75p1puw21p8v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0uJi6beB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/du6x5ssp75p1puw21p8v.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Some Pros of the Project:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The accuracy of converting the &lt;strong&gt;Audio(Speech)&lt;/strong&gt; to convert &lt;strong&gt;text&lt;/strong&gt; is almost &lt;strong&gt;92%&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Some Cons of the Project:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The project only take .wav file as a input.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://github.com/StarTrooper08/FlaskCaption"&gt;Github Repository&lt;/a&gt;&lt;br&gt;
&lt;a href="https://pypi.org/project/Flask/"&gt;Flask Doc&lt;/a&gt;&lt;br&gt;
&lt;a href="https://pypi.org/project/SpeechRecognition/"&gt;SpeechRecognition Doc&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>flask</category>
    </item>
    <item>
      <title>JSON in AssemblyScript</title>
      <author>Jairus Tanaka</author>
      <pubDate>Tue, 20 Jul 2021 14:44:53 +0000</pubDate>
      <link>https://dev.to/assemblyscript/json-in-assemblyscript-28cg</link>
      <guid>https://dev.to/assemblyscript/json-in-assemblyscript-28cg</guid>
      <description>&lt;p&gt;&lt;strong&gt;Finally, AssemblyScript has a fully-functional JSON implementation.&lt;/strong&gt; &lt;em&gt;&lt;a href="https://github.com/aspkg/as-json"&gt;as-json&lt;/a&gt;&lt;/em&gt; implements full JSON compatibility that enables AssemblyScript to use JSON to communicate with APIs, store data, and more. In this article, I will introduce you to &lt;em&gt;as-json&lt;/em&gt; and help you include it into your project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;as-json&lt;/em&gt; uses the same general API as the JavaScript JSON object. We can then use it just like JS. However, we must install and prep it first.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;json-as
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nt"&gt;--transform&lt;/span&gt; json-as/transform
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Installation complete. Lets use some JSON! 🔥&lt;/p&gt;

&lt;p&gt;&lt;em&gt;json-test.ts&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;json-as&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// Create the Schemas&lt;/span&gt;
&lt;span class="c1"&gt;// @ts-ignore&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;json&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;JSONSchema&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;human&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;i32&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;f64&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// @ts-ignore&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;json&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Meta&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;awesome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Create the JSON object&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSONSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jairus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Tanaka&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;human&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;US&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;awesome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;english&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;43.130850291&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;32.926401705&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Now, encode and decode&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;encoded&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Encoded: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;encoded&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;decoded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;JSONSchema&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;encoded&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Decoded:`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`{`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;` firstName: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;decoded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;` lastName: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;decoded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;` age: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;decoded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;` human: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;decoded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;human&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;` meta: {`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`   country: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;decoded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;country&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`   awesome: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;decoded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;awesome&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;` },`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;` language: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;decoded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;language&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;` location: [&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;decoded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;decoded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;]`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`}`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: If you are not running in WASI, use as-console instead.&lt;/p&gt;

&lt;p&gt;So, &lt;em&gt;json-as&lt;/em&gt; serialized and deserialized JSON. Lets see if it was correct.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;json-test.ts&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;json-as&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// Create the Schemas&lt;/span&gt;
&lt;span class="c1"&gt;// @ts-ignore&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;json&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;JSONSchema&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;human&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;i32&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;f64&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// @ts-ignore&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;json&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Meta&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;awesome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Create the JSON object&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSONSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jairus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Tanaka&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;human&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;US&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;awesome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;english&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;43.130850291&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;32.926401705&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Now, encode and decode&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;encoded&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;decoded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;JSONSchema&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;encoded&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// We perform an equality check&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;encoded&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;decoded&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Yay! JSON-AS works! 😄&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Oof. JSON-AS died.😖&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yay! JSON is now working for AssemblyScript. Go ahead and mess around with it and let me know what you make.&lt;br&gt;
NPM: &lt;a href="https://www.npmjs.com/package/json-as"&gt;https://www.npmjs.com/package/json-as&lt;/a&gt;&lt;br&gt;
GitHub: &lt;a href="https://github.com/aspkg/as-json"&gt;https://github.com/aspkg/as-json&lt;/a&gt;&lt;br&gt;
Thanks for reading 😁&lt;/p&gt;

</description>
      <category>webassembly</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>A Illustrated Guide To: Fusion Development</title>
      <author>Nitya Narasimhan</author>
      <pubDate>Tue, 20 Jul 2021 14:24:31 +0000</pubDate>
      <link>https://dev.to/azure/a-illustrated-guide-to-fusion-development-22l4</link>
      <guid>https://dev.to/azure/a-illustrated-guide-to-fusion-development-22l4</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;TL;DR: Key resources for learning more!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;👩🏽‍💻 &lt;a href="https://docs.microsoft.com/en-us/learn/paths/transform-business-applications-with-fusion-development/?WT.mc_id=azurefunctionsonlearntv-35831-ninarasi"&gt;Explore the Fusion Development Learning Path&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;👩🏽‍🏫 &lt;a href="https://docs.microsoft.com/en-us/powerapps/guidance/fusion-dev-ebook/?WT.mc_id=azurefunctionsonlearntv-35831-ninarasi"&gt;Read the Fusion Development eBook&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📺 &lt;a href="https://channel9.msdn.com/Events/Azure-Functions/Azure-Functions-Discover-OpenAPI-and-Power-Apps?WT.mc_ID=azurefunctionsonlearntv-35831-ninarasi"&gt;Watch Azure Functions Sessions On-Demand&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🗺 &lt;a href="https://aka.ms/visual/fusion-dev-path/illustrated"&gt;Download a hi-res poster of the Illustrated Guide&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;This is a low-resolution image for the illustrated guide. Click on it to access the hi-res image -- or scroll down for a deep-dive into the illustrations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aka.ms/visual/fusion-dev-path/illustrated"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OCSfvhrx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pm9ralwv9bccbfhnlpm1.png" alt="An Illustrated Guide to Fusion Development: Shows a 25-cell 5x5 grid of images, each illustrating one unit or section of the Fusion Dev Learning Path "&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;Recently, a few colleagues of mine hosted an online event that explores the topics of &lt;a href=""&gt;OpenAPI&lt;/a&gt;, &lt;a href=""&gt;Power Platforms&lt;/a&gt; and &lt;a href=""&gt;Fusion Development&lt;/a&gt; in a series of short, actionable talks. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/azure" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TSIs2QqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--MdxUgcr_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/512/64ce0b82-730d-4ca0-8359-2c21513a0063.jpg" alt="Microsoft Azure"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vOJaOvLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--bjwYsbM9--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/8619/686ae69d-8c31-462d-bd5e-c373a688e99d.png" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/azure/azure-functions-discover-open-api-a-learning-event-1okh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Azure Functions: Discover OpenAPI &amp;amp; Power Apps - A Learning Event! &lt;/h2&gt;
      &lt;h3&gt;Nitya Narasimhan for Microsoft Azure ・ Jul 6 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#azure&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#openapi&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#powerfuldevs&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#serverless&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Didn't get a chance to attend the live event? Or just want to revisit a specific session? We have you covered! All the session replays are now available &lt;a href="https://channel9.msdn.com/Events/Azure-Functions/Azure-Functions-Discover-OpenAPI-and-Power-Apps?WT.mc_ID=azurefunctionsonlearntv-35831-ninarasi"&gt;here on Ch9&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ISqV8K5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fl4i7wxnsoj9js5vfu4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ISqV8K5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fl4i7wxnsoj9js5vfu4.png" alt="Image shows 6 speaker cards for the 6 sessions from the Azure Functions event, each linked to a video for replay"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#learning-resources"&gt;
  &lt;/a&gt;
  Learning Resources
&lt;/h2&gt;

&lt;p&gt;The event was structured around the broader theme of &lt;em&gt;low-code development&lt;/em&gt; and &lt;em&gt;fusion teams&lt;/em&gt;. Want to dive into more details? &lt;/p&gt;

&lt;p&gt;We have resources to suit your learning style:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;👩🏽‍💻 &lt;a href="https://docs.microsoft.com/en-us/learn/paths/transform-business-applications-with-fusion-development/?WT.mc_id=azurefunctionsonlearntv-34311-ninarasi"&gt;The Fusion Development Learning Path&lt;/a&gt; for kinesthetic learners. Explore concept step-by-step, with hands-on exercises. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;👩🏽‍🏫 &lt;a href="https://docs.microsoft.com/en-us/powerapps/guidance/fusion-dev-ebook/?WT.mc_id=azurefunctionsonlearntv-35831-ninarasi"&gt;The Fusion Development eBook&lt;/a&gt; if learn by reading. Go from Fusion Development concepts, to code - using Power Plaform to build low-code apps!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're a visual or visual-spatial learner who likes to "see the big picture" before you dive into details - then this illustrated guide to Fusion Development is for you!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-illustrated-guide"&gt;
  &lt;/a&gt;
  The Illustrated Guide
&lt;/h2&gt;

&lt;p&gt;The illustrated guide is part of my &lt;a href="https://twitter.com/sketchthedocs"&gt;SketchTheDocs&lt;/a&gt; initiative to bring visual storytelling to tech. 65% of us are visual learners who absorb, retain, and recall, information better when we have visual cues and illustrations.&lt;/p&gt;

&lt;p&gt;Scroll up to see a low-res (thumbnail) of the illustrated guide, or visit &lt;a href="https://aka.ms/visual/fusion-dev-path/illustrated"&gt;this link&lt;/a&gt; to view or download a poster-sized version that is easier to read. Better still, install it as desktop wallpaper while you go through the learning path - and see if you can make or reinforce connections.&lt;/p&gt;

&lt;p&gt;You can also visit this tweet for a 30-second timelapse that shows how the guide was created.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2RLIUi_l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1415091010430963712/pu/img/TLVSWk54amhnLyKX.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hCF7KqCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336782118924455944/K4ZDwHHg_normal.png" alt="Nitya Narasimhan profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Nitya Narasimhan
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/nitya"&gt;@nitya&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Sneak peek at a Visual Guide to Fusion Development - illustrated summary of a &lt;a href="https://twitter.com/MSFTLearn"&gt;@MSFTLearn&lt;/a&gt; path built by my colleagues to show how pro-devs &amp;amp; citizen devs can work together to develop apps for biz needs.&lt;br&gt;&lt;br&gt;Learn path:&lt;br&gt;&lt;a href="https://t.co/Au7j5ThrtB"&gt;aka.ms/visual/fusion-…&lt;/a&gt;&lt;br&gt;&lt;br&gt;Related Event:&lt;br&gt;&lt;a href="https://t.co/GGGcdDijOk"&gt;docs.microsoft.com/en-us/events/l…&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      23:36 PM - 13 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1415092751348211714" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1415092751348211714" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1415092751348211714" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;h2&gt;
  &lt;a href="#under-the-hood"&gt;
  &lt;/a&gt;
  Under The Hood
&lt;/h2&gt;

&lt;p&gt;I'm working on a blog post that I will link in later, that provides a deep dive into the individual cells. &lt;/p&gt;

&lt;p&gt;For now, let's look under the hood at a few visuals that showcase core themes:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-tech-intensity"&gt;
  &lt;/a&gt;
  1. Tech Intensity
&lt;/h3&gt;

&lt;p&gt;Chance are you've heard Microsoft CEO (Satya Nadella) mention &lt;code&gt;Tech Intensity&lt;/code&gt; more than once. But what does it mean? Here's an illustrated explainer of the concept. Digital transformation cannot succeed without three dimensions that building on each other: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;technology adoption&lt;/em&gt; readiness for real-world use &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;organizational trust&lt;/em&gt; that technology is reliable&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;individual capability&lt;/em&gt; to build &amp;amp; use technology&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MfbT07lB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnwxk3brr6gjh89amup3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MfbT07lB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnwxk3brr6gjh89amup3.png" alt="Image visualizing the Tech Intensity lesson"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn more &lt;a href="https://docs.microsoft.com/en-us/learn/modules/transform-business-software-authoring-with-fusion-dev/2-tech-intensity?WT.mc_id=azurefunctionsonlearntv-35831-ninarasi"&gt;in this unit&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-fusion-development-process"&gt;
  &lt;/a&gt;
  2. Fusion Development Process
&lt;/h3&gt;

&lt;p&gt;Fusion Teams reflect our growing awareness that solving real-world business problems will require the skills of diverse teams (business devs, pro devs, citizen devs) &lt;em&gt;working together&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A Fusion Development Process is about breaking the silos between teams, and providing tools and workflows that empower &lt;em&gt;all types of devs&lt;/em&gt; to build apps by contributing their expertise (where comfortable) and asking others for help (where they have skill gaps).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vSTomw9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eia1ib5or0i8pbtk4dcx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vSTomw9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eia1ib5or0i8pbtk4dcx.png" alt="Image visualizing the Fusion Development process"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn more &lt;a href="https://docs.microsoft.com/en-us/learn/modules/transform-business-software-authoring-with-fusion-dev/4-fusion-development-process?WT.mc_id=azurefunctionsonlearntv-35831-ninarasi"&gt;in this unit&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-low-code-development"&gt;
  &lt;/a&gt;
  3. Low Code Development
&lt;/h3&gt;

&lt;p&gt;While fusion development explores the human workflows required to build apps, the low code development focus is on &lt;em&gt;removing barriers&lt;/em&gt; that prevent different fusion team members from contributing to app development.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;High Code Apps&lt;/em&gt; reflect traditional notions of app development, with rich programming languages, frameworks and workflows, and more &lt;strong&gt;imperative&lt;/strong&gt; approaches to development.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Low Code Apps&lt;/em&gt; are about more action with &lt;em&gt;less code&lt;/em&gt;, employing scripting languages, drag-and-drop UI wizards, and more &lt;strong&gt;declarative&lt;/strong&gt; approaches to development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zNIhfHtl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjv7xx5o1u2dnpl72o7x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zNIhfHtl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjv7xx5o1u2dnpl72o7x.png" alt="Image visualizing the meaning of Low Code Development"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn more &lt;a href="https://docs.microsoft.com/en-us/learn/modules/understanding-low-code-as-a-traditional-developer/?WT.mc_id=azurefunctionsonlearntv-35831-ninarasi"&gt;in this module&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-power-apps-platform"&gt;
  &lt;/a&gt;
  4. Power Apps Platform
&lt;/h3&gt;

&lt;p&gt;Power Apps is &lt;a href="https://powerplatform.microsoft.com/en-us/power-apps/"&gt;part of Microsoft's Power Platform&lt;/a&gt; suite of technologies supporting low-code development. Citizen developers can use this to rapidly prototype apps without requiring a programming background. Pro developers can enhance fusion team development by using platform tools to build web APIs, data connectors, and serverless integration support for their team-mates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wxFiYmdq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7tplcloiiw220is0zwv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wxFiYmdq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7tplcloiiw220is0zwv.png" alt="Image visualizing Power Apps technology"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn more &lt;a href="https://docs.microsoft.com/en-us/learn/modules/understanding-low-code-as-a-traditional-developer/2-what-is-low-code?WT.mc_id=azurefunctionsonlearntv-35831-ninarasi"&gt;in this unit&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#summary-amp-next-steps"&gt;
  &lt;/a&gt;
  Summary &amp;amp; Next Steps
&lt;/h3&gt;

&lt;p&gt;That was a rapid introduction to Fusion Development and related terms and technologies. I hope you found it fun &lt;strong&gt;and&lt;/strong&gt; functional - and that it inspires you to want to learn more!&lt;/p&gt;

&lt;p&gt;Here are some resources for next steps! Happy learning journeys!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👩🏽‍💻 &lt;a href="https://docs.microsoft.com/en-us/learn/paths/transform-business-applications-with-fusion-development/?WT.mc_id=azurefunctionsonlearntv-35831-ninarasi"&gt;Explore the Fusion Development Learning Path&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;👩🏽‍🏫 &lt;a href="https://docs.microsoft.com/en-us/powerapps/guidance/fusion-dev-ebook/?WT.mc_id=azurefunctionsonlearntv-35831-ninarasi"&gt;Read the Fusion Development eBook&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📺 &lt;a href="https://channel9.msdn.com/Events/Azure-Functions/Azure-Functions-Discover-OpenAPI-and-Power-Apps?WT.mc_ID=azurefunctionsonlearntv-35831-ninarasi"&gt;Watch Azure Functions Sessions On-Demand&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🗺 &lt;a href="https://aka.ms/visual/fusion-dev-path/illustrated"&gt;Download a hi-res poster of the Illustrated Guide&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




</description>
      <category>beginners</category>
      <category>powerfuldevs</category>
      <category>azure</category>
      <category>openapi</category>
    </item>
  </channel>
</rss>
