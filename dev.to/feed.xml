<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Features of clean code architecture | Node.js</title>
      <author>DhiWise</author>
      <pubDate>Fri, 26 Nov 2021 08:01:31 +0000</pubDate>
      <link>https://dev.to/dhiwise/features-of-clean-code-architecture-nodejs-1big</link>
      <guid>https://dev.to/dhiwise/features-of-clean-code-architecture-nodejs-1big</guid>
      <description>&lt;p&gt;Goal: Make our code resilient against changes over time&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8EolZ5bf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/1%2Addura25okCbtOt9PsKfv9Q.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8EolZ5bf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/1%2Addura25okCbtOt9PsKfv9Q.jpeg" alt="" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-brief-introduction-to-architecture"&gt;
  &lt;/a&gt;
  A brief introduction to architecture
&lt;/h2&gt;

&lt;p&gt;Software architecture is primarily the structure of the software components to be arranged in a purposeful and efficient system. The goal of software architecture is to minimize the human effort required to build and maintain software systems. One of the most effort-consuming processes in the software development cycle is to accommodate change. In software development, the primary method of handling change in the system is to create a separation of concerns between the layers of your software. This is where the Clean code architecture, created by &lt;a href="https://twitter.com/unclebobmartin"&gt;Robert Cecil Martin&lt;/a&gt; (a.k.a Uncle Bob), shines.&lt;/p&gt;

&lt;p&gt;Following are the benefits of implementing a clean code architecture with snippets from a node application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#framework-independence"&gt;
  &lt;/a&gt;
  Framework independence
&lt;/h2&gt;

&lt;p&gt;Using the framework for a lot of operations can easily make our code heavily dependent on the framework we are using. Creating a tight coupling between our code and the underlying framework leads to difficulty in changing the framework in the future. For example, if you want to move from “express” to “sails”&lt;/p&gt;

&lt;p&gt;To resolve this :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We limit our dependability on the framework, as much as possible.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We do this by using an &lt;em&gt;adapter design pattern&lt;/em&gt; between the framework and our project’s code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The same approach is used to adapt Response objects as well.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In a MERN stack application, we create an adaptRequest() function to act as an &lt;em&gt;intermediary adapter&lt;/em&gt; between our express framework and application code i.e {code in the inner layers}. Check out my sample snippet below.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#database-independent"&gt;
  &lt;/a&gt;
  Database independent
&lt;/h2&gt;

&lt;p&gt;We use a similar adapter design pattern to make your code {in the inner layers} independent of the database we are using.&lt;/p&gt;

&lt;p&gt;Basically, we can create a DB service interface that consists of all generic database operations. Then implement a DB service for each type of database we want to use in your project. To give an example, suppose we have the requirement to use multiple heterogeneous databases(say DynamoDB and MongoDb) in a single project, we will create Db service for each of the databases we are using and simply pass the Db service(DynamoDbService.js) as a dependency injection to the service(say FileUploadService.js) that needs to perform the operation on that database(DynamoDB).&lt;/p&gt;

&lt;p&gt;You can go a level deeper by passing the dbConnectionInstance as a dependency of the DB service. Thereby enabling you to make/switch DB connections within the project, by simply changing the dbConnectionInstance.&lt;br&gt;
&lt;em&gt;(I suggest doing so only if you have to connect to multiple db instances from a single application.)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#avoiding-breaking-changes-due-to-third-party-libraries"&gt;
  &lt;/a&gt;
  Avoiding breaking changes due to third party libraries
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Third-party libraries are often the cause of change in a project that has a longer development life span.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Everything from finding a better alternate library to upgrading the existing library may cause the code to be changed and often breaks the code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Again our adapter design pattern can be implemented here to resolve this issue.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We simply create a Service (say ThirdPartyLib.js) and import third-party libraries in it and wrap the third-party function with your own function and append any extra logic if necessary. Then use this, ThirdParyLib.js, library wherever we need to use third-party methods.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#dependency-injection"&gt;
  &lt;/a&gt;
  Dependency injection
&lt;/h2&gt;

&lt;p&gt;Dependency Injection, Dependency Injection, Dependency Injection — you have probably heard this word many times by now. But what is dependency injection?&lt;/p&gt;

&lt;p&gt;‘Dependency Injection’ is a 25-dollar term for a 5-cent concept…Dependency injection means giving an object its instance variables. Really. That’s it. — &lt;a href="http://jamesshore.com/v2/blog/2006/dependency-injection-demystified"&gt;[3]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why do we use dependency injection in the first place?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Creating Testability&lt;br&gt;
Dependency injection is a very useful technique for testing, since it allows dependencies to be mocked or stubbed out. &lt;a href="https://stackoverflow.com/questions/130794/what-is-dependency-injection"&gt;[4]&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Achieving Loose coupling&lt;br&gt;
The obvious benefit of loose coupling is that it provides the flexibility to change our dependencies without modifying the underlying business logic. This provides us with a greater ability to try out newer alternatives both during development as well as during testing without risking the changes in the code of the inner layers.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#creating-clean-code-boilerplate"&gt;
  &lt;/a&gt;
  Creating clean code boilerplate
&lt;/h2&gt;

&lt;p&gt;Although creating projects using clean code architecture has many benefits, creating the boilerplate code has always been an uphill task. The sample code you get online is great for learning purposes; however, creating a real-world application is significantly different from it. An easy way to do that is to use a new online code-generating platform called &lt;a href="https://app.dhiwise.com/"&gt;DhiWise&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can add your models using the table view, click on build app, select clean code architecture from the combo box, and Boom!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J0an7sTy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/5760/1%2AFbI2hH15ZNZIE9mCPBMwiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J0an7sTy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/5760/1%2AFbI2hH15ZNZIE9mCPBMwiw.png" alt="You can view the generated application’s code online or dl the source code." width="880" height="487"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bibliography"&gt;
  &lt;/a&gt;
  Bibliography
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=7EmboKQH8lM"&gt;Clean Code — Uncle Bob entire series of lectures&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/dev-mastery/comments-api"&gt;Dev mastery’s clean code architecture demo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/howardmann/clean-node"&gt;Howardamann’s clean code demo app&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.jamesshore.com/v2/blog/2006/dependency-injection-demystified"&gt;Dependency Injection Demystified&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html"&gt;The clean code blog by Robert C. Martin (Uncle Bob)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/130794/what-is-dependency-injection"&gt;Discussion on DI over stack overflow&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.dhiwise.com/"&gt;Dhiwise-pro code platform&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>showdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Who am I?</title>
      <author>Manu Martinez</author>
      <pubDate>Fri, 26 Nov 2021 07:46:09 +0000</pubDate>
      <link>https://dev.to/whitehatdevv/who-am-i-4n59</link>
      <guid>https://dev.to/whitehatdevv/who-am-i-4n59</guid>
      <description>&lt;h2&gt;
  &lt;a href="#wtf-oh-shit"&gt;
  &lt;/a&gt;
  WTF? Oh, &lt;strong&gt;Shit&lt;/strong&gt; 💩
&lt;/h2&gt;

&lt;p&gt;Yes it's exactly which you have just read, it's completely describe such a &lt;strong&gt;Shit&lt;/strong&gt;, but why?, the question should be why is it called &lt;strong&gt;shit&lt;/strong&gt;?&lt;br&gt;
In this posts I will share you everything you need to known as a developer, I will tell you exactly as I have felt it without skimping anything. 😇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;important&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;If you are not interested please not continue reading&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hey 😄, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;important&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#let-me-introduce-it"&gt;
  &lt;/a&gt;
  Let me introduce it 😌
&lt;/h3&gt;

&lt;p&gt;My &lt;em&gt;full name&lt;/em&gt; is Emanuel (&lt;em&gt;you can call me Manu&lt;/em&gt;), I was born in Uruguay but actually I'm located in &lt;strong&gt;Spain&lt;/strong&gt; 🇪🇸, I suppose you think I'm older, but no 😜, at the moment I'm twenty years old, I started coding when I was 14 years old. Maybe you are asking for why I started coding at this age, the answer can be summarise in one word: &lt;br&gt;
&lt;strong&gt;Curiosity&lt;/strong&gt; 😙.  &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-will-this-series-talk-about"&gt;
  &lt;/a&gt;
  What will this series talk about?
&lt;/h3&gt;

&lt;p&gt;It's really important for me, I'm sure you have &lt;strong&gt;already&lt;/strong&gt; heart that developer life is incredible, blah, blah blah 🤓, a lot of suppositions without any fundament, the &lt;strong&gt;typical&lt;/strong&gt; phrase:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Coding will be you millionaire 💰.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;All that glitters is not gold&lt;/em&gt;, you have to take into accounts a &lt;strong&gt;couple of things&lt;/strong&gt; you aren't known, really all of us are &lt;strong&gt;ignorant&lt;/strong&gt; 🥸, we think we know everything, we think we are gifted, but no. I'm overwhelmed about the society's &lt;strong&gt;ignorance&lt;/strong&gt;. Almost people get settle with their lives, making a cyclic and eternal life. I'm here 🤨 trying to show you why you shouldn't stop learning, how is exactly a software engineer life? &lt;/p&gt;

&lt;p&gt;Really, let me tell you, you do not have to be &lt;strong&gt;agree with me&lt;/strong&gt; 🥲, it's only my point of view based in my &lt;em&gt;experience&lt;/em&gt; and &lt;em&gt;knowledge&lt;/em&gt;, this is why I have learnt in 7 years as software engineer, I will be more &lt;strong&gt;transparent&lt;/strong&gt; to you than with my &lt;strong&gt;family&lt;/strong&gt; 🤐. &lt;/p&gt;

&lt;p&gt;Every &lt;strong&gt;Friday&lt;/strong&gt; I will post a new story in this series talking about all this topics, I recommend you subscribing to the newsletter to get up to date with my &lt;strong&gt;latest post&lt;/strong&gt;. Run this code in your mind:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;postReminder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Reminder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shit Post 💩&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Manu will release a new post in his story&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urgently&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;everyFriday&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setReminder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;postReminder&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finally"&gt;
  &lt;/a&gt;
  Finally
&lt;/h2&gt;

&lt;p&gt;I'm here to help you growing in your professional &lt;strong&gt;career&lt;/strong&gt;, if you regarding any question, suggestion or complain please &lt;strong&gt;do not hesitate&lt;/strong&gt; in contact me. I'm very glad in helping you 🤤&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>leadership</category>
    </item>
    <item>
      <title>30 Best Chrome Extensions for Personal Productivity in 2022</title>
      <author>katemay</author>
      <pubDate>Fri, 26 Nov 2021 07:44:35 +0000</pubDate>
      <link>https://dev.to/katemay48947206/30-best-chrome-extensions-for-personal-productivity-in-2022-426</link>
      <guid>https://dev.to/katemay48947206/30-best-chrome-extensions-for-personal-productivity-in-2022-426</guid>
      <description>&lt;p&gt;Having the capability to enhance our online presence and optimize work without extra efforts, Chrome extensions are helpful in achieving a high level of efficiency. In this post, you will find 30 top Сhrome extensions in 10 recommended categories for your personal productivity in 2022: &lt;a href="https://blog.tmetric.com/chrome-productivity-extensions/"&gt;https://blog.tmetric.com/chrome-productivity-extensions/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Historical Test Report Portal — How Developers Accelerate the Testing Process</title>
      <author>Cody Simons</author>
      <pubDate>Fri, 26 Nov 2021 07:38:58 +0000</pubDate>
      <link>https://dev.to/codysimons20/historical-test-report-portal-how-developers-accelerate-the-testing-process-16fm</link>
      <guid>https://dev.to/codysimons20/historical-test-report-portal-how-developers-accelerate-the-testing-process-16fm</guid>
      <description>&lt;p&gt;"Your testing team, from developers to testers, has put out a great amount of work to design test cases.&lt;/p&gt;

&lt;p&gt;Knowing that an error-free testing process simply does not exist, when it comes to the test execution, this one fails, while the rest passes. Or, is one of them is taking much longer to complete compared to previous runs? How do you determine if your tests have slowed down or increased their probability of failing?&lt;/p&gt;

&lt;p&gt;This requires context–historical logs from past sessions to be more specific. Without trends of test performance over time, decisions made and corrective measures could be misleading, resulting in wasted efforts, time, and the overall ROI for your project."&lt;br&gt;
&lt;a href="https://www.katalon.com/resources-center/blog/historical-data-unit-test/"&gt;Continue reading&lt;/a&gt; &lt;/p&gt;

</description>
      <category>testing</category>
      <category>historicaltestreport</category>
      <category>tester</category>
    </item>
    <item>
      <title>A Detailed Guide on Angular Onpush Change Detection and Component Design</title>
      <author>Tarun Gurang</author>
      <pubDate>Fri, 26 Nov 2021 07:14:52 +0000</pubDate>
      <link>https://dev.to/tarungurang/a-detailed-guide-on-angular-onpush-change-detection-and-component-design-254n</link>
      <guid>https://dev.to/tarungurang/a-detailed-guide-on-angular-onpush-change-detection-and-component-design-254n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;For all of our favorite projects, we've switched to Angular. We understand what Angular has to offer and how we can use it to create fantastic online applications. However, there are a few things to know about Angular that will help us use it more effectively in our projects.&lt;/p&gt;

&lt;p&gt;Because data flow is at the heart while performing everything through Angular, change detection is something to be aware of. It will make it much easier to track out errors and improve our apps when working with large data sets.&lt;/p&gt;

&lt;p&gt;Did we ever try to implement the Angular OnPush Change Detection technique in our project but run into some difficult-to-debug bugs and have to revert to the default change detection?&lt;/p&gt;

&lt;p&gt;In this article, we’ll look at Angular change detection, data structures, and the process of making them immutable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-change-detection-in-angular"&gt;
  &lt;/a&gt;
  What is Change Detection in Angular?
&lt;/h3&gt;

&lt;p&gt;When we make a modification to one of our models, Angular recognizes it and updates the views right away. In Angular, this is called change detection. This method aims to ensure that the underlying views and their accompanying models are always in sync. This key component of Angular is what makes it tick, and it's one of the reasons why it's such a good choice for building modern online apps.&lt;/p&gt;

&lt;p&gt;Any of the following scenarios can cause an Angular model to change:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Events in the DOM (click, hover over, etc.)&lt;/li&gt;
&lt;li&gt;Requests made with AJAX&lt;/li&gt;
&lt;li&gt;setTimer() and setInterval() are two methods for setting timers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Read More: &lt;a href="https://www.ifourtechnolab.com/blog/an-important-guide-on-angular-directives-and-their-types"&gt;An Important Guide On Angular Directives And Their Types&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#change-detectors"&gt;
  &lt;/a&gt;
  Change Detectors
&lt;/h4&gt;

&lt;p&gt;All Angular programs are run out of a hierarchical tree of components. During runtime, Angular creates a separate change detector class for each component in the tree, resulting in a hierarchy of change detectors that is equal to the component hierarchy tree.&lt;/p&gt;

&lt;p&gt;Angular travels down this tree of change detectors whenever change detection is triggered to see if any of them have reported changes.&lt;/p&gt;

&lt;p&gt;Every detected change is subjected to a single change detection cycle, which begins at the root change detector and proceeds down sequentially. Because we know component data can only come from its parent, this sequential design choice is nice because it predictably changes the model.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#change-detectors-hierarchy"&gt;
  &lt;/a&gt;
  Change Detectors Hierarchy
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UhtBtg_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81d2hpahat2e9m9b3ojm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UhtBtg_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81d2hpahat2e9m9b3ojm.jpg" alt="Change Detectors Hierarchy" width="636" height="312"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To report changes to Angular, the change detectors maintain track of the component's historical and current states as well as its structure.&lt;/p&gt;

&lt;p&gt;When Angular receives a change detector report, it instructs the appropriate component to re-render and update the document object model (DOM).&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#change-detection-strategies"&gt;
  &lt;/a&gt;
  Change Detection Strategies
&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;Value vs. Reference Types&lt;/strong&gt;&lt;br&gt;
To comprehend what a change detection strategy is and how it works, we must first comprehend the differences between JavaScript value types and reference types. This part can be skipped if we are already familiar with how this works.&lt;/p&gt;

&lt;p&gt;Let's start with a review of the value and reference types, as well as their categories.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Value Types&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Boolean&lt;/li&gt;
&lt;li&gt;Null&lt;/li&gt;
&lt;li&gt;Undefined&lt;/li&gt;
&lt;li&gt;Number&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the sake of simplicity, assume that these types merely store their values in stack memory (which is technically incorrect, but it will suffice for this article). For example, look at the stack memory and its values in the graphic below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_IprF7ih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypcrmj86nv77x9roocvx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_IprF7ih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypcrmj86nv77x9roocvx.jpg" alt="Stack Memory" width="191" height="391"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference Types&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Arrays&lt;/li&gt;
&lt;li&gt;Objects&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These types are a little more complicated since they store a reference to their real value on the heap memory in the stack memory. In the sample graphic below, we can see how stack memory and heap memory interact. The stack memory refers to the heap memory's real values for the reference type.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LTCrixJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04r94dwwjt2c3jjp4ygb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LTCrixJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04r94dwwjt2c3jjp4ygb.jpg" alt="Heap Memory" width="661" height="549"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The important difference between value types and reference types is that reading the value of a value type requires only verifying the stack memory, whereas reading the value of a reference type requires first querying the stack memory to obtain a reference, and then using that reference to query the heap memory to locate the reference type's value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Searching for Reliable &lt;a href="https://www.ifourtechnolab.com/angular-js-development-company"&gt;Angular Development Company&lt;/a&gt;? Your Search ends here.&lt;/strong&gt;&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#default-strategy"&gt;
  &lt;/a&gt;
  Default Strategy
&lt;/h5&gt;

&lt;p&gt;As previously stated, Angular watches changes to the model to ensure that it captures all of them. It will look for any changes between the previous state of the overall application model and the current state.&lt;/p&gt;

&lt;p&gt;Angular raises the following question in the default change detection strategy: Has any value in the model changed? However, with a reference type, we can use strategies to ask a better query. The OnPush change detection method comes into play here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;onPush Strategy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The OnPush technique is based on the notion that treating reference types like immutable objects allows us to notice changes in values much faster. When a reference type is immutable, it indicates that the reference on the stack memory must change every time it is updated. Now we can simply check: Has the reference type's reference (in the stack) changed? If this is the case, double-check all the values (on the heap). If we are having trouble understanding this, go back to the previous stack heap diagrams.&lt;/p&gt;

&lt;p&gt;Instead of asking one question, the OnPush approach asks two. Has there been a change in the reference type's reference? Have the values in heap memory changed if this is the case?&lt;/p&gt;

&lt;p&gt;Assume we have a 30 element immutable array, and we want to determine if there have been any changes. We know that in order for the immutable array to be updated, the reference to it (in the stack) would have to change. This means we can check to see if the array reference is different right away, potentially saving us 30 more tests (in the heap) to figure out which element is different. The OnPush approach is what it's called.&lt;/p&gt;

&lt;p&gt;So, what does it mean to treat reference types as immutable, we might ask? It means we never set a reference type's property, but instead reassign the value as a whole. Take a look at what follows:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Treating objects as mutable:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;static mutable() {
  var before = {foo: "bar"};
  var current = before;
  current.foo = "hello";
  console.log(before === current);
  // =&amp;gt; true
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Treating objects as immutable:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;static mutable() {
  var before = {foo: "bar"};
  var current = before;
  current = {foo "hello"};
  console.log(before === current);
  // =&amp;gt; false
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's worth noting that in the examples above, we're treating reference types as immutable by convention, so we're still dealing with changeable objects at the end of the day.&lt;/p&gt;

&lt;p&gt;So, how do we put an OnPush strategy into action for a component? Simply include the changeDetection argument in their @Component annotation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import {ChangeDetectionStrategy, Component} from '@angular/core';
@Component({
  // ...
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class OnPushComponent {
  // ...
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h6&gt;

&lt;p&gt;Angular change detection is a built-in framework feature that ensures that a component's data and its HTML template view are always in sync. Change detection determines whether the view of each component has to be updated by recognizing typical browser events like mouse clicks, HTTP requests, and other types of events.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Splitting User Stories - What it is and techniques used</title>
      <author>Rebecca Ferrao</author>
      <pubDate>Fri, 26 Nov 2021 07:09:07 +0000</pubDate>
      <link>https://dev.to/rebecca/splitting-user-stories-what-it-is-and-techniques-used-1pkp</link>
      <guid>https://dev.to/rebecca/splitting-user-stories-what-it-is-and-techniques-used-1pkp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-user-story"&gt;
  &lt;/a&gt;
  What is a user story?
&lt;/h2&gt;

&lt;p&gt;Firstly, let's understand what stories are in agile. It is a short description that talks about the desired function from the perspective of the user. Agile teams size these in such a way that they can be completed in one iteration. These are the basic artifacts that eventually define the system behavior. Both business as well as tech stakeholders can understand the story's intent with ease.&lt;/p&gt;

&lt;p&gt;They are of two types: User stories and Enabler stories. The former delivers the functionality to the final user. The latter on the other hand brings more visibility into the building process. In this blog, we will be dealing with user stories, and splitting user stories.&lt;/p&gt;

&lt;p&gt;To understand the difference between the two types of stories, let's take this example:&lt;/p&gt;

&lt;p&gt;User story (end user): As a commuter, I want to identify the nearest cab I can book so that I can travel to my destination faster.&lt;/p&gt;

&lt;p&gt;Enabler story: Use the device GPS and sync with nearby registered device GPS.&lt;/p&gt;

&lt;p&gt;In agile, user stories are the most basic means of telling what is the needed functionality. They focus on the end user and are very customer-centric in nature. The subject of interest in a user story isn't the system, but rather the user. User stories also define the business value of the requirement at hand.&lt;/p&gt;

&lt;p&gt;So, roughly, a user story would be written combining the following:&lt;/p&gt;

&lt;p&gt;User Story = User role + Activity + Business Value.&lt;/p&gt;

&lt;p&gt;In the above example, the user role is that of the commuter.&lt;/p&gt;

&lt;p&gt;Activity is identifying the nearest cab.&lt;/p&gt;

&lt;p&gt;The business value would then be the need to travel faster to the destination.&lt;/p&gt;

&lt;p&gt;Through this method of writing user stories, the dev teams understand these things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Who would be using the product/ who they are building for&lt;/li&gt;
&lt;li&gt;What the user is doing with the feature&lt;/li&gt;
&lt;li&gt;Why are they building the product?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we know what user stories are, let's move on to understanding splitting user stories.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-splitting-user-stories-mean"&gt;
  &lt;/a&gt;
  What does 'Splitting user stories' mean?
&lt;/h2&gt;

&lt;p&gt;When a user story is ready so that it can be scheduled for implementation, it should be 'small enough'. What this means is that the story should be such that the developers can complete it in one iteration. This is a general rule of thumb around user stories.&lt;/p&gt;

&lt;p&gt;The agile&lt;a href="https://buildd.co/product/invest-agile"&gt;INVEST&lt;/a&gt; acronym states the characteristics of a good user story and can be cited here. A quick refresher, this is what the acronym stands for:&lt;/p&gt;

&lt;p&gt;I - Independent&lt;/p&gt;

&lt;p&gt;N - Negotiable&lt;/p&gt;

&lt;p&gt;V - Valuable&lt;/p&gt;

&lt;p&gt;E - Estimable&lt;/p&gt;

&lt;p&gt;S - Small&lt;/p&gt;

&lt;p&gt;T - Testable&lt;/p&gt;

&lt;p&gt;As is clear, the S-Small suggests that user stories are to be small in size. These allow faster implementation, and are also more reliable. This is because being small in size, they flow through the system with a less amount of risk and variability.&lt;/p&gt;

&lt;p&gt;However, it so happens that most user stories are complex in nature. They cannot be completed in one iteration.&lt;/p&gt;

&lt;p&gt;This is where user story splitting comes into play. As you might have already figured, splitting user stories means to split a bigger, more complex user story into a smaller one to complete it in one go. This process is also known as story splitting. Since a user story has three parts, the role + activity + business value, it's a must to keep these on splitting. So, story splitting is done such that each story has a measurable business value by itself.&lt;/p&gt;

&lt;p&gt;But, how is this done? Well, there is no one way for splitting user stories. The ways of doing this depend on the business domain and hence various authors have their own ideas on how to do it. In the coming sections we will touch upon some of the ways of splitting user stories.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eJVrFTbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/RackMultipart20211126-4-2wiv03_html_1a1a24b74d9c3d41.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eJVrFTbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/RackMultipart20211126-4-2wiv03_html_1a1a24b74d9c3d41.jpg" alt="" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#agile-techniques-for-splitting-user-stories"&gt;
  &lt;/a&gt;
  Agile Techniques for Splitting User Stories
&lt;/h2&gt;

&lt;p&gt;These are some of the common ways of splitting user stories:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-story-splitting-by-capabilities-offered"&gt;
  &lt;/a&gt;
  1. Story splitting by capabilities offered
&lt;/h3&gt;

&lt;p&gt;In this, you have to look at the capabilities being offered by each user story. For example, if a main user story needs you to search as well as sort, you can split these into two. You can also then further split these if you have multiple ways of sorting and searching in each.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-based-on-the-devices-the-app-is-to-be-used-on"&gt;
  &lt;/a&gt;
  2. Based on the devices the app is to be used on
&lt;/h3&gt;

&lt;p&gt;You can't expect all the users using your software to use it on the exact same type of system. For this, you have to make accommodations for devices, settings, and other things. So, you can split user stories based on these differences and work on one at a time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-splitting-based-on-user-roles"&gt;
  &lt;/a&gt;
  3. Splitting based on user roles
&lt;/h3&gt;

&lt;p&gt;Note that the same software would be used differently by different users. For example, consider a recruitment portal. The users would be using it in a different way than the HR managers. Same thing for educational software, teachers and students wouldn't be using it in the same way. Thus, you can define the different roles of people who would use the system. Through this, you can also split the features and work on them accordingly. In this way, it's easier to address the varied needs of each user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-splitting-user-stories-based-on-user-personas"&gt;
  &lt;/a&gt;
  4. Splitting user stories based on user personas
&lt;/h3&gt;

&lt;p&gt;Again, after user roles, user personas also could differ. This would depend on a number of things. For example, if a person has a lot of knowledge about the system, they'd want shortcuts so that they can work faster. A newer user would need a lot of guidance on the system and you'd probably have to integrate a lot of tips or guides. Someone with a physical handicap would need to interact with the feature in a different way.&lt;/p&gt;

&lt;p&gt;Based on such differences in personas, you can split your user stories so that you are focusing on only one at a time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-split-user-stories-by-workflows"&gt;
  &lt;/a&gt;
  5. Split user stories by workflows
&lt;/h3&gt;

&lt;p&gt;One main feature can be divided into a number of smaller ones. Take, for instance, posting a photo on an app like Instagram. You'd first choose the picture from your gallery, or click one. Then, you might want to make some edits to the picture. Next, tagging people and adding a location and caption would come into play. After all these things only would you post the picture.&lt;/p&gt;

&lt;p&gt;Of course, the example we've taken is bound to be more complex than this, but the basic idea is to split based on the flow. So each of these tasks can be worked on as a separate user story.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-split-based-on-data-types"&gt;
  &lt;/a&gt;
  6. Split based on data types
&lt;/h3&gt;

&lt;p&gt;Here, we shall consider local ways of entering data all over the world. Suppose you are creating an app to track the amount of steps you take a day and the distance covered. In the USA, you'd have to show this data in miles. But, in India, you'd have to show the same data in kilometres. So, when making an app, you'd come across different ways of entering data. You can split user stories based on the data types accordingly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-splitting-user-stories-by-the-crud-operations"&gt;
  &lt;/a&gt;
  7. Splitting user stories by the CRUD operations.
&lt;/h3&gt;

&lt;p&gt;As you might know, CRUD stands for Create, Read, Update and Delete. You can split your user stories into smaller ones based on this. This way, a smaller user story would involve only dealing with the Creation of something. Another might deal only with the way users Read certain data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-spidr-method-for-splitting-user-stories"&gt;
  &lt;/a&gt;
  The SPIDR method for splitting user stories
&lt;/h2&gt;

&lt;p&gt;The SPIDR method is a relatively new way of splitting user stories. It stands for:&lt;/p&gt;

&lt;p&gt;S - Spikes&lt;/p&gt;

&lt;p&gt;P - Paths&lt;/p&gt;

&lt;p&gt;I - Interface&lt;/p&gt;

&lt;p&gt;D - Data&lt;/p&gt;

&lt;p&gt;R - Rules&lt;/p&gt;

&lt;p&gt;Let's understand how it works.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Spikes&lt;br&gt;
Spike is a method to make the development team more aware of the things they are doing. Technical unknowns tend to make a story large, so the team needs to learn before making user stories. Only after understanding the components in detail do they work on writing and splitting the user stories.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Paths&lt;br&gt;
There could be multiple ways of carrying out a function. Say to pay online, you could use credit or debit card or some other way. User stories are then made to tackle each of these.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Interfaces&lt;br&gt;
This is similar to the point about devices mentioned earlier. You can split user stories based on the devices and interfaces users will be interacting through.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data&lt;br&gt;
The data would be entered in different ways. Take for instance filling a form. Here, you could work on one story for collecting and storing basic user data such as name and location. Another story could then collect the picture.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rules&lt;br&gt;
User stories would have some restrictions to make it function well. So, you can split and add just one rule at a time in each user story. For example, the first user story would be open and have no restrictions and collect any sort of data. The next ones can add various restrictions on this data.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Originally published &lt;a href="https://buildd.co/product/splitting-user-stories"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;P.S. If you liked the above article, also check out the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://buildd.co/product/three-daily-scrum-questions"&gt;Three Daily Scrum Questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://buildd.co/marketing/category-development-index"&gt;Category Development Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://buildd.co/product/minimum-marketable-feature"&gt;Minimum Marketable Feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://buildd.co/funding/authorized-shares"&gt;Authorized Shares&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://buildd.co/product/team-facilitator-agile"&gt;Team Facilitator&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>agile</category>
      <category>beginners</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Advanced Typescript | Generics</title>
      <author>Marius Bongarts</author>
      <pubDate>Fri, 26 Nov 2021 07:01:51 +0000</pubDate>
      <link>https://dev.to/mariusbongarts/advanced-typescript-generics-32lm</link>
      <guid>https://dev.to/mariusbongarts/advanced-typescript-generics-32lm</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IqaEaSyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AjUBpz0DE_5DSUvDOk_3ZJg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IqaEaSyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AjUBpz0DE_5DSUvDOk_3ZJg.png" alt="Large elephant with Typescript logo and small elephant with JavaScript logo" width="880" height="640"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn advanced Typescript features and apply them to practical code exercises&lt;/p&gt;

&lt;p&gt;Typescript Generics provide a way to write flexible code that can work with various data types rather than a single data type. That allows users of the code to provide their own types.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="https://medium.com/@mariusbongarts11/advanced-typescript-generics-1b30d6b5dd49" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LfpZ9m70--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/fit/c/56/56/1%2AtHDAGXmHWPWPSCMJyPPvQg.png" alt="Marius Bongarts"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://medium.com/@mariusbongarts11/advanced-typescript-generics-1b30d6b5dd49" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Advanced Typescript | Generics. Learn advanced Typescript features and… | by Marius Bongarts | Nov, 2021 | Medium&lt;/h2&gt;
      &lt;h3&gt;Marius Bongarts ・ &lt;time&gt;Nov 26, 2021&lt;/time&gt; ・ 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hnDHPsJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium-f709f79cf29704f9f4c2a83f950b2964e95007a3e311b77f686915c71574fef2.svg" alt="Medium Logo"&gt;
        Medium
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>programming</category>
      <category>technology</category>
    </item>
    <item>
      <title>Use react-hot-toast with Promise &amp; Axios</title>
      <author>MOHSIN ALI SOOMRO</author>
      <pubDate>Fri, 26 Nov 2021 06:55:44 +0000</pubDate>
      <link>https://dev.to/mohsinalisoomro/use-react-hot-toast-with-promise-axios-2lmd</link>
      <guid>https://dev.to/mohsinalisoomro/use-react-hot-toast-with-promise-axios-2lmd</guid>
      <description>&lt;h2&gt;
  &lt;a href="#promise"&gt;
  &lt;/a&gt;
  Promise
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"&gt;promise&lt;/a&gt; is an object that may produce a single value some time in the future : either a resolved value, or a reason that it's not resolved (e.g., a network error occurred). A promise may be in one of 3 possible states: fulfilled, rejected, or pending&lt;/p&gt;

&lt;p&gt;👉 A promise can states&lt;/p&gt;

&lt;p&gt;✅ fulfilled - The action relating to the promise succeeded&lt;br&gt;
❌ rejected - The action relating to the promise failed&lt;br&gt;
⚪ pending - Hasn't fulfilled or rejected yet&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#axios"&gt;
  &lt;/a&gt;
  Axios
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://axios-http.com/"&gt;Axios&lt;/a&gt; is a Javascript library used to make HTTP requests from node. js or XMLHttpRequests from the browser and it supports the Promise API that is native to JS ES6. It can be used intercept HTTP requests and responses and enables client-side protection against XSRF. It also has the ability to cancel requests&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#reacthottoast"&gt;
  &lt;/a&gt;
  react-hot-toast
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/timolins/react-hot-toast"&gt;Smoking hot Notifications for React&lt;/a&gt;.&lt;br&gt;
Lightweight, customizable and beautiful by default.&lt;/p&gt;

&lt;p&gt;React Code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import axios, { AxiosResponse } from "axios";
import toast, { Toaster } from "react-hot-toast";
import { useEffect } from "react";
export default function App() {
  const fetchData = async (): Promise&amp;lt;AxiosResponse&amp;gt; =&amp;gt; {
    const response = await axios.get(
      "https://jsonplaceholder.typicode.com/users"
    );
    console.log({ response });
    return response;
  };
  toast.promise(fetchData(), {
    loading: "Process",
    error: "error occurs in data",
    success: "get data successfully...."
  });
  useEffect(() =&amp;gt; {
    fetchData();
  }, []);

  return (
    &amp;lt;div className="App"&amp;gt;
      &amp;lt;h1&amp;gt;Hello CodeSandbox&amp;lt;/h1&amp;gt;
      &amp;lt;h2&amp;gt;Start editing to see some magic happen!&amp;lt;/h2&amp;gt;
      &amp;lt;Toaster /&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;👏 Thanks for reading&lt;/p&gt;

</description>
    </item>
    <item>
      <title>4 best python web app hosting services for free(with complete process)</title>
      <author>Yash Makan</author>
      <pubDate>Fri, 26 Nov 2021 06:43:07 +0000</pubDate>
      <link>https://dev.to/yash_makan/4-best-python-web-app-hosting-services-for-freewith-complete-process-57nb</link>
      <guid>https://dev.to/yash_makan/4-best-python-web-app-hosting-services-for-freewith-complete-process-57nb</guid>
      <description>&lt;p&gt;Hi developers, I am Yash Makan and in today's post, we are going to discuss 4 platforms where you can host your flask or Django app. If you've completed a website or API using python or planning to create one then this post is so right for you. Also, read till the end as in the end, I am going to explain step by step the complete process of uploading your web app to the internet. So without any further ado let's start!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--545USPNC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.giphy.com/media/dpsUFSR9ZHjwfrVAg9/giphy.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--545USPNC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.giphy.com/media/dpsUFSR9ZHjwfrVAg9/giphy.webp" alt="https://i.giphy.com/media/dpsUFSR9ZHjwfrVAg9/giphy.webp" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-hosting-platform-and-why-do-i-need-one"&gt;
  &lt;/a&gt;
  What is a hosting platform and why do I need one?
&lt;/h2&gt;

&lt;p&gt;Alright! If you have developed a web app then you might know that all these apps whether made with Django or flask run on localhost. A localhost is a place where you can run your code and view it in your browser. But when you complete the development of your web app then it might be time to publish your app on the internet so that anyone can access your websites. A web app setup locally can be viewed by you but your friends won't be able to see your amazing work. There are two options you can opt-in these situations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One is to connect your localhost with a tunnel using ngrok. Ngrok exposes your localhost to the internet so that everyone can access it by a specific URL provided by it. I don't recommend this way if you want your website 24x7 as you have to run your program 24x7 which is quite not the case but if you just want to share your localhost for some time and you don't want the connection to be connected then you can choose this method. For more info, you can read it &lt;a href="https://dev.to/drsimplegraffiti/ngrok-expose-a-local-web-server-to-the-internet-4m67"&gt;here&lt;/a&gt; by Abayomi Ogunnusi.&lt;/li&gt;
&lt;li&gt;The second way is to host your code to someone else's server. This someone else server is what we call the hosting platform. Here these servers run your code 24x7 at some specific domain. So if you want to host then below are your best options according to me.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R9qVSFlO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/COAg7vjpWW8Ja/giphy.gif%3Fcid%3Decf05e47akugdyaqluoi5847vpgh9uw34nt71j11s3nxw8b4%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R9qVSFlO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/COAg7vjpWW8Ja/giphy.gif%3Fcid%3Decf05e47akugdyaqluoi5847vpgh9uw34nt71j11s3nxw8b4%26rid%3Dgiphy.gif%26ct%3Dg" alt="Trulli" width="245" height="199"&gt;&lt;/a&gt;&lt;br&gt;bye-bye localhost
  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Below all the links are compared based on their hobby or free packs&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#0-vercel-%E2%86%97-full-stepbystep-procedure-at-the-end"&gt;
  &lt;/a&gt;
  0. Vercel &lt;a href="https://vercel.com/"&gt;↗&lt;/a&gt; (full step-by-step procedure at the end)
&lt;/h2&gt;

&lt;p&gt;✅ Git connect&lt;/p&gt;

&lt;p&gt;✅ Custom domain&lt;/p&gt;

&lt;p&gt;✅ CLI available&lt;/p&gt;

&lt;p&gt;✅ deploy and manage multiple versions &lt;/p&gt;

&lt;p&gt;✅ deploy ease&lt;/p&gt;

&lt;p&gt;✅ HTTPS/SSL&lt;/p&gt;

&lt;p&gt;No Project limit&lt;/p&gt;

&lt;p&gt;32 deployments every 1 hour&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-qovery-%E2%86%97"&gt;
  &lt;/a&gt;
  1. qovery &lt;a href="https://www.qovery.com/"&gt;↗&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;✅ Git connect with auto-deploy&lt;/p&gt;

&lt;p&gt;✅ Great community support with discord&lt;/p&gt;

&lt;p&gt;✅ HTTPS/SSL&lt;/p&gt;

&lt;p&gt;✅ Inbuilt database integration like PostgreSQL, MySQL&lt;/p&gt;

&lt;p&gt;✅ CLI available&lt;/p&gt;

&lt;p&gt;up to 3 projects with 100 applications&lt;/p&gt;

&lt;p&gt;According to my personal experience, it's a little tricky to deploy the web app on qovery&lt;/p&gt;

&lt;p&gt;100 deployments a month&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-pythonanywhere-%E2%86%97"&gt;
  &lt;/a&gt;
  2. pythonanywhere &lt;a href="https://www.pythonanywhere.com/"&gt;↗&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;✅ Git connect&lt;/p&gt;

&lt;p&gt;✅ deploy ease&lt;/p&gt;

&lt;p&gt;✅ HTTPS/SSL&lt;/p&gt;

&lt;p&gt;CLI is not available&lt;/p&gt;

&lt;p&gt;No custom domain&lt;/p&gt;

&lt;p&gt;You cannot deploy and manage multiple versions of your web app&lt;/p&gt;

&lt;p&gt;You can make one project per account&lt;/p&gt;

&lt;p&gt;There is internet outbound so you won't be able to scrape most of the websites you want to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-heroku-%E2%86%97"&gt;
  &lt;/a&gt;
  3. Heroku &lt;a href="https://www.heroku.com/"&gt;↗&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;✅ Git connect and deploy&lt;/p&gt;

&lt;p&gt;550-1,000 dyno hours per month&lt;/p&gt;

&lt;p&gt;5 apps(unverified accounts) &amp;amp; up to 100 apps(verified accounts)&lt;/p&gt;

&lt;p&gt;web app sleeps when no activity detects&lt;/p&gt;

&lt;p&gt;It's not that easy to deploy like others on the list&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-recommendations"&gt;
  &lt;/a&gt;
  My Recommendations
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Vercel&lt;/code&gt; is the winner for sure for me. It has everything for free that I want and I will recommend vercel to you guys as well. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-i-deploy-my-flask-web-app-on-vercel"&gt;
  &lt;/a&gt;
  How can I deploy my flask web app on vercel?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;download node from &lt;a href="https://nodejs.org/en/"&gt;https://nodejs.org/en/&lt;/a&gt; and make sure npm is accessible from your terminal by &lt;code&gt;npm -v&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Download vercel cli using &lt;code&gt;npm i -g vercel&lt;/code&gt;. Refer &lt;a href="https://www.npmjs.com/package/vercel"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;requirements.txt&lt;/code&gt; file with all the python packages mentioned you've used.&lt;/li&gt;
&lt;li&gt;Create your account on &lt;a href="https://vercel.com/"&gt;https://vercel.com/&lt;/a&gt;. It's pretty straightforward...&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;vercel.json&lt;/code&gt; file and add the below content(here I am using app.py as my main file)
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"builds"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"*.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s"&gt;"use"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"@liudonghua123/now-flask"&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="s"&gt;"routes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"(.*)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s"&gt;"dest"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"app.py"&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;make sure your project looks something like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XmmLXMJB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x212ogw561dpe3bhan1n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XmmLXMJB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x212ogw561dpe3bhan1n.png" alt="Project structure" width="643" height="141"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;open terminal at the root of the project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type the below commands&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8sSM-7lj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbylguvtmjqef6kqi0v5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8sSM-7lj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbylguvtmjqef6kqi0v5.png" alt="Vercel in cmd" width="281" height="24"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NZwaAngn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ysrgmob2jmjrr9no0k2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NZwaAngn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ysrgmob2jmjrr9no0k2.png" alt="Vercel commands" width="880" height="164"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And there you have it. visit &lt;a href="http://vercel.com"&gt;vercel.com&lt;/a&gt; and open your project. Click the visit button and your website is live. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to later update just use &lt;code&gt;vercel --prod&lt;/code&gt; to push your code to production level.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So you see, it's that easy to upload your web app to the web for free in just 2 to 5 minutes. For this blog post, I have used the web template from this &lt;a href="https://github.com/StartBootstrap/startbootstrap-one-page-wonder"&gt;repo&lt;/a&gt;. If you want the complete code then visit&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/YashMakan"&gt;
        YashMakan
      &lt;/a&gt; / &lt;a href="https://github.com/YashMakan/vercel_python_deploy"&gt;
        vercel_python_deploy
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;I have deployed the website to &lt;a href="https://vercel-python-ten.vercel.app/"&gt;https://vercel-python-ten.vercel.app/&lt;/a&gt; if you want to check out. I hope you liked my blog and if this article adds any value then it would be great if you leave a like and make sure to bookmark it as well. Also, share the post with your friends so that they too can learn something new(don't be selfish...). Also if possible you can follow me on &lt;a href="https://twitter.com/Yash_Makan"&gt;twitter&lt;/a&gt;, so that we can discuss more about tech there. Hope to be in your mind again, till then b-bye!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BF7vOLVm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5dni43983zjpi94dmmn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BF7vOLVm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5dni43983zjpi94dmmn.gif" alt="bye bye" width="480" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-articles"&gt;
  &lt;/a&gt;
  Other Articles
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/yash_makan/18-python-one-liners-that-will-speed-up-your-coding-process-21md"&gt;18 Python one-liners that will speed up your coding process.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/yash_makan/ai-bot-that-could-answer-any-questions-asked-gmn"&gt;AI bot that could answer your questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/yash_makan/generate-your-own-favourite-tv-episode-using-python-1pb3"&gt;Generate your own favourite TV episode using python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#socials"&gt;
  &lt;/a&gt;
  Socials
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.yashmakan.co.in/"&gt;My Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Yash_Makan"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.yashmakan.co.in/banner"&gt;Banner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Contact Form with Emailjs - React</title>
      <author>NJOKU SAMSON EBERE</author>
      <pubDate>Fri, 26 Nov 2021 06:31:10 +0000</pubDate>
      <link>https://dev.to/ebereplenty/contact-form-with-emailjs-react-581c</link>
      <guid>https://dev.to/ebereplenty/contact-form-with-emailjs-react-581c</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This article is majorly for frontend engineers/developers who have no backend skill or do not want to delve into it but needs a way to get contacted from their website at minimum cost. We will be using the REACT library/framework for the purpose of this article. Adapting to VUE, ANGULAR or any other framework isn't much of a task from here.&lt;/p&gt;

&lt;p&gt;This article continues from where we stopped &lt;a href="https://dev.to/ebereplenty/contact-form-with-emailjs-plain-javascript-365l"&gt;last time&lt;/a&gt; we discussed how to implement Emailjs in our plain JavaScript code.&lt;/p&gt;

&lt;p&gt;We now want to turn attention to implementing Emailjs in our React application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We are about to begin...&lt;br&gt;
&lt;a href="https://i.giphy.com/media/sirYaPWyjCvEk/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/sirYaPWyjCvEk/giphy.gif" alt="Silence Now" width="441" height="384"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;p&gt;This article assumes that you already have basic knowledge of Emailjs such as setting up an account, Email service and Email template. We learnt all those in the previous article. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/contact-form-with-emailjs-plain-javascript-365l"&gt;Click here&lt;/a&gt; to catch up if you are behind. With that out of the way, let’s get busy!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/q6RoNkLlFNjaw/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/q6RoNkLlFNjaw/giphy.gif" alt="Getting Busy" width="300" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#starter-application"&gt;
  &lt;/a&gt;
  Starter Application
&lt;/h2&gt;

&lt;p&gt;Get the starter code &lt;a href="https://github.com/EBEREGIT/react-emailjs/tree/starter-code"&gt;here&lt;/a&gt; or you can create a react project and replace the &lt;code&gt;App.js&lt;/code&gt; code with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;row&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;col align-self-center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Email&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;JavaScript&lt;/span&gt; &lt;span class="nx"&gt;Contact&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* &amp;lt;!-- contact form --&amp;gt; */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* &amp;lt;!-- name --&amp;gt; */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
                &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-control&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;enter your name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* &amp;lt;!-- email --&amp;gt; */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Email&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
                &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-control&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;enter your email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* &amp;lt;!-- subject --&amp;gt; */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;subject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Subject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
                &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;subject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-control&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;subject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;enter email subject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email_body&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;textarea&lt;/span&gt;
                &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form-control&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email_body&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/textarea&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;btn btn-primary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nx"&gt;Submit&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The following should replace the &lt;code&gt;index.html&lt;/code&gt; code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"%PUBLIC_URL%/favicon.ico"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"theme-color"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"#000000"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt;
      &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt;
      &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Web site created using create-react-app"&lt;/span&gt;
    &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"apple-touch-icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"%PUBLIC_URL%/logo192.png"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"manifest"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"%PUBLIC_URL%/manifest.json"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    --&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- bootstrap CSS --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;
      &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;
      &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"&lt;/span&gt;
      &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2"&lt;/span&gt;
      &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt;
    &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;React Emailjs&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;You need to enable JavaScript to run this app.&lt;span class="nt"&gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"root"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the &amp;lt;body&amp;gt; tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    --&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- bootstrap js --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script
      &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://code.jquery.com/jquery-3.5.1.slim.min.js"&lt;/span&gt;
      &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"&lt;/span&gt;
      &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script
      &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"&lt;/span&gt;
      &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"&lt;/span&gt;
      &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;npm i&lt;/code&gt; to install dependencies if you cloned the app&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm start&lt;/code&gt; to load the project in a browser &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You should have the following view on your browser &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PPchwXNM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2q0mol8khcllwfd5rgx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PPchwXNM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2q0mol8khcllwfd5rgx.png" alt="Starter Project Preview" width="880" height="500"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#install-emailjs"&gt;
  &lt;/a&gt;
  Install Emailjs
&lt;/h3&gt;

&lt;p&gt;Run the following command to install Emailjs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;emailjs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#initialise-emailjs"&gt;
  &lt;/a&gt;
  Initialise Emailjs
&lt;/h3&gt;

&lt;p&gt;To initialise Emailjs, Import it in the &lt;code&gt;App.js&lt;/code&gt; file like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;emailjs&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;emailjs-com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#submit-form"&gt;
  &lt;/a&gt;
  Submit Form
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;To submit the form, we need to import the &lt;code&gt;useRef&lt;/code&gt; hook like so:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Learn more about &lt;code&gt;useRef&lt;/code&gt; hook &lt;a href="https://reactjs.org/docs/hooks-reference.html#useref"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Next, initialise an instance of the useRef hook and name it &lt;code&gt;form&lt;/code&gt; like so:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next, Replace the opening &lt;code&gt;form&lt;/code&gt; tag with the following:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;{form}&lt;/span&gt; &lt;span class="na"&gt;onSubmit=&lt;/span&gt;&lt;span class="s"&gt;{sendEmail}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;this gets the form inputs and submits it when the form is submitted&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now enter the following function just below the &lt;code&gt;const form = useRef();&lt;/code&gt; line:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sendEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;emailjs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;YOUR_SERVICE_ID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;YOUR_TEMPLATE_ID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;YOUR_USER_ID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;In the code above, we stop page from refreshing when the form is submitted. Then we call the &lt;code&gt;sendForm&lt;/code&gt; function provided for us by &lt;code&gt;emailjs&lt;/code&gt;. For this to be successful, you need to replace &lt;code&gt;'YOUR_SERVICE_ID'&lt;/code&gt;, &lt;code&gt;'YOUR_TEMPLATE_ID'&lt;/code&gt; and 'YOUR_USER_ID' with your own details.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To get your USER_ID, go to your dashboard and click on the &lt;strong&gt;Integrations&lt;/strong&gt; link on the side menu. You should be on a page like this:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B5jDSao1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rbbfhxp5gbeiefh0q1w.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B5jDSao1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rbbfhxp5gbeiefh0q1w.JPG" alt="Image description" width="880" height="543"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your USER_ID is down below under the &lt;strong&gt;API Keys&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To get YOUR_SERVICE_ID, click on the Email Services link in your dashboard's side menu&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q73euTMi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fn0w746c5fmsdokjabr7.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q73euTMi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fn0w746c5fmsdokjabr7.JPG" alt="YOUR_SERVICE_ID" width="696" height="359"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To get YOUR_TEMPLATE_ID, click on the Email Templates link in your dashboard's side menu and go to the settings tab like so:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BxftVbqm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dw3cr4xy0gwdbl9h5fsr.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BxftVbqm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dw3cr4xy0gwdbl9h5fsr.JPG" alt="YOUR_TEMPLATE_ID" width="880" height="582"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You will need a new template for this tutorial if you have used the one you created before in another project like the &lt;a href="https://dev.to/ebereplenty/contact-form-with-emailjs-plain-javascript-365l"&gt;last project&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I now have this &lt;code&gt;sendEmail&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sendEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;emailjs&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;service_b4qmiqc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;template_h9rzd14&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user_UHpNJFij8MtQD1aAfs38X&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SUCCESS!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;FAILED...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Very Well Then, Let’s Proceed!&lt;/p&gt;

&lt;p&gt;If you have replaced the dummy strings with your value, then let's test our application by filling the form, submitting it, checking our console and email for new message.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test"&gt;
  &lt;/a&gt;
  Test
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Sending The Email&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k9hCh5Tu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/738ncrg95fhtxm2r9sol.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k9hCh5Tu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/738ncrg95fhtxm2r9sol.gif" alt="Sending The Email" width="599" height="260"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Confirming that the email was received&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--64cOWvMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzkmv9hs6xqn4yeyrlad.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--64cOWvMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzkmv9hs6xqn4yeyrlad.gif" alt="Confirming that the email was received" width="600" height="245"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Congratulations! You are a Champion for Getting this far...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/l4pTmPgIgWEzf86zu/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l4pTmPgIgWEzf86zu/giphy.gif" alt="Victory! Learning Something New" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This tutorial assumed that you came from the previous tutorial where we laid the basis for using Emailjs. We have gone ahead to learn how frontend developers can make their contact form work with minimal effort and cost.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this tutorial. I enjoy writing about new discoveries like this as they are usually helpful to many developers.&lt;/p&gt;

&lt;p&gt;All Codes are &lt;a href="https://github.com/EBEREGIT/react-emailjs"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keep Building!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>email</category>
    </item>
    <item>
      <title>Simple way to generate random string in PHP</title>
      <author>Deepak Singh</author>
      <pubDate>Fri, 26 Nov 2021 06:18:40 +0000</pubDate>
      <link>https://dev.to/techmesh/simple-way-to-generate-random-string-in-php-25gj</link>
      <guid>https://dev.to/techmesh/simple-way-to-generate-random-string-in-php-25gj</guid>
      <description>&lt;p&gt;While developing an application, sometimes it requires generating a random but unique string, e.g. &lt;strong&gt;Password Generator, CSRF token&lt;/strong&gt;, and many more.&lt;/p&gt;

&lt;p&gt;There are so many methods to generate random and unique strings in PHP. For Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rand();
uniqid();
bin2hex(random_bytes(20));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0CprJtQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/shyuzpal9et2ewpjfbx7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0CprJtQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/shyuzpal9et2ewpjfbx7.jpg" alt="Simple way to generate random string in PHP" width="600" height="478"&gt;&lt;/a&gt;&lt;br&gt;
But I prefer my way to generate a random string by using existing PHP functions and bit improvisation.&lt;br&gt;
Here is the function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function random_seed(){
  list($usec, $sec) = explode(' ', microtime());
  return $sec + $usec * 1000000;
}

function getRadomSeed(){
    mt_srand(random_seed());
    $prefix = substr(str_shuffle(str_repeat($x='abcNOPQRSTUVWXYZdefghijklmnopqrstuvwxyzABCDEFGHIJKLM', ceil(5/strlen($x)) )),1,5);
    $suffix = substr(str_shuffle(str_repeat($x='wxyzABCDEFGHIJKLMNOabcdefghijklmnopqrstuvPQRSTUVWXYZ', ceil(5/strlen($x)) )),1,5);
    $randval = mt_rand();
    if(strlen($randval) % 2 == 0){
        $random = $prefix.$randval.$suffix;
    }else if(strlen($randval) % 3 == 0){
        $random = $prefix.$suffix.$randval;
    }
    else{
        $random = $randval.$prefix.$suffix;
    }
    return $random;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Execute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$rd = getRadomSeed();
echo $rd;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just to be sure that this is not the only way to generate random strings in PHP. I am just sharing one of my ways to generate random strings.&lt;br&gt;
Happy Thanksgiving! 🦃&lt;/p&gt;

</description>
      <category>php</category>
      <category>security</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Implement Server-sent Events in Node.js?</title>
      <author>DhiWise</author>
      <pubDate>Fri, 26 Nov 2021 06:14:08 +0000</pubDate>
      <link>https://dev.to/dhiwise/how-to-implement-server-sent-events-in-nodejs-11d9</link>
      <guid>https://dev.to/dhiwise/how-to-implement-server-sent-events-in-nodejs-11d9</guid>
      <description>&lt;p&gt;&lt;strong&gt;Server-sent events **are a new **HTTP API&lt;/strong&gt; for pushing events from the server to the client. Unlike W*&lt;em&gt;ebSockets&lt;/em&gt;&lt;em&gt;, server-sent events (&lt;/em&gt;&lt;em&gt;SSE&lt;/em&gt;* for short) are built on top of the &lt;strong&gt;HTTP protocol&lt;/strong&gt;, so no need for ws:// URLs or additional npm modules. Server-side events also handle reconnecting automatically, so you don’t have to write code to reconnect if the connection is lost.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lexlW1Kj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2400/1%2ANlnrJW7Hm73yq_veBpjXRg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lexlW1Kj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2400/1%2ANlnrJW7Hm73yq_veBpjXRg.jpeg" alt="image credit : [https://www.woolha.com](https://www.woolha.com/)" width="880" height="460"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After discussing with plenty of developers during the last few days, I have realize that a more of them don’t know what “Server-Sent Events” (or “SSE” or “EventSource”) is. My aim here is to give you all the information you may need about Server-Sent Events.&lt;/p&gt;

&lt;p&gt;With Server-sent events you are able to send one-directional events to a web page.&lt;/p&gt;

&lt;p&gt;Using Server-Send-Events eliminates the need to poll a server periodically for information using AJAX and is really easy to implement because of the simple specification and the fact that nearly all modern browsers already implement this specification.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why should you even learn about SSE?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the fast generation world, users are more and more real-time oriented, so we need Server-Sent Events if displaying the last information updates to our users may change their actions.&lt;/p&gt;

&lt;p&gt;The information itself need not change often, but when it changes, you really want users to know it!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before begin, Let’s deeply look at some real-world test cases before we explain the technical details:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Users may click on the last news available rather than shutting down the page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Services / product availability. If you sell products or services rare for this specific client (car-sharing, docks for bike-sharing, promotions with limited stocks…), you want to make sure your prospect knows it is available as soon as possible.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prices of crypto-currency, gold, silver…&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Social / chat… like Facebook, WhatsApp, Telegram, and so on..!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You may just want to display rapidly changing data: game score, trading, dashboard.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;“&lt;/strong&gt;I don’t care about your “&lt;strong&gt;Server-Sent stuff&lt;/strong&gt;” I have WebSockets!&lt;strong&gt;”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ok, WebSockets are trendy, fast, and easy to implement now but, There are pros and cons for WebSocket and SSE. I suggest you read this blog post and come back here afterward…&lt;/p&gt;

&lt;p&gt;I will be waiting for you…&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;So, Now move on technical side :&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The event-stream is a simple stream of text information which must be encoded using UTF-8. Messages in the event-stream are separated by a pair of newline characters (“\n”).&lt;/p&gt;

&lt;p&gt;The following field names are defined in the specification:&lt;/p&gt;

&lt;p&gt;Event: The event’s type. It will allow you to use the same stream for different content. A client can decide to “listen” only to one type of event or to interpret differently each event type.&lt;/p&gt;

&lt;p&gt;**Data: **The data field for the message. You can put consecutive “data” lines.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ID:&lt;/strong&gt; ID for each event-stream. Useful to track lost messages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Retry:&lt;/strong&gt; The time to use before the browser attempts a new connection after all connections are lost (in milliseconds). The re-connection process is automatic and is set by default at three seconds. During this re-connection process, the last ID received will be automatically sent to the server…&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The Server Implementation :&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To run the demo application using node.js simply run the following command from the project’s root directory:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node server.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Here is the server implementation in JavaScript:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var http = require('http');
var fs = require('fs');

/*
 * send interval in millis
 */
var sendInterval = 5000;

function sendServerSendEvent(req, res) {
 res.writeHead(200, {
 'Content-Type' : 'text/event-stream',
 'Cache-Control' : 'no-cache',
 'Connection' : 'keep-alive'
 });

 var sseId = (new Date()).toLocaleTimeString();

 setInterval(function() {
 writeServerSendEvent(res, sseId, (new Date()).toLocaleTimeString());
 }, sendInterval);

 writeServerSendEvent(res, sseId, (new Date()).toLocaleTimeString());
}

function writeServerSendEvent(res, sseId, data) {
 res.write('id: ' + sseId + '\n');
 res.write("data: new server event " + data + '\n\n');
}

http.createServer(function(req, res) {
 if (req.headers.accept &amp;amp;&amp;amp; req.headers.accept == 'text/event-stream') {
 if (req.url == '/talk') {
 sendServerSendEvent(req, res);
 } else {
 res.writeHead(404);
 res.end();
 }
 } else {
 res.writeHead(200, {
 'Content-Type' : 'text/html'
 });
 res.write(fs.readFileSync(__dirname + '/index.html'));
 res.end();
 }
}).listen(8080);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The Client Implementation :&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For Server Send Events (SSE) is quite easy .. simply create a new EventSource object that is bound to the URL where the events are propagated.&lt;/p&gt;

&lt;p&gt;In the next step just add an event listener to the source object — the function is called each time that a SSE is received.&lt;/p&gt;

&lt;p&gt;Finally an event is bound to a button to stop listening to SSEs using the Event Source's close method.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
   &amp;lt;head&amp;gt;
      &amp;lt;meta charset="utf-8" /&amp;gt;
   &amp;lt;/head&amp;gt;
   &amp;lt;body&amp;gt;
      &amp;lt;input type="button" id="stopButton" value="Stop Listening"/&amp;gt;
      &amp;lt;hr/&amp;gt;
      &amp;lt;div id="content"&amp;gt;&amp;lt;/div&amp;gt;
      &amp;lt;script&amp;gt;
         var source = new EventSource('/talk');
         source.addEventListener('open', function(e) {
         document.getElementById('content').innerHTML += 'Connections to the server established..&amp;lt;br/&amp;gt;';
         }, false);
         source.onmessage = function(e) {
         document.getElementById('content').innerHTML += e.data + '&amp;lt;br/&amp;gt;';
         };
         document.getElementById('stopButton').onclick=function(){
         document.getElementById('content').innerHTML += 'Listening to server events stopped..&amp;lt;br/&amp;gt;';
         source.close();
         }
      &amp;lt;/script&amp;gt;
   &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Afterwards, you should be able to open &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; in your browser and watch the events. Pressing the button should stop listening to the server send events.&lt;/p&gt;

&lt;p&gt;That’s all about the tutorial of how to implement SSE in Node.js.&lt;/p&gt;

&lt;p&gt;When an &lt;strong&gt;app&lt;/strong&gt;/&lt;strong&gt;website&lt;/strong&gt; needs some information updated in real-time, and there is not a need for upward data flow, Server-Sent Events should be considered first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#congratulations"&gt;
  &lt;/a&gt;
  Congratulations
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kin0qUrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A0Atzb1l-9sM2b3bRy0F1rQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kin0qUrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A0Atzb1l-9sM2b3bRy0F1rQ.gif" alt="" width="480" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are at the end! Hope you enjoyed reading this article and learnt something new today.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;: I’ll keep on adding and improving the content of this article as I learn more about these concepts!&lt;/p&gt;

&lt;p&gt;If you disagree, please comment on this article below and we will happily reply.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Resources used:&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.digitalocean.com/"&gt;digitalocean&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/"&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For more blog-post: &lt;a href="http://javascript.thelivenews.co"&gt;**link&lt;/a&gt;**&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Thank you for reading!!&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;By Bhavy Kapadiya (Programmer Analyst | DhiWise)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>programming</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
