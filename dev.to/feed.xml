<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Learn how Stripe authentication works in 8 minutes</title>
      <author>Brody Klapko</author>
      <pubDate>Tue, 25 May 2021 21:17:36 +0000</pubDate>
      <link>https://dev.to/stripe/learn-how-stripe-authentication-works-in-8-minutes-45di</link>
      <guid>https://dev.to/stripe/learn-how-stripe-authentication-works-in-8-minutes-45di</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gRvlMeBks6k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Not a Python dev? Try &lt;a href="https://www.youtube.com/watch?v=8Db0nTVlKM0&amp;amp;list=PLy1nL-pvL2M50RmP6ie-gdcSnfOuQCRYk"&gt;Ruby&lt;/a&gt; • &lt;a href="https://www.youtube.com/watch?v=CeufP46S5BI&amp;amp;list=PLy1nL-pvL2M6cUbiHrfMkXxZ9j9SGBxFE"&gt;PHP&lt;/a&gt; • &lt;a href="https://www.youtube.com/watch?v=R5RoYDEIhCI&amp;amp;list=PLy1nL-pvL2M5xNIuNapwmABwEy2uifAlY"&gt;Node&lt;/a&gt; • &lt;a href="https://www.youtube.com/watch?v=oJRPV07bVS0&amp;amp;list=PLy1nL-pvL2M5eqpSBR9KL7K0lcnWo0V0a"&gt;Go&lt;/a&gt; • &lt;a href="https://www.youtube.com/watch?v=t4iJ07E_tA8&amp;amp;list=PLy1nL-pvL2M5TnSGVjEHTTMgdnnHi-KPg"&gt;Java&lt;/a&gt; • &lt;a href="https://www.youtube.com/watch?v=N20T0rXAWsc&amp;amp;list=PLy1nL-pvL2M4cNNoUtjWevYSci4ubsbhC"&gt;.NET&lt;/a&gt; instead.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-youll-learn"&gt;
  &lt;/a&gt;
  What you’ll learn
&lt;/h2&gt;

&lt;p&gt;Authentication is fundamental to using Stripe. Secure keys, or tokens, are used to authenticate requests made to the Stripe API. In the video, you’ll learn how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Securely make Stripe API requests&lt;/li&gt;
&lt;li&gt;Pass payment information from your frontend to your backend&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#who-this-video-is-for"&gt;
  &lt;/a&gt;
  Who this video is for
&lt;/h2&gt;

&lt;p&gt;This video guide is primarily for developers new to Stripe but developers familiar with Stripe might learn some new things as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-follow-along"&gt;
  &lt;/a&gt;
  How to follow along
&lt;/h2&gt;

&lt;p&gt;If you want to work alongside the video, you’ll need a &lt;a href="https://dashboard.stripe.com/register"&gt;Stripe account&lt;/a&gt; and a Python environment to work in. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=gRvlMeBks6k&amp;amp;list=PLy1nL-pvL2M55YVn0mGoQ5r-39A1-ZypO"&gt;Authentication with stripe-python video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stripe.com/docs/api/authentication"&gt;Authentication reference documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stripe.com/docs/keys"&gt;API keys documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-to-watch-next"&gt;
  &lt;/a&gt;
  What to watch next
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Hg5FkqSmV68&amp;amp;list=PLy1nL-pvL2M55YVn0mGoQ5r-39A1-ZypO&amp;amp;index=3"&gt;Making requests with stripe-python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>devrel</category>
      <category>stripe</category>
      <category>payments</category>
      <category>3dsecure</category>
    </item>
    <item>
      <title>Life at Draftbit - First 3 Months as a Developer Advocate</title>
      <author>Aman Mittal</author>
      <pubDate>Tue, 25 May 2021 21:11:55 +0000</pubDate>
      <link>https://dev.to/amanhimself/life-at-draftbit-first-3-months-as-a-developer-advocate-312g</link>
      <guid>https://dev.to/amanhimself/life-at-draftbit-first-3-months-as-a-developer-advocate-312g</guid>
      <description>&lt;blockquote&gt;
Photo by &lt;a href="https://unsplash.com/@x_prayer?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Prayer X&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/galaxy?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;
&lt;/blockquote&gt;

&lt;p&gt;It has been 3 months since I joined &lt;a href="https://draftbit.com/"&gt;Draftbit&lt;/a&gt;. It feels like I’ve been on a journey. I was initially hired as a tech writer but the role eventually evolved (within a month) into Developer Advocate 🥑.&lt;/p&gt;

&lt;p&gt;On a personal level, the first thing I learned is that embrace your surroundings (new) without overthinking too much. It has been the highlight for me this year, so far.&lt;/p&gt;

&lt;p&gt;The reason I say this is because my background is not in Developer Advocacy or Relations per se. I've been working as a contract developer/consultant for most of my time, in the last three years. I've worked with different tech stacks inside the JavaScript ecosystem such as Node.js, AngularJS, React and React Native but not on things outside it.&lt;/p&gt;

&lt;p&gt;But for the past few years, I have been writing blog posts and tutorials. Trying to document what I am learning in a way I could go back and read the stuff myself or refer to someone else when required. I do not have an extraordinary memory and like to take notes when I am learning. I enjoy the process. It doesn't feel like "work".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-developer-advocate"&gt;
  &lt;/a&gt;
  What is a Developer Advocate?
&lt;/h2&gt;

&lt;p&gt;In 2019, when I first got to know about Draftbit at &lt;a href="https://appjs.co/"&gt;App.js conf&lt;/a&gt;, I was excited to learn that there's a world beyond building mobile apps inside VSCode (insert your preferred editor here). At that time though I did not know what exactly a Dev Advocate is.&lt;/p&gt;

&lt;p&gt;What I've gathered about Dev Advocacy or understand right now is that various organizations differ in responsibilities when it comes to the role. Though there are common responsibilities or activities that most people working in Dev Advocacy share. Content creating is one. Brand awareness. Creating and sharing resources through the medium of blogging or live streams publishing videos and speaking at remote or offline events. Building community is also one aspect of it. Creating demos using the product to solve specific use cases is another aspect.&lt;/p&gt;

&lt;p&gt;Without spreading out my unorganized thoughts around the matter too much, here are some of the resources that helped me get the context on what Developer Advocacy is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sam Julien's book on &lt;a href="https://learn.samjulien.com/getting-started-in-developer-relations"&gt;Getting Started in Developer Relations&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A few weeks back I did share my thoughts in the &lt;a href="https://amanhimself.substack.com/p/7-new-posts-this-week"&gt;newsletter&lt;/a&gt;. I do recommend this book if you are seeking your first role or are curious about getting to know more. This is the best introduction I've found and read so far. It made me realize that I have been doing some of the stuff in my free time that a Dev Advocate might do.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mary Thengvall's &lt;a href="https://www.persea-consulting.com/book"&gt;The Business Value of Developer Relations&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It goes more in-depth and talks about the importance of nurturing a community, maintaining positive relations, building a team of DevRels, and much more. She &lt;a href="https://www.marythengvall.com/blog/2020/6/29/the-camunda-developer-relations-career-path"&gt;has an amazing post on her blog&lt;/a&gt; sharing her own experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#working-with-draftbit"&gt;
  &lt;/a&gt;
  Working with Draftbit
&lt;/h2&gt;

&lt;p&gt;Since joining, a common question I get asked is how my day as a Developer Advocate looks like. I would say, depending on the day, that it depends. 🙃&lt;/p&gt;

&lt;p&gt;It depends on some factors as to the kind of thing I am working on, in the following week. Usually, I spend a huge amount of time creating guides and tutorials for various use cases or some of the features that get released. At times, I am trying to help community members to resolve their issues.&lt;/p&gt;

&lt;p&gt;Living in an Eastern time zone is one of the reasons that I had missed out on some of the exciting opportunities in past. But here, it is a welcoming aspect. I think it is good to have open mind about it in this ever connected world.&lt;/p&gt;

&lt;p&gt;The experience has been a delightful one. I have huge gratitude to express for the entire team at Draftbit. They are friendly, have tons of experience, are willing to offer feedback and helpful suggestions, and allow me to express my own ideas (which I think is vital to be a part of something and be excited about it at the same time).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-challenges-and-personal-obstacles"&gt;
  &lt;/a&gt;
  Some challenges and personal obstacles
&lt;/h2&gt;

&lt;p&gt;One challenge that I face at times is explaining the semantics of the product from a non-engineering point of view, in written words.&lt;/p&gt;

&lt;p&gt;Draftbit is a visual tool to build a mobile app. It is uses React Native and Expo's ecosystem under the hood. The end user does not have to know about that and there is no requirement for them to know React Native framework.&lt;/p&gt;

&lt;p&gt;I've spent a lot of time in the first three months on a feature called &lt;a href="https://docs.draftbit.com/docs/custom-code"&gt;Custom Code&lt;/a&gt;. It is an advanced feature where an individual can utilize open-source libraries available with Expo and React Native to achieve custom functionalities like integrating a Camera within their app or utilize Firebase Authentication.&lt;/p&gt;

&lt;p&gt;This requires me to create demos and write guides in a way that an individual from non-technical background or having no React Native experience can understand with little effort. One way I am trying to tackle is to explain concepts without including too much technical jargon.&lt;/p&gt;

&lt;p&gt;If I cannot avoid mentioning something that I think is too technical, I try to provide references or links to documentation wherever necessary to provide a better context (or try improve the internal documentation). Including GIFs of the flow of work or documenting steps to achieve the desired result is another thing that has become a part of my flow.&lt;/p&gt;

&lt;p&gt;Making cameo appearances on &lt;a href="https://www.youtube.com/c/Draftbit/videos"&gt;Draftbit’s YouTube channel&lt;/a&gt; is one more thing I am getting comfortable with. I never thought I would engage in &lt;a href="https://www.youtube.com/watch?v=YIRxTUCY0NQ"&gt;speaking in public&lt;/a&gt; (👋 hello, anxiety) but now I've done it a few times in a row. I won't say I am good at it. There is a lot of room to improve on a personal level but without doing it I wouldn't know that. Engaging in this activity has helped me realize that coming out of my shell is important.&lt;/p&gt;

&lt;p&gt;Here is me talking about Custom Code during Draftbit office hours:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=pMz4XRjdOd0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A-i5qTfY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.youtube.com/vi/pMz4XRjdOd0/0.jpg" alt="IMAGE ALT TEXT HERE"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🙌 Shoutout to my colleague &lt;a href="https://twitter.com/nickselman"&gt;Nick&lt;/a&gt; for these timely opportunities.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;Providing a value is vital and it is with this mindset I try to approach things. Working as a Developer Advocate, I get to do it more often and it is fun!&lt;/p&gt;

&lt;p&gt;💻 If you want to work with me, check out &lt;a href="https://draftbit.com/jobs#openings"&gt;draftbit.com/jobs&lt;/a&gt; to see if there's a role that is exciting to you.&lt;/p&gt;

&lt;p&gt;👋 If you want to talk about Draftbit, have questions, or React Native, or DevRel, please DM me on &lt;a href="https://twitter.com/amanhimself"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;💌 To get notified about my future articles, subscribe my &lt;a href="https://amanhimself.substack.com/"&gt;personal newsletter here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>devrel</category>
      <category>career</category>
    </item>
    <item>
      <title>No-code AWS Lambda Monitoring</title>
      <author>Kathy Lam</author>
      <pubDate>Tue, 25 May 2021 21:11:19 +0000</pubDate>
      <link>https://dev.to/sentry/no-code-aws-lambda-monitoring-1fbd</link>
      <guid>https://dev.to/sentry/no-code-aws-lambda-monitoring-1fbd</guid>
      <description>&lt;p&gt;Auto-instrumenting AWS &lt;a href="https://sentry.io/for/serverless/"&gt;Lambda Monitoring&lt;/a&gt; didn’t originate through a focus group or business plan. It started as a hackathon project that addressed the tedium of removing manual code instrumentation. Developer environments often include hundreds of AWS Lambda functions. And our existing instrumentation required initialization code to be manually placed on every single function. So to fix this, our growth team used Amazon CloudWatch to build a prototype that could instrument AWS Lambda functions.&lt;/p&gt;

&lt;p&gt;This prototype began by using AWS CloudFormation stack to automatically create resources in a customer environment. Then we streamed Amazon CloudWatch Logs to Sentry through the Amazon Kinesis Data Firehose. This made it so all you had to do was put in your AWS account ID and create the stack using a pre-configured AWS CloudFormation stack.&lt;/p&gt;

&lt;p&gt;But in order to get this production-ready, we had to take a closer look at a few things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Since we just picked a mocked-up stack trace for our demo, the streamed logs were not grouped into issues — or even formatted to pull out stack traces.&lt;/li&gt;
&lt;li&gt;  While the Amazon CloudWatch logs could display stack traces, they didn’t even come close to Sentry’s representation of stack traces, as they had a different use case (though that’s a conversation for another day).&lt;/li&gt;
&lt;li&gt;  Through this automated instrumentation, it wasn’t possible to choose or create a project for your AWS Lambda functions, as we had hard-coded these values for the hackathon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ultimately, this meant that we would not use logs to productize no-code AWS Lambda monitoring, as logs would limit our tracing capabilities. Instead, we used &lt;a href="https://aws.amazon.com/blogs/compute/introducing-aws-lambda-extensions-in-preview/"&gt;AWS Lambda Extensions&lt;/a&gt;, which tied Sentry’s &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-layers.html"&gt;AWS Lambda Layers&lt;/a&gt; — along with environment variables and code wrapping — to instrument AWS Lambda functions. Doing so ensured that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  We were a part of the runtime environments that captured issues/performance and reported them in real-time.&lt;/li&gt;
&lt;li&gt;  We could connect developers to formatted stack traces along with in-context environment variables and breadcrumbs.&lt;/li&gt;
&lt;li&gt;  Developers were able to make changes to Sentry’s instrumentation rather than creating in a black box.&lt;/li&gt;
&lt;li&gt;  Developers could control the sample rate for the function traces, as well as activation/deactivation of Sentry directly from the UI.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using the AWS Lambda Layers approach and skipping the Amazon CloudWatch had two minor — but manageable — downsides:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  We needed a specific SDK AWS Lambda Layer for every programming language. We launched with support for Node and Python.&lt;/li&gt;
&lt;li&gt;  We’d miss out on some metrics like memory usage and timeout issues since they are reported after an AWS Lambda function has finished executing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#outcome"&gt;
  &lt;/a&gt;
  Outcome
&lt;/h2&gt;

&lt;p&gt;Instrumenting Sentry on your AWS Lambda functions is now as easy as following a following few simple, UI-specific  &lt;a href="https://docs.sentry.io/product/integrations/aws-lambda/"&gt;steps&lt;/a&gt;:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-select-project"&gt;
  &lt;/a&gt;
  1. Select Project
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lqhja_ML--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78mqjhnz5squq2pyzl7i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lqhja_ML--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78mqjhnz5squq2pyzl7i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-add-cloudformation-stack"&gt;
  &lt;/a&gt;
  2. Add CloudFormation Stack
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3GjEs2p4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4tmls9kvb2k2dti4hng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3GjEs2p4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4tmls9kvb2k2dti4hng.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-select-functions-to-instrument"&gt;
  &lt;/a&gt;
  3. Select Functions to Instrument
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TtRCE_mv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/necwogqa9f00f8jqma6b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TtRCE_mv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/necwogqa9f00f8jqma6b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's it! You can even toggle function instrumentation on the fly from the AWS integration management page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_pT6NRxG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdrask0tbblbbpvvo2id.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_pT6NRxG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdrask0tbblbbpvvo2id.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ok, so why should you care? Well, developers seem to appreciate the value in auto-instrumentation — more than a third of our instrumentations for AWS Lambda monitoring are now coming through auto-instrumentation. The folks at AWS thought it wasn’t bad either. They helped us become an &lt;a href="https://partners.amazonaws.com/partners/0010L00001sCEb6QAG/Sentry"&gt;AWS Partner&lt;/a&gt; and gave us a &lt;a href="https://aws.amazon.com/partners/programs/service-ready/"&gt;AWS Lambda Ready&lt;/a&gt; Designation.&lt;/p&gt;

&lt;p&gt;You can learn more about Sentry’s support for Serverless Monitoring &lt;a href="https://docs.sentry.io/product/integrations/#cloud-monitoring"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>node</category>
      <category>python</category>
      <category>aws</category>
    </item>
    <item>
      <title>17 Blogs &amp; Videos That Will Help you Develop your App</title>
      <author>Ruanna</author>
      <pubDate>Tue, 25 May 2021 20:56:55 +0000</pubDate>
      <link>https://dev.to/tomtomdevs/17-blogs-videos-that-will-help-you-develop-your-app-a90</link>
      <guid>https://dev.to/tomtomdevs/17-blogs-videos-that-will-help-you-develop-your-app-a90</guid>
      <description>&lt;p&gt;April was a month with some fun news as we refreshed our Map Display API. We also had some new tutorials in the form of blogs, videos, and webinars on all things ETA and last mile. Take a look at what our developer advocates and location experts were up to this month to help users make the most of location technology in their apps and beyond.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tomtom-developer-blogs"&gt;
  &lt;/a&gt;
  TOMTOM DEVELOPER BLOGS
&lt;/h1&gt;

&lt;p&gt;Our tutorials this month ranged from using the Routing API with JavaScript to adding TomTom maps to a React app, while Search API Product Manager Maarten Clements shared about his career journey and gave an in-depth look at trends and opportunities for developers in search. Read on!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.tomtom.com/blog/spotlight/celebrating-earth-day-new-look-feel-our-map-display-api"&gt;CELEBRATING EARTH DAY WITH THE NEW LOOK &amp;amp; FEEL OF OUR MAP DISPLAY API&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This month, the TomTom Map Display API got an update! This new map style includes changes like brand-new colors, natural features, organized POIs, and improved street labels. Learn more about this update &amp;amp; how it changes your map. &lt;a href="http://developer.tomtom.com/blog/spotlight/celebrating-earth-day-new-look-feel-our-map-display-api"&gt;Read more here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rXboJnhE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lmtl609s3h04l8ldxpi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rXboJnhE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lmtl609s3h04l8ldxpi.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.tomtom.com/blog/spotlight/tomtom-mapmakers-%E2%80%AFmeet-maarten-clements-search-api-product-manager"&gt;TOMTOM MAPMAKERS: MEET MAARTEN CLEMENTS, SEARCH API PRODUCT MANAGER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the third article in our Mapmakers series, we spoke with Maarten Clements, Search API extraordinaire. Learn more about his journey from childhood map-lover to leading the product vision for all things search at TomTom, and what opportunities are out there for developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.tomtom.com/blog/decoded/routing-and-eta-anatomy-trip"&gt;ROUTING AND ETA: ANATOMY OF A TRIP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article dives into working with the TomTom Routing API (using a little JavaScript) to deliver accurate estimated times of arrival, or ETAs. We’ll look at how different options and the time of day change how ETAs are calculated, using two simple applications: ride-hailing services and package delivery.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.tomtom.com/blog/decoded/routing-and-eta-anatomy-trip"&gt;ADDING TOMTOM MAPS TO A MODERN REACT APP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s easy as pie to add detailed, interactive maps to web apps using the TomTom Maps SDK for JavaScript. As the most-used front-end framework, React is a great choice for mapping-heavy web apps. In this article, learn how to add TomTom web maps to a sample React app using Hooks and function components.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tomtom-developers-youtube-tutorials"&gt;
  &lt;/a&gt;
  TOMTOM DEVELOPERS YOUTUBE TUTORIALS
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://youtu.be/aIvcgc-R8TA"&gt;MORE TAXI DISPATCHER TOOLS WITH THE TOMTOM MAPS APIS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this video, developer advocates Jose and Olivia follow the Building a Taxi Dispatcher App tutorial from our Developer Portal. Learn how to “dispatch” taxis to someone’s location by calculating the fastest route to pick them up. &lt;a href="http://youtu.be/aIvcgc-R8TA"&gt;You can watch the tutorial here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IXCm484x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o2ni9rfak6tvy5sq61jn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IXCm484x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o2ni9rfak6tvy5sq61jn.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/Z0To3WK7z7U"&gt;ADDING A TOMTOM MAP WITH THE QUASAR FRAMEWORK&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn how to add a TomTom map with the Quasar framework to build a neighborhood social app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/bJUcA0f7TYk"&gt;HOW ETA WORKS WITH THE TOMTOM MAPS APIS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whether you’re commuting to work or a delivery company delivering food, ETAs mean different things — but they’re always important. In this video, Product Marketing Manager Dosanna Wu explains all about ETAs, and what they mean to you as a developer using our Maps APIs to help companies keep their customers on the right routes.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bJUcA0f7TYk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#events"&gt;
  &lt;/a&gt;
  EVENTS
&lt;/h1&gt;

&lt;p&gt;Product Marketing Manager Anna Borbotko gave a talk on &lt;em&gt;Accelerating Performance in the Last Mile&lt;/em&gt; at World Mail &amp;amp; Express Americas, along with panelists from Doddle, Walmart eCommerce, and Tesla. &lt;/p&gt;

&lt;p&gt;If you missed the event, no need to fear: &lt;a href="https://youtu.be/E0LQg3zEdZU"&gt;you can watch the entire panel discussion here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;To read more about the last mile, check out these related articles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.tomtom.com/blog/decoded/last-mile-logistics-developer%E2%80%99s-point-view"&gt;Last-Mile Logistics: A Developer’s Point of View&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.tomtom.com/blog/decoded/how-location-apis-can-help-power-fleet-management-software"&gt;How Location APIs can help power Fleet Management Software&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.tomtom.com/blog/route-planning/last-mile-delivery-tracking/"&gt;What is Last Mile Delivery Tracking?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#forum-findings"&gt;
  &lt;/a&gt;
  FORUM FINDINGS
&lt;/h1&gt;

&lt;p&gt;Our &lt;a href="https://devforum.tomtom.com"&gt;Developer Forum&lt;/a&gt; is a great place to get help when you’re stuck on a project, or get inspiration for a new one. Here are some of our most popular forum posts this month.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://devforum.tomtom.com/t/apache-instead-of-node/1608"&gt;Running Maps SDK for Web on Apache instead of node.js&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://devforum.tomtom.com/t/update-polyline-coordinates/858"&gt;Implementing route tracking by updating polyline coordinates&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://devforum.tomtom.com/t/any-way-for-checking-given-location-point-is-on-route-or-not-or-near-to-it/1599"&gt;Checking whether a given location point is near, on, or off a route&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#even-more-resources"&gt;
  &lt;/a&gt;
  EVEN MORE RESOURCES
&lt;/h1&gt;

&lt;p&gt;Lastly, we loved these articles from Dev.to for an extra dose of inspiration:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/devggaurav/5-super-under-rated-free-tools-resources-i-use-almost-every-day-as-a-frontend-developer-5c6g"&gt;5 Super Underrated Free Tools/Resources I use Almost Every Day (As a Front-end Developer)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/andrewbaisden/50-cool-web-and-mobile-project-ideas-for-2021-1pgl"&gt;50 Cool Web And Mobile Project Ideas for 2021&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/manuhd8/the-hyper-growth-of-multi-service-on-demand-apps-complete-analysis-guide-on-creating-on-demand-apps-2map"&gt;The Hyper-Growth Of Multi-Service On-Demand Apps: Complete Analysis Guide On Creating On-Demand Apps&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#stay-connected"&gt;
  &lt;/a&gt;
  STAY CONNECTED
&lt;/h1&gt;

&lt;p&gt;Do you have a blog or project you’d like to share with the TomTom Developers community to be featured in an upcoming monthly roundup? Reach out to us at &lt;a href="mailto:tomtom.developer@gmail.com"&gt;tomtom.developer@gmail.com&lt;/a&gt; and let us know! &lt;/p&gt;

&lt;p&gt;We hope there’s something in here to get you inspired for your next project! Make sure to follow us on &lt;a href="https://www.twitter.com/tomtomdevs"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCL-ZtGd70Khd_9OJACd6rXA"&gt;YouTube&lt;/a&gt; to see what’s coming up next. &lt;/p&gt;

&lt;p&gt;Happy mapping!&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>devrel</category>
    </item>
    <item>
      <title>How to build an effective popup that will help get you hired</title>
      <author>Peter</author>
      <pubDate>Tue, 25 May 2021 20:46:17 +0000</pubDate>
      <link>https://dev.to/peterlunch/how-to-build-an-effective-popup-that-will-help-get-you-hired-59p8</link>
      <guid>https://dev.to/peterlunch/how-to-build-an-effective-popup-that-will-help-get-you-hired-59p8</guid>
      <description>&lt;p&gt;As users, popups suck. Most of us never click on them and likely leave the page when we see them. &lt;/p&gt;

&lt;p&gt;But, they work. They convert users to your goal better than most other techniques. In fact on my &lt;a href="https://www.peterlynch.dev/"&gt;developer portfolio&lt;/a&gt;, resume downloads went from 0 to 10 within the first week of implementing an exit intent modal. &lt;/p&gt;

&lt;p&gt;As you know, the job market is competitive. I've recently &lt;a href="https://peterlunch.com/why-im-learning-to-code-and-maybe-you-should-too/"&gt;just transitioned careers&lt;/a&gt; and I know it can feel like no one is even looking at your resume. That's why I've created this tutorial, to help you get your resume into the hands of a real person. It also has the added bonus of showing the person that you know how to make popups that convert.&lt;/p&gt;

&lt;p&gt;In this post we will learn how to build an on exit intent JavaScript modal just like the one below. If you've been following me you might notice I like to make gaming inspired web elements &lt;a href="https://peterlunch.com/how-to-create-responsive-gaming-style-navbar/"&gt;like my SNES controller nav bar&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pin0s/embed/xxqdBvQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;But first let's quickly understand what an exit intent modal is. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-exit-intent-modals-popups"&gt;
  &lt;/a&gt;
  What are exit intent modals (popups)?
&lt;/h2&gt;

&lt;p&gt;An exit intent modal is a type of popup, that detects through JavaScript when a user is about to leave the webpage. It then displays a popup box. Normally, this popup is triggered by a JavaScript event like the users mouse moving off the document or window onto the address bar or off the browser entirely. &lt;/p&gt;

&lt;p&gt;Generally exit intent modals are in your face and can be quite annoying. We will make sure ours is less disruptive to the user and more of a delight for the user to stumble upon. We are also going to make sure they only see it once. Because, there is nothing more annoying than seeing the same modal 10 times. &lt;/p&gt;

&lt;p&gt;So let's get into the step by step tutorial for making this exit intent modal with HTML, CSS and JavaScript.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-project-setup"&gt;
  &lt;/a&gt;
  1. Project Setup
&lt;/h2&gt;

&lt;p&gt;I have setup a GitHub repo with all the start files you are going to need to get this project up and running, fork the project &lt;a href="https://github.com/pin0S/zelda-meme-modal"&gt;here&lt;/a&gt; to get started.&lt;/p&gt;

&lt;p&gt;To begin with let’s understand what is happening with the HTML for this project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!--modal--&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"onExitModal"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- Modal content --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"modalContent"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"close"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;times;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"messageContainer fade-in"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"modalMessage"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;it's &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;dangerous &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;to &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;go &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;alone! &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;take &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;this.&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"iconContainer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/flame.png"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flame image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/oldman.svg"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/flame.png"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flame image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"resumeContainer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"sword"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/sword.jpg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"resume"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;My Resume&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On line 3 we have created the container for our modal and given it the &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;onExitModal&lt;/code&gt;, this is important as we are going to target it with JavaScript later on.&lt;/p&gt;

&lt;p&gt;Next we then create a container for our modal content. The modal &lt;br&gt;
content container is separated into three child containers for our &lt;br&gt;
message, icons and then for our resume. The key thing to note here is &lt;br&gt;
the message is split word by word using &lt;code&gt;span&lt;/code&gt; elements. This will allow us to animate each word individually with CSS.&lt;/p&gt;

&lt;p&gt;Finally, the first &lt;code&gt;span&lt;/code&gt; element is using an &lt;code&gt;x&lt;/code&gt; symbol so that the user can easily and intuitively close the modal, implementing this will require some JavaScript.&lt;/p&gt;

&lt;p&gt;With just the HTML your modal should look something like the below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nfHkerS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8numzmjino0797cdo7z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nfHkerS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8numzmjino0797cdo7z.png" alt="all images and text for modal in html"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s not pretty, and it is not what we want. As you know, we want the modal hidden on the page until the user performed the exit intent action. Therefore, we need to implement some CSS to hide the modal. Let’s look at how to do that now.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-adding-the-css"&gt;
  &lt;/a&gt;
  2. Adding the CSS
&lt;/h2&gt;

&lt;p&gt;The CSS for this project is split into three key parts.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The functional CSS&lt;/li&gt;
&lt;li&gt;The Styling CSS&lt;/li&gt;
&lt;li&gt;Animations &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The functional CSS is making the modal hidden and positioning it on the page so it can appear when you implement the exit intent modals JavaScript. The styling is making it look pretty and the animation is to make the popup pop (pun intended) and to give it a video game feel.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-functional-css"&gt;
  &lt;/a&gt;
  The functional CSS
&lt;/h3&gt;

&lt;p&gt;The first thing we need to do is ensure the modal is hidden from the user. Let’s implement the styling for the onExitModal now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#onExitModal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Hide the modal */&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Keep the modal in place */&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;99&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Sit on top of the page */&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Make the modal full width */&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Make the modal full height */&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Enable scroll if needed for different device sizes */&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/* Fallback color */&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s go through the code line by line to understand what is happening.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;display: none&lt;/code&gt; is ensuring that the modal is hidden by default from the user. Next, we set the position of the modal to fixed (&lt;a href="https://peterlunch.com/understanding-the-css-position-property/"&gt;read this guide to understand positioning&lt;/a&gt;) this keeps the modal on the same place on the page even if the user scrolls up and down. The last thing to take notice of is that we set the &lt;code&gt;z-index&lt;/code&gt; to 99 this ensures that it will appear in front of all other elements on the page.&lt;/p&gt;

&lt;p&gt;The modal will now be hidden from the users view. In due time we will implement the exit intent modals JavaScript code. But, first we need to style the rest of the modal so it looks appealing we’ll start with the &lt;code&gt;modalContent&lt;/code&gt; container.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-styling-css"&gt;
  &lt;/a&gt;
  The Styling CSS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.modalContent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15%&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#fefefe&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The styling is pretty straight forward, the main thing to take note of is the &lt;code&gt;width&lt;/code&gt;. This tutorial won’t go into media queries styling but you will need to adjust the width for different screen sizes as well as the size of the content (images, text, link).&lt;/p&gt;

&lt;p&gt;Now that the content contain is set we can style the &lt;code&gt;close&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.close&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fefefe&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;28px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.close&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.close&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#d4ce46&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;x&lt;/code&gt; symbol will now appear on the right of the modal and when hovered will change color to let the user know they can close the modal.&lt;/p&gt;

&lt;p&gt;Next, we need to style the font on our message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.modal-message&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Press Start 2P'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;cursive&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;32px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The font we are using is the Google ‘Press Start 2P’, you need to add the following code to your HTML header.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="nt"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"preconnect"&lt;/span&gt; &lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://fonts.gstatic.com"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://fonts.googleapis.com/css2?family=Press+Start+2P&amp;amp;display=swap"&lt;/span&gt; &lt;span class="nt"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"stylesheet"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, we need to style the images in the icon container as they are too big and throw off the alignment of our exit intent modal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.flame&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;drop-shadow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;#E37D21&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We do a little magic with the flame elements here. Usually to give an element a shadow we would use the &lt;code&gt;box-shadow&lt;/code&gt; property. However, this creates an ugly box effect on our images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JLsnduca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kzq3c06ph2zjrsa5wqm9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JLsnduca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kzq3c06ph2zjrsa5wqm9.png" alt="modal with box shadow styling making it look square"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a result, we can use the &lt;code&gt;filter&lt;/code&gt; property with the CSS &lt;code&gt;drop-shadow&lt;/code&gt; function to apply the effect directly to the image. It is important to note this only works with transparent images.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--02NDO-jm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w0k36rvpd4yakbwjfwqx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--02NDO-jm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w0k36rvpd4yakbwjfwqx.png" alt="modal with drop-shadow on the flames giving them a glow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Obviously, this is a much better look and gives a nice effect of the flame glowing. Finally for our styling we need to style the &lt;code&gt;sword&lt;/code&gt; element and link to your resume.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.resume-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#sword&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#resume&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.7em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#7C4A4A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Press Start 2P"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;cursive&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#D4A851&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have placed both elements in a flex-container so that we can position them in the center and in a column formation. &lt;/p&gt;

&lt;p&gt;That is it for our exit intent modal styling. We now need to add the JavaScript functionality to show the modal when the user is about to exit the page. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-exit-intent-modal-javascript"&gt;
  &lt;/a&gt;
  3. Exit intent modal JavaScript
&lt;/h2&gt;

&lt;p&gt;Now that you have the basic CSS set up to hide the modal from the users view, we need to set up some JavaScript to determine when to show the modal. Before we get into creating the desired effect you must first connect your JavaScript file to the HTML. &lt;/p&gt;

&lt;p&gt;To connect the &lt;code&gt;modal.js&lt;/code&gt; file to the HTML file. Place the below line of code within &lt;code&gt;body&lt;/code&gt; tags at the very bottom in your HTML file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"modal.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that you have connected the two files we first need to ensure we are selecting the elements we want. Open the &lt;code&gt;modal.js&lt;/code&gt; file and add the two selectors below to the top.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;modal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;onExitModal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;close&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://peterlunch.com/javascript-exit-intent-modal/"&gt;https://peterlunch.com/javascript-exit-intent-modal/&lt;/a&gt;&lt;br&gt;
With that done, we can start writing our exit intent modal JavaScript code to make the modal appear when a user goes to exit the page. Add the below code to your &lt;code&gt;modal.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseout&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toElement&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;relatedTarget&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code we have added a &lt;code&gt;mouseout&lt;/code&gt; event listener to the document. This event is fired when a the users mouse is moved so that it is no longer contained within the document. The document if you are unsure is basically the webpage. &lt;/p&gt;

&lt;p&gt;Next we perform a conditional check to make sure there is no &lt;code&gt;toElement&lt;/code&gt; and &lt;code&gt;relatedTarget&lt;/code&gt;. To quickly explain these two properties the toElement property retrieves the element that the mouse pointer entered and relatedTarget property has similar functionality just with different browser support. So in plain english what that line is doing is ensuring that the mouse is no longer on any element on the page so both would be &lt;code&gt;null&lt;/code&gt;. This essentially ensures the user is trying to exit the page. &lt;/p&gt;

&lt;p&gt;Finally, we select the &lt;code&gt;modal&lt;/code&gt; and change the display property from &lt;code&gt;none&lt;/code&gt; to &lt;code&gt;block&lt;/code&gt; which will make it appear on the screen to the user. &lt;/p&gt;

&lt;p&gt;Great so now you have a working exit intent modal. However, it is not perfect as everytime a user moves the mouse from the window the modal will appear. This will get annoying. &lt;/p&gt;

&lt;p&gt;To fix this we want to add functionality so that it only shows once per session. We also want to add other functionality to improve the users experience with our modal so it is less spammy. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optimizing-the-exit-intent-modals-javascript"&gt;
  &lt;/a&gt;
  Optimizing the exit intent modals JavaScript
&lt;/h3&gt;

&lt;p&gt;The first thing we are going to do to ensure the modal is only shown to the user once per session. Currently the modal will show each time the user moves the mouse outside the window. &lt;/p&gt;

&lt;p&gt;First we are going to change the event listener to a function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;exitEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toElement&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;relatedTarget&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseout&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;exitEvent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The benefit of doing it this way is that we can state which function we want to remove from the DOM. On line 3 we remove the event listener after the first time the user has seen it. &lt;/p&gt;

&lt;p&gt;As a result of this change the modal will only appear once on the page. However, there is a big flaw with this. If the user leaves the page and then comes back it will appear again. &lt;/p&gt;

&lt;p&gt;Therefore the second part of this optimization is to add some cookies to the record if the user has seen the modal within the last week. As a result, the first thing we need some cookie setter and getter functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setCookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cvalue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;exdays&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;expires&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;exdays&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;exdays&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="nx"&gt;expires&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`expires=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUTCString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;cname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;cvalue&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;expires&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;path=/`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getCookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ca&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;ca&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The scope of Cookies is beyond this post. But, at a high level the two functions will be used to check if the user has seen the modal yet with the &lt;code&gt;getCookie&lt;/code&gt; function. If they have not we can use the &lt;code&gt;setCookie&lt;/code&gt; function to set them so the user won't see them for a week.&lt;/p&gt;

&lt;p&gt;With those functions written we can now update our &lt;code&gt;modal.js&lt;/code&gt; file to check for cookies and add them once the modal has been seen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;getCookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resumeModalSeen&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseout&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;exitEvent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;exitEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toElement&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;relatedTarget&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseout&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;exitEvent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="nx"&gt;setCookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resumeModalSeen&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above we have wrapped our event listener in a conditional statement that checks if their isn't a cookie 'resumeModalSeen' then listen for the &lt;code&gt;mouseout&lt;/code&gt; event. &lt;/p&gt;

&lt;p&gt;Then within the &lt;code&gt;exitEvent&lt;/code&gt; function we call the setCookie function once the modal has been seen. This will prevent the user from seeing the modal for one week. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;It is important to note their are laws around cookies, in particular the &lt;a href="https://gdpr-info.eu/"&gt;GDPR guidelines&lt;/a&gt;. The guidelines themselves are well outside the scope of this post. But, if you implement a modal like this please ensure you are being compliant.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As a result of adding cookies and converting the event listener to a function we have solved the first issue with our modal. Next we want to ensure the user has spent sometime on our page before we let the exit intent modal show. What I mean by this is we don't want the modal to appear if a user is on our page for 1 second and then goes to exit. &lt;/p&gt;

&lt;p&gt;To handle this we are going to wrap our event listener in a &lt;code&gt;setTimeout&lt;/code&gt; method, this ensures the user has spent sometime on the page before the modal will even appear.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;getCookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resumeModalSeen&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseout&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;exitEvent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;6000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above we are ensuring the event listener is only attached to the DOM after the user has been on the page for 6 seconds. Not a lot of time but enought to not make the modal annoying. &lt;/p&gt;

&lt;p&gt;Next we want to actually optimize the exit intent. Right now if a user moves their mouse anywhere other than the window like left or right our modal will display. That is not really exit behaviour. Therefore, we want to make it so that it only shows when the user moves their mouse to the top of the browser. &lt;/p&gt;

&lt;p&gt;To ensure we only show real exit intent we are going to adjust our conditional statement in our &lt;code&gt;exitEvent&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;exitEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toElement&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;relatedTarget&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientY&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseout&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;exitEvent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="nx"&gt;setCookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resumeModalSeen&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;e.clientY &amp;lt; 5&lt;/code&gt; condition checks the value cursors position on the window. In particular it checks the vertical position of the mouse. If that position is less than 5 then we can safely assume the user has moved the mouse towards the top of the browser and not to the left, right or bottom.&lt;/p&gt;

&lt;p&gt;Our modal will now be appear as we want it to. But we need to give the user a way to close the modal. Without delay let's do that now. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#closing-the-modal"&gt;
  &lt;/a&gt;
  Closing the modal
&lt;/h3&gt;

&lt;p&gt;With any modal if you want the user to be less annoyed you should provide a clear way to exit it. We are going to provide the user with two common ways to exit the modal. &lt;/p&gt;

&lt;p&gt;The first way is with a close button, which we have already added in our HTML with the &lt;code&gt;span&lt;/code&gt; element that has the class name &lt;code&gt;close&lt;/code&gt;. In the &lt;code&gt;modal.js&lt;/code&gt; file just under the span selector add the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example we have added the &lt;code&gt;onclick&lt;/code&gt; global event handler. When the user now clicks on the &lt;code&gt;x&lt;/code&gt; in the modal it will display none making it appear closed. &lt;/p&gt;

&lt;p&gt;Next we want to allow the user to close the modal by clicking anywhere else on the browser window. Add the following code to the &lt;code&gt;modal.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above we have added another &lt;code&gt;onclick&lt;/code&gt; event handler. This time, we check to see if the user clicks on the modal. If the user clicks the modal content, that is anything within the grey border the modal won't close. But, if they click outside of the content and on the &lt;code&gt;onExitModal&lt;/code&gt; element the modal will exit.&lt;/p&gt;

&lt;p&gt;There you have it, that is all the JavaScript we need for our exit intent modal. Next we need to make the modal pop with some CSS animations to really grab the users attention before they leave our page without downloading our resume. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-add-css-animations"&gt;
  &lt;/a&gt;
  4. Add CSS Animations
&lt;/h2&gt;

&lt;p&gt;Animating the exit intent modal was the best part and I encourage you to experiment with different animations on yours. If you're not familiar with animating in CSS you can &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations"&gt;checkout this guide&lt;/a&gt; to get started. In this post, I will just be showing you how to implement the animations without much explaination.&lt;/p&gt;

&lt;p&gt;In this case, we are doing two different animations. In the first, we are going to make the text appear word by word like in old video games. Next we are going to display the resume and sword like they used to appear in some Zelda games. &lt;/p&gt;

&lt;p&gt;Let's get started with the first animation. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#animating-text-word-by-word-with-css"&gt;
  &lt;/a&gt;
  Animating text word by word with CSS
&lt;/h3&gt;

&lt;p&gt;The reason we set up our message to have each word in a separate &lt;code&gt;span&lt;/code&gt; was to allow us to animate them one at a time. &lt;/p&gt;

&lt;p&gt;Looking back to our HTML the &lt;code&gt;messageContainer&lt;/code&gt; &lt;code&gt;div&lt;/code&gt; has an additional class &lt;code&gt;fadeIn&lt;/code&gt;. We are going to use that class to animated each of the spans. The first thing we need to do is add the animation to the CSS style definition.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.fadeIn&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;textFadeIn&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="n"&gt;forwards&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above we have used a Combination selector which is an advanced CSS selector you can &lt;a href="https://www.freecodecamp.org/news/use-css-selectors-to-style-webpage/"&gt;learn about here&lt;/a&gt;. Basically, we are telling CSS to select all spans of the parent &lt;code&gt;.fadeIn&lt;/code&gt; class. &lt;/p&gt;

&lt;p&gt;Next, we set the &lt;code&gt;opacity&lt;/code&gt; to 0 so that you cannot see the &lt;code&gt;span&lt;/code&gt; elements but they will still hold their position on the modal. &lt;/p&gt;

&lt;p&gt;Now we add the animation. The first part &lt;code&gt;textFadeIn&lt;/code&gt; is the animation name. Second is the length of the animation which is half a second. Third is the animation timing function we want a smooth linear function. Finally we want the styles updated to what we have at the end of the animation using the &lt;code&gt;animation-fill-mode&lt;/code&gt; property value of &lt;code&gt;forwards&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Finally, we give the animation a delay of 300 milliseconds so that it doesn't start as soon as the modal opens. &lt;/p&gt;

&lt;p&gt;Now that we have the animation attached to the element we need to make the actual animation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;textFadeIn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-100px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the animation starts we have the text at 10% opactity and it is -100px on the x plane. As it transitions it will go to 0px on the x plane and full opacity. It should look like the below. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EPQMfZbd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwlfi4u10ge96a38izfa.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EPQMfZbd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwlfi4u10ge96a38izfa.gif" alt="text appears on modal all at once"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That is not what we want, we want it word by word. To handle this we need to target each of the &lt;code&gt;span&lt;/code&gt; elements and add an &lt;code&gt;animation-delay&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.fadeIn&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.7s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.fadeIn&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.fadeIn&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.7s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.fadeIn&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.fadeIn&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;6&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.7s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.fadeIn&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;7&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.9s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, we start by targeting the second &lt;code&gt;span&lt;/code&gt; element. We then give each element a delay value that is 100ms before the end of the previous element's animation. This gives the text a nice flowing effect. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TR0x43i1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3i678idczjs3pgv6oy8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TR0x43i1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3i678idczjs3pgv6oy8.gif" alt="text appears word by word"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the text is flowing much better let's animate the &lt;code&gt;resumeContainer&lt;/code&gt; to float up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#animating-a-container-to-float-up"&gt;
  &lt;/a&gt;
  Animating a container to float up
&lt;/h3&gt;

&lt;p&gt;The first thing we need to do is add the below lines of code to the &lt;code&gt;resumeContainer&lt;/code&gt; styling.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;animation&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;resumeUp&lt;/span&gt; &lt;span class="nt"&gt;ease-out&lt;/span&gt; &lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;5&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt; &lt;span class="nt"&gt;forwards&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;animation-delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;5&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again we have set the &lt;code&gt;opacity&lt;/code&gt; to 0 so it won't appear at the start. We then add the animation like we did for the text animation. Finally we add a delay of 3.5 seconds which is about the time it takes for the text animation to finish. We do this in order to make the resume appear just after the text 'take this'. As a result the user is like "oh take this resume, sure thing!".&lt;/p&gt;

&lt;p&gt;The last thing we need to do is create the &lt;code&gt;resumeUp&lt;/code&gt; animation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;resumeUp&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;from&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code like in the text animation we set the opacity to 10% and then as the animation progresses we increase it. This time we have set the Y position of the container to 100px and then move it towards 0 to create the floating up effect. &lt;/p&gt;

&lt;p&gt;And boom we have a complete exit intent modal. Well done. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;By and large you should now be able to create an exciting exit intent modal with HTML, CSS and JavaScript that gets your resume downloaded. &lt;/p&gt;

&lt;p&gt;As this modal is live on my portfolio, I encourage you not to copy the modal but come up with your own. Try instead to add your own flair that matches who you are. &lt;/p&gt;

&lt;p&gt;Lastly, if you thought this was awesome or you learnt something from this post then checkout the rest of my posts &lt;a href="https://peterlunch.com/?utm_source=devto&amp;amp;utm_medium=emb-link&amp;amp;utm_campaign=exit-intent-modal"&gt;here&lt;/a&gt; or &lt;a href="https://mailchi.mp/9e224d35f00e/74ugxdpuuw"&gt;sign up to my newsletter&lt;/a&gt; to access to more amazing content.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>career</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Face detection with Tensorflow【React + TypeScript】</title>
      <author>Yui_travel</author>
      <pubDate>Tue, 25 May 2021 20:26:04 +0000</pubDate>
      <link>https://dev.to/yuiko/face-detection-by-using-tensorflow-react-typescript-3dn5</link>
      <guid>https://dev.to/yuiko/face-detection-by-using-tensorflow-react-typescript-3dn5</guid>
      <description>&lt;p&gt;Hello guys,&lt;/p&gt;

&lt;p&gt;I have developed an application with face detection, that applies a mask automatically to your face in real time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BNhhgJ64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jtm443pisq3ut9obmxs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BNhhgJ64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jtm443pisq3ut9obmxs.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this article, I will explain how to develop this application.&lt;/p&gt;

&lt;p&gt;DEMO→&lt;a href="https://mask-app-one.vercel.app/"&gt;https://mask-app-one.vercel.app/&lt;/a&gt;&lt;br&gt;
github→&lt;a href="https://github.com/YuikoIto/mask-app"&gt;https://github.com/YuikoIto/mask-app&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If the mask does not show up even after some seconds, please reload it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#setup-react-application-and-install-reactwebcam"&gt;
  &lt;/a&gt;
  Setup react application and install react-webcam
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npx create-react-app face-mask-app --template typescript
$ yarn add react-webcam @types/react-webcam
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then, try setting up web camera.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.tsx&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Webcam&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-webcam&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webcam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Webcam&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"header"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;face mask App&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Webcam&lt;/span&gt;
        &lt;span class="na"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;webcam&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;absolute&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;textAlign&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;yarn start&lt;/code&gt; and access &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wa8hxpdi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19aa4y29og0v1bc1t13n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wa8hxpdi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19aa4y29og0v1bc1t13n.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yay! Web camera is now available. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#try-face-detection-using-tensorflow"&gt;
  &lt;/a&gt;
  Try Face detection using Tensorflow
&lt;/h2&gt;

&lt;p&gt;Here, we are using this model. &lt;a href="https://github.com/tensorflow/tfjs-models/tree/master/face-landmarks-detection"&gt;https://github.com/tensorflow/tfjs-models/tree/master/face-landmarks-detection&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ yarn add @tensorflow-models/face-landmarks-detection @tensorflow/tfjs-core @tensorflow/tfjs-converter @tensorflow/tfjs-backend-webgl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;If you don't use TypeScript, you don't have to install all of them. Install &lt;code&gt;@tensorflow/tfjs&lt;/code&gt; instead of &lt;code&gt;@tensorflow/tfjs-core&lt;/code&gt;, &lt;code&gt;@tensorflow/tfjs-converter&lt;/code&gt;, and &lt;code&gt;@tensorflow/tfjs-backend-webgl&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.tsx&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@tensorflow/tfjs-core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@tensorflow/tfjs-converter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@tensorflow/tfjs-backend-webgl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;faceLandmarksDetection&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@tensorflow-models/face-landmarks-detection&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MediaPipeFaceMesh&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@tensorflow-models/face-landmarks-detection/dist/types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webcam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Webcam&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useFaceDetect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;faceLandmarksDetection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;faceLandmarksDetection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SupportedPackages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediapipeFacemesh&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;detect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;detect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;model&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MediaPipeFaceMesh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;webcam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webcamCurrent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;webcam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// if the video is not completely uploaded, just return.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;webcamCurrent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;webcamCurrent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;estimateFaces&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;useFaceDetect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check logs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6tRRNVSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/apq0hwdi7yf9d347v4eb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6tRRNVSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/apq0hwdi7yf9d347v4eb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OK, seems good.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-canvas-to-overlay-the-mask-on-your-face"&gt;
  &lt;/a&gt;
  Setup canvas to overlay the mask on your face
&lt;/h2&gt;

&lt;p&gt;Add &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; under &lt;code&gt;&amp;lt;Webcam&amp;gt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;//App.tsx&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webcam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Webcam&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HTMLCanvasElement&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"header"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;face mask App&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Webcam&lt;/span&gt;
        &lt;span class="na"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;webcam&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;canvas&lt;/span&gt;
        &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Match the size of the canvas with the video.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;videoWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;webcamCurrent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;videoWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;videoHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;webcamCurrent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;videoHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;videoWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;videoHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, let's see &lt;a href="https://github.com/tensorflow/tfjs-models/blob/master/face-landmarks-detection/mesh_map.jpg"&gt;this map&lt;/a&gt; and check where we should fill out.&lt;/p&gt;

&lt;p&gt;By this map, No. 195 is around the nose. So set this point as the fulcrum. Let's draw a mask easily by using &lt;code&gt;beginPath()〜closePath()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// mask.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AnnotatedPrediction&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@tensorflow-models/face-landmarks-detection/dist/mediapipe-facemesh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Coord2D&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Coords3D&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@tensorflow-models/face-landmarks-detection/dist/mediapipe-facemesh/util&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;drawMask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;CanvasRenderingContext2D&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Coords3D&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="mi"&gt;93&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;132&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;172&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;136&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;149&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;176&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;148&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;152&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;377&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;378&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;379&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;365&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;397&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;288&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;361&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;323&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moveTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;195&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;195&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;distance&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;distance&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;draw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AnnotatedPrediction&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;CanvasRenderingContext2D&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="na"&gt;prediction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AnnotatedPrediction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;keypoints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;prediction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scaledMesh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;boundingBox&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;prediction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;boundingBox&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bottomRight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;boundingBox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bottomRight&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Coord2D&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;topLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;boundingBox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;topLeft&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Coord2D&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="c1"&gt;// make the drawing mask larger a bit&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;distance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bottomRight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;topLeft&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
            &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;topLeft&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;topLeft&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;0.02&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clearRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;drawMask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;keypoints&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Coords3D&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;closePath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;restore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Import this &lt;code&gt;draw&lt;/code&gt; function in App.tsx and use it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;CanvasRenderingContext2D&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;videoWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;videoHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finish!&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;br&gt;
This is my first time to use Tensorflow but thanks to a good README of the official github repository, I can make a small application easily. I will develop more with using Tensorflow 🐣&lt;/p&gt;

&lt;p&gt;**&lt;/p&gt;

&lt;p&gt;Please send me a message if you need.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="mailto:yuiko.dev@gmail.com"&gt;yuiko.dev@gmail.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/yui_active"&gt;https://twitter.com/yui_active&lt;/a&gt;
**&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://y-stream.blogspot.com/2013/02/jscanvas.html"&gt;Canvasでよく使う描画テクまとめ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/tfjs-models/tree/master/face-landmarks-detection"&gt;tfjs-models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.tensorflow.org/2020/11/iris-landmark-tracking-in-browser-with-MediaPipe-and-TensorFlowJS.html"&gt;Iris landmark tracking in the browser with MediaPipe and TensorFlow.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>tensorflow</category>
    </item>
    <item>
      <title>The 52 most popular projects from the last year of Trending Projects</title>
      <author>Iain Freestone</author>
      <pubDate>Tue, 25 May 2021 20:05:23 +0000</pubDate>
      <link>https://dev.to/iainfreestone/the-52-most-popular-projects-from-the-last-year-of-trending-projects-2a8l</link>
      <guid>https://dev.to/iainfreestone/the-52-most-popular-projects-from-the-last-year-of-trending-projects-2a8l</guid>
      <description>&lt;p&gt;For the last year, I have been curating Trending projects a newsletter that showcases 10 popular web development projects each week.&lt;/p&gt;

&lt;p&gt;The following list highlights the project that received the most click-throughs from each issue.&lt;/p&gt;

&lt;p&gt;Please sign up at &lt;a href="https://iainfreestone.com/"&gt;www.iainfreestone.com&lt;/a&gt;  &lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#21st-may-2021"&gt;
  &lt;/a&gt;
  21st May 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-52"&gt;
  &lt;/a&gt;
  Week 52
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#docz"&gt;
  &lt;/a&gt;
  Docz
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--unAazjKz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iyxtqcm3qil9fg42rch5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--unAazjKz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iyxtqcm3qil9fg42rch5.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docz makes it easy to write and publish beautiful interactive documentation for your code. Create MDX files showcasing your code and Docz turns them into a live-reloading, production-ready site.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/pedronauck/docz"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.docz.site/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-21st-may-2021-2c6h"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#14th-may-2021"&gt;
  &lt;/a&gt;
  14th May 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-51"&gt;
  &lt;/a&gt;
  Week 51
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#slidev"&gt;
  &lt;/a&gt;
  Slidev
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ph5tEom---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efpo0n9tl06fsxa3xizl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ph5tEom---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efpo0n9tl06fsxa3xizl.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Presentation Slides for Developers&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/slidevjs/slidev"&gt;GitHub&lt;/a&gt; | &lt;a href="https://sli.dev/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-14th-may-2021-1mkd"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#7th-may-2021"&gt;
  &lt;/a&gt;
  7th May 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-50"&gt;
  &lt;/a&gt;
  Week 50
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#keystone"&gt;
  &lt;/a&gt;
  Keystone
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2JNeRWPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6d2sw5fwsoo36zrigdqf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2JNeRWPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6d2sw5fwsoo36zrigdqf.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The most powerful headless CMS for Node.js — built with GraphQL and React&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/keystonejs/keystone"&gt;GitHub&lt;/a&gt; | &lt;a href="https://next.keystonejs.com/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-7th-may-2021-2ckf"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#30th-april-2021"&gt;
  &lt;/a&gt;
  30th April 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-49"&gt;
  &lt;/a&gt;
  Week 49
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#script-kit"&gt;
  &lt;/a&gt;
  Script Kit
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J-WfCQm0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwhy4g9ylvdxndva98qz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J-WfCQm0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwhy4g9ylvdxndva98qz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Automation for Developers, Automate Anything! Making scripts easy to run, write, and share&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/johnlindquist/kit"&gt;GitHub&lt;/a&gt; | &lt;a href="https://simplescripts.dev/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-30th-april-2021-efn"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#23rd-april-2021"&gt;
  &lt;/a&gt;
  23rd April 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-48"&gt;
  &lt;/a&gt;
  Week 48
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#gittips"&gt;
  &lt;/a&gt;
  git-tips
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Bn8fbcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pws9rcsemip2zucujsej.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Bn8fbcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pws9rcsemip2zucujsej.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Most commonly used git tips and tricks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/git-tips/tips"&gt;GitHub&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-23rd-april-2021-4g02"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#16th-april-2021"&gt;
  &lt;/a&gt;
  16th April 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-47"&gt;
  &lt;/a&gt;
  Week 47
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#css-layout"&gt;
  &lt;/a&gt;
  CSS Layout
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vy48p6iE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fp7axudcjc52ey2wcdgv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vy48p6iE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fp7axudcjc52ey2wcdgv.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A collection of popular layouts and patterns made with CSS. Now it has 90+ patterns and continues growing!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/phuoc-ng/csslayout"&gt;GitHub&lt;/a&gt; | &lt;a href="https://csslayout.io/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-16th-april-2021-k0k"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#9th-april-2021"&gt;
  &lt;/a&gt;
  9th April 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-46"&gt;
  &lt;/a&gt;
  Week 46
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#wmr"&gt;
  &lt;/a&gt;
  WMR
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7JghASws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/egzytg72842r25dnt027.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7JghASws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/egzytg72842r25dnt027.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The tiny all-in-one development tool for modern web apps, in a single 2mb file with no dependencies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/preactjs/wmr"&gt;GitHub&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-9th-april-2021-1968"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#2nd-april-2021"&gt;
  &lt;/a&gt;
  2nd April 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-45"&gt;
  &lt;/a&gt;
  Week 45
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#crankjs"&gt;
  &lt;/a&gt;
  Crank.js
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gLDPfpm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kqpa4mrce607633z6lfg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gLDPfpm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kqpa4mrce607633z6lfg.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Write JSX-driven components with functions, promises and generators.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bikeshaving/crank"&gt;GitHub&lt;/a&gt; | &lt;a href="https://crank.js.org/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-2nd-april-2021-15l8"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#26th-march-2021"&gt;
  &lt;/a&gt;
  26th March 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-44"&gt;
  &lt;/a&gt;
  Week 44
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#the-magic-of-css"&gt;
  &lt;/a&gt;
  The Magic of CSS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hdN2d6RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o17idh68yjfnq3kg6wh6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hdN2d6RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o17idh68yjfnq3kg6wh6.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A CSS course to turn you into a magician.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/adamschwartz/magic-of-css"&gt;GitHub&lt;/a&gt; | &lt;a href="https://adamschwartz.co/magic-of-css/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-26th-march-2021-2081"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#19th-march-2021"&gt;
  &lt;/a&gt;
  19th March 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-43"&gt;
  &lt;/a&gt;
  Week 43
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#awesome-design-tools"&gt;
  &lt;/a&gt;
  Awesome Design Tools
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zzgM5MCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prtrfwzatnxf73ytwqnf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zzgM5MCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prtrfwzatnxf73ytwqnf.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best design tools and plugins for everything&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/goabstract/Awesome-Design-Tools"&gt;GitHub&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-19th-march-2021-2o9p"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#12th-march-2021"&gt;
  &lt;/a&gt;
  12th March 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-42"&gt;
  &lt;/a&gt;
  Week 42
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#sweet-alert"&gt;
  &lt;/a&gt;
  Sweet Alert
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---nTlJlM5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1eh6rtjfzmm0wju6olb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---nTlJlM5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1eh6rtjfzmm0wju6olb.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A beautiful replacement for JavaScript’s “alert”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/t4t5/sweetalert"&gt;GitHub&lt;/a&gt; | &lt;a href="https://sweetalert.js.org/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-12th-march-2021-4o01"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#5th-march-2021"&gt;
  &lt;/a&gt;
  5th March 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-41"&gt;
  &lt;/a&gt;
  Week 41
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#the-art-of-node"&gt;
  &lt;/a&gt;
  The Art of Node
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jkgP83V9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29aeituzccqs8y6cnm3q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jkgP83V9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29aeituzccqs8y6cnm3q.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A short introduction to node.js&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/maxogden/art-of-node"&gt;GitHub&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-5th-march-2021-3dhh"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#26th-february-2021"&gt;
  &lt;/a&gt;
  26th February 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-40"&gt;
  &lt;/a&gt;
  Week 40
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#serverless-stack-sst"&gt;
  &lt;/a&gt;
  Serverless Stack (SST)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DaXu0dG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nw3bo1up1cy6cgxqjsve.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DaXu0dG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nw3bo1up1cy6cgxqjsve.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Serverless Stack (SST) is a framework that makes it easy to build serverless apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/serverless-stack/serverless-stack"&gt;GitHub&lt;/a&gt; | &lt;a href="https://serverless-stack.com/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-26th-february-2021-1a1a"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#19th-february-2021"&gt;
  &lt;/a&gt;
  19th February 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-39"&gt;
  &lt;/a&gt;
  Week 39
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#devicons"&gt;
  &lt;/a&gt;
  Devicons
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dVieS8ma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tabuvmcgteaglu4kqye4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dVieS8ma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tabuvmcgteaglu4kqye4.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An iconic font made for developers. Devicons contains 85 vectorized sharp glyphs . Devicons iconic font is free to use and licensed under MIT.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/vorillaz/devicons"&gt;GitHub&lt;/a&gt; | &lt;a href="http://vorillaz.github.io/devicons/#/main"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-19th-february-2021-hpi"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#12th-february-2021"&gt;
  &lt;/a&gt;
  12th February 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-38"&gt;
  &lt;/a&gt;
  Week 38
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#oasis-engine"&gt;
  &lt;/a&gt;
  Oasis Engine
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_UNXvPn5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6b3owmiya71tcah7melm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_UNXvPn5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6b3owmiya71tcah7melm.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oasis Engine is a web-first and mobile-first high-performance real-time development platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/oasis-engine/engine"&gt;GitHub&lt;/a&gt; | &lt;a href="https://oasisengine.cn/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-12th-february-2021-4en3"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#5th-february-2021"&gt;
  &lt;/a&gt;
  5th February 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-37"&gt;
  &lt;/a&gt;
  Week 37
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#flexbox-patterns"&gt;
  &lt;/a&gt;
  Flexbox Patterns
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_fuiYvS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85rgz10hukdnment76yu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_fuiYvS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85rgz10hukdnment76yu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Patterns for using flexbox CSS to build awesome UI components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/cjcenizal/flexbox-patterns"&gt;GitHub&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-5th-february-2021-67e"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#29th-january-2021"&gt;
  &lt;/a&gt;
  29th January 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-36"&gt;
  &lt;/a&gt;
  Week 36
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#lazy-collections"&gt;
  &lt;/a&gt;
  Lazy Collections
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z35Ot3xf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nmqq58umbyb5aaq2fe7l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z35Ot3xf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nmqq58umbyb5aaq2fe7l.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Collection of fast and lazy operations&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/RobinMalfait/lazy-collections"&gt;GitHub&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-29th-january-2021-4ml2"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#22nd-january-2021"&gt;
  &lt;/a&gt;
  22nd January 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-35"&gt;
  &lt;/a&gt;
  Week 35
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#naming-cheatsheet"&gt;
  &lt;/a&gt;
  Naming cheatsheet
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kWFCaizz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyjh3kdymtb7syfosczz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kWFCaizz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyjh3kdymtb7syfosczz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Naming things is hard. This sheet attempts to make it easier.. Although these suggestions can be applied to any programming language, I will use JavaScript to illustrate them in practice.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kettanaito/naming-cheatsheet"&gt;GitHub&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-22nd-january-2021-50hk"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#15th-january-2021"&gt;
  &lt;/a&gt;
  15th January 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-34"&gt;
  &lt;/a&gt;
  Week 34
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#builderio"&gt;
  &lt;/a&gt;
  builder.io
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cRrMYxRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62e41pbiwsqthnb39y1a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cRrMYxRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62e41pbiwsqthnb39y1a.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Drag and drop page building using your code components. Bring your design systems to life!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/BuilderIO/builder"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.builder.io/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-15th-january-2021-2ffn"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#8th-january-2021"&gt;
  &lt;/a&gt;
  8th January 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-33"&gt;
  &lt;/a&gt;
  Week 33
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#software-developer-folio"&gt;
  &lt;/a&gt;
  Software Developer Folio
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--472JFDOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3u20y0o4ln6h8dy97pms.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--472JFDOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3u20y0o4ln6h8dy97pms.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A clean, beautiful and responsive portfolio template for Developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/saadpasta/developerFolio"&gt;GitHub&lt;/a&gt; | &lt;a href="https://developerfolio.js.org/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-8th-january-2021-2coj"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#1st-january-2021"&gt;
  &lt;/a&gt;
  1st January 2021
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-32"&gt;
  &lt;/a&gt;
  Week 32
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#typescript-deep-dive"&gt;
  &lt;/a&gt;
  TypeScript Deep Dive
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--20Q5Fuji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p8mv7h5usnrl1mckpho5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--20Q5Fuji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p8mv7h5usnrl1mckpho5.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The definitive guide to TypeScript and possibly the best TypeScript book. Free and Open Source&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/basarat/typescript-book"&gt;GitHub&lt;/a&gt; | &lt;a href="https://basarat.gitbook.io/typescript/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-1st-january-2021-5g29"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#24th-december-2020"&gt;
  &lt;/a&gt;
  24th December 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-31"&gt;
  &lt;/a&gt;
  Week 31
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#prisma"&gt;
  &lt;/a&gt;
  Prisma
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PnpKPMd5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53le1kobm72tr2num0k6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PnpKPMd5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53le1kobm72tr2num0k6.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Prisma Client can be used in any Node.js or TypeScript backend application (including serverless applications and microservices). This can be a REST API, a GraphQL API a gRPC API or anything else that needs a database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/prisma/prisma"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.prisma.io/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-24th-december-2020-3206"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#18th-december-2020"&gt;
  &lt;/a&gt;
  18th December 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-30"&gt;
  &lt;/a&gt;
  Week 30
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#50-projects-in-50-days-htmlcss-and-javascript"&gt;
  &lt;/a&gt;
  50 Projects in 50 Days - HTML/CSS and JavaScript
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mZRPC5Ri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1vb78a523osss7gucfe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mZRPC5Ri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1vb78a523osss7gucfe.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;50+ mini web projects using HTML, CSS &amp;amp; JS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bradtraversy/50projects50days"&gt;GitHub&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-18th-december-2020-4hka"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#11th-december-2020"&gt;
  &lt;/a&gt;
  11th December 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-29"&gt;
  &lt;/a&gt;
  Week 29
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#elastic-ui-framework"&gt;
  &lt;/a&gt;
  Elastic UI Framework
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jYKDEB9V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eufcousva2tc4uhykrr1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jYKDEB9V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eufcousva2tc4uhykrr1.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Elastic UI Framework is a collection of React UI components for quickly building user interfaces at Elastic. Not using React? No problem! You can still use the CSS behind each component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/elastic/eui"&gt;GitHub&lt;/a&gt; | &lt;a href="https://elastic.github.io/eui/#/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-11th-december-2020-46id"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#4th-december-2020"&gt;
  &lt;/a&gt;
  4th December 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-28"&gt;
  &lt;/a&gt;
  Week 28
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#youneedtoknowcss"&gt;
  &lt;/a&gt;
  You-need-to-know-css
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XzeJwGd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqmuhoz9a7crmma41b58.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XzeJwGd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqmuhoz9a7crmma41b58.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CSS tricks for web developers&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/l-hammer/You-need-to-know-css"&gt;GitHub&lt;/a&gt; | &lt;a href="https://lhammer.cn/You-need-to-know-css/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-4th-december-2020-16ck"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#27th-november-2020"&gt;
  &lt;/a&gt;
  27th November 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-27"&gt;
  &lt;/a&gt;
  Week 27
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#layr"&gt;
  &lt;/a&gt;
  Layr
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aQsdMnCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p3xlrwowr2yrini4vu2j.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aQsdMnCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p3xlrwowr2yrini4vu2j.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Layr is a set of JavaScript/TypeScript libraries to dramatically simplify the development of full-stack applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/layrjs/layr"&gt;GitHub&lt;/a&gt; | &lt;a href="https://layrjs.com/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-27th-november-2020-5hcl"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#20th-november-2020"&gt;
  &lt;/a&gt;
  20th November 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-26"&gt;
  &lt;/a&gt;
  Week 26
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#the-book-of-secret-knowledge"&gt;
  &lt;/a&gt;
  The Book of Secret Knowledge
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KCiG15pz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ul6iru30dlstg6esl6c3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KCiG15pz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ul6iru30dlstg6esl6c3.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A collection of inspiring lists, manuals, cheatsheets, blogs, hacks, one-liners, cli/web tools and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/trimstray/the-book-of-secret-knowledge"&gt;GitHub&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-20th-november-2020-3h1o"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#13th-november-2020"&gt;
  &lt;/a&gt;
  13th November 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-25"&gt;
  &lt;/a&gt;
  Week 25
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#alephjs"&gt;
  &lt;/a&gt;
  Aleph.js
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hv-erPpE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qn8jl97p3ixhlg439e2g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hv-erPpE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qn8jl97p3ixhlg439e2g.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The React Framework in Deno.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/alephjs/aleph.js"&gt;GitHub&lt;/a&gt; | &lt;a href="https://alephjs.org/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-13th-november-2020-ee5"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#6th-november-2020"&gt;
  &lt;/a&gt;
  6th November 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-24"&gt;
  &lt;/a&gt;
  Week 24
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#lando"&gt;
  &lt;/a&gt;
  Lando
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SLEcd8_0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckn34aiexgosku98u4zx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SLEcd8_0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckn34aiexgosku98u4zx.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A local development and DevOps tool for all your projects that is fast, easy, powerful and liberating&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/lando/lando"&gt;GitHub&lt;/a&gt; | &lt;a href="https://lando.dev/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-6th-november-2020-4hlc"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#30th-october-2020"&gt;
  &lt;/a&gt;
  30th October 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-23"&gt;
  &lt;/a&gt;
  Week 23
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#vanilla-todo"&gt;
  &lt;/a&gt;
  Vanilla Todo
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n1VFIrKS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yx9oq0upjop2t5h8w63d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n1VFIrKS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yx9oq0upjop2t5h8w63d.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A case study on viable techniques for vanilla web development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/morris/vanilla-todo"&gt;GitHub&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-30th-october-2020-ida"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#23rd-october-2020"&gt;
  &lt;/a&gt;
  23rd October 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-22"&gt;
  &lt;/a&gt;
  Week 22
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#admin-bro"&gt;
  &lt;/a&gt;
  Admin Bro
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FuRriYLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsrpkx2370869pu24exs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FuRriYLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsrpkx2370869pu24exs.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AdminBro is An automatic admin interface which can be plugged into your application. You, as a developer, provide database models (like posts, comments, stores, products or whatever else your application uses), and AdminBro generates UI which allows you (or other trusted users) to manage content.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/SoftwareBrothers/admin-bro"&gt;GitHub&lt;/a&gt; | &lt;a href="http://adminbro.com/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-23rd-october-2020-1dnk"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#16th-october-2020"&gt;
  &lt;/a&gt;
  16th October 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-21"&gt;
  &lt;/a&gt;
  Week 21
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#pretrained-tensorflowjs-models"&gt;
  &lt;/a&gt;
  Pre-trained TensorFlow.js models
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b0IuODKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ctqk2gjhkc9awe8mj86.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b0IuODKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ctqk2gjhkc9awe8mj86.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This repository hosts a set of pre-trained models that have been ported to TensorFlow.js. The models are hosted on NPM and unpkg so they can be used in any project out of the box. They can be used directly or used in a transfer learning setting with TensorFlow.js.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tensorflow/tfjs-models"&gt;GitHub&lt;/a&gt; | &lt;a href="https://js.tensorflow.org/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-16th-october-2020-e63"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#9th-october-2020"&gt;
  &lt;/a&gt;
  9th October 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-20"&gt;
  &lt;/a&gt;
  Week 20
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#watercss"&gt;
  &lt;/a&gt;
  Water.css
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Wm7QzUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ri3oy21isguiiurdfa4h.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Wm7QzUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ri3oy21isguiiurdfa4h.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A drop-in collection of CSS styles to make simple websites just a little nicer&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kognise/water.css"&gt;GitHub&lt;/a&gt; | &lt;a href="https://watercss.kognise.dev/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-9th-october-2020-247g"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#2nd-october-2020"&gt;
  &lt;/a&gt;
  2nd October 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-19"&gt;
  &lt;/a&gt;
  Week 19
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#revealjs"&gt;
  &lt;/a&gt;
  reveal.js
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fnA2d2P9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n87nlofuu8o7gi0jzgee.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fnA2d2P9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n87nlofuu8o7gi0jzgee.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;reveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create fully featured and beautiful presentations for free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/hakimel/reveal.js"&gt;GitHub&lt;/a&gt; | &lt;a href="https://revealjs.com/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-25th-september-2020-nd0"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#25th-september-2020"&gt;
  &lt;/a&gt;
  25th September 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-18"&gt;
  &lt;/a&gt;
  Week 18
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#front-end-interview-handbook"&gt;
  &lt;/a&gt;
  Front End Interview Handbook
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8MnFIDV9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0b97oq7wmz7q7fafneua.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8MnFIDV9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0b97oq7wmz7q7fafneua.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While there are some existing resources to help front end developers in preparing for interviews, they aren't as abundant as materials for a software engineer interview. Among the existing resources, probably the most helpful question bank would be Front-end Developer Interview Questions. Unfortunately, I couldn't find many complete and satisfactory answers to these questions online, hence here is my attempt at answering them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/yangshun/front-end-interview-handbook"&gt;GitHub&lt;/a&gt; | &lt;a href="https://yangshun.github.io/front-end-interview-handbook/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-2nd-october-2020-3jm3"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#18th-september-2020"&gt;
  &lt;/a&gt;
  18th September 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-17"&gt;
  &lt;/a&gt;
  Week 17
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#hovercss"&gt;
  &lt;/a&gt;
  Hover.css
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yLT4JbMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8cucdf2txewbzavei475.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yLT4JbMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8cucdf2txewbzavei475.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A collection of CSS3 powered hover effects to be applied to links, buttons, logos, SVG, featured images and so on. Easily apply to your own elements, modify or just use for inspiration. Available in CSS, Sass, and LESS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/IanLunn/Hover"&gt;GitHub&lt;/a&gt; | &lt;a href="http://ianlunn.github.io/Hover/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-18th-september-2020-jfj"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#11th-september-2020"&gt;
  &lt;/a&gt;
  11th September 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-16"&gt;
  &lt;/a&gt;
  Week 16
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#boilerplate-app-for-saas-product"&gt;
  &lt;/a&gt;
  Boilerplate App for SaaS Product
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kHs6ks-O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxkfewxtydqoydkinwey.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kHs6ks-O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxkfewxtydqoydkinwey.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open source web app that saves you weeks of work when building your own SaaS product.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/async-labs/saas"&gt;GitHub&lt;/a&gt; | &lt;a href="https://saas-app.async-await.com/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-11th-september-2020-42fd"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#4th-september-2020"&gt;
  &lt;/a&gt;
  4th September 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-15"&gt;
  &lt;/a&gt;
  Week 15
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#project-guidelines"&gt;
  &lt;/a&gt;
  Project Guidelines
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_IVXCSkf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ykltagyj6pwf0akn5dbj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_IVXCSkf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ykltagyj6pwf0akn5dbj.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While developing a new project is like rolling on a green field for you, maintaining it is a potential dark twisted nightmare for someone else. Here's a list of guidelines we've found, written and gathered that (we think) works really well with most JavaScript projects&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines"&gt;GitHub&lt;/a&gt; |  &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-4th-september-2020-bi0"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#28th-august-2020"&gt;
  &lt;/a&gt;
  28th August 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-14"&gt;
  &lt;/a&gt;
  Week 14
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#carbon-design-system"&gt;
  &lt;/a&gt;
  Carbon Design System
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4jq3jx8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owxtllqbpdhlen5g3w63.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4jq3jx8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owxtllqbpdhlen5g3w63.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Carbon is an open-source design system built by IBM. With the IBM Design Language as its foundation, the system consists of working code, design tools and resources, human interface guidelines, and a vibrant community of contributors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/carbon-design-system/carbon"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.carbondesignsystem.com/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-28th-august-2020-55e7"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#21st-august-2020"&gt;
  &lt;/a&gt;
  21st August 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-13"&gt;
  &lt;/a&gt;
  Week 13
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#design-resources-for-developers"&gt;
  &lt;/a&gt;
  Design resources for developers
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--egWoNjlN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ug5wrl5ie2721ifwoly.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--egWoNjlN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ug5wrl5ie2721ifwoly.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Curated list of design and UI resources from stock photos, web templates, CSS frameworks, UI libraries, tools and much more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bradtraversy/design-resources-for-developers"&gt;GitHub&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-21st-august-2020-ol7"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#14th-august-2020"&gt;
  &lt;/a&gt;
  14th August 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-12"&gt;
  &lt;/a&gt;
  Week 12
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#tailblocks"&gt;
  &lt;/a&gt;
  Tailblocks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c5iQiuCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtbdmc2lgxq3z17u285r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c5iQiuCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtbdmc2lgxq3z17u285r.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ready-to-use Tailwind CSS blocks,15 different categories (ecommerce, blog, pricing and more...), responsive, dark/light mode and color variations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mertJF/tailblocks"&gt;GitHub&lt;/a&gt; | &lt;a href="https://tailblocks.cc/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-14th-august-2020-3ol6"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#7th-august-2020"&gt;
  &lt;/a&gt;
  7th August 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-11"&gt;
  &lt;/a&gt;
  Week 11
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#ink"&gt;
  &lt;/a&gt;
  Ink
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UoFemp_L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj95dc3s3hl3j6cihhk0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UoFemp_L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj95dc3s3hl3j6cihhk0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ink provides the same component-based UI building experience that React offers in the browser, but for command-line apps. It uses Yoga to build Flexbox layouts in the terminal, so most CSS-like props are available in Ink as well. If you are already familiar with React, you already know Ink.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/vadimdemedes/ink"&gt;GitHub&lt;/a&gt; | &lt;a href="http://term.ink/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-7th-august-2020-3j6d"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#31st-july-2020"&gt;
  &lt;/a&gt;
  31st July 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-10"&gt;
  &lt;/a&gt;
  Week 10
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#docsify"&gt;
  &lt;/a&gt;
  Docsify
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xfc2H1es--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lyueoe87jxd4k31em7va.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xfc2H1es--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lyueoe87jxd4k31em7va.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A magical documentation site generator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/docsifyjs/docsify"&gt;GitHub&lt;/a&gt; | &lt;a href="https://docsify.js.org/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-31st-july-2020-4dd6"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#24th-july-2020"&gt;
  &lt;/a&gt;
  24th July 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-9"&gt;
  &lt;/a&gt;
  Week 9
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#adobe-react-spectrum"&gt;
  &lt;/a&gt;
  Adobe - React Spectrum
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0gbrQzsy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzb40az7cu0h7qosnfr1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0gbrQzsy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzb40az7cu0h7qosnfr1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A collection of libraries and tools that help you build adaptive, accessible, and robust user experiences.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/adobe/react-spectrum"&gt;GitHub&lt;/a&gt; | &lt;a href="https://react-spectrum.adobe.com/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-24th-july-2020-pd5"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;The first newsletter was sent on week 9 so I do not have data for the most popular links prior to this. &lt;/p&gt;

&lt;p&gt;So for the first 8 issues I have picked some of my favourites.&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#17th-july-2020"&gt;
  &lt;/a&gt;
  17th July 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-8"&gt;
  &lt;/a&gt;
  Week 8
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#vite"&gt;
  &lt;/a&gt;
  Vite
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X47CmOAg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anrh4kwbpp3i3wqestcb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X47CmOAg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anrh4kwbpp3i3wqestcb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vite is an opinionated web dev build tool that serves your code via native ES Module imports during dev and bundles it with Rollup for production.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/vitejs/vite"&gt;GitHub&lt;/a&gt; | &lt;a href="http://vitejs.dev/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-17th-july-2020-17ka"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#10th-july-2020"&gt;
  &lt;/a&gt;
  10th July 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-7"&gt;
  &lt;/a&gt;
  Week 7
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#redwood"&gt;
  &lt;/a&gt;
  Redwood
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XIZJNz1e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bu1l6gnwxmjhs9jjo1iw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XIZJNz1e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bu1l6gnwxmjhs9jjo1iw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Redwood is an opinionated, full-stack, serverless web application framework that will allow you to build and deploy JAMstack applications with ease.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/redwoodjs/redwood"&gt;GitHub&lt;/a&gt; | &lt;a href="https://redwoodjs.com/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-10th-july-2020-25fg"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#3rd-july-2020"&gt;
  &lt;/a&gt;
  3rd July 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-6"&gt;
  &lt;/a&gt;
  Week 6
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#formily"&gt;
  &lt;/a&gt;
  Formily
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--56qQQI5L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlnnmhcarv4wdg2u6d6d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--56qQQI5L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlnnmhcarv4wdg2u6d6d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alibaba Group Unified Form Solution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/alibaba/formily"&gt;GitHub&lt;/a&gt; | &lt;a href="https://v2.formilyjs.org/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-3rd-july-2020-2agi"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#26th-june-2020"&gt;
  &lt;/a&gt;
  26th June 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-5"&gt;
  &lt;/a&gt;
  Week 5
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#react-query"&gt;
  &lt;/a&gt;
  React Query
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OZ04jYvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6c5gnpjnq922j1fh3v9i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OZ04jYvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6c5gnpjnq922j1fh3v9i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hooks for fetching, caching and updating asynchronous data in React&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tannerlinsley/react-query"&gt;GitHub&lt;/a&gt; | &lt;a href="https://react-query.tanstack.com/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-26th-june-2020-380m"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#19th-june-2020"&gt;
  &lt;/a&gt;
  19th June 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-4"&gt;
  &lt;/a&gt;
  Week 4
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#chakra"&gt;
  &lt;/a&gt;
  Chakra
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Av65uaFM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yg50d4oj77p6xwmt43fi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Av65uaFM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yg50d4oj77p6xwmt43fi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Build Accessible React Apps with Speed&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/chakra-ui/chakra-ui"&gt;GitHub&lt;/a&gt; | &lt;a href="https://chakra-ui.com/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-19th-june-2020-381d"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#12th-june-2020"&gt;
  &lt;/a&gt;
  12th June 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-3"&gt;
  &lt;/a&gt;
  Week 3
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#the-algorithms-javascript"&gt;
  &lt;/a&gt;
  The Algorithms - JavaScript
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V_nSieZi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kirwodvtcw2d6hfse12d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V_nSieZi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kirwodvtcw2d6hfse12d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A repository for All algorithms implemented in Javascript (for educational purposes only)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/TheAlgorithms/Javascript"&gt;GitHub&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-12th-june-2020-kkl"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#5th-june-2020"&gt;
  &lt;/a&gt;
  5th June 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-2"&gt;
  &lt;/a&gt;
  Week 2
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#snowpack"&gt;
  &lt;/a&gt;
  Snowpack
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UbYsb-lD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fb0ioelo7gvc9v6o1iak.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UbYsb-lD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fb0ioelo7gvc9v6o1iak.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A faster build system for the modern web.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/pikapkg/snowpack"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.snowpack.dev/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-5th-june-2020-102h"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;h6&gt;
  &lt;a href="#30th-may-2020"&gt;
  &lt;/a&gt;
  30th May 2020
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#week-1"&gt;
  &lt;/a&gt;
  Week 1
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#esbuild"&gt;
  &lt;/a&gt;
  esbuild
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2c5vo94V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bws07i4givn2243huhs2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2c5vo94V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bws07i4givn2243huhs2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An extremely fast JavaScript bundler and minifier&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/evanw/esbuild"&gt;GitHub&lt;/a&gt; | &lt;a href="https://esbuild.github.io/"&gt;Website&lt;/a&gt; | &lt;a href="https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-30th-may-2020-1gfg"&gt;View Issue&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;I hope you have enjoyed this year in review and hopefully you have discovered some new projects along the way.&lt;/p&gt;

&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Social Media App Using MERN Stack</title>
      <author>Safak</author>
      <pubDate>Tue, 25 May 2021 19:58:21 +0000</pubDate>
      <link>https://dev.to/safak/social-media-app-using-mern-stack-4ic6</link>
      <guid>https://dev.to/safak/social-media-app-using-mern-stack-4ic6</guid>
      <description>&lt;p&gt;If you want to be a full-stack web developer and stuck at just beginner projects, here is the chance to improve your skills and create something real. I decided to share my 9 hours tutorial series on YouTube for free.&lt;/p&gt;

&lt;p&gt;We are going to create a social media application from scratch. And this project is not going to include just a basic couple of methods and an unpleasant design, it's going to include a complete web API, impressive React components, and chat functionality.&lt;/p&gt;

&lt;p&gt;Let's dive into it!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-nodejs-rest-api"&gt;
  &lt;/a&gt;
  Creating Node.js Rest API
&lt;/h1&gt;

&lt;p&gt;In this section, we are going to create an Express server and the MongoDB connection. You are going to learn how to create Models and Routes. And after the section, you will be able to create your own web API, login and register operations, and CRUD for users and posts.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ldGl6L4Vktk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#designing-react-components"&gt;
  &lt;/a&gt;
  Designing React Components
&lt;/h1&gt;

&lt;p&gt;In this section, we are going to design Facebook like website using reusable React components and React Hooks.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/zM93yZ_8SvE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-mern-stack-social-media-app"&gt;
  &lt;/a&gt;
  Creating MERN Stack Social Media App
&lt;/h1&gt;

&lt;p&gt;In this 3rd section, we are going to combine our Rest API and React UI design. You are going to learn real-world usage of a MERN application.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pFHyZvVxce0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-chat-app-using-socketio"&gt;
  &lt;/a&gt;
  React Chat App Using Socket.io
&lt;/h1&gt;

&lt;p&gt;In the final section, we are going to design a React messenger component and some additional routes in Node.js to get and post chat messages. And finally you are going to learn how to use Socket.io to send instant messages and notifications.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HggSXt1Hzfk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope it was useful. If you want to learn more about web development and practice with real-world projects, you can check my channel out.&lt;/p&gt;

&lt;p&gt;🔥 &lt;a href="https://www.youtube.com/c/lamadev"&gt;Lama Dev Youtube Channel&lt;/a&gt;&lt;br&gt;
⚡️ &lt;a href="https://www.facebook.com/lamaWebDev"&gt;Lama Dev Facebook&lt;/a&gt;&lt;br&gt;
👾 &lt;a href="https://github.com/safak/youtube/tree/mern-social-app"&gt;Source Code&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>node</category>
      <category>mern</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Shopping Cart JavaScript 😍</title>
      <author>Said Mounaim</author>
      <pubDate>Tue, 25 May 2021 19:46:48 +0000</pubDate>
      <link>https://dev.to/said_mounaim/shopping-cart-javascript-11k1</link>
      <guid>https://dev.to/said_mounaim/shopping-cart-javascript-11k1</guid>
      <description>&lt;p&gt;Shopping Cart Using HTML5, CSS3 &amp;amp; JS 😎&lt;/p&gt;

&lt;p&gt;Demo : &lt;a href="https://shopping-cartjs.netlify.app/"&gt;https://shopping-cartjs.netlify.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code : &lt;a href="https://github.com/saidMounaim/100DaysOfCode/tree/main/Day17"&gt;https://github.com/saidMounaim/100DaysOfCode/tree/main/Day17&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My #100DaysOfCode Challenge :&lt;br&gt;
&lt;a href="https://github.com/saidMounaim/100DaysOfCode/"&gt;https://github.com/saidMounaim/100DaysOfCode/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Creating a Markdown blog with Notion, Tailwind &amp; Next.js</title>
      <author>Thomas Ledoux</author>
      <pubDate>Tue, 25 May 2021 19:25:58 +0000</pubDate>
      <link>https://dev.to/thomasledoux1/creating-a-markdown-blog-with-notion-tailwind-next-js-29i2</link>
      <guid>https://dev.to/thomasledoux1/creating-a-markdown-blog-with-notion-tailwind-next-js-29i2</guid>
      <description>&lt;p&gt;Last week Notion announced that they are opening up their &lt;a href="https://developers.notion.com"&gt;API&lt;/a&gt; to the public, after being in closed beta for a while.&lt;br&gt;
For me that was great news, since I'm a big Notion fan and I was looking for a way to easily write my blogs in Markdown in a central place.&lt;/p&gt;

&lt;p&gt;So the backend was decided! For the frontend I went with my usual stack: Next.js and Tailwind.&lt;/p&gt;

&lt;p&gt;I started out by creating an integration, and then sharing my database with this integration. This is explained in detail &lt;a href="https://developers.notion.com/docs/getting-started"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once this part is set up, we can start querying our database in Notion!&lt;/p&gt;

&lt;p&gt;There are 3 different API routes I used to create my blog:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Query the database: &lt;a href="https://developers.notion.com/reference/post-database-query"&gt;https://developers.notion.com/reference/post-database-query&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Retrieving a page: &lt;a href="https://developers.notion.com/reference/get-page"&gt;https://developers.notion.com/reference/get-page&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Retrieving the blocks and their children: &lt;a href="https://developers.notion.com/reference/get-block-children"&gt;https://developers.notion.com/reference/get-block-children&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my &lt;code&gt;pages/index.jsx&lt;/code&gt; I query the database to get back the pages in my database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// fetcher function&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fetcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Bearer &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NOTION_API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// getBlogs function&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getBlogs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;`https://api.notion.com/v1/databases/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NOTION_DATABASE&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/query`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// in pages/index.js&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getStaticProps&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blogs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getBlogs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;blogs&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So now we have passed the blogs to the props of the home page.&lt;br&gt;
In the functional component I render the blogs, wrapped in a &lt;a href="https://nextjs.org/docs/api-reference/next/link"&gt;Link&lt;/a&gt; for internal routing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;blogs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blog&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="nx"&gt;passHref&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`/blog/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shadow-md hover:shadow-xl p-4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;plain_text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;last_edited_time&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toLocaleDateString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/article&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Link&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have the blog previews being shown on the homepage, we can now work on the actual blog page.&lt;br&gt;
As you can see in the &lt;code&gt;href&lt;/code&gt; of the Link, we will use &lt;code&gt;/blog/[id]&lt;/code&gt; as the URL. &lt;br&gt;
So in the &lt;code&gt;/pages&lt;/code&gt; folder we create a folder &lt;code&gt;/blog&lt;/code&gt; and create a file &lt;code&gt;[id].jsx&lt;/code&gt; in there.&lt;/p&gt;

&lt;p&gt;On the blog page, we need to fetch the pages again to generate our URL's, fetch the actual page and fetch the blocks out of which the page consists.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getStaticPaths&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blogs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getBlogs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blogs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})),&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getStaticProps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blocks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getBlocks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getBlog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;blocks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;page&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have the blocks and page available in our component, we can render them to our page!&lt;br&gt;
I'm going to focus on the blocks, because the page is just used for the title. &lt;br&gt;
All the content comes from the blocks:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// components/block.jsx&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;block&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;paragraph&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mb-4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;heading_1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-2xl font-bold md:text-4xl mb-4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;heading_2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-xl font-bold md:text-2xl mb-4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;heading_3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-lg font-bold md:text-xl mb-4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bulleted_list_item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;numbered_list_item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mb-4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bg-red-600 px-4 py-2 mb-4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Not&lt;/span&gt; &lt;span class="nx"&gt;supported&lt;/span&gt; &lt;span class="nx"&gt;yet&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;Notion&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// components/text.jsx&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;classNames&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;classnames&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;v4&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;uuid&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;uuid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;colorMapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-current&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-yellow-500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-gray-500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;brown&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-brown-500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;orange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-orange-500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;green&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-green-500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-blue-500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-purple-500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;red&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-red-500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;annotations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;italic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;strikethrough&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;underline&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="nx"&gt;text&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;
        &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;classNames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colorMapper&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;break-words&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;font-bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;italic&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;italic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;line-through&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;strikethrough&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;underline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;underline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bg-gray-300 px-2 py-1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;
        &lt;span class="p"&gt;})}&lt;/span&gt;
        &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;underline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;
        &lt;span class="p"&gt;)}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="c1"&gt;// pages/blog/[id]&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;blocks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the classes provided by Tailwind, we can easily map the Markdown to a fully styled page. &lt;/p&gt;

&lt;p&gt;You can check the demo at &lt;a href="https://notion-blog-ruby-kappa.vercel.app/"&gt;https://notion-blog-ruby-kappa.vercel.app&lt;/a&gt;.&lt;br&gt;
Source code can be found on &lt;a href="https://github.com/thomasledoux1/notion-blog"&gt;https://github.com/thomasledoux1/notion-blog&lt;/a&gt;.&lt;br&gt;
Some of the code was inspired by &lt;a href="https://github.com/samuelkraft/notion-blog-nextjs/"&gt;https://github.com/samuelkraft/notion-blog-nextjs&lt;/a&gt;, so shoutout to Samuel too.&lt;/p&gt;

&lt;p&gt;Thanks for reading, I hope you learned something new today!&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>nextjs</category>
      <category>markdown</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Learn React JS - Creating a React App- Part 2 (Series)</title>
      <author>Yuvaraj</author>
      <pubDate>Tue, 25 May 2021 19:14:47 +0000</pubDate>
      <link>https://dev.to/yuvgeek/learn-react-js-creating-a-react-app-part-2-series-2maa</link>
      <guid>https://dev.to/yuvgeek/learn-react-js-creating-a-react-app-part-2-series-2maa</guid>
      <description>&lt;p&gt;Hello everyone 👋,&lt;/p&gt;

&lt;p&gt;In the previous article, we learned about the basic concepts of React which covered JSX, React Element, Rendering the element, etc.&lt;/p&gt;

&lt;p&gt;In the 2nd part of the &lt;strong&gt;Learn React JS&lt;/strong&gt; series, we will cover on Creating a React App with &lt;code&gt;Create React App&lt;/code&gt; tool.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-react-app-with-create-react-app"&gt;
  &lt;/a&gt;
  Creating a React App with Create React App
&lt;/h2&gt;

&lt;p&gt;In the 1st part of this series, we have created the React App by adding React &amp;amp; React DOM CDN URL directly in the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. The reason to use &lt;strong&gt;Create React App&lt;/strong&gt; tool over the above method is, it helps with tasks like&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Scaling to many files and components.&lt;/li&gt;
&lt;li&gt;Using third-party libraries from npm.&lt;/li&gt;
&lt;li&gt;Detecting common mistakes early.&lt;/li&gt;
&lt;li&gt;Live-editing CSS and JS in development.&lt;/li&gt;
&lt;li&gt;Optimizing the output for production.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Without further delay, let's create an app with Create React App tool.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run the below command in terminal to install the Create React App package.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -g create-react-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;The below command creates a new app. So, please make sure to update the 2nd argument. It is the application name.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;create-react-app first-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Once its successfully created the app, you can able see the below screen. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B9hk6nx6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/3h0XcdR/Screenshot-2021-05-26-at-12-07-04-AM.png" alt="New App"&gt;
&lt;/li&gt;
&lt;li&gt;Then, go to the project folder and run the app.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd first-app
yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;The command &lt;code&gt;yarn start&lt;/code&gt; will automatically start a server and listen it on port &lt;code&gt;3000&lt;/code&gt;. This will be the first screen you will see in &lt;code&gt;http://localhost:3000/&lt;/code&gt;.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dxmwl7Ks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/tHVVNBD/Screenshot-2021-05-26-at-12-13-19-AM.png" alt="Initial output"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To modify the content, open &lt;code&gt;App.js&lt;/code&gt; file under &lt;code&gt;src/&lt;/code&gt; folder and start updating the code inside the &lt;code&gt;return&lt;/code&gt; block. I've updated the code to keep only &lt;code&gt;h1&lt;/code&gt; tag to show as First app. Run the file and automatically the new changes will be reflected in the UI.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Original Content&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;logo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./logo.svg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App-header"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App-logo"&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"logo"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          Edit &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;src/App.js&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; and save to reload.
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;
          &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App-link"&lt;/span&gt;
          &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"https://reactjs.org"&lt;/span&gt;
          &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;
          &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"noopener noreferrer"&lt;/span&gt;
        &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          Learn React
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Modified Content&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;First App&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The output with modified content:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ADALuin---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/vx7Fk9T/Screenshot-2021-05-26-at-12-30-02-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ADALuin---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/vx7Fk9T/Screenshot-2021-05-26-at-12-30-02-AM.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's my github repo where you can find the files in the &lt;strong&gt;part-2&lt;/strong&gt; branch. We will keep updating this repo for every part. So, please bookmark it.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/yuvgeek"&gt;
        yuvgeek
      &lt;/a&gt; / &lt;a href="https://github.com/yuvgeek/learn-react"&gt;
        learn-react
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the next article, we will learn how to create components &amp;amp; the difference between Functional and Class Components.&lt;/p&gt;

&lt;p&gt;Thanks for reading the article!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>html</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to build a more accessible carousel or slider</title>
      <author>Jason Webb</author>
      <pubDate>Tue, 25 May 2021 19:09:26 +0000</pubDate>
      <link>https://dev.to/jasonwebb/how-to-build-a-more-accessible-carousel-or-slider-35lp</link>
      <guid>https://dev.to/jasonwebb/how-to-build-a-more-accessible-carousel-or-slider-35lp</guid>
      <description>&lt;p&gt;Carousels! They aren’t &lt;a href="https://erikrunyon.com/2013/01/carousel-interaction-stats/"&gt;effective&lt;/a&gt; or &lt;a href="https://www.nngroup.com/articles/auto-forwarding/"&gt;popular&lt;/a&gt; with real users, and yet they can be found all over the web. Often the result of competing internal priorities, carousels might be thought of as a manifestation of unclear business goals or unresolved internal conflicts.&lt;/p&gt;

&lt;p&gt;Regardless of why they are used, one thing is practically universal — &lt;strong&gt;carousels are almost always inaccessible to disabled users&lt;/strong&gt;. In this article we’ll look at common accessibility barriers found in carousels, talk through some good solutions, and then connect you with some practical resources you can start using &lt;strong&gt;right now&lt;/strong&gt; to make your carousels more accessible!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-carousel-anyway"&gt;
  &lt;/a&gt;
  What is a carousel, anyway?
&lt;/h2&gt;

&lt;p&gt;Those of us who design or build web experiences can usually spot a carousel from a mile (or kilometer) away. They are a region of the page that acts sort of like a slideshow, allowing users to move through a bunch of content that would normally not be possible to fit into that same amount of space.&lt;/p&gt;

&lt;p&gt;Carousels vary quite a bit in their use cases, features, and implementations, which can make it pretty difficult to come up with a precise, universal definition. What we can do, though, is list out the most common characteristics they can have, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;May have one or more slides visible at a time.&lt;/li&gt;
&lt;li&gt;May have slides that contain simple content (like a single image each) or complex content (like form fields and tooltips and all sorts of other complicated things).&lt;/li&gt;
&lt;li&gt;May have controls to navigate to previous and next slides.&lt;/li&gt;
&lt;li&gt;May have controls to jump to specific slides.&lt;/li&gt;
&lt;li&gt;May automatically advance through slides all on its own, at whatever pace the owners felt like using.&lt;/li&gt;
&lt;li&gt;May be oriented horizontally, vertically, or even in 3D!&lt;/li&gt;
&lt;li&gt;May wrap its slides around when a user tries to move past the end or beginning of the set (sometimes called “infinite scrolling”).&lt;/li&gt;
&lt;li&gt;May visually emphasize a single slide to show that it is “active”.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#common-accessibility-issues-in-carousels"&gt;
  &lt;/a&gt;
  Common accessibility issues in carousels
&lt;/h2&gt;

&lt;p&gt;Although carousels can vary quite a bit in their features and implementations, there are a few things that they consistently get wrong for accessibility. Through extensive live user testing with native screen reader and keyboard-only users at &lt;a href="https://accessible360.com/"&gt;Accessible360&lt;/a&gt; across hundreds of websites, we find the following issues over and over again:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Screen reader users very often don’t know when their virtual cursor enters or leaves a carousel, making it difficult for them to know that it even exists or how to get out of it.&lt;/li&gt;
&lt;li&gt;Nearly every carousel is built differently (even if they look the same), so screen reader users can have a tough time building up a consistent mental model that makes carousels easier to navigate later on.&lt;/li&gt;
&lt;li&gt;Many carousels do not hide their non-visible slides from all users, forcing keyboard and screen reader users to go through every single piece of content in them, even though mouse users don’t have to.&lt;/li&gt;
&lt;li&gt;Semantic &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; tags are often not used for actionable elements like the previous, next, and slide dot controls, so keyboard and screen reader users often aren’t able to reach, understand, and activate them.&lt;/li&gt;
&lt;li&gt;Inaccessible icons are often used, usually without human-readable accessible names, which can make controls unusable for screen reader and voice input users.&lt;/li&gt;
&lt;li&gt;If the carousel automatically advances, keyboard and screen reader users can be constantly tossed around in the DOM, unable to make sense of the content that keeps shifting in front of them. Auto-rotation can also be very distracting and disruptive for people with cognitive conditions that affect their attention or memory.&lt;/li&gt;
&lt;li&gt;Sometimes carousels come with hidden keyboard commands, like using the arrow keys to move between slides. But since carousel implementations are not really standardized, these commands will really just confuse real keyboard users, since there is really no reason to expect them to be there.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#key-elements-of-an-accessible-carousel"&gt;
  &lt;/a&gt;
  Key elements of an accessible carousel
&lt;/h2&gt;

&lt;p&gt;At the moment, there is nothing in the &lt;a href="https://html.spec.whatwg.org/"&gt;HTML specification&lt;/a&gt; that really resembles a carousel, so defining how an accessible carousel “should” be built is tricky. The W3C’s WAI-ARIA Working Group has provided a &lt;a href="https://www.w3.org/TR/wai-aria-practices-1.1/#carousel"&gt;design pattern in their WAI-ARIA Authoring Practices 1.1 guide&lt;/a&gt; with some good guidance, but the group has also published a &lt;a href="https://www.w3.org/WAI/tutorials/carousels/"&gt;tutorial with some different guidance&lt;/a&gt;, which tends to be a bit confusing if you aren’t deeply involved in the accessibility scene. (Hopefully this’ll improve, though! See issues &lt;a href="https://github.com/w3c/wai-tutorials/issues/594"&gt;#594&lt;/a&gt; and &lt;a href="https://github.com/w3c/aria-practices/issues/1167"&gt;#1167&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;At &lt;a href="https://accessible360.com/"&gt;Accessible360&lt;/a&gt;, our team of expert accessibility auditors, which includes native screen reader, keyboard, and other AT users, has been carefully crafting and iteratively refining a practical approach to carousels that we use to guide our clients towards WCAG conformance in a clear, consistent way. The approach that we’ve developed has a lot in common with this example from the WAI-ARIA Authoring Practices design pattern, and uses the following criteria:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; tag (or &lt;code&gt;role="region"&lt;/code&gt;) with a generic &lt;code&gt;aria-label&lt;/code&gt; (like &lt;code&gt;aria-label="hero carousel"&lt;/code&gt;) for the wrapper element so screen reader users know exactly where the carousel starts and ends in the DOM.&lt;/li&gt;
&lt;li&gt;Add simple instructions for screen reader users to explain how the carousel is set up and how it works. This isn’t required for WCAG conformance, but until carousels become more standardized, instructions can help screen reader users build up a useful mental model.&lt;/li&gt;
&lt;li&gt;When a slide is not visible on the screen, it should be hidden from all users either using CSS (like &lt;code&gt;display: none&lt;/code&gt; or &lt;code&gt;visibility: hidden&lt;/code&gt;), the HTML &lt;code&gt;hidden&lt;/code&gt; attribute, or by adding &lt;code&gt;aria-hidden="true"&lt;/code&gt; to the slide’s wrapper and &lt;code&gt;tabindex="-1"&lt;/code&gt; to all the focusable elements inside it. FYI — that last technique is the most animation-friendly.&lt;/li&gt;
&lt;li&gt;Avoid using list markup for the slides. Screen readers announce how many list items are in each list, but ignores list items that are hidden. If you are truly hiding the slides that aren’t visible (see previous point), then the number of list items announced to a user won’t match the true number of slides. Also, most screen readers don’t tell users which list item they are currently on, or when they enter or exit one (the next point will cover that!), so this markup isn’t especially useful in this use case.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;role="group"&lt;/code&gt; and a numbered &lt;code&gt;aria-label&lt;/code&gt; (like &lt;code&gt;aria-label="slide 1 of 8"&lt;/code&gt;) on the wrapper of each individual slide so screen reader users can easily tell where each slide begins and ends and where they are in the set.&lt;/li&gt;
&lt;li&gt;Use semantic button elements with clear accessible names for all interactive controls, like the previous/next buttons and slide navigation dots.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;aria-current="true"&lt;/code&gt; on the button of the slide dot corresponding to the currently-active slide so that screen reader users are informed.&lt;/li&gt;
&lt;li&gt;Don’t use custom keyboard controls, like arrow keys for navigation. These just confuse real keyboard users, and are probably going to be missed entirely by screen reader users since they already use their arrow keys for navigating with their virtual cursor.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Disable autoplay&lt;/strong&gt; — &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide.html"&gt;nobody actually likes it&lt;/a&gt;, and for some users this can be an absolute blocker! If you’re not in a position to say “no”, then you can at least minimize the harm by adding a pause or stop button to meet &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/pause-stop-hide.html"&gt;WCAG 2.2.2&lt;/a&gt;. But keep in mind, just because something conforms to WCAG doesn’t mean people will actually enjoy using it!&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#try-it-out-for-yourself"&gt;
  &lt;/a&gt;
  Try it out for yourself!
&lt;/h2&gt;

&lt;p&gt;If you’re like me, nothing beats a live code sample to help really understand a complex component like this. So let’s take a look at what a “good” and “bad” carousel could actually look like, and do a little testing to see how each problem can resolved with the solutions above.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bad-carousel"&gt;
  &lt;/a&gt;
  ❌ Bad carousel
&lt;/h3&gt;

&lt;p&gt;In this carousel, Murphy’s Law has taken over! Using the criteria above, see if you can spot all the things that are wrong with this. Be sure to use your keyboard and a screen reader, like NVDA or VoiceOver! Here are a few prompts to guide you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Can you tell when you enter the carousel and when you leave it using a screen reader?&lt;/li&gt;
&lt;li&gt;Can you reach all the controls with your keyboard?&lt;/li&gt;
&lt;li&gt;Are you able to figure out what each control does based on what your screen reader says?&lt;/li&gt;
&lt;li&gt;Can you reach content in the slides that are supposed to be hidden?&lt;/li&gt;
&lt;li&gt;Can you tell which slide you are on using only your screen reader?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/A360/embed/f6d7fad063e701b87aee6c5ed5335581?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#good-carousel"&gt;
  &lt;/a&gt;
  ✔️ Good carousel
&lt;/h3&gt;

&lt;p&gt;Now let’s take a look at a carousel that looks and feels exactly the same, but uses more accessible code. Compare it to the “bad carousel” example above, and be sure to also use your keyboard and a screen reader to experience it in different ways!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/A360/embed/04ef4c06349f32d876b9c2bb639bbbbb?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#accessible-boilerplates-for-common-carousel-packages"&gt;
  &lt;/a&gt;
  Accessible boilerplates for common carousel packages
&lt;/h2&gt;

&lt;p&gt;Knowing what makes a carousel “good” or “bad” for accessibility is all well and good, but actually putting that knowledge into practice in the real world might be easier said than done!&lt;/p&gt;

&lt;p&gt;In the real world, most of us devs use third-party, open source packages like Slick Slider or Flickity whenever we need a carousel, which adds another layer of complexity that makes it even harder to deliver accessible experiences. Unfortunately, many of these packages have either been &lt;a href="https://github.com/kenwheeler/slick/graphs/contributors"&gt;abandoned&lt;/a&gt; or have communities that are so large and ad-hoc that forward progress is a real challenge.&lt;/p&gt;

&lt;p&gt;Luckily, most of these packages provide APIs that you can use to make adjustments for accessibility at specific times, like adding ARIA attributes or using custom elements for controls. But since each API and package is a little bit different, it takes time to read through the developer docs and figure it all out.&lt;/p&gt;

&lt;p&gt;Wouldn’t it be great if there was a repository of ready-to-go code snippets for popular carousel packages that you could drop into your project to make them more accessible and save you some time? Well, we thought so too, which is why we’ve been building out a set of consistent code samples for common use cases that you can start using &lt;strong&gt;right now&lt;/strong&gt;! You can get these samples at either of the following places (the samples are the same!):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Github repo:
&lt;a href="https://github.com/Accessible360/accessible-carousel-boilerplates"&gt;https://github.com/Accessible360/accessible-carousel-boilerplates&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;CodePen collection:
&lt;a href="https://codepen.io/collection/narjZO"&gt;https://codepen.io/collection/narjZO&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There you’ll find realistic code snippets for hero banners, linked product cards, tiles with quick view popups, and even PDP product images with a carousel of thumbnails. So far, code snippets have been created for accessible-slick, Flickity, Owl Carousel 2, Slick Slider, and Splide. To request snippets for other packages or use cases, feel free to &lt;a href="https://github.com/Accessible360/accessible-carousel-boilerplates/issues"&gt;open an issue on the Github repo&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Here is just one of these examples, which uses &lt;a href="https://github.com/Accessible360/accessible-slick"&gt;accessible-slick&lt;/a&gt; (a highly accessible Slick Slider fork built by Accessible360) to implement a responsive product tile slider with “quick view” modal dialogs:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/A360/embed/KKaWyYV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;

&lt;p&gt;The research and code snippets in this article are provided by &lt;a href="https://accessible360.com/"&gt;Accessible360&lt;/a&gt;, whose expert accessibility engineers were invaluable with their insight, feedback, and time on this topic.&lt;/p&gt;

&lt;p&gt;If your company is looking for an accessibility partner to help bring your product to the next level through live user audits, monitoring, training, or remediation support, then get in touch today!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://accessible360.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uir2QuXk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqw128p3khcm6rd4kjzj.png" alt="Go to Accessible360.com"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sources"&gt;
  &lt;/a&gt;
  Sources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.nngroup.com/articles/auto-forwarding/"&gt;Auto-Forwarding Carousels and Accordions Annoy Users and Reduce Visibility&lt;/a&gt; by Jakob Nielsen via Nielsen Norman Group&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.nngroup.com/articles/designing-effective-carousels/"&gt;Carousel Usability: Designing an Effective UI for Websites with Content Overload&lt;/a&gt; by Kara Pernice via Nielsen Norman Group&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://shouldiuseacarousel.com/"&gt;ShouldIUseACarousel.com&lt;/a&gt; by Jared Smith&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.creativebloq.com/accessibility-expert-warns-stop-using-carousels-7133778"&gt;Accessibility expert warns: stop using carousels&lt;/a&gt;. Interview with Jared Smith by Creative Bloq&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.sitepoint.com/unbearable-accessible-slideshow/"&gt;The Unbearable Inaccessibility of Slideshows&lt;/a&gt; by Gian Wild&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://erikrunyon.com/2013/01/carousel-interaction-stats/"&gt;Carousel Interaction Stats&lt;/a&gt; by Erik Runyon&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>a11y</category>
      <category>webdev</category>
      <category>carousel</category>
      <category>html</category>
    </item>
  </channel>
</rss>
