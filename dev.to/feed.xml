<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>देसी  भाषा में एक्सट्रीम बिगिनर्स के लिए डॉकर :) Layman Docker ( translate in ur language too)</title>
      <author>manish srivastava</author>
      <pubDate>Thu, 03 Jun 2021 08:11:15 +0000</pubDate>
      <link>https://dev.to/manishfoodtechs/layman-docker-translate-in-ur-language-too-5g1</link>
      <guid>https://dev.to/manishfoodtechs/layman-docker-translate-in-ur-language-too-5g1</guid>
      <description>&lt;h6&gt;
  &lt;a href="#-%E0%A4%9B%E0%A5%8B%E0%A4%9F%E0%A4%BE-%E0%A4%B8%E0%A4%BE-%E0%A4%85%E0%A4%A8%E0%A5%81%E0%A4%B0%E0%A5%8B%E0%A4%A7-%E0%A4%85%E0%A4%A8%E0%A5%81%E0%A4%B0%E0%A5%8B%E0%A4%A7"&gt;
  &lt;/a&gt;
  *** छोटा सा अनुरोध अनुरोध:***
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#%E0%A4%AE%E0%A5%87%E0%A4%B0%E0%A5%80-%E0%A4%9F%E0%A5%80%E0%A4%AE-%E0%A4%B6%E0%A4%BE%E0%A4%AE%E0%A4%BF%E0%A4%B2-%E0%A4%B9%E0%A5%8B%E0%A4%A8%E0%A5%87-%E0%A4%95%E0%A5%87-%E0%A4%B2%E0%A4%BF%E0%A4%8F-%E0%A4%AB%E0%A5%89%E0%A4%B0%E0%A5%8D%E0%A4%AE-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%B6%E0%A4%BE%E0%A4%AE%E0%A4%BF%E0%A4%B2-%E0%A4%B9%E0%A5%8B%E0%A4%A8%E0%A5%87-%E0%A4%95%E0%A5%87-%E0%A4%B2%E0%A4%BF%E0%A4%8F-%E0%A4%86%E0%A4%AA%E0%A4%95%E0%A4%BE-%E0%A4%B8%E0%A5%8D%E0%A4%B5%E0%A4%BE%E0%A4%97%E0%A4%A4-%E0%A4%B9%E0%A5%88"&gt;
  &lt;/a&gt;
  मेरी टीम &lt;a href="https://forms.gle/pSCALuEWHus3pg9F6"&gt;शामिल होने के लिए फॉर्म&lt;/a&gt; में शामिल होने के लिए आपका स्वागत है।
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#%E0%A4%87%E0%A4%B8%E0%A4%95%E0%A5%87-%E0%A4%85%E0%A4%B2%E0%A4%BE%E0%A4%B5%E0%A4%BE-%E0%A4%93%E0%A4%AA%E0%A4%A8-%E0%A4%B8%E0%A5%8B%E0%A4%B0%E0%A5%8D%E0%A4%B8-%E0%A4%87%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%B2%E0%A4%BF%E0%A4%9C%E0%A5%87%E0%A4%82%E0%A4%9F-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-osint-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%B6%E0%A4%BE%E0%A4%AE%E0%A4%BF%E0%A4%B2-%E0%A4%B9%E0%A5%8B%E0%A4%A8%E0%A5%87-%E0%A4%95%E0%A5%87-%E0%A4%B2%E0%A4%BF%E0%A4%8F-%E0%A4%86%E0%A4%AA%E0%A4%95%E0%A4%BE-%E0%A4%B8%E0%A5%8D%E0%A4%B5%E0%A4%BE%E0%A4%97%E0%A4%A4-%E0%A4%B9%E0%A5%88-%E0%A4%AF%E0%A4%A6%E0%A4%BF-%E0%A4%86%E0%A4%AA-%E0%A4%95%E0%A5%8B%E0%A4%B0%E0%A5%8B%E0%A4%A8%E0%A4%BE-%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A4%95%E0%A5%8B%E0%A4%AA-%E0%A4%9C%E0%A5%88%E0%A4%B8%E0%A5%80-%E0%A4%B5%E0%A4%BF%E0%A4%AD%E0%A4%BF%E0%A4%A8%E0%A5%8D%E0%A4%A8-%E0%A4%AC%E0%A5%80%E0%A4%AE%E0%A4%BE%E0%A4%B0%E0%A4%BF%E0%A4%AF%E0%A5%8B%E0%A4%82-%E0%A4%B8%E0%A5%87-%E0%A4%AE%E0%A4%A8%E0%A5%81%E0%A4%B7%E0%A5%8D%E0%A4%AF%E0%A5%8B%E0%A4%82-%E0%A4%95%E0%A5%80-%E0%A4%B0%E0%A4%95%E0%A5%8D%E0%A4%B7%E0%A4%BE-%E0%A4%95%E0%A5%87-%E0%A4%B8%E0%A4%82%E0%A4%AC%E0%A4%82%E0%A4%A7-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%93%E0%A4%AA%E0%A4%A8-%E0%A4%B8%E0%A5%8B%E0%A4%B0%E0%A5%8D%E0%A4%B8-%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A5%8B%E0%A4%9C%E0%A5%87%E0%A4%95%E0%A5%8D%E0%A4%9F-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%AE%E0%A4%A6%E0%A4%A6-%E0%A4%95%E0%A4%B0-%E0%A4%B8%E0%A4%95%E0%A4%A4%E0%A5%87-%E0%A4%B9%E0%A5%88%E0%A4%82"&gt;
  &lt;/a&gt;
  &lt;em&gt;इसके अलावा ओपन सोर्स इंटेलिजेंट सिस्टम (OSINT) में शामिल होने के लिए आपका स्वागत है यदि आप कोरोना प्रकोप जैसी विभिन्न बीमारियों से मनुष्यों की रक्षा के संबंध में ओपन सोर्स प्रोजेक्ट में मदद कर सकते हैं&lt;/em&gt;
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#httpsgithubcommanishfoodtechsosinthrhwiki"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Manishfoodtechs/OSINTHRH/wiki"&gt;https://github.com/Manishfoodtechs/OSINTHRH/wiki&lt;/a&gt;
&lt;/h6&gt;

&lt;p&gt;मैंने सर्वर, क्लाउड और कंटेनरों पर शुरुआती लोगों के लिए सरल भाषा में विभिन्न लेख लिखे हैं। आप मेरी प्रोफाइल पर जाकर उन्हें ढूंढ सकते हैं। ऐसा ही एक लेख यहां फिर से अलग शीर्षक के साथ है।&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%B6%E0%A5%82%E0%A4%A8%E0%A5%8D%E0%A4%AF-%E0%A4%A1%E0%A5%87%E0%A4%B8%E0%A5%8D%E0%A4%95%E0%A4%9F%E0%A5%89%E0%A4%AA-%E0%A4%94%E0%A4%B0-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-%E0%A4%95%E0%A5%87-%E0%A4%AC%E0%A5%80%E0%A4%9A-%E0%A4%85%E0%A4%82%E0%A4%A4%E0%A4%B0"&gt;
  &lt;/a&gt;
  &lt;strong&gt;स्तर शून्य&lt;/strong&gt;: &lt;strong&gt;&lt;em&gt;डेस्कटॉप और सर्वर के बीच अंतर&lt;/em&gt;&lt;/strong&gt;
&lt;/h1&gt;

&lt;h5&gt;
  &lt;a href="#%E0%A4%A1%E0%A5%87%E0%A4%B8%E0%A5%8D%E0%A4%95%E0%A4%9F%E0%A5%89%E0%A4%AA-%E0%A4%95%E0%A5%8D%E0%A4%AF%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%8F%E0%A4%95-%E0%A4%A1%E0%A5%87%E0%A4%B8%E0%A5%8D%E0%A4%95%E0%A4%9F%E0%A5%89%E0%A4%AA-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%B8%E0%A5%80%E0%A4%AA%E0%A5%80%E0%A4%AF%E0%A5%82-%E0%A4%B0%E0%A5%88%E0%A4%AE-%E0%A4%B9%E0%A4%BE%E0%A4%B0%E0%A5%8D%E0%A4%A1-%E0%A4%A1%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%87%E0%A4%B5-%E0%A4%86%E0%A4%A6%E0%A4%BF-%E0%A4%94%E0%A4%B0-%E0%A4%91%E0%A4%AA%E0%A4%B0%E0%A5%87%E0%A4%9F%E0%A4%BF%E0%A4%82%E0%A4%97-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-%E0%A4%B9%E0%A5%8B%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%AF%E0%A4%B9-%E0%A4%91%E0%A4%AA%E0%A4%B0%E0%A5%87%E0%A4%9F%E0%A4%BF%E0%A4%82%E0%A4%97-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-%E0%A4%B5%E0%A4%BF%E0%A4%82%E0%A4%A1%E0%A5%8B%E0%A4%9C-%E0%A4%B2%E0%A4%BF%E0%A4%A8%E0%A4%95%E0%A5%8D%E0%A4%B8-%E0%A4%AE%E0%A5%88%E0%A4%95-%E0%A4%86%E0%A4%A6%E0%A4%BF-%E0%A4%B9%E0%A5%8B-%E0%A4%B8%E0%A4%95%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%86%E0%A4%AA%E0%A4%95%E0%A5%87-%E0%A4%AA%E0%A4%BE%E0%A4%B8-%E0%A4%A1%E0%A5%87%E0%A4%B8%E0%A5%8D%E0%A4%95%E0%A4%9F%E0%A5%89%E0%A4%AA-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%97%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%AB%E0%A4%BF%E0%A4%95%E0%A4%B2-%E0%A4%87%E0%A4%82%E0%A4%9F%E0%A4%B0%E0%A4%AB%E0%A5%87%E0%A4%B8-%E0%A4%9C%E0%A5%80%E0%A4%AF%E0%A5%82%E0%A4%86%E0%A4%88-%E0%A4%B9%E0%A5%88-%E0%A4%B2%E0%A5%87%E0%A4%95%E0%A4%BF%E0%A4%A8-%E0%A4%85%E0%A4%97%E0%A4%B0-%E0%A4%86%E0%A4%AA-%E0%A4%9C%E0%A5%80%E0%A4%AF%E0%A5%82%E0%A4%86%E0%A4%88-%E0%A4%B9%E0%A4%9F%E0%A4%BE%E0%A4%A4%E0%A5%87-%E0%A4%B9%E0%A5%88%E0%A4%82-%E0%A4%A4%E0%A5%8B-%E0%A4%AF%E0%A4%B9-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-%E0%A4%AC%E0%A4%A8-%E0%A4%9C%E0%A4%BE%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%B9%E0%A4%AE-%E0%A4%87%E0%A4%B8%E0%A5%87-%E0%A4%A7%E0%A4%BE%E0%A4%A4%E0%A5%81-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-bare-metal-server-%E0%A4%95%E0%A4%B9%E0%A4%A4%E0%A5%87-%E0%A4%B9%E0%A5%88%E0%A4%82"&gt;
  &lt;/a&gt;
  डेस्कटॉप क्या है? एक डेस्कटॉप में सीपीयू, रैम, हार्ड ड्राइव आदि और ऑपरेटिंग सिस्टम होता है। यह ऑपरेटिंग सिस्टम विंडोज, लिनक्स, मैक आदि हो सकता है। आपके पास डेस्कटॉप में ग्राफिकल इंटरफेस (जीयूआई) है लेकिन अगर आप जीयूआई हटाते हैं तो यह सर्वर बन जाता है। हम इसे "धातु सर्वर" (Bare Metal server) कहते हैं।
&lt;/h5&gt;

&lt;h1&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%8F%E0%A4%95-%E0%A4%8F%E0%A4%95-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-%E0%A4%95%E0%A5%87-%E0%A4%85%E0%A4%82%E0%A4%A6%E0%A4%B0-%E0%A4%95%E0%A4%88-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%AA%E0%A5%8D%E0%A4%A4-%E0%A4%95%E0%A4%B0%E0%A4%A8%E0%A4%BE"&gt;
  &lt;/a&gt;
  &lt;strong&gt;स्तर एक&lt;/strong&gt;: &lt;strong&gt;&lt;em&gt;एक सर्वर के अंदर कई सर्वर प्राप्त करना&lt;/em&gt;&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VVVuKkeZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.open.edu/openlearn/ocw/pluginfile.php/1399956/mod_oucontent/oucontent/72266/55f4befe/0c0a3587/2-2-13.small.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VVVuKkeZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.open.edu/openlearn/ocw/pluginfile.php/1399956/mod_oucontent/oucontent/72266/55f4befe/0c0a3587/2-2-13.small.jpg" alt="वर्चुअलाइजेशन"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#%E0%A4%AE%E0%A5%87%E0%A4%9F%E0%A4%B2-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-%E0%A4%B8%E0%A4%AC%E0%A4%B8%E0%A5%87-%E0%A4%AE%E0%A4%B9%E0%A4%82%E0%A4%97%E0%A5%87-%E0%A4%B9%E0%A5%88%E0%A4%82-%E0%A4%87%E0%A4%B8%E0%A4%B2%E0%A4%BF%E0%A4%8F-%E0%A4%B2%E0%A5%8B%E0%A4%97%E0%A5%8B%E0%A4%82-%E0%A4%A8%E0%A5%87-%E0%A4%89%E0%A4%A8%E0%A5%8D%E0%A4%B9%E0%A5%87%E0%A4%82-%E0%A4%B8%E0%A4%BE%E0%A4%9D%E0%A4%BE-%E0%A4%95%E0%A4%BF%E0%A4%AF%E0%A4%BE-%E0%A4%94%E0%A4%B0-%E0%A4%89%E0%A4%A8%E0%A5%8D%E0%A4%B9%E0%A5%87%E0%A4%82-%E0%A4%B5%E0%A4%B0%E0%A5%8D%E0%A4%9A%E0%A5%81%E0%A4%85%E0%A4%B2-%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%87%E0%A4%B5%E0%A5%87%E0%A4%9F-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-vpsvm-%E0%A4%95%E0%A4%B9%E0%A4%BE-%E0%A4%B2%E0%A5%87%E0%A4%95%E0%A4%BF%E0%A4%A8-%E0%A4%B9%E0%A4%B0-%E0%A4%95%E0%A5%8B%E0%A4%88-%E0%A4%B5%E0%A4%BF%E0%A4%82%E0%A4%A1%E0%A5%8B%E0%A4%9C%E0%A4%BC-%E0%A4%9C%E0%A5%88%E0%A4%B8%E0%A4%BE-%E0%A4%93%E0%A4%8F%E0%A4%B8-%E0%A4%A8%E0%A4%B9%E0%A5%80%E0%A4%82-%E0%A4%9A%E0%A4%BE%E0%A4%B9%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%95%E0%A5%81%E0%A4%9B-%E0%A4%B2%E0%A4%BF%E0%A4%A8%E0%A4%95%E0%A5%8D%E0%A4%B8-%E0%A4%9A%E0%A4%BE%E0%A4%B9%E0%A4%A4%E0%A5%87-%E0%A4%B9%E0%A5%88%E0%A4%82-20-%E0%A4%B8%E0%A4%BE%E0%A4%B2-%E0%A4%AA%E0%A4%B9%E0%A4%B2%E0%A5%87-%E0%A4%B9%E0%A4%BE%E0%A4%87%E0%A4%AA%E0%A4%B0%E0%A4%B5%E0%A4%BE%E0%A4%87%E0%A4%9C%E0%A4%B0%E0%A5%8D%E0%A4%B8-%E0%A4%A8%E0%A4%BE%E0%A4%AE%E0%A4%95-%E0%A4%B8%E0%A5%89%E0%A4%AB%E0%A5%8D%E0%A4%9F%E0%A4%B5%E0%A5%87%E0%A4%AF%E0%A4%B0-%E0%A4%95%E0%A4%BE-%E0%A4%8F%E0%A4%95-%E0%A4%9F%E0%A5%81%E0%A4%95%E0%A4%A1%E0%A4%BC%E0%A4%BE-%E0%A4%86%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%9C%E0%A5%8B-%E0%A4%8F%E0%A4%95-%E0%A4%B9%E0%A5%80-%E0%A4%AE%E0%A4%B6%E0%A5%80%E0%A4%A8-%E0%A4%B8%E0%A5%87-%E0%A4%B5%E0%A4%BF%E0%A4%82%E0%A4%A1%E0%A5%8B%E0%A4%9C-%E0%A4%94%E0%A4%B0-%E0%A4%B2%E0%A4%BF%E0%A4%A8%E0%A4%95%E0%A5%8D%E0%A4%B8-%E0%A4%95%E0%A5%8B-%E0%A4%9A%E0%A4%B2%E0%A4%BE%E0%A4%A8%E0%A4%BE-%E0%A4%B8%E0%A4%82%E0%A4%AD%E0%A4%B5-%E0%A4%AC%E0%A4%A8%E0%A4%BE%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%94%E0%A4%B0-%E0%A4%87%E0%A4%B8-%E0%A4%A4%E0%A4%95%E0%A4%A8%E0%A5%80%E0%A4%95-%E0%A4%95%E0%A5%8B-%E0%A4%B5%E0%A4%B0%E0%A5%8D%E0%A4%9A%E0%A5%81%E0%A4%85%E0%A4%B2%E0%A4%BE%E0%A4%87%E0%A4%9C%E0%A5%87%E0%A4%B6%E0%A4%A8-%E0%A4%95%E0%A4%B9%E0%A4%BE-%E0%A4%9C%E0%A4%BE%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-60-%E0%A4%B8%E0%A4%BE%E0%A4%B2-%E0%A4%AA%E0%A4%B9%E0%A4%B2%E0%A5%87-%E0%A4%86%E0%A4%88%E0%A4%AC%E0%A5%80%E0%A4%8F%E0%A4%AE-%E0%A4%A8%E0%A5%87-%E0%A4%B5%E0%A4%B0%E0%A5%8D%E0%A4%9A%E0%A5%81%E0%A4%85%E0%A4%B2%E0%A4%BE%E0%A4%87%E0%A4%9C%E0%A5%87%E0%A4%B6%E0%A4%A8-%E0%A4%AA%E0%A4%B0-%E0%A4%95%E0%A4%BE%E0%A4%AE-%E0%A4%B6%E0%A5%81%E0%A4%B0%E0%A5%82-%E0%A4%95%E0%A4%BF%E0%A4%AF%E0%A4%BE-%E0%A4%A5%E0%A4%BE"&gt;
  &lt;/a&gt;
  मेटल सर्वर सबसे महंगे हैं। इसलिए, लोगों ने उन्हें साझा किया और उन्हें वर्चुअल प्राइवेट सर्वर (VPS/VM) कहा। लेकिन हर कोई विंडोज़ जैसा ओएस नहीं चाहता है। कुछ लिनक्स चाहते हैं। 20 साल पहले, "हाइपरवाइजर्स" नामक सॉफ्टवेयर का एक टुकड़ा आता है, जो एक ही मशीन से विंडोज और लिनक्स को चलाना संभव बनाता है, और इस तकनीक को वर्चुअलाइजेशन कहा जाता है। 60 साल पहले आईबीएम ने वर्चुअलाइजेशन पर काम शुरू किया था।
&lt;/h5&gt;

&lt;h6&gt;
  &lt;a href="#%E0%A4%B8%E0%A4%AE%E0%A4%AF-%E0%A4%B0%E0%A5%87%E0%A4%96%E0%A4%BE-%E0%A4%B5%E0%A5%88%E0%A4%95%E0%A4%B2%E0%A5%8D%E0%A4%AA%E0%A4%BF%E0%A4%95-%E0%A4%AF%E0%A4%B9%E0%A4%BE%E0%A4%82-%E0%A4%AA%E0%A4%A2%E0%A4%BC%E0%A5%87%E0%A4%82"&gt;
  &lt;/a&gt;
  &lt;a href="https://en.wikipedia.org/wiki/Timeline_of_virtualization_Development"&gt;समय रेखा, वैकल्पिक यहां पढ़ें&lt;/a&gt;।
&lt;/h6&gt;

&lt;h4&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%8F%E0%A4%95-%E0%A4%B9%E0%A4%BE%E0%A4%87%E0%A4%AA%E0%A4%B0%E0%A4%B5%E0%A4%BE%E0%A4%87%E0%A4%9C%E0%A4%B0-%E0%A4%95%E0%A5%87-%E0%A4%AC%E0%A5%80%E0%A4%9A-%E0%A4%B2%E0%A4%A1%E0%A4%BC%E0%A4%BE%E0%A4%88-%E0%A4%B8%E0%A5%89%E0%A4%AB%E0%A5%8D%E0%A4%9F%E0%A4%B5%E0%A5%87%E0%A4%AF%E0%A4%B0-%E0%A4%95%E0%A4%BE-%E0%A4%8F%E0%A4%95-%E0%A4%9F%E0%A5%81%E0%A4%95%E0%A4%A1%E0%A4%BC%E0%A4%BE-%E0%A4%9C%E0%A5%8B-%E0%A4%91%E0%A4%AA%E0%A4%B0%E0%A5%87%E0%A4%9F%E0%A4%BF%E0%A4%82%E0%A4%97-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-%E0%A4%95%E0%A5%87-%E0%A4%AD%E0%A5%80%E0%A4%A4%E0%A4%B0-%E0%A4%8F%E0%A4%95-%E0%A4%91%E0%A4%AA%E0%A4%B0%E0%A5%87%E0%A4%9F%E0%A4%BF%E0%A4%82%E0%A4%97-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-%E0%A4%AC%E0%A4%A8%E0%A4%BE%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88"&gt;
  &lt;/a&gt;
  &lt;strong&gt;स्तर एक&lt;/strong&gt;: &lt;strong&gt;&lt;em&gt;हाइपरवाइजर के बीच लड़ाई- सॉफ्टवेयर का एक टुकड़ा जो ऑपरेटिंग सिस्टम के भीतर एक ऑपरेटिंग सिस्टम बनाता है।&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;वर्चुअलाइजेशन: पूर्ण वर्चुअलाइजेशन (हार्डवेयर वर्चुअलाइजेशन), पैरा-वर्चुअलाइजेशन और ओएस-लेवल वर्चुअलाइजेशन तीन प्रकार के होते हैं।&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;पूर्ण वर्चुअलाइजेशन:&lt;/em&gt;&lt;/strong&gt; कर्नेल-आधारित हाइपरविजर (केवीएम आदि..) प्रत्येक मशीन के लिए रैम/कोर/हार्ड ड्राइव आदि संसाधनों फिक्स तरीके से बाट देता है।  । इसने VMs के बीच एक संसाधन समस्या पैदा कर दी | क्यूंकि कम संसाधन वाली सर्वर पे ज्यादा लोड हो सकता है और ज्यादा संसाधन वाले सर्वर पे कम।  क्यूंकि संसाधन फिक्स हैं इसलिए अगर कम संसाधन वाले सर्वर को ज्यादा रैम चाहिए होगा तो उसे नहीं उपलब्ध होगा क्यूंकि सबकुछ पहले से ही हमने फिक्स कर दिया है। यही कारण है की आप वर्चुअल बॉक्स को होस्टिंग के लिए नहीं उपयोग कर पाते। &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;मशीनों के बीच लड़ाई- रिसोर्स पूलिंग द्वारा हल&lt;/strong&gt;&lt;br&gt;
कर्नेल में वर्चुअलाइजेशन के बजाय, इन नए OS आधारित हाइपरविजर (OpenVZ, आदि..) ने ram, HDD, आदि जैसे संसाधनों का एक पूल बनाया और आवश्यकता पड़ने पर उन्हें वर्चुअल मशीनों के साथ साझा किया। इसने कुछ हद तक संसाधन लड़ाई को नियंत्रित किया।&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;वर्चुअल मशीनें ट्रंकी हैं, लाइट सॉल्यूशन की जरूरत है&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;कर्नेल हाइपरवाइजर या ओएस-आधारित हाइपरवाइजर आधारित मशीनों को स्थापित करने के लिए बड़ी फाइलों [.iso (1-4 जीबी)] की आवश्यकता होती है। एक छोटी वर्चुअल मशीन को व्यवस्थित करने में समय लगता है। इसके अलावा, वे हार्ड ड्राइव पर भारी हैं। इसका मुकाबला करने के लिए, हाल के वर्षों में एक नई हल्की तकनीक का विकास किया गया है जिसे हम "कंटेनर" कहते हैं। वे कुछ हद तक ओएस-आधारित विज़ुअलाइज़र के समान हैं, सिवाय इसके कि उनके पास इंटरनेट पर संपीड़ित छवियां हैं जिन्हें आप डाउनलोड कर सकते हैं और अपनी पसंद का ओएस बना सकते हैं।&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;जब हमारे पास चलने के लिए अच्छी जमीन है, तो हमें बादलो (cloud :) ) की आवश्यकता क्यों है&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;आज आप सबसे लोकप्रिय ओएस - उबंटू आईएसओ सीडी (1 जीबी+) से या एक कंटेनर (93 एमबी) में भी प्राप्त कर सकते हैं। सीडी और कंटेनर के बीच उबंटू प्राप्त करने के लिए आकार (size)  और समय (time to up) में  बड़ा अंतर क्लाउड की वास्तविक आवश्यकता है।&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#-%E0%A4%85%E0%A4%B5%E0%A4%B6%E0%A5%8D%E0%A4%AF-%E0%A4%AA%E0%A4%A2%E0%A4%BC%E0%A5%87%E0%A4%82-%E0%A4%85%E0%A4%AA%E0%A4%A8%E0%A5%80-%E0%A4%95%E0%A5%8D%E0%A4%B2%E0%A4%BE%E0%A4%89%E0%A4%A1-%E0%A4%B8%E0%A5%87%E0%A4%B5%E0%A4%BE-%E0%A4%AC%E0%A4%A8%E0%A4%BE%E0%A4%A8%E0%A5%87-%E0%A4%95%E0%A5%87-%E0%A4%B8%E0%A4%82%E0%A4%AC%E0%A4%82%E0%A4%A7-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%AE%E0%A5%87%E0%A4%B0%E0%A5%80-%E0%A4%AA%E0%A4%BF%E0%A4%9B%E0%A4%B2%E0%A5%80-%E0%A4%AA%E0%A5%8B%E0%A4%B8%E0%A5%8D%E0%A4%9F-%E0%A4%A6%E0%A5%87%E0%A4%96%E0%A5%87%E0%A4%82-%E0%A4%AD%E0%A4%BE%E0%A4%97-1-%E0%A4%94%E0%A4%B0-%E0%A4%AD%E0%A4%BE%E0%A4%972-%E0%A4%94%E0%A4%B0-part3"&gt;
  &lt;/a&gt;
  ** अवश्य पढ़ें:** अपनी क्लाउड सेवा  बनाने के संबंध में मेरी पिछली पोस्ट देखें। &lt;a href="https://dev.to/manishfoodtechs/creating-your-cloud-infrastructure-like-google-cloud-and-digital-ocean-from-scratch-part-1-3gnm"&gt;भाग 1&lt;/a&gt; और &lt;a href="https://dev.to/manishfoodtechs/creating-your-cloud-infrastructure-like-google-cloud-and-digital-ocean-from-scratch-part-2-5f7f"&gt;भाग-2 &lt;/a&gt; और &lt;a href="//https%20://dev.to/manishfoodtechs/creating-your-cloud-infrastructure-like-google-cloud-and-digital-ocean-from-scratch-part-3-coding-stuff-20eo"&gt;Part-3&lt;/a&gt;
&lt;/h6&gt;
&lt;h5&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%8F%E0%A4%95-%E0%A4%B8%E0%A4%82%E0%A4%95%E0%A5%8D%E0%A4%B7%E0%A5%87%E0%A4%AA-%E0%A4%AE%E0%A5%87%E0%A4%82-20-%E0%A4%B8%E0%A4%BE%E0%A4%B2-%E0%A4%AA%E0%A4%B9%E0%A4%B2%E0%A5%87-%E0%A4%B9%E0%A4%AE-%E0%A4%8F%E0%A4%95-%E0%A4%91%E0%A4%AA%E0%A4%B0%E0%A5%87%E0%A4%9F%E0%A4%BF%E0%A4%82%E0%A4%97-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-%E0%A4%B8%E0%A5%87-%E0%A4%95%E0%A4%88-%E0%A4%91%E0%A4%AA%E0%A4%B0%E0%A5%87%E0%A4%9F%E0%A4%BF%E0%A4%82%E0%A4%97-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%AA%E0%A5%8D%E0%A4%A4-%E0%A4%95%E0%A4%B0%E0%A4%A8%E0%A5%87-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%B8%E0%A4%95%E0%A5%8D%E0%A4%B7%E0%A4%AE-%E0%A4%A5%E0%A5%87-%E0%A4%B2%E0%A5%87%E0%A4%95%E0%A4%BF%E0%A4%A8-%E0%A4%B8%E0%A4%82%E0%A4%B8%E0%A4%BE%E0%A4%A7%E0%A4%A8-%E0%A4%8F%E0%A4%95-%E0%A4%B8%E0%A4%AE%E0%A4%B8%E0%A5%8D%E0%A4%AF%E0%A4%BE-%E0%A4%A5%E0%A5%80-%E0%A4%AA%E0%A5%82%E0%A4%B0%E0%A5%8D%E0%A4%A3-%E0%A4%B9%E0%A4%BE%E0%A4%B0%E0%A5%8D%E0%A4%A1%E0%A4%B5%E0%A5%87%E0%A4%AF%E0%A4%B0-%E0%A4%B5%E0%A4%B0%E0%A5%8D%E0%A4%9A%E0%A5%81%E0%A4%85%E0%A4%B2%E0%A4%BE%E0%A4%87%E0%A4%9C%E0%A5%87%E0%A4%B6%E0%A4%A8-%E0%A4%AB%E0%A4%BF%E0%A4%B0-%E0%A4%AA%E0%A5%88%E0%A4%B0%E0%A4%BE%E0%A4%B5%E0%A4%B0%E0%A5%8D%E0%A4%9A%E0%A5%81%E0%A4%85%E0%A4%B2%E0%A4%BE%E0%A4%87%E0%A4%9C%E0%A5%87%E0%A4%B6%E0%A4%A8-%E0%A4%AB%E0%A4%BF%E0%A4%B0-%E0%A4%95%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%A8%E0%A4%B0-%E0%A4%8F%E0%A4%B2%E0%A4%8F%E0%A4%95%E0%A5%8D%E0%A4%B8%E0%A4%A1%E0%A5%80-%E0%A4%94%E0%A4%B0-%E0%A4%A1%E0%A5%89%E0%A4%95%E0%A4%B0%E0%A5%8D%E0%A4%B8-%E0%A4%9C%E0%A4%BE%E0%A4%A8%E0%A5%87%E0%A4%AE%E0%A4%BE%E0%A4%A8%E0%A5%87-%E0%A4%95%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%A8%E0%A4%B0-%E0%A4%B9%E0%A5%88%E0%A4%82-%E0%A4%94%E0%A4%B0-%E0%A4%AA%E0%A4%A2%E0%A4%BC%E0%A5%87%E0%A4%82-httpswwwunixarenacom201712paravirtualizationfullvirtualizationhardwareassistedvirtualizationhtml"&gt;
  &lt;/a&gt;
  स्तर एक (संक्षेप में): 20 साल पहले हम एक ऑपरेटिंग सिस्टम से कई ऑपरेटिंग सिस्टम प्राप्त करने में सक्षम थे लेकिन संसाधन एक समस्या थी। पूर्ण हार्डवेयर वर्चुअलाइजेशन फिर पैरावर्चुअलाइजेशन फिर कंटेनर। एलएक्सडी और डॉकर्स जाने-माने कंटेनर हैं। और पढ़ें: &lt;a href="https://www.unixarena.com/2017/12/para-virtualization-full-virtualization-hardware-assisted-virtualization.html/"&gt;https://www.unixarena.com/2017/12/para-virtualization-full-virtualization-hardware-assisted-virtualization.html/&lt;/a&gt;
&lt;/h5&gt;
&lt;h1&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%A6%E0%A5%8B-%E0%A4%85%E0%A4%AA%E0%A4%A8%E0%A5%80-%E0%A4%96%E0%A5%81%E0%A4%A6-%E0%A4%95%E0%A5%80-%E0%A4%B5%E0%A4%B0%E0%A5%8D%E0%A4%9A%E0%A5%81%E0%A4%85%E0%A4%B2-%E0%A4%AE%E0%A4%B6%E0%A5%80%E0%A4%A8-%E0%A4%AC%E0%A4%A8%E0%A4%BE%E0%A4%A8%E0%A4%BE-%E0%A4%9A%E0%A4%BE%E0%A4%B9%E0%A4%A4%E0%A5%87-%E0%A4%B9%E0%A5%88%E0%A4%82"&gt;
  &lt;/a&gt;
  &lt;strong&gt;स्तर दो&lt;/strong&gt;: &lt;strong&gt;&lt;em&gt;अपनी खुद की वर्चुअल मशीन बनाना चाहते हैं?&lt;/em&gt;&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;आप केवीएम के साथ एक मेटल सर्वर खरीद सकते हैं या अपने विंडोज़ डेस्कटॉप में वर्चुअलबॉक्स या वीएमवेयर प्ले स्टेशन का उपयोग कर सकते हैं। आप विंडोज़ डेस्कटॉप पर अपने लिनक्स सर्वर को स्पिन करने के लिए .iso इमेज (लगभग 1GB) का उपयोग करेंगे।&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%A4%E0%A5%80%E0%A4%A8-%E0%A4%95%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%A8%E0%A4%B0"&gt;
  &lt;/a&gt;
  &lt;strong&gt;स्तर तीन&lt;/strong&gt;: &lt;strong&gt;&lt;em&gt;कंटेनर?&lt;/em&gt;&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;.iso छवि (लगभग 1GB) का उपयोग करने के बजाय, हम अपनी वर्चुअल मशीनों को स्पिन करने के लिए इंटरनेट पर होस्ट की गई छोटी छवियों (100 एमबी) का उपयोग करेंगे (एक बेहतर शब्द एक कंटेनर है)।&lt;/p&gt;

&lt;p&gt;दो सबसे लोकप्रिय कंटेनर प्रौद्योगिकियां एलएक्सडी और डॉकर्स हैं। लेकिन वे थोड़े अलग हैं। एलएक्सडी (LXD) में आप वीएम जैसे सर्वर की एक छवि लॉन्च करते हैं लेकिन डॉकर में, आप सर्वर और ऐप्स की छवियों को लॉन्च कर सकते हैं।&lt;/p&gt;

&lt;p&gt;ठीक है, मैं आपको एक उदाहरण देता हूं:&lt;/p&gt;

&lt;p&gt;मान लीजिए आपके पास PHP वेबसाइट है। इस PHP वेबसाइट को चलाने के लिए आपको एक अपाचे सर्वर (जैसे xampp) और MySQL डेटाबेस की आवश्यकता होती है।&lt;/p&gt;

&lt;p&gt;LXD में आप एक ubuntu सर्वर बनाएंगे और उसके अंदर आप apache सर्वर और MySQL डेटाबेस को इंस्टॉल करेंगे। [१ कंटेनर अपाचे के अंदर रखता है, mysql]&lt;/p&gt;

&lt;p&gt;लेकिन डॉकटर में, आपके पास दो अलग-अलग कंटेनर हो सकते हैं: एक अपाचे के लिए और दूसरा MySQL के लिए। और अपाचे सर्वर के लिए सिर्फ एक कंटेनर ही क्यों? आइए दो अपाचे कंटेनर और तीन MySQL लें ... यदि कोई विफल रहता है तो अन्य चलने लगेंगे ... और हमारा ऐप कभी भी "बंद नहीं होगा"। [विभिन्न कंटेनर अलग-अलग ऐप्स रखते हैं]&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%9A%E0%A4%BE%E0%A4%B0-%E0%A4%95%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%A8%E0%A4%B0%E0%A5%8B%E0%A4%82-%E0%A4%95%E0%A4%BE-%E0%A4%89%E0%A4%AA%E0%A4%AF%E0%A5%8B%E0%A4%97-%E0%A4%95%E0%A5%88%E0%A4%B8%E0%A5%87-%E0%A4%95%E0%A4%B0%E0%A5%87%E0%A4%82"&gt;
  &lt;/a&gt;
  &lt;strong&gt;स्तर चार&lt;/strong&gt; : &lt;strong&gt;कंटेनरों का उपयोग कैसे करें?&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;कंटेनर सर्वर हैं !!! चलो इस तरह मान लेते हैं।&lt;br&gt;
तो, हमें पता होना चाहिए:&lt;br&gt;
(१) सर्वर कैसे लॉन्च करें।&lt;br&gt;
(२) सर्वर कैसे शुरू करें।&lt;br&gt;
(३) सर्वर के अंदर कोडिंग कैसे करें: - सर्वर के अंदर ऐप्स / प्रोग्राम डालें।&lt;br&gt;
(४) सर्वर को कैसे रोकें।&lt;br&gt;
(५) इंटरनेट के माध्यम से हमारे सर्वर को दुनिया के लिए कैसे सुलभ बनाया जाए।&lt;br&gt;
(६) इससे नया सर्वर बनाने के लिए सर्वर की इमेज कैसे बनाएं।&lt;br&gt;
(७) एक ही होस्ट के भीतर एक ही प्रोग्राम द्वारा अनेक सर्वरों का प्रबंधन कैसे करें।&lt;br&gt;
(८) मेरे पास दुनिया के अलग-अलग हिस्सों में होस्ट किए गए सर्वर हैं। क्या मैं इसे एक कार्यक्रम द्वारा प्रबंधित कर सकता हूं?&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#%E0%A4%AA%E0%A4%BE%E0%A4%82%E0%A4%9A%E0%A4%B5%E0%A4%BE%E0%A4%82-%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%89%E0%A4%A4%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%95%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%A8%E0%A4%B0%E0%A5%8B%E0%A4%82-%E0%A4%95%E0%A4%BE-%E0%A4%89%E0%A4%AA%E0%A4%AF%E0%A5%8B%E0%A4%97-%E0%A4%95%E0%A5%88%E0%A4%B8%E0%A5%87-%E0%A4%95%E0%A4%B0%E0%A5%87%E0%A4%82"&gt;
  &lt;/a&gt;
  &lt;strong&gt;पांचवां स्तर&lt;/strong&gt; : &lt;strong&gt;उत्तर... कंटेनरों का उपयोग कैसे करें?&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;एलएक्सडी स्थापित करें: snap install lxd&lt;br&gt;
डॉकर स्थापित करें:sudo apt install docker.io -y &amp;amp;&amp;amp; sudo systemctl enable --now docker &amp;amp;&amp;amp; sudo usermod -aG docker root &amp;amp;&amp;amp; docker --version&lt;/p&gt;

&lt;p&gt;शुरू करने से पहले: याद रखें: उबंटू 'छवि' है और हम इस छवि से 'कंटेनर (सर्वर कहें)' बनाते हैं। मेजबान वह मशीन है जिसका उपयोग हम अपनी पसंद के कंटेनर जैसे उबंटू, सेंटोस, फेडोरा इत्यादि बनाने के लिए करते हैं।&lt;/p&gt;

&lt;p&gt;सर्वर = कंटेनर (कहते हैं)&lt;/p&gt;

&lt;p&gt;(१) सर्वर कैसे लॉन्च करें।&lt;br&gt;
एलएक्सडी: lxc launch ubuntu:18.04 myfirstcontainer&lt;br&gt;
डॉकर: docker pull ubuntu:latest औरdocker run -it myfirstcontainer ubuntu:latest&lt;/p&gt;

&lt;p&gt;(२) सर्वर कैसे शुरू करें।&lt;br&gt;
एलएक्सडी: lxc start myfirstcontainer&lt;br&gt;
डॉकर: docker start myfirstcontainer&lt;/p&gt;

&lt;p&gt;(३) सर्वर के अंदर कोडिंग कैसे करें: - सर्वर के अंदर ऐप्स / प्रोग्राम डालें।&lt;br&gt;
चलो कंटेनर के अंदर आते हैं और कुछ कोडिंग करते हैं जैसे Nginx सर्वर स्थापित करना।&lt;br&gt;
LXD: lxc exec my first container bash&lt;br&gt;
Docker: docker ps -a --&amp;gt; कंटेनर आईडी प्राप्त करें और फिर docker exec -it ed58974dd bash&lt;/p&gt;

&lt;p&gt;ed58974dd docker द्वारा दी गई कंटेनर आईडी है। एलएक्सडी के विपरीत, आपको डॉकर प्रदाता यादृच्छिक आईडी का उपयोग करना होगा।&lt;/p&gt;

&lt;p&gt;इंस्टाल करने के बाद... exitकंटेनर से बाहर आने के लिए टाइप करें।&lt;/p&gt;

&lt;p&gt;(४) सर्वर को कैसे रोकें।&lt;br&gt;
एलएक्सडी: lxc stop myfirstcontainer&lt;br&gt;
डॉकर: docker stop ed58974dd&lt;/p&gt;

&lt;p&gt;(५) इंटरनेट&lt;br&gt;
एलएक्सडी द्वारा हमारे सर्वर को दुनिया के लिए कैसे सुलभ बनाया जाए : जब भी आप एक कंटेनर बनाते हैं, तो आपको उस कंटेनर का एक आईपी पता मिलता है। ip aआपको कंटेनर का पता देगा या एलएक्ससी सूची देगा। हमने nginx के साथ एक lxd कंटेनर बनाया था। ngnix पोर्ट 80 पर सुनेगा। इंटरनिप&lt;br&gt;
: 80 । लेकिन इस इंटर्नैप को इंटरनेट द्वारा एक्सेस नहीं किया जा सकता है। इंटरनेट पर केवल होस्ट आईपी उपलब्ध है। इस इंटर्निप को रूट करने के लिए : 80 से होस्टिप: 8945 (जो भी पोर्ट आप चाहते हैं) आपको iptables करने की आवश्यकता है।&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/manishfoodtechs/networking-is-easy-connecting-multiple-vms-servers-containers-devices-on-single-external-ip-in-one-command-139a"&gt;https://dev.to/manishfoodtechs/networking-is-easy-connecting-multiple-vms-servers-containers-devices-on-single-external-ip-in-one-command-139a&lt;/a&gt; आपकी मदद करने के लिए यहां एक लेख है :)&lt;/p&gt;

&lt;p&gt;डॉकर: कंटेनरों के निर्माण के बाद यह थोड़ा मुश्किल है। इसलिए आपको डोकर इमेज को स्पिन करने से पहले पता होना चाहिए कि आपको किस पोर्ट की आवश्यकता होगी। Nginx के इस उदाहरण के लिए हम इसके पोर्ट 80 को जानते हैं, इसलिए हमारा सिंटैक्स हो सकता हैdocker run -p 8945:80 -t -i Ubuntu। इसके अलावा, डॉकटर में iptables का उपयोग करने के तरीके हैं&lt;/p&gt;

&lt;p&gt;(६) सर्वर से एक नया सर्वर बनाने के लिए उसकी छवि कैसे बनाएं?&lt;br&gt;
अब हमने इसके अंदर एक Nginx रखने के लिए एक कंटेनर बनाया है। इस छवि के साथ एक नए कंटेनर को स्पिन करने के लिए हमें बाद की तारीख में इसका उपयोग करने की आवश्यकता हो सकती है।&lt;/p&gt;

&lt;p&gt;एलएक्सडी: lxc stop myfirstcontainer&lt;/p&gt;

&lt;p&gt;lxc publish myfirstcontainer --alias ubuntunginx&lt;br&gt;
lxc image list&lt;br&gt;
lxc image export ubuntunginx&lt;br&gt;
lxc image import ubuntunginx.tar.gz --ubuntunginx&lt;br&gt;
lxc launch ubuntunginx mysecondcontainer&lt;/p&gt;

&lt;p&gt;निर्यात की गई छवि रूट/फ़ोल्डर में tar.gz के समान है ls। फिर आप इस tar.gz फ़ाइल को अपने ड्राइव या ईमेल पर निर्यात कर सकते हैं: या जो भी आप चाहते हैं&lt;/p&gt;

&lt;p&gt;डोकर: docker commit -m "ubuntu1804" -a "root" ed58974dd manishfoodtechs/ubuntunginx:latest&lt;/p&gt;

&lt;p&gt;टार बॉल के रूप में: docker export ed5 &amp;gt; ubuntunginx.tar.xz&lt;/p&gt;

&lt;p&gt;डॉकर हब पर पुश करें: डॉकर में, आप अपनी छवियों को डॉकर हब पर धकेल सकते हैं।&lt;br&gt;
docker push manishfoodtechs/ubuntunginx:latest&lt;br&gt;
docker list images&lt;/p&gt;

&lt;p&gt;(७) एक ही होस्ट के भीतर एक ही प्रोग्राम द्वारा कई सर्वरों का प्रबंधन कैसे करें?&lt;br&gt;
एलएक्सडी: एलएक्सडी बड़े लड़कों के लिए है। यह आपको आपके रास्ते की स्वतंत्रता और असीमित रास्ता देता है। कुछ lxd कंटेनर प्रबंधन प्रोग्राम हैं जिन्हें आप lxd कंटेनरों को स्थापित और प्रबंधित कर सकते हैं: &lt;a href="https://lxc-webpanel.github.io/"&gt;https://lxc-webpanel.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;डॉकर: &lt;a href="https://www.portaneer.io/"&gt;https://www.portaneer.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(८) मेरे पास दुनिया के विभिन्न हिस्सों में होस्ट किए गए सर्वर हैं। क्या मैं इसे एक कार्यक्रम द्वारा प्रबंधित कर सकता हूं?&lt;br&gt;
कुबेरनेट्स और डॉकर-झुंड&lt;/p&gt;

&lt;p&gt;मैं आपसे अपने लैपटॉप/डेस्कटॉप पर वीएमवेयर वर्कस्टेशन डाउनलोड करने का अनुरोध करूंगा। होस्ट के रूप में ubuntu 18.04 LTS सर्वर को स्पिन करने का प्रयास करें। फिर होस्ट के अंदर आप lxd और docker चला सकते हैं। इसके अलावा, LXC के अंदर docker चलाने का प्रयास करें। लेकिन आप docker के अंदर lxc नहीं चला सकते लेकिन docker के अंदर docker चला सकते हैं।&lt;/p&gt;

&lt;p&gt;मुझे उम्मीद है कि आप लोगों को उपरोक्त लेख पसंद आया होगा और कुछ सीखा होगा।&lt;/p&gt;

&lt;p&gt;मेरे टीम फॉर्म में शामिल होने के लिए आपका स्वागत है ।&lt;/p&gt;

&lt;p&gt;संपर्क ईमेल: &lt;a href="mailto:manishfoodtechs@gmail.com"&gt;manishfoodtechs@gmail.com&lt;/a&gt; ।&lt;/p&gt;

&lt;p&gt;यदि आपको कोई समस्या है, तो हमारी टीम पेशेवर परामर्श और वितरण में भी लगी हुई है।&lt;br&gt;
आगे क्या?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;1. Learn about Podman: deamon less and rootless implementation of docker. More secure.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/manishfoodtechs" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AyoLr6Eq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nGkJnCB3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/221659/353cc208-374e-4d32-8304-bf9aba600a40.jpg" alt="manishfoodtechs image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/manishfoodtechs/time-to-say-bye-bye-docker-era-of-docker-is-over-2n06" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;TIME TO SAY BYE BYE DOCKER !!! Era of Docker is over...&lt;/h2&gt;
      &lt;h3&gt;manish srivastava ・ May 28 '20 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#docker&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#linux&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
. &lt;strong&gt;&lt;em&gt;2.How to install rootless docker.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/manishfoodtechs" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AyoLr6Eq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nGkJnCB3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/221659/353cc208-374e-4d32-8304-bf9aba600a40.jpg" alt="manishfoodtechs image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/manishfoodtechs/rootless-docker-kick-docker-hackers-and-make-docker-more-secure-new-concept-70g" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;New Type of Docker : Rootless + Safer : for every Docker user.&lt;/h2&gt;
      &lt;h3&gt;manish srivastava ・ Jun 1 '20 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#docker&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#linux&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Original Post:&lt;br&gt;
&lt;a href="https://dev.to/manishfoodtechs/docker-for-extreme-beginners-in-desi-layman-language-1e0n"&gt;https://dev.to/manishfoodtechs/docker-for-extreme-beginners-in-desi-layman-language-1e0n&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read in your Language:&lt;br&gt;
&lt;a href="https://translate.google.com/?sl=auto&amp;amp;tl=hi&amp;amp;text=https%3A%2F%2Fdev.to%2Fmanishfoodtechs%2Fdocker-for-extreme-beginners-in-desi-layman-language-1e0n&amp;amp;op=translate"&gt;https://translate.google.com/?sl=auto&amp;amp;tl=hi&amp;amp;text=https%3A%2F%2Fdev.to%2Fmanishfoodtechs%2Fdocker-for-extreme-beginners-in-desi-layman-language-1e0n&amp;amp;op=translate&lt;/a&gt;&lt;/p&gt;

</description>
      <category>docker</category>
      <category>beginners</category>
      <category>linux</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>We built an API Builder for our API-based automation platform</title>
      <author>Ralph Vaz</author>
      <pubDate>Thu, 03 Jun 2021 07:27:48 +0000</pubDate>
      <link>https://dev.to/ralphwjz/we-built-an-api-builder-for-our-api-based-automation-platform-1e6d</link>
      <guid>https://dev.to/ralphwjz/we-built-an-api-builder-for-our-api-based-automation-platform-1e6d</guid>
      <description>&lt;p&gt;&lt;a href="https://pathfix.com/automation"&gt;Pathfix Automation&lt;/a&gt; runs on APIs only &lt;strong&gt;(think: if Zapier and Postman had a baby)&lt;/strong&gt;, so it made sense for us to spend a lot of time to build out a slick and easy to use API builder.&lt;/p&gt;

&lt;p&gt;With Automation, we want to give our users the ability to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;build complex workflows (both internal and user-facing)&lt;/li&gt;
&lt;li&gt;call any API&lt;/li&gt;
&lt;li&gt;enrich the data&lt;/li&gt;
&lt;li&gt;transform data&lt;/li&gt;
&lt;li&gt;send to the next API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;……..and essentially, work the way they wanted – without any limitations!&lt;/p&gt;

&lt;p&gt;This made the API builder a very cruicial feature in our platform.&lt;/p&gt;

&lt;p&gt;(But first, a little introduction)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-pathfix-automation"&gt;
  &lt;/a&gt;
  What is Pathfix Automation?
&lt;/h2&gt;

&lt;p&gt;Automation is an API based automation platform that allows users to build flows using only APIs. Users can add multiple APIs and then stitch them all together to build out any automation they want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HpMLMDdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283420126/EzLd7oyo5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HpMLMDdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283420126/EzLd7oyo5.png" alt="2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Automation platform came from the idea that existing tools are a bit too restrictive and doesn’t allow you to &lt;strong&gt;simply work with APIs.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So, based on many (many!) user requests, we decided to build a platform that ran purely on APIs, this meant that you can automate any process with any provider that has an API available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not just internal automation&lt;/strong&gt; – More exciting is that you would be able to add user facing automation (integration) to your platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GY9fiRwO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283463282/5Q4E409n1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GY9fiRwO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283463282/5Q4E409n1.jpeg" alt="Pathfix Automation.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-api-builder"&gt;
  &lt;/a&gt;
  The API Builder
&lt;/h2&gt;

&lt;p&gt;We needed to start by answering the basic questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How many APIs will our users have&lt;/li&gt;
&lt;li&gt;Should we have one dedicated page for APIs built (or, have it accessible from a popup)&lt;/li&gt;
&lt;li&gt;Allow for Search by multiple methods (keywords, url etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We knew our users will have multiple APIs (I mean, ours is an API ONLY automation platform) but, we did not want them to lose context by leaving their design environment.&lt;/p&gt;

&lt;p&gt;Enter – &lt;strong&gt;Single Page App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We added Design, Connections, Constants and the most important APIs as a quick popup – all without the user ever leaving their design environment.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Et Voila!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QCSSnAnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283542614/xjhTv06qn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QCSSnAnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283542614/xjhTv06qn.png" alt="api1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Design With Function&lt;/strong&gt;&lt;br&gt;
We just had one goal – &lt;strong&gt;make adding APIs effortless!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To achieve this, we started to look at other API builders and connectors. Read reviews, researched on forums to understand what users wanted and what caused them the most pain while adding APIs.&lt;/p&gt;

&lt;p&gt;Here’s where we settled:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It needed to be &lt;strong&gt;nocode&lt;/strong&gt; (read: no nonsense)&lt;/li&gt;
&lt;li&gt;Postman was the standard when it came to working with APIs. It’s ease of use and general ‘known’ feel was unmatched of course&lt;/li&gt;
&lt;li&gt;Bubble.io’s API Connector was simple, to the point and had a few elements we knew we could use (yes, the API Connector is a bit complex and has wayyy too many options that complicate makers. But we’re not gonna go there 🙂 )&lt;/li&gt;
&lt;li&gt;With this in mind, we started building out the API Builder. We knew we had to have the basic functionality including calling multiple methods, endpoint, Body, Headers and Query Params&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s what the builder looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k4DlqT1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283595067/DDgErDgO5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k4DlqT1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283595067/DDgErDgO5.png" alt="api3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apart from these, we added a few features that checked the ‘convenience factor’ box.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import configuration from library (ours and yours)&lt;/li&gt;
&lt;li&gt;Import from CURL&lt;/li&gt;
&lt;li&gt;Import from JSON&lt;/li&gt;
&lt;li&gt;Export to JSON&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This just made it super easy to work with APIs. So if you are not familiar with working with APIs, simply import a curl and we will get you all sorted!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YDNHcc3Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283669951/JxWpDjmFd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YDNHcc3Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283669951/JxWpDjmFd.jpeg" alt="API5.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dynamic Values&lt;/strong&gt;&lt;br&gt;
The power of Pathfix Automation was in the fact that we allowed users to play with the data received, handle the transformation and push dynamic data to another API.&lt;/p&gt;

&lt;p&gt;Since Dynamic Values was pretty important, we added the easiest way for users to add this – add &amp;lt;&amp;gt; brackets to any dynamic field.&lt;/p&gt;

&lt;p&gt;Once added, users can simply select the dynamic values for these fields from any API calls made in the flow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qDRmZxea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283728003/GKI1rQnnD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qDRmZxea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283728003/GKI1rQnnD.png" alt="dynamic.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See what we did there? Our 4th task used data pulled from our 2nd and 3rd task. Just select the API and select the field.&lt;/p&gt;

&lt;p&gt;Automation takes care of the rest!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Builder Video&lt;/strong&gt;&lt;br&gt;
We created a video that details how you can use the API builder and walks through how it works.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=Jl5mOPkRF1o&amp;lt;br&amp;gt;%0A"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MAyYsDK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d0rnestrnnhclnnpu0m.png" alt="API Builder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
Building the API Builder was definitely a challenge. The team at Pathfix took on the challenge head-on and fun along the way!&lt;/p&gt;

&lt;p&gt;Sign up free for our  &lt;a href="https://automation.pathfix.com/"&gt;Automation platform&lt;/a&gt;  and take the Builder for a spin.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>How JavaScript works? The Execution Context || My Handwritten notes || Part 1</title>
      <author>Swastik Yadav</author>
      <pubDate>Thu, 03 Jun 2021 07:18:14 +0000</pubDate>
      <link>https://dev.to/swastikyadav/how-javascript-works-the-execution-context-my-handwritten-notes-part-1-1h3b</link>
      <guid>https://dev.to/swastikyadav/how-javascript-works-the-execution-context-my-handwritten-notes-part-1-1h3b</guid>
      <description>&lt;p&gt;Hello Everyone!&lt;/p&gt;

&lt;p&gt;JavaScript is the most hated as well as most loved and popular programming language in the world.&lt;/p&gt;

&lt;p&gt;The reason for the hate is because most people don't understand the underlying beauty of JavaScript.&lt;/p&gt;

&lt;p&gt;In this series of posts we will explore: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How JavaScript works behind the scene?&lt;/li&gt;
&lt;li&gt;What is Execution Context?&lt;/li&gt;
&lt;li&gt;What is Call Stack?&lt;/li&gt;
&lt;li&gt;What is Hoisting in JavaScript?&lt;/li&gt;
&lt;li&gt;What is Event Loop?&lt;/li&gt;
&lt;li&gt;The "this" keyword?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And much more...&lt;/p&gt;

&lt;p&gt;I wil keep updating this post with further parts. Now let's dive in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-execution-context"&gt;
  &lt;/a&gt;
  The Execution Context
&lt;/h2&gt;

&lt;p&gt;Everything in JavaScript happens inside an &lt;strong&gt;Execution Context&lt;/strong&gt;. This Execution Context works in 2 phases.&lt;/p&gt;

&lt;p&gt;Both phases are known by multiple names.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Declaration Phase || Memory Allocation Phase || Creation Phase&lt;/li&gt;
&lt;li&gt;Execution Phase || Implementation Phase&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-declaration-phase"&gt;
  &lt;/a&gt;
  1 Declaration Phase
&lt;/h2&gt;

&lt;p&gt;In this phase JavaScript scans through the entire code and allocates memory to the variables and functions.&lt;/p&gt;

&lt;p&gt;Variables are initialized with &lt;strong&gt;Undefined&lt;/strong&gt; as value.&lt;/p&gt;

&lt;p&gt;That's it. This phase don't care about executing the code. It just initializes all the variables with undefined.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-execution-phase"&gt;
  &lt;/a&gt;
  2 Execution Phase
&lt;/h2&gt;

&lt;p&gt;In this phase &lt;strong&gt;Undefined&lt;/strong&gt; value of variables are replaced by the actual value.&lt;/p&gt;

&lt;p&gt;For all the function calls (invocation) a new &lt;strong&gt;Function Execution Context&lt;/strong&gt; (FEC) is created inside the &lt;strong&gt;Global Execution Context&lt;/strong&gt; (GEC is the main parent execution context).&lt;/p&gt;

&lt;p&gt;And this FEC will again follow the entire 2 phase process of execution context.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-handwritten-visual-notes"&gt;
  &lt;/a&gt;
  My handwritten visual notes
&lt;/h2&gt;

&lt;p&gt;Every execution context (global OR function) maintains a memory. For GEC it is the Global Memory and for FEC it is the local memory.&lt;/p&gt;

&lt;p&gt;First JavaScript looks in the local memory for a variable if not found then it looks for it in the global memory.&lt;/p&gt;

&lt;p&gt;Here are my handwritten visual notes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1jiOA921--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E24XAvYVUAc7eJG%3Fformat%3Djpg%26name%3Dlarge" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1jiOA921--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E24XAvYVUAc7eJG%3Fformat%3Djpg%26name%3Dlarge" alt="execution context notes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DjfvAYwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E24XAxnUYAApfmI%3Fformat%3Djpg%26name%3Dlarge" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DjfvAYwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E24XAxnUYAApfmI%3Fformat%3Djpg%26name%3Dlarge" alt="execution context notes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope these will help.&lt;/p&gt;




&lt;p&gt;In part 2 of this series we will discuss about how JS manages all these nested Function Execution Context. The Call Stack.&lt;/p&gt;

&lt;p&gt;If you enjoyed it or found useful, please consider joining my weekly Newsletter: &lt;a href="https://www.getrevue.co/profile/codeswastik"&gt;https://www.getrevue.co/profile/codeswastik&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>GitHub-101</title>
      <author>Hafiz Muhammad Attaullah</author>
      <pubDate>Thu, 03 Jun 2021 07:12:33 +0000</pubDate>
      <link>https://dev.to/attaullahshafiq10/github-101-lpa</link>
      <guid>https://dev.to/attaullahshafiq10/github-101-lpa</guid>
      <description>&lt;p&gt;Every time I share my opensource code, most of time people asks me a common question, What is GITHUB???&lt;br&gt;
So&lt;br&gt;
Basically writing code can be complex, but it’s a lot easier with the right support and tools. In order to become an elite programmer, you need version control support and also the support of others who code. Whether they are members of your team, or are just generally familiar with the type of problem you are trying to solve, finding helpful individuals who can give you guidance and help you elevate your work is essential in the world of programming.&lt;/p&gt;

&lt;p&gt;GitHub brings together teams and coding experts onto one collaborative platform where they can share ideas and methods and make awesome software together. But just what is GitHub, what is GitHub for, how does it work, and what makes it so beneficial? This brief GitHub tutorial will help you get started as you learn how to use GitHub.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-github"&gt;
  &lt;/a&gt;
  What is GitHub?
&lt;/h2&gt;

&lt;p&gt;GitHub is one of the world’s largest community of developers. It’s an intricate platform that fosters collaboration and communication between developers. GitHub has a number of useful features that enable development teams to work together on the same project and easily create new versions of software without disrupting the current versions, but it doesn’t stop there.&lt;/p&gt;

&lt;p&gt;Once new additions to a program are complete, for example, they can easily be incorporated into existing programs. GitHub also makes it extremely simple to work together on strings of code to really dial in and perfect even the smallest parts of a program. With GitHub, you can collaborate and work on projects with others anywhere in the world.&lt;/p&gt;

&lt;p&gt;Of course, that’s only scratching the surface, because when it comes to the question “What is GitHub?” the answer is all about what it can do for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-benefits-of-github"&gt;
  &lt;/a&gt;
  What are the Benefits of GitHub?
&lt;/h2&gt;

&lt;p&gt;Why use GitHub? There are a number of reasons.. The first is that it enables slick and easy collaboration and version control. This allows you to work on code with anyone from anywhere. Additionally, many employers use GitHub. So, if you plan on getting a job, you’ll look really good if you already know your way around GitHub. And don’t forget about the connections, learning, and portfolio aspects. GitHub is a robust learning and collaboration platform. Take time to explore it and see just how much it can expand your programming knowledge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-use-a-github"&gt;
  &lt;/a&gt;
  How do I Use a GitHub?
&lt;/h2&gt;

&lt;p&gt;GitHub is complex, but understanding a few basics will help you get started. In order to use GitHub, you’ll need to first be able to complete these few steps. How to use GitHub:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sign-up-for-github"&gt;
  &lt;/a&gt;
  Sign up for GitHub
&lt;/h2&gt;

&lt;p&gt;Install Git&lt;br&gt;
Create a Repository&lt;br&gt;
Create a Branch&lt;br&gt;
Create and Commit Changes to a Branch&lt;br&gt;
Open a Pull Request&lt;br&gt;
Merge Your Pull Request&lt;/p&gt;

&lt;p&gt;More About GitHub: The Open Source Community&lt;br&gt;
There’s a lot to explore in GitHub. We’ve only scratched the surface so far, but we hope that brief GitHub tutorial was beneficial. You’ll quickly come to learn that GitHub is much more than just a version-control platform. You’ll find it’s almost a type of social media platform for programmers. The GitHub open source community gives you access to millions of open source projects. There you can get involved with a project or start one of your very own. Working on open source software is an awesome way to learn new skills and collaborate with bright programmers from whom you can learn a lot.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#promoting-your-github-profile"&gt;
  &lt;/a&gt;
  Promoting Your GitHub Profile
&lt;/h2&gt;

&lt;p&gt;GitHub is a great place to not only expand your programming knowledge, but also showcase your best work. Your GitHub Profile is a great place for recruiters to find you and reach out about potential jobs and projects. Many people strive to gain GitHub followers by writing engaging and helpful blog posts, or even by creating podcasts or YouTube GitHub tutorials. The more followers you have, the more opportunities will be open to you, and the greater ability you’ll have to become a thought leader in the programming space.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-and-growing-with-github"&gt;
  &lt;/a&gt;
  Learning and Growing With GitHub
&lt;/h2&gt;

&lt;p&gt;The best programmers are always learning. The world of computer programming is constantly evolving and new problems are being solved with code every day. In order to stay sharp, you need to be consistently discovering new ways to tackle problems. You need to be trying new things and collaborating with other programmers. The coding community is a tight-knit one, but it’s also large. There are so many people to learn from. GitHub has a wealth of features that enable you to collaborate with and learn from the best in the industry. Take some time to explore GitHub and discover how you can unlock your full potential and become an expert programmer.&lt;/p&gt;

&lt;p&gt;You can follow me on Github: &lt;a href="https://github.com/attaullahshafiq10"&gt;https://github.com/attaullahshafiq10&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>opensource</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to never type passwords when using Git</title>
      <author>Michelle Mannering</author>
      <pubDate>Thu, 03 Jun 2021 06:54:01 +0000</pubDate>
      <link>https://dev.to/github/how-to-never-type-passwords-when-using-git-18bb</link>
      <guid>https://dev.to/github/how-to-never-type-passwords-when-using-git-18bb</guid>
      <description>&lt;p&gt;Have you been using Git on the command line? Notice how you have to &lt;em&gt;always&lt;/em&gt; type in your password? Not only is this SUPER annoying, it also presents a security issue. Here's a bunch of ways to authenticate Git so you don't have to type a password with every action. It will also keep your code more safe and secure.&lt;/p&gt;

&lt;p&gt;If you're using Git and GitHub then there are a few ways to authenticate to ensure your code is secure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ssh-keys"&gt;
  &lt;/a&gt;
  SSH keys
&lt;/h2&gt;

&lt;p&gt;If you work in tech, you've probably heard the term SSH keys. The term often comes up when you're trying to login or use a cloud service outside a web browser. It's also a term associated with connecting from one machine to another.&lt;/p&gt;

&lt;p&gt;SSH or Secure Shell keys is the name of the key (or protocol) used when you need to authenticate in order to use a provider. Using SSH protocol makes a network much more secure. Someone can't just login remotely from one system into another. Instead, the encryption is used to manage this login and therefore secure your login details.&lt;/p&gt;

&lt;p&gt;There are lots of different types of SSH keys. If you're on Windows, a lot of SSH credentials are done for you. If you're using macOS, you can generate SSH keys in order to authenticate your GitHub account. Check out the &lt;a href="https://docs.github.com/en/github-ae@latest/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"&gt;GitHub Docs&lt;/a&gt; for how to manually generate keys.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#personal-access-tokens"&gt;
  &lt;/a&gt;
  Personal Access Tokens
&lt;/h2&gt;

&lt;p&gt;You don't just have to use the terminal in order to generate keys. If the command line isn't your cup of tea, then you can generate keys from the GitHub web:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to GitHub.com&lt;/li&gt;
&lt;li&gt;Select "Settings"&lt;/li&gt;
&lt;li&gt;Scroll down and select "Developer Settings" from the left&lt;/li&gt;
&lt;li&gt;Select "Personal Access Tokens" from the left&lt;/li&gt;
&lt;li&gt;Create your Token
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aqMqbrqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qcc6n1lusdc0fwfu9zmo.JPG" alt="Tokens"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In these settings you can generate and manage tokens.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#oauth-applications"&gt;
  &lt;/a&gt;
  OAuth Applications
&lt;/h2&gt;

&lt;p&gt;There's also a way for you to track which applications have access to your GitHub account:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to GitHub.com&lt;/li&gt;
&lt;li&gt;Select "Settings"&lt;/li&gt;
&lt;li&gt;Scroll down to "Applications"&lt;/li&gt;
&lt;li&gt;Click "Authorized OAuth Apps"&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now you can see which applications have access to your GitHub account and revoke any if necessary.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rsmY6lXO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvopnvj8mrye4hbbetk6.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rsmY6lXO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvopnvj8mrye4hbbetk6.JPG" alt="OAuth"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note, this isn't the same place as your Developer Settings OAuth Apps. If you are creating applications and you want to enable GitHub authentication, then check out the &lt;a href="https://docs.github.com/en/developers/apps/building-oauth-apps"&gt;GitHub Docs on creating and authorising OAuth apps&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#credential-manager"&gt;
  &lt;/a&gt;
  Credential Manager
&lt;/h2&gt;

&lt;p&gt;Unless you're a Windows user (👋 there) you would have noticed you need to enter your password with every Git operation. When you install Git on Windows, a credential manager is automatically installed on your computer. This means you only need to log into your account once and then you are authenticated.&lt;/p&gt;

&lt;p&gt;We can replicate this on macOS and Linux as well. Using a client manager such as &lt;a href="https://dev.toGit-Crediential-Manager-Core"&gt;Git Credential Manager Core (GCM Core)&lt;/a&gt; is one way to do single-factor authentication on macOS and Linux. The Linux version of this is still in preview, but you can try it out now.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/microsoft"&gt;
        microsoft
      &lt;/a&gt; / &lt;a href="https://github.com/microsoft/Git-Credential-Manager-Core"&gt;
        Git-Credential-Manager-Core
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Secure, cross-platform Git credential storage with authentication to GitHub, Azure Repos, and other popular Git hosting services.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Git Credential Manager Core&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/Git-Credential-Manager-Core/actions/workflows/continuous-integration.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aaSdQUFB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/microsoft/Git-Credential-Manager-Core/actions/workflows/continuous-integration.yml/badge.svg" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/microsoft/Git-Credential-Manager-Core"&gt;Git Credential Manager Core&lt;/a&gt; (GCM Core) is a secure Git credential helper built on &lt;a href="https://dotnet.microsoft.com" rel="nofollow"&gt;.NET&lt;/a&gt; that runs on Windows and macOS. Linux support is in an early preview.&lt;/p&gt;
&lt;p&gt;Compared to Git's built-in credential helpers (Windows: wincred, macOS: osxkeychain, Linux: gnome-keyring) which provides single-factor authentication support working on any HTTP-enabled Git repository, GCM Core provides multi-factor authentication support for &lt;a href="https://dev.azure.com/" rel="nofollow"&gt;Azure DevOps&lt;/a&gt;, Azure DevOps Server (formerly Team Foundation Server), GitHub, and Bitbucket.&lt;/p&gt;
&lt;p&gt;Git Credential Manager Core (GCM Core) replaces the .NET Framework-based &lt;a href="https://github.com/microsoft/Git-Credential-Manager-for-Windows"&gt;Git Credential Manager for Windows&lt;/a&gt; (GCM), and the Java-based &lt;a href="https://github.com/microsoft/Git-Credential-Manager-for-Mac-and-Linux"&gt;Git Credential Manager for Mac and Linux&lt;/a&gt; (Java GCM), providing a consistent authentication experience across all platforms.&lt;/p&gt;
&lt;h2&gt;
Current status&lt;/h2&gt;
&lt;p&gt;Git Credential Manager Core is currently available for macOS and Windows, with Linux support in preview. If the Linux version of GCM Core is insufficient then SSH still remains an option:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops" rel="nofollow"&gt;Azure DevOps SSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/en/articles/connecting-to-github-with-ssh"&gt;GitHub SSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://confluence.atlassian.com/bitbucket/ssh-keys-935365775.html" rel="nofollow"&gt;Bitbucket&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/microsoft/Git-Credential-Manager-Core"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you want to try a few things other than the Git command line or webpage, there are a few options.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authenticate-with-github-desktop"&gt;
  &lt;/a&gt;
  Authenticate with GitHub Desktop
&lt;/h2&gt;

&lt;p&gt;After &lt;a href="https://desktop.github.com/"&gt;GitHub Desktop&lt;/a&gt; was launched a couple of years ago, this application has been a great way to use GitHub. Not only can you can you manage your repos, but it's a great way to authenticate and manage your account.&lt;/p&gt;

&lt;p&gt;Download GitHub Desktop and log into your account. This will open a browser window so you can authenticate. There's also a light and dark mode!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aMNzP_D6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zy70t9matol9yyew7t8r.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aMNzP_D6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zy70t9matol9yyew7t8r.gif" alt="DesktopZoom"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In a similar way you can also authenticate various applications such as editors like &lt;a href="https://code.visualstudio.com/"&gt;VS Code&lt;/a&gt; or &lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt; or other git clients like &lt;a href="https://www.gitkraken.com/"&gt;Git Kraken&lt;/a&gt;. Don't forget you can go into OAuth settings to see which applications you've given access to GitHub.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-cli"&gt;
  &lt;/a&gt;
  GitHub CLI
&lt;/h2&gt;

&lt;p&gt;Yes it's still the command line, but GitHub has its own CLI. You can &lt;a href="https://cli.github.com/"&gt;download it&lt;/a&gt; then use &lt;code&gt;gh auth login&lt;/code&gt; and follow the steps. This will allow access to your GitHub account and you can continue using the command line as normal. You can even use &lt;code&gt;gh auth login --with-token&lt;/code&gt; to use a personal token.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hJnpbKcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4p6luatvuo0c3vo8su6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hJnpbKcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4p6luatvuo0c3vo8su6.gif" alt="v1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The CLI is available on Windows, macOS, and Linux. It's completely free and it's &lt;a href="https://github.com/cli/cli"&gt;open source&lt;/a&gt; so you can even contribute to it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-physical-security-keys"&gt;
  &lt;/a&gt;
  Using physical security keys
&lt;/h2&gt;

&lt;p&gt;Lately, physical security keys, such as a &lt;a href="https://www.yubico.com/"&gt;YubiKey&lt;/a&gt;, have been very popular. They are a great way to secure and can't be replicated.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--97FEoI52--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8hqy9zbs92nj6oy6j6r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--97FEoI52--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8hqy9zbs92nj6oy6j6r.png" alt="YubiKey"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;YubiKeys are also really easy to setup:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to GitHub.com&lt;/li&gt;
&lt;li&gt;Click "Account Security"&lt;/li&gt;
&lt;li&gt;Scroll down to "Security keys" and click "edit"&lt;/li&gt;
&lt;li&gt;Select "Register new security key" and follow the prompts&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you decide to setup a security key, you'll need to save your recovery codes in a secure location. If you have 2FA or security keys for your account, recovery codes are the only way to access your account if you lose your YubiKey or can't use your 2FA.&lt;/p&gt;

&lt;p&gt;YubiKeys are also really great because they can be used on desktops, laptops, and mobile phones. There's a bunch of different types from Lighting, to USB-A, USB-C, and even NFC. Read more about security keys &lt;a href="https://docs.github.com/en/github/authenticating-to-github/securing-your-account-with-two-factor-authentication-2fa/configuring-two-factor-authentication#configuring-two-factor-authentication-using-a-security-key"&gt;on the GitHub Docs&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#up-your-security-and-save-time"&gt;
  &lt;/a&gt;
  Up your security and save time
&lt;/h2&gt;

&lt;p&gt;Hopefully that gives you some ideas on how to take your security to the next level AND save time by not typing in your password with every Git command. If you want to read more about security keys or SSH keys, check out the &lt;a href="https://github.blog/2021-05-10-security-keys-supported-ssh-git-operations/"&gt;GitHub blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I'm curious to know what everyone's preferred method of authentication is. Let me know below.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
      <category>git</category>
      <category>security</category>
    </item>
    <item>
      <title>Essential concepts you need to know about React</title>
      <author>Paul Ccari</author>
      <pubDate>Thu, 03 Jun 2021 06:44:27 +0000</pubDate>
      <link>https://dev.to/paulclindo/essential-concepts-you-need-to-know-about-react-49g2</link>
      <guid>https://dev.to/paulclindo/essential-concepts-you-need-to-know-about-react-49g2</guid>
      <description>&lt;p&gt;I've been using React for a couple of years now but when I started learning it I didn't pay too much attention to what React does for me, like what React abstracts through its API and why do I need to use JSX to build components, or why do we need Babel and so on. So if you're starting learning React or working with it, you might find this post helpful to know about core concepts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-to-react"&gt;
  &lt;/a&gt;
  JavaScript to React
&lt;/h2&gt;

&lt;p&gt;Let's say we don't have any React library out there, we just have vanilla JavaScript and we need to create a simple page that only contains the text "I'm learning React Fundamentals"  in a &lt;code&gt;div&lt;/code&gt;  DOM node into the div with id root created.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"root"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create the &lt;code&gt;div&lt;/code&gt; HTML element using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement"&gt;document.createElement&lt;/a&gt; where we can pass as argument the &lt;code&gt;div&lt;/code&gt; as a tagName
&lt;/li&gt;
&lt;li&gt;Add the text "I'm learning React Fundamentals". We can use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent"&gt;textContent&lt;/a&gt; for it.&lt;/li&gt;
&lt;li&gt;Insert that created element into the document using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/append"&gt;Append&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"root"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rootElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I'm learning React Fundamentals&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;rootElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we'll get :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"root"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;I'm learning React Fundamentals&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Behind the scenes, this is what React does to create DOM nodes, in case you want to dig into it you  can take a look at &lt;a href="https://github.com/facebook/react/blob/ee432635724d5a50301448016caa137ac3c0a7a2/packages/react-dom/src/client/ReactDOMComponent.js#L416"&gt;the React source code&lt;/a&gt;. React abstracts this imperative browser API to give us a more declarative API to work with.&lt;/p&gt;

&lt;p&gt;With that explained, we can say that for creating react applications for the &lt;strong&gt;web&lt;/strong&gt; we need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React: Help us to create &lt;strong&gt;react&lt;/strong&gt; elements similar to creating an element in browser with &lt;code&gt;document.createElement&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;React DOM: Help us to render &lt;strong&gt;react&lt;/strong&gt; elements to the DOM similar to &lt;code&gt;append&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#using-raw-react-apis"&gt;
  &lt;/a&gt;
  Using Raw React APIs
&lt;/h2&gt;

&lt;p&gt;Now, let's create the same page we did before with Vanilla JavaScript but using React library. For that, we need to add external scripts so I'm gonna use &lt;code&gt;unpkg&lt;/code&gt; which is a cdn for everything on npm, so we can add just the url and we'll load the files for React and React DOM.&lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a React element using &lt;a href="https://reactjs.org/docs/react-api.html#createelement"&gt;createElement&lt;/a&gt; which receives these params :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;type&lt;/strong&gt; : It can be a type of element, can be a string like &lt;code&gt;div&lt;/code&gt;, &lt;code&gt;span&lt;/code&gt;, etc or a React Component(which is usually a class or a function), or can be a React Fragment type&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;props&lt;/strong&gt; : An object containing properties&lt;/li&gt;
&lt;li&gt;[...&lt;strong&gt;children] :&lt;/strong&gt;  It can be a string (will be interpreted as text), or reference to other components that will allow us to nest elements. The rest from the third param is going to be the children.  Take in mind that, &lt;code&gt;children&lt;/code&gt; is a special prop in React&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Render React Element to the DOM using &lt;a href="https://reactjs.org/docs/react-dom.html#render"&gt;ReactDOM.render&lt;/a&gt; which receives these params:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;element :&lt;/strong&gt; A React element&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;container :&lt;/strong&gt; DOM node where the element will be inserted into
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"root"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/react@17.0.0/umd/react.development.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/react-dom@17.0.0/umd/react-dom.development.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rootElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I'm learning React Fundamentals&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rootElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, Imagine that we want to render a list of fruit like using raw React API :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;List of my favorite fruits&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Apple&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Orange&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That would be like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rootElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;List of my favorite fruits&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ul&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
            &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Orange&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rootElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Does that look easier to understand to you? It might be but imagine using React in this way in large applications. It can be hard to read and maintain so that's when comes &lt;code&gt;JSX&lt;/code&gt; which is a HTML-like syntactic sugar on top of raw React API's. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-jsx"&gt;
  &lt;/a&gt;
  Using JSX
&lt;/h2&gt;

&lt;p&gt;JSX is not JavaScript which means that the browser will not understand natively so we need to use a code compiler such as &lt;code&gt;Babel&lt;/code&gt; that will transform into standard Javascript &lt;/p&gt;

&lt;p&gt;You can play around &lt;a href="https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&amp;amp;build=&amp;amp;builtIns=App&amp;amp;corejs=3.6&amp;amp;spec=false&amp;amp;loose=false&amp;amp;code_lz=MYewdgzgLgBApgGzgWzmWBeGAeAFgRhmAQEMIIA5E1DAIigEsolaA-ASRgBkQA3OGACU4JYFACE2APQFWAKCA&amp;amp;debug=false&amp;amp;forceAllTransforms=false&amp;amp;shippedProposals=false&amp;amp;circleciRepo=&amp;amp;evaluate=false&amp;amp;fileSize=false&amp;amp;timeTravel=false&amp;amp;sourceType=module&amp;amp;lineWrap=true&amp;amp;presets=react&amp;amp;prettier=true&amp;amp;targets=&amp;amp;version=7.14.4&amp;amp;externalPlugins="&gt;here to see how babel complies JSX to JavaScript&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I Love React!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// ↓ ↓ ↓ ↓ compiles to ↓ ↓ ↓ ↓&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I Love React!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As demonstrated, JSX provides us a concise and familiar syntax for defining a tree structure that doesn't require learning a templating language or leaving javascript. Although you need to be aware of &lt;a href="https://reactjs.org/docs/jsx-in-depth.html"&gt;JSX Gotchas&lt;/a&gt; like: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;User-Defined Components must be capitalized&lt;/strong&gt;: When the react element starts with a lowercase letter, it'll take as a built-in component like &lt;code&gt;span&lt;/code&gt;, &lt;code&gt;div&lt;/code&gt;, &lt;code&gt;h1&lt;/code&gt;. So let's say you create a &lt;code&gt;titlepage&lt;/code&gt; component
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;titlepage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;titlepage&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;My first blog!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;titlepage&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// ↓ ↓ ↓ ↓ compiles↓ ↓ ↓ ↓&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;titlepage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_ref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;**titlepage**&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// =&amp;gt; ⚠️ titlepage is parsed as a string and doesn't take as a component/function&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Plus, you'll get an error in your console  and it'll suggest you name it starting with an uppercase letter&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Error: The tag &amp;lt;titlepage&amp;gt; is unrecognized in this browser. &lt;/span&gt;
&lt;span class="c1"&gt;// If you meant to render a React component, start its name with an uppercase letter.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-notes"&gt;
  &lt;/a&gt;
  Final Notes
&lt;/h2&gt;

&lt;p&gt;I would encourage you to  spend some time with the source code in React, play around with JSX in the &lt;a href="https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&amp;amp;build=&amp;amp;builtIns=App&amp;amp;corejs=3.6&amp;amp;spec=false&amp;amp;loose=false&amp;amp;code_lz=MYewdgzgLgBApgGzgWzmWBeGAeAFgRhmAQEMIIA5E1DAIigEsolaA-ASRgBkQA3OGACU4JYFACE2APQFWAKCA&amp;amp;debug=false&amp;amp;forceAllTransforms=false&amp;amp;shippedProposals=false&amp;amp;circleciRepo=&amp;amp;evaluate=false&amp;amp;fileSize=false&amp;amp;timeTravel=false&amp;amp;sourceType=module&amp;amp;lineWrap=true&amp;amp;presets=react&amp;amp;prettier=true&amp;amp;targets=&amp;amp;version=7.14.4&amp;amp;externalPlugins="&gt;online babel REPL&lt;/a&gt; to see the compiled version of that code, so you can be better at understanding, reading and using it. Knowing what the abstraction does, will you make more effective to use it. &lt;/p&gt;

&lt;p&gt;Here are a few miscellaneous link related that help me to understand behind the scenes of  React&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/13-things-you-need-to-know-about-react-d2e6a6422552"&gt;13 things you need to know about React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@singhsourav206/playing-with-react-elements-c262d345c130"&gt;Fun with React Elements and JSX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you have the chance, I would recommend to take &lt;a href="https://epicreact.dev"&gt;EpicReact course&lt;/a&gt; by Kent C. Dodds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope you enjoyed it. Thanks for reading!&lt;/p&gt;

&lt;p&gt;... As always, enjoy your process of learning 🚀&lt;/p&gt;

&lt;p&gt;Feel free to &lt;a href="https://paulccari.com/"&gt;reach out&lt;/a&gt; if you wanna chat about anything.&lt;/p&gt;

</description>
      <category>react</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>7 Steps to Become an Expert Software Engineer without endless online courses or waiting for years...</title>
      <author>Dragos Nedelcu</author>
      <pubDate>Thu, 03 Jun 2021 06:34:26 +0000</pubDate>
      <link>https://dev.to/dragosgn/7-steps-to-become-an-expert-software-engineer-without-endless-online-courses-or-waiting-for-years-m8j</link>
      <guid>https://dev.to/dragosgn/7-steps-to-become-an-expert-software-engineer-without-endless-online-courses-or-waiting-for-years-m8j</guid>
      <description>&lt;h3&gt;
  &lt;a href="#does-this-sound-familiar-to-you"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Does this sound familiar to you?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;If you are a coder, programmer or software developer then you probably know situations like these:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You want to improve your coding skills but you are quickly overwhelmed by the endless information out there and don’t know what to do next...&lt;/li&gt;
&lt;li&gt;You have spent hours on online courses, but got stuck and frustrated and did not manage to finish them...
You suffer from impostor syndrome on a daily basis, struggle to work independently and are constantly afraid you are not good enough...&lt;/li&gt;
&lt;li&gt;You are forced to stay in a job you don’t like, underpaid or burn out and wonder if software development is really for you...&lt;/li&gt;
&lt;li&gt;You keep hearing that if you keep on coding, one day it will click…&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#are-you-facing-this-kind-of-difficulties-right-now"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Are you facing this kind of difficulties right now?&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;If you are like most software developers, then you will be confronted with situations like these over and over.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is why:&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#you-lack-a-system-in-your-technical-growth"&gt;
  &lt;/a&gt;
  &lt;em&gt;You lack a system in your technical growth.&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;You lack a defined process that guarantees you develop complete skills no matter how motivated you are to practice, no matter what technology is the latest trend or the kind of developer you are.&lt;/p&gt;

&lt;p&gt;Think about it: how many times have you struggled with what to do next to become a better developer just because you had no plan?&lt;/p&gt;

&lt;p&gt;You have to build a system around your technical skills if you really want to code with confidence and never feel like an impostor ever again.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-is-this-so-important"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why is this so important?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Here is the thing: not having a structured process for your technical growth is why 80% of coders, programmers and software developers NEVER reach their goal of getting promoted, landing a better job and earning more.&lt;/p&gt;

&lt;p&gt;Simply because not having a system forces you to improvise (so you &lt;strong&gt;waste your time with the same online courses&lt;/strong&gt; everyone else is doing that don’t even apply to real-life situations).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How are you supposed to improve your technical skills consistently when you are improvising all the time?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Therefore it is absolutely necessary to build a professional system that you can finally get rid of the impostor syndrome, code with confidence and become an expert software engineer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-is-the-solution-you-need"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Here is the solution you need:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;As a software developer, I have been there myself and I know this situation really well. First when I moved to a totally new country, Germany. Being new in the city, I jumped to the first developer job I could get, just to end up stuck with little progression and no opportunities for growth.&lt;/p&gt;

&lt;p&gt;Second, when I left my “&lt;em&gt;startup job&lt;/em&gt;” and dreamed of joining a top tech company. I lacked the professional software development skills, the visibility and the mindset to get me there.&lt;/p&gt;

&lt;p&gt;Luckily, a mentor opened my eyes. Following his advice, I &lt;strong&gt;built a system around my growth&lt;/strong&gt;, focused on technical skills. As a result, I quickly became an expert in my stack, fast-tracked into the senior level, and landed a better job at a top technology company.&lt;/p&gt;

&lt;p&gt;In the last year, I helped other 100 software developers like you become expert engineers using the same system and now I can show you the 7 steps that will help you solve this:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-1-analysis-and-strategy"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 1 - Analysis and Strategy&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;The first step to building a system around your growth as a software developer is to &lt;strong&gt;make an objective analysis&lt;/strong&gt; of your current skills.&lt;/p&gt;

&lt;p&gt;What are your strengths? What are your weaknesses? Do you struggle with the programming fundamentals, coding syntax or structuring solutions? Are you able to see beyond the code, to analyse the design?&lt;/p&gt;

&lt;p&gt;Find the gaps between an expert software engineer and your skills. Your time is limited, so you can’t learn everything. To get results, you need to focus.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Your time is limited, so you can’t learn everything.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The better the analysis phase, the better your understanding of what are the exact gaps you need to cover and the more effective the time you will invest later on. Now it is time to build a strategy to get you to the expert level.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2-become-a-real-fullstack-api-design"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 2 - Become a real “full-stack”: API Design&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Most training and courses focus on "hot technologies" such as React or GraphQL and miss out on more boring but essential topics. They do this because fancy technologies help them sell more courses. But the truth is, these hot frameworks recycle classic concepts from software development all the time. This is why to excel in the hottest new technologies you have to understand the fundamentals.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To excel in the hottest new technologies you have to understand the fundamentals.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The perfect place for software developers to understand the fundamentals? You guessed it: API Design. It doesn’t matter where you come from, backend or frontend. At the API level is where things meet. They talk a lot about what a real full-stack developer is these days, but 80% of those developers can’t even name the main three ways to version an API.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;At its core, you are more than a backend or a frontend developer, you are a web engineer.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here, don't just scratch the surface, explore performance, caching and testing. Go a bit deeper into the &lt;strong&gt;HTTP protocol and understand how the web really works&lt;/strong&gt;. At its core, you are more than a backend or a frontend developer, you are a web engineer.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-3-understand-the-full-software-cycle-continuous-integration"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 3 - Understand the full software cycle: Continuous Integration&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;The thing is if you are only able to contribute at the code level, your ability to help your team is limited. If you don't understand how to properly deploy applications, you will always need help to push your code and see it work.&lt;/p&gt;

&lt;p&gt;And because of the way teams are structured, &lt;strong&gt;most developers can’t usually get their hands dirty with deployment&lt;/strong&gt; (nobody wants you to mess around with code that will reach the users). But, if you never touch these topics, how will you ever learn them?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You must understand how code gets built, packaged, shipped and deployed.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To widen your perspective as a developer you must understand how code gets built, packaged, shipped and deployed. It is time for you to &lt;strong&gt;understand the full software lifecycle&lt;/strong&gt;, what continuous integration and delivery really mean and how you can deploy your own applications with the best practices.&lt;/p&gt;

&lt;p&gt;At the same time, cloud certifications require too much time and they go deep into topics that you as a developer don’t need to care about. &lt;strong&gt;Knowing at which network-level an application load balancer works is interesting but nor necessary&lt;/strong&gt;. Get a good understanding of cloud, version control and integration tools instead.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you understand how to deploy applications to the real-world, you will be able to assist your team from the coding phase until the deployment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you understand how to deploy applications to the real-world, you will be able to assist your team from the coding phase until a feature gets tested and deployed. Now, that’s an expert. And, who knows? Soon enough they will trust you enough and give you access to the company’s cloud account.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-4-think-like-an-expert-programmer-algorithmic-thinking-and-data-structures"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 4 - Think like an expert programmer: algorithmic thinking and data structures&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Basketball players train their muscle memory so they don’t even have to think when they pass the ball. They do it almost automatically, out of reflex. The same thing applies to efficient coders when it comes to programming challenges. Seniors do it almost by instinct, some call it intuition, others say it just comes with years.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Expert developers use mental frameworks that they refined over the years to solve any coding problem.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hear me out, it is no magic and it is completely learnable. It is not about memorising binary trees. It is about understanding the commonalities between those coding problems and having a structured process in approaching them. You have to focus on patterns instead of implementation details. And the keyword here is recursion.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It is not about memorising binary trees, it is about having a structured process when approaching coding problems.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This will come in handy not only in code challenges but also in your daily work as a software developer. Recursion is behind the DOM tree and even behind algorithms of the most popular frameworks such as React.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-5-specialisation-react-graphql-and-the-hottest-tech-out-there"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 5 - Specialisation: React, GraphQL and the "hottest" tech out there&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;At this stage, you developed a strong understanding of the core principles of software development. It is time for that extra step that will make you stand out. &lt;strong&gt;Specialisation will allow you to stand&lt;/strong&gt; out between other hundred developers claiming expertise left and right.&lt;/p&gt;

&lt;p&gt;If the backend is your thing, then go deeper into server-side development. If it is the frontend and you have been doing mostly React so far, time to touch other frameworks and dive deeper into &lt;strong&gt;concepts such as server-side rendering and performance&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The idea is not to just know about the latest frameworks, but to understand where the community is moving in that area, what are the specific challenges developers are facing on that platform and go beyond what the average developer knows.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The idea is not to just know about the latest frameworks, but to understand where the community is moving in that area.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this way you become more than a developer, you will be able to bring innovation to your company, even to the whole industry. Plus it is easier to stand out in a library released 3 years ago than an established one where you compete with more experienced developers.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-6-software-architecture-getting-to-the-big-picture"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 6 - Software Architecture: getting to the "Big Picture"&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Now that you find your way around code and you are also able to understand what happens to your apps after the coding phase, you are ready for the next step.&lt;/p&gt;

&lt;p&gt;Expert software engineers are able to have conversations with senior developers, tech leads and architects because they share a common understanding of programming concepts way beyond technologies and frameworks. They can abstract and see beyond the implementation. They understand the common principles of software architecture.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Expert developers are able to discuss with senior developers, tech leads and architects because they understand programming beyond libraries and frameworks.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, don't be scared. You won’t become an architect overnight. At this point, you should start thinking about how systems interact with each other. How can your application handle millions of users? How does it integrate with other systems? How can it communicate with the external world?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You need to develop an opinion about topics such as scalability, reliability and performance.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Time to grasp concepts such as scalability, reliability and performance. So that when that discussion on application performance happens, you don’t feel lost and can actually contribute. You will even be able to discuss technical solutions outside of your domain. This will allow you to move into a senior position or technical lead one.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-7-professional-image-invisible-talent-is-talent-no-one-cares-about"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 7 - Professional Image: invisible talent is talent no one cares about&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Nobody will hire you, contact you or invite you to give a tech talk if they don’t know about you. It is not 2010 and opportunities don’t fall on your lap just because you know how to code. So does every self-taught coder, bootcamp graduate, college student or junior developer.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It is not 2010 and opportunities don’t fall on your lap just because you know how to code.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, I know there are many so-called influencers out there saying you need to build up a personal brand, or that you need to Tweet every day. Or that your GitHub has to be extremely polished and the portfolio should grab attention.&lt;/p&gt;

&lt;p&gt;All those things are nice to have. &lt;strong&gt;In real-world companies care about two things&lt;/strong&gt;: your LinkedIn profile (that’s how they find you) and a surgically optimised CV. In the end, they are hiring a software developer, not an influencer.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How can you build a technical blog if you are struggling with React?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Influencers are telling you that you need to build a personal brand because that’s what they do. But just because that worked for them won’t work for you. How can you build a technical blog if you are struggling with React? &lt;strong&gt;For now, your time is better invested elsewhere&lt;/strong&gt;. To connect with other developers and tech leaders, you just need a tidy profile and to engage in conversations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That’s all - you don’t need anything else to become an expert developer.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Forget the 10 online courses you bought but never finished...&lt;/li&gt;
&lt;li&gt;Forget about memorising data structures and binary trees…&lt;/li&gt;
&lt;li&gt;Forget about solving all the problems on HackerRank...&lt;/li&gt;
&lt;li&gt;Forget about heavy programming books that take forever to finish…&lt;/li&gt;
&lt;li&gt;Forget about halfway youtube tutorials that always confuse you...&lt;/li&gt;
&lt;li&gt;Forget about technical blogging…&lt;/li&gt;
&lt;li&gt;Forget about building a personal brand…
Many of these things will just distract you.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Others such as your personal brand will become relevant once you are already at the senior level.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#these-7-steps-will-allow-you-to-code-with-confidence-never-feel-like-an-impostor-again-and-become-an-expert"&gt;
  &lt;/a&gt;
  &lt;strong&gt;These 7 steps will allow you to code with confidence, never feel like an impostor again and become an expert.&lt;/strong&gt;
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#it-is-actually-pretty-clear"&gt;
  &lt;/a&gt;
  &lt;strong&gt;It is actually pretty clear.&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;After you set up this system, you will be able to handle any technical issue at your job or in a job interview. You will be the one choosing for what company, with what technology and with whom to work. You will automatically become a highly demanded expert software engineer.&lt;/p&gt;

&lt;p&gt;No more hoping or guessing and waiting on the tech lead to recognise your value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So far I have set up this system with more than 100 coders, programmers and software developers and they constantly reach outstanding results.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Last week one of our mentees landed her first “high-paying” job (30% on top of the market) after only 6 weeks of working with us. Without even getting to software architecture, a portfolio or a personal brand. Those things are part of week 6 and 7 of the program :)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you are reading this, then you are most likely also an ambitious coder, programmer or software developer that wants to become an expert software engineer.&lt;/p&gt;

&lt;p&gt;So, if that is the case you will definitely benefit from implementing the 7 steps I mentioned above. You will get so much closer to your goal in a proven way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Regardless - we both know that reading a simple article on how to grow your technical skills will not get you the results you truly want.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want to get to that expert level right now, let me suggest: Get in touch with my team. You can apply for a free private consultation call with me, where we will go over each step in detail and build a plan to help you reach that expert level.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The only thing you need to do is click and fill the application form on our website.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Looking forward to consulting you soon.&lt;/p&gt;

&lt;p&gt;Dragos Nedelcu&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Angular : How to add reCAPTCHA feature in your angular app just in 5 minutes?</title>
      <author>Rajesh Kumar Yadav</author>
      <pubDate>Thu, 03 Jun 2021 06:10:20 +0000</pubDate>
      <link>https://dev.to/rajeshkumaryadavdotcom/angular-how-to-add-recaptcha-feature-in-your-angular-app-just-in-5-minutes-3lh0</link>
      <guid>https://dev.to/rajeshkumaryadavdotcom/angular-how-to-add-recaptcha-feature-in-your-angular-app-just-in-5-minutes-3lh0</guid>
      <description>&lt;p&gt;Step 1 - Install dependency&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;ng&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;recaptcha&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step -2 Open app.module.ts and add below import-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;RecaptchaModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ng-recaptcha&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also add this to imports -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;imports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;RecaptchaModule&lt;/span&gt;&lt;span class="p"&gt;,],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 3 - Open that component where you want to add human verification reCAPTCHA and then add below code -&lt;br&gt;&lt;br&gt;
yourcomponentname.component.html&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;re&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;captcha&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolved&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resolved($event)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;siteKey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6LcOuyYTAAAAAHTjFuqhA52fmfJ_j5iFk5PsfXaU&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/re-captcha&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;yourcomponentname.component.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;resolved&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;captchaResponse&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Resolved captcha with response: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;captchaResponse&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Write your logic here about once human verified what action you want to perform &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 5 - This siteKey will work on localhost, you must have to generate your own siteKey, for this please visit google.com/recaptcha and add your domain and generate key, it's very simple and then replace the new key to markup of step3.  &lt;/p&gt;

&lt;p&gt;All done.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>NumPy arrays, a broader look</title>
      <author>Chris Bongers</author>
      <pubDate>Thu, 03 Jun 2021 05:56:47 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/numpy-arrays-a-broader-look-54pf</link>
      <guid>https://dev.to/dailydevtips1/numpy-arrays-a-broader-look-54pf</guid>
      <description>&lt;p&gt;Now that we &lt;a href="https://daily-dev-tips.com/posts/installing-and-using-numpy-in-python/"&gt;installed NumPy&lt;/a&gt;, let's have a look at some of the details of what we can do with it.&lt;/p&gt;

&lt;p&gt;For today's article, we'll be at the following elements of NumPy arrays.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dimensions&lt;/li&gt;
&lt;li&gt;Joining arrays&lt;/li&gt;
&lt;li&gt;Splitting arrays&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dimensions-in-numpy-arrays"&gt;
  &lt;/a&gt;
  Dimensions in NumPy arrays
&lt;/h2&gt;

&lt;p&gt;When it comes to NumPy arrays, we can talk about several dimensions for this array.&lt;br&gt;
I'll be walking through some of these dimensions so you can see the difference and meaning between them.&lt;/p&gt;

&lt;p&gt;0-D Arrays&lt;br&gt;
Talking about the first level, a 0-D, we mean each value in an array!&lt;br&gt;
So to write it, this would be a 0-D array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"0-D"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# '0-D'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;1-D Arrays&lt;/p&gt;

&lt;p&gt;When this array has multiple elements, we call it a 1-D array.&lt;br&gt;
So, in general, a 1-Dimensional array contains multiple 0-D elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"1-D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"1-D"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# ['1-D' '1-D']
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2-D Arrays&lt;/p&gt;

&lt;p&gt;As you can imagine, a 2-D array is a combination of multiple 1-D arrays.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="s"&gt;"2-D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"2-D"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"2-D"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"2-D"&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# [['2-D' '2-D'] ['2-D' '2-D']]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3-D Arrays&lt;/p&gt;

&lt;p&gt;And again, if we have multiple 2-D arrays inside a bigger one, we can call it a 3-D array like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]]])&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# [[[3, 3], [3, 3]], [[3, 3], [3, 3]]]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are unsure about the dimensions and how many you got, you can use the &lt;code&gt;ndim&lt;/code&gt; attribute to retrieve this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]]])&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ndim&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# 0
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ndim&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# 2
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ndim&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# 3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#joining-arrays-with-numpy"&gt;
  &lt;/a&gt;
  Joining arrays with NumPy
&lt;/h2&gt;

&lt;p&gt;Sometimes we need to join multiple arrays, and NumPy has the &lt;code&gt;concatenate&lt;/code&gt; function for this.&lt;/p&gt;

&lt;p&gt;Let's say we have two 1-D arrays we want to join into one bigger one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concatenate&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# [1 2 3 4 5 6]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also combine a further dimension array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="n"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concatenate&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# [[1 2] [3 4] [5 6] [7 8]]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But in some cases, we might want to combine the 1,2, and 5,6 since they are on the same dimension.&lt;/p&gt;

&lt;p&gt;For this, we can specify the axis attribute on the concatenate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concatenate&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# [[1 2 5 6] [3 4 7 8]]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When combining arrays, we can also use &lt;code&gt;stacking&lt;/code&gt;; it's the same but always done along a new axis.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# [[1 4] [2 5] [3 6]]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You see, this combines the 1,4 and 2,5 etc.?&lt;/p&gt;

&lt;p&gt;We can also choose to stack along rows using &lt;code&gt;hstack&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hstack&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# [1 2 3 4 5 6]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it's one array again.&lt;/p&gt;

&lt;p&gt;Another option is to stack based on columns using the &lt;code&gt;vstack&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vstack&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# [[1 2 3] [4 5 6]]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last option is to use the &lt;code&gt;hstack&lt;/code&gt; along the height (depth) of the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dstack&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# [[[1 4] [2 5] [3 6]]]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So all and all, we have the option to make about every array dimension when combining arrays.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#splitting-arrays-with-numpy"&gt;
  &lt;/a&gt;
  Splitting arrays with NumPy
&lt;/h2&gt;

&lt;p&gt;After looking at combining, let's look at how we can split arrays.&lt;/p&gt;

&lt;p&gt;For this, we use the &lt;code&gt;array_split&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;The super cool feature to me is that you can state how many splits you want!&lt;br&gt;
So let's say we want to split this array into three pieces.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;split&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# [[1,2], [3,4], [5,6]]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is one feature that is super handy when handling large data sets.&lt;br&gt;
This also doesn't need equal items. It will make a smaller want in the end.&lt;/p&gt;

&lt;p&gt;Of course the splitting also works with multi-level arrays.&lt;/p&gt;

&lt;p&gt;Let's try and split this 3-D array into two pieces.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]]])&lt;/span&gt;
&lt;span class="n"&gt;split&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# [[[[3, 3], [3, 3]]], [[[3, 3], [3, 3]]]]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And much like the concatenate, we can split on a specific axis with the axis property.&lt;/p&gt;

&lt;p&gt;And like the &lt;code&gt;stack&lt;/code&gt; option split also comes with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;hsplit&lt;/code&gt;: Split along rows&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;vsplit&lt;/code&gt;: Split along columns&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;dsplit&lt;/code&gt;: Split along height (depth)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And with that, I just want to tell you again how powerful these arrays in NumPy are!&lt;br&gt;
If you ever had to split an array in JavaScript, you will have noted how much manual work it can be.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>Day 5: Loops</title>
      <author>Vijay Chauhan</author>
      <pubDate>Thu, 03 Jun 2021 04:25:55 +0000</pubDate>
      <link>https://dev.to/vijaychauhanssn/day-5-loops-37jm</link>
      <guid>https://dev.to/vijaychauhanssn/day-5-loops-37jm</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   'use strict';

   process.stdin.resume();
   process.stdin.setEncoding('utf-8');

   let inputString = '';
  let currentLine = 0;

  process.stdin.on('data', function(inputStdin) {
  inputString += inputStdin;
  });

  process.stdin.on('end', function() {
  inputString = inputString.split('\n');

 main();
 });

function readLine() {
 return inputString[currentLine++];
}


 function main() {
 const n = parseInt(readLine().trim(), 10);
 for (let i = 1; i&amp;lt;=10; i += 1){
    console.log(`${n} x ${i} = ${n * i}`)
 }
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Solution: Interleaving String</title>
      <author>seanpgallivan</author>
      <pubDate>Thu, 03 Jun 2021 04:25:43 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-interleaving-string-1497</link>
      <guid>https://dev.to/seanpgallivan/solution-interleaving-string-1497</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/interleaving-string/discuss/1248268"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-97-medium-interleaving-string"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/interleaving-string/"&gt;Leetcode Problem #97 (&lt;em&gt;Medium&lt;/em&gt;): Interleaving String&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given strings &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt;, and &lt;code&gt;s3&lt;/code&gt;, find whether &lt;code&gt;s3&lt;/code&gt; is formed by an &lt;strong&gt;interleaving&lt;/strong&gt; of &lt;code&gt;s1&lt;/code&gt; and &lt;code&gt;s2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An &lt;strong&gt;interleaving&lt;/strong&gt; of two strings &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; is a configuration where they are divided into &lt;strong&gt;non-empty&lt;/strong&gt; substrings such that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;s = s1 + s2 + ... + sn&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;t = t1 + t2 + ... + tm&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;|n - m| &amp;lt;= 1&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  The interleaving is &lt;code&gt;s1 + t1 + s2 + t2 + s3 + t3 + ...&lt;/code&gt; or &lt;code&gt;t1 + s1 + t2 + s2 + t3 + s3 + ...&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;a + b&lt;/code&gt; is the concatenation of strings &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;s1 = "aabcc", s2 = "dbbca", s3 = "aadbbcbcac"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ugKit1a---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2020/09/02/interleave.jpg" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;s1 = "aabcc", s2 = "dbbca", s3 = "aadbbbaccc"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;s1 = "", s2 = "", s3 = ""&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= s1.length, s2.length &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= s3.length &amp;lt;= 200&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt;, and &lt;code&gt;s3&lt;/code&gt; consist of lowercase English letters.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;If we consider a matrix with indices (&lt;strong&gt;i&lt;/strong&gt;) for &lt;strong&gt;s1&lt;/strong&gt; on one axis and indices (&lt;strong&gt;j&lt;/strong&gt;) for &lt;strong&gt;s2&lt;/strong&gt; on the other, then a successful &lt;strong&gt;s3&lt;/strong&gt; can be considered a path moving from the top left to the bottom right. At each point, we either move downward (&lt;strong&gt;i++&lt;/strong&gt;) by choosing the next letter from &lt;strong&gt;s1&lt;/strong&gt; or rightward (&lt;strong&gt;j++&lt;/strong&gt;) by choosing the next letter from &lt;strong&gt;s2&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;All that remains, then, is to see which vertices are possible given &lt;strong&gt;s3&lt;/strong&gt;, and which ones are not. To do that, we can use a &lt;strong&gt;dynamic programming&lt;/strong&gt; (&lt;strong&gt;DP&lt;/strong&gt;) approach. We should establish a matrix (&lt;strong&gt;dp&lt;/strong&gt;) as described above, along with a buffer row/column to the start of &lt;strong&gt;dp&lt;/strong&gt; to provide space for previous row/column validation checks for the leading edges of our iteration.&lt;/p&gt;

&lt;p&gt;Since cells are validated from the left or from above, we should also remember to fill either the cell to the left or above the initial cell (&lt;strong&gt;dp[0][1]&lt;/strong&gt; or &lt;strong&gt;dp[1][0]&lt;/strong&gt;) with a &lt;strong&gt;true&lt;/strong&gt; (or &lt;strong&gt;1&lt;/strong&gt;) value, representing a valid vertex at the starting position of our iteration path.&lt;/p&gt;

&lt;p&gt;From there, we can iterate through the matrix rightward and downward, building upon previously completed entries to check the validity of the current cell. If the cell above is valid (&lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;1&lt;/strong&gt;) and the corresponding characters of &lt;strong&gt;s1&lt;/strong&gt; and &lt;strong&gt;s3&lt;/strong&gt; match, then the current cell is valid. Similarly, if the cell to the left is valid and the corresponding characters of &lt;strong&gt;s2&lt;/strong&gt; and &lt;strong&gt;s3&lt;/strong&gt; match, then the current cell is valid.&lt;/p&gt;

&lt;p&gt;Once we've finished iterating through &lt;strong&gt;i&lt;/strong&gt; and &lt;strong&gt;j&lt;/strong&gt;, a valid value in the bottom right cell of &lt;strong&gt;dp&lt;/strong&gt; will indicate that a valid path exists that matches &lt;strong&gt;s3&lt;/strong&gt;, so we can just &lt;strong&gt;return&lt;/strong&gt; the contents of that cell.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N * M)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;s1&lt;/strong&gt; and &lt;strong&gt;M&lt;/strong&gt; is the length of &lt;strong&gt;s2&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(N * M)&lt;/strong&gt; for the &lt;strong&gt;dp&lt;/strong&gt; matrix&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;isInterleave&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Uint8Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;up&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;up&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isInterleave&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;isInterleave&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;sc1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toCharArray&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;sc2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toCharArray&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;sc3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toCharArray&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;sc1&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;sc3&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]),&lt;/span&gt;
                    &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;sc2&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;sc3&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
                &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;isInterleave&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
                    &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
                &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Effective Java: Refer to Objects By Their Interfaces</title>
      <author>Kyle Carter</author>
      <pubDate>Thu, 03 Jun 2021 04:17:11 +0000</pubDate>
      <link>https://dev.to/kylec32/effective-java-refer-to-objects-by-their-interfaces-1278</link>
      <guid>https://dev.to/kylec32/effective-java-refer-to-objects-by-their-interfaces-1278</guid>
      <description>&lt;p&gt;This topic of today is focussed on flexibility. When defining parameters, return types, or variables it is encouraged to define them as the interface that the concrete types implement. So instead of something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;LinkedHashSet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;stringSet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;LinkedHashSet&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we should instead implement something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;Set&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;stringSet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;LinkedHashSet&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What writing our code like this allows us to do is change out the implementation of our variables as long as they meet the same interfaces. So maybe instead of using a &lt;code&gt;LinkedHashSet&lt;/code&gt; like defined in the first example we could change it to a &lt;code&gt;HashSet&lt;/code&gt; without having to change any other code. That being said we do need to know if there are attributes of the previous implementation that the code is relying on (such as the ordering guarantees of &lt;code&gt;LinkedHashSet&lt;/code&gt; vs &lt;code&gt;HashSet&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;What are some reasons we might decide to change the implementation? Some examples might be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Performance improvements&lt;/li&gt;
&lt;li&gt;Memory savings&lt;/li&gt;
&lt;li&gt;Desired additional functionality (such as ordering guarantees)&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While it may be possible in some situations to change all type declarations if we wanted to change the concrete type of a variable, it will be much more painful and that extra cost may end up being enough of an obstacle that it is not worth it to make the change. &lt;/p&gt;

&lt;p&gt;Let's consider some of the reasons we may not choose to follow this advice or be able to follow this advice.&lt;/p&gt;

&lt;p&gt;If the types we are using don't have any expectation of alternate implementations such as &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;BigInteger&lt;/code&gt;, etc we choose to not use interfaces in these cases (in fact we don't have an option to use an interface since none exists). &lt;/p&gt;

&lt;p&gt;Some class hierarchies are not based on interfaces but are based on inheritance. In these cases the alternative is often to use a base class for the type (often an abstract type). An example of this would be &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; to &lt;code&gt;OutputStream&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A final idea would be that, even though an interface exists, we choose not to use it due to wanting to call into a specific function only available on a unique concrete type that doesn't exist on the interface. An example of this would be &lt;code&gt;PriorityQueue&lt;/code&gt;'s &lt;code&gt;comparator&lt;/code&gt; interface that is missing from the &lt;code&gt;Queue&lt;/code&gt; interface.&lt;/p&gt;

&lt;p&gt;Even above and beyond the main focus of this chapter being focussing on using interfaces over concrete classes this chapter really is talking about focusing on using the most generic type that gets the job done. The ultimate generic type would be that of &lt;code&gt;Object&lt;/code&gt; but that type often doesn't provide us with the method we need to get our job down so we keep moving down the class hierarchy until we hit something good enough to be used. An example of this that I run into fairly often is passing a collection of objects to a method and iterating over it. Instead of taking a parameter of type &lt;code&gt;List&lt;/code&gt; for example I could instead take &lt;code&gt;Iterable&lt;/code&gt; which leaves my options more open. Flexibility is a super power when developing. We should look for opportunities to increase our flexibility wherever we can and this is one more opportunity for us to accomplish that. &lt;/p&gt;

</description>
      <category>java</category>
      <category>effective</category>
      <category>interface</category>
      <category>architecture</category>
    </item>
  </channel>
</rss>
