<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>üèê Ultimate Volleyball: A 3D Volleyball environment built using Unity ML-Agents</title>
      <author>Joy</author>
      <pubDate>Wed, 11 Aug 2021 02:13:33 +0000</pubDate>
      <link>https://dev.to/joooyz/ultimate-volleyball-a-3d-volleyball-environment-built-using-unity-ml-agents-5hmd</link>
      <guid>https://dev.to/joooyz/ultimate-volleyball-a-3d-volleyball-environment-built-using-unity-ml-agents-5hmd</guid>
      <description>&lt;p&gt;Inspired by &lt;a href="https://github.com/hardmaru/slimevolleygym"&gt;Slime Volleyball Gym&lt;/a&gt;, I built a 3D Volleyball environment using Unity's &lt;a href="https://github.com/Unity-Technologies/ml-agents"&gt;ML-Agents toolkit&lt;/a&gt;. The full project is open-source and available at: &lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball"&gt;üèê Ultimate Volleyball&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you're interested in an overview of the implementation details, challenges and learnings ‚Äî read on! For a background on ML-Agents, please check out my &lt;a href="https://medium.com/nerd-for-tech/an-introduction-to-machine-learning-with-unity-ml-agents-af71938ca958"&gt;Introduction to ML-Agents article&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Versions used:&lt;/strong&gt; Release 18 (June 9, 2021)&lt;br&gt;
&lt;strong&gt;Python package:&lt;/strong&gt; 0.27.0&lt;br&gt;
&lt;strong&gt;Unity package:&lt;/strong&gt; 2.1.0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-court"&gt;
  &lt;/a&gt;
  ü•Ö Setting up the court
&lt;/h2&gt;

&lt;p&gt;Here's what I used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Agent Cube prefabs from the ML-Agents sample projects&lt;/li&gt;
&lt;li&gt;Volleyball prefab &amp;amp; sand material from this &lt;a href="https://assetstore.unity.com/packages/3d/props/free-beach-essentials-asset-pack-131149"&gt;free Beach Essentials Asset Pack&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Net, walls and floor made up of resized &amp;amp; rotated cube objects (net material from &lt;a href="https://assetstore.unity.com/packages/2d/textures-materials/yughues-free-grids-nets-materials-13004"&gt;Free Grids &amp;amp; Nets Materials Pack&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Thin floor representing the blue and purple "goals"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0uonaETr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55z1pwu5h9tay9girrqs.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0uonaETr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55z1pwu5h9tay9girrqs.PNG" alt="Volleyball"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some other implementation details: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The agent cubes have a &lt;strong&gt;sphere&lt;/strong&gt; collider to help control the ball trajectory&lt;/li&gt;
&lt;li&gt;I used 2 layers for the ground: the thin 'goals' on top, and the walkable floor below it. Since the goal colliders are set as 'triggers' (to check when the ball hits the floor), they will no longer register collisions. Hence the walkable floor is used for collision physics instead.&lt;/li&gt;
&lt;li&gt;I also added an invisible boundary around the court. I found that during training, agents may shy away from learning to hit the ball at all if you penalize them for hitting the ball out of bounds.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#scripts"&gt;
  &lt;/a&gt;
  üìÉ Scripts
&lt;/h2&gt;

&lt;p&gt;4 scripts were used to define the environment:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;VolleyballAgent.cs&lt;/code&gt; (&lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball/blob/master/Assets/Scripts/VolleyballAgent.cs"&gt;Link&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Defines observations&lt;/li&gt;
&lt;li&gt;Controls agents' movement &amp;amp; jump actions&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;VolleyballController.cs&lt;/code&gt; (&lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball/blob/master/Assets/Scripts/VolleyballController.cs"&gt;Link&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Checks whether the ball has hit the floor, and triggers allocation of rewards in &lt;code&gt;VolleyballEnv.cs&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;VolleyballEnv.cs&lt;/code&gt; (&lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball/blob/master/Assets/Scripts/VolleyballEnvController.cs"&gt;Link&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Randomises spawn positions&lt;/li&gt;
&lt;li&gt;Controls starting/stopping of an episode&lt;/li&gt;
&lt;li&gt;Allocates rewards to agents&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;VolleyballSettings.cs&lt;/code&gt; (&lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball/blob/master/Assets/Scripts/VolleyballSettings.cs"&gt;Link&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Contains basic settings e.g. agent's run speed and jump height&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#agents"&gt;
  &lt;/a&gt;
  ü§ñ Agents
&lt;/h2&gt;

&lt;p&gt;I planned to train the agents using PPO + Self-Play. To set this up:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set 'Team Id' under Behavior Parameters to identify opposing teams (0 = blue, 1 = purple)&lt;/li&gt;
&lt;li&gt;Ensure the environment is symmetric&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#observations"&gt;
  &lt;/a&gt;
  Observations:
&lt;/h3&gt;

&lt;p&gt;Total observation space size: 11&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rotation (Y-axis) - &lt;em&gt;1&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;3D Vector from agent to the ball - &lt;em&gt;3&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Distance to the ball - &lt;em&gt;1&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Agent velocity (X, Y &amp;amp; Z-axis) - &lt;em&gt;3&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Ball velocity (X, Y &amp;amp; Z-axis) - &lt;em&gt;3&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An alternative to vector observations is to use &lt;a href="https://learn.unity.com/tutorial/let-s-try-shooting-with-raycasts#5c7f8528edbc2a002053b468"&gt;Raycasts&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#available-actions"&gt;
  &lt;/a&gt;
  Available actions
&lt;/h3&gt;

&lt;p&gt;4 discrete branches:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Move forward, backward, stay still (size: 3)&lt;/li&gt;
&lt;li&gt;Move left, right, stay still (size: 3)&lt;/li&gt;
&lt;li&gt;Rotate left, right, stay still (size: 3)&lt;/li&gt;
&lt;li&gt;Jump, no jump (size: 2)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#rewards"&gt;
  &lt;/a&gt;
  üç≠ Rewards
&lt;/h2&gt;

&lt;p&gt;Self-play is finicky, and I had many unstable runs. From the &lt;a href="https://github.com/Unity-Technologies/ml-agents/blob/main/docs/Training-Configuration-File.md#self-play"&gt;ML-Agents documentation of Self-Play&lt;/a&gt;, they suggest keeping the rewards simple (+1 for the winner, -1 for the loser) and allowing for more training iterations to compensate.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  üìö Resources
&lt;/h2&gt;

&lt;p&gt;For others looking to build their own environments, I found these resources helpful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://learn.unity.com/course/ml-agents-hummingbirds"&gt;Hummingbirds Course&lt;/a&gt; by Unity (unfortunately outdated, but still useful).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Unity-Technologies/ml-agents/blob/main/docs/Learning-Environment-Examples.md#:~:text=The%20Unity%20ML%2DAgents%20Toolkit,Agents%2FExamples%20and%20summarized%20below."&gt;ML-Agents Sample Environments&lt;/a&gt; (particularly the Soccer &amp;amp; Wall Jump environments)&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  üëü Next steps
&lt;/h2&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Next, I'll share my learnings training an agent using PPO + self-play.&lt;/p&gt;

&lt;p&gt;If you're interested in &lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball"&gt;trying out the environment yourself&lt;/a&gt;, you can submit your model to play against others. &lt;a href="https://bit.ly/ulti-volleyball"&gt;Sign up&lt;/a&gt; to get notified when submissions open.&lt;/p&gt;

&lt;p&gt;Any feedback and suggestions are welcome.&lt;/p&gt;

&lt;p&gt;Feel free to connect with me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/joooy_z"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="//mailto:joy@gocoder.one"&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>unity3d</category>
      <category>machinelearning</category>
      <category>ai</category>
      <category>reinforcementlearning</category>
    </item>
    <item>
      <title>10 Magical Tips For Every Web Developer</title>
      <author>Chris </author>
      <pubDate>Wed, 11 Aug 2021 01:55:09 +0000</pubDate>
      <link>https://dev.to/godeess/10-magical-tips-for-every-web-developer-69j</link>
      <guid>https://dev.to/godeess/10-magical-tips-for-every-web-developer-69j</guid>
      <description>&lt;p id="f6cc"&gt;In this article, we will discuss the 15 useful JavaScript tips for every web developer to save their valuable and precious time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p id="e1bb"&gt;I am always ready to learn although I do not always like being taught&lt;/p&gt;

&lt;p id="0fe5"&gt;‚Äî Winston Churchill&lt;/p&gt;


&lt;/blockquote&gt;
&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;h1 id="fa85"&gt;Tip 1. Flatten the array of the array&lt;/h1&gt;
&lt;p id="4e31"&gt;This tip will help you to flatten a deeply nested array of arrays by using¬†&lt;code&gt;Infinity&lt;/code&gt;¬†in¬†&lt;code&gt;flat&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;span id="e3aa"&gt;var array = [123, 500, [1, 2, [34, 56, 67, [234, 1245], 900]], 845, [30257]]&lt;/span&gt;&lt;span id="16da"&gt;//flatten array of array&lt;br&gt;array.flat(Infinity)&lt;/span&gt;&lt;span id="b0d8"&gt;// output:&lt;br&gt;// [123, 500, 1, 2, 34, 56, 67, 234, 1245, 900, 845, 30257]&lt;/span&gt;&lt;/pre&gt;
&lt;h1 id="902c"&gt;Tip 2. Easy Exchange Variables&lt;/h1&gt;
&lt;p id="ebf9"&gt;You probably swap the two variables using a third variable¬†&lt;code&gt;temp&lt;/code&gt;. But this tip will show you a new way to exchange variables using destructuring.&lt;/p&gt;
&lt;pre&gt;&lt;span id="298c"&gt;//example 1&lt;/span&gt;&lt;span id="3316"&gt;var a = 6;&lt;br&gt;var b = 7;&lt;/span&gt;&lt;span id="b133"&gt;[a,b] = [b,a]&lt;/span&gt;&lt;span id="aa36"&gt;console.log(a,b) // 7 6&lt;/span&gt;&lt;/pre&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/magical-javascript-tips-for-every-web-developer/"&gt;10 Magical JavaScript Tips for Every Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;

</description>
    </item>
    <item>
      <title>App Development Roadmap 2021</title>
      <author>Chris </author>
      <pubDate>Wed, 11 Aug 2021 01:51:15 +0000</pubDate>
      <link>https://dev.to/godeess/app-development-roadmap-2021-2m5g</link>
      <guid>https://dev.to/godeess/app-development-roadmap-2021-2m5g</guid>
      <description>&lt;h2&gt;What is App Development?&lt;/h2&gt;
&lt;p&gt;App Development refers to the creation of computer applications for use on mobile devices such as tablets, smartphones and smart watches. Mobile device features such as cameras, motion and location awareness can be used to create unique and inventive mobile-only applications for things such as taxi and bike sharing.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Mobile devices typically have popular apps for searching, browsing and social media preinstalled and users can download and install additional apps&lt;/p&gt;From Google Play (Android) and the Apple App Store (iOS). Mobile applications are designed and built for different operating systems and developers will want to learn how to build for both the Android operating system and Apple‚Äôs iOS.
&lt;p&gt;&lt;span&gt;To learn android development from starting to become pro. You can follow these steps:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Originally Published: &lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/app-developer-roadmap/"&gt;App development roadmap 2021&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10 VS Code extensions every Frontend Developer should use</title>
      <author>Chris </author>
      <pubDate>Wed, 11 Aug 2021 01:50:05 +0000</pubDate>
      <link>https://dev.to/godeess/10-vs-code-extensions-every-frontend-developer-should-use-1o52</link>
      <guid>https://dev.to/godeess/10-vs-code-extensions-every-frontend-developer-should-use-1o52</guid>
      <description>&lt;p&gt;¬†&lt;span&gt;Hello everyone, my name is suman and I'm a frontend developer. In this blog post, I would like to share 10 VS code extensions that every frontend developer should use. The purpose of using these extensions is to write faster, cleaner, and more consistent code.¬†&lt;/span&gt;&lt;span&gt;Let's Jump in!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://www.codelivly.com/10-vs-code-extensions-every-frontend-developer-should-use/"&gt;10 VS Code extensions every Frontend Developer should use&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>üöÄ20 Best CSS3 Library For Developers.</title>
      <author>Chris </author>
      <pubDate>Wed, 11 Aug 2021 01:41:41 +0000</pubDate>
      <link>https://dev.to/godeess/20-best-css3-library-for-developers-4jhg</link>
      <guid>https://dev.to/godeess/20-best-css3-library-for-developers-4jhg</guid>
      <description>&lt;p&gt;Web Developers used to spend a lot of time creating beautiful CSS. Thanks to the CSS libraries, we now have a better, faster, and more effective way to build responsive websites and web applications.&lt;/p&gt;
&lt;p&gt;Are you still looking for the best CSS libraries? Do you want to know which library you should try? In this article, we have 20 best CSS libraries for your inspiration.&lt;/p&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#how-do-css-libraries-work"&gt;&lt;/a&gt;ü§î How do CSS libraries work?&lt;/h2&gt;
&lt;p&gt;CSS library gives web developers a basic structure, which includes grid, interactive UI patterns, web typography, tooltips, buttons, form elements, icons. This structure helps web developers to start quickly and efficiently when they are designing a website or web applications.&lt;/p&gt;
&lt;p&gt;Here we have put together¬†&lt;span&gt;20 best CSS libraries.&lt;/span&gt;¬†We hope you like them, and most importantly, find the best one for your needs.&lt;/p&gt;
&lt;h4&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#lets-go"&gt;&lt;/a&gt;Let's go....ü§©&lt;/h4&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwii76qFzaPyAhWvyzgGHX9RA-kQFnoECAMQBQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;üöÄ20 Best CSS3 Library For Developers&lt;/a&gt;&lt;/b&gt;.

</description>
    </item>
    <item>
      <title>11 git command i use Everyday </title>
      <author>Chris </author>
      <pubDate>Wed, 11 Aug 2021 01:39:39 +0000</pubDate>
      <link>https://dev.to/godeess/11-git-command-i-use-everyday-49o9</link>
      <guid>https://dev.to/godeess/11-git-command-i-use-everyday-49o9</guid>
      <description>&lt;p&gt;When I started my career, I was always afraid of losing my code changes. Sometimes, I would copy the code to text files just to be sure that I won't miss something.&lt;/p&gt;
&lt;p&gt;That's not a great practice. If you know how to use git properly, you won't have these doubts.&lt;/p&gt;
&lt;p&gt;Git has everything you need to make you safe. And much more.&lt;/p&gt;

&lt;p&gt;Let's dive in.&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/11-git-commands-i-use-every-day/"&gt;11 Git Command i use Everyday&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>5 HTML SEO Tips To Rank Higher in Google</title>
      <author>Teri Eyenike</author>
      <pubDate>Wed, 11 Aug 2021 01:27:22 +0000</pubDate>
      <link>https://dev.to/terieyenike/5-html-seo-tips-to-rank-higher-in-google-3e4j</link>
      <guid>https://dev.to/terieyenike/5-html-seo-tips-to-rank-higher-in-google-3e4j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this article, we will learn some new tips and insights on the most important HTML tags that you might have come across when setting up the structure of an HTML document, but you are not aware of its importance to boost your Search Engine Optimization (SEO).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-seo"&gt;
  &lt;/a&gt;
  Why SEO?
&lt;/h2&gt;

&lt;p&gt;Everybody is on their mobile phone, and one of the easiest things to do now is to search on Google when you are puzzled about a particular topic or word. So to take advantage of the available real-estate on the first page of Google, you need to start doing the right things by using &lt;strong&gt;keywords&lt;/strong&gt; in your website to boost your authority.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j3Tym1tX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/25850598/128917564-67f1b707-3b0a-496a-8d55-9388c0914ead.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j3Tym1tX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/25850598/128917564-67f1b707-3b0a-496a-8d55-9388c0914ead.png" alt="Learn JavaScript"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-seo"&gt;
  &lt;/a&gt;
  Benefits of SEO
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It helps for the discoverability and visibility of your website.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It boosts your website traffic when people search using specific keywords. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To learn more about the benefits of SEO, use this &lt;a href="https://www.crazyegg.com/blog/seo/benefits/"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's begin üöÄ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-title-tag"&gt;
  &lt;/a&gt;
  1. The Title Tag
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; tag is the title you want to appear in the search result to describe your brand name and what the page is. It is advisable to keep the title short, around 60 characters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;
      SEO tips | Rank higher on Google search result
   &lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From the above code snippet, place the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; element in between the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt; element of your HTML. One thing to note is that the content of the HTML &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; is not displayed on the page when loaded in the browser, unlike the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element. The head element contains all the metadata about the document.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t7nTrXY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/25850598/128953551-b6338496-66eb-48c3-b219-4fc79d71b206.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7nTrXY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/25850598/128953551-b6338496-66eb-48c3-b219-4fc79d71b206.png" alt="Title tag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-meta-tags"&gt;
  &lt;/a&gt;
  2. Meta Tags
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tags help browsers know what the content of your website is. Some of the common meta tags worthy of note are: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;keywords&lt;/li&gt;
&lt;li&gt;author&lt;/li&gt;
&lt;li&gt;description&lt;/li&gt;
&lt;li&gt;viewport.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;   &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt;
      &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"keywords"&lt;/span&gt;
      &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Web development, learn to code, courses, agile courses"&lt;/span&gt;
    &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"author"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Teri Eyenike"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt;
      &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt;
      &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Project-based guide for web developers and devops engineers"&lt;/span&gt;
    &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0, shrink-to-fit=no"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;viewport&lt;/strong&gt; meta tag lets you control the width and scaling of the viewport so that it fits all devices.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LtDZcPIR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/25850598/128953713-5052b6f7-0a3f-4167-8799-31e52f33336d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LtDZcPIR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/25850598/128953713-5052b6f7-0a3f-4167-8799-31e52f33336d.png" alt="Meta description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another meta tag you would like to use is the &lt;code&gt;og:&lt;/code&gt; meta tag that helps social media sites like Facebook and Twitter create preview cards for sharing on other platforms.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt;
      &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:title"&lt;/span&gt;
      &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Teri Eyenike - A Front-end Developer and Technical Writer"&lt;/span&gt;
    &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:type"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"website"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt;
      &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:image"&lt;/span&gt;
      &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"https://res.cloudinary.com/codeg0d/image/upload/v1609859185/3_skg4ne.jpg"&lt;/span&gt;
    &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:url"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"https://www.terieyenike.github.io/v2"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:description"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Project-based guide for web developers and devops engineers"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Other social media sites use the &lt;code&gt;og&lt;/code&gt; meta tags to create posts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Last, is the &lt;code&gt;robots&lt;/code&gt; meta tag used to keep search engines from indexing documents, internal search results, duplicate pages, etc., you don't want to appear in search.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"robots"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"noindex nofollow"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-alt-attribute"&gt;
  &lt;/a&gt;
  3. Alt Attribute
&lt;/h2&gt;

&lt;p&gt;The alt attribute is used inside the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element to describe the image as an alternate text. The primary function of the alt attribute is it helps with your website accessibility, and for SEO, it helps index images for search engines. The rule of thumb when using the alt attribute is to keep it short but descriptive.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://res.cloudinary.com/codeg0d/image/upload/v1609859185/2_txw6yz.jpg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Poster for baby driver movie"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"600"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"300"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-canonical-tag"&gt;
  &lt;/a&gt;
  4. Canonical Tag
&lt;/h2&gt;

&lt;p&gt;The canonical tag tells search results that a specific URL represents the master copy and helps prevent problems caused by duplicate content appearing on multiple URLs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;
      &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"canonical"&lt;/span&gt;
      &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://devdojo.com/teri/5-html-seo-tips-to-rank-higher-in-google"&lt;/span&gt;
    &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-semantic-tags"&gt;
  &lt;/a&gt;
  5. Semantic Tags
&lt;/h2&gt;

&lt;p&gt;Semantic tags are HTML tags that help communicate to the browser the structure of your web page. Elements such as &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; are all considered semantic because they describe the content embedded within them. &lt;/p&gt;

&lt;p&gt;When used appropriately, search engines and assistive technologies can understand the document's content, which helps with accessibility, especially screen readers for users with sight impairment.&lt;/p&gt;

&lt;p&gt;Some other semantic elements, you should take note of are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;mark&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try to avoid using the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element throughout the entire document of your web page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this post, you learned about the different strategies to implement in your next web project to rank higher in Search Engine Result Pages (SERP). Furthermore, I will recommend you start using the tips to monitor your website growth :).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news/what-is-open-graph-and-how-can-i-use-it-for-my-website/#what-is-open-graph"&gt;Open Graph&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://moz.com/learn/seo/canonicalization"&gt;Canonicalization&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Semantics"&gt;Semantics&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>seo</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Deploying a containerized app to IBM Code Engine</title>
      <author>Mrinalini Sugosh (Mrina)</author>
      <pubDate>Wed, 11 Aug 2021 01:16:21 +0000</pubDate>
      <link>https://dev.to/ibmdeveloper/deploying-an-containerized-app-to-ibm-code-engine-1mk8</link>
      <guid>https://dev.to/ibmdeveloper/deploying-an-containerized-app-to-ibm-code-engine-1mk8</guid>
      <description>&lt;p&gt;Welcome back to THINK Tuesdays!&lt;/p&gt;

&lt;p&gt;A weekly blog series where I discuss and share my journey with IBM Cloud Services. Before you begin, do checkout my previous blogs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/ibmdeveloper/deploy-a-nodejs-app-to-ibm-cloud-container-registry-46m2"&gt;Deploy a NodeJS app to IBM Cloud Container Registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ibmdeveloper/deploy-a-nodejs-app-to-kubernetes-4flg"&gt;Deploy an image from IBM Cloud Container Registry to Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this week's THINK Tuesday we will be discussing how to use IBM Cloud's Code Engine service. The coolest new service on the block! It enables you to deploy a fully scalable app on IBM Cloud in a matter of minutes. Let's take a look at some of the amazing perks of this service:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Auto-scales up/down, even to zero when idle&lt;/li&gt;
&lt;li&gt;Builds container images from source code&lt;/li&gt;
&lt;li&gt;Seamless integration with IBM Cloud services&lt;/li&gt;
&lt;li&gt;Built on OSS Kubernetes, Knative, Istio, and Tekton, keeping workloads portable&lt;/li&gt;
&lt;li&gt;Pay only for what you use&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's get started!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps-to-deploy-an-app-on-ibm-cloud-code-engine"&gt;
  &lt;/a&gt;
  Steps to Deploy an App on IBM Cloud Code Engine
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h4&gt;

&lt;p&gt;We are launching from this version of Code Engine from the IBM Cloud Dashboard. The quickest way to get started is to either provide a container image or source code.&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1nzt3lij--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ys01w8o9k3dvm60z39bc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1nzt3lij--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ys01w8o9k3dvm60z39bc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I pasted one of the sample demo apps image and hit Create to get started.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2-fine-tune-settings"&gt;
  &lt;/a&gt;
  Step 2 - Fine Tune Settings
&lt;/h4&gt;

&lt;p&gt;Since I want this to be a running app rather than a job that runs to completion, select &lt;code&gt;Application&lt;/code&gt; for type of Code Engine Instance:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rL1D6Qyb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lh7nrkk6u1tol0j7yd99.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rL1D6Qyb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lh7nrkk6u1tol0j7yd99.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Verify that I am passing in a container image:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jxkKgMy9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2xk53en5txm7sn23esv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jxkKgMy9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2xk53en5txm7sn23esv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this tutorial, I plan to stick with the defaults. But, there are options to fine tune the runtime settings  to better configure how this app scales.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nlk5J3Sr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2q862hxovpwnyaub0sy4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nlk5J3Sr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2q862hxovpwnyaub0sy4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-3-launch-the-app"&gt;
  &lt;/a&gt;
  Step 3 - Launch the app
&lt;/h4&gt;

&lt;p&gt;Once configured, click Create, and the app will be deployed in a matter of seconds! &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oq1DKUPS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wy520p0kxur03iplx4rd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oq1DKUPS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wy520p0kxur03iplx4rd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oila, congratulations on deploying your first container on IBM Cloud Code Engine!&lt;/p&gt;

&lt;p&gt;In this tutorial, we are simply scratching the surface on what's available with this new and amazing service. &lt;/p&gt;

&lt;p&gt;Thank you for following along this THINK Tuesday's Tutorial and be sure to look out for my next post, where I will continue sharing my Journey with IBM Cloud Services!!!&lt;/p&gt;

&lt;p&gt;==== Follow me on Social Media(&lt;code&gt;@mrinasugosh&lt;/code&gt;) ====&lt;br&gt;
Dev.to: &lt;a class="mentioned-user" href="https://dev.to/mrinasugosh"&gt;@mrinasugosh&lt;/a&gt;
 &lt;br&gt;
Github: &lt;a href="https://github.com/mrinasugosh"&gt;@mrinasugosh&lt;/a&gt;&lt;br&gt;
Twitter: &lt;a href="https://twitter.com/mrinasugosh"&gt;@mrinasugosh&lt;/a&gt;&lt;br&gt;
LinkedIn: &lt;a href="https://www.linkedin.com/in/mrinasugosh/"&gt;@mrinasugosh&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>cloud</category>
      <category>devops</category>
    </item>
    <item>
      <title>Converting static HTML/CSS site to React App</title>
      <author>Menard Maranan</author>
      <pubDate>Wed, 11 Aug 2021 01:11:25 +0000</pubDate>
      <link>https://dev.to/menard_codes/converting-static-html-css-site-to-react-app-263e</link>
      <guid>https://dev.to/menard_codes/converting-static-html-css-site-to-react-app-263e</guid>
      <description>&lt;p&gt;Converting a static page or site into React App is actually simpler than what some might think. The gist is that you'll only restructure and format things out. Just plug the data to it, or with an API to make it Dynamic or feel more like an App.&lt;/p&gt;

&lt;p&gt;In this quick blog, I'll be going through the simple steps on how to convert a static page into a React App.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;p&gt;This assumes you already have React installed into your machine, and of course, you know the gist of the library.&lt;/p&gt;

&lt;p&gt;So before we start the conversion, let's do a simple create-react-app to initialize our project. I'll be using &lt;code&gt;npx&lt;/code&gt; here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app My_App
&lt;span class="c"&gt;# wait for it to finish...&lt;/span&gt;

&lt;span class="nb"&gt;cd &lt;/span&gt;My_App &lt;span class="c"&gt;# or code My_App if you have VS code&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remove the unnecessary files and the boilerplate code. Now we're ready to go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conversion"&gt;
  &lt;/a&gt;
  Conversion
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#turn-pages-into-parent-components"&gt;
  &lt;/a&gt;
  Turn page/s into Parent Components
&lt;/h3&gt;

&lt;p&gt;If you only have one page, you can create a folder called &lt;code&gt;components&lt;/code&gt; under the &lt;code&gt;src&lt;/code&gt; folder. Then, create a single &lt;code&gt;.jsx&lt;/code&gt; file there like &lt;code&gt;index.jsx&lt;/code&gt;. Create a React Component within &lt;code&gt;index.jsx&lt;/code&gt;, then copy and paste the body of your static HTML file to the return statement of that Component.&lt;/p&gt;

&lt;p&gt;And if you have multiple pages, I recommend creating a separate &lt;code&gt;pages&lt;/code&gt; folder under &lt;code&gt;src&lt;/code&gt; folder and create &lt;code&gt;.js&lt;/code&gt; file for each (HTML) page of your static site. Again, create React components for each file (or page) and copy-paste the body of the HTML files into the react components.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fix-syntax"&gt;
  &lt;/a&gt;
  Fix Syntax
&lt;/h3&gt;

&lt;p&gt;The next thing we'll be doing is correct the syntax of our plain HTML code into JSX. More specifically, change the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;change &lt;code&gt;class&lt;/code&gt; to &lt;code&gt;className&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;change &lt;code&gt;style&lt;/code&gt; props from string to objects, and change the &lt;code&gt;BBQ-casing&lt;/code&gt; of CSS props to &lt;code&gt;camelCase&lt;/code&gt; (i.e. &lt;code&gt;style="text-align: center;"&lt;/code&gt; to &lt;code&gt;style={textAlign: 'center'}&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;End the self-closing tags (i.e. &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;img /&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#add-css"&gt;
  &lt;/a&gt;
  Add CSS
&lt;/h3&gt;

&lt;p&gt;Now, it's time to add your CSS to the components. Create a &lt;code&gt;styles&lt;/code&gt; folder under &lt;code&gt;src&lt;/code&gt; folder, and drop there all your &lt;code&gt;CSS&lt;/code&gt; files. Then, import the corresponding CSS for each pages (if applicable).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dependencies"&gt;
  &lt;/a&gt;
  Dependencies
&lt;/h3&gt;

&lt;p&gt;Installing the dependencies of your page (i.e. Bootstrap, Font-Awesome, etc.) that was recently delivered via CDN is recommended to be installed via &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt; (if there's any). Try to find the corresponding React module for your component and install them within your React App:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# installing bootstrap for react via npm/yarn instead of cdn&lt;/span&gt;
npm i react-bootstrap
&lt;span class="c"&gt;# or&lt;/span&gt;
yarn add react-bootstrap
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, import them to their corresponding components/pages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#decompose-pages"&gt;
  &lt;/a&gt;
  Decompose Page/s
&lt;/h3&gt;

&lt;p&gt;This is the part where we truly take advantage of React, which is by breaking down each page into smaller, reusable components.&lt;/p&gt;

&lt;p&gt;For this step, create a &lt;code&gt;components&lt;/code&gt; folder if you haven't yet. If your website is written with Semantics in mind, then the conversion would be a breeze.&lt;/p&gt;

&lt;p&gt;Understand the structure of your pages. Think about what sections makes up a page, what smaller components or sub components builds up which area of the page.&lt;/p&gt;

&lt;p&gt;An example would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;main&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome to Homepage!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Headline 1&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
                  Lorem Ipsum dolor...
              &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
                  Lorem ipsum dolor sit amet...
               &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
                  Lorem ipsum dolor sit amet...
               &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
                  Lorem ipsum dolor sit amet...
               &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
           ...
       &lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
               ...
    &lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From there, we can clearly see the repeated pattern of:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        Lorem ipsum dolor sit amet...
    &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can turn that out into a component and prevent ourselves from repeatedly writing them:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/components/Section.jsx&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Section&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
               &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
               &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's one, but we can further group this page into hierarchy. Let's get through each of those:&lt;/p&gt;

&lt;p&gt;First off, notice that we also have the header? That's also another component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/components/Header.jsx&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;headline&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now, by looking on our HTML hierarchy, the parent component where we will put the Header and and Section components will be the &lt;code&gt;Article&lt;/code&gt;, so let's import those components we just created and nest them inside the Article component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/components/Article.jsx&lt;/span&gt;

&lt;span class="c1"&gt;// assuming that we have a data source&lt;/span&gt;
&lt;span class="c1"&gt;// for the contents of the page&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Header&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Section&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Section&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Article&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sections&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Header&lt;/span&gt;
                &lt;span class="na"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;headline&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;sections&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;section&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Section&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;section&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
jsx&lt;/p&gt;

&lt;p&gt;Now we're cooking!&lt;/p&gt;

&lt;p&gt;Alright, for the last restructuring, noticed that on our static HTML, there are more &lt;code&gt;Article&lt;/code&gt; tags with similar structure that follows? Guess what, we can also the same thing here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/pages/Main.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Article&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/Article.jsx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;someData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Welcome to Homepage!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;someData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sections&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Article&lt;/span&gt;
                            &lt;span class="na"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;headline&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                            &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                            &lt;span class="na"&gt;sections&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;sections&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But wait, have you noticed a common problem that occurs on React App? If you're an Eagle-eyed reader, then yes, we committed &lt;code&gt;prop-drilling&lt;/code&gt; here. We can use Redux or just simply the Context API, but that's another topic for another blog, so bear with me for now.&lt;/p&gt;

&lt;p&gt;Ok, just take note that the &lt;code&gt;Main&lt;/code&gt; component we just created is saved under the &lt;code&gt;pages&lt;/code&gt; folder as it's actually representing an entire page already in itself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h3&gt;

&lt;p&gt;This step is optional (only if you have multiple pages), and we can leverage &lt;code&gt;React Router&lt;/code&gt; so that we don't need to refresh the page.&lt;/p&gt;

&lt;p&gt;You can install &lt;code&gt;react-router-dom&lt;/code&gt; via &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt; and start routing from &lt;code&gt;App.js&lt;/code&gt; which is in the top level of inside the &lt;code&gt;src&lt;/code&gt; folder.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#still-confused"&gt;
  &lt;/a&gt;
  Still confused?
&lt;/h2&gt;

&lt;p&gt;If things are still confusing to you, then please don't because you don't have to. Instead, let me help you with that and I'll just do it for you. Yah, that's right, let me handle it for ya'. I offer a service in &lt;a href="https://www.fiverr.com/menardmaranan/convert-html-and-css-to-react-components"&gt;Fiverr&lt;/a&gt; and I offer my service &lt;strong&gt;FREE&lt;/strong&gt; for the first 3 orders, and after that, it's $10 dollars. I will convert your static page into a React App completely &lt;strong&gt;FREE OF CHARGE&lt;/strong&gt; for the first 3 orders in exchange of an honest review. Just visit &lt;a href="https://www.fiverr.com/menardmaranan/convert-html-and-css-to-react-components"&gt;https://www.fiverr.com/menardmaranan/convert-html-and-css-to-react-components&lt;/a&gt; and I'll handle the conversion instead for Free.&lt;/p&gt;

&lt;p&gt;Till' next time, see ya'!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow me on &lt;a href="https://twitter.com/menard_codes"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Build Intentional Remote Collaboration - Like GitLab</title>
      <author>Conor Bronsdon</author>
      <pubDate>Wed, 11 Aug 2021 00:22:59 +0000</pubDate>
      <link>https://dev.to/linearb/build-intentional-remote-collaboration-like-gitlab-4dli</link>
      <guid>https://dev.to/linearb/build-intentional-remote-collaboration-like-gitlab-4dli</guid>
      <description>&lt;p&gt;The office of the 20th century is a testament to design. A great deal of thought goes into the layout of a building. &lt;em&gt;How are the offices laid out? Where are the elevators located? Where will teams meet?&lt;/em&gt; But the focus on co-located office space is quickly becoming a relic of the past. To meet the challenges of the 21st century GitLab‚Äôs Head of Remote Darren Murph is pushing organizations to put just as much thought into their remote work structure as they would an office building.&lt;/p&gt;

&lt;p&gt;For many companies, the transition to this mindset comes with difficulty. They‚Äôve shifted into remote work as a necessity, but maintain the 20th-century ‚Äòoffice-first‚Äô mindset. While this is passable and &lt;em&gt;**can *&lt;/em&gt;*work, it‚Äôs not ultimately taking advantage of the key benefits of a virtual atmosphere.&lt;/p&gt;

&lt;p&gt;To take advantage of the shifting dynamics, GitLab is using their own platform to consolidate all of their virtual collaboration. Providing a single source of truth, GitLab has designed the virtual version of a central hallway where all work is funneled. This breaks down organizational siloes and enables the GitLab team to collaborate with maximum efficiency, by making sure that everything is as visible and as transparent as possible for everyone in the organization.&lt;/p&gt;

&lt;p&gt;A company‚Äôs ‚Äòcentral hallway‚Äô is going to look different from organization to organization, but the takeaway for all remote organizations and engineering leaders should be the importance of de-siloing information across your organization. This will encourage virtual collaboration and boost creativity.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/PbXGEoz1HVM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#meetings-that-support-remote-culture"&gt;
  &lt;/a&gt;
  Meetings that Support Remote Culture
&lt;/h2&gt;

&lt;p&gt;A Chief People Officer once asked Darren, ‚Äú&lt;strong&gt;&lt;em&gt;How do we make our meetings better?&lt;/em&gt;&lt;/strong&gt;‚Äù His response? ‚Äú&lt;strong&gt;&lt;em&gt;Make them harder to have&lt;/em&gt;&lt;/strong&gt;.‚Äù&lt;/p&gt;

&lt;p&gt;Darren believes that you should have as few meetings as possible because people deserve to be able to focus on their work. From this belief flows the practice with of using tools like Slack or Microsoft Teams to gather consensus asynchronously, and then reserve synchronous time for meetings where only decisions are made or important status updates are shared.&lt;/p&gt;

&lt;p&gt;This has the effect of focusing a team‚Äôs attention which is important as teams become distributed around the globe, and time zones become a greater issue. It‚Äôs far too easy for your entire day to be meeting with teams across your organization, with people coming online in various timezones to fill your day. Instead, the focus should remain on having critical day-to-day functions performed asynchronously ‚Äî with meetings taking a back seat.&lt;/p&gt;

&lt;p&gt;In addition to focusing an organization‚Äôs efforts, being thoughtful about structuring remote work also reduces meeting fatigue. We‚Äôve all experienced being on Zoom or other video conferencing software continuously throughout the day. Not only is it inefficient and distracting, but it can lower your company morale and leave you exhausted and feeling like you didn‚Äôt accomplish anything during the day.&lt;/p&gt;

&lt;p&gt;Darren‚Äôs ideas may have seemed radical just a couple of years ago. But he and the folks at GitLab are pioneering ‚Äî and thriving ‚Äî in today‚Äôs remote environment. The office of the 21st century is undoubtedly going to be virtual, so remember to put as much rigor and thought into your virtual work structure as you would if you were designing a building.&lt;/p&gt;

&lt;p&gt;To learn more about how GitLab and other companies transitioned to remote work, check out &lt;a href="https://linearb.io/new-leaders-remote-work-panel/"&gt;Dev Interrupted‚Äôs Remote Work Panel on August 11, from 9‚Äì10am PST&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Auf4Kj0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv80ethx06yi4pkjbr6c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Auf4Kj0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv80ethx06yi4pkjbr6c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interested-in-learning-more-about-how-to-implement-remote-work-best-practices-at-your-organization"&gt;
  &lt;/a&gt;
  Interested in learning more about how to implement remote work best practices at your organization?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://linearb.io/new-leaders-remote-work-panel/?utm_source=Referrals&amp;amp;utm_medium=devinterrupted.com&amp;amp;utm_campaign=devinterrupted%20referrals"&gt;Join us&lt;/a&gt; &lt;strong&gt;tomorrow,&lt;/strong&gt; August 11, from &lt;strong&gt;9am-10am PST&lt;/strong&gt; for a panel discussion with some of tech‚Äôs foremost remote work experts. This amazing lineup features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Darren Murph Head of Remote at GitLab &amp;amp; Guinness World Record Holder as the most prolific blogger ever&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lawrence Mandel Director of Engineering at Shopify &amp;amp; Hockey Enthusiast&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Shweta Saraf Senior Director of Engineering at Equinix &amp;amp; Plato Mentor&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And the Panda himself, Chris Downard VP of Engineering at GigSmart&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dan Lines, COO of LinearB, will be moderating a discussion with our guests on how they lead their teams remotely, how the current workplace is changing, and what‚Äôs next as the pandemic continues to change&lt;/p&gt;

&lt;p&gt;Don‚Äôt miss the event afterparty hosted in discord from 10‚Äì10:30am with event speakers Chris and Shweta, as well as LinearB team members Dan Lines and Conor Bronsdon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QIdEAOPo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4qtat8hwrhablrlbjd33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QIdEAOPo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4qtat8hwrhablrlbjd33.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you haven‚Äôt already joined the best developer discord out there, WYD?&lt;/p&gt;

&lt;p&gt;Look, I know we talk about it a lot but we love our developer discord community. With over 1500 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No salespeople allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>leadership</category>
      <category>devops</category>
      <category>management</category>
    </item>
    <item>
      <title>Understanding HTML Anchor Tag &lt;a&gt;</title>
      <author>Aya Bouchiha</author>
      <pubDate>Wed, 11 Aug 2021 00:19:18 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/understanding-html-anchor-tag-a-1i44</link>
      <guid>https://dev.to/ayabouchiha/understanding-html-anchor-tag-a-1i44</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The &amp;lt;a&amp;gt; HTML element (or anchor element), with its href attribute, creates a hyperlink to web pages, files, email addresses, locations on the same page, or anything else a URL can address. Content within each &amp;lt;a&amp;gt; should indicate the link's destination.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a"&gt;www.developer.mozilla.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;When To use anchor tags?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#absolute-urls"&gt;
  &lt;/a&gt;
  Absolute URLs
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;a href="www.example.com&amp;gt;text&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Aya_Bouchiha/embed/MWmLWQy?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#relative-urls"&gt;
  &lt;/a&gt;
  Relative URLs
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;a href="/about-me"&amp;gt;about me&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#email"&gt;
  &lt;/a&gt;
  Email
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;a href="mailto:example@gmail.com"&amp;gt;text&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Aya_Bouchiha/embed/KKmJKRp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phone-number"&gt;
  &lt;/a&gt;
  Phone Number
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;a href="tel:+12345678910&amp;gt;text&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Aya_Bouchiha/embed/eYWxYjB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-section-or-a-part-of-your-page"&gt;
  &lt;/a&gt;
  a section or a part of your page
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;a href="#section-id"&amp;gt;text&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Aya_Bouchiha/embed/NWjoWEW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#image-as-a-link"&gt;
  &lt;/a&gt;
  Image as a link
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img link"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Aya_Bouchiha/embed/ExmrxGw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  Javascript Code
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;a href="javascript:codeblock"&amp;gt;text&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Aya_Bouchiha/embed/BaRMaMX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/"&gt;www.developer.mozilla.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/"&gt;www.w3schools.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To Contact Me:&lt;/p&gt;

&lt;p&gt;email: &lt;a href="mailto:developer.aya.b@gmail.com"&gt;developer.aya.b@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;telegram: &lt;a href="https://t.me/AyaBouchiha"&gt;Aya Bouchiha&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have a great day!&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Dev log for Wonder Wanderer 2: Day 10 #LOWREZJAM üòÅ</title>
      <author>Michael Primo</author>
      <pubDate>Tue, 10 Aug 2021 21:39:26 +0000</pubDate>
      <link>https://dev.to/michaelprimo/dev-log-for-wonder-wanderer-2-day-10-lowrezjam-ed7</link>
      <guid>https://dev.to/michaelprimo/dev-log-for-wonder-wanderer-2-day-10-lowrezjam-ed7</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-did-i-do-today"&gt;
  &lt;/a&gt;
  What did I do today?
&lt;/h3&gt;

&lt;p&gt;I finished all the hazards, so the game can be tomorrow on alpha state. Here is some tests:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BUbYWjYJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uz40dae68duqkzqi5jne.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BUbYWjYJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uz40dae68duqkzqi5jne.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
 Little tests for jumping through the walls. 



&lt;p&gt;You can in the game move in two ways (top down and sidescrolling), avoid spikes and holes, wrap through the screen, switch layouts, hop down to platforms, going to other rooms with their gravity. Here is an example of the reverse gravity, but I made a normal one, lighter, heavy, zero and reverse.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--20inKg21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lpbaio1fbtm984cxuhjg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--20inKg21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lpbaio1fbtm984cxuhjg.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
 Example for a gameplay with Reverse gravity. 



</description>
      <category>challenge</category>
      <category>devjournal</category>
      <category>javascript</category>
      <category>gamedev</category>
    </item>
  </channel>
</rss>
