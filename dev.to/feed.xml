<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The World Of React Events</title>
      <author>Web.Developer.io</author>
      <pubDate>Fri, 14 Jan 2022 20:18:38 +0000</pubDate>
      <link>https://dev.to/developerioweb/the-world-of-react-events-59ej</link>
      <guid>https://dev.to/developerioweb/the-world-of-react-events-59ej</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Event occur when a user or the browser manipulate a page.&lt;/p&gt;

&lt;p&gt;For Ex →&lt;br&gt;
&lt;strong&gt;&lt;code&gt;Page Loading&lt;/code&gt; , &lt;code&gt;clicking a Button&lt;/code&gt; , &lt;code&gt;Pressing any Key&lt;/code&gt; , &lt;code&gt;Closing a window&lt;/code&gt;&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These all are the events.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We as a developer use these Events to manipulate things in the site.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In the Case of React Events, they  are not actually the &lt;code&gt;DOM Events&lt;/code&gt; they are called &lt;code&gt;Synthetic Events&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Synthetic Events&lt;/code&gt; → These are the Wrappers that React uses to standardise event functionality across browser.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But what is the need of Synthetic Events ??&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Actually Events are not the part of Core JavaScript , they come from each browser’s JavaScript API , means Each browser will handle them differently.&lt;/li&gt;
&lt;li&gt;So in React we have the Synthetic Events which makes the consistency across all the browser.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How
&lt;/h3&gt;

&lt;p&gt;So we have many types of the Synthetic Events including keyboard events, form events , mouse events etc.&lt;/p&gt;

&lt;p&gt;Some of them are :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;onClick&lt;/span&gt;
&lt;span class="nx"&gt;onContextMenu&lt;/span&gt;
&lt;span class="nx"&gt;onDoubleClick&lt;/span&gt;
&lt;span class="nx"&gt;onDrag&lt;/span&gt;
&lt;span class="nx"&gt;onDragEnd&lt;/span&gt;
&lt;span class="nx"&gt;onDragEnter&lt;/span&gt;
&lt;span class="nx"&gt;onDragExit&lt;/span&gt;
&lt;span class="nx"&gt;onDragLeave&lt;/span&gt;
&lt;span class="nx"&gt;onDragOver&lt;/span&gt;
&lt;span class="nx"&gt;onDragStart&lt;/span&gt;
&lt;span class="nx"&gt;onDrop&lt;/span&gt;
&lt;span class="nx"&gt;onMouseDown&lt;/span&gt;
&lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;
&lt;span class="nx"&gt;onMouseLeave&lt;/span&gt;
&lt;span class="nx"&gt;onMouseMove&lt;/span&gt;
&lt;span class="nx"&gt;onMouseOut&lt;/span&gt;
&lt;span class="nx"&gt;onMouseOver&lt;/span&gt;
&lt;span class="nx"&gt;onMouseUp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;For more visit this link :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/events.html"&gt;SyntheticEvent - React&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Example →&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V7Qt_pEx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5a3ck3kbfxdx1yh1hmz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V7Qt_pEx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5a3ck3kbfxdx1yh1hmz.png" alt="React Events" width="880" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;when ever u try to hover on the &lt;code&gt;Smily&lt;/code&gt; It will log a Proverb and if try to copy the text it will give u an alert&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;CopyDemo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./CopyDemo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Messenger&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Messenger&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Messenger&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;CopyDemo&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nx"&gt;CopyDemo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CopyDemo&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleCopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleCopy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;handleCopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Stop Copying Me&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;31px auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;50%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Try to Copy the Text Below 👇&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;textAlign&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;50%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0 auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;onCopy&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleCopy&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    lorem ipsum dolor sit amet, consectetur adipiscing elit.lorem ipsum dolor sit amet lorem ipsum dolor sit amet, consectetur adipiscing elit.lorem ipsum dolor sit amet lorem ipsum dolor sit amet, consectetur adipiscing elit.lorem ipsum dolor sit amet lorem ipsum dolor sit amet, consectetur adipiscing elit.lorem ipsum dolor sit amet lorem ipsum dolor sit amet, consectetur adipiscing elit.lorem ipsum dolor sit amet lorem ipsum dolor sit amet, consectetur adipiscing elit.lorem ipsum dolor sit amet
                &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;CopyDemo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nx"&gt;Messenger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Messenger&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleMouseEnter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleMouseEnter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;handleMouseEnter&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All good things come to an end&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; A journey of a thousand miles begins with a single step&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; Actions speak louder than words&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;  An apple a day keeps the doctor away&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Proverbs 👇&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;  &lt;span class="na"&gt;onMouseEnter&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleMouseEnter&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0 auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;🙂&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Messenger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codesandbox.io/s/react-events-demo-cox8i"&gt;React-Events DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#method-binding"&gt;
  &lt;/a&gt;
  Method Binding
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8X0OBlTW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ryju8cvuk3yqkankflk3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8X0OBlTW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ryju8cvuk3yqkankflk3.png" alt="This Keyword" width="880" height="214"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Messenger2&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;defaultProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All good things come to an end&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; A journey of a thousand miles begins with a single step&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; Actions speak louder than words&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;  An apple a day keeps the doctor away&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;handleMouseEnter&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;THIS IS:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// undefined 😭&lt;/span&gt;
        &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Proverbs 👇&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;  &lt;span class="na"&gt;onMouseEnter&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleMouseEnter&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0 auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;🙂&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;If u try to run this , it will give an &lt;code&gt;TypeError&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also if we console.log the value of &lt;code&gt;this&lt;/code&gt; we will see the value of undefined.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZioLic5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oklm64dhrihzo8gihh58.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZioLic5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oklm64dhrihzo8gihh58.png" alt="THIS" width="454" height="39"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ways to fix this problem →&lt;br&gt;
1)  &lt;code&gt;Use Inline BInd&lt;/code&gt; →&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L_3CD6ez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2lnijsyfxhrot1az7lrp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L_3CD6ez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2lnijsyfxhrot1az7lrp.png" alt="Inline Binding" width="880" height="217"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;New Function is Created on every render.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQErQOtA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lye4rkvlozgoydap16ei.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQErQOtA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lye4rkvlozgoydap16ei.png" alt="Function" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Like above we have Created a Function handleClick and bind it using inline-bind but when we check if they are equal or not so it return false , So this means that a New Function is created when it renders.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2 . &lt;code&gt;Arrow Function&lt;/code&gt; →&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--phaqHvZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tibdut4w7zpyon7b4oup.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--phaqHvZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tibdut4w7zpyon7b4oup.png" alt="Arrow Function" width="880" height="234"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros →&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No mention of Bind!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons →&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intent less clear&lt;/li&gt;
&lt;li&gt;new function created on every render.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3 . &lt;code&gt;In the Constructor&lt;/code&gt; →&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fSmNsOhA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hakdmmm6w8gnavyekkwp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fSmNsOhA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hakdmmm6w8gnavyekkwp.png" alt="Constructor" width="880" height="288"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Only need to bind once!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;4 . Bonus One →&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;handleClick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is : &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;This will also used to bind.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#method-binding-with-arguments-%E2%86%92"&gt;
  &lt;/a&gt;
  Method Binding with Arguments →
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;In the previous example our &lt;code&gt;this.handleClick&lt;/code&gt; didn’t take any argument.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To Pass the Argument we can write like this :&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;argument_name&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;)}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleclick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;argument_name&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we are using the Arrow function we have to  use the Curly braces while calling the function.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passing-functions-to-the-child-component-%E2%86%92"&gt;
  &lt;/a&gt;
  Passing Functions to the child Component →
&lt;/h3&gt;

&lt;p&gt;Children are often not stateful, but they need to tell parent to change the state.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But how can we send the data back to the parent Component??&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-flow"&gt;
  &lt;/a&gt;
  Data Flow
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A parent Component defines the Function.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The function is passed as a prop to a child component.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The child component invokes the prop.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The parent function is called, usually setting new state.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The parent component is re-rendered along with its children.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;One way to pass the Function →&lt;br&gt;
we have to make something like this whenever we click on the cross button the corresponding Number should Disappear.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HqIr-m_5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jba9vhmm5wvx3i64qsn2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HqIr-m_5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jba9vhmm5wvx3i64qsn2.png" alt="Project" width="411" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Numlist.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;NumberItem&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./NumberItem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;NumberList&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; 
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;NumberItem&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;

            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;NumberList&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this we have passed the &lt;code&gt;remove&lt;/code&gt; function as props to the NumItem Component .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NumItem.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;NumberItem&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;X&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;NumberItem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code works fine but as we remove the elements the &lt;strong&gt;&lt;code&gt;Numlist&lt;/code&gt; Component get Re-rendered and we are binding the method remove inline , So every time the component get rendered new function created.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To solve this we have to bind the method in the Constructor.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;BetterNumberItem&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./BetterNumberitems&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;BetterNumberList&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]};&lt;/span&gt;
        &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; 
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BetterNumberItem&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;

            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;BetterNumberList&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;BetterNumberItem&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleRemove&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleRemove&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;handleRemove&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleRemove&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;X&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;BetterNumberItem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Earlier we are passing the argument to the remove method but now we aren’t so if we just try to console.log what is passed to remove we got the events.&lt;/p&gt;

&lt;p&gt;So we call handleRemove function and in that we call the remove function and pass the argument to it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://codesandbox.io/s/numlist-jo1jm"&gt;NumList&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VUYrhWyR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x51fkq0j6yie6i2n1yah.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VUYrhWyR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x51fkq0j6yie6i2n1yah.png" alt="Binding" width="880" height="387"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#naming-convention-%E2%86%92"&gt;
  &lt;/a&gt;
  Naming Convention →
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KIsN-8Y5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahuprgoflahpb6jeqiss.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KIsN-8Y5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahuprgoflahpb6jeqiss.png" alt="Naming Convention" width="880" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#list-and-keys"&gt;
  &lt;/a&gt;
  List and keys
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZHo3-T0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojcj7zpe1gok570uv0wq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZHo3-T0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojcj7zpe1gok570uv0wq.png" alt="Keys" width="880" height="183"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RI_jUqs7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8lm2thrpz8vj75glsubp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RI_jUqs7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8lm2thrpz8vj75glsubp.png" alt="React" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Keys help React identify which items have changed, are added, or are removed. Keys should be given to the elements inside the array&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OGiiFXv_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zq26pfn7yn8yvv19je94.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OGiiFXv_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zq26pfn7yn8yvv19je94.png" alt="Last Resort" width="880" height="437"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and I have also learnt how to write the Functional Component&lt;br&gt;
 Day 10 Completed!!🥳&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>MongoDB $weeklyUpdate (January 14, 2022): Latest MongoDB Tutorials, Events, Podcasts, &amp; Streams!</title>
      <author>Adrienne Tacke</author>
      <pubDate>Fri, 14 Jan 2022 19:39:20 +0000</pubDate>
      <link>https://dev.to/mongodb/mongodb-weeklyupdate-january-14-2022-latest-mongodb-tutorials-events-podcasts-streams-1519</link>
      <guid>https://dev.to/mongodb/mongodb-weeklyupdate-january-14-2022-latest-mongodb-tutorials-events-podcasts-streams-1519</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hi-everyone"&gt;
  &lt;/a&gt;
  👋 Hi everyone!
&lt;/h2&gt;

&lt;p&gt;Welcome back to the MongoDB $weeklyUpdate! Happy 2022! 🎉&lt;/p&gt;

&lt;p&gt;Here, you'll find the latest developer tutorials, upcoming official MongoDB events, and get a heads up on our latest Twitch streams and podcast, curated by &lt;a href="https://twitter.com/AdrienneTacke"&gt;Adrienne Tacke&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(We're changing it up a bit and will be releasing these every Friday (instead of Monday). In this way, you'll always get the latest content and updates!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#%F0%9F%8E%99-last-call-to-submit-your-sessions-for-mongodb-world-2022"&gt;
  &lt;/a&gt;
  🎙 Last Call to Submit Your Sessions for MongoDB World 2022!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uh0xtGXS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.mongodb.com/community/forums/uploads/default/optimized/3X/a/d/ad8ea33e6f0560796e2066388d92bb949bd7ab49_2_1035x541.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uh0xtGXS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.mongodb.com/community/forums/uploads/default/optimized/3X/a/d/ad8ea33e6f0560796e2066388d92bb949bd7ab49_2_1035x541.jpeg" alt="MongoDB World Call for Speakers banner" width="880" height="460"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MongoDB World is where the world’s fastest-growing data community comes to connect, explore, and learn. We’re looking for speakers who can inspire attendees by introducing them to new technologies, ideas, and solutions.&lt;/p&gt;

&lt;p&gt;Whether you want to do a 30 minute conference session, a 75 minutes deep dive tutorial, or a 10 minute lightning talk - we want to hear your talk ideas. If you have a great idea but don’t feel ready for the stage, we've got you covered! We offer speaker workshops, one-on-one coaching sessions, and more.&lt;br&gt;
&lt;strong&gt;Call for speakers closes January 18, 2022&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/world-2022-call-for-speakers"&gt;Submit Your Talk!&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#freshest-tutorials-on-devhub"&gt;
  &lt;/a&gt;
  🎓 Freshest Tutorials on &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Want to find the latest MongoDB tutorials and articles created for developers, by developers? Look no further than our &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#bringing-your-data-to-your-wrist-with-the-mongodb-data-api-and-fitbit"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/how-to/atlas_data_api_and_fitbit/"&gt;Bringing Your Data to Your Wrist with the MongoDB Data API and Fitbit&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/john-page/"&gt;John Page&lt;/a&gt; &lt;br&gt;
In this article, we will see how to call the Data API from a smartwatch application to retrieve a document that contains data to display.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#introducing-the-mongodb-analyzer-for-net"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/article/introducing-mongodb-analyzer-dotnet/"&gt;Introducing the MongoDB Analyzer for .NET&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gfe80irq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/exu8z25ikv22ws60bnxu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gfe80irq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/exu8z25ikv22ws60bnxu.gif" alt="GIF - Accessing the tooltip for a LINQ expression" width="880" height="191"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/adriennetacke"&gt;Adrienne Tacke&lt;/a&gt;&lt;br&gt;
Say hello to the MongoDB Analyzer for .NET. This tool translates your C# queries to their MongoDB Query API equivalent and warns you of unsupported expressions and invalid queries at compile time, right in Visual Studio.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#kafka-to-mongodb-atlas-end-to-end-tutorial"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/how-to/kafka-mongodb-atlas-tutorial/"&gt;Kafka to MongoDB Atlas End to End Tutorial&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/pavel-duchovny/"&gt;Pavel Duchovny&lt;/a&gt; &lt;br&gt;
In this article, we will provide a simple step-by-step guide on how to connect a remote Kafka cluster—in this case, a Confluent Cloud service—with a MongoDB Atlas cluster.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#mongodb-on-twitch-amp-youtube"&gt;
  &lt;/a&gt;
  📺 MongoDB on &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt; &amp;amp; &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;We stream tech tutorials, live coding, and talk to members of our community via &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube&lt;/a&gt;. Sometimes, we even stream twice a week! Be sure to &lt;a href="https://www.twitch.tv/mongodb"&gt;follow us on Twitch&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;subscribe to our YouTube channel&lt;/a&gt; to be notified of every stream!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Latest Stream&lt;/em&gt;&lt;br&gt;
How we built Mongo World, a Game Built with Unity and MongoDB Realm&lt;br&gt;
&lt;iframe src="https://player.twitch.tv/?video=1255999546&amp;amp;parent=dev.to&amp;amp;autoplay=false" height="399" width="710"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;🍿 &lt;a href="https://www.twitch.tv/mongodb"&gt;Follow us&lt;/a&gt; on Twitch and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;subscribe to our YouTube channel&lt;/a&gt; so you never miss a stream!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#%F0%9F%8E%99-last-word-on-the-mongodb-podcast"&gt;
  &lt;/a&gt;
  🎙 Last Word on the &lt;a href="https://mongodb.libsyn.com/"&gt;MongoDB Podcast&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Latest Episode&lt;/em&gt;&lt;br&gt;
&lt;iframe src="https://open.spotify.com/embed/episode/5Q8tbQcTcxxM1fWGU3GkBq" width="100%" height="232px"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Catch up on past episodes&lt;/em&gt;:&lt;br&gt;
Ep. 96 - &lt;a href="https://open.spotify.com/episode/5mRaLAaVoG4kgxRge9d968?si=aalAbiVgRzO9cIo7fOzVhw"&gt;Christmas Lights and Webcams with the MongoDB Data API&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 95 - &lt;a href="https://open.spotify.com/episode/4liGrDKAKoa6A5yycob8Xt?si=ez5tyGRKSsGB4JrDTG5OGQ"&gt;Life at MongoDB: Exploring Cloud Support with Mark Kirpichnikov and Jon Fanti&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 94 - &lt;a href="https://open.spotify.com/episode/3JjNwmufWxFrRjyOYD9RdK?si=l9hcQ0TjThql9mBaHWF7mA"&gt;DevOps, IaC, Terraform and MongoDB with John Fahl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Not listening on Spotify? We got you! We're most likely on your favorite podcast network, including &lt;a href="https://podcasts.apple.com/us/podcast/the-mongodb-podcast/id1500452446"&gt;Apple Podcasts&lt;/a&gt;, &lt;a href="https://player.fm/series/the-mongodb-podcast"&gt;PlayerFM&lt;/a&gt;, &lt;a href="https://podtail.com/en/podcast/the-mongodb-podcast/"&gt;Podtail&lt;/a&gt;, and &lt;a href="https://www.listennotes.com/podcasts/the-mongodb-podcast-mongodb-0g6fUKMDN_y/"&gt;Listen Notes&lt;/a&gt; 😊)&lt;/p&gt;




&lt;p&gt;💡 These $weeklyUpdates are always posted to the &lt;a href="https://www.mongodb.com/community/forums/"&gt;MongoDB Community Forums&lt;/a&gt; first! &lt;a href="https://account.mongodb.com/account/register"&gt;Sign up&lt;/a&gt; today to always get first dibs on these $weeklyUpdates and other MongoDB announcements, interact with the MongoDB community, and help others solve MongoDB related issues!&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>database</category>
      <category>dotnet</category>
      <category>programming</category>
    </item>
    <item>
      <title>The story behind JS: how async works</title>
      <author>Saksham</author>
      <pubDate>Fri, 14 Jan 2022 19:18:16 +0000</pubDate>
      <link>https://dev.to/sakshamak/the-story-behind-js-how-async-works-2jea</link>
      <guid>https://dev.to/sakshamak/the-story-behind-js-how-async-works-2jea</guid>
      <description>&lt;p&gt;We all know that JS is a single-threaded non-blocking asynchronous concurrent language.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But what does this actually mean?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let’s find out: &lt;/p&gt;

&lt;p&gt;Suppose we have a function that calls another function that calls one more function, such as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callAdd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;finalFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addDigits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callAdd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;addDigits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;finalFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Output: 7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We all know that &lt;code&gt;finalFunc&lt;/code&gt; will call &lt;code&gt;callAdd&lt;/code&gt;, callAdd will call &lt;code&gt;add&lt;/code&gt;, and add will return the sum of these two numbers and we will get &lt;code&gt;7&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;But what’s happening behind the scenes?&lt;br&gt;
&lt;a href="https://i.giphy.com/media/xT0xemn9kAM4F52NFK/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/xT0xemn9kAM4F52NFK/giphy-downsized.gif" alt="gif" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, there is a thing called &lt;strong&gt;call stack&lt;/strong&gt; in JavaScript which is a type of data structure that records basically where we are currently in our program. &lt;/p&gt;

&lt;p&gt;It looks something like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qiDyLXBL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186131751/yzMLLABof.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qiDyLXBL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186131751/yzMLLABof.png" alt="image.png" width="283" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And in here, this is how our program runs:&lt;/p&gt;

&lt;p&gt;lets take a look at our code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callAdd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;finalFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addDigits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callAdd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;addDigits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;finalFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Output: 7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here when we called the &lt;code&gt;finalFunc&lt;/code&gt; function, it was recorded in the call stack, and inside that we called another function which was then called and got recorded in the call stack again, which called the &lt;code&gt;add&lt;/code&gt; function and it gets recorded as we can see in our diagram. &lt;/p&gt;

&lt;p&gt;The return statement then gets executed and the function is removed from the call stack. &lt;br&gt;
then the return statement of &lt;code&gt;callAdd&lt;/code&gt; function gets executed and it gets removed from the stack and then the &lt;code&gt;finalFunc&lt;/code&gt; then calls the &lt;code&gt;console.log&lt;/code&gt; function and it gets executed and then the &lt;code&gt;finalFunc&lt;/code&gt; is removed from the call stack and the program ends.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vBYKZP4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186480797/CCUSBkmil.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vBYKZP4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186480797/CCUSBkmil.gif" alt="ezgif.com-gif-maker (1).gif" width="600" height="330"&gt;&lt;/a&gt;&lt;br&gt;
So this is how our program actually runs inside JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Correction: The code in this video is a bit incorrect, the actual code is the one written above.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#waiting-for-callbacks-and-settimeout"&gt;
  &lt;/a&gt;
  Waiting for Callbacks and SetTimeout
&lt;/h3&gt;

&lt;p&gt;Let us assume that callbacks and setTimeout are synchronous and we call them in our program. Then what do you think will happen? &lt;br&gt;
The call stack waits until the processing of the current is done. So, yes, the call stack will have to wait till the timeout ends. Till then we won't be able to do any task. &lt;/p&gt;

&lt;p&gt;And suppose there is one callback that never returns. Then what?&lt;br&gt;
Your code will be stuck forever. That’s why being asynchronous is important.&lt;/p&gt;

&lt;p&gt;We did the normal function call in JS. But now let's try setTimeout in our program. FYI setTimeout and callbacks are not part of the JS engine. They are part of browser API.&lt;/p&gt;

&lt;p&gt;And now setTimeouts are something that waits to perform a particular action. But as we said JavaScript is a non-blocking language. Then where does this waiting go?&lt;/p&gt;

&lt;p&gt;So what happens behind the scenes, in the case of timeouts, is that when a timeout is called it is shifted to a special place called &lt;strong&gt;callback queue&lt;/strong&gt; or &lt;strong&gt;task queue.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;The role of the callback queue is to hold the timeouts when they are complete and send it to the call stack when it's empty.&lt;/p&gt;

&lt;p&gt;But who checks if the call stack is empty or not?&lt;/p&gt;

&lt;p&gt;This is where the event loop comes into play. The event loop keeps on checking if the queue and call stack are empty or not, if the task queue is not empty it checks if the call stack is empty or not, if the call stack is empty then it sends the timeouts to call stack one by one.&lt;/p&gt;

&lt;p&gt;Something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callAdd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;callAdd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;callAdd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Output: &lt;/span&gt;
&lt;span class="c1"&gt;//5&lt;/span&gt;
&lt;span class="c1"&gt;// callAdd&lt;/span&gt;
&lt;span class="c1"&gt;//hello world&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how a browser looks and as we can see that JS engine is not the only thing that is present in the browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ae5L1sI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186905759/dMOJi-w-7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ae5L1sI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186905759/dMOJi-w-7.png" alt="image.png" width="490" height="406"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we look at the above code, initially the call stack is empty, when the code starts running, first the console.log() function will come in the call stack and it will call the add function. The add function will execute and is removed from the stack, then console.log is executed and removed from the stack.&lt;/p&gt;

&lt;p&gt;Next comes the settimeout, function that comes to the call stack but then it is moved to the browserAPI section and waits till the timer is up, and is moved to the task queue, till then callAdd function is called to the call stack, and is executed, then console.log function is called inside the call stack and is executed and removed and then callAdd function is removed.&lt;/p&gt;

&lt;p&gt;And in between that the event loop keeps on checking if the call stack is empty or not, now as our call stack is empty, the event loop sends the setTimeout function from the task queue to the call stack which then calls the console.log() function which executes and removed from the call stack and finally setTimeout is removed from the stack and the program ends.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iuBaMVDF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186965937/q3XU5KFX4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iuBaMVDF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186965937/q3XU5KFX4.gif" alt="ezgif.com-gif-maker.gif" width="600" height="338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you must be wondering what this microtask queue is?&lt;br&gt;
Well, it's exactly the same as a callback queue except that all the callbacks functions are stored here and the Microtask queue has a &lt;strong&gt;higher priority&lt;/strong&gt; over the callback queue. which means that if there is anything inside the microtask queue it doesn't matter if the callback queue is full. &lt;/p&gt;

&lt;p&gt;Until the microtask queue is not empty callback queue will not run.&lt;/p&gt;

&lt;p&gt;If we made a callback function, then that is stored in the browser api till it gets resolved, it is then sent to the microtask queue and the event loop waits till the call stack is empty and then sends the callback function to the call stack and it executes.&lt;/p&gt;

&lt;p&gt;So this was all about how async JS works. And yes, JS doesn’t like to wait so thanks to the event loop and the queues for the hard work.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10 Augmented Reality Trends of 2022: A Vision of Immersion</title>
      <author>Andrew Makarov</author>
      <pubDate>Fri, 14 Jan 2022 18:57:17 +0000</pubDate>
      <link>https://dev.to/andrewmobi/10-augmented-reality-trends-of-2022-a-vision-of-immersion-42j3</link>
      <guid>https://dev.to/andrewmobi/10-augmented-reality-trends-of-2022-a-vision-of-immersion-42j3</guid>
      <description>&lt;p&gt;Augmented reality technology has proven to be one of the top innovations opening up new growth points for businesses around the world. Analysts predict that the AR market will reach &lt;a href="https://www.statista.com/statistics/591181/global-augmented-virtual-reality-market-size/"&gt;$198 billion in 2025&lt;/a&gt;. This year, the number of mobile AR users is expected to reach 3.5 billion.&lt;/p&gt;

&lt;p&gt;With a large market to tap into, providing AR experiences can be a competitive edge in many industries. The improving technology also stands to allow for greater efficiency in the workplace. Let’s take a look at some of the augmented reality trends driving innovation in 2022. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-1-mobile-augmented-reality-is-evolving"&gt;
  &lt;/a&gt;
  Trend #1: Mobile Augmented Reality Is Evolving
&lt;/h2&gt;

&lt;p&gt;Mobile augmented reality has many clear advantages that make it the center of much of the technology’s attention. Many users already own an AR capable smartphone, so there’s no need for them to go out of their way to get an expensive and bulky headset. Mobile devices, by their nature, are very portable and easy to bring into nearly any space. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pzsPBkTE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2b0d2rb3n9p1k2pcbees.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pzsPBkTE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2b0d2rb3n9p1k2pcbees.png" alt="Mobile AR 2020-2021: ARKit + ARCore" width="880" height="521"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#apple-arkit-5"&gt;
  &lt;/a&gt;
  APPLE ARKIT 5
&lt;/h3&gt;

&lt;p&gt;The latest version of Apple’s open source mobile augmented reality development toolset, &lt;a href="https://developer.apple.com/augmented-reality/arkit/"&gt;ARKit 5&lt;/a&gt;, offers significant improvements from ARKit 4. Some of the most important enhancements include expanded support for location anchors, improved motion tracking, and greater face tracking in the ultra wide camera on the 5th generation iPad Pro. App Clip Codes also enable AR experiences that can be activated through a quick scan. &lt;/p&gt;

&lt;p&gt;Location anchors have seen improvements since they were introduced in ARKit 4. Location anchors enable enhanced AR-based navigation solutions. This allows app developers to place virtual objects with specific latitude, longitude, and altitude on the screen relative to the positions of real world objects. For example, location anchors could display a three dimensional icon or text in space next to an iconic building. Support for this feature has been expanded to London and other cities in the United States in ARKit 5. &lt;/p&gt;

&lt;p&gt;Expanded face tracking now supports all devices with the A12 Bionic chip and later, even without TrueDepth Camera, like iPhone SE, so you can reach even more users. Also face tracking is now supported by the Ultra Wide camera in the latest iPad Pro (5th generation).&lt;/p&gt;

&lt;p&gt;This feature allows for tracking of up to three faces at once. &lt;/p&gt;

&lt;p&gt;App Clip Codes are useful QR code-like images that can be scanned to start up a lightweight portion of an app. Integrating this feature with ARKit allows for augmented reality experiences to be started up from anywhere without having to download additional software. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Business owners looking to build apps that utilize &lt;a href="https://mobidev.biz/blog/arkit-guide-augmented-reality-app-development-ios"&gt;ARKit may find our ARKit Development Guide&lt;/a&gt; useful for getting an overview of how they can achieve their goals.&lt;/strong&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arcore"&gt;
  &lt;/a&gt;
  ARCORE
&lt;/h3&gt;

&lt;p&gt;The Android equivalent of ARKit, ARCore provides the open source native tool set needed for developers to create augmented reality apps on Android devices. It is generally seen as being a bit of a different challenge than ARKit due to the fact that special attention should be paid to the wide variety of hardware that exists on devices running Android. Because of this, certain features may not be compatible with all Android devices. &lt;/p&gt;

&lt;p&gt;This past year, Google introduced a few new features for ARCore such as recording and playback APIs. These enable developers to record video footage with AR metadata. By using depth and IMU motion sensor data, developers can recreate the same environment as in the video and use it for further testing. This opens up the opportunity for developers to more easily test specific environments with their software. &lt;/p&gt;

&lt;p&gt;Recording and playback API isn’t just useful for developers, but for users as well. This technology makes it possible for users to record video and then apply AR effects later on since video can contain environmental metadata. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arkit-vs-arcore"&gt;
  &lt;/a&gt;
  ARKIT VS ARCORE
&lt;/h3&gt;

&lt;p&gt;The battle between ARKit and ARCore isn’t as clear cut as you might think. ARKit appears to have the best compatibility between software and hardware, as Apple is responsible for all aspects of their devices. However, not every user in the market owns an iPhone or iPad. ARCore is just as important to focus on due to user accessibility. Although support is not guaranteed for every Android device due to variation in hardware, including as many users as possible is important for remaining competitive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PtbPEvun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/axuwwp1ct76z4q8qvd34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PtbPEvun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/axuwwp1ct76z4q8qvd34.png" alt="Comparison of ARKit and ARCore features in 2022" width="880" height="506"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In terms of actual performance, the technology behind these two frameworks is almost the same. For example, for applications like scene detection, the two technologies use the same methods, differing most significantly in hardware. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you’d like to learn more about technologies and platforms for AR applications, read the MobiDev Experts’ Guide to &lt;a href="https://mobidev.biz/blog/augmented-reality-development-guide"&gt;Developing Augmented Reality&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-2-powering-indoor-and-outdoor-navigation"&gt;
  &lt;/a&gt;
  Trend #2: Powering Indoor and Outdoor Navigation
&lt;/h2&gt;

&lt;p&gt;In 2022, &lt;a href="https://mobidev.biz/blog/augmented-reality-indoor-navigation-app-developement-arkit"&gt;AR navigation&lt;/a&gt; has become more fluid and achievable than ever before. Most importantly, the rise of technologies like Bluetooth Low Energy (BLE) antennas, Wi-Fi RTT and ultra wideband (UWB) make indoor navigation much more viable than in previous years. One of the most useful applications of this technology is for displaying AR directions in large indoor locations like distribution centers, shopping malls, and airports. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Watch the demo below to find out how MobiDev implemented mobile AR for navigation of the corporate campus.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/VmROm6nbElA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Something that shouldn’t be overlooked is this technology’s potential to be used by both consumer and business users. Just as a guest in a store may use AR indoor navigation to find the product they’re looking for, a distribution center worker may use it to find a particular item in their warehouse. Although comfortable and affordable glasses with AR capability aren’t quite here yet, the capacity for the business applications of AR in distribution centers, stores, and other sectors is there. One of the leading device manufacturers, Zebra, has ARCore-capable mobile enterprise devices such as the TC52, TC57, and TC77. These are essentially Android-powered smartphones with barcode scanners intended for business use. &lt;/p&gt;

&lt;p&gt;With indoor navigation, buy online pick up in store (BOPIS) services can be made much more efficient. Team members tasked to ‘pick’ the items in the store for order fulfillment can use AR directions to directly navigate to find the item as opposed to following coordinate directions to find the item. This eliminates time spent looking through many similar items and finding the correct aisle and section of the store. All the team member has to do is hold up their device and see the directions on screen. &lt;/p&gt;

&lt;p&gt;There are some limitations that need to be taken into account, such as items that have been misplaced around the store. If they have been moved by guests or incorrectly logged into the system, the team member might use AR navigation on their device to arrive at an empty spot on a shelf. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-3-healthcare-and-augmented-reality"&gt;
  &lt;/a&gt;
  Trend #3: Healthcare and Augmented Reality
&lt;/h2&gt;

&lt;p&gt;According to &lt;a href="https://www2.deloitte.com/global/en/pages/life-sciences-and-healthcare/articles/global-health-care-sector-outlook.html"&gt;Deloitte Research&lt;/a&gt;, augmented reality and AI will transform the traditional healthcare business model by offering AR/MR-enabled hands-free solutions and IA-based diagnostic tools. For example, Microsoft Hololens 2 can provide information to the surgeon while allowing them to use both of their hands during the procedure. &lt;/p&gt;

&lt;p&gt;With the continued restrictions associated with Covid-19, the use of augmented reality solutions is becoming increasingly important to address issues such as the complexity of remote patient support and the increased burden on hospitals. This includes both telesurgery solutions and mental health apps that are helping people to maintain psychological balance during these difficult times.&lt;/p&gt;

&lt;p&gt;AR technology can also improve telemedicine solutions that are on the rise right now. Features such as drawing and annotating on the 3D screen can make communication between doctors and patients much easier and clearer. Remote assistance tools can also help clinicians support their patients while reducing downtime.&lt;/p&gt;

&lt;p&gt;Combining with &lt;a href="https://mobidev.biz/blog/5-essential-machine-learning-techniques"&gt;machine learning algorithms&lt;/a&gt;, AR technology can become an efficient option for disease detection. Back in 2020, Google announced the development of an AR-based microscope for the Department of Defense (DoD) to improve the accuracy of cancer diagnosis and treatment. Such a hybrid device uses a camera to capture images in real time, which are then processed using computer diagnostics to immediately display results and diagnose diseases at an early stage.&lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://www.researchdive.com/covid-19-insights/218/global-augmented-reality-ar-in-healthcare-market"&gt;Research Dive&lt;/a&gt;, the global augmented reality (AR) in the healthcare market is expected to generate $1,918.6 million by 2026.&lt;/p&gt;

&lt;p&gt;Learn how AR and other innovative technologies are being used in healthcare by reading &lt;a href="https://mobidev.biz/blog/technology-trends-healthcare-digital-transformation"&gt;Health Technology Trends and Digital Innovation in 2022&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-4-augmented-reality-shopping-experiences"&gt;
  &lt;/a&gt;
  Trend #4: Augmented Reality Shopping Experiences
&lt;/h2&gt;

&lt;p&gt;Augmented reality has numerous opportunities in the &lt;a href="https://mobidev.biz/blog/augmented-reality-marketing-sales"&gt;retail sector&lt;/a&gt;. One of these opportunities that is currently being realized is store mapping. With augmented reality, on-screen directions can help a user navigate the layout of the store to find the item that they need. Dent Reality is one of the companies developing AR mapping systems for stores. All the user has to do is hold their phone up and follow the augmented reality directions through the aisles to their destination: the item they’re looking for. &lt;/p&gt;

&lt;p&gt;However, AR in retail doesn’t stop at navigation in 2022. In fact, it can help users shop in stores and from home. For example, AR-based marketing materials can not only improve the engagement of your audience but also increase the likelihood of purchases. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;At MobiDev, we’ve created a demo that shows how a solution like augmented reality business cards can influence purchasing decisions by interactively presenting information about your products and services.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/u8njnXc7ziY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Augmented reality is also very useful for helping customers ‘test’ products before purchasing. Stores like Ikea and Target have already rolled out apps that allow users to use AR to see how furniture will fit in their homes. Many stores like Target, Sephora, and others are also using virtual try-on solutions to allow guests to test products like makeup, glasses, and even other types of clothing like shoes. Most importantly, this can be done in store or at home. As AR technology matures, the &lt;a href="https://instasize.com/blog/5-fundamentals-to-boost-your-customer-focus"&gt;comfort of consumers&lt;/a&gt; will only increase.&lt;/p&gt;

&lt;p&gt;As mobile &lt;a href="https://mobidev.biz/blog/ar-ai-technologies-virtual-fitting-room-development"&gt;virtual fitting room technology&lt;/a&gt; improves, so do in-store smart mirrors. In 2011, Topshop used virtual mirrors powered by Xbox Kinect 3D cameras. It was a great proof of concept that preceded more advanced use-cases today with better graphics and processing. According to &lt;a href="https://www.fortunebusinessinsights.com/press-release/virtual-fitting-room-vfr-market-9531#:~:text=The%20global%20virtual%20fitting%20room%20market%20size%20is,as%20gamification%2C%20product%20information%2C%20content%2C%20and%20augmented%20environments."&gt;Fortune Business Insights&lt;/a&gt;, the virtual fitting room market size was valued at $3.5 billion in 2021. It is expected to grow to $12.97 billion by 2028.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-5-augmented-reality-and-remote-assistance"&gt;
  &lt;/a&gt;
  Trend #5: Augmented Reality and Remote Assistance
&lt;/h2&gt;

&lt;p&gt;Augmented reality can greatly improve user experiences with assistance and learning. According to &lt;a href="https://resources.owllabs.com/state-of-remote-work/2020"&gt;Owl Labs&lt;/a&gt;, in 2020 nearly 70% of workers in the U.S. working full time, &lt;a href="https://www.sweetprocess.com/work-from-home/"&gt;work from home&lt;/a&gt;. With video conferencing being the lifeblood of telework, various problems emerge. How can we compensate for the lost context and benefits of meeting in the ‘real world?’ &lt;/p&gt;

&lt;p&gt;When we use video conferencing, we lose an entire dimension of context, moving into two dimensional space instead of three. This can negatively impact jobs like IT technical support. Teleconferencing is limited, only allowing IT specialists to make suggestions so that the user can fix the problem on their own before they choose to send their device into the office for repairs. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ar-in-action-3d-video-call-assistance"&gt;
  &lt;/a&gt;
  AR IN ACTION: 3D VIDEO CALL ASSISTANCE
&lt;/h3&gt;

&lt;p&gt;Augmented reality software can help at least partially restore that lost dimension of space back into the conversation. AR can allow IT technicians to give guidance to users with 3D on-screen directions. As the user holds their smartphone camera up to their computer in need of service, the IT technician can draw over the screen to direct the customer to certain points of interest. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We developed a solution that does just that. You can see it in action in the video below.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/11NiyGoKOrk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Experiences like this can be constructed with WebRTC. This allows for both parties to connect to one another and see the same AR experience via a peer-to-peer connection. This is essential to make sure that the video is sent in real time without causing debilitating server load. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ar-in-action-virtual-manuals"&gt;
  &lt;/a&gt;
  AR IN ACTION: VIRTUAL MANUALS
&lt;/h3&gt;

&lt;p&gt;As a slight departure from telework, virtual manuals are a compelling technology used in various industries to improve user satisfaction and understanding of products. It also has many applications in education. With object recognition, AR guides can identify objects and inform the user about their functions. This can make for effective guides for products like consumer electronics, vehicle interiors, and more. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The MobiDev demo below demonstrates this technology in action with a coffee machine. The AR guide in the video gives more context about the coffee machine’s capabilities and provides additional instructions all on the user’s smartphone.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/6ceN7YgSEdU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-6-augmented-reality-in-automotive-industries"&gt;
  &lt;/a&gt;
  Trend #6: Augmented Reality in Automotive Industries
&lt;/h2&gt;

&lt;p&gt;AR technology has had profound impacts on vehicle safety and usability. Tesla Motors has demonstrated the possibilities of AR for the road. Although they haven’t implemented it as many might imagine with headsets, they have used almost identical technologies to make it possible. With the Full Self-Driving Beta now on the road and used by many consumers, drivers can see how the vehicle’s advanced suite of cameras consistently analyze the world around them using object detection and scene analysis. The results of this powerful system can be seen on the display of the vehicle, showcasing the car’s position in space relative to the many obstacles around it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heads-up-display"&gt;
  &lt;/a&gt;
  HEADS UP DISPLAY
&lt;/h3&gt;

&lt;p&gt;However, AR has other possible applications for drivers. It could help provide drivers with a heads up display (HUD) via a headset to give them safety information without obstructing their field of vision. With eye tracking, this kind of system and similar non-headset based solutions can help keep drivers focused on the road with auditory reminders. &lt;/p&gt;

&lt;p&gt;The &lt;a href="https://varjo.com/testimonial/xr-test-drive-with-volvo/"&gt;Volvo Varjo XR-1 headset&lt;/a&gt; is used for a proof of concept AR driver’s education system that can help drivers learn to respond defensively to obstacles that appear on the road without having the risk of the object actually being present. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automotive-sales"&gt;
  &lt;/a&gt;
  AUTOMOTIVE SALES
&lt;/h3&gt;

&lt;p&gt;Just like in other contexts, AR is an effective sales tool that can help sell cars even while the user is at home. Similar to how one can spawn IKEA furniture in their living room with AR, one can also generate a 3D model of a car in their driveway with their smartphone. The consumer can inspect the size and details of the vehicle, and even watch it move around. Perhaps most strikingly, it’s possible for the user to change the color of the vehicle to see which color they would prefer when purchasing it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-7-ar-glasses-future-or-fiction"&gt;
  &lt;/a&gt;
  Trend #7: AR Glasses, Future or Fiction?
&lt;/h2&gt;

&lt;p&gt;Augmented reality glasses and headsets have an interesting reputation. Although they are widely seen as the future of AR technology and have been tested and utilized in real world applications, they haven’t quite made the mainstream just yet. If they’ve made a landing point anywhere, it has been for enterprise and business solutions.&lt;/p&gt;

&lt;p&gt;Although &lt;a href="https://mobidev.biz/blog/microsoft-hololens-demo"&gt;Microsoft’s HoloLens 2&lt;/a&gt; mixed reality headset is not priced or marketed for consumers, it is in use with the military and with medical practitioners for surgeries and training. The Synthetic Training Environment (STE) used by the US Army uses AR and VR to help immerse soldiers and simulate various scenarios. Australian aircraft technicians are now using Microsoft HoloLens with Boeing-developed software to maintain aircrafts. &lt;/p&gt;

&lt;p&gt;Check the video below to see the HoloLens in action!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vnVZhIRvyp0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;However, these headsets are far too bulky to be used by non-enterprise users, and the failure of Google Glass for consumers showed that we are a long way off from lightweight, comfortable to wear ‘AR glasses’. However, Google Glass launched eight years ago. Are we any closer now? &lt;/p&gt;

&lt;p&gt;Google Glass Enterprise Edition 2 is in use by various businesses like DHL for order fulfillment. There are also plenty of rumors about AR glasses being made by companies like Apple but there isn’t much word on a comfortable to use, affordable and ‘normal’ looking pair of glasses that will take the consumer market by storm. That being said, ARtillery Intelligence expects that the market for this technology will grow from $822 million to $13.4 billion by 2024. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-8-the-metaverse-live-events-and-social-upheaval"&gt;
  &lt;/a&gt;
  Trend #8: The Metaverse, Live Events, and Social Upheaval
&lt;/h2&gt;

&lt;p&gt;Facebook may have taken the Internet by storm with its rebrand to Meta, but the concept of the Metaverse and upheaval of digital communication with extended reality space has been around for some time. The term originated in Neal Stephenson’s 1992 Snow Crash science fiction novel, perhaps speculating the eventual result of how large corporations take more and more control over the lives of consumers. &lt;/p&gt;

&lt;p&gt;It’s important to be cautious of the effects of this shift in the market toward increasingly digital and virtual reality spaces, but ultimately the benefits of this technology can be profoundly helpful and provide businesses competitive advantages in many industries. Although the metaverse is very focused on VR spaces, the movement will likely transform &lt;a href="https://mobidev.biz/blog/how-to-create-augmented-reality-app-for-business-cost-process-flow"&gt;AR’s use in business&lt;/a&gt; and consumer contexts as well. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arpowered-meetings"&gt;
  &lt;/a&gt;
  AR-POWERED MEETINGS
&lt;/h3&gt;

&lt;p&gt;One of the main pitches that Meta offered with its rebranding was the use of ‘metaverse’ technology to improve the way that we work through teleconferencing and hybrid meetings. The ultimate goal of this is to break down the barriers of traditional &lt;a href="https://biz30.timedoctor.com/how-to-use-zoom/"&gt;Zoom video conferencing&lt;/a&gt; and bring the third dimension back into the conversation, as well as human expression and inclusiveness. Microsoft Mesh is a project with HoloLens that helps enable hybrid meetings that enable VR and AR features. Users can see other teleconferencing users in 3D space by viewing their cartoon avatar or a floating box with their video camera. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-ar-better-accessibility-to-ar-features-comes-with-compromise"&gt;
  &lt;/a&gt;
  WEB AR: BETTER ACCESSIBILITY TO AR FEATURES COMES WITH COMPROMISE
&lt;/h3&gt;

&lt;p&gt;One particular trend in enabling better access to AR features is Web AR. This has been used for various purposes like virtual career fairs, &lt;a href="https://mobidev.biz/blog/augmented-reality-demo-marketing-brand-promotion"&gt;animated business cards&lt;/a&gt;, and sporting events. By powering an AR experience completely within a mobile device’s browser, the user doesn’t need to download any external applications.&lt;/p&gt;

&lt;p&gt;However, this comes at a great cost. Web AR does not have access to the full scope of the device’s capabilities. This means that the quality and use-cases of web AR are very limited. For more advanced use of AR, we recommend you consider a native approach.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--53sX54WV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07ppery3k64a22tw5jlx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--53sX54WV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07ppery3k64a22tw5jlx.png" alt="AR-compitable Devices and Active Users 2020-2021" width="880" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Although there are hundreds of millions of WebAR capable mobile devices out there, very few users actively use these experiences.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-9-ar-in-education"&gt;
  &lt;/a&gt;
  Trend #9: AR In Education
&lt;/h2&gt;

&lt;p&gt;We’ve already touched on AR in education a little bit in this article with AR guides. With educational institutions being hit hard by the COVID-19 pandemic, momentum for innovation in this space has increased. Teams like Wikitude have created apps like &lt;a href="https://www.wikitude.com/showcase/teaching-programming-with-ar/"&gt;Ai.R-Cord&lt;/a&gt; with the objective of helping elementary school students learn concepts with AR experiences and this is not the only example. &lt;/p&gt;

&lt;p&gt;AR in education simplifies the perception of information and leverages technology to enable teachers to demonstrate virtual examples and gamify the learning process. This increases student engagement and speeds up the process of mastering the materials. For example, the Chem101 AR app helps students understand complex compounds in chemistry. Using special cards, students can virtually modify molecular structures and receive real-time information about them. &lt;/p&gt;

&lt;p&gt;Augmented reality based apps can also give students access to unique learning environments that are difficult or even dangerous to experience in real life without proper preparation. For example, some apps help medical students learn more about human anatomy through AR visualization and 3D models, and even allow them to simulate surgeries.&lt;/p&gt;

&lt;p&gt;In addition to classroom teaching, AR can also be used in employee training. This technology allows you to train your employees in a safe environment with less cost and higher efficiency. AR apps give an employee the opportunity not only to read about how something works, but to learn how to do it by making actions. Siemens and Japan Airlines have already resorted to this practice. &lt;/p&gt;

&lt;p&gt;AR has every chance of increasing its presence in the education market in the coming  years. Compared to VR, augmented reality offers more cost-effective options with the same benefits. All students need is an Internet connection, a smartphone or tablet, and augmented reality applications. There is no need to buy expensive equipment like a virtual reality headset. According to Statista, 83.96% of the world’s population owns a smartphone, which provides a favorable environment for adopting an AR experience. &lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://www.factmr.com/report/ar-in-education-market"&gt;Fact.MR forecasts&lt;/a&gt;, AR in the education market is projected to witness exponential growth over the coming years, reaching $85 Bn by 2031.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-10-improving-mobile-ar-hardware-amp-lidar"&gt;
  &lt;/a&gt;
  Trend #10: Improving Mobile AR Hardware &amp;amp; LiDAR
&lt;/h2&gt;

&lt;p&gt;One popular trend in the augmented reality industry is improving hardware for mobile devices. In particular, Apple’s famous LiDAR sensor on its iPhone 12 Pro, 12 Pro Max, 13 Pro, and 13 Pro Max smartphones as well as iPad Pro. By using infrared lasers, smartphones like Apple’s can determine the depth of scenes with more precision than ever before. This can make analysis of scenes for AR experiences better than ever.&lt;/p&gt;

&lt;p&gt;Some Android phones use this technology as well with flash-based scannerless LiDAR. Samsung’s DepthVision uses a single flash of infrared light to analyze the depth of the scene. Once that’s done, a 3D map of the scene can be created. On the other hand, Apple offers a scanning LiDAR system. This uses time of flight (TOF) and continuously scans an area over time with various IR pulses in different areas of the scene. &lt;/p&gt;

&lt;p&gt;The aforementioned Apple and Android devices are relatively comparable in their performance in delivering AR experiences to users. However, at the moment, it’s important to consider accessibility. LiDAR hardware is only available on higher end Apple products and Android devices, meaning that the vast majority of AR consumers will only have access to a certain level of quality. Developing applications with this in mind is critical to relevancy in 2022.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#future-of-augmented-reality"&gt;
  &lt;/a&gt;
  Future of Augmented Reality
&lt;/h3&gt;

&lt;p&gt;With the AR industry continuing to climb in market value, augmented reality’s potential cannot be denied. Importantly, it’s clear that AR’s influence extends far beyond just gaming. It now extends to many different industries as demonstrated by the following chart: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KaCgKBTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4kg4rif9h3q25qk59gc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KaCgKBTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4kg4rif9h3q25qk59gc.png" alt="Future of Augmented Reality: Expected revenue by Industry by 2025" width="720" height="840"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Although gaming still has the highest share of industry revenue and will remain a relevant driver of AR, practical uses like in healthcare, engineering, and sales will continue to gain traction. &lt;/p&gt;

&lt;p&gt;Real estate and corporate campus navigation will benefit from AR solutions as well. The growing trend of the ‘metaverse’ will also help accelerate hybridization of telework and virtual meetings with AR technologies. &lt;/p&gt;

&lt;p&gt;If you have ideas about how to implement the above trends in your business, we’ll be happy to assist you with this task. For over 12 years, MobiDev has been helping businesses around the world discover the benefits of innovative technologies such as AR. With over 400 engineers on board, our team can provide the highest level of software development services for companies of all sizes and business domains. Being recognized as one of the top AR development providers by Clutch and GoodFirms, MobiDev has unique expertise in applying augmented reality in existing projects and creating new products based on this technology.&lt;/p&gt;

</description>
      <category>ar</category>
      <category>mobile</category>
      <category>virtual</category>
      <category>metaverse</category>
    </item>
    <item>
      <title>Optimize Your Webserver by Installing a Single NGINX Module</title>
      <author>Slava Knyazev</author>
      <pubDate>Fri, 14 Jan 2022 18:54:41 +0000</pubDate>
      <link>https://dev.to/knyzorg/optimize-your-webserver-by-installing-a-single-nginx-module-5dga</link>
      <guid>https://dev.to/knyzorg/optimize-your-webserver-by-installing-a-single-nginx-module-5dga</guid>
      <description>&lt;p&gt;In 2012, Google released version 1.0 of their &lt;a href="https://www.modpagespeed.com/"&gt;PageSpeed modules&lt;/a&gt; for NGINX and Apache. It has gone largely unnoticed since then. The short of PageSpeed is that if you add it to your web server, you can configure it to optimize anything passing through it using techniques such as minification, format conversion, and even injecting scripts to lazy-load images. You can read more about what it does on &lt;a href="https://developers.google.com/speed/pagespeed/module"&gt;the official site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It sounded great in theory, but how properly install it with NGINX wasn't obvious. While Google does publish &lt;a href="https://www.modpagespeed.com/doc/build_ngx_pagespeed_from_source"&gt;scripts&lt;/a&gt; to help with the installation, it requires a non-trivial depth of knowledge to do right. After struggling with it for many hours, I wrote a guide for personal future reference.&lt;/p&gt;

&lt;p&gt;I recently returned to those notes to entirely automate the process using GitHub Actions. The work is open-source and available on &lt;a href="https://github.com/knyzorg/nginx-pagespeed"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;Run the following as root on a Debian-based machine:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;su
apt-key adv &lt;span class="nt"&gt;--keyserver&lt;/span&gt; keyserver.ubuntu.com &lt;span class="nt"&gt;--recv-keys&lt;/span&gt; 8028BE1819F3E4A0
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"deb https://nginx-pagespeed.knyz.org/dist/ /"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /etc/apt/sources.list.d/nginx-pagespeed.list
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Package: *"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /etc/apt/preferences.d/99nginx-pagespeed
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Pin: origin http://nginx-pagespeed.knyz.org/"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/apt/preferences.d/99nginx-pagespeed
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Pin-Priority: 900"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/apt/preferences.d/99nginx-pagespeed
apt update
apt &lt;span class="nb"&gt;install &lt;/span&gt;nginx-full &lt;span class="c"&gt;# If NGINX is already installed, an `apt upgrade` works too&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"pagespeed on;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /etc/nginx/conf.d/pagespeed.conf
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"pagespeed FileCachePath &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;/var/cache/pagespeed/&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/nginx/conf.d/pagespeed.conf
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"pagespeed FileCacheSizeKb 102400;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/nginx/conf.d/pagespeed.conf
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"pagespeed FileCacheCleanIntervalMs 3600000;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/nginx/conf.d/pagespeed.conf
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"pagespeed FileCacheInodeLimit 500000;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/nginx/conf.d/pagespeed.conf
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"pagespeed RewriteLevel CoreFilters;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/nginx/conf.d/pagespeed.conf
systemctl reload nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The installation process is explained more thoroughly on the GitHub page if you're curious.&lt;/p&gt;

&lt;p&gt;Once that is done, you will have an active NGINX + PageSpeed installation that will receive the same updates as upstream NGINX. You can learn more about individual filters that you can enable in the &lt;a href="https://www.modpagespeed.com/doc/config_filters"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This post was originally shared on my &lt;a href="https://www.bbss.dev/posts/pagespeed/"&gt;Building Better Software Slower&lt;/a&gt; blog&lt;/em&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>linux</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>A recipe sharing web app with Django and React</title>
      <author>Hannah</author>
      <pubDate>Fri, 14 Jan 2022 18:51:39 +0000</pubDate>
      <link>https://dev.to/earthcomfy/a-recipe-sharing-web-app-with-django-and-react-1n40</link>
      <guid>https://dev.to/earthcomfy/a-recipe-sharing-web-app-with-django-and-react-1n40</guid>
      <description>&lt;p&gt;Hello everyone. I've built a recipe sharing app using Django rest framework and React.js. This application has taught me a lot and wanted to share it with you guys.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#main-technologies-used-for-the-project"&gt;
  &lt;/a&gt;
  Main technologies used for the project
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Django, Django rest framework&lt;/li&gt;
&lt;li&gt;React.js, Redux, TailwindCSS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#some-of-the-features"&gt;
  &lt;/a&gt;
  Some of the features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;JWT based user registration and login.&lt;/li&gt;
&lt;li&gt;CRUD endpoints for recipes.&lt;/li&gt;
&lt;li&gt;Like and bookmark feature.&lt;/li&gt;
&lt;li&gt;Unit testing on the backend.&lt;/li&gt;
&lt;li&gt;Documentation of the API using &lt;code&gt;drf_spectacular&lt;/code&gt; which supports OAS3.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;=&amp;gt; There are some things to be fixed on the frontend and other features will be added soon.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screenshots-and-gifs"&gt;
  &lt;/a&gt;
  Screenshots and GIFs
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YE5IJOx1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca5plg2vrlur6r7g251d.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YE5IJOx1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca5plg2vrlur6r7g251d.gif" alt="Landing Page" width="880" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_FO5zWPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ve8combnqx7sylmzs2th.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_FO5zWPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ve8combnqx7sylmzs2th.gif" alt="Login Page" width="880" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RKST8qaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/axc2ktealdpkmxkqtof4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RKST8qaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/axc2ktealdpkmxkqtof4.gif" alt="Quick View" width="880" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N-jmdrjt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llhuseqbqmh0sml5ke7w.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N-jmdrjt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llhuseqbqmh0sml5ke7w.gif" alt="Recipe Form" width="880" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The frontend and backend are hosted separately on &lt;strong&gt;Netlify&lt;/strong&gt; and &lt;strong&gt;Heroku&lt;/strong&gt; respectively. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://mesob-recipe.netlify.app/"&gt;https://mesob-recipe.netlify.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can test the endpoints here: &lt;a href="https://recipe-backend-api.herokuapp.com/"&gt;https://recipe-backend-api.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like the project, give it a star on GitHub.&lt;/p&gt;

&lt;p&gt;Link to GitHub repo: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Backend:&lt;/strong&gt; &lt;a href="https://github.com/earthcomfy/recipe-api"&gt;https://github.com/earthcomfy/recipe-api&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Frontend:&lt;/strong&gt; &lt;a href="https://github.com/earthcomfy/react-recipe-app"&gt;https://github.com/earthcomfy/react-recipe-app&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you guys would like to see a tutorial on how some of the features are done, especially on the integration of Django and React, let me know in the comments section down below. I'll make sure to write a detailed article about the topic.&lt;/p&gt;

&lt;p&gt;Any suggestions and feedbacks are welcome. &lt;/p&gt;

&lt;p&gt;Thanks for your time.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>django</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Drag and Drop in React with React DnD</title>
      <author>jyeett</author>
      <pubDate>Fri, 14 Jan 2022 18:39:51 +0000</pubDate>
      <link>https://dev.to/jyeett/drag-and-drop-in-react-with-react-dnd-243f</link>
      <guid>https://dev.to/jyeett/drag-and-drop-in-react-with-react-dnd-243f</guid>
      <description>&lt;p&gt;Drag and drop is a common feature that many websites you interact with may have. While there are ways to do this with vanilla javascript, html, and css, it doesn't have to be that hard with React DnD. Here we will go through a super simple example of how to implement drag and drop functionality.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h3&gt;

&lt;p&gt;Once you have your react application set up, you will want to install React DnD as well as the backend which takes care of all the HTML drag and drop functionality behind the scenes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install react-dnd react-dnd-html5-backend
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#importing-and-initializing-setup"&gt;
  &lt;/a&gt;
  Importing and Initializing SetUp
&lt;/h3&gt;

&lt;p&gt;Now that we have React DnD in our project packages, we will want to wrap the main component that is being rendered with a DndProvider. Be sure to import DndProvider and the Backend from the packages you just installed. Our HTML5Backend will be passed as a prop to the DndProvider component.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PeoZG4nH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vm01pl1jy7db0oq2miio.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PeoZG4nH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vm01pl1jy7db0oq2miio.png" alt="Image description" width="436" height="303"&gt;&lt;/a&gt;&lt;br&gt;
Next we will take a look at that Dragdrop component, which will render the interface for our drag and drop example.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#containers-and-items"&gt;
  &lt;/a&gt;
  Containers and Items
&lt;/h3&gt;

&lt;p&gt;The goal of this tutorial will be to drag images from one container to populate an initially empty drop board. We will start with an array of objects that will store our image urls attached to an id number. This will become important a little bit later when specifying what image we want to drop into our drop board.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wEWxX97u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1z87bcc6u93ql5tk1n22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wEWxX97u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1z87bcc6u93ql5tk1n22.png" alt="Image description" width="880" height="266"&gt;&lt;/a&gt;&lt;br&gt;
Then to render our pictures, we will map over our list and send each individual picture to a separate Picture component. All the picture components we accumulate will be added to the initial box that images can be dragged from.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BO-1JoFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6p140u5ijsvnyhqnh2v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BO-1JoFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6p140u5ijsvnyhqnh2v.png" alt="Image description" width="676" height="28"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iPsDKAE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ebhys8w3x8qo9f579rq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iPsDKAE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ebhys8w3x8qo9f579rq.png" alt="Image description" width="296" height="190"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we'll take a look at our Picture component which is taking in the url and id as props from our list of images.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#draggable-component"&gt;
  &lt;/a&gt;
  Draggable Component
&lt;/h3&gt;

&lt;p&gt;We want our pictures to be draggable, so this is where we will use the useDrag hook from React DnD.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z6oGOtfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qhb9i71d7uckmgef20d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z6oGOtfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qhb9i71d7uckmgef20d.png" alt="Image description" width="849" height="332"&gt;&lt;/a&gt;&lt;br&gt;
Notice how useDrag is being initialized, with the object &lt;em&gt;isDragging&lt;/em&gt;, and a ref &lt;em&gt;drag&lt;/em&gt;. The useDrag hook is initialized with an object containing keys type, item, and collect. The type can be named arbitrarily, but we will soon see that our Drop hook will have to take the same type so it can receive the correct item. Our item will use the picture id so our app knows which picture has been selected to drag. Finally, React DnD looks for our user's action through monitor to determine if an item is currently being dragged or not. This response information is associated with the collect key.&lt;/p&gt;

&lt;p&gt;Our final return for the Picture component will take in the &lt;em&gt;drag&lt;/em&gt; ref and &lt;em&gt;isDragging&lt;/em&gt; boolean so we can make some stylistic changes when the user is dragging an item.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dropping-items"&gt;
  &lt;/a&gt;
  Dropping Items
&lt;/h3&gt;

&lt;p&gt;Now that we can drag items, we need to have a place to drop them. Back in our Dragdrop component, we can use a state variable to hold an array of all the items we are dropping into the drop board. Then similarly to the useDrag hook, we will now use the useDrop hook to take our item and add it to our drop board.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_DSkQgwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/so9g1lwj8yuhlux9xcec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_DSkQgwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/so9g1lwj8yuhlux9xcec.png" alt="Image description" width="687" height="292"&gt;&lt;/a&gt;&lt;br&gt;
Alternatively to drag, &lt;em&gt;isOver&lt;/em&gt; and &lt;em&gt;drop&lt;/em&gt; will now be used to see if the item is being held over a valid place to drop. The useDrop hook will look to accept the type that was specified in our draggable component. When the item is dropped over a valid section, the item will be added to the board state, filtering from the original list of pictures by the id that we gave the item. And again, to determine if the user is holding the item over a valid place to drop, the monitor will look to see if it is over a corresponding container.&lt;/p&gt;

&lt;p&gt;Once we have the new updated board in state, we can render the picture again but this time in the new drop board. To make a new container where we can drop items, we need to add the &lt;em&gt;drop&lt;/em&gt; ref. To visualize, we can again use &lt;em&gt;isOver&lt;/em&gt; to change some styling about our drop container.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4awoezvL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kl3l021k8fp3g8e74ie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4awoezvL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kl3l021k8fp3g8e74ie.png" alt="Image description" width="866" height="196"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-product"&gt;
  &lt;/a&gt;
  Final Product
&lt;/h3&gt;

&lt;p&gt;Now with a bit of styling to our components we can see the following when dragging one of the images over the drop board.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---_pYRiWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xznj117m56fegiy80chu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---_pYRiWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xznj117m56fegiy80chu.png" alt="Image description" width="880" height="423"&gt;&lt;/a&gt;&lt;br&gt;
Once it is dropped, the board will have our new picture!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--caQVor47--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8s279nfkt1j18nmdfeqp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--caQVor47--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8s279nfkt1j18nmdfeqp.png" alt="Image description" width="880" height="394"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are the css styles I used for this simple example:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YMPjpPbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34bku46cebckz2v3bot3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YMPjpPbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34bku46cebckz2v3bot3.png" alt="Image description" width="280" height="486"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I would highly recommend taking a look at the official React DnD documentation where they give even further capabilities to this library.&lt;br&gt;
&lt;a href="https://react-dnd.github.io/react-dnd/about"&gt;https://react-dnd.github.io/react-dnd/about&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 14 Jan 2022 18:30:07 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-2b5k</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-2b5k</guid>
      <description>&lt;p&gt;Hey there! &lt;/p&gt;

&lt;p&gt;Looking back on this past week, what was something you were proud of accomplishing?&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Cleaning off your desk ... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope you have time to relax and take a victory lap in the next few days!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3djolNOedd5pS/giphy-downsized-large.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3djolNOedd5pS/giphy-downsized-large.gif" alt="Donkey in a hammock" width="511" height="287"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>How to Secure Your HTTP APIs</title>
      <author>Liz Parody</author>
      <pubDate>Fri, 14 Jan 2022 18:15:52 +0000</pubDate>
      <link>https://dev.to/lizparody/how-to-secure-your-http-apis-537m</link>
      <guid>https://dev.to/lizparody/how-to-secure-your-http-apis-537m</guid>
      <description>&lt;p&gt;If you are building an application with HTTP APIs that serve sensitive data, one of the key considerations is security. You want to ensure that callers of your API are authorized to make those calls before they are granted access to sensitive information or perform sensitive operations. &lt;/p&gt;

&lt;p&gt;This post will review a few  HTTP API access control approaches, from simple API keys to OAuth. It will also discuss a more complex yet flexible scheme that enables your customers to influence how access control decisions are made, based on how we approached securing API traffic to &lt;a href="https://fusebit.io"&gt;Fusebit&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-multitenant-cloud-application"&gt;
  &lt;/a&gt;
  A Multi-Tenant Cloud Application
&lt;/h2&gt;

&lt;p&gt;Most web applications with APIs built today are multi-tenant. They have many customers or users (called &lt;em&gt;tenants&lt;/em&gt;). The expectation is that your secure REST APIs enable your tenant’s access and control over their data, but not the data of other tenants of your app. &lt;/p&gt;

&lt;p&gt;Let’s say you are building an application that enables stores to track their inventory. Each store is a separate tenant of your app. You expose REST API for inspecting and modifying a store’s inventory. It could look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;storeId&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;inventory&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;searchStoreInventory&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;storeId&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;inventory&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createStoreInventoryItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;storeId&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;inventory&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;itemId&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getStoreInventoryItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;storeId&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;inventory&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;itemId&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateStoreInventoryItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;storeId&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;inventory&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;itemId&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;deleteStoreInventoryItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You have signed up multiple stores as customers of your app. Your application security requires that each store can access and manipulate its own inventory, but not the inventory of other stores. Moreover, you may want to distinguish between individual callers acting on behalf of a single store, with some having only the read access to the inventory, while others both read and write.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authentication-and-authorization"&gt;
  &lt;/a&gt;
  Authentication and Authorization
&lt;/h2&gt;

&lt;p&gt;It is useful to secure your HTTP APIs in two separate steps: authentication and authorization. &lt;/p&gt;

&lt;p&gt;Authentication is the process of proving the &lt;em&gt;identity&lt;/em&gt; of the caller. When the authentication process is complete, you know whether Daisy or John made the call. &lt;/p&gt;

&lt;p&gt;Once you understand who is making the request (who the authenticated user is), the next step is to determine what &lt;em&gt;permissions&lt;/em&gt; the caller has. This process is authorization. When the authorization is complete, you know that John can only look up the inventory of the “Pet’s Parlor” store, while Daisy can both look up and modify the inventory of the “International Burger Machines” store. &lt;/p&gt;

&lt;p&gt;It is interesting to note that as a developer securing the HTTP APIs at the application level, you mostly care about the permissions of the caller, not their identity (unless required by law, web server logs, or for auditing purposes). When someone shows up in a grocery store to buy a bag of potatoes with cash, the clerk only cares if they carry the prerequisite amount of money, not who they are. This is important because it allows for flexibility as to &lt;em&gt;when&lt;/em&gt; and &lt;em&gt;where&lt;/em&gt; the authentication and authorization decisions are made. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#api-keys"&gt;
  &lt;/a&gt;
  API Keys
&lt;/h2&gt;

&lt;p&gt;Using API keys has been the norm in securing HTTP APIs of RESTful web services for a long time, and many established applications and platforms like Stripe or AWS continue using API keys today.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MXUK3NkH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vusexwaqglklypddwsnx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MXUK3NkH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vusexwaqglklypddwsnx.png" alt="OAuth providers api key" width="880" height="596"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An API Key is a secret shared between the application and the caller. The caller authenticates a call to the HTTP APIs by &lt;em&gt;proving ownership&lt;/em&gt; of the API key. It can be as simple as attaching the API key to the request, for example, in the &lt;code&gt;Authorization&lt;/code&gt; HTTP request header or a URL query parameter. It can also be as complex as digitally signing selected parts of the request payload with that key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HTTP GET /api/store/123/inventory
Authorization: Bearer {api-key}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The example above is using the Bearer scheme of the Authorization HTTP header, which is the preferred way of passing in API keys in web API calls when the user agent is an application. Some secure API endpoints use the HTTP basic authentication scheme instead. In this scheme, the token passed in is an encoded combination of a username and password, and as such more suitable in situations where the user agent is a web browser with a human in front of it. &lt;/p&gt;

&lt;p&gt;Since API keys are usually scoped to a particular tenant of an application, proving ownership of an API key implicitly authorizes the caller to perform operations on that tenant. If the authorization decisions require finer granularity, like in our store inventory app example, you can choose to have a concept of API keys with specific permissions associated with them. This is the mechanism Stripe implemented, called “Restricted keys” in the screenshot above. &lt;/p&gt;

&lt;p&gt;From the perspective of the developers starting to work with your APIs, the biggest advantage of API keys is simplicity. It is a simple concept to start with, and it is easy to attach an API key to a request using any HTTP client. &lt;/p&gt;

&lt;p&gt;API keys have several drawbacks though, the severity of which depends on your specific application.&lt;/p&gt;

&lt;p&gt;Delegating access to your APIs is only possible through sharing the API key. This is akin to sharing your Twitter password with your marketing team, your cell phone PIN with your kids, or your bank account password with a financial aggregation application. Over time it leads to dilution of control and overall reduction of security. It also makes key rollover (next) harder to manage. &lt;/p&gt;

&lt;p&gt;API keys are long-lived, and compromised keys require a rollover. During the rollover, a new key must be generated, and every system using the old key must be updated. This means work for developers working with your APIs and for you. This is usually done in three stages to reduce downtime. First, a new key is generated, and your app accepts both old and new keys. Then, all systems calling your APIs are reconfigured to use the new key. Lastly, the old key is removed from your app, and it only accepts the new key going forward. This process can take a long time as it is usually human-driven. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read the full blog post&lt;/strong&gt; &lt;a href="https://fusebit.io/blog/secure-your-http-apis/?utm_source=dev.to&amp;amp;utm_medium=referral"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>https</category>
      <category>apis</category>
      <category>node</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Polyfills in JavaScript 🔧⚙</title>
      <author>Suryaraj Bhaduri</author>
      <pubDate>Fri, 14 Jan 2022 18:05:19 +0000</pubDate>
      <link>https://dev.to/suryaraj1/polyfills-in-javascript-13kd</link>
      <guid>https://dev.to/suryaraj1/polyfills-in-javascript-13kd</guid>
      <description>&lt;p&gt;Who doesn't want their web apps to perform flawlessly across all web browsers i.e be &lt;strong&gt;cross-browser compatible&lt;/strong&gt;! But with more and more new features coming to JavaScript, many old browsers now do not have support for all of them.❗💀&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Polyfills&lt;/strong&gt; is the solution to the problem.🌈✨&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Basic JavaScript (if, else, for-loops, etc.)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;this&lt;/code&gt; keyword&lt;/li&gt;
&lt;li&gt;Prototype (can read from this &lt;a href="https://www.javascripttutorial.net/javascript-prototype/"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Higher order functions e.x &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Will to learn 🚀&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-polyfill"&gt;
  &lt;/a&gt;
  What is a Polyfill?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Polyfill&lt;/strong&gt; is a piece of code that is used to bring support for newer features in older browsers that currently do not have native support for these features.&lt;br&gt;
For example, suppose JavaScript releases a new function, say &lt;code&gt;x&lt;/code&gt; as a part of their language iteration. Now some older browsers might not have support for this function. But we developers would want our apps to be cross-browser compatible. Polyfills help us in making this possible with custom code.👨‍💻&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note📝- To code the polyfill for any feature, one must first be aware of the internal workings and specifications of the same.⚙&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#polyfill-demo"&gt;
  &lt;/a&gt;
  Polyfill Demo 🚀
&lt;/h2&gt;

&lt;p&gt;Enough talk, we need some code now.🤓👨‍💻&lt;/p&gt;

&lt;p&gt;For the sake of this blog we would be coding polyfills of three higher-order functions which were added to JavaScript as a part of ES5, namely &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt; and &lt;code&gt;reduce()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;❌ &lt;strong&gt;Disclaimer&lt;/strong&gt; - By no means should this be considered a guide to using the aforementioned higher-order functions.&lt;/p&gt;

&lt;p&gt;That being said, take a look at the following image for a refresher of these functions if you're feeling a bit rusty.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZCsjRBRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8twv4je0nn21kgli4fia.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZCsjRBRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8twv4je0nn21kgli4fia.jpg" alt="Higher Order Functions" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#polyfill-for-map"&gt;
  &lt;/a&gt;
  Polyfill for Map
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The &lt;code&gt;map()&lt;/code&gt; method creates a new array populated with the results of calling a provided function on every element in the calling array - MDN Web Docs&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's look at the following code. The code here is for -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;computing squares of numbers of a given array&lt;/li&gt;
&lt;li&gt;alternate casing of characters of a string (if the index is even , the character should be in uppercase else lowercase, e.x. &lt;code&gt;polyfill&lt;/code&gt; =&amp;gt; &lt;code&gt;PoLyFiLl&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2YOveO5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ld3ttde02vnr2wogghwl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2YOveO5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ld3ttde02vnr2wogghwl.png" alt="Map code" width="880" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, the fun part🌈!!&lt;br&gt;
Let's code the basic polyfill i.e our custom implementation for the &lt;code&gt;map&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Take a look at the following code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--10m1gZad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/se9s45ewexdd2ir7wjsv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--10m1gZad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/se9s45ewexdd2ir7wjsv.png" alt="Basic map polyfill" width="880" height="420"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👉Steps to code the polyfill for &lt;code&gt;map&lt;/code&gt; - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have a clear understanding of how &lt;code&gt;map()&lt;/code&gt; works&lt;/li&gt;
&lt;li&gt;Create a function, which here we have named &lt;code&gt;customMap&lt;/code&gt; and attach it to &lt;code&gt;Array.prototype&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Pass a function as an argument that would be run over every element (this resembles the &lt;code&gt;callback&lt;/code&gt; in &lt;code&gt;map&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Create a new array that is initially empty&lt;/li&gt;
&lt;li&gt;Loop over every element of the array using &lt;code&gt;this&lt;/code&gt; and push every new element to the new array&lt;/li&gt;
&lt;li&gt;Finally return the output array&lt;/li&gt;
&lt;li&gt;Voila!! 🎉🎉 You're ready with your first polyfill!!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's put our &lt;code&gt;customMap&lt;/code&gt; to the test.🚀🚀&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PgwzguO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdykg3iuye4l8nk6acfq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PgwzguO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdykg3iuye4l8nk6acfq.png" alt="Polyfill map use" width="880" height="526"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our polyfill passed the test i.e it yields the same results as the original &lt;code&gt;map&lt;/code&gt; function.✅✅&lt;/p&gt;

&lt;p&gt;Next, let's move to the &lt;code&gt;filter&lt;/code&gt; function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#polyfill-for-filter"&gt;
  &lt;/a&gt;
  Polyfill for Filter
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The &lt;code&gt;filter()&lt;/code&gt; method creates a new array with all elements that pass the test implemented by the provided function. - MDN Web Docs&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's look at the following code. The code here is for - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;filtering out all odd numbers from a given array of numbers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M534RhVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggjhw56imrkj0gj2u4q0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M534RhVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggjhw56imrkj0gj2u4q0.png" alt="Filter code" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, time to code the basic polyfill for the &lt;code&gt;filter&lt;/code&gt; function.🌈&lt;/p&gt;

&lt;p&gt;Look at the following code for better understanding.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YUGe7DOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0gntzar4nmdvm6u5q9a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YUGe7DOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0gntzar4nmdvm6u5q9a.png" alt="Basic Filter polyfill" width="880" height="349"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👉Steps to code our &lt;code&gt;filter&lt;/code&gt; polyfill - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have a clear understanding of &lt;code&gt;filter()&lt;/code&gt; and how it works&lt;/li&gt;
&lt;li&gt;Create a function, which here we have named &lt;code&gt;customFilter&lt;/code&gt; and attach it to &lt;code&gt;Array.prototype&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Pass a function as an argument that would be run for each element &lt;/li&gt;
&lt;li&gt;Create a new empty array to store the filtered items&lt;/li&gt;
&lt;li&gt;Loop over the array items using &lt;code&gt;this&lt;/code&gt; and push only those items to the new array which satisfy the test&lt;/li&gt;
&lt;li&gt;Finally return the output array containing filtered items&lt;/li&gt;
&lt;li&gt;Superb!!🎉🎉 You have coded your &lt;code&gt;filter&lt;/code&gt; polyfill!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Similar to the above, let's put our &lt;code&gt;customFilter&lt;/code&gt; to the test.😅&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S5Mh8hcq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32lt62lwp8vaddcn53po.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S5Mh8hcq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32lt62lwp8vaddcn53po.png" alt="Filter polyfill run" width="880" height="344"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our polyfill for &lt;code&gt;filter&lt;/code&gt; yields the same result as using the inbuilt &lt;code&gt;filter&lt;/code&gt; function!!✅✅&lt;/p&gt;

&lt;p&gt;We've almost reached the end of the blog.🏁 Next, we would quickly cover the &lt;code&gt;reduce&lt;/code&gt; function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#polyfill-for-reduce"&gt;
  &lt;/a&gt;
  Polyfill for Reduce
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The &lt;code&gt;reduce()&lt;/code&gt; method executes a user-supplied “reducer” callback function on each element of the array, in order, passing in the return value from the calculation on the preceding element. The final result of running the reducer across all elements of the array is a single value. - MDN Web Docs&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's look at the code below. The code here -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;computes the sum of all elements of an array&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_V3srtO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lp0c4whcvm1pke2ygt9i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_V3srtO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lp0c4whcvm1pke2ygt9i.png" alt="Reduce code" width="880" height="268"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's try and write the basic polyfill for &lt;code&gt;reduce&lt;/code&gt; function. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;✔Recommended&lt;/strong&gt; - First try on your own and then proceed to the code below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pIGVrWS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/griiun46mvz9a6ibqmpb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pIGVrWS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/griiun46mvz9a6ibqmpb.png" alt="Polyfill for reduce" width="880" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's try testing whether our polyfill code works or not!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WtdezfFJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwy94ikqfkom4an6erx1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WtdezfFJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwy94ikqfkom4an6erx1.png" alt="Reduce polyfill run" width="880" height="321"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Awesome!! 🎉🎉 This also yields the same result as before.&lt;/p&gt;

&lt;p&gt;If you made it this far, pat your back. You're awesome!🌈🚀&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-history-of-polyfill"&gt;
  &lt;/a&gt;
  Bonus🦄 - History of Polyfill
&lt;/h2&gt;

&lt;p&gt;The name Polyfill comes from the name of a product used to cover cracks and holes on a wall, called &lt;em&gt;Polyfilla&lt;/em&gt;. The term was coined by Remy Sharp while writing his book "Introducing HTML5" back in 2009. &lt;/p&gt;

&lt;p&gt;📕Can read more about this - &lt;a href="https://remysharp.com/2010/10/08/what-is-a-polyfill"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Congratulations!!&lt;/strong&gt; 🎉🎉 You made it till the end. If you're still here chances are you probably liked the blog. &lt;/p&gt;

&lt;p&gt;I am still learning Polyfills. Hope this blog gave you a decent introduction to what they are.&lt;/p&gt;

&lt;p&gt;Do let me know how you liked the blog and where I need to improve. Would be eagerly waiting for feedback!🙂&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Types of Angular Module</title>
      <author>Anubhab Mukherjee</author>
      <pubDate>Fri, 14 Jan 2022 17:44:35 +0000</pubDate>
      <link>https://dev.to/this-is-angular/types-of-angular-module-amd</link>
      <guid>https://dev.to/this-is-angular/types-of-angular-module-amd</guid>
      <description>&lt;p&gt;Today we will understand about the different types of modules you can have in an application. If you are not aware of Angular Modules then I would suggest you to go through this  &lt;a href="https://dev.to/this-is-angular/understanding-angular-modules-41pb"&gt;post&lt;/a&gt;. Also you need to know how to create your own module. For that you can have a look at this &lt;a href="https://dev.to/this-is-angular/creating-custom-module-in-angular-4p66"&gt;post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;📣 &lt;strong&gt;Note&lt;/strong&gt;&lt;br&gt;
This will be more of theory where we will understand the requirement of different types of modules. It can be different puzzle pieces for you as of now. But in coming posts I will cover all the module type with example. And then you will be able to see the puzzle completed. &lt;/p&gt;




&lt;p&gt;Before diving deep first lets understand why we need various types of modules. (By the way one of the module type we already saw in the earlier &lt;a href="https://dev.to/this-is-angular/creating-custom-module-in-angular-4p66"&gt;post&lt;/a&gt;). &lt;br&gt;
As your application grows in size you need to break/ group the application into various chunks for -&lt;/p&gt;

&lt;p&gt;&lt;code&gt;maintainability&lt;/code&gt;, &lt;br&gt;
&lt;code&gt;enhance the performance&lt;/code&gt;, &lt;br&gt;
&lt;code&gt;scalability&lt;/code&gt;, &lt;br&gt;
&lt;code&gt;easy deployment&lt;/code&gt;, &lt;br&gt;
&lt;code&gt;enhance the development process&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To meet the above requirement &lt;code&gt;module&lt;/code&gt; can be a key player (best friend).&lt;/p&gt;

&lt;p&gt;There are &lt;strong&gt;six&lt;/strong&gt; (6) types of modules an application can have (depending on the requirement. Not necessary an application should have all the six)&lt;/p&gt;

&lt;p&gt;1️⃣ Root Module (🔴 Mandatory 🔴)&lt;br&gt;
2️⃣ Feature Module (🟡 Optional 🟡)&lt;br&gt;
3️⃣ Routing Module ( 🟡 Optional 🟡)&lt;br&gt;
4️⃣ Service Module (🟡 Optional 🟡)&lt;br&gt;
5️⃣ Widget Module (🟡 Optional 🟡)&lt;br&gt;
6️⃣ Shared Module (🟡 Optional 🟡)&lt;/p&gt;

&lt;p&gt;1️⃣ &lt;strong&gt;Root Module&lt;/strong&gt;&lt;br&gt;
I bet you have already seen a glimpse of this module.&lt;br&gt;
When you create an Angular application for the first time you are provided with a module &lt;code&gt;app.module.ts&lt;/code&gt; remember???&lt;br&gt;
This is the root module (you can think this as the parent, all other modules will be directly or indirectly part of this module.&lt;br&gt;
Only &lt;strong&gt;one&lt;/strong&gt; root module is allowed in an application.&lt;/p&gt;

&lt;p&gt;2️⃣ &lt;strong&gt;Feature Module&lt;/strong&gt;&lt;br&gt;
In a large application (say an eCommerce application like amazon) with multiple different features you need to break the application into smaller chunks depending on the features (like users, product, payment etc.)&lt;br&gt;
These smaller chunks can be grouped under modules known as the Feature module.&lt;br&gt;
As an analogy you can think like you have a parent folder called entertainment under that you have different subcategory or folders like music, movies, games, photos etc. This subfolders you can think as feature module. All related items are grouped under one module.&lt;/p&gt;

&lt;p&gt;3️⃣ &lt;strong&gt;Routing Module&lt;/strong&gt;&lt;br&gt;
When an application has the navigation feature (more than one screen to display) then the routing module comes into play. In this scenario the Routing module is &lt;strong&gt;required&lt;/strong&gt;. &lt;br&gt;
If you are interested to know more about routing module you can have a look at this &lt;a href="https://dev.to/anubhab5/setting-up-angular-routing-from-scratch-1i07"&gt;post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;4️⃣ &lt;strong&gt;Service Module&lt;/strong&gt; - (I will talk in detail very soon)&lt;br&gt;
Modules that contain only services (can be utility services).&lt;br&gt;
The service module must be present only at the &lt;strong&gt;root module&lt;/strong&gt; .&lt;br&gt;
Once I talk about services this part would be more clearer to you.&lt;/p&gt;

&lt;p&gt;5️⃣ &lt;strong&gt;Widget Module&lt;/strong&gt;&lt;br&gt;
The third party UI component library module which exposes components/ pipes/ directives (in the export array) can be considered as widget module.&lt;br&gt;
For example you have built a table component and you want to share it with other teams in your org. The module which contains the table component can be considered as a widget module.&lt;br&gt;
The other team would be importing your module and use the table.&lt;/p&gt;

&lt;p&gt;6️⃣ &lt;strong&gt;Shared Module&lt;/strong&gt;&lt;br&gt;
The commonly used components/ directives/ pipes which are used across the application in different modules are put in a special module called the &lt;code&gt;shared module&lt;/code&gt;.&lt;br&gt;
Now consider you have made a table component. This table component need to be used in different screens of &lt;u&gt;your&lt;/u&gt; application across different modules. The only way you can do is by using the &lt;em&gt;Shared Module&lt;/em&gt;.&lt;/p&gt;




&lt;p&gt;Hope you enjoyed reading the post (only theory but this knowledge will be helpful in the coming days. Trust Me)&lt;/p&gt;

&lt;p&gt;If you liked it please do &lt;em&gt;like&lt;/em&gt; &lt;em&gt;share&lt;/em&gt; and &lt;em&gt;comment&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Coming up next &lt;em&gt;Communication between components&lt;/em&gt;.&lt;br&gt;
So stay tuned.&lt;/p&gt;

&lt;p&gt;I will be &lt;a href="https://twitter.com/Anubhab_0905"&gt;tweeting&lt;/a&gt; more on &lt;code&gt;Angular&lt;/code&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;code&gt;TypeScript&lt;/code&gt; &lt;code&gt;CSS&lt;/code&gt;&lt;br&gt;
So hope to see you there too 😃&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cheers&lt;/strong&gt;!!!&lt;br&gt;
&lt;em&gt;Happy Coding&lt;/em&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>beginners</category>
      <category>typescript</category>
      <category>modules</category>
    </item>
    <item>
      <title>Access the Windows file system through WSL!</title>
      <author>Ivaylo Ivanov</author>
      <pubDate>Fri, 14 Jan 2022 17:38:34 +0000</pubDate>
      <link>https://dev.to/ivayloiv/access-the-windows-file-system-through-wsl-1ac4</link>
      <guid>https://dev.to/ivayloiv/access-the-windows-file-system-through-wsl-1ac4</guid>
      <description>&lt;p&gt;Have you ever wondered, how to access the windows file system through WSL? If the answer is yes you are in the right place!&lt;/p&gt;

&lt;p&gt;Microsoft WSL has given us an incredible way to access the windows file system, you have just to navigate through an exact path to do it. Without further due, let's dive into the topic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-use-the-cd-command-in-the-linux-terminal"&gt;
  &lt;/a&gt;
  1. Use the &lt;strong&gt;cd&lt;/strong&gt; command in the Linux terminal.
&lt;/h2&gt;

&lt;p&gt;To access the windows files you have to navigate through &lt;strong&gt;/mnt/your_windows_path&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /mnt/c/Users
&lt;span class="k"&gt;**&lt;/span&gt;OR&lt;span class="k"&gt;**&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; /mnt/d/your_folder/your_folder
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you have access to every file in the Linux and Windows file systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-moving-files-between-the-two-systems-through-wsl"&gt;
  &lt;/a&gt;
  2. Moving files between the two systems through WSL.
&lt;/h2&gt;

&lt;p&gt;If you want to move files between the two operating systems you can simply use the &lt;strong&gt;cp&lt;/strong&gt; or &lt;strong&gt;mv&lt;/strong&gt; commands. &lt;br&gt;
&lt;strong&gt;cp&lt;/strong&gt; - command for copying files&lt;br&gt;
&lt;strong&gt;mv&lt;/strong&gt; - command for moving files&lt;br&gt;
&lt;strong&gt;Use of cp command&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cp&lt;/span&gt; /mnt/c/file.txt /home/username/Documents
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Use of mv command&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mv&lt;/span&gt;  /mnt/c/file.txt /home/username/Documents
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-editing-windows-files-through-wsl"&gt;
  &lt;/a&gt;
  3. Editing windows files through WSL.
&lt;/h2&gt;

&lt;p&gt;To edit windows files through the Linux terminal using WSL, you have to use any text editor that can be opened in the terminal. One of the most famous text editors is &lt;strong&gt;nano&lt;/strong&gt;. In our example, I am going to use the &lt;strong&gt;nano&lt;/strong&gt; editor.&lt;br&gt;
Type into the terminal &lt;strong&gt;nano&lt;/strong&gt; and the path to the file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;nano /mnt/c/Users/file.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can edit freely files from your terminal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-creating-files-in-windows-through-wsl"&gt;
  &lt;/a&gt;
  4. Creating files in windows through WSL.
&lt;/h2&gt;

&lt;p&gt;To create a file in a specific windows directory you have first to navigate to it and then use the &lt;strong&gt;touch&lt;/strong&gt; command to create a file.&lt;br&gt;
&lt;strong&gt;touch&lt;/strong&gt; - a command that creates a file.&lt;br&gt;
&lt;strong&gt;!!! The file extension can be anything you want.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /mnt/c/Users/Public/Documents/ 
&lt;span class="nb"&gt;touch &lt;/span&gt;filename.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The file is created and can be opened from both systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-deleting-files-from-the-windows-file-system-through-wsl"&gt;
  &lt;/a&gt;
  5. Deleting files from the windows file system through WSL.
&lt;/h2&gt;

&lt;p&gt;To delete windows files using WSL, you have to navigate to the directory where the file lives and use the &lt;strong&gt;rm&lt;/strong&gt; command.&lt;br&gt;
&lt;strong&gt;rm&lt;/strong&gt; - a command that deletes files / directories&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /mnt/c/Users/Public
&lt;span class="nb"&gt;sudo rm &lt;/span&gt;example_file.jpg
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Congratulations you learned 5 vital skills about working with the Linux terminal. 🎺🎺🎺&lt;br&gt;
If you have any questions, comment down, I will answer as soon as possible.&lt;/p&gt;

</description>
      <category>wsl</category>
      <category>linux</category>
      <category>tutorial</category>
      <category>bash</category>
    </item>
  </channel>
</rss>
