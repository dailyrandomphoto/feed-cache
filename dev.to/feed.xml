<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CSS Units Guide, everything you need to know</title>
      <author>Amer Sikira</author>
      <pubDate>Sat, 09 Oct 2021 14:18:50 +0000</pubDate>
      <link>https://dev.to/amersikira/css-units-guide-everything-you-need-to-know-2kh4</link>
      <guid>https://dev.to/amersikira/css-units-guide-everything-you-need-to-know-2kh4</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://webinuse.com/css-units-guide-everything-you-need-to-know/"&gt;webinuse.com&lt;/a&gt;&lt;/em&gt;&lt;br&gt;
In CSS every property must have some value. Sometimes it’s a path, sometimes it’s color, sometimes it’s a string, but sometimes it’s a measurement unit. Today we are talking about the CSS units for measuring the length, width, and height of an element.&lt;/p&gt;

&lt;p&gt;There are a lot of CSS units that can be used for measurement, like: &lt;code&gt;px&lt;/code&gt;, &lt;code&gt;em&lt;/code&gt;, &lt;code&gt;rem&lt;/code&gt;, &lt;code&gt;vh&lt;/code&gt;, &lt;code&gt;vw&lt;/code&gt;, etc. We can divide all these units into two groups:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Absolute units&lt;/li&gt;
&lt;li&gt; Relative units&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#1-absolute-css-units"&gt;
  &lt;/a&gt;
  1. Absolute CSS units
&lt;/h3&gt;

&lt;p&gt;Absolute units are the same on any device, regardless of size and settings. Depending on the purpose of our design we may use different units. Since they are not scaling with device size, absolute CSS units are not good for responsive design, while they are excellent for print.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#px"&gt;
  &lt;/a&gt;
  px
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;px&lt;/code&gt; stands for pixel and the visual size of a pixel varies depending on the screen resolution and quality. So &lt;code&gt;16px&lt;/code&gt; is not, visually, the same size on every screen. E.g. take bigger screens like 27″ or larger with 2560x1440px or even higher resolutions. If our text is 16px it will seem much smaller than it really is, and as a result, our UI might seem broken, which, then, affects UX.&lt;/p&gt;

&lt;p&gt;Regardless of this fact, a lot of developers still use px as their standard unit of measurement.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#mmcmin"&gt;
  &lt;/a&gt;
  mm/cm/in
&lt;/h4&gt;

&lt;p&gt;We know these units from the real world, and it is not often that we see them used in the web world. But, these units are excellent for preparing our page for print. Because &lt;code&gt;mm&lt;/code&gt;, &lt;code&gt;cm&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt; are always the same, we can use &lt;code&gt;@media print&lt;/code&gt; query to implement those CSS units only when printing.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#ptpc"&gt;
  &lt;/a&gt;
  pt/pc
&lt;/h4&gt;

&lt;p&gt;There are also &lt;code&gt;pt&lt;/code&gt; (point), &lt;code&gt;pc&lt;/code&gt; (pica) units, which are rarely used. &lt;code&gt;1pt&lt;/code&gt; is 1/72 of an inch and &lt;code&gt;1pc&lt;/code&gt; 12 points.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Even though mm, cm, in, pt, pc are physical units there is no real guarantee that 1cm in CSS will be equal to 1cm on paper. Regardless, those units are better for printing than others we are going to talk about.&lt;/p&gt;

&lt;p&gt;
  &lt;span&gt;See the Pen &lt;a href="https://codepen.io/amersikira/pen/PoKoZoR"&gt;
  Absolute CSS units&lt;/a&gt; by Amer Sikira (&lt;a href="https://codepen.io/amersikira"&gt;@amersikira&lt;/a&gt;)
  on &lt;a href="https://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-relative-css-units"&gt;
  &lt;/a&gt;
  2. Relative CSS Units
&lt;/h3&gt;

&lt;p&gt;Unlike Absolute units, Relative units change depending on screen size and/or settings. Relative units are excellent for creating responsive design and they are excellent for screens, bad for printing.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#percentage-"&gt;
  &lt;/a&gt;
  Percentage (%)
&lt;/h4&gt;

&lt;p&gt;What px is to absolute units, % is to relative units. We can call this a “legacy” unit. They are pretty easy to use. &lt;code&gt;1%&lt;/code&gt; refers to 1% of parent’s size.&lt;/p&gt;

&lt;p&gt;In the example below, we have &lt;code&gt;div#parent&lt;/code&gt; that is &lt;code&gt;400px&lt;/code&gt; wide and &lt;code&gt;200px&lt;/code&gt; tall. We also have &lt;code&gt;div#child&lt;/code&gt; that is &lt;code&gt;25%&lt;/code&gt; wide, which equals to &lt;code&gt;125px&lt;/code&gt; and &lt;code&gt;30%&lt;/code&gt; tall, which equals to &lt;code&gt;60px&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;
  &lt;span&gt;See the Pen &lt;a href="https://codepen.io/amersikira/pen/XWaWXjm"&gt;
  % example&lt;/a&gt; by Amer Sikira (&lt;a href="https://codepen.io/amersikira"&gt;@amersikira&lt;/a&gt;)
  on &lt;a href="https://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#emrem"&gt;
  &lt;/a&gt;
  em/rem
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;em&lt;/code&gt; units and &lt;code&gt;rem&lt;/code&gt; units are almost the same. Difference is that &lt;code&gt;em&lt;/code&gt; is relative to element’s &lt;code&gt;font-size&lt;/code&gt;, while &lt;code&gt;rem&lt;/code&gt; are relative to the root element’s &lt;code&gt;font-size&lt;/code&gt;.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#em"&gt;
  &lt;/a&gt;
  em
&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;1em&lt;/code&gt; is equal to 100% of element’s &lt;code&gt;font-size&lt;/code&gt;. So, if element’s &lt;code&gt;font-size&lt;/code&gt; is &lt;code&gt;30px&lt;/code&gt; than &lt;code&gt;1em&lt;/code&gt; is same. &lt;code&gt;2em&lt;/code&gt; inside same element means &lt;code&gt;60px&lt;/code&gt;. Using &lt;code&gt;em&lt;/code&gt; for font-size property may not be the best idea, but using &lt;code&gt;em&lt;/code&gt; for margins, paddings and widths is good.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#rem"&gt;
  &lt;/a&gt;
  rem
&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;1rem&lt;/code&gt; is equal to &lt;code&gt;100%&lt;/code&gt; of root element’s &lt;code&gt;font-size&lt;/code&gt;. Standard &lt;code&gt;font-size&lt;/code&gt; built-in browser is &lt;code&gt;16px&lt;/code&gt; if you do not change it, and we will see in a moment why it is not smart to change it.&lt;/p&gt;

&lt;p&gt;Rem unit is excellent for responsive design and it is excellent for accessibility (this is why we should not change root font-size). Let’s say we have a user who changed (in browser) root’s font-size from 16px to 25px. If we used rem, our design will scale accordingly, and our UI will be intact, hence our UX will be the same for every user.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exch"&gt;
  &lt;/a&gt;
  ex/ch
&lt;/h4&gt;

&lt;p&gt;Similar to &lt;code&gt;em&lt;/code&gt; and &lt;code&gt;rem&lt;/code&gt;, &lt;code&gt;ex&lt;/code&gt; and &lt;code&gt;ch&lt;/code&gt; CSS units are base on the &lt;code&gt;font-size&lt;/code&gt;. However, these units are also relative to &lt;code&gt;font-family&lt;/code&gt;. &lt;code&gt;ch&lt;/code&gt; stands for character unit and it is defined by the width of character “0”. The &lt;code&gt;ex&lt;/code&gt; unit is defined as “the current x-height of the current font or the half of 1em”, as per &lt;a href="https://www.freecodecamp.org/news/css-unit-guide/"&gt;this freeCodeCamp’s article&lt;/a&gt;. The height-x of a given font is the height of the lowercase “x” of that font. It is often the middle mark of the font.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lhrlh"&gt;
  &lt;/a&gt;
  lh/rlh
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;lh&lt;/code&gt; stands for line-height, and &lt;code&gt;rlh&lt;/code&gt; stands for root line-height. Same as &lt;code&gt;em&lt;/code&gt; and &lt;code&gt;rem&lt;/code&gt;, &lt;code&gt;lh&lt;/code&gt; is “equal to the computed value of line-height” of the element, while &lt;code&gt;rlh&lt;/code&gt; is “equal to the computed value of line-height” of the root element. If &lt;code&gt;line-height: 20px&lt;/code&gt; then &lt;code&gt;1lh&lt;/code&gt; or &lt;code&gt;1rlh&lt;/code&gt; is equal to 20px, depends if we are talking of the element’s line height or the root element’s line height. These units are useful for aligning icons with text, according to the &lt;a href="https://css-tricks.com/lh-and-rlh-units/"&gt;css-tricks.com&lt;/a&gt; article.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#vwvh"&gt;
  &lt;/a&gt;
  vw/vh
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;vw&lt;/code&gt; stands for viewport width and &lt;code&gt;vh&lt;/code&gt; stands for viewport height. This means that these units depend on the screen size. Element of &lt;code&gt;50vw&lt;/code&gt; will take 50% of the screen’s width, regardless of screen size and resolution. The same goes for &lt;code&gt;vh&lt;/code&gt;. Element of &lt;code&gt;50vh&lt;/code&gt; will take 50% of the screen’s height, regardless of screen size and resolution. We can use this for the width of the sections, which can prove like an excellent choice for responsive design.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#vminvmax"&gt;
  &lt;/a&gt;
  vmin/vmax
&lt;/h4&gt;

&lt;p&gt;Unlike &lt;code&gt;vw&lt;/code&gt; and &lt;code&gt;vh&lt;/code&gt;, &lt;code&gt;vmin&lt;/code&gt; and &lt;code&gt;vmax&lt;/code&gt; rely on the maximum width and a minimum height of the screen, or vice versa. For example, if screen size is &lt;code&gt;1920px&lt;/code&gt; by &lt;code&gt;1080px&lt;/code&gt;, then &lt;code&gt;1vmax&lt;/code&gt; is 19.2px and &lt;code&gt;1vmin&lt;/code&gt; is 10.8px.While, if the screen is &lt;code&gt;720px&lt;/code&gt; by &lt;code&gt;1080px&lt;/code&gt;, then &lt;code&gt;1vmin&lt;/code&gt; is 7.2px and &lt;code&gt;1vmax&lt;/code&gt; is 10.8px.&lt;/p&gt;

&lt;p&gt;To calculate vmin and vmax we take screen size and then divide both width and height by 100. Whichever is smaller that is &lt;code&gt;1vmin&lt;/code&gt; and whichever is larger it is &lt;code&gt;1vmax&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;There are more units that we have not discussed here. We chose these units because they are, either, common or useful. Almost any of these units will “do the job”. But there are some units that are better for some things than others. For additional information on CSS units, we can use &lt;a href="https://www.w3.org/TR/css-values-4/#font-relative-lengths"&gt;Level 4 spec for CSS values&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any questions or anything you can find me on my &lt;a href="https://twitter.com/AmerSikira"&gt;Twitter&lt;/a&gt;, or you can read some of my other articles like &lt;a href="https://webinuse.com/how-to-merge-objects-in-javascript/"&gt;How to merge objects in JavaScript?&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>beginners</category>
      <category>design</category>
    </item>
    <item>
      <title>domonic 0.6.1</title>
      <author>domonic</author>
      <pubDate>Sat, 09 Oct 2021 13:57:48 +0000</pubDate>
      <link>https://dev.to/domonic/domonic-0-6-1-554c</link>
      <guid>https://dev.to/domonic/domonic-0-6-1-554c</guid>
      <description>&lt;p&gt;&lt;a href="https://github.com/byteface/domonic/"&gt;https://github.com/byteface/domonic/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Introducing Async Channels</title>
      <author>Eyal Shalev</author>
      <pubDate>Sat, 09 Oct 2021 13:44:04 +0000</pubDate>
      <link>https://dev.to/eyalshalev/introducing-async-channels-333n</link>
      <guid>https://dev.to/eyalshalev/introducing-async-channels-333n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what"&gt;
  &lt;/a&gt;
  What?
&lt;/h2&gt;

&lt;p&gt;Channels are queue-like objects &lt;em&gt;(First In First Out)&lt;/em&gt; that their &lt;code&gt;enqueue&lt;/code&gt; (send) and &lt;code&gt;dequeue&lt;/code&gt; (get) functions are asynchronous (&lt;code&gt;async&lt;/code&gt;). By passing them between asynchronous functions we can synchronize operations between said functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h2&gt;

&lt;p&gt;Let's say we want to process a large chunk of data &lt;em&gt;(simulated by a several lorem-ipsum paragraphs)&lt;/em&gt;.&lt;br&gt;
Some of the processes that we want to perform on that data are fast, while other are time (and resource) consuming.&lt;br&gt;
To avoid overwhelming our infrastructure, we want to make not to send data to a process that isn't ready to accept new data. In other words, we want to implement &lt;a href="https://medium.com/@jayphelps/backpressure-explained-the-flow-of-data-through-software-2350b3e77ce7"&gt;back-preasure&lt;/a&gt;.&lt;br&gt;
This is where &lt;strong&gt;Async Channels&lt;/strong&gt; come into play.&lt;/p&gt;

&lt;p&gt;When you &lt;code&gt;send&lt;/code&gt; (or &lt;code&gt;get&lt;/code&gt;) a message to (or from) a channel, it returns a promise.&lt;br&gt;
For &lt;code&gt;send&lt;/code&gt; requests, it will resolve if the channel has available buffer, or (if not), after a &lt;code&gt;get&lt;/code&gt; is performed on the channel.&lt;br&gt;
And on the opposite side, a &lt;code&gt;get&lt;/code&gt; request will resolve if there is buffered message on the channel, or after a &lt;code&gt;send&lt;/code&gt; request is made.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How?
&lt;/h2&gt;

&lt;p&gt;Below is an example usage of &lt;strong&gt;async_channels&lt;/strong&gt;, where long processes are simulated by calling &lt;code&gt;sleep&lt;/code&gt; (a helper function that returns a promise that is resolved after &lt;code&gt;n&lt;/code&gt; seconds).&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Eyal-Shalev/embed/xxLKjwR?height=600&amp;amp;default-tab=js,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;br&gt;&lt;br&gt;
You can view the documentation on &lt;a href="https://eyal-shalev.github.io/async_channels"&gt;eyal-shalev.github.io/async_channels&lt;/a&gt;&lt;br&gt;

&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Eyal-Shalev"&gt;
        Eyal-Shalev
      &lt;/a&gt; / &lt;a href="https://github.com/Eyal-Shalev/async_channels"&gt;
        async_channels
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Inspired by Go &amp;amp; Clojure Channels, async_channels provides channels as an asynchronous communication method between asynchronous functions.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;

</description>
      <category>javascript</category>
      <category>library</category>
      <category>async</category>
      <category>channels</category>
    </item>
    <item>
      <title>How to make a good looking button with Tailwind CSS</title>
      <author>Siddharth Chaudhary (he/him)</author>
      <pubDate>Sat, 09 Oct 2021 13:36:14 +0000</pubDate>
      <link>https://dev.to/sidcraftscode/build-a-good-looking-button-with-tailwind-css-3o03</link>
      <guid>https://dev.to/sidcraftscode/build-a-good-looking-button-with-tailwind-css-3o03</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Tailwind CSS is a utility based framework. Which is great in many ways. However, Tailwind CSS does not have a default set of components for you to get started with.&lt;/p&gt;

&lt;p&gt;This is a series that will show you how to build various common UI components with Tailwind CSS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Today, we're going to be learning how to make a (good looking) button with Tailwind CSS.&lt;/p&gt;

&lt;p&gt;Let's start by making a button&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button"&amp;gt;Button&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's add some padding and margins&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="m-2 px-8 py-2"&amp;gt;Button&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Next, we can add text and background colors&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="m-2 px-8 py-2 bg-indigo-500 text-white"&amp;gt;Button&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We should give our button rounded corners&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="m-2 px-8 py-2 bg-indigo-600 text-white rounded-lg "&amp;gt;Button&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's give our button a small shadow&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="m-2 px-8 py-2 bg-indigo-600 text-white rounded-lg  shadow-sm"&amp;gt;Button&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It is important that we add &lt;code&gt;:hover&lt;/code&gt; and &lt;code&gt;:focus&lt;/code&gt; styles to our button&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button type="button" class="m-2 px-8 py-2 bg-indigo-600 text-white rounded-lg  shadow-sm hover:bg-indigo-500 focus:ring-2 focus:ring-indigo-200"&amp;gt;Button&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here's what our button should look like now 👇 &lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/chaudhs769/embed/LYjYpJG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#making-10-css-classes-1"&gt;
  &lt;/a&gt;
  Making 10 css classes 1
&lt;/h2&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/afif"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--0f-EwtOV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--apy3IWsG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/577896/343fde9f-609b-419b-95d1-07d16b320a37.png" alt="afif profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/afif"&gt;
        &lt;span class="comment-username"&gt;Temani Afif&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2 m:pl-0"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/afif/comment/1ilh9" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Oct 9
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;I think that a button with 10 classes is a bit .. too much.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Thank you so much &lt;a class="mentioned-user" href="https://dev.to/afif"&gt;@afif&lt;/a&gt;
. This comment gave me inspiration to add this section to my article. There are too many classes on this button. However, thanks to the &lt;code&gt;@apply&lt;/code&gt; directive, we can make this one class. We can simply take all our classes and "apply" them to one class.&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;m-2&lt;/span&gt; &lt;span class="err"&gt;px-8&lt;/span&gt; &lt;span class="err"&gt;py-2&lt;/span&gt; &lt;span class="err"&gt;bg-indigo-600&lt;/span&gt; &lt;span class="err"&gt;text-white&lt;/span&gt; &lt;span class="err"&gt;rounded-lg&lt;/span&gt;  &lt;span class="err"&gt;shadow-sm&lt;/span&gt; &lt;span class="py"&gt;hover&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;bg-indigo-500&lt;/span&gt; &lt;span class="n"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ring-2&lt;/span&gt; &lt;span class="n"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ring-indigo-200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, after rebuilding your css, you can replace all those classes with one class in your button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Button&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for reading and I hope you liked the article! 😊&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>tailwindcss</category>
      <category>css</category>
    </item>
    <item>
      <title>Data Structures Problem - Checking for Children Sum Property in a given Binary Tree 🌳</title>
      <author>The Nerdy Dev</author>
      <pubDate>Sat, 09 Oct 2021 13:21:20 +0000</pubDate>
      <link>https://dev.to/thenerdydev/data-structures-problem-checking-for-children-sum-property-in-a-given-binary-tree-2f5a</link>
      <guid>https://dev.to/thenerdydev/data-structures-problem-checking-for-children-sum-property-in-a-given-binary-tree-2f5a</guid>
      <description>&lt;p&gt;Hey guys 👋🏻,&lt;/p&gt;

&lt;p&gt;I just released a new video on solving an interview problem : &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Checking for Children Sum Property in a given Binary Tree&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;In this video, we will solve the problem of checking whether the given binary tree satisfies the children sum property or not.&lt;br&gt;
We will first understand the approach that we will be taking to solve this problem and then we will write the code for the same problem together. Once we are done with the implementation, we will do a quick dry run for the code to understand and make complete sense of the output that we get&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gQcNn98L2Ao"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Support my channel:&lt;br&gt;
💜 Join the Discord community 👨‍👩‍👧‍👦: &lt;a href="https://discord.gg/fgbtN2a"&gt;https://discord.gg/fgbtN2a&lt;/a&gt; &lt;/p&gt;




&lt;p&gt;Follow me on:&lt;br&gt;
👉 Twitter: &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt;&lt;br&gt;
👉 Instagram: &lt;a href="https://instagram.com/thenerdydev"&gt;https://instagram.com/thenerdydev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading! 🙏&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>DataDog vs Prometheus - Key features, differences, and alternatives</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Sat, 09 Oct 2021 13:00:38 +0000</pubDate>
      <link>https://dev.to/signoz/datadog-vs-prometheus-key-features-differences-and-alternatives-2df5</link>
      <guid>https://dev.to/signoz/datadog-vs-prometheus-key-features-differences-and-alternatives-2df5</guid>
      <description>&lt;p&gt;Both DataDog and Prometheus are application monitoring tools aimed to improve application performance. While DataDog is a proprietary SaaS vendor in the APM domain, Prometheus is an open-source metrics monitoring tool that was the second project to graduate from Cloud Native Computing Foundation in 2018. Let us compare DataDog and Prometheus in this article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this article, we will explore the differences between DataDog and Prometheus based on these categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Getting started&lt;/li&gt;
&lt;li&gt;Monitoring use-cases&lt;/li&gt;
&lt;li&gt;User-experience and visualizations&lt;/li&gt;
&lt;li&gt;Pricing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will also explore the key features of DataDog and Prometheus.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;While DataDog and Prometheus are great monitoring tools, they have their limitations. DataDog is an enterprise SaaS tool with complex pricing tiers. Prometheus is an open-source metrics monitoring tool with limited UI and requires effort to set up and scale.&lt;br&gt;&lt;br&gt;
You can check out &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; - an open-source APM tool that comes with great user experience in terms of getting started and web user experience.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#comparing-datadog-and-prometheus"&gt;
  &lt;/a&gt;
  Comparing DataDog and Prometheus
&lt;/h2&gt;

&lt;p&gt;The major difference between DataDog and Prometheus lies in the scope of monitoring that each tool covers. DataDog is an enterprise SaaS tool that offers products that cover the entire domain of monitoring.&lt;/p&gt;

&lt;p&gt;On the other hand, Prometheus is an open-source metrics monitoring tool used to track metrics like resource usage.&lt;/p&gt;

&lt;p&gt;Some of the key differences between DataDog and Prometheus:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h3&gt;

&lt;p&gt;DataDog is relatively simpler to get started than Prometheus. You need to sign up for a DataDog account and then install DataDog agents on your host. The DataDog agent can be installed on many platforms either directly or as a containerized version. The agent reports events and metrics from the host.&lt;/p&gt;

&lt;p&gt;Prometheus installation requires a bit of configuration to get started. You also need to set up a long-term storage layer if you want to retain your metrics. It is easier to get started with Prometheus for monitoring other CNCF projects like Kubernetes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monitoring-usecases"&gt;
  &lt;/a&gt;
  Monitoring use-cases
&lt;/h3&gt;

&lt;p&gt;DataDog has an extensive list of monitoring services it offers. List of all monitoring products that DataDog provides:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Log Management&lt;/li&gt;
&lt;li&gt;APM&lt;/li&gt;
&lt;li&gt;Security Monitoring&lt;/li&gt;
&lt;li&gt;Infrastructure Monitoring&lt;/li&gt;
&lt;li&gt;Network Monitoring&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Prometheus enables you to capture time-series data as metrics. These metrics can be aggregated to give insights into the behavior of our systems.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-experience-and-visualizations"&gt;
  &lt;/a&gt;
  User experience and visualizations
&lt;/h3&gt;

&lt;p&gt;Prometheus ships with a visualization layer, but its functionality and UI are limited. Usually, if someone uses Prometheus, they integrate it with Grafana, another open-source web-based visualization tool.&lt;br&gt;
  DataDog comes with out-of-box charts and per-built widgets to build your own dashboards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qHCzSEZ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/10/datadog_vs_prometheus_prometheus_charts-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qHCzSEZ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/10/datadog_vs_prometheus_prometheus_charts-min.jpg" alt="Prometheus UI"&gt;&lt;/a&gt;Prometheus charts are limited in functionality&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Op28x3I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/observability_tools_datadog-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Op28x3I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/observability_tools_datadog-min.png" alt="DataDog dashboard"&gt;&lt;/a&gt;DataDog dashboard for traces&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;Prometheus is a &lt;strong&gt;free, open-source tool.&lt;/strong&gt; Many SaaS vendors provide hosted Prometheus services as it takes time and effort to maintain Prometheus as your monitoring scales up.&lt;/p&gt;

&lt;p&gt;DataDog is an expensive enterprise monitoring tool that has many different pricing tiers which vary on your use-cases. For example, infrastructure enterprise monitoring starts at &lt;strong&gt;$23 per host per month&lt;/strong&gt; while its APM sand continuous profiler starts at &lt;strong&gt;$40 per host per month.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#key-features-of-datadog"&gt;
  &lt;/a&gt;
  Key Features of DataDog
&lt;/h2&gt;

&lt;p&gt;DataDog is an enterprise SaaS tool that offers an array of services in the monitoring domain. Some of the key features of the DataDog monitoring platform includes:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Log Management&lt;/strong&gt;&lt;br&gt;
DataDog offers scalable log ingestion and analytics through its log management product. You can search, filter, and analyze log data through its dashboard. You can route all your logs from one central control panel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Application performance monitoring&lt;/strong&gt;&lt;br&gt;
DataDog's APM tool provides end-to-end distributed tracing from frontend devices to databases. You can connect the collected traces to infrastructure metrics, network calls, and live processes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Security monitoring&lt;/strong&gt;&lt;br&gt;
Using DataDog security monitoring, you can analyze operational and security logs in real-time. It provides built-in threshold and anomaly detection rules to detect threats quickly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Network monitoring&lt;/strong&gt;&lt;br&gt;
With DataDog network monitoring, you can analyze traffic as it flows across applications, containers, availability zones, and on-premise servers. You can track key network metrics like TCP retransmits, latency, and connection churn.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Real user monitoring&lt;/strong&gt;&lt;br&gt;
With DataDog's real user Monitoring, you can have end-to-end visibility into user journeys for web and mobile applications.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#key-features-of-prometheus"&gt;
  &lt;/a&gt;
  Key Features of Prometheus
&lt;/h2&gt;

&lt;p&gt;Prometheus was initially developed at SoundCloud in 2012 before being released as an open-source project. It got accepted into the CloudNative Computing Foundation in 2016 and was the second project to graduate from the foundation, following Kubernetes.&lt;/p&gt;

&lt;p&gt;Prometheus enables you to capture time-series data as metrics. These metrics can be aggregated to give insights into the behavior of our systems.&lt;/p&gt;

&lt;p&gt;Some of the key features of Prometheus metrics monitoring are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Multi-dimensional data model&lt;/strong&gt;&lt;br&gt;
Prometheus stores data as time-series. For example, it can store time-stamped values of the total number of HTTP requests received. You can also store an optional set of key-value pairs called labels for that metric. The multi-dimensional data model enables rich contextual metrics monitoring. Notation of time-series metrics:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;metric&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;=&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;, ...}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Flexible query language&lt;/strong&gt;&lt;br&gt;
Prometheus provides a query language called PromQL. Using PromQL, you can filter and aggregate metrics data in real-time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pull model data collection&lt;/strong&gt;&lt;br&gt;
In contrast to most APM tools, Prometheus data collection is pull-based. It requires you to run an HTTP server that exposes Prometheus metrics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alert manager&lt;/strong&gt;&lt;br&gt;
You can use a rules.yml file to set alerts for critical issues. You need to install the alert manager to get useful notifications from Prometheus. It has some cool features like grouping alerts into one notification and silencing alerts for a period of time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visualization layer&lt;/strong&gt;&lt;br&gt;
The visualization layer of Prometheus is basic, but it can be combined with Grafana - another open-source web visualization tool to create rich visualizations of monitoring data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KcVjQqRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/otel_vs_prometheus_prometheus_architecture-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KcVjQqRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/otel_vs_prometheus_prometheus_architecture-min.png" alt="Prometheus architecture"&gt;&lt;/a&gt;Architecture of Prometheus (Source: Prometheus website)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-better-to-alternative-to-datadog-and-prometheus-signoz"&gt;
  &lt;/a&gt;
  A better to alternative to DataDog and Prometheus - SigNoz
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; is a full-stack open-source application performance monitoring and observability tool which can be used in place of DataDog and Prometheus. SigNoz is built to give SaaS like user experience combined with the perks of open-source software. Developer tools should be developer first, and SigNoz was built by developers to address the gap between SaaS vendors and open-source software.&lt;/p&gt;

&lt;p&gt;Key architecture features:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Native OpenTelemetry support&lt;/strong&gt;&lt;br&gt;
SigNoz is built to support &lt;a href="https://opentelemetry.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;OpenTelemetry&lt;/b&gt;&lt;/a&gt; natively which is quietly becoming the world standard to generate and manage telemetry data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexible and scalable Database storage&lt;/strong&gt;&lt;br&gt;
SigNoz provides users flexibility in terms of storage. You can choose between ClickHouse or Kafka + Druid as your backend storage while installing SigNoz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6BdjoEB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/SigNoz_architecture_clickhouse.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6BdjoEB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/SigNoz_architecture_clickhouse.png" alt="Architecture of SigNoz with OpenTelemetry and ClickHouse"&gt;&lt;/a&gt;Architecture of SigNoz with ClickHouse as storage backend and OpenTelemetry for code instrumentatiion&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box visualization of things like RED metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" alt="SigNoz UI showing the popular RED metrics"&gt;&lt;/a&gt;SigNoz UI showing application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/p&gt;

&lt;p&gt;You can also use flamegraphs to visualize spans from your trace data. All of this comes out of the box with SigNoz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FOoIlefK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FOoIlefK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.png" alt="Flamegraphs used to visualize spans of distributed tracing in SigNoz UI"&gt;&lt;/a&gt;Flamegraphs showing exact duration taken by each spans - a concept of distributed tracing&lt;/p&gt;

&lt;p&gt;You can also build custom metrics dashboard for your infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NgbBDuMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/10/signoz_custom_dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NgbBDuMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/10/signoz_custom_dashboard-min.jpg" alt="SigNoz custom metrics dashboard"&gt;&lt;/a&gt;You can also build a custom metrics dashboard for your infrastructure&lt;/p&gt;

&lt;p&gt;Some of the things SigNoz can help you track:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Run aggregates on trace data&lt;/li&gt;
&lt;li&gt;Unified UI for both metrics and traces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can check out SigNoz's GitHub repo here 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#related-content"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Related Content&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://signoz.io/blog/jaeger-vs-zipkin/"&gt;Jaeger vs Zipkin&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://signoz.io/blog/jaeger-vs-signoz/"&gt;Jaeger vs SigNoz&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://signoz.io/blog/opentelemetry-spring-boot/"&gt;Monitor Spring Boot App with SigNoz and OpenTelemetry&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>kubernetes</category>
      <category>microservices</category>
      <category>monitoring</category>
    </item>
    <item>
      <title>JavaScript Projects For Beginners</title>
      <author>Gyan</author>
      <pubDate>Sat, 09 Oct 2021 12:55:38 +0000</pubDate>
      <link>https://dev.to/gw78ah/javascript-projects-for-beginners-3165</link>
      <guid>https://dev.to/gw78ah/javascript-projects-for-beginners-3165</guid>
      <description>&lt;p&gt;javascript project for beginners: Projects are one of the most effective ways to learn JavaScript. Whether it’s learning the fundamentals of JavaScript or diving deeper into something more complex, we’re always looking to improve our JavaScript abilities. Quizzes, games, and generators are examples of JavaScript projects that not only increase your programming skills but also help you create your portfolio.&lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/the-best-beginner-javascript-projects-for-2021/&amp;amp;ved=2ahUKEwiRvbGt-O7yAhXurJUCHVKCAtAQFnoECDwQAQ&amp;amp;sqi=2&amp;amp;usg=AOvVaw16eIeKYPB8xzH6B1hMi2E6"&gt;JavaScript Project For Beginners&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Getting Started with Nodejs, Express and Docker</title>
      <author>Emma Donery</author>
      <pubDate>Sat, 09 Oct 2021 12:37:49 +0000</pubDate>
      <link>https://dev.to/emma_donery/getting-started-with-nodejs-express-and-docker-5ffa</link>
      <guid>https://dev.to/emma_donery/getting-started-with-nodejs-express-and-docker-5ffa</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SiZ5sc5Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1xejpq7xut9egz9r1br.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SiZ5sc5Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1xejpq7xut9egz9r1br.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Prerequisites&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;li&gt;Docker Basics&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#understanding-docker"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Understanding Docker&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; is an open source platform that provides an open platform for building, shipping, and running distributed applications. It automates routine configuration procedures and is used across the development lifecycle to create fast, simple, and portable applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-nodejs-and-express"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Understanding Nodejs And Express&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Node.js&lt;/strong&gt; is a JavaScript runtime framework which is used to create networking and server-side applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Express&lt;/strong&gt; is a small framework that sits on top of Node.js’s web server functionality that provides a robust set of features to develop web and mobile applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-dockerize-your-application"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why Dockerize your application&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Rapid application deployment&lt;/li&gt;
&lt;li&gt;Portability across machines&lt;/li&gt;
&lt;li&gt;Version control and component reuse&lt;/li&gt;
&lt;li&gt;Sharing of images/dockerfiles&lt;/li&gt;
&lt;li&gt;Lightweight footprint and minimal overhead&lt;/li&gt;
&lt;li&gt;Simplified maintenance&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#nodejs-app"&gt;
  &lt;/a&gt;
  &lt;strong&gt;NodeJs app&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create a new directory where all the files would live&lt;/li&gt;
&lt;li&gt;Create a package.json file in this directory to define your project and its dependencies:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express_app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.0.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;license&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MIT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Node.js and express on Docker&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;author&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Firstname Lastname &amp;lt;mynames@example.com&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node app.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dependencies&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;^4.16.1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Using the Express.js framework, create a app.js file that describes a web app:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0.0.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// App&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Our app running on http://&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#run-the-app"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Run the app&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;$ node app.js&lt;/code&gt;&lt;br&gt;
Go to &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt; in your browser to view it.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#dockerizing-the-application"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Dockerizing the Application&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create empty Dockerfile&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Dockerfile&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:12-alpine3.14&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package*.json ./&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8080&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; [ "node", "server.js" ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is what is happening:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Set the working directory to /usr/src/app&lt;/p&gt;

&lt;p&gt;Copy the package.json file to /usr/src/app&lt;/p&gt;

&lt;p&gt;Install node_modules&lt;/p&gt;

&lt;p&gt;Copy all the files from the project's root to /usr/src/app&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Create a &lt;em&gt;.dockerignore&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node_modules
npm-debug.log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NB&lt;/strong&gt;: If you are working with Git then you will also want to add your .git directory and .gitignore file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build Docker Image
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; hello-world &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Run docker container
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;-p&lt;/span&gt; 8080:8080 hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Sharing the docker image&lt;br&gt;
For you to share a docker image, you have to first signup at Docker hub. &lt;br&gt;
Docker Hub is a Docker service that allows you to locate and share container images with your team.&lt;br&gt;
After signing up:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Re-create the image with your Docker Hub credentials.
&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;USERNAME]/hello-world &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;ul&gt;
&lt;li&gt;Login to Docker Hub
&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker login
&lt;/code&gt;&lt;/pre&gt;



&lt;ul&gt;
&lt;li&gt;Push the image to Docker Hub
&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker push &lt;span class="o"&gt;[&lt;/span&gt;USERNAME]/hello-world
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Congratulations!🎉 🎉  The image can now be used on any server or PC that has Docker installed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="o"&gt;[&lt;/span&gt;USERNAME]/hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#docker-compose"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Docker Compose&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Docker Compose is a tool for running multi-container applications on Docker. You configure your application's services with Compose using a YAML file. Then you build and start all of the services from your setup with a single command.&lt;/p&gt;

&lt;p&gt;Compose enables running apps in a single or more containers simple. To construct or execute containers, we don't need to remember particularly long commands. Your applications will operate smoothly as long as you can run docker-compose build and docker-compose up.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the project root directory, create a docker-compose.yml file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;docker-compose.yml&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;version: &lt;span class="s1"&gt;'3.8'&lt;/span&gt;  &lt;span class="c"&gt;#specifies docker compose version&lt;/span&gt;
services:
  web:
    build:
      context: ./
      target: dev
    volumes:
      - .:/src
    &lt;span class="nb"&gt;command&lt;/span&gt;: npm run start:dev
    ports:
      - &lt;span class="s2"&gt;"8080:8080"&lt;/span&gt;
    environment:
      NODE_ENV: development
      DEBUG: nodejs-docker-express:&lt;span class="k"&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this article, i have a service name web which has  a build context and a target set to dev. This tells Docker that i want to build the Docker image with the dev stage.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;volume&lt;/strong&gt; instructs Docker to copy and sync changes from the local directory./ of the host with /src on the Docker container.&lt;/p&gt;

&lt;p&gt;Exposing port 8080 exposes the port where the Node.js Express web server runs by default.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build-and-run-your-app-with-compose"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Build and run your app with Compose&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;start up your application by running the docker-compose up command
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Access &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt; in a browser to see the application running.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stop the application from running using the docker-compose down command.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose down
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Docker Compose is an excellent tool for launching numerous containers. For the sake of this article, i solely used Node.js with a single container running on Docker.&lt;/p&gt;

&lt;p&gt;Node.js and Docker get along swimmingly. The development experience is substantially smoother when docker-compose is used. You can use this article as a starting point for learning more advanced Docker and Node.js skills. &lt;/p&gt;

&lt;p&gt;😊 Have fun coding!😊 &lt;br&gt;
Be sure to leave any comments for me.&lt;/p&gt;

&lt;p&gt;You can connect with me on twitter &lt;a href="https://twitter.com/EmmaDonery"&gt;https://twitter.com/EmmaDonery&lt;/a&gt;&lt;br&gt;
or Linkedin &lt;a href="https://www.linkedin.com/in/emma-donery-0831a7188/"&gt;https://www.linkedin.com/in/emma-donery-0831a7188/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>docker</category>
      <category>devops</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Day 1 of 100 Days of Code and Scrum: How to GraphQL?</title>
      <author>Rammina</author>
      <pubDate>Sat, 09 Oct 2021 12:22:31 +0000</pubDate>
      <link>https://dev.to/rammina/day-1-of-100-days-of-code-and-scrum-how-to-graphql-1o78</link>
      <guid>https://dev.to/rammina/day-1-of-100-days-of-code-and-scrum-how-to-graphql-1o78</guid>
      <description>&lt;p&gt;For context, I'm doing a mixture of 100daysofcode with Scrum elements. See the &lt;a href="https://dev.to/rammina/100-days-of-code-and-scrum-a-new-challenge-24lp"&gt;challenge post here:&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I started learning GraphQL from &lt;a href="https://www.howtographql.com"&gt;https://www.howtographql.com&lt;/a&gt;. It's a pretty nice GraphQL tutorial because they both have video and text format, and so far I've been enjoying it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;I kept on plowing through &lt;a href="https://www.howtographql.com/basics/2-core-concepts/"&gt;https://www.howtographql.com/basics/2-core-concepts/&lt;/a&gt; and learning more about what GraphQL can do.&lt;/p&gt;

&lt;p&gt;Here are some of the things I've learned:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;GraphQL is strongly typed, which means the typing needs to be declared in advance&lt;/li&gt;
&lt;li&gt;GraphQL uses Schema Definition Language (SDL)&lt;/li&gt;
&lt;li&gt;GraphQL uses queries (GET in REST API), mutations (POST, PATCH, DELETE), and subscriptions (something that lets you listen to mutations and returns response objects)&lt;/li&gt;
&lt;li&gt;mutations allow you to specify a payload to retrieve new information in one call round trip&lt;/li&gt;
&lt;li&gt;subscriptions are like data streams, while queries and mutations are similar to the request-response-cycle&lt;/li&gt;
&lt;li&gt;types serve as entry points for request sent by the client side&lt;/li&gt;
&lt;li&gt;a root field is followed by the payload which is flexible and allows you to retrieve which data you want&lt;/li&gt;
&lt;li&gt;it is much more flexible to query nested information using GraphQL compared to REST API&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;a Sprint can be canceled by the Product Owner if the Sprint Goal becomes obsolete&lt;/li&gt;
&lt;li&gt;Product Owners have the option to choose whether to attend a Daily Scrum or not&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm having a difficulty with getting used to working with the new syntax for GraphQL, since I've been using REST API all this time.&lt;/p&gt;

&lt;p&gt;How is everyone doing in their learning journey? Feel free to chat with me in the comments and/via DM!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>beginners</category>
      <category>100daysofcode</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Migrate Material-UI 4 to Mui-5</title>
      <author>HasOne</author>
      <pubDate>Sat, 09 Oct 2021 12:07:38 +0000</pubDate>
      <link>https://dev.to/hasone/migrate-material-ui-4-to-mui-5-1g3i</link>
      <guid>https://dev.to/hasone/migrate-material-ui-4-to-mui-5-1g3i</guid>
      <description>&lt;p&gt;A month ago the Mui team released version 5 of &lt;code&gt;Material-ui&lt;/code&gt; . they made some changes in this version, and some of them we'll need to configure at our own aymore. let's have a depth look over it!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;prerequisite:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;first make sure to commit your code before upgradation&lt;/li&gt;
&lt;li&gt;Install the latest packages of &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;react-dom&lt;/code&gt;, and &lt;code&gt;react-scripts&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;They rename the packages name from &lt;br&gt;
&lt;code&gt;@material-ui/core&lt;/code&gt; to &lt;code&gt;@mui/material&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@material-ui/lab&lt;/code&gt; to &lt;code&gt;@mui/lab&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@material-ui/icons&lt;/code&gt; to &lt;code&gt;@mui/icons-material&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and additionally we also need to install the &lt;code&gt;@emotion&lt;/code&gt; for the style as they deprecated their styles APIS like &lt;code&gt;makeStyle&lt;/code&gt; and move to &lt;code&gt;@mui/system&lt;/code&gt; lib. now you either use the &lt;code&gt;@emotion&lt;/code&gt; or &lt;code&gt;styled-components&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yarn add @mui/material @mui/lab @mui/icons-material 
&lt;span class="c"&gt;# NPM&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm i @mui/material @mui/lab @mui/icons-material
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#installing-motionstyled"&gt;
  &lt;/a&gt;
  Installing @motion/styled
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yarn add @mui/system @emotion/react @emotion/styled
&lt;span class="c"&gt;# NPM&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm i @mui/system @emotion/react @emotion/styled
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#installing-styledcomponents"&gt;
  &lt;/a&gt;
  Installing styled-components
&lt;/h3&gt;

&lt;p&gt;For the &lt;code&gt;yarn&lt;/code&gt; user there is good news: we can simples alias the styled-components package and BOOM. to do so, add the following lines in the &lt;code&gt;package.json&lt;/code&gt; file and run again &lt;code&gt;yarn&lt;/code&gt; it will install the &lt;code&gt;@mui/styled-engine-sc&lt;/code&gt; as &lt;a href="https://mui.com/guides/styled-engine/"&gt;style-engine&lt;/a&gt; and also install the &lt;code&gt;styled-components&lt;/code&gt;.  remove the previously installed  &lt;code&gt;@emtion/*&lt;/code&gt; style lib.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nl"&gt;"@mui/styled-engine"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"latest"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;+&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nl"&gt;"@mui/styled-engine"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npm:@mui/styled-engine-sc@latest"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;+&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;"resolutions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;+&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nl"&gt;"@mui/styled-engine"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npm:@mui/styled-engine-sc@latest"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;+&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I_2de-mW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bmyyz9w0bgo7tt57779p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I_2de-mW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bmyyz9w0bgo7tt57779p.png" alt="package.json"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-fonts"&gt;
  &lt;/a&gt;
  installing fonts
&lt;/h3&gt;

&lt;p&gt;by default, it before gave us the &lt;code&gt;robot&lt;/code&gt; font. now we're responsible for &lt;a href="https://mui.com/components/typography/#general"&gt;installing and hosting the font&lt;/a&gt; for yourself. there're few way to use fonts in react app, the recommended is  self-hosted, so we're using &lt;code&gt;@fontsource&lt;/code&gt; to install font:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yarn add @fontsource/roboto
&lt;span class="c"&gt;# NPM&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; @fontsource/roboto
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now we need to import it to entry point like where you're wrapping &lt;code&gt;ThemeProvider&lt;/code&gt; or either in &lt;code&gt;theme.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@fontsource/roboto/300.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@fontsource/roboto/400.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@fontsource/roboto/500.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@fontsource/roboto/700.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#configuration-global-theme-object"&gt;
  &lt;/a&gt;
  Configuration Global Theme Object
&lt;/h2&gt;

&lt;p&gt;the &lt;code&gt;createMuiTheme&lt;/code&gt; renamed to &lt;code&gt;createTheme&lt;/code&gt;, also the &lt;a href="https://mui.com/customization/theming/#heading-createtheme-options-args-theme"&gt;structure of theme has changed in v5&lt;/a&gt;. &lt;a href="https://mui.com/guides/migration-v4/#theme-structure"&gt;&lt;code&gt;adaptV4Theme&lt;/code&gt;&lt;/a&gt; helper allow you to iteratively upgrade some of theme changes to new theme structure structure. but will be removed this soon in the next version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createTheme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;adaptV4Theme&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@mui/material/styles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createTheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;adaptV4Theme&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="c1"&gt;// v4 theme&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the &lt;code&gt;fade&lt;/code&gt; renamed the &lt;code&gt;alpha&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@mui/material/styles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nl"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;palette&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;palette&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectedOpacity&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ThemeProvider:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ThemeProvider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createTheme&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@mui/material/styles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createTheme&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;ThemeProvider&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ThemeProvider&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Root&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ThemeProvider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#update-all-codebase"&gt;
  &lt;/a&gt;
  Update all codebase
&lt;/h2&gt;

&lt;p&gt;as the package name renamed, definitely you need to import the new package name. to do so, now what if you have a hundred of components will you do it manually? You can surely use &lt;code&gt;sed&lt;/code&gt; and &lt;code&gt;awk&lt;/code&gt; for the bulk changes. but we got another support which made the migration easy. we'll be using &lt;a href="https://mui.com/guides/migration-v4/#run-codemods"&gt;&lt;code&gt;codemod&lt;/code&gt;&lt;/a&gt; which sounds like as I said above plus more feature and some &lt;a href="https://mui.com/guides/migration-v4/#run-codemods"&gt;warning&lt;/a&gt;, which you should care of it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;mui&lt;/span&gt;&lt;span class="sr"&gt;/codemod v5.0.0/&lt;/span&gt;&lt;span class="nx"&gt;preset&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;safe&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;components&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;replace the &lt;code&gt;src/components/Button&lt;/code&gt; to your component's &lt;code&gt;path&lt;/code&gt; and it'll rename the import package in the files. once the process done open up the file and see the import files, You should have new path imported:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Avatar&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@material-ui/core/Button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Avatar&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@mui/material/Button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;@mui/codemod v5.0.0/preset-safe&lt;/code&gt; will do all the magic for you without to worry.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-we-have-makestyles"&gt;
  &lt;/a&gt;
  Do we have makeStyles?
&lt;/h2&gt;

&lt;p&gt;yes, we still have the &lt;code&gt;makeStyles&lt;/code&gt; style API (but it's deprecated and will be removed in the next version). for that we need to install &lt;code&gt;@mui/styles&lt;/code&gt; package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createStyles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;makeStyles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;withStyles&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@mui/styles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;alternative solution of this is to use the &lt;code&gt;sx&lt;/code&gt; APIs, it support CSS project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Box&lt;/span&gt; &lt;span class="nx"&gt;sx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px dashed grey&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;p&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="na"&gt;m&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;another solution to migrate the &lt;code&gt;makeStyles&lt;/code&gt; to &lt;code&gt;styled&lt;/code&gt; using &lt;a href="https://dev.toBox%20sx=%7B%7B%20border:%20"&gt;codemod&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;mui&lt;/span&gt;&lt;span class="sr"&gt;/codemod v5.0.0/&lt;/span&gt;&lt;span class="nx"&gt;jss&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it generate new code style&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useStyles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;makeStyles&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="na"&gt;chip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;    &lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;    &lt;span class="na"&gt;boxShadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadows&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;

&lt;span class="c1"&gt;// TO THIS&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)({&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="na"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;flex&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-world"&gt;
  &lt;/a&gt;
  Final World
&lt;/h2&gt;

&lt;p&gt;We're working on project where we were using &lt;code&gt;Material-ui&lt;/code&gt; as the new version came out I decided to upgrade to new version and thankfully our team manager agreed. because I wanted to get most out of @mui new feature and changes. We've discuss some important topics which you need to know when doing migration. and I hope it helps you!&lt;/p&gt;

&lt;p&gt;If you find this post helpful, please share it with family and friends, feel free to share any response on it!&lt;/p&gt;

&lt;p&gt;twitter: &lt;a href="https://twitter.com/xericgit"&gt;https://twitter.com/xericgit&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>frontend</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Button Hover Animation</title>
      <author>Gyan</author>
      <pubDate>Sat, 09 Oct 2021 11:55:11 +0000</pubDate>
      <link>https://dev.to/gw78ah/button-hover-animation-47k3</link>
      <guid>https://dev.to/gw78ah/button-hover-animation-47k3</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/offianonymous/embed/OJjJybp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>10 Awesome Github Repositories Every Web Developer Should Know.</title>
      <author>Asrorbek O'ktamjonov</author>
      <pubDate>Sat, 09 Oct 2021 11:40:09 +0000</pubDate>
      <link>https://dev.to/mutafakir/10-awesome-github-repositories-every-web-developer-should-know-23nj</link>
      <guid>https://dev.to/mutafakir/10-awesome-github-repositories-every-web-developer-should-know-23nj</guid>
      <description>&lt;h1&gt;
  &lt;a href="#1-awesome"&gt;
  &lt;/a&gt;
  1. Awesome
&lt;/h1&gt;

&lt;p&gt;Without a doubt, Awesome is the most popular repositories for everything from software development to hardware to business. It currently has over 123,000 stars on Github, and one could spend days (or nights) browsing it. If I want to learn something new, it’s my one-stop shop.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dzouEwaj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vku031j22mx0zw31beum.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dzouEwaj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vku031j22mx0zw31beum.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/sindresorhus/awesome"&gt;Link to Repository&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-list-of-advanced-javascript-questions"&gt;
  &lt;/a&gt;
  2. List of (Advanced) JavaScript Questions
&lt;/h1&gt;

&lt;p&gt;Lydia Hallie (wonderful person, by the way, check her out on Instagram!) made this repository (13,000 stars). If you want to test your JavaScript knowledge and/or prepare for a job interview, this is an excellent resource. Lydia is always asking new questions, thus this repo is always developing!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PzfI9tIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2vuplw5keyr8csntg3vi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PzfI9tIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2vuplw5keyr8csntg3vi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/lydiahallie/javascript-questions"&gt;Link to Repository&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-javascript-algorithms-and-data-structures"&gt;
  &lt;/a&gt;
  3. JavaScript Algorithms and Data Structures
&lt;/h1&gt;

&lt;p&gt;JavaScript Algorithms (59,500 stars) has a ton of JavaScript-based examples of both common and uncommon algorithms and data structures. Because the examples are classified as beginner or intermediate, the framework is excellent. So whether you’re interested in security, sorting, graphs, or machine learning (among other topics), you’ll find something to your liking.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Y71oN3P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abf6yh9oep96syjv81tp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Y71oN3P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abf6yh9oep96syjv81tp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;Link to Repository&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-clean-code-javascript"&gt;
  &lt;/a&gt;
  4. Clean Code JavaScript
&lt;/h1&gt;

&lt;p&gt;Writing clean code is an useful skill for practically every developer, and it is required in many projects and businesses. This repository (28,400 stars) adapts Robert C. Martin’s Clean Code ideas for JavaScript so you can use them in your future work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lO5BtT6p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnb204i12qd19mvva8u2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lO5BtT6p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnb204i12qd19mvva8u2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;Link to Repository&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-freefordev"&gt;
  &lt;/a&gt;
  5. free-for.dev
&lt;/h1&gt;

&lt;p&gt;This amazing repository (30,000 stars) was designed to assist developers in accessing free software (SaaS, PaaS, IaaS) and similar products. Isn’t it nice to be able to use great software for free? That’s fantastic! Email, CI/CD, monitoring, DNS, hosting, and a slew of other services are available.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q3Tf6Lhf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irv9l5ufdzpwb8fz783u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q3Tf6Lhf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irv9l5ufdzpwb8fz783u.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ripienaar/free-for-dev"&gt;Link to Repository&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-tech-interview-handbook"&gt;
  &lt;/a&gt;
  6. Tech Interview Handbook
&lt;/h1&gt;

&lt;p&gt;If you want to prepare for a job interview in the tech industry (and you should! ), this repository is the place to go. It has 38,000 stars on Github and can assist you with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to prepare for coding interviews&lt;/li&gt;
&lt;li&gt;Interview cheatsheet&lt;/li&gt;
&lt;li&gt;Algorithm tips/best practice questions&lt;/li&gt;
&lt;li&gt;Interview formats&lt;/li&gt;
&lt;li&gt;…and more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check it out before heading to the next interview.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lUTYn4Ig--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpfexrp0gruh5g3vkfbj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUTYn4Ig--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpfexrp0gruh5g3vkfbj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/yangshun/tech-interview-handbook"&gt;Link to Repository&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-effective-engineer-notes"&gt;
  &lt;/a&gt;
  7. Effective Engineer — Notes
&lt;/h1&gt;

&lt;p&gt;Someone who is known as a “Effective Engineer” is someone who gets things done. But how do you go about becoming one? You can get help from this Github repository (3,700 stars)! The following are some of the topics covered:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to optimize your learning&lt;/li&gt;
&lt;li&gt;How to prioritize&lt;/li&gt;
&lt;li&gt;Measuring your improvement&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C16PHenP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcwjycffssmnyoylqp47.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C16PHenP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcwjycffssmnyoylqp47.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gist.github.com/rondy/af1dee1d28c02e9a225ae55da2674a6f"&gt;Link to Repository&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#8-list-of-free-learning-resources"&gt;
  &lt;/a&gt;
  8. List of Free Learning Resources
&lt;/h1&gt;

&lt;p&gt;On Github, this repository has a huge 135,000 stars, making it one of the most popular curators. It has a large number of free programming books, screencasts, podcasts, and even online courses of various kinds. You’ve come to the right place if you’re looking for educational materials.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ijFE_BD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5h4guvrghablubt2q33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ijFE_BD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5h4guvrghablubt2q33.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Link to Repository&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9-big-list-of-naughty-strings"&gt;
  &lt;/a&gt;
  9. Big List of Naughty Strings
&lt;/h1&gt;

&lt;p&gt;You can put as much effort into testing your code and programs as you want, but when real people are involved, believe me when I say that they will do things you never imagined, especially when it comes to user input. This repository (34,100 stars) has a long list of Strings that have been known to cause problems when used as input. So, whether you’re looking to impress your QA pals or use it to test your program, this may be quite beneficial!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KbgPWADq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cufuet761oxm34jfo3t3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KbgPWADq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cufuet761oxm34jfo3t3.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/minimaxir/big-list-of-naughty-strings"&gt;Link to Repository&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#10-awesome-first-pr-opportunities"&gt;
  &lt;/a&gt;
  10. Awesome First PR Opportunities
&lt;/h1&gt;

&lt;p&gt;The last repository I’d like to suggest is excellent for getting started with Open Source. Contributing to OSS is a fantastic opportunity to become engaged in the community, build your portfolio, try new things, improve your programming skills, and perhaps find a new job. But, as I’ve learned from personal experience, getting started is difficult. This repository contains a list of Open Source projects with beginner-friendly issues that you can work on. It aided me in getting started with OSS and should do the same for you!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9MHDXXjn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7s4kuatsfewmjv2nb55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9MHDXXjn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7s4kuatsfewmjv2nb55.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/MunGell/awesome-for-beginners"&gt;Link to Repository&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-hope-you-find-these-repositories-as-awesome-as-i-do-and-i-really-hope-that-some-of-them-will-help-you-on-your-journey-as-a-web-developer"&gt;
  &lt;/a&gt;
  I hope you find these repositories as awesome as I do, and I really hope that some of them will help you on your journey as a web developer.
&lt;/h3&gt;

</description>
      <category>github</category>
      <category>csharp</category>
      <category>tutorial</category>
      <category>opensource</category>
    </item>
  </channel>
</rss>
