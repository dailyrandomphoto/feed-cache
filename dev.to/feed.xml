<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>[JS] Operador de Nullish Coalescing (??)</title>
      <author>Matheus dos Reis de Jesus</author>
      <pubDate>Mon, 12 Apr 2021 12:08:06 +0000</pubDate>
      <link>https://dev.to/reisdev/js-operador-nullish-coalescing-2g35</link>
      <guid>https://dev.to/reisdev/js-operador-nullish-coalescing-2g35</guid>
      <description>&lt;p&gt;Capa por &lt;a href="https://unsplash.com/@evan__bray?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Evan Dennis&lt;/a&gt; no &lt;a href="https://unsplash.com/s/photos/question-mark?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sum%C3%A1rio"&gt;
  &lt;/a&gt;
  Sum√°rio
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#introdu%C3%A7%C3%A3o"&gt;Introdu√ß√£o&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.too-operador-raw-endraw-"&gt;O operador ??&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#caso-de-uso"&gt;Caso de uso&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#considera%C3%A7%C3%B5es"&gt;Considera√ß√µes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#introdu%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Introdu√ß√£o
&lt;/h1&gt;

&lt;p&gt;Talvez em algum momento voc√™ tenha se deparado com um trecho de c√≥digo em Javascript da seguinte maneira:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;valor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;valorReal&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;valorPadr√£o&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;O operador &lt;code&gt;||&lt;/code&gt; usado acima √© chamado de OU l√≥gico, e funciona da seguinte maneira: Se o valor √† esquerda do operador for verdadeiro, seu valor ser√° atribu√≠do √† vari√°vel &lt;code&gt;valor&lt;/code&gt;. Se o seu valor for falso, a vari√°vel &lt;code&gt;valor&lt;/code&gt; receber√° o valor √† direta, "valorPadr√£o".&lt;/p&gt;

&lt;p&gt;Se voc√™ j√° est√° habituado com Javascript, deve saber que existem v√°rios problemas com rela√ß√£o a falsidade ou veracidade de valores na linguagem. Exemplo: "" e 0 s√£o considerados valores falsos. Logo, se em um algoritmo "" ou 0 forem valores v√°lidos, o operador &lt;code&gt;||&lt;/code&gt; n√£o iria fornecer o resultado necess√°rio. √â a√≠ que entra o operador de Coalesc√™ncia Nula(ou &lt;i&gt;Nullish Coalescing&lt;/i&gt;).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#o-operador-raw-endraw-"&gt;
  &lt;/a&gt;
  O operador &lt;code&gt;??&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;Agora que voc√™ j√° entendeu o problema, v√™m a solu√ß√£o. O operador de Coalesc√™ncia Nula √© representado por &lt;code&gt;??&lt;/code&gt; e utilizado da seguinte forma:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;valor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;valorReal&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;valorPadr√£o&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nesse caso, se o valor da vari√°vel &lt;code&gt;valorReal&lt;/code&gt; for &lt;code&gt;null&lt;/code&gt; ou &lt;code&gt;undefined&lt;/code&gt;, a vari√°vel &lt;code&gt;valor&lt;/code&gt; receber√° &lt;code&gt;"valorPadr√£o"&lt;/code&gt;. Caso contr√°rio, ela receber√° o valor de &lt;code&gt;valorReal&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#caso-de-uso"&gt;
  &lt;/a&gt;
  Caso de Uso
&lt;/h1&gt;

&lt;p&gt;Pense no seguinte cen√°rio: Voc√™ est√° fazendo um c√°lculo que utiliza um coeficiente. Se o coeficiente n√£o for fornecido, ele ir√° receber um valor padr√£o, sendo &lt;code&gt;0&lt;/code&gt; um valor v√°lido. Como comentei, o operador &lt;code&gt;||&lt;/code&gt; iria impedir que o &lt;code&gt;0&lt;/code&gt; fosse utilizado. Nesse caso, o operador &lt;code&gt;??&lt;/code&gt; se torna muito √∫til. Confira a representa√ß√£o desse problema abaixo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;calcularResultado&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;coeficiente&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;coeficiente&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;calculaResultado&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resultado&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Sa√≠da: 3.5 ( 2 + 3 * 0,5 )&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A fun√ß√£o &lt;code&gt;calculaResultado&lt;/code&gt; usa o &lt;code&gt;??&lt;/code&gt; para verificar se o par√¢metro &lt;code&gt;coeficiente&lt;/code&gt; foi passado para a fun√ß√£o. Caso tenha sido, seu valor ser√° usado. Se n√£o, o coeficiente padr√£o ser√° &lt;code&gt;0.5&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#considera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Considera√ß√µes
&lt;/h1&gt;

&lt;p&gt;O caso que citei for um exemplo simples, mas o operador &lt;code&gt;??&lt;/code&gt; pode ser √∫til em muitas situa√ß√µes e garantir uma maior confiabilidade no seu c√≥digo.&lt;/p&gt;

&lt;p&gt;Gostou deste artigo? Me siga para mais conte√∫dos como esse!&lt;/p&gt;

&lt;p&gt;Minhas redes sociais:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/reisdev"&gt;Twitter&lt;/a&gt; | &lt;a href="https://instagram.com/reisdev"&gt;Instagram&lt;/a&gt; | &lt;a href="https://youtube.com/reisdev"&gt;Youtube&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;At√© o pr√≥ximo artigo!üëãüèΩ&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>operations</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to get back after failures in life?</title>
      <author>Sarthak Sharma</author>
      <pubDate>Mon, 12 Apr 2021 12:06:34 +0000</pubDate>
      <link>https://dev.to/xenoxdev/how-to-get-back-after-failures-in-life-5f20</link>
      <guid>https://dev.to/xenoxdev/how-to-get-back-after-failures-in-life-5f20</guid>
      <description>&lt;p&gt;If you look at the setbacks in life, one can argue that life is not fair. But in reality, these ups and downs are what makes life interesting. Each setback gives valuable lessons and principles to live a successful life. But whenever something drastic happens and we are at our lowest going back seems impossible. Though, as always, you know that everything will be back to normal, but still. &lt;/p&gt;

&lt;p&gt;A few months ago, something similar happened to me as well. But this time, in my quest of going back to normal and being productive. I found a set of small steps that you all can follow:‚Ä®‚Ä®&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-cant-fix-everything-at-once"&gt;
  &lt;/a&gt;
  You can‚Äôt fix everything at once ü§∑üèª‚Äç‚ôÇÔ∏è
&lt;/h3&gt;

&lt;p&gt;Most of the time, to deal with setbacks, people bring chaos to other parts of life. Like you may stop doing exercises, start drinking, pick up fights with loved ones and so on. This happened to a lot of people in Lockdown. So when you sit down and think in these moments, everything starts looking out of place. The worst part is, to fix all of them at once, you start failing again and again. That starts kind of a chain reaction of negativity.&lt;/p&gt;

&lt;p&gt;I recommend starting with the one section of your life that you have the most control over. Start with work or health, anything but one thing at a time. Try to bring that thing in order first, before jumping to the next one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-power-of-the-checklist"&gt;
  &lt;/a&gt;
  The power of the checklist ‚úÖ
&lt;/h3&gt;

&lt;p&gt;Nothing is as effective as this simple thing, checklists. Start with adding 2-3 tasks to your list and try to check them off. In case you couldn‚Äôt, shift that to the next day and go on like this. To maintain a checklist, you can use a notebook, an app or just plain paper. For me, the bullet journal is the most effective way. I use this &lt;strong&gt;&lt;em&gt;&lt;a href="https://prototion.com/notion-for/notion-bullet-journal"&gt;Notion Bullet Journal&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt; as a template for Notion. It‚Äôs very effective.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enjoy-and-celebrate-small-victories"&gt;
  &lt;/a&gt;
  Enjoy and celebrate small victories üéâ
&lt;/h3&gt;

&lt;p&gt;When you started working on that one thing, and you make small wins, celebrate it. You need that personal appreciation, a reminder that you are not defeated yet. Which is very important after everything that you have gone through. These small wins give you the courage to keep going and that's what you need the most.&lt;/p&gt;

&lt;p&gt;Repeat this again in other sections of your life, till you way past your failures. Remember people look up to you and no matter what you have to keep fighting, losing, standing up and winning. &lt;strong&gt;This is the way&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/7nTiW8rZymfJJLT8OE/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/7nTiW8rZymfJJLT8OE/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Bootstrap 5 Sidebar Examples</title>
      <author>Carol Skelly</author>
      <pubDate>Mon, 12 Apr 2021 11:52:46 +0000</pubDate>
      <link>https://dev.to/codeply/bootstrap-5-sidebar-examples-38pb</link>
      <guid>https://dev.to/codeply/bootstrap-5-sidebar-examples-38pb</guid>
      <description>&lt;p&gt;Now that Bootstrap 5 has a &lt;a href="https://dev.to/codeply/bootstrap-finally-has-an-off-canvas-component-41dl"&gt;Offcanvas component&lt;/a&gt; üëè, it makes sense to explore building a Bootstrap 5 Sidebar. Sidebars are often used for vertical navigation, but they can really be used for any content that's an aside to main content.&lt;/p&gt;

&lt;p&gt;Sidebars can get complex. There are many things to consider...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Responsive?&lt;/strong&gt; different width, visibility or orientation based on screen width?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Multi-level?&lt;/strong&gt; do the nav items have sub levels? Will this impact height, scrolling or visibility of items?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Toggleable?&lt;/strong&gt; can the sidebar be toggled by a button or "hamburger"?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Push vs. Overlay?&lt;/strong&gt; is main content hidden behind or next to the sidebar?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Left or Right?&lt;/strong&gt; is the sidebar to the left or right of main content?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fixed or Sticky?&lt;/strong&gt; how is the sidebar positioned on page scroll?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Animation Style?&lt;/strong&gt; slide left/right/up/down?, collapse?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IMO, the best way to get after all of the above considerations is to look at various Sidebar examples. These examples demonstrate &lt;strong&gt;Sidebars with navigation&lt;/strong&gt; since that's what I consider to be the primary function. The examples also use common page layouts and content, because Sidebars are often impacted by the entire page layout.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sidebar-example-1"&gt;
  &lt;/a&gt;
  &lt;a href="https://codeply.com/p/WGCqYEiPBg"&gt;Sidebar Example 1&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Left vertical sidebar with submenus&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here's a left side 2-level vertical sidebar with collapsible menu items. The menu functions like an "accordion" where only a single menu is open at a time. It's also responsive which allows the main content area to be visible. The sidebar shrinks in width, hides the text labels and collapses to icons only on mobile devices.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ubLgWctM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3t3dorla37zuzuc4szl.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ubLgWctM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3t3dorla37zuzuc4szl.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;HTML Markup&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="container-fluid"&amp;gt;
    &amp;lt;div class="row flex-nowrap"&amp;gt;
        &amp;lt;div class="col-auto col-md-3 col-xl-2 px-sm-2 px-0 bg-dark"&amp;gt;
            &amp;lt;div class="d-flex flex-column align-items-center align-items-sm-start px-3 pt-2 text-white min-vh-100"&amp;gt;
                &amp;lt;a href="/" class="d-flex align-items-center pb-3 mb-md-0 me-md-auto text-white text-decoration-none"&amp;gt;
                    &amp;lt;span class="fs-5 d-none d-sm-inline"&amp;gt;Menu&amp;lt;/span&amp;gt;
                &amp;lt;/a&amp;gt;
                &amp;lt;ul class="nav nav-pills flex-column mb-sm-auto mb-0 align-items-center align-items-sm-start" id="menu"&amp;gt;
                    &amp;lt;li class="nav-item"&amp;gt;
                        &amp;lt;a href="#" class="nav-link align-middle px-0"&amp;gt;
                            &amp;lt;i class="fs-4 bi-house"&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;span class="ms-1 d-none d-sm-inline"&amp;gt;Home&amp;lt;/span&amp;gt;
                        &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#submenu1" data-bs-toggle="collapse" class="nav-link px-0 align-middle"&amp;gt;
                            &amp;lt;i class="fs-4 bi-speedometer2"&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;span class="ms-1 d-none d-sm-inline"&amp;gt;Dashboard&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt;
                        &amp;lt;ul class="collapse show nav flex-column ms-1" id="submenu1" data-bs-parent="#menu"&amp;gt;
                            &amp;lt;li class="w-100"&amp;gt;
                                &amp;lt;a href="#" class="nav-link px-0"&amp;gt; &amp;lt;span class="d-none d-sm-inline"&amp;gt;Item&amp;lt;/span&amp;gt; 1 &amp;lt;/a&amp;gt;
                            &amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;
                                &amp;lt;a href="#" class="nav-link px-0"&amp;gt; &amp;lt;span class="d-none d-sm-inline"&amp;gt;Item&amp;lt;/span&amp;gt; 2 &amp;lt;/a&amp;gt;
                            &amp;lt;/li&amp;gt;
                        &amp;lt;/ul&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#" class="nav-link px-0 align-middle"&amp;gt;
                            &amp;lt;i class="fs-4 bi-table"&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;span class="ms-1 d-none d-sm-inline"&amp;gt;Orders&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#submenu2" data-bs-toggle="collapse" class="nav-link px-0 align-middle "&amp;gt;
                            &amp;lt;i class="fs-4 bi-bootstrap"&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;span class="ms-1 d-none d-sm-inline"&amp;gt;Bootstrap&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
                        &amp;lt;ul class="collapse nav flex-column ms-1" id="submenu2" data-bs-parent="#menu"&amp;gt;
                            &amp;lt;li class="w-100"&amp;gt;
                                &amp;lt;a href="#" class="nav-link px-0"&amp;gt; &amp;lt;span class="d-none d-sm-inline"&amp;gt;Item&amp;lt;/span&amp;gt; 1&amp;lt;/a&amp;gt;
                            &amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;
                                &amp;lt;a href="#" class="nav-link px-0"&amp;gt; &amp;lt;span class="d-none d-sm-inline"&amp;gt;Item&amp;lt;/span&amp;gt; 2&amp;lt;/a&amp;gt;
                            &amp;lt;/li&amp;gt;
                        &amp;lt;/ul&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#submenu3" data-bs-toggle="collapse" class="nav-link px-0 align-middle"&amp;gt;
                            &amp;lt;i class="fs-4 bi-grid"&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;span class="ms-1 d-none d-sm-inline"&amp;gt;Products&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt;
                            &amp;lt;ul class="collapse nav flex-column ms-1" id="submenu3" data-bs-parent="#menu"&amp;gt;
                            &amp;lt;li class="w-100"&amp;gt;
                                &amp;lt;a href="#" class="nav-link px-0"&amp;gt; &amp;lt;span class="d-none d-sm-inline"&amp;gt;Product&amp;lt;/span&amp;gt; 1&amp;lt;/a&amp;gt;
                            &amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;
                                &amp;lt;a href="#" class="nav-link px-0"&amp;gt; &amp;lt;span class="d-none d-sm-inline"&amp;gt;Product&amp;lt;/span&amp;gt; 2&amp;lt;/a&amp;gt;
                            &amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;
                                &amp;lt;a href="#" class="nav-link px-0"&amp;gt; &amp;lt;span class="d-none d-sm-inline"&amp;gt;Product&amp;lt;/span&amp;gt; 3&amp;lt;/a&amp;gt;
                            &amp;lt;/li&amp;gt;
                            &amp;lt;li&amp;gt;
                                &amp;lt;a href="#" class="nav-link px-0"&amp;gt; &amp;lt;span class="d-none d-sm-inline"&amp;gt;Product&amp;lt;/span&amp;gt; 4&amp;lt;/a&amp;gt;
                            &amp;lt;/li&amp;gt;
                        &amp;lt;/ul&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#" class="nav-link px-0 align-middle"&amp;gt;
                            &amp;lt;i class="fs-4 bi-people"&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;span class="ms-1 d-none d-sm-inline"&amp;gt;Customers&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
                &amp;lt;hr&amp;gt;
                &amp;lt;div class="dropdown pb-4"&amp;gt;
                    &amp;lt;a href="#" class="d-flex align-items-center text-white text-decoration-none dropdown-toggle" id="dropdownUser1" data-bs-toggle="dropdown" aria-expanded="false"&amp;gt;
                        &amp;lt;img src="https://github.com/mdo.png" alt="hugenerd" width="30" height="30" class="rounded-circle"&amp;gt;
                        &amp;lt;span class="d-none d-sm-inline mx-1"&amp;gt;loser&amp;lt;/span&amp;gt;
                    &amp;lt;/a&amp;gt;
                    &amp;lt;ul class="dropdown-menu dropdown-menu-dark text-small shadow"&amp;gt;
                        &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;New project...&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;Settings&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;Profile&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;hr class="dropdown-divider"&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;Sign out&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;/ul&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="col py-3"&amp;gt;
            Content area...
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codeply.com/p/WGCqYEiPBg"&gt;Example 1 - Demo&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#sidebar-example-2"&gt;
  &lt;/a&gt;
  &lt;a href="https://codeply.com/p/Nkp8O77PFS"&gt;Sidebar Example 2&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Vertical sidebar that changes to navbar on mobile&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This 2nd example is a vertical sidebar (on large screens) that switches to a horizontal navbar (on smaller mobile screens). It's a multi-level sidebar with collapsible menu items. The menu functions like an "accordion" where only a single menu is open at a time. &lt;/p&gt;

&lt;p&gt;This sidebar layout also considers sticky and scrolling behaviors. The &lt;strong&gt;sidebar and bottom footer both appear fixed&lt;/strong&gt; on larger screens. Only the content area is scrollable (when content height allows). On mobile screens, the horizontal sidebar remains fixed at the top (using sticky position), and the remaining content and footer sections scroll the entire page height. For this reason a small CSS change is need to make the height responsive...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pp70vPcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rpozlzv9pcllhf8zkde.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pp70vPcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rpozlzv9pcllhf8zkde.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;HTML Markup&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="container-fluid"&amp;gt;
    &amp;lt;div class="row"&amp;gt;
        &amp;lt;div class="col-sm-auto bg-light sticky-top"&amp;gt;
            &amp;lt;div class="d-flex flex-sm-column flex-row flex-nowrap bg-light align-items-center sticky-top"&amp;gt;
                &amp;lt;a href="/" class="d-block p-3 link-dark text-decoration-none" title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Icon-only"&amp;gt;
                    &amp;lt;i class="bi-bootstrap fs-1"&amp;gt;&amp;lt;/i&amp;gt;
                &amp;lt;/a&amp;gt;
                &amp;lt;ul class="nav nav-pills nav-flush flex-sm-column flex-row flex-nowrap mb-auto mx-auto text-center align-items-center"&amp;gt;
                    &amp;lt;li class="nav-item"&amp;gt;
                        &amp;lt;a href="#" class="nav-link py-3 px-2" title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Home"&amp;gt;
                            &amp;lt;i class="bi-house fs-1"&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#" class="nav-link py-3 px-2" title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Dashboard"&amp;gt;
                            &amp;lt;i class="bi-speedometer2 fs-1"&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#" class="nav-link py-3 px-2" title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Orders"&amp;gt;
                            &amp;lt;i class="bi-table fs-1"&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#" class="nav-link py-3 px-2" title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Products"&amp;gt;
                            &amp;lt;i class="bi-heart fs-1"&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#" class="nav-link py-3 px-2" title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Customers"&amp;gt;
                            &amp;lt;i class="bi-people fs-1"&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
                &amp;lt;div class="dropdown"&amp;gt;
                    &amp;lt;a href="#" class="d-flex align-items-center justify-content-center p-3 link-dark text-decoration-none dropdown-toggle" id="dropdownUser3" data-bs-toggle="dropdown" aria-expanded="false"&amp;gt;
                        &amp;lt;i class="bi-person-circle h2"&amp;gt;&amp;lt;/i&amp;gt;
                    &amp;lt;/a&amp;gt;
                    &amp;lt;ul class="dropdown-menu text-small shadow" aria-labelledby="dropdownUser3"&amp;gt;
                        &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;New project...&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;Settings&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;Profile&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;/ul&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="col-sm p-3 min-vh-100"&amp;gt;
            &amp;lt;!-- content --&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codeply.com/p/Nkp8O77PFS"&gt;Example 2 - Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you don't need the sticky footer, &lt;a href="https://codeply.com/p/jzFKqQUVRj"&gt;here's a slight variation that doesn't reguire extra CSS&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#sidebar-example-3"&gt;
  &lt;/a&gt;
  &lt;a href="https://codeply.com/p/yRugA2FB3I"&gt;Sidebar Example 3&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Sidebar with Bootstrap icons&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The next example is similar to the prior as it changes to horizontal orientation on mobile. This full height example has big beautiful icons from &lt;a href="https://icons.getbootstrap.com/"&gt;Bootstrap icons&lt;/a&gt;. This example also use sticky position to make the sidebar appear fixed as the page is scrolled.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ex3yUHuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j03j9jmhb25hq960oph5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ex3yUHuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j03j9jmhb25hq960oph5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;HTML Markup&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="container-fluid"&amp;gt;
    &amp;lt;div class="row"&amp;gt;
        &amp;lt;div class="col-sm-auto bg-light sticky-top"&amp;gt;
            &amp;lt;div class="d-flex flex-sm-column flex-row flex-nowrap bg-light align-items-center sticky-top"&amp;gt;
                &amp;lt;a href="/" class="d-block p-3 link-dark text-decoration-none" title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Icon-only"&amp;gt;
                    &amp;lt;i class="bi-bootstrap fs-1"&amp;gt;&amp;lt;/i&amp;gt;
                &amp;lt;/a&amp;gt;
                &amp;lt;ul class="nav nav-pills nav-flush flex-sm-column flex-row flex-nowrap mb-auto mx-auto text-center align-items-center"&amp;gt;
                    &amp;lt;li class="nav-item"&amp;gt;
                        &amp;lt;a href="#" class="nav-link py-3 px-2" title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Home"&amp;gt;
                            &amp;lt;i class="bi-house fs-1"&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#" class="nav-link py-3 px-2" title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Dashboard"&amp;gt;
                            &amp;lt;i class="bi-speedometer2 fs-1"&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#" class="nav-link py-3 px-2" title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Orders"&amp;gt;
                            &amp;lt;i class="bi-table fs-1"&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#" class="nav-link py-3 px-2" title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Products"&amp;gt;
                            &amp;lt;i class="bi-heart fs-1"&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;a href="#" class="nav-link py-3 px-2" title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Customers"&amp;gt;
                            &amp;lt;i class="bi-people fs-1"&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
                &amp;lt;div class="dropdown"&amp;gt;
                    &amp;lt;a href="#" class="d-flex align-items-center justify-content-center p-3 link-dark text-decoration-none dropdown-toggle" id="dropdownUser3" data-bs-toggle="dropdown" aria-expanded="false"&amp;gt;
                        &amp;lt;i class="bi-person-circle h2"&amp;gt;&amp;lt;/i&amp;gt;
                    &amp;lt;/a&amp;gt;
                    &amp;lt;ul class="dropdown-menu text-small shadow" aria-labelledby="dropdownUser3"&amp;gt;
                        &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;New project...&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;Settings&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;Profile&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;/ul&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="col-sm p-3 min-vh-100"&amp;gt;
            &amp;lt;!-- content --&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codeply.com/p/yRugA2FB3I"&gt;Example 3 - Demo&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#sidebar-example-4"&gt;
  &lt;/a&gt;
  &lt;a href="https://codeply.com/p/J7fUOhLOy9"&gt;Sidebar Example 4&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Collapse off-canvas left sidebar&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is the first collapsible example, and it's done using Bootstrap 5's new Offcanvas component. This left sidebar overlays the main content area and can be hidden/shown using a toggle button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dWusrWB2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0s042uvv4f2s1pugwyxr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dWusrWB2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0s042uvv4f2s1pugwyxr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;HTML Markup&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="offcanvas offcanvas-start w-25" tabindex="-1" id="offcanvas" data-bs-keyboard="false" data-bs-backdrop="false"&amp;gt;
    &amp;lt;div class="offcanvas-header"&amp;gt;
        &amp;lt;h6 class="offcanvas-title d-none d-sm-block" id="offcanvas"&amp;gt;Menu&amp;lt;/h6&amp;gt;
        &amp;lt;button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"&amp;gt;&amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="offcanvas-body px-0"&amp;gt;
        &amp;lt;ul class="nav nav-pills flex-column mb-sm-auto mb-0 align-items-start" id="menu"&amp;gt;
            &amp;lt;li class="nav-item"&amp;gt;
                &amp;lt;a href="#" class="nav-link text-truncate"&amp;gt;
                    &amp;lt;i class="fs-5 bi-house"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;span class="ms-1 d-none d-sm-inline"&amp;gt;Home&amp;lt;/span&amp;gt;
                &amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;a href="#submenu1" data-bs-toggle="collapse" class="nav-link text-truncate"&amp;gt;
                    &amp;lt;i class="fs-5 bi-speedometer2"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;span class="ms-1 d-none d-sm-inline"&amp;gt;Dashboard&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;a href="#" class="nav-link text-truncate"&amp;gt;
                    &amp;lt;i class="fs-5 bi-table"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;span class="ms-1 d-none d-sm-inline"&amp;gt;Orders&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li class="dropdown"&amp;gt;
                &amp;lt;a href="#" class="nav-link dropdown-toggle  text-truncate" id="dropdown" data-bs-toggle="dropdown" aria-expanded="false"&amp;gt;
                    &amp;lt;i class="fs-5 bi-bootstrap"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;span class="ms-1 d-none d-sm-inline"&amp;gt;Bootstrap&amp;lt;/span&amp;gt;
                &amp;lt;/a&amp;gt;
                &amp;lt;ul class="dropdown-menu text-small shadow" aria-labelledby="dropdown"&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;New project...&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;Settings&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;Profile&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;hr class="dropdown-divider"&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a class="dropdown-item" href="#"&amp;gt;Sign out&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;a href="#" class="nav-link text-truncate"&amp;gt;
                    &amp;lt;i class="fs-5 bi-grid"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;span class="ms-1 d-none d-sm-inline"&amp;gt;Products&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;a href="#" class="nav-link text-truncate"&amp;gt;
                    &amp;lt;i class="fs-5 bi-people"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;span class="ms-1 d-none d-sm-inline"&amp;gt;Customers&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="container-fluid"&amp;gt;
    &amp;lt;div class="row"&amp;gt;
        &amp;lt;div class="col min-vh-100 py-3"&amp;gt;
            &amp;lt;!-- toggler --&amp;gt;
            &amp;lt;button class="btn float-end" data-bs-toggle="offcanvas" data-bs-target="#offcanvas" role="button"&amp;gt;
                &amp;lt;i class="bi bi-arrow-right-square-fill fs-3" data-bs-toggle="offcanvas" data-bs-target="#offcanvas"&amp;gt;&amp;lt;/i&amp;gt;
            &amp;lt;/button&amp;gt;
            Content..
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codeply.com/p/J7fUOhLOy9"&gt;Example 4 - Demo&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Did you notice that all of the above examples were done using &lt;em&gt;only&lt;/em&gt; Bootstrap classes? üòé This means you don't need custom CSS to create a Sidebar with Bootstrap 5. &lt;/p&gt;

&lt;p&gt;It's also worth taking a look üëÄ at Bootstrap's &lt;a href="https://getbootstrap.com/docs/5.0/examples/sidebars/"&gt;official sidebar examples&lt;/a&gt;. The official Bootstrap examples don't consider entire page layout, but still may be helpful when considering the sidebar content alone.&lt;/p&gt;

&lt;p&gt;I hope these Sidebar example will kickstart your next Bootstrap project. Let me know your thoughts in the comments! &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>bootstrap</category>
      <category>frontend</category>
    </item>
    <item>
      <title>20 activities that increase my creativity as a developer</title>
      <author>Andrew Baisden</author>
      <pubDate>Mon, 12 Apr 2021 11:50:57 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/20-activities-that-increase-my-creativity-as-a-developer-244n</link>
      <guid>https://dev.to/andrewbaisden/20-activities-that-increase-my-creativity-as-a-developer-244n</guid>
      <description>&lt;p&gt;Having a creative mind is essential if you want to be a successful developer or a designer. Without creativity you will struggle to come up with project ideas. I have put together a list of 20 activities that help me come up with ideas for projects and inspiration. Some might be considered a distraction however you can get an idea at any moment. Visual and audio feedback is highly energising as it makes you think more. What activities do you think are great for creativity?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-watching-movies"&gt;
  &lt;/a&gt;
  1. Watching Movies
&lt;/h2&gt;

&lt;p&gt;It is damn near impossible to not experience some sort of creativity when watching a movie. If you are a huge fan of super hero movies like Marvel and DC then you will understand what I am talking about. Nonetheless you can feel inspired by anything you watch from a drama to a romance novel. For example lets use Iron Man as a reference. The colour tones for his suits would make for a cool website colour theme. And the cool interfaces he uses could be incorporated into an app of some sort.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-watching-series"&gt;
  &lt;/a&gt;
  2. Watching Series
&lt;/h2&gt;

&lt;p&gt;Just like movies, series are designed to make you think because there is usually a compelling story to follow. I finished watching The Queens Gambit a few weeks ago and it is inspiring me to learn the game chess or to even create a game like it. Or you could take the series Stranger Things as another example. The typography that they use for the intro with its 80's style has been copied and used by people in designs already.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-watching-anime"&gt;
  &lt;/a&gt;
  3. Watching Anime
&lt;/h2&gt;

&lt;p&gt;This topic needs to introduction the whole genre is literally about having cool designs, animations and illustrations. I like the art style in many different anime's there are too many to list here. I will just give a shout out to Demon Slayer, Jujutsu Kaisen and Attack on Titan for being so good!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-listening-to-audio-books"&gt;
  &lt;/a&gt;
  4. Listening to audio books
&lt;/h2&gt;

&lt;p&gt;Books are one of the best mediums when it comes to getting inspired and engrossed. In this case with audio books you can't see anything so you have to picture what is going on. That has to be a great way at coming up with some interesting thoughts. Oh and if it happens to be a book related to programming then there is even more reason to learn.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-drawing-manga"&gt;
  &lt;/a&gt;
  5. Drawing Manga
&lt;/h2&gt;

&lt;p&gt;Just like manga this medium inspires creativity. And not just drawing manga but also reading the manga comics as well. Because they are still pictures with no animation you are forced to imagine what they would look like in motion.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-going-for-a-walk"&gt;
  &lt;/a&gt;
  6. Going for a walk
&lt;/h2&gt;

&lt;p&gt;This has got to be one of the best ways for stimulating your creativity. Just going outside and breathing some fresh air it is very empowering. Being one with nature and enjoying the atmosphere and architecture as you walk around.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-exercising"&gt;
  &lt;/a&gt;
  7. Exercising
&lt;/h2&gt;

&lt;p&gt;When you work out it gets the blood flowing. Another added bonus is that its great for stress relief and getting into shape. When your mind is more calm you have clarity and ideas start to flow right in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-eating-food"&gt;
  &lt;/a&gt;
  8. Eating food
&lt;/h2&gt;

&lt;p&gt;Eating good food lifts your mood and when you are feeling good its much easier to think clearly. On some many occasions I have come up with great ideas while I was eating fortunately I had a notepad nearby to write them down.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-listening-to-podcasts"&gt;
  &lt;/a&gt;
  9. Listening to podcasts
&lt;/h2&gt;

&lt;p&gt;I just happen to listen to developer podcasts among a few others so this is a hobby that is always going to provide me with ideas. When you are getting sound advice in most cases the absorption is going to be quite high.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-listening-to-music"&gt;
  &lt;/a&gt;
  10. Listening to music
&lt;/h2&gt;

&lt;p&gt;I am the type of developer who listens to music while they code so I find this to be a highly effective why for coming up with ideas and solutions to problems. In fact I wrote this article while listening to music that's how dedicated I am to it. üòÅ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-watching-youtube"&gt;
  &lt;/a&gt;
  11. Watching YouTube
&lt;/h2&gt;

&lt;p&gt;Theres a reason why YouTube is one of the most uses social networks and why people spend hours on there. It is not only a form of entertainment but its a great place to discover new things and get inspired.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-playing-computer-games"&gt;
  &lt;/a&gt;
  12. Playing computer games
&lt;/h2&gt;

&lt;p&gt;Anything that requires you to be interactive and think is going to be good for coming up with creativity. The more you play the more thinking that you are required to do. It does not even have to be a computer game it could be a game like chess or sudoku.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-sleeping"&gt;
  &lt;/a&gt;
  13. Sleeping
&lt;/h2&gt;

&lt;p&gt;When you go to sleep your brain gets a chance to recharge and detoxify your body. You can get ideas in dreams very easily and sometimes even the solution to a coding problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-social-media"&gt;
  &lt;/a&gt;
  14. Social media
&lt;/h2&gt;

&lt;p&gt;Social media is all about interacting with people and discovering new things. I am highly active on Twitter so every day I am learning something new and meeting new people. Many developers like to post CSS art that they created. That alone is enough to inspire even the most skeptic person that they can make something.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#15-meditation"&gt;
  &lt;/a&gt;
  15. Meditation
&lt;/h2&gt;

&lt;p&gt;When your mind is calm you can focus on what really matters. I find that it is such an amazing way to clear out all of the toxic thoughts and just concentrate on what really matters.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#16-browsing-the-internet"&gt;
  &lt;/a&gt;
  16. Browsing the internet
&lt;/h2&gt;

&lt;p&gt;There is an unlimited amount of knowledge on the internet finding something that stimulates your imagination is only a few clicks away. I have come up with so much inspiration just by randomly stumbling upon in while I was surfing the internet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#17-writing-code"&gt;
  &lt;/a&gt;
  17. Writing code
&lt;/h2&gt;

&lt;p&gt;Whether you are writing good code or bad code you are always going to think of a better way of doing something. Seeing poorly written code is a pretty good justification for doing a refactor.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#18-doing-design-work"&gt;
  &lt;/a&gt;
  18. Doing design work
&lt;/h2&gt;

&lt;p&gt;Anything design related is going to get you thinking there is no debate about this. It does not matter if you are the one doing the design or if you are looking at someone else's work. You are going to be inspired.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#19-messaging-apps"&gt;
  &lt;/a&gt;
  19. Messaging Apps
&lt;/h2&gt;

&lt;p&gt;If you are ever stuck for ideas why not talk to someone else. When you have more than one brain working the chances of one of you coming up with a great idea is significantly magnified.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#20-taking-a-shower"&gt;
  &lt;/a&gt;
  20. Taking a shower
&lt;/h2&gt;

&lt;p&gt;When you have a shower it really stimulates you're thinking. I am sure almost everyone has come up with some cool ideas for something while they were taking a shower.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I really hope that you enjoyed reading this article and learned something from it. As a content creator and technical writer I am passionate about sharing my knowledge and helping other people reach their goals. Let's connect across social media you can find all of my social media profiles and blogs on &lt;a href="https://linktr.ee/andrewbaisden"&gt;linktree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Peace ‚úåÔ∏è&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>career</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Fast Shopify development with hybrid Debut theme</title>
      <author>Mario Loncarek</author>
      <pubDate>Mon, 12 Apr 2021 11:48:02 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/fast-shopify-development-with-hybrid-debut-theme-3940</link>
      <guid>https://dev.to/bornfightcompany/fast-shopify-development-with-hybrid-debut-theme-3940</guid>
      <description>&lt;p&gt;In this article I will explain how we &lt;a class="comment-mentioned-user" href="https://dev.to/bornfight"&gt;@bornfight&lt;/a&gt;
 approach developing Shopify themes for clients with a budget or timeline that is not suitable for full custom development, which we prefer. If that is the case we love to suggest starting with a theme to lower the cost and shorten the development time. Hybrid in this context means crossing a theme with fully developed features with tools for modern frontend development like ES6, SCSS and utilizing features like Hot Module Replacement etc. &lt;/p&gt;

&lt;p&gt;To achieve this we will be using: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://themes.shopify.com/themes/debut/styles/default"&gt;Shopify Debut theme&lt;/a&gt; - as scaffolding tool for faster development&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Shopify/themekit"&gt;Themekit&lt;/a&gt; - development tools to interact with the Shopify platform to watch for local changes and upload them automatically to Shopify&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hayes0724/shopify-packer"&gt;Shopify Packer&lt;/a&gt; - bridge that allows us to develop using modern tools like Webpack 5 for minification, bundle splitting, bundle analysis, prefetch and easier manipulation with themekit &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bornfight/b-creative"&gt;Bornfight b-creative&lt;/a&gt; - &lt;a href="https://www.bornfight.com"&gt;Bornfight&lt;/a&gt; frontend project template for code style and rules&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#why-debut-theme"&gt;
  &lt;/a&gt;
  Why Debut theme?
&lt;/h3&gt;

&lt;p&gt;I like starting with the Debut theme because it's designed and written by the Shopify team and it's free. It offers a great number of features like predictive search, adding to cart with Ajax, product image zoom and gallery etc, basically everything you need to develop a shop with all the features . It's also written quite well and offers some of the latest tricks for making ultra fast websites which is very important for any website, and it's fully accessible. It also comes with a large number of locales for the whole theme. Since we are not using Debut because of the design, its minimal looks is a feature, not a bug. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introducing-shopify-packer"&gt;
  &lt;/a&gt;
  Introducing Shopify Packer
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/hayes0724/shopify-packer"&gt;Shopify Packer&lt;/a&gt; written by &lt;a href="https://github.com/hayes0724"&gt;Eric Hayes&lt;/a&gt; is probably the best thing happened to Shopify theme development since Shopify stopped supporting Slate. It's everything we all hoped for and that's a promise. Packer uses Webpack 5 with zero config to compile, bundle, split and minify your modern development technologies and start a server for development with hot module reloading actually working perfectly. It can also create, list and manipulate (delete, download, deploy etc) themes from your shop which is a lifesaver sometimes. I also love using Eric's Shopify Packer because it uses SCSS, Stylelint, ESLint, Babel and PostCSS. It can analyze bundles and have multiple entry points for templates and layouts. It's actually a CLI tool that‚Äôs installed globally and you can start a new project or integrate Packer with an existing theme in ridiculously little time. Most importantly you can easily customize all settings for the site and webpack if needed. Eric also provides quick support for the packer so i would highly recommend it and also buy him a beer because he deserves one for this! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#standardising-code-with-bornfights-bcreative"&gt;
  &lt;/a&gt;
  Standardising code with Bornfight‚Äôs b-creative
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/bornfight/b-creative"&gt;B-creative&lt;/a&gt; is a modern frontend starter from &lt;a href="https://www.bornfight.com"&gt;Bornfight&lt;/a&gt; that has standardised opinionated code style and architecture for SCSS, Javascript and HTML/PHP/Liquid. It‚Äôs used and contributed by multiple teams. B-creative integrates perfectly with Packer because it uses the same linters so we can just copy their configs and have the same style across all platforms. Templates for SCSS and Javascript modules give us faster development times without having to write the same stuff over and over again. Using b-creative‚Äôs SCSS is also future proof because it provides tools to scale the site from 1440px (or any configured base resolution) to any bigger resolution and the site will look the same, while still giving the ability to have the other logic for mobile resolutions. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-connect-all-the-tools-to-create-hybrid-setup"&gt;
  &lt;/a&gt;
  How to connect all the tools to create hybrid setup?
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#thinking-about-design"&gt;
  &lt;/a&gt;
  Thinking about design
&lt;/h4&gt;

&lt;p&gt;Firstly create a new development store which will then come with a Debut theme pre-installed or just install the Debut as a new theme. Now you can provide the designer with the preview link so he/she can look at all the stuff that it needs to style. Goal here is to create a design that follows Debut themes features, components and repeatable sections. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#integrating-packer"&gt;
  &lt;/a&gt;
  Integrating Packer
&lt;/h4&gt;

&lt;p&gt;Next thing to do is to connect Shopify Packer with the Debut theme for local development and to utilize modern development tools. You can connect Packer with an existing theme or you can create a new blank theme and copy and replace Packers starter theme files from &lt;code&gt;src&lt;/code&gt; folder with all of the Debut files you get when you download, which is my preferred way. This will then leave you with all of the Debut &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;config&lt;/code&gt;, &lt;code&gt;layout&lt;/code&gt;, &lt;code&gt;locales&lt;/code&gt;, &lt;code&gt;sections&lt;/code&gt;, &lt;code&gt;snippets&lt;/code&gt; and &lt;code&gt;templates&lt;/code&gt;, along with Packers &lt;code&gt;styles&lt;/code&gt; and &lt;code&gt;scripts&lt;/code&gt; folder which will then be used to create new custom styles and scripts. Follow Packers docs to generate API access that Packer needs to work with the themekit (same process as only using themekit - private app API password). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9s49iUR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2jcs6zwlya4r4vxwztr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9s49iUR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2jcs6zwlya4r4vxwztr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next thing to do is to include Packers &lt;code&gt;CSS&lt;/code&gt; and &lt;code&gt;JS&lt;/code&gt;  files into &lt;code&gt;theme.liquid&lt;/code&gt; and then you will load all of the assets from Debut and all of the assets from Packer. You can do the same for &lt;code&gt;password.liquid&lt;/code&gt; and &lt;code&gt;gift_card.liquid&lt;/code&gt; if needed.  You will probably want to delete the Debuts CSS file completely and only use its Javascript features, because it's not likely you will need any Debuts styles. Note that in order for all of the Debuts Javascript features to work you should not remove classes from the liquid files, because CSS classes used by Debuts Javascript are not prefixed with &lt;code&gt;js-*&lt;/code&gt; so you can just build upon the necessary sections and snippets with your new custom classes. &lt;/p&gt;

&lt;p&gt;To test if you did everything correctly at this point, running Packers start script should open a new local server for assets and you should see unstyled Debut theme files if you deleted the CSS file or styled Debut theme if you did not. If you try to change the background color of the body in SCSS, Packer should compile it and trigger Hot Module Replacement and you should see the background color changing without you reloading. If that works, then Packer is correctly integrated with Debut. To test if all of the Javascript features from Debut are working, try clicking on the search icon in the navigation bar and predictive search should work properly. Try adding some dummy products to help you with testing that feature. Also on the product single page you should be able to zoom the product image on hover and add to cart without reloading with Ajax. If that works, that means all Javascript features you wanted from Debut are working. &lt;/p&gt;

&lt;p&gt;Feel free to delete all sections and snippets you don't need and which do not contain any wanted Javascript features but always test if everything is working properly. You can also remove unnecessary styles and variables from Debuts theme.liquid file where you included Packers CSS and JS because you probably will not need them. Also reduce the number of assets from Debut by removing the ones you don't need.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#integrating-bcreative"&gt;
  &lt;/a&gt;
  Integrating b-creative
&lt;/h4&gt;

&lt;p&gt;Next we will copy SCSS and JS architecture from Bornfight's b-creative along with linter configs to achieve standardised code. Best thing to do is not to change names of the Packer main entrance point files and just include b-creative‚Äôs files inside existing Packer files (they are empty anyways). Don't forget to copy the fonts folder because it's needed for including fonts with b-creative. Your new SCSS and JS will also need some dependencies installed which you can find in b-creative‚Äôs package.json file under dependencies. B-creative comes with Bornfight‚Äôs modern &lt;a href="https://github.com/bornfight/b-reset"&gt;CSS reset&lt;/a&gt; to help you with developing new features.&lt;/p&gt;

&lt;p&gt;Test again if everything compiles properly. Now you should expect opening a new local server for assets with Packer, Roboto font used as main font (for testing purposes) and all of the Javascript features from Debut working as tested few steps back. If so, now you have a Debut theme ready for modern local development with modernisation and code style from Bornfight‚Äôs b-creative. If the designer followed the Debut‚Äôs flow, you will probably only need to write new styles according to design, without even touching JS because you already use all from Debut. This will then drastically change the time needed for development of the shop.&lt;/p&gt;

&lt;p&gt;Your final structure should look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rtofDC72--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sbjhng5ozck1kvt137ll.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rtofDC72--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sbjhng5ozck1kvt137ll.png" alt="Folder structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if everything is configured correctly, running &lt;code&gt;packer start&lt;/code&gt; should give you this result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9BeipiED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hz7rrivmi0colup6sm21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9BeipiED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hz7rrivmi0colup6sm21.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h3&gt;

&lt;p&gt;I would like to finish this article with some pros and cons of using this hybrid setup for developing new themes.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Faster and cheaper development time when designing and developing upon the Debut theme for ‚Äúprojects on budget‚Äù&lt;/li&gt;
&lt;li&gt;Local development with all of the features&lt;/li&gt;
&lt;li&gt;Using modern tools like ES6 and SCSS to develop themes&lt;/li&gt;
&lt;li&gt;Hot Module Replacement so you don't have to reload all the time while development&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Slightly complex for setting up a new project because it needs multiple tools merged into one&lt;/li&gt;
&lt;li&gt;Leaves a lot of code bloat from Debut theme, mostly in Javascript that you will not use&lt;/li&gt;
&lt;li&gt;Is probably not suitable for anything else then to develop themes cheaper and with tight timeline &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you need Shopify development, feel free to contact us at &lt;a href="mailto:hello@bornfight.com"&gt;hello@bornfight.com&lt;/a&gt; .&lt;/p&gt;

</description>
      <category>engineeringmonday</category>
      <category>shopify</category>
      <category>webpack</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Istio - securityContext.capabilities.add - NET_ADMIN &amp; NET_RAW</title>
      <author>Maxime Guilbert</author>
      <pubDate>Mon, 12 Apr 2021 11:43:04 +0000</pubDate>
      <link>https://dev.to/adaendra/istio-securitycontext-capabilities-add-netadmin-netraw-35dn</link>
      <guid>https://dev.to/adaendra/istio-securitycontext-capabilities-add-netadmin-netraw-35dn</guid>
      <description>&lt;p&gt;On my EKS cluster, we tried to set-up Istio and Calico together. It seemed right until we deployed a service.&lt;/p&gt;

&lt;p&gt;We receive these errors&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;spec.initContainers[0].securityContext.capabilities.add: Invalid value: "NET_RAW": capability may not be added]
spec.initContainers[0].securityContext.capabilities.add: Invalid value: "NET_ADMIN": capability may not be added]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We thought for a long time that it was a problem with our Pod Security Policy. &lt;em&gt;(And all that I found on internet was related to PSP or Calico issues)&lt;/em&gt; But not at all.&lt;/p&gt;

&lt;p&gt;It was an issue with our Network Policies. A port was missing to our network policy definition.&lt;/p&gt;




&lt;p&gt;I found it when I randomly delete all the network policies to test.&lt;/p&gt;




&lt;p&gt;I hope it will help you!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Don't hesitate to give some feedback to help me to improve my writing skills. Thanks!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>istio</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Coragem</title>
      <author>Marcio Frayze David</author>
      <pubDate>Mon, 12 Apr 2021 11:25:14 +0000</pubDate>
      <link>https://dev.to/marciofrayze/coragem-4l94</link>
      <guid>https://dev.to/marciofrayze/coragem-4l94</guid>
      <description>&lt;p&gt;Coragem √© um dos valores fundamentais da &lt;a href="https://pt.wikipedia.org/wiki/Programa%C3%A7%C3%A3o_extrema"&gt;Programa√ß√£o Extrema&lt;/a&gt; (XP), junto com comunica√ß√£o, simplicidade, feedback e respeito.&lt;/p&gt;

&lt;p&gt;Ter coragem, neste contexto, n√£o √© sobre a coragem necess√°ria&lt;br&gt;
para que um soldado consiga enfrentar uma guerra. Tamb√©m n√£o √© sobre agir de forma irrespons√°vel, pulando do avi√£o sem paraquedas.&lt;/p&gt;

&lt;p&gt;A quest√£o √© que ao desenvolvermos softwares vamos encarar &lt;br&gt;
situa√ß√µes que v√£o causar medo tanto em n√≥s, pessoas desenvolvedoras, quanto em nossas clientes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#gest%C3%A3o"&gt;
  &lt;/a&gt;
  Gest√£o
&lt;/h2&gt;

&lt;p&gt;Entre os medos comuns das clientes est√£o:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Medo de ser enganada.&lt;/li&gt;
&lt;li&gt;Medo de ter que entregar o futuro de seu produto nas m√£os de pessoas t√©cnicas, que n√£o necessariamente estar√£o t√£o engajadas quanto ela.&lt;/li&gt;
&lt;li&gt;Medo de perder controle do projeto.&lt;/li&gt;
&lt;li&gt;Medo de n√£o ter suas expectativas atendidas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;J√° as pessoas desenvolvedoras enfrentam:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Medo de ficar sobrecarregada.&lt;/li&gt;
&lt;li&gt;Medo de expressar opini√µes.&lt;/li&gt;
&lt;li&gt;Medo de informar que cometeu um erro.&lt;/li&gt;
&lt;li&gt;Medo de n√£o conseguir cumprir os prazos acordados.&lt;/li&gt;
&lt;li&gt;Medo de n√£o atingir as expectativas geradas por outras pessoas.&lt;/li&gt;
&lt;li&gt;Medo de n√£o ter as informa√ß√µes necess√°rias para finalizar o trabalho.&lt;/li&gt;
&lt;li&gt;Medo de ter que se sujeitar a um cronograma em que √© invi√°vel implementar um c√≥digo com a qualidade que gostaria.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Em um ambiente assim √© comum que ambos os lados tentem levantar um muro para se proteger, e o resultado tende a ser a elabora√ß√£o de um processo longo, complexo e ineficiente, j√° que cada lado parece desconfiar das inten√ß√µes do outro. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#dia-a-dia-da-pessoa-desenvolvedora"&gt;
  &lt;/a&gt;
  Dia a dia da pessoa desenvolvedora
&lt;/h2&gt;

&lt;p&gt;As pr√°ticas da XP se expandem por todo processo de desenvolvimento.&lt;/p&gt;

&lt;p&gt;Ela tamb√©m nos auxilia com alguns outros tipos de medos recorrentes que est√£o mais ligado com as pr√°ticas de implementa√ß√£o, como por exemplo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Medo de fazer uma nova publica√ß√£o em produ√ß√£o. &lt;/li&gt;
&lt;li&gt;Medo de refatorar um trecho do c√≥digo. &lt;/li&gt;
&lt;li&gt;Medo de apagar um trecho de c√≥digo morto.&lt;/li&gt;
&lt;li&gt;Medo de atualizar a vers√£o de uma biblioteca ou framework.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Este sentimento pode causa uma rea√ß√£o paralisante e n√£o agimos quando dever√≠amos. Mas existem momentos em que o medo pode nos levar a realizar a√ß√µes inconsequentes. Em situa√ß√µes adversas √© preciso ter coragem para &lt;em&gt;n√£o&lt;/em&gt; agir at√© entender melhor o que est√° acontecendo, para ent√£o encontrar a melhor forma de solucionar o problema que estamos enfrentando.&lt;/p&gt;

&lt;p&gt;Por exemplo: se o sistema estiver inst√°vel e n√£o conseguimos&lt;br&gt;
ainda encontrar a origem do problema, √†s vezes precisamos&lt;br&gt;
ter coragem para continuar nossa investiga√ß√£o sem tomar nenhuma atitude precipitada, que pode agravar ainda mais a situa√ß√£o ou mascarar a real origem, que pode se manifestar novamente em outro momento. Assim evitamos aqueles di√°logos do tipo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- Pronto! Voltou a funcionar!
- √ìtimo! O que voc√™ fez?
- V√°rias coisas.
- O que?
- Ahhh v√°rias coisas.
- Mas qual era o problema?
- N√£o sei...
- Mas qual altera√ß√£o resolveu o problema?
- N√£o sei...
- Mas o problema pode voltar a acontecer???
- N√£o sei...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;J√° presenciei situa√ß√µes onde as desenvolvedoras estavam fazendo v√°rias altera√ß√µes arriscadas direto em produ√ß√£o, sem saber se aquilo tinha chances de corrigir o problema, j√° que n√£o n√£o haviam ainda identificado a causa. E no fim descobriam que era uma falha na infraestrutura ou em outro sistema ou qualquer outra coisa que estava fora da vis√£o do time e que nenhuma das a√ß√µes realizadas tinham rela√ß√£o com a origem do problema.&lt;/p&gt;

&lt;p&gt;Precisamos de paci√™ncia e coragem para analisar com calma a&lt;br&gt;
situa√ß√£o antes de tomar alguma a√ß√£o. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclus%C3%B5es"&gt;
  &lt;/a&gt;
  Conclus√µes
&lt;/h2&gt;

&lt;p&gt;Uma boa forma de combater estes medos √© utilizar as pr√°ticas da Programa√ß√£o Extrema. Elas v√£o permitir que tenhamos mais coragem para refatorar o c√≥digo do sistema, melhorar o design, expressar nossas opini√µes abertamente, etc.&lt;/p&gt;

&lt;p&gt;Para entender mais sobre Programa√ß√£o Extrema recomendo a leitura&lt;br&gt;
dos seguintes livros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.goodreads.com/book/show/67833.Extreme_Programming_Explained"&gt;Extreme Programming Explained&lt;/a&gt;, 2004. Kent Beck, Cynthia Andres.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.goodreads.com/book/show/67839.Planning_Extreme_Programming"&gt;Planning Extreme Programming&lt;/a&gt;, 2000. Kent Beck, Martin Fowler.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.goodreads.com/book/show/9737235-extreme-programming"&gt;Extreme Programming&lt;/a&gt;, 2004. Vinicius Manh√£es Teles.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>extremeprogramming</category>
      <category>agile</category>
    </item>
    <item>
      <title>hi</title>
      <author>Dark</author>
      <pubDate>Mon, 12 Apr 2021 11:20:40 +0000</pubDate>
      <link>https://dev.to/devdarknoah/hi-4beh</link>
      <guid>https://dev.to/devdarknoah/hi-4beh</guid>
      <description></description>
    </item>
    <item>
      <title>A different approach to frontend architecture</title>
      <author>Huy Ta Quoc</author>
      <pubDate>Mon, 12 Apr 2021 11:08:59 +0000</pubDate>
      <link>https://dev.to/quochuytlbk/a-different-approach-to-frontend-architecture-38d4</link>
      <guid>https://dev.to/quochuytlbk/a-different-approach-to-frontend-architecture-38d4</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3W5H8cze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.infoq.com/i18n/software-architecture-trends-2019/styles/illustration.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3W5H8cze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.infoq.com/i18n/software-architecture-trends-2019/styles/illustration.svg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(image source: &lt;a href="https://www.infoq.com/i18n/software-architecture-trends-2019"&gt;https://www.infoq.com/i18n/software-architecture-trends-2019&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This article aims to introduce a frontend architecture (for applications built with Vue, React, Svelte, etc.) that is easy to reason about and has high maintainability. If you are building a medium/large application and often find yourself wondering about where things should be, this article might be of use to you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-benefits-of-a-good-architecture"&gt;
  &lt;/a&gt;
  The benefits of a good architecture
&lt;/h2&gt;

&lt;p&gt;Before diving into any technical stuff, let's solve a small problem first:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uwSQ0rQI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/1es3ne0caaid/4qnEjwkNAIiAmYcms8iKua/5173990eceb6223dc08e6607636dcc48/clean-architecture-ex-1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uwSQ0rQI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/1es3ne0caaid/4qnEjwkNAIiAmYcms8iKua/5173990eceb6223dc08e6607636dcc48/clean-architecture-ex-1.jpeg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(image source: &lt;a href="https://pusher.com/tutorials/clean-architecture-introduction"&gt;https://pusher.com/tutorials/clean-architecture-introduction&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the image above, can you tell me how to replace the stapler with a tape at a glance? Some of you might come up with an interesting way to do so, but for most of us, we can't immediately figure out how to solve this problem. It looks like a mess to our eyes, and it confuses our brain.&lt;/p&gt;

&lt;p&gt;Now look at this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w1qI3JJr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/1es3ne0caaid/2Qd2FVYAqIEowM0GySIMyM/5d6acdc87b8149732a6b750fcb09c4b7/clean-architecture-ex-2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w1qI3JJr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/1es3ne0caaid/2Qd2FVYAqIEowM0GySIMyM/5d6acdc87b8149732a6b750fcb09c4b7/clean-architecture-ex-2.jpeg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(image source: &lt;a href="https://pusher.com/tutorials/clean-architecture-introduction"&gt;https://pusher.com/tutorials/clean-architecture-introduction&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Can you now immediately tell me how to replace the stapler? We simply have to untie the string connected to it and put the tape in its place. You need a near-zero mental effort to do it.&lt;/p&gt;

&lt;p&gt;Imagine all the items in the images above are modules or parts in your software. A good architecture should look more like the second arrangement. The benefits of such an architecture are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reducing your cognitive load/mental effort when working on the project.&lt;/li&gt;
&lt;li&gt;Making your code more modular, loosely coupled, thus more testable and maintainable.&lt;/li&gt;
&lt;li&gt;Easing up the process of replacing a particular part in the architecture.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-common-frontend-architecture"&gt;
  &lt;/a&gt;
  The common frontend architecture
&lt;/h2&gt;

&lt;p&gt;The most basic and common way to separate a frontend application nowadays can be something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hx8YxkZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmz7e344q021vt1gf7lq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hx8YxkZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmz7e344q021vt1gf7lq.png" alt="The common frontend architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is nothing wrong with the architecture above at first. But then, a common pattern emerges from this kind of architecture where you tightly couple some parts of the architecture together. For example, this is a simple counter application written in Vue 3 with Vuex 4:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;The count is &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;counterValue&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"increment"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;+&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"decrement"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;-&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;computed&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vuex&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Counter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;computed&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;increment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;increment&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;decrement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;decrement&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;decrement&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see that this is a quite common pattern in applications written with Vue 3 and Vuex because it is in &lt;a href="https://next.vuex.vuejs.org/guide/composition-api.html#accessing-state-and-getters"&gt;Vuex 4's guide&lt;/a&gt;. Actually, it is also a common pattern for React with Redux or Svelte with Svelte Stores:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Example with React and Redux:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useSelector&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CounterComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;increment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;increment&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;decrement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;decrement&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;The count is &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;+&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;-&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Example with Svelte and Svelte Stores:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./stores.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;+&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;-&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is nothing inherently wrong with these. In fact, most of the medium to large applications out there are probably written like these. They are the recommended ways in the official guides/tutorials.&lt;/p&gt;

&lt;p&gt;However, everything is a trade-off. So, what are the advantages and the disadvantages of this pattern?&lt;/p&gt;

&lt;p&gt;The most obvious benefit is probably simplicity.&lt;/p&gt;

&lt;p&gt;But for that, what have you sacrificed?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You have tightly coupled the stores to the components&lt;/strong&gt;. Now what if one day your team finds out that Redux is not the best fit for the application anymore (probably because it is overly complicated) and wants to switch to something else? Not only will you have to rewrite all your stores, you will also need to rewrite the logic of the React components that have been tightly coupled to Redux.&lt;/p&gt;

&lt;p&gt;The same problems happen to all the other layers in your application. In the end, you cannot easily replace a part of your application with something else because everything has been tightly coupled to each other. It would just be better to leave it be and rewrite everything from scratch.&lt;/p&gt;

&lt;p&gt;But it does not have to be that way. &lt;strong&gt;A truly modular architecture can allow you to replace your React + Redux application with React + MobX (or Valtio), or even crazier, React + Vuex or Vue + Redux (for whatever reason) without impacting other parts of your application&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So how do we replace a part of our application without impacting the rest, or in other words, how do we decouple every part of our application from each other?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-a-different-approach"&gt;
  &lt;/a&gt;
  Introducing a different approach
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ejhIJsKF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njow1surg6ue3dmzodrr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ejhIJsKF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njow1surg6ue3dmzodrr.png" alt="Introducing a different architecture"&gt;&lt;/a&gt;&lt;br&gt;
The characteristics of the layers are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Presentation:&lt;/strong&gt; This layer is basically made of UI components. For Vue, they are Vue SFcs. For React, they are React Components. For Svelte, they are Svelte SFCs. And so on. The Presentation Layer is directly coupled to the Application Layer.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Application:&lt;/strong&gt; This layer contains application logic. It knows of the Domain Layer and the Infrastructure Layer. This layer, in this architecture, is implemented via React Hooks in React or Vue "Hooks" in Vue 3.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Domain:&lt;/strong&gt; This layer is for domain/business logic. Only business logic lives in the Domain layer, so there is just pure JavaScript/TypeScript code with no frameworks/libraries whatsoever here.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Infrastructure:&lt;/strong&gt; This layer is responsible for communications with the outside world (sending requests/receiving responses) and storing local data. This is an example of the libraries you would use in a real-world application for this layer:

&lt;ul&gt;
&lt;li&gt;HTTP Requests/Responses: Axios, Fetch API, Apollo Client, etc.&lt;/li&gt;
&lt;li&gt;Store (State Management): Vuex, Redux, MobX, Valtio, etc.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#applying-the-architecture"&gt;
  &lt;/a&gt;
  Applying the architecture
&lt;/h2&gt;

&lt;p&gt;If you apply this architecture to an application, it looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3zlc_eep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sd534wt9634lpj9en029.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3zlc_eep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sd534wt9634lpj9en029.png" alt="Applying the architecture to a React app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following characteristics are referred from the above diagram of the architecture:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you replace the UI library/framework, only the Presentation &amp;amp; Application layers are impacted.&lt;/li&gt;
&lt;li&gt;In the Infrastructure layer, when you replace the implementation details of the store (e.g. replacing Redux with Vuex), only the store itself is impacted.
The same goes for replacing Axios with Fetch API or vice versa. The Application layer does not know about the implementation details of the store or the HTTP Client. In other words, we have decoupled React from Redux/Vuex/MobX. The logic of the store is also generic enough that it can be used with not just React but also Vue or Svelte.&lt;/li&gt;
&lt;li&gt;If the business logic changes, the Domain Layer will have to be modified accordingly, and that will impact the other parts in the architecture.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What is more interesting about this architecture is you can even further modularize it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lztT5E8X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iwyjt2yg1d1hzibzjfbw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lztT5E8X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iwyjt2yg1d1hzibzjfbw.png" alt="Further modularizing the architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#caveats"&gt;
  &lt;/a&gt;
  Caveats
&lt;/h2&gt;

&lt;p&gt;Even though the architecture can decouple the parts of your application from each other, it does come with a cost: increased complexity. Therefore, if you are working on a small application, I would not recommend using this. &lt;strong&gt;Don't use a sledgehammer to crack a nut&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For a more complex application, this architecture might probably help you achieve something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M-py76ek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.simform.com/wp-content/uploads/2020/05/Why-invest-in-React-architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M-py76ek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.simform.com/wp-content/uploads/2020/05/Why-invest-in-React-architecture.png" alt="The benefits of investing in an architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(image source: &lt;a href="https://www.simform.com/react-architecture-best-practices"&gt;https://www.simform.com/react-architecture-best-practices&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#an-example"&gt;
  &lt;/a&gt;
  An example
&lt;/h2&gt;

&lt;p&gt;I have built a simple counter app that demonstrates the merits of this architecture. You can check the source code here: &lt;a href="https://github.com/huy-ta/flexible-counter-app"&gt;https://github.com/huy-ta/flexible-counter-app&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1qKR8bOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/YHJGCEE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1qKR8bOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/YHJGCEE.png" alt="An example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this application, I have included Vue, React and Vue with Vuex, Redux, MobX, Valtio and even localStorage. They can all be replaced without impacting each other. Follow the simple instructions from the README file and try switching a part of the application with another one.&lt;/p&gt;

&lt;p&gt;I know I'm using a sledgehammer to crack a nut, but building a complex application is a little bit out of the question for me right now. However, at &lt;a href="https://linagora.com"&gt;Linagora&lt;/a&gt;, we are trying to apply this architecture to one of our projects - &lt;a href="https://console.twake.app"&gt;Twake Console&lt;/a&gt;, which is going to be open-sourced soon. Please look forward to it.&lt;/p&gt;

&lt;p&gt;Questions &amp;amp; discussions are more than welcomed üòä.&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>react</category>
      <category>redux</category>
      <category>vue</category>
    </item>
    <item>
      <title>What are the first things you do on a brand new laptop or PC?</title>
      <author>Alex Georgiev</author>
      <pubDate>Mon, 12 Apr 2021 11:07:58 +0000</pubDate>
      <link>https://dev.to/alexgeorgiev17/what-are-the-first-things-you-do-on-a-brand-new-laptop-or-pc-3c62</link>
      <guid>https://dev.to/alexgeorgiev17/what-are-the-first-things-you-do-on-a-brand-new-laptop-or-pc-3c62</guid>
      <description>&lt;p&gt;Hello all,&lt;/p&gt;

&lt;p&gt;I would like to know what are the first steps you take on a brand new laptop or PC. I personally use Linux, macOS and Windows so the process is always different. I also try to help my family and friends when they buy a new laptop and set it up for them. &lt;/p&gt;

&lt;p&gt;I'm curious to hear what you do on your new laptops or gaming/work PCs and what you'll perform on a friend or family member laptop as well.&lt;/p&gt;

&lt;p&gt;I'll be glad to hear what are the first things you do on your:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Work/Productive Laptops / PC / Raspberry PIs / Intel NUC, etc&lt;/li&gt;
&lt;li&gt;Entertainment Setups - This can be a Laptop or Gaming Station&lt;/li&gt;
&lt;li&gt;What you do on a laptop for a family member or a friend to ensure they will have everything they need for a daily use.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>watercooler</category>
      <category>discuss</category>
      <category>productivity</category>
      <category>devops</category>
    </item>
    <item>
      <title>What is Redux ? Simply Explained!</title>
      <author>CodeBucks</author>
      <pubDate>Mon, 12 Apr 2021 11:06:30 +0000</pubDate>
      <link>https://dev.to/codebucks/what-is-redux-simply-explained-2ch7</link>
      <guid>https://dev.to/codebucks/what-is-redux-simply-explained-2ch7</guid>
      <description>&lt;p&gt;Hi there,&lt;/p&gt;

&lt;p&gt;It's been a while I have created anything. I was getting lot's of messages to create tutorials on Redux! So here it is. I have spent many days to make this tutorials more simple and easy to understand. &lt;/p&gt;

&lt;p&gt;If you prefer to watch video then here it is else you can keep reading üòÑ!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T_lO9l84oGM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Now let's dive in ^_^&lt;/p&gt;

&lt;p&gt;before going into what is Redux? Let's see why we needed Redux in the first place.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The Problem
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nsrqpZmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh1c1vqoz1hna7onduta.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nsrqpZmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh1c1vqoz1hna7onduta.png" alt="Component Tree"&gt;&lt;/a&gt;&lt;br&gt;
Let‚Äôs say as a root component you have app.js file in your project, and in the component tree, the first layer contains 3 components and in the 2nd layer there are two child component of 2nd component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XrRQBQPo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nbhcaewzxjo4fzd8caq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XrRQBQPo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nbhcaewzxjo4fzd8caq.png" alt="Component Tree"&gt;&lt;/a&gt;&lt;br&gt;
Here, you have fetched the data from an API and you save it in the state of 2nd component. You can use this data state in child components by directly passing them downwards.&lt;/p&gt;

&lt;p&gt;Now the problem occurs when the neighbor component which is 3 want to access that data state.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So the problem is when &lt;strong&gt;multiple components that need to share and use the same state.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This can be solved by &lt;strong&gt;‚Äúlifting up‚Äù&lt;/strong&gt; the state to the parent component. So you can lift state from 2nd component to the app.js file. and then you can use this state in the 3rd component.&lt;/p&gt;

&lt;p&gt;But that does not help always because in large application there are many states needed to be used in many different components, so it  is not the best practice.&lt;/p&gt;

&lt;p&gt;One way to solve this problem is to &lt;strong&gt;take state outside of the component tree and set it as centralized.&lt;/strong&gt; So that any component in the tree can access and update the state without worrying about it‚Äôs hierarchy in the tree.&lt;/p&gt;

&lt;p&gt;This is the basic idea behind Redux: &lt;strong&gt;a single centralized place to contain the global state in your application, and specific patterns to follow when updating that state.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can use redux to store the state and you can use it to any component without worrying about the hierarchy. &lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#now-lets-see-how-application-works-normally-in-react-without-redux"&gt;
  &lt;/a&gt;
  &lt;em&gt;Now let‚Äôs see how application works normally in react without redux.&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eI2VlfLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8excbab1hwjt5a24mrm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eI2VlfLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8excbab1hwjt5a24mrm.png" alt="React working"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Consider this action as a trigger to update the state and when state gets changed then view updates the UI with new state.&lt;/p&gt;

&lt;p&gt;For simple counter application, when we increment counter value then increment event goes to state and state updates new value then, view re-renders ui based on the updated state.&lt;/p&gt;

&lt;p&gt;So let‚Äôs see what happens when you use Redux.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X54SeIj0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xkirro5er7ctdczdly5l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X54SeIj0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xkirro5er7ctdczdly5l.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the redux there is a function called &lt;em&gt;reducer&lt;/em&gt;. &lt;br&gt;
This reducer function takes two arguments, first is the state itself, and second is the action object. &lt;/p&gt;

&lt;p&gt;Action object can have a type of action like increment and any data that wants to modify the state.&lt;/p&gt;

&lt;p&gt;Now based on previous state value and action type redux calculates new value for state and updates it.&lt;br&gt;
These all things happens inside the redux store, you can say it as any centralized database for state management.&lt;/p&gt;

&lt;p&gt;Then when view get new state value it re-renders the UI.&lt;/p&gt;

&lt;p&gt;Let me show you another example of how redux works!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jOQnnjvk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4l0u5umm0ex29hhnsrq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOQnnjvk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4l0u5umm0ex29hhnsrq.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see here this is a simple gif which explains how redux works, you can find it on the official &lt;a href="https://redux.js.org/tutorials/essentials/part-1-overview-concepts"&gt;redux documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now using this UI you can either deposit or withdraw money.&lt;/p&gt;

&lt;p&gt;when we click the deposit button, click event goes to event handler, based on event, event handler dispatches an action with the type as deposit and any details needed in the payload property.&lt;/p&gt;

&lt;p&gt;This reducer accepts two things, state and the action object. Previous value of state is 0$ and action is for deposit, so the reducer will update the new state by depositing 10$ amount.&lt;/p&gt;

&lt;p&gt;you can see in the UI balance, it changed from 0 to 10$.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#redux-by-definition"&gt;
  &lt;/a&gt;
  Redux by definition
&lt;/h2&gt;

&lt;p&gt;It is a Predictable State Container for JS Apps.&lt;/p&gt;

&lt;p&gt;It is,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Predictable&lt;/strong&gt; --&amp;gt; because it helps you write applications that behave consistently, and can run in different environments (client, server, and native).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Centralized&lt;/strong&gt; --&amp;gt; because of this feature, we don't need to lift state to parent components and we can use state from any component we want due to this centralized behavior.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Debuggable&lt;/strong&gt; --&amp;gt; There is an extension called &lt;em&gt;Redux DevTools&lt;/em&gt; which is an excellent tool to debug Redux applications. Using this tool you can see when, where, why, and how your application's state changed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexible&lt;/strong&gt; --&amp;gt; because it works with any UI layer, and has a large ecosystem of addons.&lt;/p&gt;

&lt;p&gt;If you're confused about anything related to this topic feel free to ask me üòâ!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading-and-supporting"&gt;
  &lt;/a&gt;
  Thanks For Reading and Supporting.üòÑ
&lt;/h3&gt;

&lt;p&gt;Feel free to visit my YouTube channel: &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#codebucks"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCeYt6blRBKuNrEg_-282fSA"&gt;@CodeBucks&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Follow me on Instagram where I'm sharing lot's of useful resources!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#codebucks"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.instagram.com/code.bucks"&gt;@code.bucks&lt;/a&gt; üòâ
&lt;/h4&gt;

</description>
      <category>react</category>
      <category>redux</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Production deployment Strapi + Gatsby app on VPS Shared Hosting: installing Node &amp;  Creating configs. (2)</title>
      <author>Daniel Krupnyy</author>
      <pubDate>Mon, 12 Apr 2021 10:47:39 +0000</pubDate>
      <link>https://dev.to/danielkrupnyy/production-deployment-strapi-gatsby-app-on-vps-shared-hosting-installing-node-creating-configs-2-3d7h</link>
      <guid>https://dev.to/danielkrupnyy/production-deployment-strapi-gatsby-app-on-vps-shared-hosting-installing-node-creating-configs-2-3d7h</guid>
      <description>&lt;p&gt;Welcome to the second part of the production deployment of the Strapi + Gatsby app on VPS Shared Hosting! üôå&lt;/p&gt;




&lt;p&gt;Before install Node, you need to connect to the server over SSH. You can find all the data for connecting via SSH on your host.&lt;/p&gt;

&lt;p&gt;So, in your terminal enter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;shh root@00.0.000.000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead "00.0.000.000" enter your server IP. After enter password.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#installing-node"&gt;
  &lt;/a&gt;
  Installing Node
&lt;/h1&gt;

&lt;p&gt;In order to install Node, you need to find out what OS installed on the your server.&lt;/p&gt;

&lt;p&gt;In different hosts it can be find out on different ways.&lt;br&gt;
So, you need to find out it in your case ü§ó&lt;/p&gt;

&lt;p&gt;In my case, the server had Cent OS installed and I'll show you how I installed Node on this OS.&lt;/p&gt;

&lt;p&gt;For different OS Node has some &lt;a href="https://nodejs.org/en/download/package-manager/"&gt;great documentation&lt;/a&gt; üëç&lt;/p&gt;

&lt;p&gt;let's continue.&lt;/p&gt;

&lt;p&gt;First install yum:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-sL&lt;/span&gt; https://rpm.nodesource.com/setup_10.x | &lt;span class="nb"&gt;sudo &lt;/span&gt;bash -
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then install Node:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;yum &lt;span class="nb"&gt;install &lt;/span&gt;nodejs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it!&lt;br&gt;
You can check out the Node version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#adding-new-domain-and-subdomain"&gt;
  &lt;/a&gt;
  Adding new domain and subdomain
&lt;/h1&gt;

&lt;p&gt;To add a domain to VestaCP you must:&lt;br&gt;
Log in to control panel and go to the section Web.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bhgnVe9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1618211998/1410341508VestaCP_1_dmcmct.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bhgnVe9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1618211998/1410341508VestaCP_1_dmcmct.jpg" alt="vesta menu"&gt;&lt;/a&gt;&lt;br&gt;
In the upper left corner click on Add Web Domain. Fill in all the required fields and click Add.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hDOP7H4e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1618212109/1410341513VestaCP_2_xxpszc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hDOP7H4e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1618212109/1410341513VestaCP_2_xxpszc.png" alt="add domain"&gt;&lt;/a&gt;&lt;br&gt;
Also you need to create a subdomain. The procedure for creating a subdomain is the same as for a domain. &lt;/p&gt;

&lt;p&gt;When you're enter your domain name, you need to write "&lt;em&gt;admin.&lt;/em&gt;" in front of it. &lt;br&gt;
It looks like this: &lt;em&gt;admin.your-domain.com&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;In the future, we will install the Strapi backend on a subdomain.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#adding-template-for-nginx-in-vestacp"&gt;
  &lt;/a&gt;
  Adding template for nginx in VestaCP
&lt;/h1&gt;

&lt;p&gt;Templates for nginx on a server with VestaCP installed are stored along the path: &lt;em&gt;/usr/local/vesta/data/templates/web/nginx/&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Each template must be provided in two formats:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;*.tpl - for http&lt;/li&gt;
&lt;li&gt;*.stpl - for ssl(https)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The file names must be the same.&lt;/p&gt;

&lt;p&gt;Let's create them:&lt;/p&gt;

&lt;p&gt;nodeproxy.stpl&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
  listen   %ip%:%proxy_port%&lt;span class="p"&gt;;&lt;/span&gt;
  server_name %domain_idn% %alias_idn%&lt;span class="p"&gt;;&lt;/span&gt;
  error_log /var/log/%web_system%/domains/%domain%.error.log error&lt;span class="p"&gt;;&lt;/span&gt;

  location /error/ &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;alias&lt;/span&gt;  %home%/%user%/web/%domain%/document_errors/&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  location @fallback &lt;span class="o"&gt;{&lt;/span&gt;
    proxy_pass   http://%ip%:%web_port%&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  location ~ /&lt;span class="se"&gt;\.&lt;/span&gt;ht  &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return &lt;/span&gt;404&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
  location ~ /&lt;span class="se"&gt;\.&lt;/span&gt;svn/ &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return &lt;/span&gt;404&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
  location ~ /&lt;span class="se"&gt;\.&lt;/span&gt;git/ &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return &lt;/span&gt;404&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
  location ~ /&lt;span class="se"&gt;\.&lt;/span&gt;hg/  &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return &lt;/span&gt;404&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
  location ~ /&lt;span class="se"&gt;\.&lt;/span&gt;bzr/ &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return &lt;/span&gt;404&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;

  include %home%/%user%/conf/web/nginx.%domain%.conf&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;nodeproxy.tpl&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
  listen   %ip%:%proxy_port%&lt;span class="p"&gt;;&lt;/span&gt;
  server_name %domain_idn% %alias_idn%&lt;span class="p"&gt;;&lt;/span&gt;
  error_log /var/log/%web_system%/domains/%domain%.error.log error&lt;span class="p"&gt;;&lt;/span&gt;

  location /error/ &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;alias&lt;/span&gt;  %home%/%user%/web/%domain%/document_errors/&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  location @fallback &lt;span class="o"&gt;{&lt;/span&gt;
    proxy_pass   http://%ip%:%web_port%&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  location ~ /&lt;span class="se"&gt;\.&lt;/span&gt;ht  &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return &lt;/span&gt;404&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
  location ~ /&lt;span class="se"&gt;\.&lt;/span&gt;svn/ &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return &lt;/span&gt;404&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
  location ~ /&lt;span class="se"&gt;\.&lt;/span&gt;git/ &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return &lt;/span&gt;404&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
  location ~ /&lt;span class="se"&gt;\.&lt;/span&gt;hg/  &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return &lt;/span&gt;404&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
  location ~ /&lt;span class="se"&gt;\.&lt;/span&gt;bzr/ &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return &lt;/span&gt;404&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;

  include %home%/%user%/conf/web/nginx.%domain%.conf&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After adding a template in the domain settings panel, you need to select a template for nginx:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lTokZ2R4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1618213049/1538244034_em2tlg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lTokZ2R4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1618213049/1538244034_em2tlg.jpg" alt="domain settings panel"&gt;&lt;/a&gt;&lt;br&gt;
All the above steps must be repeated for the subdomain.&lt;/p&gt;

&lt;p&gt;After editing the nginx configurations, it must be restarted for the changes to take effect!&lt;/p&gt;

&lt;p&gt;For that go to the "Server" on top menu of VestaCP:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zQFJKj_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1618213499/top_menu_tzwv7g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQFJKj_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1618213499/top_menu_tzwv7g.png" alt="top menu"&gt;&lt;/a&gt;&lt;br&gt;
There you'll see nginx. Move mouse on it end click restart.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#nginx-configuration"&gt;
  &lt;/a&gt;
  Nginx configuration
&lt;/h1&gt;

&lt;p&gt;After applying the template for nginx, configuration files will be automatically generated under the path &lt;em&gt;/home/{username}/conf/web&lt;/em&gt;. Let's take a closer look at the contents of the template, namely, we are interested in the line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;include /home/username/conf/web/nginx.example.com.conf&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since nginx configuration files are dynamic, we cannot change their content, otherwise we will lose the changes after regenerating the template. But we can create an &lt;em&gt;nginx.example.com.conf*&lt;/em&gt; file to be extracted. It is worth noting that we only have access to the server block of the configuration file, since include is done there. This is done because the server block should be generated automatically and have basic settings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So let's create files for main domain:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;snginx.example.com.conf*&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Empty
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;nginx.example.com.conf*&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$scheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http"&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 rewrite ^/&lt;span class="o"&gt;(&lt;/span&gt;.&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https://&lt;span class="nv"&gt;$host&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt; permanent&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above redirects the request from http to https.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now create files for subdomain:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;snginx.admin.example.com.conf*&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;location / &lt;span class="o"&gt;{&lt;/span&gt; 
  proxy_pass http://00.0.000.000:1337&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead &lt;code&gt;00.0.000.000&lt;/code&gt; your server IP.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;nginx.admin.example.com.conf*&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$scheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http"&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 rewrite ^/&lt;span class="o"&gt;(&lt;/span&gt;.&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https://&lt;span class="nv"&gt;$host&lt;/span&gt;/&lt;span class="nv"&gt;$1&lt;/span&gt; permanent&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;That's it! üòû&lt;/p&gt;

&lt;p&gt;In next part we will deploy Gatsby and Strapi, create web hooks and install pm2.&lt;/p&gt;

&lt;p&gt;If you want to add something, drop it in the commentsüëáüèª&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>gatsby</category>
    </item>
  </channel>
</rss>
