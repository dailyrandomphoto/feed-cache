<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>p2p crypto exchange development</title>
      <author>jonathan carter</author>
      <pubDate>Fri, 05 Nov 2021 09:26:21 +0000</pubDate>
      <link>https://dev.to/jonathancarthe/p2p-crypto-exchange-development-54n2</link>
      <guid>https://dev.to/jonathancarthe/p2p-crypto-exchange-development-54n2</guid>
      <description>&lt;p&gt;Cryptocurrencies are the currency of the future. One of the main reasons that they are becoming so popular among people is that the central banks can’t have control over the transaction or the funds. Peer-to-peer cryptocurrency exchange can be known as a platform where traders from all around the world trade directly with each other. Because there is no middle person here so the individuals don’t need to pay any transaction fee. Also because there are only two participants in the transaction, the speed of interaction has increased significantly. Plus, blockchain technology boosts the revolution of cryptocurrencies. Some popular p2p exchanges are: remitano, Binance,Buycoins, localbitcoins .&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i3w5ngIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhvebbaie4nzshrm0kac.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3w5ngIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhvebbaie4nzshrm0kac.jpg" alt="Image description" width="612" height="330"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-p2p-cryptocurrency-exchange-platform-work"&gt;
  &lt;/a&gt;
  How does a p2p cryptocurrency exchange platform work?
&lt;/h2&gt;

&lt;p&gt;P2p exchange is a decentralized platform working on the blockchain technology. It connects buyers and sellers directly so here the third parties will be deleted. &lt;a href="https://radindev.com/p2p-crypto-exchange-script/"&gt;P2P crypto exchange development&lt;/a&gt; is the best way to grow your business. A p2p crypto exchange development is safe, secure and it has control over information and funds with more privacy.&lt;br&gt;
When you sign up for a peer-to-peer exchange you will be asked to verify your details. As soon as you are verified you can start your trading with other verified buyers or sellers. Any buyers or sellers can create their own orders or browse the existing ones to find their match.&lt;br&gt;
• Users register on the p2p exchange platform&lt;br&gt;
• Users will go through a KYC verification process&lt;br&gt;
• Buyer places a buy order&lt;br&gt;
• An address for a wallet will be created for the user&lt;br&gt;
• The matching engine will match the seller with the right buyer&lt;br&gt;
• The buyer and the seller agree on the terms of the trade&lt;br&gt;
• Smart contract-based escrow holds sellers' crypto assets to be sold.&lt;br&gt;
• Buyers make the payment for crypto assets to be purchased&lt;br&gt;
• The seller will confirm that he has received the payment&lt;br&gt;
• Escrow wallet will release the crypto assets, transferring to the same buyers' wallet address&lt;br&gt;
• The buyers can transfer the new assets to the cold wallet&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZ1e-xvK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpz3y01x8rt8oq7fq4z2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZ1e-xvK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpz3y01x8rt8oq7fq4z2.jpg" alt="Image description" width="612" height="330"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-features-that-a-p2p-crypto-exchange-platform-must-have"&gt;
  &lt;/a&gt;
  What are the features that a p2p crypto exchange platform must have?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Multiple cryptocurrencies: Bitcoin, ethereum, Dogecoin,etc. are very popular in the market but there are over 10,000 cryptocurrencies out there ready to be traded. Having the support for various cryptocurrencies users can have transactions in any crypto that they would prefer. By implementing this feature in the platform you make sure that users don’t need to shuffle between the different platforms to trade different coins.&lt;/li&gt;
&lt;li&gt; Multi-language support: providing content or the platform in multiple languages is a great step to a better understanding of users.&lt;/li&gt;
&lt;li&gt; Payment gateway: a payment gateway is an online payment service. The process to receive payments includes the process of asking the user to fill in some details such as credit/debit card numbers and some other info like this. This technology is used to accept debit or credit card purchases from customers.&lt;/li&gt;
&lt;li&gt; Multi-factor authentication: this feature is also available for users and not only for admins. This feature helps to increase the security level. This platform will keep the verified users updated with emails.&lt;/li&gt;
&lt;li&gt; Ad-based trading: buyers can publish an ad on the platform and determine their way of accepted payments, the price of the cryptos that they accept. And buyers can browse among the previously published ad or they can publish new ads. If a buyer chooses one of the ads and they both agree on the forms they can start trading.&lt;/li&gt;
&lt;li&gt; Secure transaction: users are going to invest their valuable funds and asses in this platform, they will transfer their cryptos and execute transactions through this platform so it is important to develop a secure p2p exchange for the traders. &lt;/li&gt;
&lt;li&gt; Private messaging: as the traders agree on terms to trade with each other they can send a message and connect with each other directly. This will boost the speed of transactions. It is an encrypted chat system that only the user can have the access to it.&lt;/li&gt;
&lt;li&gt; Real market value: it is the price an asset would have in the marketplace or the value that a particular community gives to particular equity or business. Users can have the access to the real market value in the platform. &lt;/li&gt;
&lt;li&gt; KYC and profile verification:  Automated KYC/ID/AML verification is a must-have feature in an exchange platform in recent days. It helps the administrator to find the right user quickly for a better solution. It helps to eliminate the hackers and other problems that may happen.&lt;/li&gt;
&lt;li&gt;Crypto swap: the crypto swap basically allows the crypto holders to easily exchange one cryptocurrency for another one without leaving the current digital wallet. With this feature, the crypto holder can exchange their cryptocurrencies in the private key wallet or in the trading account. &lt;/li&gt;
&lt;li&gt;Trading engine:  used for protocol and security handling. It enables investors and traders to place trades and monitor accounts through financial intermediaries.&lt;/li&gt;
&lt;li&gt;Preferred trading:  Nowadays exchanges provide options for trading, so users can choose a preferred way of trading and make a big profit. Users can always choose their preferred sellers to make it easier for them to make the best possible profit in a limited amount of time.&lt;/li&gt;
&lt;li&gt;Admin panel: The admin panel gives admin the control over different actions, such as tracking the users’ transactions, finding out suspicious actions and users to ban them, viewing the users’ activity and information.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#benefits-of-p2p-crypto-exchange-development"&gt;
  &lt;/a&gt;
  Benefits of p2p crypto exchange development
&lt;/h3&gt;

&lt;p&gt;• Blockchain development solutions&lt;br&gt;
• high-speed transactions &lt;br&gt;
ability to run the business &lt;br&gt;
• globally&lt;br&gt;
• cost-effective &lt;br&gt;
• No need for banks or a third parties.24/7 customer support &lt;br&gt;
• Secure payments methods&lt;br&gt;
• Reaching the high level of security: fraud prevention, privacy matters&lt;br&gt;
• Anonymity&lt;br&gt;
• No commission&lt;br&gt;
• Convenient payment terms&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XmHq0Gww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a059i0w9j33vqsxp0x39.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XmHq0Gww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a059i0w9j33vqsxp0x39.jpg" alt="Image description" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-p2p-crypto-exchange-development"&gt;
  &lt;/a&gt;
  The p2p crypto exchange development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step1:&lt;/strong&gt; researching, collecting the requirements, and deciding the exchange preparation that suits your business model. Do you have to decide in which blockchain you want to develop your p2p exchange platform? How much is your budget? In this step.&lt;br&gt;
&lt;strong&gt;Step2:&lt;/strong&gt; Essential technology integrations such as UX /UI, the enhanced security with legal compliance based on the geography of the exchange. Make sure the design of the platform is easy to understand and engaging.&lt;br&gt;
&lt;strong&gt;Step3:&lt;/strong&gt; In this step, all of the ready requirements are brought together to build a solution that is 100% functional. The trading engine installation occurs in this step.&lt;br&gt;
&lt;strong&gt;Step4:&lt;/strong&gt; inputting various blockchains into the platform. Testing that technologically the blockchain solution is reliable to compete in the market.&lt;br&gt;
&lt;strong&gt;Step5:&lt;/strong&gt; various tokens, coins, and altcoins list: making sure that the tokens are listed in a proper manner in the platform.&lt;br&gt;
&lt;strong&gt;Step6:&lt;/strong&gt; Launch the platform with enabled change and updates. Make sure that all the features and functions are included and it’s working correctly.&lt;/p&gt;

</description>
      <category>p2p</category>
      <category>blockchain</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Cryptocurrency exchange script</title>
      <author>isabella ciao</author>
      <pubDate>Fri, 05 Nov 2021 09:19:03 +0000</pubDate>
      <link>https://dev.to/isabellaciao/cryptocurrency-exchange-script-4ikn</link>
      <guid>https://dev.to/isabellaciao/cryptocurrency-exchange-script-4ikn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#first-what-is-a-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  First, What is a cryptocurrency exchange?
&lt;/h2&gt;

&lt;p&gt;A cryptocurrency exchange, or a digital currency exchange (DCE), is a business that allows customers to trade cryptocurrencies or digital currencies for other assets, such as conventional fiat money or other digital currencies. Exchanges may accept credit card payments, wire transfers or other forms of payment in exchange for digital currencies or cryptocurrencies. A cryptocurrency exchange can be a market maker that typically takes the bid–ask spreads as a transaction commission for is service or, as a matching platform, simply charges fees. Some brokerages which also focus on other assets such as stocks, like Robinhood and eToro, let users purchase but not withdraw cryptocurrencies to cryptocurrency wallets. Dedicated cryptocurrency exchanges such as Binance and Coinbase do allow cryptocurrency withdrawals, however.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HqKzdiU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8avh2plu6ouhifwqsut.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HqKzdiU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8avh2plu6ouhifwqsut.png" alt="Cryptocurrency Exchange script development" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-cryptocurrency-exchange-work"&gt;
  &lt;/a&gt;
  How does a cryptocurrency exchange work?
&lt;/h2&gt;

&lt;p&gt;In simplified terms, a cryptocurrency exchange is a script that allows crypto traders to conduct their trades. This platform allows you to buy or sell your cryptocurrencies conveniently when you want to. A crypto exchange also allows traders to convert one digital currency for another.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-cryptocurrency-exchange-script-development"&gt;
  &lt;/a&gt;
  what is Cryptocurrency Exchange Script development?
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency exchange script development to build your desired cryptocurrency exchange script. Share your dreamy crypto projects to cryptocurrency experts who start work on crypto exchange with latest technology-stack and result-driven business solutions. The robust cryptocurrency exchange script will provide an opportunity to make a business using blockchain technology. With High-quality interface, high level of security and great performance. Companies have ready-made solutions that will allow you to run your own exchange business in the shortest time. Their script has a professional design and a high level of security. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cryptocurrency-exchange-script"&gt;
  &lt;/a&gt;
  Cryptocurrency Exchange Script
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency Exchange Script is a ready to launch Cryptocurrency Trading Script inbuilt with advanced features that allow you launch a profitable cryptocurrency exchange immediately. There are various layers of high security which prevents from fraudulent activities and assure that your money would be safe.The flexibility offered with white label exchange script empowers any customization to facilitate customers as per their requisites. You get 100% un-encrypted source code of this exchange script. Customize at your will, Add/ Edit any feature easily. The exchange script is based on micro-service, and each micro-service can be utilized/exchanged with an external solution.&lt;br&gt;
It includes High liquidity, Ultra-Secure Admin Panel, Hot &amp;amp; Cold Wallet, Mobile Apps, Order book, Escrow based service, Advanced tech stack, White label solution. A Glance of some of them:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#liquidity-module"&gt;
  &lt;/a&gt;
  Liquidity module
&lt;/h3&gt;

&lt;p&gt;An exchange script requires liquidity and order book which helps to attract business. A white-label exchange script offers multiple options for liquidity that include market makers and order books.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#p2p-exchange"&gt;
  &lt;/a&gt;
  P2P Exchange
&lt;/h3&gt;

&lt;p&gt;Apart from having the normal exchange features, script has P2P exchange option. P2P exchanges allow the participants of the market to trade directly with each other without any trusted third party to process all trades.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#admin-panel"&gt;
  &lt;/a&gt;
  Admin Panel
&lt;/h3&gt;

&lt;p&gt;Define the responsibilities and rights of admins. Manage users and control all finance operation. Comprehensive reporting tools that provide details information about transactions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hot-amp-cold-wallet"&gt;
  &lt;/a&gt;
  Hot &amp;amp; Cold Wallet
&lt;/h3&gt;

&lt;p&gt;The exchange script comes with a built-in Hot Wallet. The money can be easily extended to a Cold Wallet. The operation of the "cold wallet" allows preventing the risks of storage of funds.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7mzE5dsU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebxvrqzjh2gzsz66ix30.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7mzE5dsU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebxvrqzjh2gzsz66ix30.png" alt="White Label Cryptocurrency Exchange Script" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#white-label-cryptocurrency-exchange-script"&gt;
  &lt;/a&gt;
  White Label Cryptocurrency Exchange Script
&lt;/h2&gt;

&lt;p&gt;cryptocurrency exchange script permits everyone to start their own cryptocurrency exchange script with minimal cost and faster deployment. Companies’ white labeled, ready-made exchange script has built with secure back-end, and a set of functionality which is ready to be arranged. Enhanced Cryptocurrency trading script can be simply customized by carry out your brand logo, templates, themes with your desired UI/UX design that saves development time and cost.&lt;br&gt;
Companies built featured bitcoin exchange script to build your cryptocurrency exchange script as all in one stop solution like an easy to use dashboard that permits users to manage and trade cryptos, trading pairs and coin listings, as well as multi payment and multi lingual support &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-various-type-of-cryptocurrency-exchange-script"&gt;
  &lt;/a&gt;
  The various type of cryptocurrency exchange script
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#centralized-crypto-exchange"&gt;
  &lt;/a&gt;
  Centralized crypto exchange
&lt;/h3&gt;

&lt;p&gt;Centralized Crypto Exchange. Centralized exchanges are the most commonly used exchanges among investors in the current market. The customers deposit their funds directly into the exchange, and the third party initiates the transaction process. ... And the exchange depends upon the third party who is in control of the funds&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#decentralized-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  Decentralized Cryptocurrency Exchange
&lt;/h3&gt;

&lt;p&gt;What is a decentralized exchange? A decentralized exchange, also known as DEX, offers a new type of pair-matching that allows traders to place orders and trade cryptocurrencies without an intermediary institution controlling the funds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hybrid-crypto-exchange"&gt;
  &lt;/a&gt;
  Hybrid crypto exchange
&lt;/h3&gt;

&lt;p&gt;The hybrid exchange combines the best of centralized and decentralized exchanges – offering high liquidity and fast transactions of centralized exchanges and anonymity and protection of decentralized exchanges. Owing to these benefits, hybrid exchanges are gaining popularity among traders and businesses planning to launch a crypto exchange.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#p2p-crypto-exchange-peer-to-peer"&gt;
  &lt;/a&gt;
  P2P crypto exchange (peer to peer)
&lt;/h3&gt;

&lt;p&gt;We know that P2P (Peer to Peer) - Decentralized Exchanges actually allow users of the market to trade cryptocurrencies directly with each participant without any 3rd party involvements to process all cryptocurrency trading.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#p2a-crypto-exchange-peer-to-admin"&gt;
  &lt;/a&gt;
  P2A crypto exchange (peer to admin)
&lt;/h3&gt;

&lt;p&gt;Bitcoin trading always happens through a bitcoin trading website. Here admin (owner) of the website has the power to set the selling price and buying price of bitcoin. So traders are allowed to trade only with the specified price rate. Since the admin has the control over the price fixing, he can gain a huge profit from every successful trade.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#escrow-crypto-exchange"&gt;
  &lt;/a&gt;
  Escrow Crypto Exchange
&lt;/h3&gt;

&lt;p&gt;Escrow based exchange built by programming like PHP, JavaScript, MEAN and MERN that will act as a trusted 3rd party interface sends and receives cryptocurrencies on end of two parties.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TTdHMcNr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s12c5k0j0h4nmxw8tlxm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TTdHMcNr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s12c5k0j0h4nmxw8tlxm.png" alt="FEATURES OF CRYPTOCURRENCY EXCHANGE SCRIPT" width="880" height="589"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-cryptocurrency-exchange-script"&gt;
  &lt;/a&gt;
  FEATURES OF CRYPTOCURRENCY EXCHANGE SCRIPT
&lt;/h2&gt;

&lt;p&gt;• Robust admin and users dashboard&lt;br&gt;
• Secure cryptocurrency transaction&lt;br&gt;
• Premium UI/UX&lt;br&gt;
• Record complete history of cryptocurrency transactions&lt;br&gt;
• Seamless communication between buyer and seller&lt;br&gt;
• Flawless trade of cryptocurrency&lt;br&gt;
• Two factor authentication&lt;br&gt;
• Advanced Smart contract&lt;br&gt;
• Payment gateway integration&lt;br&gt;
• Instant alert and notification&lt;br&gt;
• Easy to Use Platform&lt;br&gt;
• Reliable cryptocurrency Exchange on Blockchain&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-feature"&gt;
  &lt;/a&gt;
  User Feature
&lt;/h3&gt;

&lt;p&gt;• Atomic Swap&lt;br&gt;
• Spot Trading&lt;br&gt;
• OTC Trading&lt;br&gt;
• Mobile Trading&lt;br&gt;
• Referral Program&lt;br&gt;
• Market Price&lt;br&gt;
• Limit Price&lt;br&gt;
• Review All Coin Info&lt;br&gt;
• Payment Method&lt;br&gt;
• Check Ticket Status&lt;br&gt;
• Track Live Order Book&lt;br&gt;
• Recent Crypto Orders&lt;br&gt;
• Complaint Status&lt;br&gt;
• Check Hot Wallet Balance&lt;br&gt;
• Transaction History&lt;br&gt;
• Biometric Authentication&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-features"&gt;
  &lt;/a&gt;
  Security Features
&lt;/h3&gt;

&lt;p&gt;• Two-Factor Authentication (2FA)&lt;br&gt;
• DDOs Withstand Ability&lt;br&gt;
• Jail Login Method&lt;br&gt;
• Escrow Management&lt;br&gt;
• Firebase, Firewall Implementation&lt;br&gt;
• End-To-End Encrypted Transactions&lt;br&gt;
• SSL Integration&lt;br&gt;
• Encrypted Crypto Wallets&lt;br&gt;
• Anti-Phishing Software&lt;br&gt;
• Multi-Sig Wallets&lt;br&gt;
• Browser Detection Security&lt;br&gt;
• KYC and AML Verification&lt;br&gt;
• DB Encryption&lt;br&gt;
• CSRF Protection&lt;br&gt;
• Decentralized Data Handling&lt;br&gt;
• IP Login Restriction&lt;br&gt;
• Regular Security Audits&lt;br&gt;
• Face &amp;amp; Fingerprint ID&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jB4K1iZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iocjssnlsh9mkobzne84.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jB4K1iZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iocjssnlsh9mkobzne84.png" alt="How to Create a Cryptocurrency Exchange script for Business" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-cryptocurrency-exchange-script-for-business"&gt;
  &lt;/a&gt;
  How to Create a Cryptocurrency Exchange script for Business?
&lt;/h2&gt;

&lt;p&gt;Here we list the crucial steps involved to build a secure cryptocurrency exchange script.&lt;br&gt;
• Go through market research&lt;br&gt;
• Evaluate your business requirements&lt;br&gt;
• Find the Right Location for your bitcoin exchange business&lt;br&gt;
• Analysis the laws and compliance requirements&lt;br&gt;
• Select the right type of bitcoin exchange to launch&lt;br&gt;
• Design the Architecture of your cryptocurrency exchange script&lt;br&gt;
• Project feasibility&lt;br&gt;
• Discovery the outstanding cryptocurrency exchange script provider&lt;br&gt;
• Integrate latest features&lt;br&gt;
• Implement high-level security features&lt;br&gt;
• Perform beta testing&lt;br&gt;
• Deployment&lt;br&gt;
• maintenance&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-go-through-market-research"&gt;
  &lt;/a&gt;
  1 Go through Market Research
&lt;/h3&gt;

&lt;p&gt;First of all, even though it is all about the cryptocurrency exchange and cryptocurrency trade, you will need to do an updated market analysis that can help you to manage the marketing strategy. For example, BTC prices are rising and so other major cryptocurrencies. But it is an undeniable fact that some other cryptocurrencies are going down. If you have done proper market research, you can consult the best coin to invest in, and if the reader or investor gains more, whom do you think he will consult the next time? It is obviously you. So, it is best to do thorough market research than to jump into the market without any outside interference.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-evaluate-your-business-requirements"&gt;
  &lt;/a&gt;
  2 Evaluate Your Business Requirements
&lt;/h3&gt;

&lt;p&gt;As a crypto exchange owner, you need to know the requirements of your exchange. Never fail to document your requirements as a Business Requirement Specification document. This will help you to track what your exchange will hold with. The crypto exchange solution providers will take your Business Requirement Specification (BRS) document and they will analyze the feasibility of the project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-find-the-right-location-for-your-bitcoin-exchange-business"&gt;
  &lt;/a&gt;
  3 Find the Right Location for your bitcoin exchange business
&lt;/h3&gt;

&lt;p&gt;You need to decide which would be the right and best place for starting the cryptocurrency exchange business. Because, some major countries like Russia, Bolivia, Ecuador, and Nepal are saying “No” to cryptocurrency. Which means it is considered to be illegal and forbidden in those countries. So you cannot build a bitcoin exchange website there to make lucrative money. But some countries are allowing people to trade cryptos and to create a crypto exchange script. Those cryptocurrency-friendly countries are listed below. Such as: &lt;br&gt;
• The United States of America&lt;br&gt;
• Canada&lt;br&gt;
• Japan&lt;br&gt;
• Singapore&lt;br&gt;
• Malta&lt;br&gt;
• Australia&lt;br&gt;
• European Union countries&lt;br&gt;
So you need to analyze which would be the right location for starting the bitcoin exchange site and plan accordingly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-analysis-the-laws-and-compliance-requirements"&gt;
  &lt;/a&gt;
  4 Analysis the Laws and Compliance Requirements
&lt;/h3&gt;

&lt;p&gt;The whole idea of cryptocurrency still does not reach well to many major countries except a few. The law differs in every country so check the laws in the country that you are planning to start a cryptocurrency exchange business. Thus, Proper licensing is needed on which your crypto exchange plans to operate. In many places, crypto exchange script operates without significant oversight. In the US, digital currency operators must get proper licenses from the government for Money Transmitter businesses. Also, they must follow SEC &amp;amp; CFTC rules and regulations. Thus, consult a legal and professional expert in the crypto business field before starting a bitcoin exchange business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-select-the-right-type-of-bitcoin-exchange-to-launch"&gt;
  &lt;/a&gt;
  5 Select the Right Type of bitcoin exchange to Launch
&lt;/h3&gt;

&lt;p&gt;Deciding the type of cryptocurrency exchange script is more crucial before leaping into the bitcoin exchange business. There are three different types of cryptocurrency exchanges in the crypto industry. They are:&lt;br&gt;
• Centralized cryptocurrency exchange&lt;br&gt;
• Decentralized cryptocurrency exchange&lt;br&gt;
• Hybrid Cryptocurrency exchange&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-design-the-architecture-of-your-cryptocurrency-exchange-script"&gt;
  &lt;/a&gt;
  6 Design the Architecture of your Cryptocurrency Exchange script
&lt;/h3&gt;

&lt;p&gt;After choosing the type of crypto exchange for your business, you must design the architecture of your exchange script. For designing the effective architecture, you must enable four essential components. They are:&lt;br&gt;
a) Trade engine&lt;br&gt;
Without this core part, the whole mechanism cannot work. A trading engine should have unhindered access to the order book, match all the purchasing and selling orders, process transactions and calculate balances&lt;br&gt;
b) Crypto wallet development &amp;amp; integration&lt;br&gt;
The cryptocurrency currency can be well compared with a bank account. It lets you store your sum and also transact when required. To ensure safety a two-way authentication process is maintained. A cryptocurrency wallet is mostly used to store, receive, and transfer a wide range of cryptos in a risk-free manner. Implement hot or cold storage systems to offer a hack-free environment in your exchange. In the hot wallet, the user can instantly withdraw cryptos without the approval of the exchange owner and it is completely online storage. So it enables real-time transactions. Cold storage wallet is completely offline storage and it is advisable to integrate a cold storage wallet since it is not vulnerable to cyberattacks and other malware activities.&lt;br&gt;
c) Admin Control Panel&lt;br&gt;
This powerful dashboard is ought to help the administrator run the trading operations as well as verifying processes, create liquidity, and provide helpful and professional customer support.&lt;br&gt;
d) User Interface (UI/IX)&lt;br&gt;
The user interface is one of the important components that you must take into account while building a bitcoin exchange website. The user interface must be fascinating and friendly because it helps to provide an amazing trading experience to your users. You need to make sure that the user-interface is compatible with multiple devices like smartphones, iPad, and tablets. Also, you can enhance trading engagements by developing crypto trading mobile apps for your users. To satisfy your global users, you must enable some reliable functions.&lt;br&gt;
• Register and access the account at any time in a risk-free manner.&lt;br&gt;
• Deposit, bank, and withdraw user’s digital assets at any time&lt;br&gt;
• Viewing the history of transactions, balances, statistics, and performance charts.&lt;br&gt;
• Allowing your users to buy and sell major digital currencies at any time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-project-feasibility"&gt;
  &lt;/a&gt;
  7 Project Feasibility
&lt;/h3&gt;

&lt;p&gt;The project feasibility will be based on the cost, time, and resources needed for the cryptocurrency exchange development. Apart from this, the deep analysis will be done by the crypto exchange solution providers like the following essential factors.&lt;br&gt;
Economic – Whether the project can be completed within the allotted budget&lt;br&gt;
Legal – Whether we have the potential to handle this project as cyber law and other regulatory compliance.&lt;br&gt;
Operational Feasibility – Whether we can create operations as per the client’s expectations and requirements&lt;br&gt;
Technical – Need to check whether the current computer system supports the advanced technology that is involved in the project.&lt;br&gt;
Schedule – Decide whether the project can be completed within the given time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-find-the-outstanding-cryptocurrency-exchange-script-provider"&gt;
  &lt;/a&gt;
  8 Find the Outstanding Cryptocurrency Exchange Script provider
&lt;/h3&gt;

&lt;p&gt;It is the most essential step of creating a crypto exchange script. Because in this current time, there are lots and lots of crypto exchange script providers in the global marketplace. But everyone doesn’t offer the best-quality crypto exchange products. There are two ways that you can follow to build a bitcoin exchange script. Either from scratch or else by using the premium Cryptocurrency exchange script. But the fact is many people prefer ready-made bitcoin exchange Script to create a crypto exchange script rather than developing from scratch. Because it is cheap, fast, and secure with all the customizable options and outstanding trading features. So choose the best cryptocurrency exchange Script provider to start a crypto exchange business that will leverage top-notch results.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-integrate-latest-features"&gt;
  &lt;/a&gt;
  9 Integrate Latest Features
&lt;/h3&gt;

&lt;p&gt;Features play a vital role in developing a successful crypto exchange script. The Trading features must be more effective for the users in your exchange. So it may grab many crypto users from various countries and helps to increase the overall user base of your exchange. There are some ideal technical features that you must integrate into your crypto exchange script. &lt;br&gt;
By incorporating these essential features, both the experienced and the new crypto traders will get the best trading experience.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-implement-highlevel-security-features"&gt;
  &lt;/a&gt;
  10 Implement High-level Security Features
&lt;/h3&gt;

&lt;p&gt;As of now, bitcoins and crypto exchanges are the main targets for anonymous hackers. Many bitcoin exchange scrpit have lost millions worth of crypto assets due to improper security systems and loopholes. So, here we list some high-level security mechanisms that you must enable into your cryptocurrency exchange script.&lt;br&gt;
By integrating these protective systems, your exchange can eliminate hacking and other fraudulent activities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-perform-beta-testing"&gt;
  &lt;/a&gt;
  11 Perform Beta Testing
&lt;/h3&gt;

&lt;p&gt;After integrating all the essential features and security features, you can run a beta test for your exchange. By performing the beta testing, you can collect the errors, bugs, issues, and feedback. If unfortunately, your crypto exchange faces any issues in testing, then you can easily rectify them instantly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-deployment"&gt;
  &lt;/a&gt;
  12 Deployment
&lt;/h3&gt;

&lt;p&gt;After the beta testing is over, your exchange is ready for the deployment phase. In this phase, you will get your fully functional and ready to go live crypto exchange script. Once your exchange gets deployed with the help of a professional crypto exchange script provider, you need to market your exchange through promotions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-maintenance"&gt;
  &lt;/a&gt;
  13 Maintenance
&lt;/h3&gt;

&lt;p&gt;The process of creating your crypto exchange does not stop with the deployment. Maintenance has to be done periodically for your platform. Because there will be some anonymous attackers who will look for some security hole to inject threats. This is not to threaten you; this is just a word of caution from our side. Thus, make sure whether your crypto exchange script is maintained with upgraded security modules or not. These are the stages involved in launching a secure and successful crypto exchange. By considering all these vital steps, you can create your bitcoin exchange script within 7 days. The only part that lies in your hand is preparing your required business documents and approaching a genuine cryptocurrency exchange script provider.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9sxF-cbe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjn7ooi62sw6zvpnmw53.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9sxF-cbe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjn7ooi62sw6zvpnmw53.png" alt="Advantages of Starting a Cryptocurrency Exchange Business" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-starting-a-cryptocurrency-exchange-business-using-cryptocurrency-exchange-script"&gt;
  &lt;/a&gt;
  Advantages of Starting a Cryptocurrency Exchange Business Using Cryptocurrency Exchange script
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; If you are an admin in the exchange, you can charge fees for every successful cryptocurrency trading&lt;/li&gt;
&lt;li&gt; If you are integrating the IEO module in the exchange script, then you can earn separate profitable money through listing fees.&lt;/li&gt;
&lt;li&gt; cryptocurrency exchange script has high customization scope. So you can easily customize the theme, logo, name, and other front-end designs as per your business needs&lt;/li&gt;
&lt;li&gt; You can expand your business and improve your brand visibility in the market quickly&lt;/li&gt;
&lt;li&gt; You can gain a plenty amount of profits in a short time.&lt;/li&gt;
&lt;li&gt; Your global crypto users can get immediate and safe crypto transactions.&lt;/li&gt;
&lt;li&gt; You can neglect to spend more money &amp;amp; time on making a superfine crypto exchange script.&lt;/li&gt;
&lt;li&gt; Deploying the cryptocurrency exchange script will be easy and simple&lt;/li&gt;
&lt;li&gt; You can get productive 24*7 technical and customer support from the cryptocurrency exchange script provider.
## How much does Cryptocurrency exchange script development cost?
Cryptocurrency exchange script development follows the average cost similar to building an application. Crypto technology has a vast pool of features that may vary the cost of development. The features include multiple platforms, multiple wallets, and currency; two-way authentication, chatbots, additional backups, large servers and much more. It is suggested to share your requirements with the blockchain developers and calculate the average cost based on the features.
## Which is the best cryptocurrency exchange script?
### Top 10 Cryptocurrency Exchange Scripts:
• Binance clone script.
• LocalBitcoins clone script.
• Coinbase clone script.
• Paxful clone script.
• Remitano clone script.
• Bitstamp clone script.
• Bithumb clone script.
• Wazirx clone script&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>cryptocurrency</category>
      <category>exchange</category>
    </item>
    <item>
      <title>Intro to Emoji URLs</title>
      <author>Parth Agarwal</author>
      <pubDate>Fri, 05 Nov 2021 09:06:07 +0000</pubDate>
      <link>https://dev.to/ra101/intro-to-emoji-urls-10c9</link>
      <guid>https://dev.to/ra101/intro-to-emoji-urls-10c9</guid>
      <description>&lt;p&gt;I was looking for catchy domain names, And I came across emoji domains like &lt;a href="http://%F0%9F%93%99.ws/"&gt;📙.ws&lt;/a&gt; or &lt;a href="http://i%E2%9D%A4%EF%B8%8F.ws/"&gt;i❤️.ws&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, I knew what my task of day is going to be. Below is the report of my 3 hour investigation into Emoji Domains.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-are-they-possible"&gt;
  &lt;/a&gt;
  How are they possible?
&lt;/h3&gt;

&lt;p&gt;To create standardization in Internet hostnames every domain name is encoded into punycode, a LDH (letters, digits, and hyphens) subset of ASCII, by browsers before URL encoding it. pseudo code for the flow can written as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;final_url = url.encode(
    punycode.encode(domain.name) + '/rest of the path'
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, by only using LDH, other ASCII char are converted into &lt;code&gt;xn--&lt;/code&gt; form, some examples are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ü&lt;/code&gt; -&amp;gt; &lt;code&gt;xn--tda&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;人&lt;/code&gt; -&amp;gt; &lt;code&gt;xn--gmq&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;😀&lt;/code&gt; -&amp;gt; &lt;code&gt;xn--e28h&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;links: &lt;a href="//punycoder.com"&gt;punycoder.com&lt;/a&gt; | &lt;a href="//urlenc.com"&gt;urlenc.com&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-are-they-so-rare"&gt;
  &lt;/a&gt;
  Why are they so rare?
&lt;/h3&gt;

&lt;p&gt;With the restriction of LDH many hosting services also add the rule that &lt;code&gt;-&lt;/code&gt; must be surrounded by characters to decrease changes of scamming or exploits therefore making &lt;code&gt;--&lt;/code&gt; illegal. &lt;/p&gt;

&lt;p&gt;Click &lt;a href="https://www.20i.com/support/domain-names/domain-name-restrictions"&gt;Here&lt;/a&gt; to know more.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Loop-Hole: According to &lt;a href="https://en.wikipedia.org/wiki/Emoji_domain#Availability_and_registration"&gt;wikipedia&lt;/a&gt;, &lt;code&gt;As of April 2021, there are eleven top-level domains for which registration is possible: .uz, .cf, .ga, .gq, .ml, .tk, .st, .fm, .to, .kz and .ws&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-get-one"&gt;
  &lt;/a&gt;
  Lets get one!
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;I noticed &lt;code&gt;.tk&lt;/code&gt;, and I remembered long ago they were giving redirector domain names for free that too without signup. I checked back, sadly that was not the case anymore, Although the fees was not that much, But I am not willing to pay for a detour in my evening.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Okay if we can't have domain name, lets get a subdomain, &lt;br&gt;
I already have a &lt;a href="//infinityfree.net"&gt;InfinityFree&lt;/a&gt; account, So lets try there, but it looked at &lt;code&gt;--&lt;/code&gt; and said &lt;code&gt;no latin letters&lt;/code&gt;, So, I looked around and found some websites but I had to input my card info, so i backed out.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Finally, &lt;a href="//profreehost.com"&gt;ProFreeHost&lt;/a&gt; was my saviour, I quickly setup an account, found how to redirect the url&lt;/strong&gt;, only thing left was to think of a domain name, After ton of soul searching, there it was on my youtube feed, &lt;code&gt;Lightyear | Teaser Trailer&lt;/code&gt;. &lt;strong&gt;So I went to infinity and beyond and created my website:&lt;br&gt;
&lt;a href="http://2%EF%B8%8F%E2%83%A3%E2%99%BE%EF%B8%8F%E2%9E%95%F0%9F%9A%80.unaux.com/"&gt;2️⃣♾️➕🚀.unaux.com&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;If you make/made your own Emoji Website, comment below and share with us as well.&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>New Tutorial in Hubages</title>
      <author>Saleh Mubashar</author>
      <pubDate>Fri, 05 Nov 2021 08:52:25 +0000</pubDate>
      <link>https://dev.to/salehmubashar/new-tutorial-in-hubages-4ek3</link>
      <guid>https://dev.to/salehmubashar/new-tutorial-in-hubages-4ek3</guid>
      <description>&lt;p&gt;Hi guys&lt;br&gt;
Hope you all are doing well.&lt;br&gt;
Firstly, thanks for the immense support on my useNavigate and CSS tutorial. I am still in shock that it was received so well. &lt;br&gt;
As you all may know, I am an author at different platforms. So I may not publish regularly here but I am active in other platforms too.&lt;br&gt;
You can check out my &lt;a href="https://discover.hubpages.com/technology/reactCounter"&gt;new tutorial&lt;/a&gt; that is published on hubpages. I would really appreciate the support.&lt;br&gt;
&lt;a href="https://hubpages.com/@salehmubashar"&gt;My profile&lt;/a&gt;&lt;br&gt;
&lt;a href="http://hubpages.com/_dev/user/new"&gt;Create a hubpages account&lt;/a&gt; and earn by writing. &lt;br&gt;
Once again, thank you all.&lt;br&gt;
Until next time&lt;br&gt;
Cheers :)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>🔥🔥🔥  Introducing ESBuild, compiling is straight up fast!!!</title>
      <author>liu-jin-yi</author>
      <pubDate>Fri, 05 Nov 2021 08:17:28 +0000</pubDate>
      <link>https://dev.to/liujinyi/introducing-esbuild-compiling-is-straight-up-fast-59n7</link>
      <guid>https://dev.to/liujinyi/introducing-esbuild-compiling-is-straight-up-fast-59n7</guid>
      <description>&lt;p&gt;The current hands of the project hot update is getting slower and slower, so there is the emergence of this piece of article, this is a tutorial article, the current set has come up the company's development environment, this example is the previous experiment to test and do. This piece of tutorial code and the real introduction of the project code or a certain difference, if the partners also want to introduce esbuild packaging for the company's project, you can leave a comment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Since the company's project is an old one, I mainly addressed the experience of working in a development environment.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-basic-cra-project"&gt;
  &lt;/a&gt;
  🔥 Creating a basic CRA project
&lt;/h2&gt;

&lt;p&gt;Let's start by creating a basic react project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn create react-app my-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Preview Folder&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KO-LvMLM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/709749d2773b4468bed37e3cef8c3967%257Etplv-k3u1fbpfcp-watermark.image%3F" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KO-LvMLM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/709749d2773b4468bed37e3cef8c3967%257Etplv-k3u1fbpfcp-watermark.image%3F" alt="2021-10-16 15.17.42.gif" width="880" height="534"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After creating the test project let's see what problems we have to solve to introduce esbuild?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We need a &lt;strong&gt;local server&lt;/strong&gt;, that will display the packaged files.&lt;/li&gt;
&lt;li&gt;A library &lt;strong&gt;for parsing command line arguments is also needed&lt;/strong&gt;, to pass variables for the development environment.&lt;/li&gt;
&lt;li&gt;It is also necessary to delete the last packed file every time you start the project.&lt;/li&gt;
&lt;li&gt;There is also a need to address the &lt;strong&gt;port number&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Solve &lt;strong&gt;svg's icon&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Introduce esbuild for packaging.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With the above problem solved, we can implement this demo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#download-dependency-packages"&gt;
  &lt;/a&gt;
  🔥 Download Dependency Packages
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add browser-sync --dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main purpose of this package is to create the server, render the packaged files, and listen for file changes in the specified file for esbuild to repackage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add chalk --dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main purpose of this package is to beautify the character style of the terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add command-line-args --dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a library mainly used for parsing command line arguments and we mainly use it to confirm if it is a development environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add del --dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We mainly use this package to perform deletion operations on packed files or folders.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add get-port@5.1.1 --dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use this library mainly to get the current TCP port number available. I didn't install the latest version because the latest version has requirements for Node.js, my node version is v12.18.3, and it's expected node version is: "^12.20.0 || ^14.13.1 || &amp;gt;=16.0.0".&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We copy the public folder and rename it to public-dev, the index.html in this folder is the entry point of our application.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add --dev esbuild-plugin-svgr
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Plugin for esbuild that adds support for importing &lt;code&gt;*.svg&lt;/code&gt; files as React components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add esbuild --dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last thing is to install esbuild.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#modification-packagejson"&gt;
  &lt;/a&gt;
  🔥 Modification package.json
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    "scripts": {
        ...
+++     "dev": "node devBuild.js --dev"
      },
      ...
+++ "type": "module"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-devbuildjs"&gt;
  &lt;/a&gt;
  🔥 Create devBuild.js
&lt;/h2&gt;

&lt;p&gt;After changing the package.json file, next create devBuild.js in the root folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import browserSync from "browser-sync";
import chalk from "chalk";
import commandLineArgs from "command-line-args";
import del from "del";
import esbuild from "esbuild";
import getPort from "get-port";
import svgrPlugin from "esbuild-plugin-svgr";
// Create the server.
const bs = browserSync.create();
// Deconstructing environment variables
const { dev } = commandLineArgs({ name: "dev", type: Boolean });
// Delete the package folder from the public-dev folder
del.sync("./public-dev/dist");

// Start esbuild to build the package
(async () =&amp;gt; {
  const buildResult = await esbuild
    .build({
      format: "esm", // Sets the output format of the generated JavaScript file.
      target: "es2017", // Compile to convert version
      entryPoints: ["./src/index.jsx"], // Packed Entrance
      outdir: "./public-dev/dist", // Output Directory
      chunkNames: "chunks/[name].[hash]", // Packed out file name
      incremental: dev, // Because we are listening for file changes to repack, and we want the development environment to use esbuild, dev is true.
      loader: {
        // This option changes the way the given input file is interpreted.
        ".svg": "text",
        ".png": "dataurl",
      },
      bundle: true, // Bundling files means inlining any imported dependencies into the file itself.
      splitting: true, // Code splitting is currently only available for esm output format.
      plugins: [svgrPlugin()],
      inject: ["./public-dev/react-shim.js"], // Import React into esbuild as a global variable
    })
    .catch((err) =&amp;gt; {
      console.error(chalk.red(err));
      process.exit(1);
    });
  console.log(chalk.green("The build has finished! 📦\n"));
  // Get the port number that can be used
  const port = await getPort({
    port: getPort.makeRange(4000, 4999),
  });

  console.log(
    chalk.cyan(
      `Launching the Shoelace dev server at http://localhost:${port}! 🥾\n`
    )
  );
  // Server initialization
  bs.init({
    startPath: "/", // Initial path
    port, // Port number
    logLevel: "silent", // Log level
    logFileChanges: true, // Log file changes
    notify: true, // Small pop-up notifications in the browser
    single: true, // Provide separate index.html
    server: {
      baseDir: "public-dev", // Base Folder
      index: "index.html", // Set the server's entry file
    },
    files: "src/", // Listening to files under src
  });

  // Listening for changes under the src folder
  bs.watch(["src/"]).on("change", async (filename) =&amp;gt; {
    console.log(`Source file changed - ${filename}`);
    // Repackaging
    buildResult.rebuild();
  });
})();

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#indexhtml"&gt;
  &lt;/a&gt;
  🔥 index.html
&lt;/h2&gt;

&lt;p&gt;Because I didn't want to change things directly under the public file, I directly copied the public folder and renamed it to public-dev. Why did I do that? Mainly because I didn't want to intersect with the webpack packaged files. So I simply copied a folder directly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In the index.html file, we have to introduce the packaged css and js. Here we have to be careful when introducing the js, we must use the ESM way to introduce it. Otherwise it will report an error!!!&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;

&amp;lt;head&amp;gt;
  &amp;lt;meta charset="utf-8" /&amp;gt;
  &amp;lt;link rel="icon" href="%PUBLIC_URL%/favicon.ico" /&amp;gt;
  &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1" /&amp;gt;
  &amp;lt;meta name="theme-color" content="#000000" /&amp;gt;
  &amp;lt;meta name="description" content="Web site created using create-react-app" /&amp;gt;
  &amp;lt;link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" /&amp;gt;
  &amp;lt;link rel="manifest" href="%PUBLIC_URL%/manifest.json" /&amp;gt;
++  &amp;lt;link rel="stylesheet" type="text/css" href="./dist/index.css" /&amp;gt;
  &amp;lt;title&amp;gt;React App&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
  &amp;lt;noscript&amp;gt;You need to enable JavaScript to run this app.&amp;lt;/noscript&amp;gt;
  &amp;lt;div id="root"&amp;gt;&amp;lt;/div&amp;gt;
++  &amp;lt;script type="module"&amp;gt;
++    import './dist/index.js'
++  &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Change the component suffix name to &lt;code&gt;.jsx&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reactshimjs"&gt;
  &lt;/a&gt;
  🔥 react-shim.js
&lt;/h2&gt;

&lt;p&gt;The main purpose of creating this file is to import React into esbuild as a global variable, so that you don't need to introduce react in each component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as React from "react";
export { React };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#modify-appjsx"&gt;
  &lt;/a&gt;
  🔥 Modify App.jsx
&lt;/h2&gt;

&lt;p&gt;The main thing here is that the usage of svg needs to be changed. This is because the usage of the plugin &lt;code&gt;esbuild-plugin-svgr&lt;/code&gt; has to be conformed to.&lt;/p&gt;

&lt;p&gt;It is also crucial to &lt;strong&gt;change the suffix name of all components with the previous js to jsx.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;++ import Logo from "./logo.svg";
import "./App.css";

function App() {
  return (
    &amp;lt;div className="App"&amp;gt;
      &amp;lt;header className="App-header"&amp;gt;
++        &amp;lt;Logo className="App-logo" /&amp;gt;
        &amp;lt;p&amp;gt;
          Edit &amp;lt;code&amp;gt;src/App.js&amp;lt;/code&amp;gt; and save to reload.
        &amp;lt;/p&amp;gt;
        &amp;lt;a
          className="App-link"
          href="https://reactjs.org"
          target="_blank"
          rel="noopener noreferrer"
        &amp;gt;
          Learn React
        &amp;lt;/a&amp;gt;
      &amp;lt;/header&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, introducing esbuild in CRA is Ok! If you are interested, go ahead and try it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preview-demo"&gt;
  &lt;/a&gt;
  🔥  Preview demo
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2624O50p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1a369b6a62b140e5b2fe280fda8eb693%257Etplv-k3u1fbpfcp-watermark.image%3F" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2624O50p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1a369b6a62b140e5b2fe280fda8eb693%257Etplv-k3u1fbpfcp-watermark.image%3F" alt="2021-10-16 18.29.06.gif" width="880" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>vue</category>
    </item>
    <item>
      <title>Learning a new programming language</title>
      <author>AlessandroMinoccheri</author>
      <pubDate>Fri, 05 Nov 2021 08:03:40 +0000</pubDate>
      <link>https://dev.to/minompi/learning-a-new-programming-language-1d2j</link>
      <guid>https://dev.to/minompi/learning-a-new-programming-language-1d2j</guid>
      <description>&lt;p&gt;In this period every day, a new programming language could be released and can become one of the most interesting in a few months.&lt;br&gt;
So it’s difficult for a developer to learn every day a new different programming language because you need the time to explore it.&lt;br&gt;
Many times other developers ask me: &lt;br&gt;
“How can I learn a new programming language?”&lt;/p&gt;

&lt;p&gt;Well in my opinion there isn’t the perfect recipe to learn a new programming language because it depends principally on how the developer can learn new things.&lt;br&gt;
Some people need to learn from books or others that prefer coding directly etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shu-ha-ri"&gt;
  &lt;/a&gt;
  SHU HA RI
&lt;/h2&gt;

&lt;p&gt;Before going deep into the argument, I would like to share the concept of SHU-HA-RI, because I think that it’s important to know when you start to learn something:&lt;/p&gt;

&lt;p&gt;Shu-ha-ri is a concept of Japanese martial arts and describes the stages from learning to mastery, therefore a path that involves the presence of a teacher accompanying a student.&lt;br&gt;
This concept was taken into Toyota to indicate the skills development model.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vCaFjsgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AdtkMwR4AvquKXVUYpQcijw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vCaFjsgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AdtkMwR4AvquKXVUYpQcijw.jpeg" alt="" width="300" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(image from:&lt;a href="https://leadagilesolutions.com.au/a-mental-model-for-the-phases-of-mastery/"&gt; https://leadagilesolutions.com.au/a-mental-model-for-the-phases-of-mastery/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Shu-Ha-Ri is a way of thinking about how you learn a technique and can be divided into three steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step one: &lt;strong&gt;Shu&lt;/strong&gt;. The Sensei (the coach) protects the student by showing how to do it, without leaving room for errors and distortions. The practice must be performed as per the manual.&lt;/li&gt;
&lt;li&gt;Step Two: &lt;strong&gt;Ha&lt;/strong&gt;. The student, independently, applies the practices respecting the standard. Here the student will be wrong, but he will understand even more.&lt;/li&gt;
&lt;li&gt;Step Three: &lt;strong&gt;Re&lt;/strong&gt;. The student applies the practice in complete autonomy, with strong creativity. He has understood the spirit and no longer feels “bound” by the rules. He might even revise the rules themselves.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This approach can be used in many different scopes: music, martial art, coding…&lt;/p&gt;

&lt;p&gt;Usually, when I would like to learn a new programming language I try to follow the Shu-ha-ri approach trying to divide my learning time into &lt;strong&gt;different steps&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read the documentation&lt;/li&gt;
&lt;li&gt;Watch videos &lt;/li&gt;
&lt;li&gt;Follow people on Twitter that shares context about that language&lt;/li&gt;
&lt;li&gt;Find a mentor&lt;/li&gt;
&lt;li&gt;Learning by Doing (kata)&lt;/li&gt;
&lt;li&gt;Contributing to open-source projects&lt;/li&gt;
&lt;li&gt;Teach What You Learn&lt;/li&gt;
&lt;li&gt;Be Curious&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#read-the-documentation"&gt;
  &lt;/a&gt;
  Read the documentation
&lt;/h2&gt;

&lt;p&gt;Sometimes it’s very annoying to read the documentation of something but don’t under evaluate this step because reading the documentation is the first approach to a new language, to understand how it works, how you can start, what you need in terms of software, tools, libraries.&lt;br&gt;
Reading the “Get started” chapter, usually, helps you to enter into a new world and for me, it’s fantastic to see new things and how their work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You don’t have to read all the documentation&lt;/strong&gt;, my advice it’s to read the first parts, to understand how can you start to write something and step by step learn new things.&lt;br&gt;
Sometimes the documentation is not updated or is superficial, feel free to open a pull request or contact the support to improve that part.&lt;br&gt;
This is another good step to participate in something and learn new things.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#watch-videos"&gt;
  &lt;/a&gt;
  Watch videos
&lt;/h2&gt;

&lt;p&gt;Nowadays there are a lot of videos about all things.&lt;br&gt;
So it’s very common to find developers that share videos about the language that you would like to learn.&lt;br&gt;
I usually search for many videos or playlists and watch the first minutes to understand if the level of the video is correct or not for me at that moment.&lt;br&gt;
For example, six months ago I studied for a new language and I found an amazing video by an advocate of that language and I stopped that after 3 minutes because the level was too high for me at that moment.&lt;br&gt;
I marked the video as “&lt;strong&gt;Watch later&lt;/strong&gt;” and after two months I saw all the videos understanding all the things.&lt;br&gt;
It depends on your level and skills to find the best videos for that moment for you but believe me, you have a lot of options on the web nowadays to find the best video for you!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-people-on-twitter-that-shares-context-about-that-language"&gt;
  &lt;/a&gt;
  Follow people on Twitter that shares context about that language
&lt;/h2&gt;

&lt;p&gt;Twitter is a social network where you can find a lot of developers that share powerful context about everything.&lt;br&gt;
My advice is to search for some developers that frequently share interesting content, and follow them.&lt;br&gt;
The next step is to interact with them to ask something to clarify your doubts.&lt;br&gt;
I have found a lot of kind developers that help me a lot and vice versa.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#find-a-mentor"&gt;
  &lt;/a&gt;
  Find a mentor
&lt;/h2&gt;

&lt;p&gt;Finding a mentor sometimes seems difficult and impossible, but I can guarantee that it could be very easy.&lt;br&gt;
When I have to find a mentor, usually I am thinking of my colleagues or ex-colleagues first because I know already their skills.&lt;br&gt;
If no one has the required skills I am searching on Twitter for example or LinkedIn or participating in community meetings.&lt;br&gt;
When you will find your mentor it’s important to share with him your goals to set up your expectations.&lt;br&gt;
With him, you can establish a study plan to archive your goals.&lt;br&gt;
Once you have specified those things you need to schedule a meeting every one or two weeks with your mentor to check your progress.&lt;br&gt;
Don’t forget to ask a lot of things and thoughts in your mind to understand well what you are doing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-by-doing"&gt;
  &lt;/a&gt;
  Learning by Doing
&lt;/h2&gt;

&lt;p&gt;Learning by doing it’s one of my favorite steps because I love to touch directly the code and find problems, things not clear and interesting points of view about this new language.&lt;br&gt;
It’s very important to practice a lot to become more confident with the new language.&lt;br&gt;
I usually create &lt;strong&gt;Kata projects&lt;/strong&gt; to make a lot of practice. &lt;br&gt;
Kata means “way of doing” and they are projects that you create yourself to learn something: new coding language, different approaches, architectures, etc.&lt;br&gt;
You can create a new little project and experiment with what you would like to explore.&lt;br&gt;
There are a lot of Kata projects and you can create your own, this is a list of possible kata:&lt;br&gt;
&lt;a href="https://project-awesome.org/gamontal/awesome-katas"&gt;https://project-awesome.org/gamontal/awesome-katas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example. I did twenty times the Tic-tac-toe game because every time I tried new things and a new way of doing it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V-PwcHx5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AwHIXPRtYgRXowiDj5CMZTg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V-PwcHx5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AwHIXPRtYgRXowiDj5CMZTg.jpeg" alt="" width="500" height="575"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contributing-to-opensource-projects"&gt;
  &lt;/a&gt;
  Contributing to open-source projects
&lt;/h2&gt;

&lt;p&gt;Contributing to open-source projects could be another good solution to learn something about what you are studying, you can always ask questions creating issues or pull requests and you can try to create your first pull request starting from fixing some part of the documentation for example.&lt;br&gt;
Open source projects can generate a lot of value and a new strategy to implement something.&lt;br&gt;
You can write to contributors and maintainers to learn new things every day.&lt;br&gt;
Don’t be scared to try something, open source can open to you a lot of doors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#teach-what-you-learn"&gt;
  &lt;/a&gt;
  Teach What You Learn
&lt;/h2&gt;

&lt;p&gt;After studying something it’s important to &lt;strong&gt;share your knowledge&lt;/strong&gt; with other developers. Try to teach what you have learned through a little talk with a few people or you can find a local meetup to try your new skills.&lt;br&gt;
When you try to explain something to others you can realize if you know the argument or not, you can realize what you can study and see things from another point of view by answering questions during your talk.&lt;br&gt;
Every time that I did a talk, after that, there were a lot of questions and we discussed those, understanding new approaches.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-curious"&gt;
  &lt;/a&gt;
  Be Curious
&lt;/h2&gt;

&lt;p&gt;Every day you can learn something new, there are a lot of resources nowadays.&lt;br&gt;
Now it’s up to you what you want to learn from today.&lt;br&gt;
Be curious about new approaches, technologies, and all the things about your work.&lt;br&gt;
Curiosity helps a developer with learning in two ways. First, it keeps you motivated during learning so you don’t get bored. Second, it highlights new learning opportunities that you would overlook.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Curiosity is what makes great engineers stand out from regular ones.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>learn</category>
      <category>learning</category>
      <category>agile</category>
    </item>
    <item>
      <title>React dev? Why and how you should use Storybook</title>
      <author>Philippe Bernard</author>
      <pubDate>Fri, 05 Nov 2021 07:35:19 +0000</pubDate>
      <link>https://dev.to/philippe/react-dev-why-and-how-you-should-use-storybook-lh7</link>
      <guid>https://dev.to/philippe/react-dev-why-and-how-you-should-use-storybook-lh7</guid>
      <description>&lt;p&gt;There are plenty of great tools in the React ecosystem. But only a few ones that are must-use. Storybook is one of them.&lt;/p&gt;

&lt;p&gt;If you don't know Storybook, I have great news! The reasons to use Storybook are obvious and it's very easy to start with!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-storybook-and-why-you-need-it"&gt;
  &lt;/a&gt;
  What is Storybook and why you need it
&lt;/h2&gt;

&lt;p&gt;You install Storybook, write a story (more on this later), launch Storybook and you get this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cz80Jozq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635763143904/kHT4hVmeN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cz80Jozq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635763143904/kHT4hVmeN.png" alt="Storybook - Example" width="880" height="525"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See the blue rectangle? This is one of your React components. The rest is a UI provided by Storybook.&lt;/p&gt;

&lt;p&gt;Storybook provides a per-component sandbox so you can quickly use your components, one at a time.&lt;/p&gt;

&lt;p&gt;How is this useful?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#direct-access"&gt;
  &lt;/a&gt;
  Direct access
&lt;/h3&gt;

&lt;p&gt;There is always this component you are working on which is buried in your app. You need three clicks to reach it. The first times are okay, but at some point it begins to be boring and disrupt your flow.&lt;/p&gt;

&lt;p&gt;With Storybook, you have a story which renders your component exactly the way you want it. Hot reloading included.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#all-states-at-once"&gt;
  &lt;/a&gt;
  All states at once
&lt;/h3&gt;

&lt;p&gt;How to show a component, but not just with one particular set of properties? With Storybook, this is just natural.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sandbox-for-debugging"&gt;
  &lt;/a&gt;
  Sandbox for debugging
&lt;/h3&gt;

&lt;p&gt;Sometime, you need to isolate a component to debug it and hack around. With Storybook, you can do this in seconds... When you don't have written the story already!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#document-as-you-try-your-component"&gt;
  &lt;/a&gt;
  Document as you try your component
&lt;/h3&gt;

&lt;p&gt;Stories are not write-and-trash code. Once your story is ready, you commit it and make it part of your code base. It becomes a great resource for you and your team.&lt;/p&gt;

&lt;p&gt;There are several others reasons to love Storybook. The ones above are just my favorite, why Storybook is part of 100% of my React projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-storybook"&gt;
  &lt;/a&gt;
  Getting started with Storybook
&lt;/h2&gt;

&lt;p&gt;Quick! Install it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;your/react/project
npx sb init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it's ready to start:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run storybook
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Storybook opens a new tab, showing its welcome screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Li_JH-U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635780037921/O6y4ET7BW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Li_JH-U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635780037921/O6y4ET7BW.png" alt="Storybook welcome screen" width="880" height="525"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;During install, Storybook creates a few demo stories. Click the "Button" demo on the left:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_6C_yHyS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635780165544/mos7e1oiB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_6C_yHyS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635780165544/mos7e1oiB.png" alt="Button demo story" width="880" height="526"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The blue button with rounded corners is a demo component, but it could be one of yours. The Controls tab below lets you quickly play with the component. Cool!&lt;/p&gt;

&lt;p&gt;Look at the existing demo stories in &lt;code&gt;src/stories/Button.stories.jsx&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Example/Button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// More on argTypes: https://storybook.js.org/docs/react/api/argtypes&lt;/span&gt;
  &lt;span class="na"&gt;argTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;control&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Primary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;
&lt;span class="c1"&gt;// More on args: https://storybook.js.org/docs/react/writing-stories/args&lt;/span&gt;
&lt;span class="nx"&gt;Primary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Secondary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;
&lt;span class="nx"&gt;Secondary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Large&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;
&lt;span class="nx"&gt;Large&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;large&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Small&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;
&lt;span class="nx"&gt;Small&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;small&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this file, half of the code is Storybook-related. You can either choose to understand and memorize it, or just copy/paste and adapt it when you start a new file. Fair enough. The other half is about your component. In this demo, &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;primary&lt;/code&gt; and &lt;code&gt;label&lt;/code&gt;, or the fact that you need four stories named &lt;code&gt;Primary&lt;/code&gt;, &lt;code&gt;Secondary&lt;/code&gt;, &lt;code&gt;Large&lt;/code&gt; and &lt;code&gt;Small&lt;/code&gt; are completely related with the demo button, not Storybook itself.&lt;/p&gt;

&lt;p&gt;Create a file somewhere in &lt;code&gt;src&lt;/code&gt;, name it after your component, eg. &lt;code&gt;MyComp.stories.jsx&lt;/code&gt;, populate it with the content of &lt;code&gt;src/stories/Button.stories.jsx&lt;/code&gt; and start telling your own stories!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;There are many worthwhile React tools around. But Storybook is probably the only one I recommend whatever the project - as long as React is involved. I hope I convinced you to give it a try!&lt;/p&gt;

&lt;p&gt;And if you actually write your first story, please  &lt;a href="https://twitter.com/ph_bernard"&gt;let me know&lt;/a&gt; !&lt;/p&gt;

</description>
      <category>react</category>
      <category>storybook</category>
      <category>testing</category>
    </item>
    <item>
      <title>Introduction to Tree data structures</title>
      <author>Parag</author>
      <pubDate>Fri, 05 Nov 2021 07:26:17 +0000</pubDate>
      <link>https://dev.to/parag18081994/introduction-to-tree-data-structures-1leb</link>
      <guid>https://dev.to/parag18081994/introduction-to-tree-data-structures-1leb</guid>
      <description>&lt;p&gt;In the realm of data structures, Linked list, array can be described as a linear data structure unlike trees which are non-linear, hierarchical data structures.&lt;br&gt;
Read more-&lt;br&gt;
&lt;a href="https://paragnaik2019.medium.com/introduction-to-tree-data-structures-31c7976979a5"&gt;https://paragnaik2019.medium.com/introduction-to-tree-data-structures-31c7976979a5&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>What is Machine Learning - Easy explanation in 5 minutes</title>
      <author>Tom Morris</author>
      <pubDate>Fri, 05 Nov 2021 07:23:23 +0000</pubDate>
      <link>https://dev.to/wifiguard/what-is-machine-learning-easy-explanation-in-5-minutes-384e</link>
      <guid>https://dev.to/wifiguard/what-is-machine-learning-easy-explanation-in-5-minutes-384e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-actually-is-machine-learning"&gt;
  &lt;/a&gt;
  What actually is machine learning?
&lt;/h2&gt;

&lt;p&gt;Machine learning is an application of artificial intelligence (AI). In this way, we give systems the ability to automatically learn from experience. The background to this learning process is that these systems improve automatically without explicitly programming them.&lt;/p&gt;

&lt;p&gt;Machine learning focuses on developing programs that access data, process it and then use it for themselves to learn.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-ml-applications-learn-by-themselves"&gt;
  &lt;/a&gt;
  How can ML applications learn by themselves?
&lt;/h2&gt;

&lt;p&gt;The learning process starts from observations or data. You can give instructions to an ML application to look for patterns in provided data. This allows the application to make better decisions in the future when we provide new data, for example.&lt;/p&gt;

&lt;p&gt;The main goal of a machine learning application is to make the application mature enough that it learns automatically without the software developer taking any further action on the application.&lt;/p&gt;

&lt;p&gt;At this point, you should have a rough overview of what machine learning is and what your main goal is pursuing with it. &lt;/p&gt;

&lt;p&gt;We have seen ML being used in various sectors, such as Legal, Healthcare, Agriculture, Transportation, Blockchain, Gambling, Insurance and many more. The list is long and we are impressed how &lt;a href="https://online-kaszino.net"&gt;online-kaszino&lt;/a&gt; and &lt;a href="https://www.sap.com/"&gt;SAP&lt;/a&gt; have successfully implemented machine learning to their products. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#popular-machine-learning-methods"&gt;
  &lt;/a&gt;
  Popular machine learning methods
&lt;/h2&gt;

&lt;p&gt;Let's take a look at some machine learning methods below.&lt;/p&gt;

&lt;p&gt;ML algorithms can be broadly classified into two categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Supervised learning&lt;/li&gt;
&lt;li&gt;Unsupervised learning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These forms of learning can be explained as follows.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-algorithms-for-supervised-learning"&gt;
  &lt;/a&gt;
  1. Algorithms for supervised learning
&lt;/h3&gt;

&lt;p&gt;Supervised learning algorithms can apply what has been learned in the past to new data. For this, they mainly use bracked examples to make future predictions.&lt;/p&gt;

&lt;p&gt;Based on the analysis of a known data set from the model's training process, the learning algorithm creates a derived function to make predictions about the output values.&lt;/p&gt;

&lt;p&gt;The system is able to deliver goals for each new entry after sufficient training. The learning algorithm can also compare its output to the correct, intended output and find errors to modify the model accordingly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-algorithms-for-unsupervised-learning"&gt;
  &lt;/a&gt;
  2. Algorithms for unsupervised learning
&lt;/h3&gt;

&lt;p&gt;In contrast, unsupervised learning algorithms are used when the information used for training is neither classified nor labeled.&lt;/p&gt;

&lt;p&gt;Unsupervised learning explores how systems can derive a function from untagged (non-labeled) data to describe a hidden pattern. The system doesn't find the right output, but it does research the data and can draw conclusions from data sets to describe hidden structures from untagged data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-algorithms-for-semisupervised-learning"&gt;
  &lt;/a&gt;
  3. Algorithms for semi-supervised learning
&lt;/h3&gt;

&lt;p&gt;Semi-supervised algorithms for machine learning are a hybrid of supervised and unsupervised learning. The training data contains both bracked and un-abelled data. In practice, you typically take a small amount of labeled data and a large amount of unlabeled data.&lt;/p&gt;

&lt;p&gt;Systems that use this method are able to significantly improve learning accuracy. Semi-supervised learning is typically used when the labeled data obtained requires qualified and relevant resources to train or learn from it.&lt;/p&gt;

&lt;p&gt;Otherwise, obtaining unmarked data usually does not require additional resources.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-reinforcement-learning"&gt;
  &lt;/a&gt;
  4. Reinforcement learning
&lt;/h3&gt;

&lt;p&gt;Reinforcement machine learning algorithms are a learning method that interacts with their environment. To do so, she carries out actions to detect mistakes or rewards. The trial and error principle as well as delayed reward are the most important features of reinforcement learning.&lt;/p&gt;

&lt;p&gt;This method allows applications and developers to automatically determine ideal behavior within a specific context to maximize performance. For the developer to learn which action is best, simple reward feedback called a reinforcement signal is required.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-what-is-machine-learning"&gt;
  &lt;/a&gt;
  Conclusion: “What is machine learning?”
&lt;/h2&gt;

&lt;p&gt;Machine learning enables the analysis of large amounts of data (big data). While it generally delivers faster and more accurate results to identify profitable opportunities or dangerous risks, it can take additional time and resources to train the models properly.&lt;/p&gt;

&lt;p&gt;A combination of machine learning combined with other AI competencies will make big data processing even more effective in the future.&lt;/p&gt;

&lt;p&gt;References &amp;amp; examples: &lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Machine_learning"&gt;Wikipedia&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.forbes.com/sites/bernardmarr/2018/04/30/27-incredible-examples-of-ai-and-machine-learning-in-practice/?sh=6a0427257502"&gt;Forbes&lt;/a&gt;&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Samba Temel Kavramlar</title>
      <author>Salih Su</author>
      <pubDate>Fri, 05 Nov 2021 06:59:38 +0000</pubDate>
      <link>https://dev.to/aciklab/samba-temel-kavramlar-34m0</link>
      <guid>https://dev.to/aciklab/samba-temel-kavramlar-34m0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#cifs-dosya-payla%C5%9F%C4%B1mlar%C4%B1-olu%C5%9Fturun-ve-yap%C4%B1land%C4%B1r%C4%B1n"&gt;
  &lt;/a&gt;
  CIFS dosya paylaşımları oluşturun ve yapılandırın
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#cifs-common-internet-file-system"&gt;
  &lt;/a&gt;
  CIFS (Common Internet File System)
&lt;/h3&gt;

&lt;p&gt;CIFS, bilgisayar kullanıcılarının kurumsal intranetler ve İnternet üzerinden dosya paylaşmalarının standart yoludur.  Kullanıcılara Linux'ler ve Windows tabanlı istemciler arasında sorunsuz dosya ve yazıcı servislerinin birlikte çalışabilirliğini sağlar. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cifs-kullanarak-linuxta-windows-share-nas%C4%B1l-olu%C5%9Fturulur"&gt;
  &lt;/a&gt;
  CIFS Kullanarak Linux'ta Windows Share Nasıl Oluşturulur
&lt;/h4&gt;

&lt;p&gt;Windows paylaşımlarının Linux sistemlerinde nasıl oluşturulacağını açıklayacağım. &lt;/p&gt;

&lt;p&gt;1.CIFS Yardımcı Program Paketlerini Yükleme&lt;/p&gt;

&lt;p&gt;Linux sistemine bir Windows paylaşımı eklemek için önce CIFS yardımcı program paketlerini yüklememiz gerekir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt update 
sudo apt install cifs-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.CIFS Windows Paylaşımını Oluşturma&lt;/p&gt;

&lt;p&gt;Windows paylaşımının bağlanması, normal dosya sistemlerinin bağlanmasına benzer.&lt;/p&gt;

&lt;p&gt;İlk olarak, Windows paylaşımı için bağlama noktası görevi görecek bir dizin oluşturuyoruz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo mkdir /win_paylasim
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Paylaşımı bağlamak için aşağıdaki komutu root veya sudo ayrıcalıklarına sahip kullanıcı olarak çalıştırın:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo mount -t cifs -o username=&amp;lt;kullanici&amp;gt;,domain=&amp;lt;sunucu&amp;gt; //&amp;lt;win-share-ip&amp;gt;/&amp;lt;paylasim-klasörü&amp;gt; /win_paylasim/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Windows paylaşımının başarıyla bağlandığını doğrulamak için &lt;strong&gt;df -h&lt;/strong&gt; komutunu kullanıyoruz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Dosyasistemi          Boy  Dolu   Boş Kull% Bağlanılan yer
udev                 979M     0  979M    0% /dev
tmpfs                200M   15M  186M    8% /run
/dev/sda1             31G  2,5G   27G    9% /
tmpfs                998M   16K  998M    1% /dev/shm
tmpfs                5,0M     0  5,0M    0% /run/lock
tmpfs                998M     0  998M    0% /sys/fs/cgroup
tmpfs                200M     0  200M    0% /run/user/1000
//10.154.127.247/ss   32G   19G   13G   60% /win_paylasim**
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Paylaşım bağlandıktan sonra, bağlama noktası, bağlanan dosya sisteminin kök dizini olur. Artık Paylaşılan dosyalarla yerel dosyalarmış gibi çalışabiliriz.&lt;/p&gt;

&lt;p&gt;3.Otomatik Mount Etme&lt;/p&gt;

&lt;p&gt;Paylaşım mount komutuyla manuel olarak bağlandığında, yeniden başlatmanın ardından devam etmez. Sistem başlangıcında nereye ve hangi dosya sisteminin bağlanacağını tanımlayan bir giriş listesi &lt;strong&gt;/etc/fstab&lt;/strong&gt; dosyasında bulunur.&lt;/p&gt;

&lt;p&gt;Linux sisteminiz başladığında bir Windows paylaşımını otomatik olarak bağlamak için, &lt;strong&gt;/etc/fstab&lt;/strong&gt; dosyasında bağlamayı tanımlayalım.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/etc/fstab&lt;/strong&gt; dosyasını metin düzenleyiciyle açıyoruz:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo nano /etc/fstab
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dosyaya aşağıdaki satırı ekleyin:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# &amp;lt;file system&amp;gt;   &amp;lt;dir&amp;gt;   &amp;lt;type&amp;gt; &amp;lt;options&amp;gt;  &amp;lt;dump&amp;gt;  &amp;lt;pass&amp;gt;
//win-share-ip/paylasim-klasörü  /win_paylasim  cifs  credentials=/etc/win-credentials,file_mode=0755,dir_mode=0755   0   0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Paylaşımı bağlamak için aşağıdaki komutu çalıştıralım:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo mount /win_paylasim
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;mount&lt;/em&gt; komutu, &lt;strong&gt;/etc/fstab&lt;/strong&gt; dosyasının içeriğini okuyacak ve paylaşımı bağlayacaktır. Sistemi yeniden başlattığınızda, Windows paylaşımı otomatik olarak yüklenecektir.&lt;/p&gt;

&lt;p&gt;4.Windows Paylaşımını Kaldırma&lt;/p&gt;

&lt;p&gt;&lt;em&gt;umount&lt;/em&gt; komutu, bağlı dosya sistemini dizin ağacından bağını kaldırır.&lt;/p&gt;

&lt;p&gt;Bağlı bir Windows paylaşımını ayırmak için, &lt;em&gt;umount&lt;/em&gt; komutunu ve ardından da bağlı olduğu dizini ya da uzak paylaşımını yazıyoruz:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo umount /win_paylasim
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CIFS bağlamasının fstab dosyasında bir girişi varsa, bu girişleri kaldırıyoruz.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#kerberos"&gt;
  &lt;/a&gt;
  Kerberos
&lt;/h4&gt;

&lt;p&gt;Protokol, adını Yunan mitlerindeki efsanevi üç başlı köpek Kerberos'tan (Cerberus olarak da bilinir), yeraltı dünyasının girişindeki köpek koruyucusundan alır. Kerberos'un üç başı istemciyi, sunucuyu ve Anahtar Dağıtım Merkezi'ni (KDC) temsil eder. Kerberos, client ve server arasında; kdc (key distribution center) dan yardım alarak güvenli bir iletişimin  kurulmasını sağlar.&lt;/p&gt;

&lt;p&gt;Windows 2000 ve sonrası sürümler kimlik doğrulama metodu olarak Kerberosu kullanmaktadır. Kerberos uygulamaları, Apple OS, FreeBSD, UNIX ve Linux gibi diğer işletim sistemleri için de mevcuttur.&lt;/p&gt;

&lt;p&gt;Kerberos'u kullanan kullanıcılar, makineler ve hizmetler, kimlik doğrulama ve bilet verme işlevlerini sağlayan tek bir işlem olarak çalışan Anahtar Dağıtım Merkezine(KDC) bağlıdır. KDC biletleri, tüm taraflara kimlik doğrulaması sunarak düğümlerin kimliklerini güvenli bir şekilde doğrulamasını sağlar. Kerberos kimlik doğrulama işlemi, ağda dolaşan paketlerin okunmasını veya değiştirilmesini engelleyen ve aynı zamanda mesajları gizlice dinleme, oynatma veya yeniden oynatma saldırılarına karşı koruyan geleneksel bir paylaşılan gizli şifreleme kullanır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kerberos Protokol Akışı&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kerberos iş akışında yer alan başlıca varlıklar şunlardır:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Client&lt;/strong&gt;. İstemci, kullanıcı adına hareket eder ve bir hizmet talebi için iletişimi başlatır.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Server&lt;/strong&gt;. Sunucu, kullanıcının erişmek istediği hizmeti barındırır.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Key Distribution Center (KDC)&lt;/strong&gt;. Kerberos ortamında, kimlik doğrulama sunucusu mantıksal olarak üç bölüme ayrılmıştır: Bir veritabanı (db), Kimlik Doğrulama Sunucusu (AS) ve Bilet Verme Sunucusu (TGS). Bu üç bölüm, sırayla, Anahtar Dağıtım Merkezi adı verilen tek bir sunucuda bulunur.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Authentication Server (AS)&lt;/strong&gt;. Kimlik doğrulama hizmeti, istenen istemci kimlik doğrulamasını gerçekleştirir. Kimlik doğrulama başarılı olursa, AS istemciye TGS adlı bir bilet verir. Bu bilet, diğer sunuculara istemcinin kimliğinin doğrulandığını garanti eder.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ticket Granting Server (TGS)&lt;/strong&gt;. TGS, hizmet biletlerini hizmet olarak yayınlayan bir uygulama sunucusudur.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Protokol akışı aşağıdaki adımlardan oluşur:&lt;/p&gt;

&lt;p&gt;İlk olarak, Kerberos akışında yer alan üç önemli gizli anahtar vardır. İstemci/kullanıcı, TGS ve Kimlik doğrulama sunucu ile paylaşılan sunucu için benzersiz gizli anahtarlar vardır.&lt;/p&gt;

&lt;p&gt;1.İstemci kimlik doğrulama ister&lt;/p&gt;

&lt;p&gt;Kullanıcı, kimlik doğrulama sunucusundan bir Bilet Verme Bileti (TGT) ister. Bu istek, müşteri kimliğini içerir.&lt;/p&gt;

&lt;p&gt;2.Kimlik doğrulama sunucu istemcinin kimlik bilgilerini doğrular&lt;/p&gt;

&lt;p&gt;Kimlik doğrulama sunucusu, kullanıcı ve TGS'nin kullanılabilirliği için veritabanını kontrol eder. Her iki değeri de bulursa, kullanıcının parola karmasını kullanarak bir istemci/kullanıcı gizli anahtarı oluşturur.&lt;/p&gt;

&lt;p&gt;3.TGT'yi istemciye gönderir&lt;/p&gt;

&lt;p&gt;Kimlik doğrulama sunucusu daha sonra TGS gizli anahtarını hesaplar ve istemci/kullanıcı gizli anahtarı tarafından şifrelenmiş bir oturum anahtarı (SK1) oluşturur. Kimlik doğrulama sunucusu daha sonra istemci kimliğini, istemci ağ adresini, zaman damgasını, yaşam süresini ve SK1'i içeren bir TGT oluşturur. TGS gizli anahtarı daha sonra bileti şifreler ve istemciye sunar.&lt;/p&gt;

&lt;p&gt;4.İstemci, erişim istemek için TGT'yi kullanır&lt;/p&gt;

&lt;p&gt;İstemci mesajın şifresini çözer. Daha sonra çıkarılan TGT'yi ve oluşturulan kimlik doğrulayıcıyı TGS'ye göndererek hizmeti sunan sunucudan bir bilet talep eder.&lt;/p&gt;

&lt;p&gt;5.TGS, dosya sunucusu için bir bilet oluşturur&lt;/p&gt;

&lt;p&gt;TGS, kimlik doğrulayıcının şifresini çözer ve istemci kimliği ve istemci ağ adresiyle eşleşip eşleşmediğini kontrol eder. TGS, TGT'nin süresinin dolmadığından emin olmak için çıkarılan zaman damgasını da kullanır. İşlem tüm kontrolleri başarılı bir şekilde yürütürse, KDC, istemci ile hedef sunucu arasında paylaşılan bir hizmet oturum anahtarı (SK2) oluşturur.&lt;/p&gt;

&lt;p&gt;KDC, istemci kimliği, istemci ağ adresi, zaman damgası ve SK2'yi içeren bir hizmet bileti oluşturur. Bu bilet daha sonra sunucunun db'den alınan gizli anahtarıyla şifrelenir.&lt;/p&gt;

&lt;p&gt;6.TGS, SK1 ile şifrelenmiş olan hizmet biletini ve SK2'yi içeren mesajı istemciye iletir.&lt;/p&gt;

&lt;p&gt;7.İstemci, kimlik doğrulaması için dosya biletini kullanır&lt;/p&gt;

&lt;p&gt;İstemci, SK1'i kullanarak mesajın şifresini çözer ve SK2'yi çıkarır. Bu işlem, istemci ağ adresini, istemci kimliğini ve zaman damgasını içeren, SK2 ile şifrelenmiş yeni bir kimlik doğrulayıcı oluşturur ve hizmet biletini servis sunucuya gönderir.&lt;/p&gt;

&lt;p&gt;8.Hedef sunucu şifre çözme ve kimlik doğrulamasını alır&lt;/p&gt;

&lt;p&gt;Hedef sunucu, hizmet biletinin şifresini çözmek ve SK2'yi çıkarmak için sunucunun gizli anahtarını kullanır. Sunucu, kimlik doğrulayıcının şifresini çözmek için SK2'yi kullanır ve kimlik doğrulayıcıdan gelen istemci kimliği ve istemci ağ adresinin ve hizmet biletinin eşleştiğinden emin olmak için kontroller gerçekleştirir. Sunucu ayrıca hizmet biletinin süresinin dolup dolmadığını kontrol eder.&lt;/p&gt;

&lt;p&gt;Kontroller karşılandığında, hedef sunucu istemciye, istemcinin ve sunucunun birbirini doğruladığını doğrulayan bir mesaj gönderir. Kullanıcı artık güvenli bir oturuma girebilir.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uhv7Now6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxws8tdk54x4kml37qc2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uhv7Now6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxws8tdk54x4kml37qc2.png" alt="Image description" width="600" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#kerberos-kimlik-do%C4%9Frulamas%C4%B1yla-bir-windows-payla%C5%9F%C4%B1m%C4%B1-ba%C4%9Flay%C4%B1n"&gt;
  &lt;/a&gt;
  Kerberos kimlik doğrulamasıyla bir Windows paylaşımı bağlayın
&lt;/h5&gt;

&lt;p&gt;Öncelikle gerekli paketleri kuruyoruz&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    apt-get install krb5-user krb5-config cifs-utils keyutils
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Paketleri kurduktan sonra nano ile /etc/krb5.conf 'un default_realm alanına domainimizi yazıyoruz&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[libdefaults]
default_realm = DOMAIN.LAB
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Daha sonra sunucudan bir bilet almak için aşağıdaki komutu çalıştırıyoruz. Kullanıcı adı user@DOMAIN biçiminde olmalıdır. Domain adı her zaman BÜYÜK HARFLER olmalıdır. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;FQDN(Fully Qualified Domain Name - Tam Nitelikli Alan Adı) denen bu yapıda her alan adı maksimum  63 karakterden oluşabilir ve toplamda da 255 karakteri aşamaz. Alan adı düğümlerin her biri DNS sunucusunda birer dizindir ve en alttan en üste ilerlenecek şekilde birleştirileren okunur.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kinit yourUserName@SUBDOMAIN.DOMAIN.LOCAL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Şimdi sunucudan bir kerberos bileti almış olmalıyız, &lt;strong&gt;&lt;em&gt;klist&lt;/em&gt;&lt;/strong&gt; komutu ile kontrol ediyoruz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;test@SalihBilgisayar:~$ klist
Ticket cache: FILE:/tmp/krb5cc_1000
Default principal: administrator@SALIH.LAB

Valid starting       Expires              Service principal
21-10-2021 07:53:51  21-10-2021 17:53:51  krbtgt/SALIH.LAB@SALIH.LAB
    renew until 22-10-2021 07:53:46
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Biletimizin oluştuğunu görebiliyoruz. Bu bilet ile paylaşıma iznimiz varsa, paylaşımı aşağıdaki komut ile mount edebiliriz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;smbclient \\\\subdomain.domain.local\\paylasim-klasörü -k
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Domain adı, aldığımız bilet adı ile aynı olmalıdır. Bileti aldığımız domain adından farklı bir ad girdiğimizde aşağıdaki gibi bir hata verecektir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gensec_spnego_client_negTokenInit_step: gse_krb5: creating NEG_TOKEN_INIT for cifs/salihpc.salih.lab failed (next[(null)]): NT_STATUS_NO_LOGON_SERVERS
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Domain adımız, aldığımız bilet ile aynı veya herhangi bir hata yoksa SMB istemcisi &lt;strong&gt;(smb: \&amp;gt;)&lt;/strong&gt; çalışır ve kaynaklara erişebiliriz. Sonrasında &lt;strong&gt;&lt;em&gt;klist&lt;/em&gt;&lt;/strong&gt; ile biletimizi tekrar kontrol ettiğimizde cifs bağlantısının biletimize eklendiğini görebiliriz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;test@SalihBilgisayar:~$ klist
Ticket cache: FILE:/tmp/krb5cc_1000
Default principal: administrator@SALIH.LAB

Valid starting       Expires              Service principal
21-10-2021 08:27:02  21-10-2021 18:27:02  krbtgt/SALIH.LAB@SALIH.LAB
    renew until 22-10-2021 08:26:59
21-10-2021 08:27:03  21-10-2021 18:27:02  cifs/salihpc.salih.lab@SALIH.LAB
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#smb"&gt;
  &lt;/a&gt;
  SMB
&lt;/h3&gt;

&lt;p&gt;Sunucu İleti Bloğu (SMB), günümüzün en popüler dosya sunucusu protokollerinden biridir. Düzgün bir şekilde uygulandığında SMB, güvenli, verimli ve ölçeklenebilir ağ kaynağı ve dosya paylaşımı sağlar.&lt;/p&gt;

&lt;p&gt;SMB, bir istemci-sunucu modeli kullanan bir ağ dosyası ve kaynak paylaşım protokolüdür. Ağdaki PC'ler gibi SMB istemcileri, dosyalar ve dizinler gibi kaynaklara erişmek veya ağ üzerinden yazdırma gibi görevleri gerçekleştirmek için SMB sunucularına bağlanır.&lt;/p&gt;

&lt;p&gt;SMB Client&lt;/p&gt;

&lt;p&gt;Bir SMB istemcisi, bir SMB sunucusundaki kaynaklara erişen cihazdır. Örneğin, bir şirket ağı içinde, paylaşılan bir sürücüye erişen kullanıcı bilgisayarları SMB istemcileridir.&lt;/p&gt;

&lt;p&gt;İstemciyi çalıştırmak için aşağıdaki komutu çalıştırıyoruz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;smbclient \\\\&amp;lt;win-share-ip&amp;gt;\\&amp;lt;paylasim-klasörü&amp;gt; -U &amp;lt;kullanıcı&amp;gt;%&amp;lt;şifre&amp;gt; -W &amp;lt;sunucu&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;İstemci çalıştığında, kullanıcıya &lt;strong&gt;smb: \&amp;gt;&lt;/strong&gt; diye bir bilgi istemi sunulur. &lt;em&gt;ls&lt;/em&gt; komutuyla paylaşılan klasör içeriğini görüntüleyebiliriz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;smb: \&amp;gt; ls 
  .                                   D        0  Fri Oct 22 07:53:42 2021
  ..                                  D        0  Fri Oct 22 07:53:42 2021
  file1                               D        0  Tue Oct 19 11:19:22 2021
  file2                               D        0  Tue Oct 19 10:01:25 2021
  New Text Document.txt               A        0  Fri Oct 22 07:53:42 2021
  newfile                             D        0  Wed Oct 20 16:13:50 2021

        8260095 blocks of size 4096. 3329607 blocks available
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sunucuda çalışan tüm komutlar aslında sunucuya bir istek göndererek gerçekleştirilir. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sık Kullanılan Komutlar&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parametre&lt;/th&gt;
&lt;th&gt;Açıklama&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cd &lt;em&gt;dizin-adı&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;Dizin adı belirtilirse, sunucudaki geçerli çalışma dizini belirtilen dizine gider.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ls &lt;em&gt;mask&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;Sunucudaki geçerli çalışma dizinindeki maskeyle eşleşen dosyaların bir listesini sunucudan alır ve görüntüler.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mkdir &lt;em&gt;dizin-adı&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;Belirtilen adla sunucuda yeni bir dizin oluşturur.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;more &lt;em&gt;dosya adı&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;Sunucudaki dosyayı alır ve içeriğiyle birlikte görüntüler.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;get &lt;em&gt;sunucu-dosya-adı&lt;/em&gt; &lt;em&gt;[yerel-dosya-adı]&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;Sunucu-dosya-adı adlı dosyayı sunucudan istemciyi çalıştıran makineye kopyalar. Belirtilmişse, yerel kopyayı yerel-dosya-adı olarak adlandırır.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;put &lt;em&gt;yerel-dosya-adı&lt;/em&gt; &lt;em&gt;[sunucu-dosya-adı]&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;İstemciyi çalıştıran makineden yerel dosyayı sunucuya kopyalar.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lcd &lt;em&gt;[dizin-adı]&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;Dizin adı belirtilirse, yerel makinedeki geçerli çalışma dizini belirtilen dizinle değiştirilir.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mget &lt;em&gt;mask&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;Maskeyle eşleşen tüm dosyaları sunucudan istemciyi çalıştıran makineye kopyalar.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mput &lt;em&gt;mask&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;Yerel makinedeki geçerli çalışma dizinindeki maskeyle eşleşen tüm dosyaları sunucudaki geçerli çalışma dizinine kopyalar.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;print &lt;em&gt;dosya-adı&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;Belirtilen dosyayı, sunucudaki yazdırılabilir bir hizmet aracılığıyla yerel makineden yazdırır.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rm &lt;em&gt;mask&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;Sunucudaki geçerli çalışma dizininden, maskeyle eşleşen tüm dosyaları kaldırır.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rmdir &lt;em&gt;dizin-adı&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;Belirtilen dizini sunucudan kaldırır.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;del &lt;em&gt;mask&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;İstemci, sunucudaki geçerli çalışma dizininden maskeyle eşleşen tüm dosyaları siler.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;exit&lt;/td&gt;
&lt;td&gt;Sunucu ile bağlantıyı sonlandırır ve programdan çıkar.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#samba"&gt;
  &lt;/a&gt;
  SAMBA
&lt;/h3&gt;

&lt;p&gt;Samba, birlikte kullanıldığında bir Linux sunucusunun dosya sunumu, kimlik doğrulama/yetkilendirme, ad çözümleme ve yazdırma hizmetleri gibi ağ eylemlerini gerçekleştirmesine izin veren farklı uygulamalar topluluğudur.&lt;/p&gt;

&lt;p&gt;CIFS gibi, Samba da Windows istemcilerinin bir Samba sunucusundaki Linux dizinlerine, yazıcılarına ve dosyalarına şeffaf bir şekilde erişmesine izin veren SMB protokolünü uygular.&lt;/p&gt;

&lt;p&gt;En önemlisi, Samba, bir Linux sunucusunun &lt;strong&gt;Etki Alanı Denetleyicisi&lt;/strong&gt; olarak hareket etmesine izin verir. Bunu yaparak, Windows etki alanındaki kullanıcı kimlik bilgilerinin yeniden oluşturulması ve ardından Linux sunucusunda manuel olarak eşitlenmesi gerekmeden kullanılabilir. Bu Etki Alanı Denetçisine Windows, Mac ve GNU/Linux sistemler aynı yapılandırma ile erişebilmektedir.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#samba-payla%C5%9F%C4%B1m-eri%C5%9Fimi-yap%C4%B1land%C4%B1rma-parametrelerini-y%C3%B6netin"&gt;
  &lt;/a&gt;
  Samba paylaşım erişimi yapılandırma parametrelerini yönetin
&lt;/h2&gt;

&lt;p&gt;Dosya  bölümlerden ve parametrelerden oluşur. Bir bölüm, köşeli parantez içindeki bölümün adıyla başlar ve bir sonraki bölüm başlayana kadar devam eder. Bölümler, formun parametrelerini içerir:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[etc/samba/smb.conf]&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[paylasim]
path=/home/kullanici_adiniz/paylasim
comment=paylasim dizini
valid users=@admins
invalid users=@kullanici1 @kullanici2
browsable=yes
writeable=yes
read only=no
guest ok=yes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dosya satır tabanlıdır, yeni satırla sonlandırılan her satır bir yorumu, bölüm adını veya parametreyi temsil eder. Parametrelerde eşittir girişini izleyen değerlerin tümü ya bir dizedir ya da evet/hayır veya doğru/yanlış olarak verilebilen bir booleandır.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parametre&lt;/th&gt;
&lt;th&gt;Açıklama&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;Hizmet kullanıcısına erişim izni verilecek bir dizini belirtir.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;comment&lt;/td&gt;
&lt;td&gt;Yeni paylaşımla ilişkilendirilecek yorum dizesi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;valid users&lt;/td&gt;
&lt;td&gt;Bu hizmete giriş yapmasına izin verilen kullanıcıların listesidir.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;invalid users&lt;/td&gt;
&lt;td&gt;Bu hizmete giriş yapmasına izin verilmemesi gereken kullanıcıların listesidir.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;browsable&lt;/td&gt;
&lt;td&gt;Bu paylaşımın bir ağ görünümündeki kullanılabilir paylaşımlar listesinde ve göz atma listesinde görünüp görünmeyeceğini kontrol eder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;writeable&lt;/td&gt;
&lt;td&gt;Yazma yetkisini kontrol eder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;read only&lt;/td&gt;
&lt;td&gt;Sadece okuma yetkisini kontrol eder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;guest ok&lt;/td&gt;
&lt;td&gt;Misafir olarak belirlenen kullanıcılara erişim yetkisi verir.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>cifs</category>
      <category>kerberos</category>
      <category>smb</category>
      <category>samba</category>
    </item>
    <item>
      <title>Typescript tutorial for Javascript developers</title>
      <author>Sergiy</author>
      <pubDate>Fri, 05 Nov 2021 06:55:11 +0000</pubDate>
      <link>https://dev.to/sergchr/typescript-tutorial-for-javascript-developers-man</link>
      <guid>https://dev.to/sergchr/typescript-tutorial-for-javascript-developers-man</guid>
      <description>&lt;p&gt;I wrote an &lt;a href="https://metacognitive.me/reasons-to-use-typescript/"&gt;article&lt;/a&gt; on why to use Typescript if you're still in doubt about whether to use it in your projects. In short, Typescript allows you to write maintainable code. Javascript works well for prototyping but becomes frustrating when you return to a project again. Suddenly, you see blocks of code where you can't understand what kind of data passes there.&lt;/p&gt;

&lt;p&gt;In this article, I want to introduce you to Typescript while playing with code. Thus, you see it in action and don't overflow with an unnecessary theory. I recommend playing with the code you'll meet here in &lt;a href="https://www.typescriptlang.org/play"&gt;Typescript Playground&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Imagine you want to count items, which have the field &lt;code&gt;meta&lt;/code&gt; that contains the field &lt;code&gt;countable&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;, in an array. If an item doesn't have &lt;code&gt;meta.countable&lt;/code&gt;, we don't count it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getAmount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;countable&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Typescript array type with anything in there&lt;/em&gt;&lt;br&gt;
 Why are you using &lt;code&gt;any&lt;/code&gt;? It's not OK! It's for an example. Don't use &lt;code&gt;any&lt;/code&gt; in such cases. Read more about it later in the article.&lt;/p&gt;

&lt;p&gt;We see the &lt;code&gt;any&lt;/code&gt; keyword near the &lt;code&gt;arr&lt;/code&gt; argument, that's new to us! I guess you already know what it is. This way we tell TS that &lt;code&gt;arr&lt;/code&gt; is of &lt;code&gt;any[]&lt;/code&gt; type. It literally means any Javascript type in an array. I.e. &lt;code&gt;arr&lt;/code&gt; is an array and every item of it is of type &lt;code&gt;any&lt;/code&gt;. It safe you from writing such code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Argument of type 'string' is not assignable to parameter of type 'any[]'&lt;/span&gt;
&lt;span class="nx"&gt;getAmount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Argument of type 'number' is not assignable to parameter of type 'any[]'&lt;/span&gt;
&lt;span class="nx"&gt;getAmount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The compiler ensures you should pass exactly what you've pointed out as an &lt;code&gt;arr&lt;/code&gt; argument for the &lt;code&gt;getAmount&lt;/code&gt; function. What if you need to pass several types, for example, an array and a string? And if &lt;code&gt;arr&lt;/code&gt; is a string, then return 0. A weird case, but imagine you work on a legacy system that uses this function in many places, so somewhen you may get a string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getAmount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;countable&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;getAmount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;55&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// now it's possible to pass a string&lt;/span&gt;
&lt;span class="nx"&gt;getAmount&lt;/span&gt;&lt;span class="p"&gt;([{&lt;/span&gt; &lt;span class="na"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;countable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;|&lt;/code&gt; means "or". Thus, &lt;code&gt;arr&lt;/code&gt; can be an array of anything(&lt;code&gt;any[]&lt;/code&gt;) or a string. Refer to &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html"&gt;this page&lt;/a&gt; for more everyday types in Typescript.&lt;/p&gt;

&lt;p&gt;The compiler is smart enough to even infer a return type of &lt;code&gt;getAmount&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// function getAmount(arr: any[] | string): number&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getAmount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// because we always return a number&lt;/span&gt;
    &lt;span class="c1"&gt;// 0 or arr.length(filtered&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Type inferring for a function that always returns a number&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Sometimes, Typescript can't infer a type because of ambiguity. Usually, it's a &lt;a href="https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/explicit-function-return-type.md"&gt;good practice&lt;/a&gt; to explicitly indicate a return type of a function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getAmount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Syntax: don't forget this&lt;/span&gt;
&lt;span class="c1"&gt;// |&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* function body */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// |&lt;/span&gt;
&lt;span class="c1"&gt;// a type this function returns&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you know how to write functions and point arguments and return types! In most cases, that's what you need. All other code is still Javascript. With more types. However, let's dive deeper and highlight more complicated cases and what things to avoid.&lt;/p&gt;

&lt;p&gt;Someone may pass anything in an array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getAmount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;[]):&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;getAmount&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{}]);&lt;/span&gt; &lt;span class="c1"&gt;// no error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's not what we expect. TS works well in this case, we specified &lt;code&gt;any[]&lt;/code&gt;, so what problems? &lt;strong&gt;Don't use &lt;code&gt;any&lt;/code&gt; if there's no real need for it&lt;/strong&gt;. It's easier to pass &lt;code&gt;any&lt;/code&gt; than describing an advanced type, but that's what Typescript is for. Don't shoot yourself in a foot in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#typescript-objects"&gt;
  &lt;/a&gt;
  Typescript objects
&lt;/h2&gt;

&lt;p&gt;We may want to replace &lt;code&gt;any[]&lt;/code&gt; with &lt;code&gt;object[]&lt;/code&gt; and it would work as we pass objects there, right? Correct, but an &lt;code&gt;null&lt;/code&gt; and a function are also objects. It's not what we expect either. &lt;strong&gt;Don't use &lt;code&gt;object&lt;/code&gt;, try to narrow types&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;countable&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getAmount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;countable&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;getAmount&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;countable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it works as expected. We specified a separate &lt;code&gt;interface&lt;/code&gt; for a possible array element. Interfaces and types allow you to create your own types using basic Typescript types. Some examples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// is also called "type alias"&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// interface are "object" types and allow us&lt;/span&gt;
&lt;span class="c1"&gt;// to specify an object immediately&lt;/span&gt;
&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;isOkay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="c1"&gt;// it's the same as using a type alias&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;isOkay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#types-and-interfaces"&gt;
  &lt;/a&gt;
  Types and interfaces
&lt;/h2&gt;

&lt;p&gt;Let's start implementing a booking tickets service to dive deeper into these types and interfaces. We want to have the possibility to book a ticket for a person.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Ticket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;bookTicket&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;Ticket&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// some procesing&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;bookTicket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Paris&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mars&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Joey&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code seems okay. However, we can book a ticket to Mars using the function, but we don't fly to Mars yet. What we may rectify in our code to adjust to reality? We could add validation for &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; fields inside the function, but we also can do this with TypeScript. For example, we could list possible locations we're flying to and from.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;AvailableLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Paris&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Moon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;London&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Ticket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AvailableLocation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AvailableLocation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;bookTicket&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AvailableLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AvailableLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;Ticket&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// some procesing&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Error: Argument of type '"Mars"' is not assignable to parameter of type 'AvailableLocation'&lt;/span&gt;
&lt;span class="nx"&gt;bookTicket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Paris&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mars&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Joey&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We narrowed possible options for locations. Thus, eliminated cases when we can write code that calls the function with invalid locations like "Mars" or "Andromeda Galaxy". We listed multiple allowed options via "or" operator - &lt;code&gt;Paris | Moon&lt;/code&gt;. We might be using enums for this purpose too:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;enum&lt;/span&gt; &lt;span class="nx"&gt;Locations&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Paris&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;Moon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;London&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Ticket&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Locations&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Locations&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;bookTicket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Locations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Paris&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Locations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Moon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Joey&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are differences in using types and enums, I won't cover them this time, but you may refer to &lt;a href="https://stackoverflow.com/questions/40275832/typescript-has-unions-so-are-enums-redundant"&gt;this page&lt;/a&gt; for the details.&lt;/p&gt;

&lt;p&gt;As you might notice, somewhere I used &lt;code&gt;interface&lt;/code&gt; for an object type and then declared another one via &lt;code&gt;type&lt;/code&gt;. Use what you like more for such cases or use based on your project code guidelines. For more information about the difference, &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces"&gt;read here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-raw-record-endraw-to-type-objects"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;Record&lt;/code&gt; to type objects
&lt;/h2&gt;

&lt;p&gt;Sometimes you have generic objects, where a key is always &lt;code&gt;string&lt;/code&gt;(and it's &lt;strong&gt;always&lt;/strong&gt; a string, if you want to use other values, use &lt;code&gt;Map&lt;/code&gt; instead) and a value is always &lt;code&gt;string&lt;/code&gt; too. In this case, you may define its type as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;SomeObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SomeObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's another way to do the same using &lt;code&gt;Record&amp;lt;keyType, valueType&amp;gt;&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;SomeObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// it means an object with string values, e.g. {who: "me"}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's something new here: &lt;a href="https://www.typescriptlang.org/docs/handbook/2/generics.html"&gt;generics&lt;/a&gt;, computed types to re-use the existing ones. Let's re-create the &lt;code&gt;Record&lt;/code&gt; type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Value&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thus, if we want to create an object, we don't need to write such signatures every time. So, an object with number values is as simple as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We may need more complex types, for example, to represent the state of our API requests. Imagine you have a global state where you put all the API data. Thus, you know where to show a loader, when to remove it, and to show relevant data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;StateItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StateItem&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;getInvoices&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do you see the inconveniences here? We might narrow a type for &lt;code&gt;state&lt;/code&gt; keys: it's a string, but we want to be sure we put valid API request names there. The second thing is the &lt;code&gt;unknown&lt;/code&gt; I put for the &lt;code&gt;response&lt;/code&gt;(an object with &lt;code&gt;unknown&lt;/code&gt; values), yet it's still better than &lt;code&gt;any&lt;/code&gt;, because you should determine its type before any processing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;APIRequest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getInvoices&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getUsers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getActions&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;BaseResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;isOk&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;GetInvoicesResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;BaseResponse&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]};&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;GetUsersResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;BaseResponse&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[]};&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;GetActionsResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;BaseResponse&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]};&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;StateItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;response&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;GetInvoicesResponse&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;GetUsersResponse&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;GetActionsResponse&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;APIRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StateItem&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Type is missing the following properties from type 'State': getUsers, getActions&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;getInvoices&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;isOk&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's disassemble some pieces of the above:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;APIRequest&lt;/code&gt; type is a list of possible requests names. Narrowing types are for the better. See the error comment near the &lt;code&gt;state&lt;/code&gt; const? Typescript requires you to specify all the requests.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;BaseResponse&lt;/code&gt; represents a default and basic response, we always know that we receive &lt;code&gt;{isOk: true | false}&lt;/code&gt;. Thus, we may prevent code duplication and re-use the type.&lt;/li&gt;
&lt;li&gt;We made a type for every request possible.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While it's better than it was before, but we could do even better. The problem with these types is that &lt;code&gt;response&lt;/code&gt; is too generic: we may have  &lt;code&gt;GetInvoicesResponse | GetUsersResponse | GetActionsResponse&lt;/code&gt;. If there are more requests, there is more ambiguity. Let's employ generics to reduce duplicate code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;BaseResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;isOk&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;};&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;GetInvoicesResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;BaseResponse&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]};&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;GetUsersResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;BaseResponse&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[]};&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;GetActionsResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;BaseResponse&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]};&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;StateItem&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Response&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;response&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;getInvoices&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;StateItem&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;GetInvoicesResponse&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;StateItem&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;GetUsersResponse&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;getActions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;StateItem&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;GetActionsResponse&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's more readable and safe to specify every request separately, thus there's no need to check &lt;code&gt;state.getInvoices.response&lt;/code&gt; on every response type possible.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Don't use &lt;code&gt;any&lt;/code&gt; type. Prefer &lt;code&gt;unknown&lt;/code&gt;. In such a way, you should be checking the type before doing any further operations with it.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;s&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Object is of type 'unknown'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Prefer &lt;code&gt;Record&amp;lt;string, T&amp;gt;&lt;/code&gt; over &lt;code&gt;object&lt;/code&gt;, which can be &lt;code&gt;null&lt;/code&gt;, any kind of object, a function.  &lt;code&gt;T&lt;/code&gt; refers to a generic type.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Narrow types where possible. If it's a few strings you use often, probably they can be combined in one type(see the example about API requests state).&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;GoogleEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;@gmail.com`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// yet it's still a string&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;email1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;GoogleEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Type '"my@example.com"' is not assignable to type '`${string}@gmail.com`'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;email2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;GoogleEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my@example.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a new thing here: template types. Any email is a string, but if you can narrow a type, then why not(it's an example, sometimes it's an overhead).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-use-cases-you-may-encounter"&gt;
  &lt;/a&gt;
  Other use cases you may encounter
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#generics-in-functions"&gt;
  &lt;/a&gt;
  Generics in functions
&lt;/h4&gt;

&lt;p&gt;You saw generics, it's a powerful way to re-use the code, the other examples include functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Response&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;isOk&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callAPI&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;Response&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// it's a pseudo-fetch, the real API differs&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// some manipulations with data&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, the syntax is &lt;code&gt;function &amp;lt;name&amp;gt;:&amp;lt;type&amp;gt; (args) {}&lt;/code&gt;. You may use &lt;code&gt;T&lt;/code&gt;(or other names for a generic, or, a few of them) inside a function too.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#specifying-types-for-readability"&gt;
  &lt;/a&gt;
  Specifying types for readability
&lt;/h4&gt;

&lt;p&gt;Imagine you work a lot with variables that are strings, but it's hard to understand which is what type exactly. For example, when dealing with OAuth tokens.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;AccessToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;IdToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Both tokens are JWT strings, but sometimes it's useful to understand the context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callProviderEndpoint&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AccessToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;decodeUserInfo&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IdToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, the syntax is &lt;code&gt;function &amp;lt;name&amp;gt;:&amp;lt;type&amp;gt; (args) {}&lt;/code&gt;. You may use &lt;code&gt;T&lt;/code&gt;(or other names for a generic, or, a few of them) inside a function too.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#type-assertions"&gt;
  &lt;/a&gt;
  Type assertions
&lt;/h4&gt;

&lt;p&gt;There are cases when you need to cast(transform to for the compiler) a type to another one. For example, when a library method returns object and you know it's not useful, you need a more narrow type. You may write const result = libResult as Record. as allows you to transform a type into a desired one(if it's possible). The easiest cast is for any types: the compiler doesn't know anything about a value, so it trusts you. There are cases when you'd want to cast something into any for compatibility, but often it's laziness to write correct types. Invest type into writing good(corresponding to reality) types.&lt;/p&gt;

&lt;p&gt;You may also do casts like follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MyCorrectType&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;libResponse&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// the same as&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;libResponse&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;MyCorrectType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#some-general-questions-one-may-ask"&gt;
  &lt;/a&gt;
  Some general questions one may ask
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#should-i-learn-typescript"&gt;
  &lt;/a&gt;
  Should I learn Typescript?
&lt;/h4&gt;

&lt;p&gt;Definitely. I presume you're already familiar with Javascript, which is simple and fast to prototype. Typescript adds type safety and readability. Your app's logic becomes more predictable. Read more about reasons to use Typescript.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-learn-typescript"&gt;
  &lt;/a&gt;
  How to learn Typescript?
&lt;/h4&gt;

&lt;p&gt;Read the documentation about the basic types, or this article. Practice the examples by yourself and go code! Install the environment(many frameworks have their already prepared Typescript ecosystem for you to install and use instantly) and make things happen. It's okay you don't understand some things or you're tired of the compiler errors. It's getting easier.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;I didn't cover all the things in the article. The mentioned above should be enough to spark your interest and learn the basics that cover most cases you'll encounter. Learn as you go. The theory might seem to be complicated and boring, it's okay. Write me on Twitter if you need more details or help.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://metacognitive.me/typescript-tutorial-for-javascript-developers/"&gt;Original&lt;/a&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>programming</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Plan what to learn for Junior Python</title>
      <author>Vadim Kolobanov</author>
      <pubDate>Fri, 05 Nov 2021 06:51:52 +0000</pubDate>
      <link>https://dev.to/abstract/step-by-step-plan-what-to-learn-for-junior-python-133d</link>
      <guid>https://dev.to/abstract/step-by-step-plan-what-to-learn-for-junior-python-133d</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@nick_rickert?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Nick Rickert&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/python?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello everyone I want to share with you my training plan from beginner to Junior in Python. It is important to know that it will be effective to learn in exactly this order. Many of the self-taught may be outraged that the Python developer does not need some of this. Your opinion is worthy of attention and I take it into account, so I want to say in advance that this plan is suitable for a junior before applying for a job as a programmer. To know what I described in the tables is not just to be a Python coder, but to really have the skills to develop a project. &lt;/p&gt;

&lt;p&gt;I saw that on dev.to there are many beginners who are looking for tips to start in programming. This plan will suit you very well. And most importantly, do not deviate from your goal! Good luck!&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Version Conrol&lt;/th&gt;
&lt;th&gt;Success criteria&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Version Control Basics&lt;/td&gt;
&lt;td&gt;Used at least one VCS &lt;br&gt; Performs basic operations like Check in, check out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Common operations with Version Control&lt;/td&gt;
&lt;td&gt;Creates new branches&lt;br&gt;Merges branches&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Branching strategies&lt;/td&gt;
&lt;td&gt;Understands purpose of branching&lt;br&gt;Explains Centralized (Trunk Based) approach&lt;br&gt;Explains GitFlow approach&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Version control is needed so that you can competently store your work and create your resume&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Python General Information&lt;/th&gt;
&lt;th&gt;Success criteria&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Code execution - Novice&lt;/td&gt;
&lt;td&gt;Interactive shell&lt;br&gt;Script execution&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Versions of Python - Intermediate&lt;/td&gt;
&lt;td&gt;Differences between 2.x and 3.x in general (print, unicode, etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;In some points, I have divided one direction by beginner or advanced level, so it is important to follow this order. The learning process of the next topic will be based on the previous one.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Python Types and Operations&lt;/th&gt;
&lt;th&gt;Success criteria&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Operators - Novice&lt;/td&gt;
&lt;td&gt;Types: arithmetic, comparison, assignment, bitwise, logical, membership, identity.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Numbers - Novice&lt;/td&gt;
&lt;td&gt;Definitions&lt;br&gt;Decimal, hexadecimal, octal, binary number syntax&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lists - Novice&lt;/td&gt;
&lt;td&gt;Definition and properties&lt;br&gt;Basic methods and operations&lt;br&gt;Indexing and slicing&lt;br&gt;list vs tuple&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Files - Novice&lt;/td&gt;
&lt;td&gt;Definition and properties&lt;br&gt;Basic methods and operations&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dynamic typing - Novice&lt;/td&gt;
&lt;td&gt;Definitions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sets - Novice&lt;/td&gt;
&lt;td&gt;Definition and properties&lt;br&gt;Basic methods and operations&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dictionaries - Novice&lt;/td&gt;
&lt;td&gt;Definition and properties&lt;br&gt;Basic methods and operations&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shared references - Novice&lt;/td&gt;
&lt;td&gt;Equality: == vs is&lt;br&gt;In-place changes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Strings - Novice&lt;/td&gt;
&lt;td&gt;Definitions&lt;br&gt;Syntax&lt;br&gt;Different formats: single-, double-quoted, multiline.&lt;br&gt;Special characters&lt;br&gt;Basic operations and methods&lt;br&gt;Indexing and slicing&lt;br&gt;Formatting&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tuples - Novice&lt;/td&gt;
&lt;td&gt;Definitions&lt;br&gt;Syntax&lt;br&gt;list vs tuples&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Copying procedure&lt;/td&gt;
&lt;td&gt;deepcopy, method copy, slicing, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dictionaries - Intermediate&lt;/td&gt;
&lt;td&gt;Iteration and comprehensions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lists -Advanced&lt;/td&gt;
&lt;td&gt;Iteration and comprehensions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Numbers - Advanced&lt;/td&gt;
&lt;td&gt;Numeric operations with mixed types.&lt;br&gt;Comparison: normal and chained.&lt;br&gt;Division: classic, floor, true.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Operators - Advanced&lt;/td&gt;
&lt;td&gt;Precedence of operators.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dynamic typing - Advanced&lt;/td&gt;
&lt;td&gt;Strong and weak typing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Strings - Advanced&lt;/td&gt;
&lt;td&gt;Raw strings&lt;br&gt;Unicode and ASCII strings&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Python Statements and Syntax&lt;/th&gt;
&lt;th&gt;Success criteria&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Condition statements - Novice&lt;/td&gt;
&lt;td&gt;if-elif-else&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Loop statements - Novice&lt;/td&gt;
&lt;td&gt;for, while&lt;br&gt;Control of cycle&lt;br&gt;execution(break, continue, pass)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Condition statements - Intermediate&lt;/td&gt;
&lt;td&gt;inline if, ternary operator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Generators - Novice&lt;/td&gt;
&lt;td&gt;Definitions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Iterators - Novice&lt;/td&gt;
&lt;td&gt;Definitions&lt;br&gt;Built-In iterables.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Loop statements - Intermediate&lt;/td&gt;
&lt;td&gt;How to use else in cycles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Generators - Intermediate&lt;/td&gt;
&lt;td&gt;yield&lt;br&gt;comprehensions vs generators&lt;br&gt;gen expressions&lt;br&gt;range vs xrange&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Iterators - Intermediate&lt;/td&gt;
&lt;td&gt;Manual iteration: iter() and next()&lt;br&gt;Iteration protocol.&lt;br&gt;Iterable, Range iterable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Loop statements - Advanced&lt;/td&gt;
&lt;td&gt;Implementation details&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Functions in Python&lt;/th&gt;
&lt;th&gt;Success criteria&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Argument-Passing - Novice&lt;/td&gt;
&lt;td&gt;required, keyword, default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Argument-Passing - Intermediate&lt;/td&gt;
&lt;td&gt;arbitrary argument&lt;br&gt;values,keyword&lt;br&gt; arguments in dictionary&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Definition and calls&lt;/td&gt;
&lt;td&gt;Syntax&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Decorators - Novice&lt;/td&gt;
&lt;td&gt;Definitions&lt;br&gt;Standard class&lt;br&gt;Decorators: @classmethod, @staticmethod, @property(getter, setter, deleter)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Functional programming - Novice&lt;/td&gt;
&lt;td&gt;map, reduce, filter, zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lambda expressions&lt;/td&gt;
&lt;td&gt;Definitions&lt;br&gt;Syntax&lt;br&gt;Usage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Argument-Passing - Advanced&lt;/td&gt;
&lt;td&gt;When and how many times are default arguments evaluated?&lt;br&gt;Partial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Decorators - Advanced&lt;/td&gt;
&lt;td&gt;decorators for functions, decorators for classes&lt;br&gt;wraps&lt;br&gt;passing args to decorators&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Modules in Python&lt;/th&gt;
&lt;th&gt;Success criteria&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Modules in Python - Novice&lt;/td&gt;
&lt;td&gt;import&lt;br&gt;packages&lt;br&gt; __ init __ .py -  __ name __  and  __ main __&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;OOP in Python&lt;/th&gt;
&lt;th&gt;Success criteria&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Attribute access - Novice&lt;/td&gt;
&lt;td&gt;Direct access&lt;br&gt;Class and instance attributes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Definition and syntax - Novice&lt;/td&gt;
&lt;td&gt;OOP definitions&lt;br&gt;classes syntax&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Inheritance - Novice&lt;/td&gt;
&lt;td&gt;Definitions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Basic customization and Operators overloading - Novice&lt;/td&gt;
&lt;td&gt;Definitions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Relations between classes and instances - Novice&lt;/td&gt;
&lt;td&gt;Definitions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Abstract base class - Novice&lt;/td&gt;
&lt;td&gt;Definition and syntax&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Inheritance - Intermediate&lt;/td&gt;
&lt;td&gt;Multiple inheritance&lt;br&gt;Classic algorithm&lt;br&gt;Diamond problem&lt;br&gt;MRO, super&lt;br&gt;Mixins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Inheritance - Advanced&lt;/td&gt;
&lt;td&gt;C3 algorithm&lt;br&gt;How to change MRO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Context managers - Advanced&lt;/td&gt;
&lt;td&gt;Implementation details&lt;br&gt;contextlib decorator&lt;br&gt;with-enabled class&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Troubleshooting in Python&lt;/th&gt;
&lt;th&gt;Success criteria&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Logging fundamentals&lt;/td&gt;
&lt;td&gt;Explains purpose of logging.&lt;br&gt;Understands logging levels.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Debugging in Python - Novice&lt;/td&gt;
&lt;td&gt;Definitions&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Exceptions in Python&lt;/th&gt;
&lt;th&gt;Success criteria&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Definitions and syntax - Novice&lt;/td&gt;
&lt;td&gt;Definitions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Definitions and syntax - Intermediate&lt;/td&gt;
&lt;td&gt;Custom exceptions&lt;br&gt;try-except-else, try-finally&lt;br&gt;raise, assert&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;and Python standard library.&lt;/p&gt;

&lt;p&gt;Write in private messages, in comments, on social networks. I will always try to help everyone&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.facebook.com/neo.skarynsky"&gt;Write me on Face....oh...Meta&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/decodesperato"&gt;My Twitter&lt;/a&gt; &lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
