<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>AWSでSandbox環境を用意して組織全体のスキルアップをしよう</title>
      <author>Shiomi Sumi</author>
      <pubDate>Mon, 13 Dec 2021 11:58:05 +0000</pubDate>
      <link>https://dev.to/aws-builders/awsdesandboxhuan-jing-woyong-yi-sitezu-zhi-quan-ti-nosukiruatupuwosiyou-efk</link>
      <guid>https://dev.to/aws-builders/awsdesandboxhuan-jing-woyong-yi-sitezu-zhi-quan-ti-nosukiruatupuwosiyou-efk</guid>
      <description>&lt;p&gt;こんにちは、sumiです。&lt;/p&gt;

&lt;p&gt;Tech系スタートアップにおいてエンジニアの確保は必須ではあるものの、無名なスタートアップがつよつよエンジニアを獲得するのは難しく、まだまだ未熟なエンジニアも多いのが現状ではないでしょうか。&lt;/p&gt;

&lt;p&gt;未熟なエンジニアは伸び代がありますが、スタートアップには育成にかけるリソースはありません。みんな自発的に学習をしています。&lt;br&gt;
自ら動き、&lt;strong&gt;楽しく学ぶことで大きな成長&lt;/strong&gt;につながりますし、そこで&lt;strong&gt;得られた知識や経験を日々の業務にコミットすることで仕事もうまくいく&lt;/strong&gt;。わたしは自身の経験からそのことをよく理解しているつもりです。&lt;/p&gt;

&lt;p&gt;AWSのスキルは実際に開発を行う中で学び習得することもありますが、開発は最小権限での実行に限定されることになるため、限られたサービスの利用しか実行できないため、より良いビジネスへのアイデアを出すには限界があります。&lt;/p&gt;

&lt;p&gt;そのため、AWSサービスを自由に触ることができるSandbox環境を用意することにしましたので、その運用について紹介します。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sandbox%E7%92%B0%E5%A2%83%E3%81%A8%E3%81%AF"&gt;
  &lt;/a&gt;
  Sandbox環境とは
&lt;/h2&gt;

&lt;p&gt;自由にAWSのサービスを触りまくって遊ぶことが許されている実験・学習用のAWSアカウントです。開発等で使用しているAWSアカウントとは分離させて、実際に運用しているシステムに影響を出すことなくAWSサービスを触ることができる環境です。&lt;/p&gt;

&lt;p&gt;AWSを学習するためにはドキュメントをはじめハンズオンやユーザーグループの開催する勉強会などがありますが、AWSを本当に理解するためには実際に触ってみることが大事です。&lt;/p&gt;

&lt;p&gt;実際にAWSサービスを触らないまま「なんとなく理解した」つもりで、実際の開発で取り入れようとすると、意外なところに壁があったり、実はもっと最適な方法があって後で気づくことになることもあります。&lt;/p&gt;

&lt;p&gt;こうなるとエンジニア含め、その先にあるお客様にとっても嬉しくないので、それを解決するために既存AWSアカウントと分離したSandboxアカウントという手段を採用しました。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E7%9B%AE%E7%9A%84"&gt;
  &lt;/a&gt;
  目的
&lt;/h2&gt;

&lt;p&gt;わたしは、以下3つの目的をもってSandboxの運用をはじめることにしました。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;AWSサービスをより広く深く理解し、ビジネスアイデアを増やす&lt;/li&gt;
&lt;li&gt;費用やセキュリティに関して不安を感じることなく思いっきり遊んで学び、エンジニアとしてスキルアップを目指す&lt;/li&gt;
&lt;li&gt;アウトプットを増やしてエンジニア組織としての知名度の向上を目指す&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#%E9%81%8B%E7%94%A8%E6%96%B9%E6%B3%95"&gt;
  &lt;/a&gt;
  運用方法
&lt;/h2&gt;

&lt;p&gt;Sandbox環境の運用はシンプルです。&lt;br&gt;
組織の従業員全員がOktaを経由して、シングル・サインオンでAWSのSandbox環境にAdministrator権限でアクセスできるようにしています。そして、月に一度アカウント内のすべてのリソースを削除しています。&lt;/p&gt;

&lt;p&gt;しかしながら、巨大なインスタンスを立てて膨大な費用を請求されることや、脆弱な穴を作って放置することは組織として望んではいません。そのため、一定のルールとガードレールを設ける必要があります。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E9%81%8B%E7%94%A8%E3%83%AB%E3%83%BC%E3%83%AB"&gt;
  &lt;/a&gt;
  運用ルール
&lt;/h3&gt;

&lt;p&gt;私は以下のルールで運用を始めることにしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;毎月1日に &lt;a href="https://github.com/rebuy-de/aws-nuke"&gt;aws-nuke&lt;/a&gt; でアカウント内のリソースを削除&lt;/li&gt;
&lt;li&gt;予算は組織全体で$500。 (ここは組織拡大を見越して一人当たりの予算とかにすればよかったかも)&lt;/li&gt;
&lt;li&gt;コスト予測アラートをセットする&lt;/li&gt;
&lt;li&gt;サーバー情報をインターネット上に公開しない&lt;/li&gt;
&lt;li&gt;アクセス資格情報をソースコードに含めない&lt;/li&gt;
&lt;li&gt;業務のための検証はSandboxではなくプロジェクトのアカウントで行うこと&lt;/li&gt;
&lt;li&gt;使って欲しくないサービスはSCPで制限する

&lt;ul&gt;
&lt;li&gt;Route53 ドメイン登録&lt;/li&gt;
&lt;li&gt;Snowball&lt;/li&gt;
&lt;li&gt;Ground Station&lt;/li&gt;
&lt;li&gt;Marketplaceの購入&lt;/li&gt;
&lt;li&gt;リザーブドインスタンスの購入&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sandboxの重要な要素の1つは、&lt;strong&gt;Sandbox環境で遊ぶ人々が環境を制御できるようにする必要がある&lt;/strong&gt;ことです。つまり、管理者権限です。しかし、&lt;strong&gt;大いなる力には大いなる責任が伴います&lt;/strong&gt;。初心者は大いなる力を手にしたことを理解しないまま使うこともあるでしょう。&lt;/p&gt;

&lt;p&gt;そのため、これらのルールを守り、システム的な制御を設定する必要があります。&lt;/p&gt;

&lt;p&gt;ただ不便で面倒なルールはお断りです。可能な限り自由でエンジニア・フレンドリーなルールづくりを心がけています。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E3%82%AC%E3%83%BC%E3%83%89%E3%83%AC%E3%83%BC%E3%83%AB"&gt;
  &lt;/a&gt;
  セキュリティガードレール
&lt;/h3&gt;

&lt;p&gt;エンジニアが思いっきりアクセルを踏み込んで実験を楽しむには、セキュリティの脅威を排除する必要があります。そのためにセキュリティ・ガードレールを作成し、利用者が安全に実験に没頭できる環境を用意します。&lt;/p&gt;

&lt;p&gt;これらのサービスを使用して、組織に合ったガードレールを作成することもできます。&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#awsconfig"&gt;
  &lt;/a&gt;
  AWSConfig
&lt;/h4&gt;

&lt;p&gt;AWS Configを使用して、AWSアカウント全体のリソース構成を管理するためのマネージドルールとカスタムルールを実装することができます。&lt;br&gt;
たとえば、マネージドルールを実装して、すべてのS3バケットでサーバー側の暗号化が有効になっていることを監視して、サーバー側の暗号化が有効になっていない場合、AWSConfigは非準拠のリソースを検出してフラグを立てます。SSMで自動修復してもよきですね!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#awscloudtrail-%E3%81%A8-amazoneventbridge"&gt;
  &lt;/a&gt;
  AWSCloudTrail と AmazonEventBridge
&lt;/h4&gt;

&lt;p&gt;EventBridgeはAWSのあらゆるサービスのアクションをトリガーにすることができる超便利なサービスですよね。これと、AWS CloudTrailを監査ツールとして使用して、AWS環境でAPI呼び出しを継続的に監視することができます。&lt;br&gt;
やってほしくない不正な動作を検知させるにはもってこいです。&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#awsorganizations-scp"&gt;
  &lt;/a&gt;
  AWSOrganizations (SCP)
&lt;/h4&gt;

&lt;p&gt;不要なアクションを防ぐために、セキュリティガードレールとしてSCPを実装する必要があります。サンドボックスアカウントは、SCPをすべてのサンドボックスアカウントに簡単に適用できるように、組織内の「サンドボックス」組織単位(OU)の中にいれています。&lt;/p&gt;

&lt;p&gt;うちでは使用できるリージョンを制限しています。GuardDutyを全リージョン有効にするのはさすがにコストがかかりすぎなので、4つくらいに絞ってます。&lt;/p&gt;

&lt;p&gt;あとは上記のルールで指定した「使って欲しくないサービス」の制限です。&lt;br&gt;
やって欲しくないアクションを拒否するようにしています。&lt;/p&gt;

&lt;p&gt;他にもやってみてもいいかなと思うアイデアとしては、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;EC2インスタンスは特定のタイプしか使えないようにする&lt;/li&gt;
&lt;li&gt;Configルールの変更ができないようにする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などはあるのですが、まだ実装できてないので今後取り組んでいきたいところ。&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%E3%82%B3%E3%82%B9%E3%83%88%E3%81%AE%E8%BF%BD%E8%B7%A1%E3%81%A8%E7%AE%A1%E7%90%86"&gt;
  &lt;/a&gt;
  コストの追跡と管理
&lt;/h4&gt;

&lt;p&gt;Sandboxアカウントには予算を必ず設定しておきましょう。&lt;br&gt;
また、その支出が正常なものか(不正に利用されたものではないか)を判断できるようにしておくことも重要です。&lt;br&gt;
そのために、BudgetsとCostExplorerの存在はかかせません。&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#awsbudgets"&gt;
  &lt;/a&gt;
  AWSBudgets
&lt;/h5&gt;

&lt;p&gt;AWS Budgetsを使用すると、コストまたは使用予算に割り当てられた金額を超えた場合、または超えようとしている場合にアラートをあげることができます。&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#aws-costexplorer"&gt;
  &lt;/a&gt;
  AWS CostExplorer
&lt;/h5&gt;

&lt;p&gt;過去の使用量とコストを表示し、予想される支出を予測し、コストを最適化する方法の推奨事項を提供してくれる有能なサービスです。コスト異常検出の機能もあるので、SNSと組み合わせれば、「気づいたら請求金額がえらいことに…」なんて事態は防ぐことができそうですね。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E3%82%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%A6"&gt;
  &lt;/a&gt;
  やってみて
&lt;/h2&gt;

&lt;p&gt;運用をはじめてみると、AWSに興味はあるけどAWSの料金がよくわからなくて、個人では怖くて使えなかったというエンジニアたちが使い始めるようになりました。&lt;br&gt;
最近のコスト・レポートから見ると、AmplifyやDynamoDBといった実業務で触ったことのあるサービスを、より深く理解するためにSandbox環境で学習している傾向が見られました。&lt;/p&gt;

&lt;p&gt;また、&lt;a href="https://aws.amazon.com/jp/aws-jp-introduction/aws-jp-webinar-hands-on/"&gt;公式で提供されているハンズオン&lt;/a&gt;を試してみたり、新しく登場したサービスを触ってみるなど、実験・学習用途としての利用もされているようで、組織のAWSスキルの向上に貢献できているような気がしました。&lt;/p&gt;

&lt;p&gt;ですが、まだまだ毎月の予算を使い切るほど利用はされていないので、もっと社内のエンジニアたちを焚き付けてどんどんAWSにのめり込んでもらって、たくさんアウトプットをしていけるような組織づくりをしていきたいなと思います。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E3%81%BE%E3%81%A8%E3%82%81"&gt;
  &lt;/a&gt;
  まとめ
&lt;/h2&gt;

&lt;p&gt;開発チームにとって、Sandboxアカウントは、安全な設定でAWSサービスをテストおよび検証する自由を提供し、エンジニア自身の成長を促す役割があります。人材の育成は企業にとって重要なことですが、育成のためのリソースが不足しているスタートアップにとっては必要なものではないでしょうか。&lt;/p&gt;

&lt;p&gt;意図しない結果を防ぐための制限(ガードレール)を設定した上で、広い特権を付与することで、AWSのあらゆるサービスを安全で自由に学ぶことができます。&lt;/p&gt;

&lt;p&gt;AWSにはたくさんのサービスがあり、日々進化を続けています。マネージドで便利なサービスも増えました。それらをビジネスに活かすために私たちは日々学ばなくてはなりません。&lt;br&gt;
ビジネス・チャンスを広げるためにも、AWSで何ができるのかを学びましょう。&lt;/p&gt;

</description>
      <category>aws</category>
      <category>startup</category>
      <category>skillup</category>
    </item>
    <item>
      <title>Breaking Up a Monolithic Database with Kong</title>
      <author>John Vester</author>
      <pubDate>Mon, 13 Dec 2021 11:57:14 +0000</pubDate>
      <link>https://dev.to/johnjvester/breaking-up-a-monolithic-database-with-kong-1b7p</link>
      <guid>https://dev.to/johnjvester/breaking-up-a-monolithic-database-with-kong-1b7p</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6anhNkYH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rrhmz4pzjwxe3uka3g9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6anhNkYH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rrhmz4pzjwxe3uka3g9.jpg" alt="Feature Image" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are events in our life that seem to be just routine, but then unexpectedly they have a profound impact on our journey. For me, one event was attending the 2008 Gartner conference in Orlando, Florida. &lt;/p&gt;

&lt;p&gt;That event not only introduced me to the Salesforce ecosystem for the very first time but also to concepts like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Service-oriented_architecture"&gt;Service-Oriented Architecture&lt;/a&gt; (via an impressive session by Roy Schulte)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Web_2.0"&gt;Web 2.0&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Mashup_(web_application_hybrid)"&gt;Mashups&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer"&gt;RESTful API Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While I had modest expectations for the event, those few days in central Florida became a key aspect of focus for the next 13 years of my career, far exceeding any expectations I could have ever imagined. &lt;/p&gt;

&lt;p&gt;Along the way, I learned many lessons from projects and initiatives focused on these very concepts. In this article, I will dive into several lessons learned from projects that placed RESTful APIs at the core of an application’s design.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-restful-api-pitfalls"&gt;
  &lt;/a&gt;
  The RESTful API Pitfalls
&lt;/h2&gt;

&lt;p&gt;The RESTful API software style provides an easy manner for client applications to gain access to the resources (data) they need to meet business needs. In fact, it did not take long for Javascript-based frameworks like Angular, React, and Vue to rely on RESTful APIs and lead the market for web-based applications.&lt;/p&gt;

&lt;p&gt;This pattern of RESTful service APIs and frontend Javascript frameworks sparked a desire for many organizations to fund projects migrating away from monolithic or outdated applications. The RESTful API pattern also provided a much-needed boost in the technology economy which was still recovering from the impact of the &lt;a href="https://en.wikipedia.org/wiki/Great_Recession"&gt;Great Recession&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Fast-forward several agile iterations into this new development paradigm, and two pitfalls have been repeatedly encountered more than they have been avoided:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;An outdated application design was ultimately replaced with a very large RESTful API and an equally large Javascript framework. This created challenges with coordinating future features and enhancements; basically, one monolith was replaced by another.&lt;/li&gt;
&lt;li&gt;A legacy application design employed multiple RESTful APIs and componentized clients utilizing Javascript frameworks, but a single database was utilized. The result of this design led to data ownership conflicts, a higher-than-expected number of database connections, and higher costs to support/maintain a large database.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Below is an example of how pitfall #2 played out, with several services competing for resources from a single database:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xgPewf2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ok53184irzpagzr0e7pd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xgPewf2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ok53184irzpagzr0e7pd.png" alt="Multiple Services One Database" width="880" height="356"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, I have also seen these same scenarios with greenfield development opportunities, where there is a preference to use a single database for an entire collection of microservices. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#microservices-should-begin-with-the-database"&gt;
  &lt;/a&gt;
  Microservices Should Begin With the Database
&lt;/h2&gt;

&lt;p&gt;In most programming languages, it is possible to create a fully functional application using a single file. In Java, everything could be in the same class file and stemmed from simply calling the &lt;code&gt;main()&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class SingleClassApplication {
    public static void main(String[] args) {
        // Start doing something really cool here
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, this approach is not very supportable, nor does it facilitate easy contribution from multiple developers. &lt;/p&gt;

&lt;p&gt;There is also the concept of “ownership” (or system of record) when it comes to aspects of an application. In cases where more than one service or function claims to be the owner of something (like a customer), challenges arise when business rules differ. The same scenario can occur when multiple RESTful APIs claim ownership of a given object.&lt;/p&gt;

&lt;p&gt;These same concepts translate to the database layer when employing a RESTful API design. Consider the following guideline:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A single RESTful API should be considered the system of record for a given aspect of the application. As such, the corresponding data tier should leverage a data store focused solely on that aspect of the application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The illustration below provides a microservices design that adheres to this guideline:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--46g7hUPj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pbguatbd8ssldlfmets.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--46g7hUPj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pbguatbd8ssldlfmets.png" alt="Multiple Services with Dedicated Database" width="880" height="346"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A successful microservice design begins with the database. Once in place, scaling to meet customer demand for the given service does not have an impact on any other service.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#counterpoint-what-about-database-constraints"&gt;
  &lt;/a&gt;
  Counterpoint: What About Database Constraints?
&lt;/h3&gt;

&lt;p&gt;My recommended approach is to isolate a given microservice with a dedicated database. This allows the count and size of the related components to match user demand while avoiding additional costs for elements that do not have the same levels of demand.&lt;/p&gt;

&lt;p&gt;Database administrators are quick to defend the single-database design by noting the benefits that constraints and relationships can provide when all of the elements of the application reside in a single database. As an example, a single database design can prevent a request to remove a customer if there are orders associated with the customer queued for deletion.&lt;/p&gt;

&lt;p&gt;While that is definitely a benefit to having a single database, consider the following points before opting to utilize a single database for all microservices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compare the long-term value gained by using a single database with the associated costs for scaling a single, large database. What is the expected cost to scale and support a single database design in the future?&lt;/li&gt;
&lt;li&gt;What is the risk and value of having these constraints enforced at the API layer instead?  Keep in mind that a single microservice would be considered the owner of a given database, so the business logic would not allow things like deleting a customer with active orders.&lt;/li&gt;
&lt;li&gt;Consider the benefits of using an event-driven (or message-based) design to handle the situations where how one microservice handles a request depends on the response from another microservice. While this is similar to a single application/single database design, the ability to scale and allocate dedicated processing power when needed can be isolated and controlled.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Certainly, constraints and relationships should be implemented and enforced, even when the database supports only a dedicated service instance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#common-elements-should-be-abstracted"&gt;
  &lt;/a&gt;
  Common Elements Should Be Abstracted
&lt;/h2&gt;

&lt;p&gt;Adopting a true microservices design can lead to side effects if not planned appropriately. The biggest challenge I continue to see is the duplication of common components and the service-tier layer. &lt;/p&gt;

&lt;p&gt;The list below provides examples of elements that are often duplicated inside each microservice:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;authentication&lt;/li&gt;
&lt;li&gt;caching&lt;/li&gt;
&lt;li&gt;logging&lt;/li&gt;
&lt;li&gt;monitoring&lt;/li&gt;
&lt;li&gt;security&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In fact, consider this illustration, which I introduced in my “&lt;a href="https://dev.to/johnjvester/how-i-stopped-coding-repetitive-service-components-with-kong-1af"&gt;How I Stopped Coding Repetitive Service Components with Kong&lt;/a&gt;” article earlier this year.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i30y28Uj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdphu4u0t0xgktphuzfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i30y28Uj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdphu4u0t0xgktphuzfl.png" alt="Kong Example" width="880" height="356"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like all aspects of the development lifecycle, we should always focus on keeping things as DRY (don’t repeat yourself) as possible. This includes elements that can be abstracted and processed at a common level or a different level of the application stack.&lt;/p&gt;

&lt;p&gt;One approach I often recommend is a distributed microservices abstraction layer approach provided by &lt;a href="https://konghq.com/"&gt;Kong&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#placing-kong-at-the-center-of-the-ideal-design"&gt;
  &lt;/a&gt;
  Placing Kong at the Center of the Ideal Design
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/Kong/kong"&gt;Kong Gateway&lt;/a&gt; allows the complexity of service-tier APIs to be reduced to a collection of endpoints (or URIs) focused on meeting a collection of business needs and functionality. Often-duplicated components (like authentication, logging, and security) are handled by the gateway and can be removed from the service-tier design.&lt;/p&gt;

&lt;p&gt;With each RESTful microservice maintaining a dedicated database instance and the duplicate components abstracted, a collection of purpose-driven microservices would appear as illustrated below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bK3lekU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5655nkdu7ay61rbhqy9r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bK3lekU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5655nkdu7ay61rbhqy9r.png" alt="Kong - Full Example" width="880" height="700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Inter-service communication is handled via a messaging tier utilizing common &lt;a href="https://en.wikipedia.org/wiki/Enterprise_Integration_Patterns"&gt;enterprise integration patterns&lt;/a&gt;, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.wso2.com/display/EIP/Command+Message"&gt;Command Message&lt;/a&gt; - invoke another service to perform a background action&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.wso2.com/display/EIP/Document+Message"&gt;Document Message&lt;/a&gt; - request information from another service&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.wso2.com/display/EIP/Event+Message"&gt;Event Message&lt;/a&gt; - broadcast information to anyone listening on a given topic&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.wso2.com/display/EIP/Request-Reply"&gt;Request-Reply&lt;/a&gt; - make a request to another service and listen for a response&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this design in place, consider some real-life benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If the Node.js service experiences higher-than-expected usage, the cost to scale up to meet demands is isolated to the service and dedicated database.&lt;/li&gt;
&lt;li&gt;If any single service realizes that a data store change is preferred (such as SQL to NoSQL), the new design can be deployed with little (if any) impact on any of the other services—provided the RESTful API URIs are not changed.&lt;/li&gt;
&lt;li&gt;A change in any of the abstracted layer components (for example, using a new logging approach) can be made at the Kong Gateway layer and have no impact on the underlying services.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Starting in 2021, I have been trying to live by the following mission statement, which I feel can apply to any IT professional:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Focus your time on delivering features/functionality which extends the value of your intellectual property. Leverage frameworks, products, and services for everything else.”&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;J. Vester&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;While the primary objective of this article is to move toward a true microservice design that includes a dedicated database, Kong provides core aspects for a true microservice design that are scalable and easy to adopt. In fact, Kong Gateway allows developers to keep things DRY, introducing common components to reside in the distributed microservices abstraction layer.&lt;/p&gt;

&lt;p&gt;Remember, “microservices” includes the word “micro,” which is often defined as “extremely small.” It is important to keep this basic premise in mind during any microservice implementation.&lt;/p&gt;

&lt;p&gt;Feature developers utilize packages and classes to group their program code for supportability and maintainability. Within those classes, methods and functions are defined—often employing a rule that each block of code is small and easy to digest. To me, an ideal function or method is one that I can review without ever having to touch my mouse.&lt;/p&gt;

&lt;p&gt;Microservices should be an extension of the same rules programmers have been following for decades: keep things small, purpose-driven, and efficient … keep things “micro.”&lt;/p&gt;

&lt;p&gt;To reach that goal, the design must include the database.&lt;/p&gt;

&lt;p&gt;Have a really great day!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>database</category>
    </item>
    <item>
      <title>Go Concurrency Patterns - Pooling</title>
      <author>b0r</author>
      <pubDate>Mon, 13 Dec 2021 11:31:39 +0000</pubDate>
      <link>https://dev.to/b0r/go-concurrency-patterns-pooling-2ng5</link>
      <guid>https://dev.to/b0r/go-concurrency-patterns-pooling-2ng5</guid>
      <description>&lt;p&gt;To improve my Go Programming skills and become a better Go engineer, I have recently purchased an excellent on-demand education from &lt;a href="https://www.ardanlabs.com/education/"&gt;Ardan Labs&lt;/a&gt;. Materials are created by an expert Go engineer, &lt;a href="https://twitter.com/goinggodotnet"&gt;Bill Kennedy&lt;/a&gt;.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--fxHctJEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1108810000967892996/q5NMxGBG_normal.png" alt="Ardan Labs profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Ardan Labs
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @ardanlabs
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      An oldie but a goodie :) This video of &lt;a href="https://twitter.com/goinggodotnet"&gt;@goinggodotnet&lt;/a&gt; talking about struct types has been getting some play on YouTube! &lt;a href="https://twitter.com/hashtag/golang"&gt;#golang&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/RnkdmXoyEO"&gt;youtu.be/SjNuCurZ-CY&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:25 PM - 28 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1464978639355789317" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1464978639355789317" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1464978639355789317" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I have decide to record my process of learning how to write more idiomatic code, following Go best practices and design philosophies. &lt;/p&gt;

&lt;p&gt;This series of posts will describe concurrency patterns used for orchestration/signaling in Go via goroutines.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pooling-pattern"&gt;
  &lt;/a&gt;
  Pooling Pattern
&lt;/h2&gt;

&lt;p&gt;The main idea behind &lt;strong&gt;Pooling&lt;/strong&gt; pattern is to have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a channel that provides a signaling semantics

&lt;ul&gt;
&lt;li&gt;unbuffered channel is used to have a guarantee a goroutine has received a signal&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;multiple goroutines that pool that channel for work&lt;/li&gt;
&lt;li&gt;a goroutine that sends work via channel&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;In this example you are a &lt;code&gt;manager&lt;/code&gt;, and you hire a bunch of new &lt;code&gt;employees&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Employees&lt;/code&gt; don't know immediately what do to, and they wait for &lt;code&gt;manager&lt;/code&gt; to give them some work. The are looking at the channel &lt;code&gt;ch&lt;/code&gt; to see if there is some work to do.&lt;/p&gt;

&lt;p&gt;Once &lt;code&gt;manager&lt;/code&gt; finds some work for the &lt;code&gt;employees&lt;/code&gt;, it notifies them by sending a signal (&lt;code&gt;paper&lt;/code&gt;) via communication channel &lt;code&gt;ch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First available &lt;code&gt;employee&lt;/code&gt; that sees a signal from the channel &lt;code&gt;ch&lt;/code&gt;, takes and completes the work. &lt;/p&gt;

&lt;p&gt;After that &lt;code&gt;employee&lt;/code&gt; completes the work, he is once again available to do more work, and he starts waiting for a new signal on channel &lt;code&gt;ch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to try the example on &lt;a href="https://play.golang.com/p/pUNW8EcbCvv"&gt;Go Playground&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"time"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// make channel of type string which provides signaling semantics&lt;/span&gt;
    &lt;span class="c"&gt;// unbuffered channel provides a guarantee that the&lt;/span&gt;
    &lt;span class="c"&gt;// signal being sent is received&lt;/span&gt;
    &lt;span class="n"&gt;ch&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;chan&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;// number of goroutines to create, numCPU() is a good starting point&lt;/span&gt;
    &lt;span class="c"&gt;//g := runtime.NumCPU()&lt;/span&gt;
    &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;// a new goroutine is created for each employee&lt;/span&gt;
        &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;emp&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c"&gt;// employee waits for the signal that there is some work to do&lt;/span&gt;
                        &lt;span class="c"&gt;// all goroutines are blocked on the same channel `ch` recieve&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"employee %d : received signal : %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;emp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="c"&gt;// when all work is sent, manager notifies all employees by closing the channel&lt;/span&gt;
            &lt;span class="c"&gt;// once the channel is closed, employee breaks out of the for-range loop&lt;/span&gt;
            &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"employee %d : revieved shutdown signal&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;emp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// amount of work to be done&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;// when work is ready, we send signal from the manager to the employee&lt;/span&gt;
        &lt;span class="c"&gt;// sender (manager) has a guarantee that the worker (employee) has received the signal&lt;/span&gt;
        &lt;span class="c"&gt;// manager doesn't care about which employee received a signal,&lt;/span&gt;
        &lt;span class="c"&gt;// since all employees are capable of doing the work&lt;/span&gt;
        &lt;span class="n"&gt;ch&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;"paper"&lt;/span&gt;

        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"manager : sent signal :"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// when all work is sent the manages notifies all employees by closing the channel&lt;/span&gt;
    &lt;span class="c"&gt;// unbuffered channel provides a guarantee that all work has been sent&lt;/span&gt;
    &lt;span class="nb"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"manager : sent shutdown signal"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Second&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#result-1st-execution"&gt;
  &lt;/a&gt;
  Result (1st execution)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go run main.go

employee 2 : recieved signal : paper
manager : sent signal : 0
manager : sent signal : 1
manager : sent signal : 2
manager : sent signal : 3
employee 1 : recieved signal : paper
employee 1 : recieved signal : paper
employee 2 : recieved signal : paper
manager : sent signal : 4
manager : sent signal : 5
manager : sent signal : 6
employee 1 : recieved signal : paper
employee 1 : recieved signal : paper
employee 0 : recieved signal : paper
employee 2 : recieved signal : paper
manager : sent signal : 7
manager : sent signal : 8
manager : sent signal : 9
manager : sent shutdown signal
employee 0 : recieved signal : paper
employee 0 : revieved shutdown signal
employee 2 : revieved shutdown signal
employee 1 : recieved signal : paper
employee 1 : revieved shutdown signal
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, pooling concurrency pattern was described. In addition, simple implementation was provided.&lt;/p&gt;

&lt;p&gt;Readers are encouraged to check out excellent &lt;a href="https://www.ardanlabs.com/education/"&gt;Ardan Labs&lt;/a&gt; education materials to learn more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note
&lt;/h3&gt;

&lt;p&gt;Depending on the country you are coming from, &lt;a href="https://www.ardanlabs.com/education/"&gt;Ardan Labs&lt;/a&gt; education might be a little bit expensive. In that case you can always contact them and they will provide you a link to their scholarship form. &lt;/p&gt;

&lt;p&gt;Resources:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.ardanlabs.com/"&gt;Ardan Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pexels.com/photo/radio-telescope-against-sky-with-stars-6325001/"&gt;Cover image by Igor Mashkov from Pexels&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>go</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why mobile app development is important?</title>
      <author>Jhonth Smith</author>
      <pubDate>Mon, 13 Dec 2021 11:28:56 +0000</pubDate>
      <link>https://dev.to/jhonthsmith/why-mobile-app-development-is-important-26ja</link>
      <guid>https://dev.to/jhonthsmith/why-mobile-app-development-is-important-26ja</guid>
      <description>&lt;p&gt;In the current marketing scenarios, companies use all the strategies available that can help them to overcome the fierce competition. Having a mobile app can go a long way in helping you retain existing customers and acquire new ones at the same time. The development of mobile applications has become a conventional and essential need for a successful business. They meet the needs of the client and the entrepreneur, providing them with an effective marketing tool. A mobile app can make shopping easier for a customer, with secure payment portals and intuitive features. It also guarantees a user-friendly customer experience. It is also beneficial for business owners by providing a cheaper option of marketing and advertising their brand. Below is a list of benefits that explain the importance of hiring a mobile app developer or &lt;a href="https://www.franticpro.com/mobile-app-development/"&gt;mobile app development service&lt;/a&gt; for business owners.&lt;br&gt;
Importance&lt;br&gt;
• Cultivating customer loyalty&lt;br&gt;
With the emergence of mobile applications associated with a particular business, business owners have the opportunity to establish an immediate and direct connection with their customer base. Business owners can introduce coupons, discounts, and deals online, which are easily displayed in the application. It also helps to increase customer sales, as well as develop a sense of brand loyalty.&lt;br&gt;
• Strengthening brand value&lt;br&gt;
The key to the success of a good marketing campaign is to capture the customer's only attention. Developing a &lt;a href="https://www.franticpro.com/mobile-app-development/"&gt;mobile application&lt;/a&gt; can help to perpetuate this brand image with a lasting beneficial effect for customer loyalty.&lt;br&gt;
• Increasing Customer base&lt;br&gt;
Mobile applications can be of great help when the business acquires new customers. Since most apps are available for almost any mobile platform, this indirectly increases the reach of marketing. Products gain visibility as the number of potential customers increases exponentially.&lt;br&gt;
• Social media integration&lt;br&gt;
By embedding social media icons in mobile apps, users can share their responses on various social media platforms. Thus, a mobile application is also considered to be an effective marketing tool for businesses.&lt;br&gt;
• Saves time&lt;br&gt;
Mobile apps make life easier for customers by providing direct access and a simple purchasing process. They quickly get information about products and services that save them time.&lt;br&gt;
• Quick access to client data&lt;br&gt;
With mobile apps, you can quickly and easily access customer data. Even by viewing the app's evaluation section, companies have the opportunity to analyze areas for improvement, the quality of products and services, etc.&lt;/p&gt;

</description>
      <category>mobile</category>
      <category>android</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Useful JavaScript Array Methods</title>
      <author>Danish Saleem</author>
      <pubDate>Mon, 13 Dec 2021 11:22:40 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/useful-javascript-array-methods-4370</link>
      <guid>https://dev.to/mrdanishsaleem/useful-javascript-array-methods-4370</guid>
      <description>&lt;h2&gt;
  &lt;a href="#javascript-array"&gt;
  &lt;/a&gt;
  JavaScript Array
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Array&lt;/code&gt; are a big part of working with &lt;code&gt;JavaScript&lt;/code&gt; and there are many built in methods you can use to help you work with them.&lt;/p&gt;

&lt;p&gt;Cosinder this a &lt;code&gt;cheat sheet&lt;/code&gt; of some useful methods you will use over and over again!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concat"&gt;
  &lt;/a&gt;
  .concat()
&lt;/h2&gt;

&lt;p&gt;Merge two or more arrays together into a one new array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Array of shoppingList&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;drinks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Coffee&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pineapple Juice&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tea&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;snacks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Chocolate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Chips&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shoppingList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;drinks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snacks&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shoppingList&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Output: ["Coffee", "Pineapple Juice", "Tea", "Chocolate", "Chips"];&lt;/span&gt;

&lt;span class="c1"&gt;// Array of numbers&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;num3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#push"&gt;
  &lt;/a&gt;
  .push()
&lt;/h2&gt;

&lt;p&gt;Add one or more elements to the end of an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;colours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;purple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;colours&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colours&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Output: ["black", "purple", "white", "blue", "green"];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#unshift"&gt;
  &lt;/a&gt;
  .unshift()
&lt;/h2&gt;

&lt;p&gt;Add one or more elements to the beginning of an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;animals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cat&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;parrot&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;animals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unshift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rabbit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animals&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Output: ["rabbit", "dog", "cat", "parrot"];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pop"&gt;
  &lt;/a&gt;
  .pop()
&lt;/h2&gt;

&lt;p&gt;Remove the last element from an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;colours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;purple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;colours&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colours&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Output: ["black", "purple", "white"];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#shift"&gt;
  &lt;/a&gt;
  .shift()
&lt;/h2&gt;

&lt;p&gt;Remove the first element from an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;animals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rabbit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cat&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;parrot&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;animals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animals&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Output: ["dog", "cat", "parrot"];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sort"&gt;
  &lt;/a&gt;
  .sort()
&lt;/h2&gt;

&lt;p&gt;Sort the elements of an array in place.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Sorting an array in alphabetical order&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;months&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;January&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;February&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;March&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;months&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// Output: ["February", "January", "March"];&lt;/span&gt;

&lt;span class="c1"&gt;// Sorting an array of numbers&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// Output: [1, 100, 21, 30, 4]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#join"&gt;
  &lt;/a&gt;
  .join()
&lt;/h2&gt;

&lt;p&gt;Concatenate all the elements in an array into a new string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fire&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Air&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Water&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// Output: "Fire,Air,Water"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// Output: "Fire-Air-Water"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#includes"&gt;
  &lt;/a&gt;
  .includes()
&lt;/h2&gt;

&lt;p&gt;Determine whether an array includes a certain value among its entries.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;colours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;purple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pink&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colours&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pink&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;//Output: true&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colours&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;//Output: false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#filter"&gt;
  &lt;/a&gt;
  .filter()
&lt;/h2&gt;

&lt;p&gt;Create a new array with all elements that pass the test implemented by the provided function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mail&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gift&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;words&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Output:["test", "mail", "gift"];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#foreach"&gt;
  &lt;/a&gt;
  .forEach()
&lt;/h2&gt;

&lt;p&gt;Execute a provided function once for each entry in the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;46&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// Output:&lt;/span&gt;
&lt;span class="c1"&gt;// 7&lt;/span&gt;
&lt;span class="c1"&gt;// 12&lt;/span&gt;
&lt;span class="c1"&gt;// 20&lt;/span&gt;
&lt;span class="c1"&gt;// 38&lt;/span&gt;
&lt;span class="c1"&gt;// 74&lt;/span&gt;
&lt;span class="c1"&gt;// 48&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect 💜
&lt;/h3&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.instagram.com/mrdanishsaleem/"&gt;Instagram&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" alt="Buy Me a Coffee" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>AWS open source news and updates #93</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Mon, 13 Dec 2021 11:20:05 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-93-25ef</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-93-25ef</guid>
      <description>&lt;h2&gt;
  &lt;a href="#december-13th-2021-instalment-93"&gt;
  &lt;/a&gt;
  December 13th, 2021 - Instalment #93
&lt;/h2&gt;

&lt;p&gt;Newsletter #93. We took a week off last week to recover from re:Invent, so this week we have extensive coverage of the open source related news and announcements so be sure to check those out. This week we have some great new open source projects, from a project that will help you get started with data meshes, an alternative way to provide internet connectivity to those private subnets, a nice new CDK construct to quickly deploy single page applications and a cool IoT simulator solution which I know I am going to try out. On top of the re:Invent related posts, we have content covering Kubernetes, Karpenter, Flower, Grafana, Apache Spark, Greengrass v2 and more.&lt;/p&gt;

&lt;p&gt;Finally, before diving into the newsletter, make sure you check out the post and info on the Log4J rce vulnerability.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Log4j rce&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last week was dominated by news of the &lt;a href="https://www.fastly.com/blog/digging-deeper-into-log4shell-0day-rce-exploit-found-in-log4j"&gt;Apache Log4j rce vulnerability (CVE-2021-44228)&lt;/a&gt;, with the project maintainers and teams who have deployed log4j working non stop to mitigate and remediate applications and systems. David Nalley wrote &lt;a href="https://aws-oss.beachgeek.co.uk/16g"&gt;Hotpatch for Apache Log4j&lt;/a&gt; which provides guidance on what customers can do and introduces something the folks from the Amazon Coretto team spent some time building, a tool to hotpatch vulnerable log4j deployments. You can expect more announcements this week providing more updates, like this one from Kyle Davis - &lt;a href="https://aws-oss.beachgeek.co.uk/16h"&gt;Important: Update to OpenSearch 1.2.1&lt;/a&gt; essential reading if you use OpenSearch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Job Alert&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A fabulous opportunity has come up to join the open source team at AWS. What are we looking for? We are looking for someone who will be responsible for defining, leading, and contributing to the open source and community engagement content strategy for the services and technology teams across AWS. You will combine your passion and enthusiasm for cloud technology and open source with your unmatched creativity to generate content and support for AWS among key open source communities, industry opinion makers, and technologists.&lt;/p&gt;

&lt;p&gt;You will work closely with the product marketing leadership to translate the business priorities of the service teams into original content for a variety of audiences, including C-level, end users, developers, managers, and engineers.&lt;/p&gt;

&lt;p&gt;Ideally, you are already a recognisable figure in the open source ecosystem, in demand to contribute to technical and business publications, with an exemplary presence on social media.&lt;/p&gt;

&lt;p&gt;Here is the Job Spec, &lt;a href="https://aws-oss.beachgeek.co.uk/16e"&gt;Principal Evangelist, Open Source, Open Source Strategy &amp;amp; Marketing&lt;/a&gt; where you can read more and see how to apply.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Ryan Niksch, Sebastien Stormacq, Sean Tracey, Jeff Barr, Ajay Swamy, George Lenz, Omur Kirikci, Sascha Moellering, Virginia Chu, Manoj Shunmugam, Randy DeFauw, Channy Yun, Sama Bali, Jordan Gruber, Chris Fife, Alex Pulver, Marcia Villalba, Varadarajan Srinivasan, Jim Parker, Ramesh Jetty, Damon Cortesi, Mehul Y. Shah, and Abhishek Sinha.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-open-source-projects"&gt;
  &lt;/a&gt;
  Latest open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;aws-data-mesh-utils&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/16i"&gt;aws-data-mesh-utils&lt;/a&gt; this new repo is the AWS Data Mesh Helper library provides automation around the most common tasks that customers need to perform to implement a data mesh architecture on AWS. A data mesh on AWS uses a central AWS Account (the mesh account) to store the metadata associated with Data Products created by data Producers. This allows other AWS Accounts to act as Consumers, and to request Subscriptions, which must be approved by Producers. Upon approval, the approved grants are provided to the Consumer and can be imported into their AWS Account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NRbuG1L4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/aws-data-mesh-utils/blob/main/doc/architecture.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NRbuG1L4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/aws-data-mesh-utils/blob/main/doc/architecture.png%3Fraw%3Dtrue" alt="arch" width="880" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;fck-nat&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/16d"&gt;fck-nat&lt;/a&gt; if you are looking for alternatives to running NAT Gateways, then this open source project from Andrew Guenther may be just what you are looking for. This project, fck-nat offers a ready-to-use ARM and x86 based AMIs built on Amazon Linux 2 which can support up to 5Gbps NAT traffic on a t4g.nano instance. This project does not currently support high availability, and Andrew suggests you do not use this for production workloads. Take a look and if this is something you will find useful, why not contribute back to this project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cloudquery-policies&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/16f"&gt;cloudquery-policies&lt;/a&gt; if you use CloudQuery (an open-source cloud asset inventory tool powered by SQL), then this repo contains their AWS security &amp;amp; compliance policy packs that include CIS v1.2.0 and PCI DSS v3.2.1&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cdk-spa-deploy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/16c"&gt;cdk-spa-deploy&lt;/a&gt; with the CDK Construct Hub now GA, I came across this nice construct from Matt Coulter (yes, that Matt!) that makes deploying a single page website (Angular/React/Vue) to AWS S3 behind SSL/Cloudfront as easy as 5 lines of code. Plenty of examples, this one is on my todo list.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-compute-decision-tree&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/16b"&gt;aws-compute-decision-tree&lt;/a&gt; and interesting project from Servian that provides you with a decision tree to help you decide on the right AWS compute service for your needs. You can configure/change this to suit your own needs, so check it out and see if you might find this helpful within your organisation. There is an online version you can try out so you do not need to deploy anything.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;iot-device-simulator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/15u"&gt;iot-device-simulator&lt;/a&gt; this repository is the IoT Device Simulator, an open source solution that provides  a Graphical User Interface (GUI) based engine designed to enable customers to get started quickly assessing AWS IoT services without an existing pool of devices. The IoT Device Simulator helps effortlessly create and simulate thousands of connected devices that are defined by the customer. To help you get started, make sure you read &lt;a href="https://aws-oss.beachgeek.co.uk/15v"&gt;Optimize your IoT Services for Scale with IoT Device Simulator&lt;/a&gt; from Ajay Swamy and George Lenz. Excellent walkthrough.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EzsFp4JF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2021/12/08/Fig6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EzsFp4JF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2021/12/08/Fig6.png" alt="arch" width="880" height="415"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reinvent"&gt;
  &lt;/a&gt;
  re:Invent
&lt;/h3&gt;

&lt;p&gt;There were a number of open source related announcements from re:Invent last week. I have put this slide deck together that provides a nice summary of both the announcements in the run up to re:Invent as well as what was announced last week.&lt;/p&gt;

&lt;p&gt;This includes Amazon FSx for OpenZFS, new capabilities and features in Amazon FSx for Lustre, Karpenter, Serverless Kafka and EMR, Amazon DevOps Guru for RDS, new AWS SDKs for Kotlin, Rust and Swift, and AWS CDK.&lt;/p&gt;


&lt;div class="ltag_speakerdeck"&gt;
  &lt;iframe height="463" id="talk_frame_521dc0274b31421eb739ef3333ba8184" src="//speakerdeck.com/player/521dc0274b31421eb739ef3333ba8184" width="710"&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;You can download the deck from &lt;a href="https://aws-oss.beachgeek.co.uk/15l"&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We also published a number of supporting blog posts. Here are the relevant ones you should check out.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/15z"&gt;Best practices for discoverability of a construct library on Construct Hub&lt;/a&gt; from Alex Pulver&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/15m"&gt;How customer feedback shaped the AWS Cloud Development Kit version 2&lt;/a&gt; from Chris Fife&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/15n"&gt;Increasing development speed with CDK Watch&lt;/a&gt; from Calvin Combs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/15y"&gt;AWS BugBust sets the Guinness World Record for the largest bug fixing challenge&lt;/a&gt; from Sama Bali and Jordan Gruber&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/160"&gt;New – FreeRTOS Extended Maintenance Plan for Up to 10 Years&lt;/a&gt; from Channy Yun&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/161"&gt;Built for Builders: AWS and Open 3D Engine – Stable 21.11 Release&lt;/a&gt; from the Amazon Game Tech team&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/162"&gt;New – Amazon DevOps Guru for RDS to Detect, Diagnose, and Resolve Amazon Aurora-Related Issues using ML &lt;/a&gt;from Marcia Villalba&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/163"&gt;Enhanced Amazon S3 Integration for Amazon FSx for Lustre&lt;/a&gt; from Sebastien Stormacq&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/164"&gt;New – Amazon FSx for OpenZFS&lt;/a&gt; from Jeff Barr&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/166"&gt;Announcing Amazon EMR Serverless (Preview): Run big data applications without managing servers&lt;/a&gt; from Damon Cortesi, Mehul Y. Shah, and Abhishek Sinha&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/168"&gt;Managing ROSA subscriptions at scale&lt;/a&gt; from Ryan Niksch&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/169"&gt;New – Securely manage your AWS IoT Greengrass edge devices using AWS Systems Manager&lt;/a&gt; from Sean Tracey&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aws-and-community-blog-posts"&gt;
  &lt;/a&gt;
  AWS and Community blog posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Karpenter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Karpenter is an open source project that helps improve your application availability and cluster efficiency by rapidly launching right-sized compute resources in response to changing application load. Channy Yun has put together this post, &lt;a href="https://aws-oss.beachgeek.co.uk/167"&gt;Introducing Karpenter – An Open-Source High-Performance Kubernetes Cluster Autoscaler&lt;/a&gt; to show you how to get started. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gw5bGgNm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/23/2021-karpenter-diagram.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gw5bGgNm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/23/2021-karpenter-diagram.png" alt="arch" width="880" height="393"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Grafana&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon CloudWatch recently launched Metrics Insights (Preview) an SQL-based query engine that enables you to identify trends and patterns across millions of operational metrics in real-time. Omur Kirikci shows you how you can use Metrics Insights’ SQL based query engine on OpenSource Grafana to analyse and group your metrics at scale in real time, and quickly identify the operational issues to reduce mean-time to resolution in the post &lt;a href="https://aws-oss.beachgeek.co.uk/15o"&gt;Identify operational issues quickly by using Grafana and Amazon CloudWatch Metrics Insights (Preview)&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flower&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Flower (&lt;a href="https://aws-oss.beachgeek.co.uk/15p"&gt;flwr&lt;/a&gt;) is a framework for building federated learning systems. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/15q"&gt;Applying Federated Learning for ML at the Edge&lt;/a&gt;, Randy DeFauw walks you through a working example of federated learning in an IoT scenario using the Flower framework. Great post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JdqFxXGf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2021/12/08/Fig3-fed-ml.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JdqFxXGf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2021/12/08/Fig3-fed-ml.png" alt="arch" width="880" height="377"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Spark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Varadarajan Srinivasan, Jim Parker, and Ramesh Jetty have collaborated on this post, &lt;a href="https://aws-oss.beachgeek.co.uk/16a"&gt;How Acxiom reduced their model inference time from days to hours with Spark on Amazon EMR&lt;/a&gt; where they show you how Acxiom were able to drastically reduce the model inference duration from days to hours. Great read.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pUqKSdQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/c5b76da3e608d34edb07244cd9b875ee86906328/2021/11/22/Figure-2-Acxiom%25E2%2580%2599s-Amazon-EMR-architecture-for-model-inference-at-scale.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pUqKSdQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/c5b76da3e608d34edb07244cd9b875ee86906328/2021/11/22/Figure-2-Acxiom%25E2%2580%2599s-Amazon-EMR-architecture-for-model-inference-at-scale.png" alt="arch" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes and AWS Greengrass v2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/15k"&gt;Collecting data from edge devices using Kubernetes and AWS IoT Greengrass V2&lt;/a&gt; my good friend Sascha Moellering combines some of my favourite things as he describes how to set up an edge device like Raspberry Pi 4 to run k3s and deploy AWS IoT Greengrass V2 into Kubernetes. I shared this code repo in a previous newsletter (#90) so you can now use this blog to try this out for yourself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GNrPX8E2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/12/08/IoTGreen-3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GNrPX8E2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/12/08/IoTGreen-3.jpg" alt="arch" width="880" height="305"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Find out how to use managed node groups to upgrade Amazon Elastic Kubernetes Service (Amazon EKS) cluster nodes in parallel from 1.19 to 1.20 in the post, &lt;a href="!%5Bhttps://aws-oss.beachgeek.co.uk/15r%5D(https://aws-oss.beachgeek.co.uk/15r)"&gt;Automate Amazon EKS upgrades with infrastructure as code&lt;/a&gt; from  Virginia Chu and Manoj Shunmugam.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YfOwcWAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/12/virchu_automate_eks_upgrades_f1-603x1024.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YfOwcWAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/12/virchu_automate_eks_upgrades_f1-603x1024.png" alt="flow" width="603" height="1024"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other posts worth checking out&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/15s"&gt;AWS Deep Learning AMIs: New framework-specific DLAMIs for production complement the original multi-framework DLAMIs&lt;/a&gt; - check out AWS AMIs and the various ML frameworks available.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/15t"&gt;Secure end-to-end traffic on Amazon EKS using TLS certificate in ACM, ALB, and Istio&lt;/a&gt; - how to implement end-to-end encryption using a TLS certificate in AWS Certificate Manager (ACM), Application Load Balancer (ALB), and Istio in an Amazon EKS environment.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/165"&gt;Field Notes: Building a Data Service for Autonomous Driving Systems Development using Amazon EKS &lt;/a&gt;- shows you how to build a data service that can dynamically compose near real-time chunked data streams at scale using Kubernetes, Apache Kafka, Redshift, and FSx for Lustre&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/15w"&gt;How to use Application Load Balancer and Amazon Cognito to authenticate users for your Kubernetes web apps&lt;/a&gt; - a walkthrough on how to use Amazon Cognito to authenticate users for web apps running in an Amazon Elastic Kubernetes Services (Amazon EKS) cluster.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/15x"&gt;Introducing Custom Domain Names for AWS AppSync APIs&lt;/a&gt; - shows how you can now configure a single memorable domain name that works for both the GraphQL endpoint and real-time endpoint of an AppSync API.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;Make sure you check out all the new updates from re:Invent. In addition, we had these new releases and updates last week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Amazon Elastic Block Store (EBS) Container Storage Interface (CSI) driver is now available in Amazon Elastic Kubernetes Service (Amazon EKS) add-ons in preview, enabling you to use the Amazon EKS console, CLI, and API to install and manage the add-on. This release is in addition to existing support for the Amazon VPC CNI networking plugin, CoreDNS and kube-proxy, and makes it easier to define consistent Kubernetes clusters and keep them up to date using Amazon EKS. The EBS CSI driver provides a CSI interface used by container orchestrators to manage the lifecycle of Amazon EBS volumes. Availability in EKS add-ons in preview enables a simple experience for attaching persistent storage to an EKS cluster. The EBS CSI driver can now be installed, managed, and updated directly through the EKS console, CLI, and API. You can see available add-ons and compatible versions in the EKS API, select the version of the add-on you want to run on your cluster, and configure key settings such as the IAM role used by the add-on when it runs. Using EKS add-ons you can go from cluster creation to running applications in a single command and easily keep tooling in your cluster up to date.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Toolkit for VS Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The AWS Toolkit for VS Code now provides developers with convenient IDE functionality to connect to Amazon ECS containers and issue commands using Amazon ECS Exec. This allows VS Code users to directly interact with containers, such as running commands in or get a shell to an ECS container running on an Amazon EC2 instance or on AWS Fargate, without leaving their IDE. ECS Exec uses the AWS Systems Manager (SSM) Session Manager under the hood to establish a connection with the running container.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MariaDB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Relational Database Service (Amazon RDS) for MariaDB now supports MariaDB minor versions 10.5.13, 10.4.22, 10.3.32, and 10.2.41. We recommend that you upgrade to the latest minor versions to fix known security vulnerabilities in prior versions of MariaDB, and to benefit from the numerous bug fixes, performance improvements, and new functionality added by the MariaDB community.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-of-the-week"&gt;
  &lt;/a&gt;
  Video of the week
&lt;/h3&gt;

&lt;p&gt;Check out the open source sessions from re:Invent. They are &lt;a href="https://virtual.reinvent.awsevents.com/"&gt;now available on-demand&lt;/a&gt;, and you can view the deck above for info on the specific sessions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;No new events - watch this space for events in 2022. If you have an event you want me to publish here, please contact me and I will include it in this listing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>Introducing the "Breaking Changes" Podcast with Kin Lane</title>
      <author>Shruti Duge</author>
      <pubDate>Mon, 13 Dec 2021 11:15:09 +0000</pubDate>
      <link>https://dev.to/postman/introducing-breaking-changes-podcast-4mfo</link>
      <guid>https://dev.to/postman/introducing-breaking-changes-podcast-4mfo</guid>
      <description>&lt;p&gt;Hi everyone!&lt;/p&gt;

&lt;p&gt;The holiday season is right around the corner. ✨✨✨&lt;/p&gt;

&lt;p&gt;What could be better than warm pajamas, a nice hot cup of chocolate ☕, and podcasts🎙️?&lt;/p&gt;

&lt;p&gt;Whether you’re lying on the sofa 🛋️ or  going on a long road trip 🚘 or you've got the middle seat on a cross-country flight ✈️ 💺,we have something in store for you. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://www.postman.com/events/breaking-changes/"&gt;Breaking Changes&lt;/a&gt;&lt;/em&gt; covers the things you need to know about the industry, the business, and the technology that powers an API-first world. &lt;/p&gt;

&lt;p&gt;Each week on Breaking Changes, Postman Chief Evangelist Kin Lane hosts stellar guests from all across the API universe to discuss, debate, and solve the latest issues and topics around APIs.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rZfIh6kBIvE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In each episode of Breaking Changes, you'll:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get insights into the latest happenings in the API industry&lt;/li&gt;
&lt;li&gt;Learn from the experiences and API journeys of practitioners and organizations&lt;/li&gt;
&lt;li&gt;Discover new ways to think about API design, architecture, strategy, and developer experience&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ever more exciting news. We have introduced a new segment called &lt;em&gt;Breaking Changes tl;dr&lt;/em&gt;, where we deviate from our normal weekly interview to focus on a specific topic, providing bite-size episodes for busy professionals like you to tune into. &lt;/p&gt;

&lt;p&gt;The series will cover a diverse range of topics from across the world of APIs, breaking things down in ways that make APIs more accessible to a wider audience.&lt;/p&gt;

&lt;p&gt;You can listen to every Breaking Changes episodes on these podcast platforms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLM-7VG-sgbtA5ywMlGAYlPo_PYy6vdJ4O"&gt;Youtube &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://open.spotify.com/show/5ig80ZlBLiC2iXxql0s1q2"&gt;Spotify&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://podcasts.apple.com/us/podcast/breaking-changes/id1574147652"&gt;Apple Podcasts&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkLnBvZGJlYW4uY29tL2JyZWFraW5nY2hhbmdlcy9mZWVkLnhtbA=="&gt;Google Podcast&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://music.amazon.com/podcasts/ea40d8b4-8cbb-4061-b618-794c3bbbbd42/breaking-changes"&gt;Amazon Music &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.google.com/url?q=https://feed.podbean.com/breakingchanges/feed.xml&amp;amp;sa=D&amp;amp;source=docs&amp;amp;ust=1638470528888000&amp;amp;usg=AOvVaw0el4gQ5fXUW4tCFuvVOxQL"&gt;RSS Feed&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2jVTjNYZ82aq9jpfFiV8kc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Upcoming tl;dr episodes: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tl;dr 1: “The COVID Tracking Project API” with Julia Kodysh&lt;/li&gt;
&lt;li&gt;tl;dr 2: “ACCESS Act of 2021, Part 1” with Keir Lamont&lt;/li&gt;
&lt;li&gt;tl;dr 3: “ACCESS Act of 2021, Part 2” with Mark Nottingham &lt;/li&gt;
&lt;li&gt;tl;dr 4 - “Idempotency Header - Paypal” with Jayadeba Jena and Sanjay Dalal&lt;/li&gt;
&lt;li&gt;tl;dr 5 - “Level 3 REST” with Matt Bishop&lt;/li&gt;
&lt;li&gt;tl;dr 6 - “OAuth, OpenID, and FAPI” with Torsten Lodderstedt&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So bring your API enthusiasm, and join us on the next Breaking Changes. Subscribe to the show and we'll notify you about upcoming episodes. &lt;/p&gt;

&lt;p&gt;PS: We’re new here and excited to be part of the community. &lt;/p&gt;

&lt;p&gt;Hit ⭐️ or show ❤️ if you like an episode and leave your thoughts in the comments below.&lt;/p&gt;

</description>
      <category>podcast</category>
      <category>news</category>
      <category>webdev</category>
      <category>leadership</category>
    </item>
    <item>
      <title>Learn Flutter Responsive UI by Building WhatsApp Clone</title>
      <author>Rivaan Ranawat</author>
      <pubDate>Mon, 13 Dec 2021 11:15:04 +0000</pubDate>
      <link>https://dev.to/rivaanranawat/learn-flutter-responsive-ui-by-building-whatsapp-clone-1308</link>
      <guid>https://dev.to/rivaanranawat/learn-flutter-responsive-ui-by-building-whatsapp-clone-1308</guid>
      <description>&lt;p&gt;Hey everyone,&lt;/p&gt;

&lt;p&gt;I've made a tutorial that follows through the process of designing a Responsive WhatsApp wherein it looks like the Native WhatsApp app on small screen size and WhatsApp Web on bigger.&lt;/p&gt;

&lt;p&gt;Technology Used: Flutter&lt;br&gt;
Prerequisites: Basic Knowledge of Dart &amp;amp; Flutter&lt;/p&gt;

&lt;p&gt;Link to the tutorial: &lt;a href="https://youtu.be/g1hmeP8WZHU"&gt;https://youtu.be/g1hmeP8WZHU&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me know if you have any doubts. Would appreciate any suggestions to improve video quality!&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Made a program that gives you the average of your school mark</title>
      <author>Mohammad Alsuwaidi</author>
      <pubDate>Mon, 13 Dec 2021 11:06:14 +0000</pubDate>
      <link>https://dev.to/tupac/made-a-program-that-gives-you-the-average-of-your-school-mark-4g7b</link>
      <guid>https://dev.to/tupac/made-a-program-that-gives-you-the-average-of-your-school-mark-4g7b</guid>
      <description>&lt;p&gt;i made this program and i want help to make it better i know i can but i don't know how i feel like the code is way too long&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

import time
import os

task = float(input("Enter how many classes you take: "))
if task == 1:
    a = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    print "Your average is: ", a, "%"
    os.system("say %s" % a), os.system("say %s" % "Percent")
elif task == 2:
    a = float(input("Enter your grade: "))
    print "last grade"
    b = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    c = (a + b) / task
    print "Your average is: ", c, "%"
    os.system("say %s" % c), os.system("say %s" % "Percent")
elif task == 3:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    print "last grade"
    c = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    d = (a + b + c) / task
    print "Your average is: ", d, "%"
    os.system("say %s" % d), os.system("say %s" % "Percent")
elif task == 4:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    c = float(input("Enter your grade: "))
    print "last grade"
    d = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    e = (a + b + c + d) / task
    print "Your average is: ", e, "%"
    os.system("say %s" % e), os.system("say %s" % "Percent")
elif task == 5:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    c = float(input("Enter your grade: "))
    d = float(input("Enter your grade: "))
    print "last grade"
    e = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    f = (a + b + c + d + e) / task
    print "Your average is: ", f, "%"
    os.system("say %s" % f), os.system("say %s" % "Percent")
elif task == 6:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    c = float(input("Enter your grade: "))
    d = float(input("Enter your grade: "))
    e = float(input("Enter your grade: "))
    print "last grade"
    f = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    h = (a + b + c + d + e + f) / task
    print "Your average is: ", h, "%"
    os.system("say %s" % h), os.system("say %s" % "Percent")
elif task == 7:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    c = float(input("Enter your grade: "))
    d = float(input("Enter your grade: "))
    e = float(input("Enter your grade: "))
    f = float(input("Enter your grade: "))
    print "last grade"
    h = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    i = (a + b + c + d + e + f + h) / task
    print "Your average is: ", i, "%"
    os.system("say %s" % i), os.system("say %s" % "Percent")
elif task == 8:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    c = float(input("Enter your grade: "))
    d = float(input("Enter your grade: "))
    e = float(input("Enter your grade: "))
    f = float(input("Enter your grade: "))
    h = float(input("Enter your grade: "))
    print "last grade"
    i = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    j = (a + b + c + d + e + f + h + i) / task
    print "Your average is: ", j, "%"
    os.system("say %s" % j), os.system("say %s" % "Percent")
elif task == 9:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    c = float(input("Enter your grade: "))
    d = float(input("Enter your grade: "))
    e = float(input("Enter your grade: "))
    f = float(input("Enter your grade: "))
    h = float(input("Enter your grade: "))
    i = float(input("Enter your grade: "))
    print "last grade"
    j = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    k = (a + b + c + d + e + f + h + i + j) / task
    print "Your average is: ", k, "%"
    os.system("say %s" % k), os.system("say %s" % "Percent")
elif task == 10:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    c = float(input("Enter your grade: "))
    d = float(input("Enter your grade: "))
    e = float(input("Enter your grade: "))
    f = float(input("Enter your grade: "))
    h = float(input("Enter your grade: "))
    i = float(input("Enter your grade: "))
    j = float(input("Enter your grade: "))
    print "last grade"
    k = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    l = (a + b + c + d + e + f + h + i + j + k) / task
    print "Your average is: ", l, "%"
    os.system("say %s" % l), os.system("say %s" % "Percent")
elif task == 11:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    c = float(input("Enter your grade: "))
    d = float(input("Enter your grade: "))
    e = float(input("Enter your grade: "))
    f = float(input("Enter your grade: "))
    h = float(input("Enter your grade: "))
    i = float(input("Enter your grade: "))
    j = float(input("Enter your grade: "))
    k = float(input("Enter your grade: "))
    print "last grade"
    l = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    m = (a + b + c + d + e + f + h + i + j + k + l) / task
    print "Your average is: ", m, "%"
    os.system("say %s" % m), os.system("say %s" % "Percent")
elif task == 12:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    c = float(input("Enter your grade: "))
    d = float(input("Enter your grade: "))
    e = float(input("Enter your grade: "))
    f = float(input("Enter your grade: "))
    h = float(input("Enter your grade: "))
    i = float(input("Enter your grade: "))
    j = float(input("Enter your grade: "))
    k = float(input("Enter your grade: "))
    l = float(input("Enter your grade: "))
    print "last grade"
    m = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    n = (a + b + c + d + e + f + h + i + j + k + l + m) / task
    print "Your average is: ", n, "%"
    os.system("say %s" % n), os.system("say %s" % "Percent")
elif task == 13:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    c = float(input("Enter your grade: "))
    d = float(input("Enter your grade: "))
    e = float(input("Enter your grade: "))
    f = float(input("Enter your grade: "))
    h = float(input("Enter your grade: "))
    i = float(input("Enter your grade: "))
    j = float(input("Enter your grade: "))
    k = float(input("Enter your grade: "))
    l = float(input("Enter your grade: "))
    m = float(input("Enter your grade: "))
    print "last grade"
    n = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    o = (a + b + c + d + e + f + h + i + j + k + l + m + n) / task
    print "Your average is: ", o, "%"
    os.system("say %s" % o), os.system("say %s" % "Percent")
elif task == 14:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    c = float(input("Enter your grade: "))
    d = float(input("Enter your grade: "))
    e = float(input("Enter your grade: "))
    f = float(input("Enter your grade: "))
    h = float(input("Enter your grade: "))
    i = float(input("Enter your grade: "))
    j = float(input("Enter your grade: "))
    k = float(input("Enter your grade: "))
    l = float(input("Enter your grade: "))
    m = float(input("Enter your grade: "))
    n = float(input("Enter your grade: "))
    print "last grade"
    o = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    p = (a + b + c + d + e + f + h + i + j + k + l + m + n + o) / task
    print "Your average is: ", p, "%"
    os.system("say %s" % p), os.system("say %s" % "Percent")
elif task == 15:
    a = float(input("Enter your grade: "))
    b = float(input("Enter your grade: "))
    c = float(input("Enter your grade: "))
    d = float(input("Enter your grade: "))
    e = float(input("Enter your grade: "))
    f = float(input("Enter your grade: "))
    h = float(input("Enter your grade: "))
    i = float(input("Enter your grade: "))
    j = float(input("Enter your grade: "))
    k = float(input("Enter your grade: "))
    l = float(input("Enter your grade: "))
    m = float(input("Enter your grade: "))
    n = float(input("Enter your grade: "))
    o = float(input("Enter your grade: "))
    print "last grade"
    p = float(input("Enter your grade: "))
    print "calculating...."
    time.sleep(1)
    q = (a + b + c + d + e + f + h + i + j + k + l + m + n + o + p) / task
    print "Your average is: ", q, "%"
    os.system("say %s" % q), os.system("say %s" % "Percent")

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Open-Source Exploitation</title>
      <author>David Whitney</author>
      <pubDate>Mon, 13 Dec 2021 10:58:46 +0000</pubDate>
      <link>https://dev.to/david_whitney/open-source-exploitation-5dpj</link>
      <guid>https://dev.to/david_whitney/open-source-exploitation-5dpj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#combative-title"&gt;
  &lt;/a&gt;
  Combative title.
&lt;/h2&gt;

&lt;p&gt;I don’t have a title for this that works.&lt;/p&gt;

&lt;p&gt;It’s horrible, it’s difficult, and it’s because all of the titles sound so relentlessly negative that I honestly don’t want to use them. I promise this isn’t about being negative, it’s about the work we have to do to be better as an industry. As someone that doesn’t believe in hills, or like walking up them, or death, or dying, this, I think, is probably the hill I’m going to die on.&lt;/p&gt;

&lt;p&gt;I want to talk about how open source has in the most cases, been turned into exploitation by the biggest organisations in the world. How it’s used to extricate free labour from you, and why this is fundamentally a bad thing. I’m going to talk about how we can do better. I’m going to talk about what needs to change to make software, and especially open-source software – something I love dearly – survive.&lt;/p&gt;

&lt;p&gt;Because right now, open-source is in the most precarious place it’s ever been in its entire existence, and I feel like hardly anyone is talking about it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-discourse-is-dead"&gt;
  &lt;/a&gt;
  The Discourse Is Dead
&lt;/h2&gt;

&lt;p&gt;Before I start with the gory details, I want to talk about loving things.&lt;/p&gt;

&lt;p&gt;More importantly, let’s talk about how it’s important to understand that you can be critical of something that you love because you want it to be better, not because you want to harm it.&lt;/p&gt;

&lt;p&gt;I’ve been building open-source software since the actual 1990s. When the internet was a village, and everything was tiny. When I was tiny. But it’s important to understand that on any journey of maturity, the techniques, opinions, and approaches that get you from A to B, are not necessarily the things that you’re going to need to get you from B to C.&lt;/p&gt;

&lt;p&gt;People frequently struggle with this fact. Humans are beautiful and oft simple creatures that presume because something has worked before, it’ll work again, regardless of the changing context around us.&lt;/p&gt;

&lt;p&gt;As technologists, and an industry, we’re going to have to embrace this if we want open source to survive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-source-won-the-fight"&gt;
  &lt;/a&gt;
  Open Source Won the Fight
&lt;/h2&gt;

&lt;p&gt;At this point we all know this to be true.&lt;/p&gt;

&lt;p&gt;You probably use Visual Studio Code at the very least as a text editor.&lt;/p&gt;

&lt;p&gt;As of 2018 40% of VMs on Azure were in Linux.&lt;/p&gt;

&lt;p&gt;Open source won the hearts and minds of people by telling them that software could and should be free.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-free-really-mean"&gt;
  &lt;/a&gt;
  What does free really mean?
&lt;/h2&gt;

&lt;p&gt;While the GPL and its variants – were probably not the first permissive and free software licenses – they were the licenses that rapidly gained mindshare with the rising popularity of Linux in the late 90s.&lt;/p&gt;

&lt;p&gt;Linux, really, was the tip of the spear that pushed open-source software into the mainstream, and it’s GPL license was originally described by the Free Software Foundation as “free as in speech, not free as in beer”. A confounding statement that a lot of people struggled to understand.&lt;/p&gt;

&lt;p&gt;So what does the GPL really mean? In simple terms, if you use source code available under its license, you need to make your changes public for other people to use. This is because the FSF promoted “software freedoms” – literally, the right of software to be liberated, so that it’s users could modify, inspect, and make their own changes to it.&lt;/p&gt;

&lt;p&gt;A noble goal, which shows its lineage as the license used to build a Unix clone that was supposed to be freely available to all – a goal centred around people sharing source code at local computer clubs.&lt;/p&gt;

&lt;p&gt;It’s important to stress that “free” never meant “free from cost”. It always meant “free as in freedom” – and in fact, much of the original literature focuses on this by describing software that is “free from cost” as “gratis”.&lt;/p&gt;

&lt;p&gt;From the FSF FAQs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Does free software mean using the GPL? &lt;/p&gt;

&lt;p&gt;Not at all—there are many other free software licenses. We have an incomplete list. Any license that provides the user certain specific freedoms is a free software license.&lt;/p&gt;

&lt;p&gt;Why should I use the GNU GPL rather than other free software licenses? (#WhyUseGPL)&lt;/p&gt;

&lt;p&gt;Using the GNU GPL will require that all the released improved versions be free software. This means you can avoid the risk of having to compete with a proprietary modified version of your own work. However, in some special situations it can be better to use a more permissive license.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#but-it-wasnt-that-version-of-free-software-that-really-won"&gt;
  &lt;/a&gt;
  But it wasn’t that version of free software that really won
&lt;/h2&gt;

&lt;p&gt;Despite Linux, and despite early and limited forays into open source by organisations like RedHat the strong copyleft licenses of the GPL were not the reason open-source software is thriving in the market today.&lt;/p&gt;

&lt;p&gt;They’re certainly not the reasons ultra-mega-corps like Microsoft, or Amazon, or Google now champion open source.&lt;/p&gt;

&lt;p&gt;The widespread adoption of open-source software in the enterprise is directly related to the MIT license, and the Apache – “permissive” licenses, which don’t force people that build on top of software to re-share their modifications back to the wider communities.&lt;/p&gt;

&lt;p&gt;Permissive licensing allows individuals or organisations to take your work, build on top of it, and even operate these modified copies of a work for profit.&lt;/p&gt;

&lt;p&gt;Much like the GPL, the aim of open source was not to restrict commercial exploitation, but to ensure the freedom of the software itself. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-benefits-from-permissive-licensing"&gt;
  &lt;/a&gt;
  Who benefits from permissive licensing?
&lt;/h2&gt;

&lt;p&gt;This is a trick question really – because in any situation where there is a power imbalance – let’s say, between the four or five largest organisations in the world, and, some person throwing some code on the internet, the organisation is always the entity that will benefit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#opensource-became-popular-in-enterprise-because-of-permissive-licenses"&gt;
  &lt;/a&gt;
  Open-Source became popular in enterprise because of permissive licenses
&lt;/h2&gt;

&lt;p&gt;Without wanting to sound like a naysayer – because I assure you, I deeply love open-source, and software freedom, and the combinatorial value that adds to teaching, and our peers, and each other, I cannot say loud enough:&lt;/p&gt;

&lt;p&gt;Multi-national organisations do not give a single solitary fuck about you.&lt;/p&gt;

&lt;p&gt;Businesses do not care about you.&lt;/p&gt;

&lt;p&gt;But you know what they do care about? They care about free “value” that they are able to commercially exploit. The wide proliferation of software in businesses is a direct result of licenses like the Apache license, and the MIT license being leveraged into closed source, proprietary and for-profit work.&lt;/p&gt;

&lt;p&gt;Want to test the theory?&lt;/p&gt;

&lt;p&gt;Go into your office tomorrow and try adding some GPL’d code to your companies' applications and see how your line manager responds.&lt;/p&gt;

&lt;p&gt;Permissive licenses explicitly and without recourse shift the balance of power towards large technical organisations and away from individual authors and creators. They have the might to leverage code, they have the capability to build upon it, and they have the incentive and organisational structures to profit from doing so.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open-source software took hold in the enterprise because it allowed itself to be exploited.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#oh-come-on-exploited-thats-a-bit-much-isnt-it"&gt;
  &lt;/a&gt;
  Oh come on, exploited? That’s a bit much isn’t it?
&lt;/h2&gt;

&lt;p&gt;Nope. It’s entirely accurate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;exploitation (noun) · exploitations (plural noun)&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;the action or fact of treating someone unfairly in order to benefit from their work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;"the exploitation of migrant workers"&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the action of making use of and benefiting from resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;"the Bronze Age saw exploitation of gold deposits"&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the fact of making use of a situation to gain unfair advantage for oneself.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;"they are shameless in their exploitation of the fear of death"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oh wow, that’s got such a negative slant though, surely that’s not fair?&lt;/p&gt;

&lt;p&gt;Surely people are smarter than the let their work just get leveraged like this?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-internet-runs-on-exploited-and-unpaid-labour"&gt;
  &lt;/a&gt;
  The internet runs on exploited and unpaid labour
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://xkcd.com/2347/"&gt;XKCD is always right&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yFZrtRQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibyuv5li1v88m8wg0263.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yFZrtRQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibyuv5li1v88m8wg0263.png" alt="XKCD Dependency_x2" width="770" height="978"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is just the truth. It’s widely reported. The vast majority of open source projects aren’t funded. Even important ones.&lt;/p&gt;

&lt;p&gt;There is no art without patronage. None. The only successful open source projects in the world are either a) backed by enormous companies that use them for strategic marketing and product positioning advantage OR b) rely on the exploitation of free labour for the gain of organisations operating these products as services.&lt;/p&gt;

&lt;p&gt;I can see you frothing already – “but GitHub has a donations thing!”, “what about Patreon!”, “I donated once, look!”.&lt;/p&gt;

&lt;p&gt;And I see you undermine your own arguments. We’ve all watched people burn out. We’ve watched people trying to do dual-licensing get verbally assaulted by their own peers for not being “free enough for them”. We’ve watched people go to the effort of the legal legwork to sell support contracts and have single-digit instances of those contracts sold.&lt;/p&gt;

&lt;p&gt;We’ve seen packages with 20+ million downloads languish because nobody is willing to pay for the work. It’s a hellscape. It victimises creators.&lt;/p&gt;

&lt;p&gt;I would not wish a successful open-source project on anyone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-ask-reddit"&gt;
  &lt;/a&gt;
  Let’s ask reddit
&lt;/h2&gt;

&lt;p&gt;(Never ask reddit)&lt;/p&gt;

&lt;p&gt;I recently made the observation in a reddit thread that it’s utterly wild that I can stream myself reading an open-source codebase on YouTube and people will happily allow me to profit from it, but the open-source community has become so wrongheaded that the idea of charging for software is anathema to them.&lt;/p&gt;

&lt;p&gt;Let’s get some direct quotes:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Ahh, so you hate gcc and linux too, since they're developed by and for companies?”&lt;/p&gt;

&lt;p&gt;“Arguing against free software? What year is it?!”&lt;/p&gt;

&lt;p&gt;“If it’s free, why wouldn’t it be free to everyone? That includes organizations. I’m honestly not clear what you’re suggesting, specifically and logistically.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Obviously I was downvoted to oblivion because people seemed to interpret “perhaps multinational organisations should pay you for your work” as “I don’t think software freedom is good”.&lt;/p&gt;

&lt;p&gt;But I was more astonished by people suggesting that charging for software was somehow in contradiction with the “ethos” of open source, when all that position really shows is an astonishing lack of literacy of what open source really means.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lars-ulrich-was-right"&gt;
  &lt;/a&gt;
  Lars Ulrich Was Right
&lt;/h2&gt;

&lt;p&gt;In 1999 Napster heralded the popularisation of peer-to-peer file sharing networks. And Metallica litigated and were absolutely vilified for doing so.&lt;/p&gt;

&lt;p&gt;The music business had become a corporate fat cat, nickel and diming everyone with exorbitant prices for CDs (£20+ for new releases!), bands were filthy rich and record executives more-so.&lt;br&gt;
And we all cried – “what do Metallica know about this! They’re rich already! We just want new music!”.&lt;/p&gt;

&lt;p&gt;I spent my mid-teens pirating music on Napster, and AudioGalaxy, and Limewire, and Kazaa, and Direct Connect, and and and and and and. And you know what? If anyone had spent time listening to what Lars Ulrich (Metallica’s drummer) was actually saying at the time, they’d realise he was absolutely, 100% correct, and in the two decades since has been thoroughly vindicated.&lt;/p&gt;

&lt;p&gt;I read an interview with him recently, where he looks back on it – and he’s reflective. What he actually said at the time was “We’re devaluing the work of musicians. It doesn’t affect me, but it will affect every band that comes after me. I’m already a multi-millionaire. File sharing devalues the work, and once it’s done, it can never be undone.”&lt;/p&gt;

&lt;p&gt;And he was right.&lt;/p&gt;

&lt;p&gt;After ~1999, the music industry was never the same. Small touring bands that would make comfortable livings scrape by in 2020. Niche and underground genres, while more vibrant than ever, absolutely cannot financially sustain themselves. It doesn’t scale. We devalued the work by giving it all away.&lt;/p&gt;

&lt;p&gt;And when you give it all away, the only people that profit are the large organisations that are in power.&lt;/p&gt;

&lt;p&gt;Spotify, today, occupies the space that music labels once did, a vastly profitable large organisations while artists figuratively starve.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-are-here"&gt;
  &lt;/a&gt;
  YOU ARE HERE
&lt;/h2&gt;

&lt;p&gt;I wish I had the fine wine and art collection of Ulrich, but forgive me for feeling a little bit like I’m standing here desperately hoping that people listen to this message.&lt;br&gt;
Because we are here, right now.&lt;/p&gt;

&lt;p&gt;I love open-source, just like Lars loved tape trading and underground scenes, but the ways in which we allow it to be weaponised is a violence. It doesn’t put humans, maintainers, creators and authors at its centre – instead, it puts organisational exploitation as the core goal.&lt;/p&gt;

&lt;p&gt;We all made a tragic mistake in thinking that the ownership model that was great for our local computing club could scale to plant-sized industry.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-did-we-get-here"&gt;
  &lt;/a&gt;
  How did we get here?
&lt;/h2&gt;

&lt;p&gt;Here’s the scariest part, really.&lt;br&gt;
We got here because this is what we wanted to do.&lt;br&gt;
I did this. You did this. We all made mistakes.&lt;/p&gt;

&lt;p&gt;I’ve spent the last decade advocating for the adoption of open-source in mid-to-large organisations.&lt;/p&gt;

&lt;p&gt;I, myself, sat and wrote policies suggesting that while we needed to adopt and contribute if we could (largely, organisations never do) to open-source for both strategic and marketing benefit, that we really should only look at permissive licensed software, because anything else would incur cost at best, and force us to give away our software at worst.&lt;/p&gt;

&lt;p&gt;And god, was I dead wrong.&lt;/p&gt;

&lt;p&gt;I should’ve spent that time advocating that we licensed dual-licensed software. That we bought support contracts. That we participated in copyleft software and gave back to the community.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I was wrong, and I’m sorry, I let you all down.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#im-not-the-only-one"&gt;
  &lt;/a&gt;
  I’m not the only one
&lt;/h2&gt;

&lt;p&gt;Every time a small organisation or creator tries to license their software in a way that protects them from the exploitation of big business – like Elastic, or recently Apollo, or numerous others over the years – the community savages them, without realising that it’s the community savaging itself.&lt;/p&gt;

&lt;p&gt;We need to be better at supporting each other, at knowing whenever a creator cries burn-out, or that they can’t pay rent in kudos, or that they need to advertise for work in their NPM package, that they mean it. That it could easily be you in that position.&lt;/p&gt;

&lt;p&gt;We need new licenses, and a new culture, which prioritises the freedom of people from exploitation, over the freedom of software.&lt;/p&gt;

&lt;p&gt;I want you to get paid. I want you to have nice things. I want you to work sustainably. I want a world where it’s viable for smart people to build beautiful things and make a living because of it.&lt;/p&gt;

&lt;p&gt;If we must operate inside a late-stage-capitalistic hellhole, I want it to be on our terms.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-companies-ever-ethically-interact-with-opensource"&gt;
  &lt;/a&gt;
  Can companies ever ethically interact with open-source?
&lt;/h2&gt;

&lt;p&gt;Absolutely yes.&lt;/p&gt;

&lt;p&gt;And here’s a little bit of light, before I talk about what we need to do the readdress this imbalance.&lt;/p&gt;

&lt;p&gt;There are companies that do good work in open-source, and fund it well. They all have reasons for doing so, and even some of the biggest players have reasonably ethical open-source products, but they always do it for marketing position, and for mindshare, and ultimately, to sell products and services and that’s ok.&lt;/p&gt;

&lt;p&gt;If we’re to interact with these organisations, there is nothing wrong with taking and using software they make available, for free, but remember that your patronage is always the product.&lt;br&gt;
Even the projects that you may perceive to be “independent”, like Linux, all have funding structures or staff provided from major organisations.&lt;/p&gt;

&lt;p&gt;The open-source software that you produce is not the same kind of open-source software that they do, and it’s foolish to perceive it to be the same thing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-we-change-the-status-quo"&gt;
  &lt;/a&gt;
  How can we change the status quo?
&lt;/h2&gt;

&lt;p&gt;We need both better approaches, and better systems, along with the cooperation of all the major vendors to really make a dent in this problem.&lt;/p&gt;

&lt;p&gt;It will not be easy. But there’s a role for all of us in this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#support-creators"&gt;
  &lt;/a&gt;
  Support creators
&lt;/h2&gt;

&lt;p&gt;This is the easiest, and the most free of all the ways we’ll solve this problem.&lt;/p&gt;

&lt;p&gt;The next time each of you is about to send a shitty tweet because Docker desktop made delaying updates a paid feature, perhaps, just for a second, wonder why they might be doing that.&lt;/p&gt;

&lt;p&gt;The next time you see a library you like adopting an “open-core” licensing model, where the value-added features, or the integrations are paid for features – consider paying for the features.&lt;/p&gt;

&lt;p&gt;Whenever a maintainer asks for support or contributions on something you use, contribute back.&lt;/p&gt;

&lt;p&gt;Don’t be entitled, don’t shout down your peers, don’t troll them for trying to make a living. If we all behaved like this, the software world would be a lot kinder.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rehabilitate-package-management"&gt;
  &lt;/a&gt;
  Rehabilitate package management
&lt;/h2&gt;

&lt;p&gt;I think it’s table stakes for the next iteration of package managers and component sharing platforms to support billing. I’d move to a platform that put creator sustainability at its heart at a moment’s notice.&lt;/p&gt;

&lt;p&gt;I have a theory that more organisations would pay for software if there were existing models that supported or allowed it. Most projects couldn’t issue an invoice, or pay taxes, or accept credit cards, if they tried.&lt;/p&gt;

&lt;p&gt;Our next-generation platforms need to support this for creator sustainability. We’re seeing the first steps towards these goals with GitHub sponsorships, and nascent projects like SDKBin – the “NuGet, but paid” distribution platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#petition-platform-vendors"&gt;
  &lt;/a&gt;
  Petition platform vendors
&lt;/h2&gt;

&lt;p&gt;A step up from that? I want to pay for libraries that I use in my Azure bill. In my AWS bill. In my GCP bill.&lt;/p&gt;

&lt;p&gt;While I’ve railed against large organisations leveraging open-source throughout, large organisations aren’t fundamentally bad, immoral, or evil, I just believe they operate in their best interest. The first platform that lets me sell software components can have their cut too. That’s fair. That’s help.&lt;/p&gt;

&lt;p&gt;I think this would unlock a whole category of software sales that just doesn’t exist trivially in the market today. Imagine if instead of trying to work through some asinine procurement process, you could just add NuGet, or NPM, or Cargo packages and it’ll be accounted for and charged appropriately by your cloud platform vendor over a private package feed.&lt;/p&gt;

&lt;p&gt;This is the best thing a vendor could do to support creators – they could create a real marketplace. One that’s sustainable for everyone inside of it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keep-fighting-for-free-software"&gt;
  &lt;/a&gt;
  Keep fighting for free software
&lt;/h2&gt;

&lt;p&gt;For users! For teachers! For your friends!&lt;/p&gt;

&lt;p&gt;I feel like I need to double down on what I said at the start. I love open-source software dearly. I want it to survive. But we must understand that what got it to a place of success is something that is currently threatening its sustainable existence.&lt;/p&gt;

&lt;p&gt;Open-source doesn’t have to a proxy for the exploitation of the individual.&lt;/p&gt;

&lt;p&gt;It can be ethical.&lt;br&gt;
It can survive this.&lt;/p&gt;

&lt;p&gt;I do not want to take your source code away from you, I just desperately want to have enough people think critically about it, that when it’s your great new idea that you think you can do something meaningful with, that it’s you that can execute on and benefit from the idea.&lt;/p&gt;

&lt;p&gt;By all means give it away to your peers but spare no pity for large organisations that want to profit from your work at your expense.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#support-the-scene"&gt;
  &lt;/a&gt;
  Support the scene
&lt;/h2&gt;

&lt;p&gt;In music, there’s the idea of supporting our scene, our heritage, the shared place where “the art” comes from.&lt;/p&gt;

&lt;p&gt;This is our culture.&lt;/p&gt;

&lt;p&gt;Pay your friends for their software and accept it gracefully if they want to give it you for free.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#footnotes-see-this-live"&gt;
  &lt;/a&gt;
  Footnotes - see this live!
&lt;/h2&gt;

&lt;p&gt;An expanded version of this piece is available as a conference talk - if you would like me to come and talk to your user-group or conference about ethics and open-source, please get in touch.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>career</category>
      <category>webdev</category>
      <category>webmonetization</category>
    </item>
    <item>
      <title>The Dark Side of Software Development </title>
      <author>vibalijoshi</author>
      <pubDate>Mon, 13 Dec 2021 10:57:17 +0000</pubDate>
      <link>https://dev.to/vibalijoshi/the-dark-side-of-software-development-441e</link>
      <guid>https://dev.to/vibalijoshi/the-dark-side-of-software-development-441e</guid>
      <description>&lt;p&gt;Software engineering is one of the most intriguing and in-demand occupations right now. You've probably heard about how wonderful software development is, and I agree that it excites me every time I hear about it. However, I suppose we should be aware of the flip side of the coin because let's face it no job is perfect. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y2UA5V8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fvpd3zp2ufx9s9qsv7x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y2UA5V8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fvpd3zp2ufx9s9qsv7x.png" alt="Image description" width="600" height="632"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I conducted a Twitter space recently on this topic where over 20+ speakers and more than 100+ active listeners were present and shared their views on this. For more such spaces on software development, you can &lt;a href="https://twitter.com/VibaliJoshi"&gt;follow me&lt;/a&gt; on Twitter. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#addiction-to-work"&gt;
  &lt;/a&gt;
  &lt;u&gt;Addiction to Work&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x2OPiMwk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kyrar3uwztxul23l6fzl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x2OPiMwk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kyrar3uwztxul23l6fzl.png" alt="Image description" width="758" height="713"&gt;&lt;/a&gt;&lt;br&gt;
There's a good possibility you got into this field because you like coding and solving complex challenges. &lt;u&gt;Coding is a highly addictive activity&lt;/u&gt;. Something doesn't feel quite right till the bug is fixed. &lt;/p&gt;

&lt;p&gt;Though this will benefit you by allowing you to complete more work in less time and impress your boss, we must keep in mind that this comes at a cost.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NE8iN8OT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0rpr5ym796p94mwnscj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NE8iN8OT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0rpr5ym796p94mwnscj.png" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you aren't a geek, you can relate to this: we underestimate the code, which requires us to commit more time to it than usual, potentially causing plans with friends and family to be cancelled.&lt;/li&gt;
&lt;li&gt;If you don't get up from your chair until the glitch is fixed, you could be sitting for up to 8 hours, which could cause major health problems if done on a regular basis. 

&lt;ul&gt;
&lt;li&gt;Terrible back and neck pains. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.webmd.com/eye-health/computer-vision-syndrome"&gt;Computer Vision Syndrome&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hZHuFWtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w14b6hcptz1pb2q3w86f.png" alt="Image description" width="880" height="880"&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#suggestions"&gt;
  &lt;/a&gt;
  &lt;u&gt;Suggestions&lt;/u&gt;:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ofS5cHXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wemgctwwb4kr94n6yskl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ofS5cHXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wemgctwwb4kr94n6yskl.png" alt="Image description" width="720" height="704"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Take a break&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We &lt;del&gt;often forget to take breaks&lt;/del&gt; need to remind ourselves to take a break. &lt;/li&gt;
&lt;li&gt;You can download &lt;a href="https://hovancik.net/stretchly/"&gt;Stretchly&lt;/a&gt; the break time reminder app ( It is also open source!)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;Disconnect from work&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Separate your work station from your bedroom, or your resting space.&lt;/li&gt;
&lt;li&gt;Keep your phone free from all the work apps. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Suggested Reads: &lt;a href="http://healthyprog.com/"&gt;The Healthy Programmer by Joe Kutner&lt;/a&gt;, &lt;a href="https://dev.to/desoga/7-ways-to-stay-healthy-as-a-programmer-3fjl"&gt;7 Ways To Stay Healthy As A Programmer&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#constantly-keeping-up-with-new-technology"&gt;
  &lt;/a&gt;
  &lt;u&gt;Constantly Keeping Up With New Technology&lt;/u&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H2micpVa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6qeud7tl8am3n4lahxb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H2micpVa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6qeud7tl8am3n4lahxb.png" alt="Image description" width="607" height="499"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Let's see if any of this looks familiar:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You feel that you are lagging as you are not using latest tech stack in your current project.&lt;/li&gt;
&lt;li&gt;You feel like jumping to every other thing and learning multiple tech stack at once.&lt;/li&gt;
&lt;li&gt;(For senior developers) You overhear your subordinates discussing a tech stack about which you are completely unaware, and they expect you to be an expert.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because the pace of new technology is so fast, you can't keep up with everything, yet people expect you to know everything at least to a basic level. To keep up with the latest trends and be an active member of the community, you think need to be well-versed in everything.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-overcome-this"&gt;
  &lt;/a&gt;
  &lt;u&gt;How to overcome this:&lt;/u&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You need to realize that learning multiple things at once results in reduced productivity. Tim Buchalka who has taught over 1 Million students has explained it beautifully in &lt;a href="https://youtu.be/Jlo0OaL-Gn0"&gt;this&lt;/a&gt; video. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(for the senior software devs) Flip the question, ask your team members to answer this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Can you explain it to the entire team and make it so simple that no one needs to study it?&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#project-managers-and-product-managers-unrealistic-demands"&gt;
  &lt;/a&gt;
  &lt;u&gt;Project Managers and Product Managers Unrealistic Demands&lt;/u&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qXHAH-W5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zmc6apxaegyqrrwwml0b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qXHAH-W5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zmc6apxaegyqrrwwml0b.png" alt="Image description" width="608" height="608"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There's a good probability that your boss doesn't have a technological background. They are also under pressure from their superiors to release a feature in a short period of time. This can result in low-quality code, as well as a weaker foundation for future builds.&lt;/p&gt;

&lt;p&gt;You are annoyed and furious with them, which leads to an unhealthy relationship between you two and a loss of trust. This need not be a case, save this bad blood by following these. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#communication-is-the-key"&gt;
  &lt;/a&gt;
  &lt;u&gt;Communication is the Key&lt;/u&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n39AcD_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6udxtz3iysfpoc96eba.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n39AcD_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6udxtz3iysfpoc96eba.png" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have a healthy discussion, outline why the task is unrealistic.&lt;/li&gt;
&lt;li&gt;list out the points in detail and the steps why it is unrealistic.&lt;/li&gt;
&lt;li&gt;Provide them with alternatives. &lt;/li&gt;
&lt;li&gt;Cut the problem down into smaller pieces, why the requirement is coming in and how can we go about it in a more realistic way. &lt;/li&gt;
&lt;li&gt;Discuss the (LOE) Level of Effort that would be required, so that you can get a timeline for the issue. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#understand-your-boss"&gt;
  &lt;/a&gt;
  &lt;u&gt;Understand your Boss&lt;/u&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;One of the most common issues among software developers is a lack of awareness of the commercial side of business and the chain of command.&lt;/li&gt;
&lt;li&gt;After reading &lt;a href="https://twitter.com/simpleprogrammr"&gt;John Sonmez's&lt;/a&gt; following articles, I got a tremendous degree of clarity:

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://simpleprogrammer.com/7-things-your-boss-doesnt-understand-about-software-development/"&gt;7 Things Your Boss Doesn’t Understand About Software Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://simpleprogrammer.com/dealing-with-your-boss/"&gt;A Software Developer’s Guide to Dealing With Your Boss&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#unhealthy-competition-for-compensation"&gt;
  &lt;/a&gt;
  &lt;u&gt;Unhealthy competition for compensation&lt;/u&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g5XwxsQ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjd3qpmon0z4oljlyapv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g5XwxsQ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjd3qpmon0z4oljlyapv.png" alt="Image description" width="680" height="765"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;How many times you checked out &lt;a href="https://www.teamblind.com/"&gt;Blind&lt;/a&gt; and have been so addicted to it that you had to uninstall it?&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;There are lot of developers who are just running after money hence switching companies after 6 months.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Constant comparisons between peers regarding salaries and stock options have made things extremely competitive, which is affecting their happiness.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Do you feel a constant need to improve yourself to get better salary or offer?&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This definitely is a great push for getting better roles. But, at some point you will over work yourself as there is no end to this greed. Hence, you will stop enjoying your job. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#switching-is-not-that-easy"&gt;
  &lt;/a&gt;
  &lt;u&gt;Switching is not that easy&lt;/u&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g-X7pwnQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e85wg89viezrxtfy7ytv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g-X7pwnQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e85wg89viezrxtfy7ytv.png" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;   &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you switch so frequently, your integrity gets questioned and this would be reflected in your resume too. &lt;/li&gt;
&lt;li&gt;It would be clear that for you, the money matters more than software. &lt;/li&gt;
&lt;li&gt;Also you would have to start all the process of knowing people, building trust from scratch.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#life-is-not-all-about-money"&gt;
  &lt;/a&gt;
  &lt;u&gt;Life is not all about money&lt;/u&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PB_Z5Zi---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cmztgy2pvvxw4y0xrmg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PB_Z5Zi---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cmztgy2pvvxw4y0xrmg.png" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Money should not be the driving factor. A good work life balance, good peer group, work on challenging problems matters more in the long run. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#maintaining-legacy-code"&gt;
  &lt;/a&gt;
  &lt;u&gt;Maintaining Legacy Code&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JVgDOHtR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zen5mqqeew5zikhsgti0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JVgDOHtR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zen5mqqeew5zikhsgti0.png" alt="Image description" width="758" height="758"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is just really scary to touch.&lt;/p&gt;

&lt;p&gt;Legacy code can be a challenge to maintain:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The code being not well documented. &lt;/li&gt;
&lt;li&gt;The code not clean.&lt;/li&gt;
&lt;li&gt;Less resources to integrate it with the new trends&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#make-the-dark-side-brighter"&gt;
  &lt;/a&gt;
  &lt;u&gt;Make the dark side brighter&lt;/u&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AJsixXRJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69lyoj4ayqdsb4a2envn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AJsixXRJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69lyoj4ayqdsb4a2envn.png" alt="Image description" width="548" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You need to step up and change it, if you do not change it then it becomes a dark side.&lt;/li&gt;
&lt;li&gt;The most important thing you can do to go up in the ranks at any company is to take on more responsibility. Legacy code is an area where no one wants to get involved in. &lt;/li&gt;
&lt;li&gt;This is the best test. A sign of a really good engineer. Take this chance. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What all other challenges you faced in your workspace? Comment down below 👇🏼&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>discuss</category>
      <category>career</category>
    </item>
    <item>
      <title>How to Clear Clipboard History in Windows 11?</title>
      <author>Sheldoncooper3991</author>
      <pubDate>Mon, 13 Dec 2021 10:55:40 +0000</pubDate>
      <link>https://dev.to/sheldoncooper3991/how-to-clear-clipboard-history-in-windows-11-10mi</link>
      <guid>https://dev.to/sheldoncooper3991/how-to-clear-clipboard-history-in-windows-11-10mi</guid>
      <description>&lt;p&gt;&lt;strong&gt;Clear Clipboard Data Windows 11&lt;/strong&gt; : Whenever we copy an item in Windows, Operating systems will store the items for a short time in a place called Clipboard. As we can see, the name is very similar to the  &lt;strong&gt;physical Clipboard&lt;/strong&gt;  where we clip things. Clipboard in Computing is a kind of  &lt;strong&gt;temporary storage&lt;/strong&gt;  that can also be called a Buffer. This article will cover  &lt;strong&gt;How to clear Clipboard History in Windows 11&lt;/strong&gt;  using simple steps. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-access-clipboard-history-and-clear-it-in-windows-11"&gt;
  &lt;/a&gt;
  How to access Clipboard History and Clear it in Windows 11?
&lt;/h2&gt;

&lt;p&gt;The steps are extremely easy, and we have explained them with clear and step-by-step images to be a hassle-free process for you. The following are the steps.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use the Shortcut &lt;strong&gt;Win Key + I&lt;/strong&gt; to open Windows Settings in our Windows 11 operating system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on the &lt;strong&gt;System&lt;/strong&gt; from the &lt;strong&gt;left&lt;/strong&gt; pane.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y99sm8_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://teckangaroo.com/wp-content/uploads/2021/12/system-1024x537.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y99sm8_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://teckangaroo.com/wp-content/uploads/2021/12/system-1024x537.png" alt="System Settings" width="880" height="461"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;System Settings&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : By default, we will be in the options of the System menu only.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Scroll the options available in the System menu, you can find &lt;strong&gt;Clipboard&lt;/strong&gt; over there.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B5KJmCk2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://teckangaroo.com/wp-content/uploads/2021/12/clipboard-1024x541.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B5KJmCk2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://teckangaroo.com/wp-content/uploads/2021/12/clipboard-1024x541.png" alt="Clipboard" width="880" height="465"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Clipboard&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open &lt;strong&gt;Clipboard&lt;/strong&gt; now.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;INSIGHTS!!&lt;/p&gt;

&lt;p&gt;As mentioned in the introduction paragraph, a Clipboard is temporary buffer storage. However, if one enables the option of Clipboard History, then multiple items will be saved to the Clipboard and allow us to look at them afterwards.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Assuming that the Clipboard History is already &lt;strong&gt;turned on&lt;/strong&gt; (only then, we will have to need to clear the Clipboard History), click on the “ &lt;strong&gt;Clear&lt;/strong&gt; ” option that is available in the &lt;strong&gt;Clear clipboard data&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iozLqCEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://teckangaroo.com/wp-content/uploads/2021/12/clear-clipboard-data-1024x467.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iozLqCEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://teckangaroo.com/wp-content/uploads/2021/12/clear-clipboard-data-1024x467.png" alt="Clear Clipboard Data" width="880" height="401"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Clear Clipboard Data&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;That is it. Clipboard History is now cleared in our Windows 11 system.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : If you have pinned any items in the Clipboard History, those items will not be cleared when we use the &lt;strong&gt;Clear Clipboard data&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-shortcut-to-open-clipboard-history-in-windows-11"&gt;
  &lt;/a&gt;
  The Shortcut to open Clipboard History in Windows 11:
&lt;/h2&gt;

&lt;p&gt;There is a simple way to open Clipboard History in Windows operating systems. This shortcut will work on both Windows 10 and as well as on the Windows 11 operating systems.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use the keyboard combination &lt;strong&gt;Win key + V&lt;/strong&gt; to open Clipboard History in Windows 11. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W82I_2us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://teckangaroo.com/wp-content/uploads/2021/12/clipboard-desktop-287x300.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W82I_2us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://teckangaroo.com/wp-content/uploads/2021/12/clipboard-desktop-287x300.png" alt="Clipboard History" width="287" height="300"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Clipboard History&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;On the &lt;strong&gt;Clipboard History&lt;/strong&gt; , you can find all the copied items. Using the above method, you can clear this Clipboard History. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Suppose you want to retain a particular copied item and delete the rest of the copied objects, then you can  &lt;strong&gt;pin&lt;/strong&gt;  the one you wish to keep even after deleting the Clipboard History. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yZxMWrDy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://teckangaroo.com/wp-content/uploads/2021/12/pin-277x300.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yZxMWrDy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://teckangaroo.com/wp-content/uploads/2021/12/pin-277x300.png" alt="Pin Clipboard items" width="277" height="300"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Pin Clipboard items&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-of-the-article"&gt;
  &lt;/a&gt;
  Conclusion of the Article:
&lt;/h2&gt;

&lt;p&gt;The above article discusses &lt;strong&gt;how to view Clipboard items in Windows 11&lt;/strong&gt; , &lt;strong&gt;Delete Clipboard History&lt;/strong&gt; , and &lt;strong&gt;Pin items to the Clipboard History&lt;/strong&gt;. If you have any &lt;strong&gt;queries&lt;/strong&gt; , kindly let us know in the &lt;strong&gt;comment&lt;/strong&gt; section, and we will revert to a solution as soon as possible.&lt;/p&gt;

&lt;p&gt;For more interesting articles, stay tuned to &lt;strong&gt;&lt;a href="https://teckangaroo.com"&gt;TecKangaroo&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

</description>
      <category>clearclipboardhistor</category>
      <category>deleteclipboarddatai</category>
      <category>windows11</category>
    </item>
  </channel>
</rss>
