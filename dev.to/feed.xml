<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Tailwind Responsive Timeline Example</title>
      <author>Ishaan Sheikh</author>
      <pubDate>Sun, 25 Jul 2021 08:54:21 +0000</pubDate>
      <link>https://dev.to/sheikh_ishaan/tailwind-responsive-timeline-example-5233</link>
      <guid>https://dev.to/sheikh_ishaan/tailwind-responsive-timeline-example-5233</guid>
      <description>&lt;p&gt;A simple timeline component using Tailwind CSS.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/sheikh_ishaan/embed/oNWpgoK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>tailwindcss</category>
      <category>css</category>
    </item>
    <item>
      <title>How to roll back a Dokku deployment</title>
      <author>Alejandro Akbal</author>
      <pubDate>Sun, 25 Jul 2021 08:50:03 +0000</pubDate>
      <link>https://dev.to/alejandroakbal/how-to-roll-back-a-dokku-deployment-5825</link>
      <guid>https://dev.to/alejandroakbal/how-to-roll-back-a-dokku-deployment-5825</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Sometimes you end up deploying an application to Dokku and then realize that you want to revert the changes you made.&lt;/p&gt;

&lt;p&gt;In this tutorial we'll go over how to roll back a Dokku deployment.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#before-we-start"&gt;
  &lt;/a&gt;
  Before we start
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#preface"&gt;
  &lt;/a&gt;
  Preface
&lt;/h3&gt;

&lt;p&gt;Keep in mind that rolling back a deployment is a dangerous operation, proceed with caution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Dokku server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don't have a Dokku server?&lt;br&gt;
Check out my &lt;a href="https://blog.akbal.dev/create-your-own-heroku-with-dokku-on-digitalocean"&gt;Dokku tutorial&lt;/a&gt;.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#get-the-commit-hash"&gt;
  &lt;/a&gt;
  Get the commit hash
&lt;/h3&gt;

&lt;p&gt;First well need to get the hash of the commit that we want to roll back to.&lt;/p&gt;

&lt;p&gt;To accomplish that, list out the last 10 commits that have been made to the repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--pretty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;format:&lt;span class="s2"&gt;"%h - %s"&lt;/span&gt; &lt;span class="nt"&gt;-10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will get an output similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;3cacb03 - Revert &lt;span class="s2"&gt;"build: broaden possible purged files"&lt;/span&gt;
25e3b2b - chore: move node dependency to dev dependencies
6a42416 - Revert &lt;span class="s2"&gt;"ci: run npm "&lt;/span&gt;build&lt;span class="s2"&gt;" script in predeploy stage"&lt;/span&gt;
0b53fdd - ci: execute php buildpack first
2d27d60 - ci: run npm &lt;span class="s2"&gt;"build"&lt;/span&gt; script &lt;span class="k"&gt;in &lt;/span&gt;predeploy stage
1bc1276 - build: broaden possible purged files
1bed300 - style: lint
5ab255c - Revert &lt;span class="s2"&gt;"build: only run tailwind JIT mode on local"&lt;/span&gt;
23b0c4b - build: fix data-tables styles getting purged
52ca32e - ci: move scripts back to app.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now copy the hash of the commit that you want to roll back to.&lt;br&gt;
For example &lt;code&gt;2d27d60&lt;/code&gt;.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#how-to-rollback"&gt;
  &lt;/a&gt;
  How to rollback
&lt;/h2&gt;

&lt;p&gt;Now that we have the commit hash, we can roll back to it.&lt;/p&gt;

&lt;p&gt;Just force push to Dokku with the commit hash, instead of the local branch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# git push --force &amp;lt;remote&amp;gt; &amp;lt;local branch&amp;gt;:&amp;lt;remote branch&amp;gt;&lt;/span&gt;
git push &lt;span class="nt"&gt;--force&lt;/span&gt; dokku de7fc85:master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;That is it!&lt;/strong&gt;&lt;br&gt;
Now Dokku will build the application from that commit.&lt;br&gt;
Effectively rolling back to that commit.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#end"&gt;
  &lt;/a&gt;
  End
&lt;/h2&gt;

&lt;p&gt;That was easy, wasn't it?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selfpromotion"&gt;
  &lt;/a&gt;
  Self-promotion
&lt;/h3&gt;

&lt;p&gt;If you have found this useful, then you should follow me, I will be posting more interesting content! ü•∞&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/github"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/twitter"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/dev.to"&gt;Dev.to&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or support me financially. üí∏&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/github/sponsor"&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/liberapay"&gt;LiberaPay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/paypal"&gt;PayPal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Congratulations, today you have learned how to roll back a Dokku deployment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let me know if the tutorial was useful to you in the comments!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>beginners</category>
      <category>docker</category>
    </item>
    <item>
      <title>Creation de Bot discord</title>
      <author>imene</author>
      <pubDate>Sun, 25 Jul 2021 08:22:36 +0000</pubDate>
      <link>https://dev.to/imene06042688/creation-de-bot-discord-52g0</link>
      <guid>https://dev.to/imene06042688/creation-de-bot-discord-52g0</guid>
      <description>&lt;p&gt;veuiller ne pas l'ajout√© il est simplement Bot rien est complet.&lt;/p&gt;

</description>
      <category>jellyfin</category>
    </item>
    <item>
      <title>Setup a new mac (for devs [and others]) üíª</title>
      <author>Dekel</author>
      <pubDate>Sun, 25 Jul 2021 08:17:36 +0000</pubDate>
      <link>https://dev.to/dekel/setup-a-new-mac-for-devs-and-others-4d88</link>
      <guid>https://dev.to/dekel/setup-a-new-mac-for-devs-and-others-4d88</guid>
      <description>&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#got-a-new-macbook-what-should-i-install-now-"&gt;
  &lt;/a&gt;
  "Got a new macbookü•≥! What should I install now üßê?"
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;I'm getting this question every couple of weeks from friends and colleagues, and every time I'm sending them instructions on what and how to install in order to setup their environment to make their experience better.&lt;/p&gt;

&lt;p&gt;There are many tools/apps/configurations that you can use to make your life easier and your experience better with your mac.&lt;/p&gt;

&lt;p&gt;So I decided to finally write everything down and share it (instead of copy&amp;amp;paste emails/whatsapp/slack/discord messages).&lt;/p&gt;

&lt;p&gt;Here is my basic setup and recommendations for others.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#key-repeat-amp-delay"&gt;
  &lt;/a&gt;
  Key repeat &amp;amp; delay
&lt;/h3&gt;

&lt;p&gt;Change the key repeat and repeat delay - this is usually the first thing I'm changing:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uWRaG7on--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9pumsm9qex5wahe9qhy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uWRaG7on--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9pumsm9qex5wahe9qhy.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
You can find it under &lt;code&gt;System Preferences -&amp;gt; Keyboard&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;And if you like the red arrows - keep on reading&lt;/em&gt; üòâ&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#screenshots-to-clipboard"&gt;
  &lt;/a&gt;
  Screenshots to clipboard
&lt;/h3&gt;

&lt;p&gt;By default, screenshots are saved to your desktop. To change this - click &lt;code&gt;‚åò+shift+5&lt;/code&gt; and under the "options" menu set the "save to" to "Clipboard".&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To capture an area use &lt;code&gt;‚åò+shift+4&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;To capture the entire screen use &lt;code&gt;‚åò+shift+5&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: &lt;code&gt;‚åò&lt;/code&gt; is the &lt;code&gt;command&lt;/code&gt; key. You can find it left to your &lt;code&gt;space&lt;/code&gt; key.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I'll start with some general tools that just make my life easier:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#rectangle"&gt;
  &lt;/a&gt;
  Rectangle
&lt;/h3&gt;

&lt;p&gt;Rectangle is an open-source tool that gives you the ability to easily move the windows-apps around your desktops using your keyboard (left-half / right-half / top / bottom etc)&lt;br&gt;
&lt;a href="https://rectangleapp.com/"&gt;https://rectangleapp.com/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h5-TvoQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx86fko6w3zm7ck1invi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h5-TvoQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx86fko6w3zm7ck1invi.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#monosnap"&gt;
  &lt;/a&gt;
  Monosnap
&lt;/h3&gt;

&lt;p&gt;Monosnap is a tool to edit your screenshots. They have both paid and free versions (for personal usage).&lt;br&gt;
Remember the red arrows? This is what you want:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mtWClnEM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qj4r9pt9cz48ccndesc5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mtWClnEM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qj4r9pt9cz48ccndesc5.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://monosnap.com/"&gt;https://monosnap.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#homebrew"&gt;
  &lt;/a&gt;
  Homebrew
&lt;/h3&gt;

&lt;p&gt;This is the de-facto package manager for macos (as a developer - most of the packages you need you can install using homebrew).&lt;br&gt;
Open your terminal (cmd + space) and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#alttab"&gt;
  &lt;/a&gt;
  AltTab
&lt;/h3&gt;

&lt;p&gt;Personally, I don't use this tool, but many of my friends like it, so I decided to keep it on my list.&lt;br&gt;
If you moved from Windows to MacOS - AltTab is probably your friend - it brings the power of Windows's "alt-tab" functionality to your Mac.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nDOUIK0k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0f6s5io49e0x1rrhigi2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nDOUIK0k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0f6s5io49e0x1rrhigi2.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
(Image from &lt;a href="https://alt-tab-macos.netlify.app/"&gt;AltTab's website&lt;/a&gt;)&lt;br&gt;
Install using brew:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install alttab
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#iterm2"&gt;
  &lt;/a&gt;
  iTerm2
&lt;/h3&gt;

&lt;p&gt;iTerm2 is a replacement for the standard macos's terminal (and is so much better).&lt;br&gt;
Now that we have homebrew installed we can use to install iterm2:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install iterm2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#iterm2-configuration"&gt;
  &lt;/a&gt;
  iTerm2 configuration:
&lt;/h4&gt;

&lt;p&gt;There are many settings that you can change in iterm2, here are a few that in my opinion are a must:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Disable the bell:
iTerm2 Preferences -&amp;gt; Profiles -&amp;gt; Terminal -&amp;gt; Notifications -&amp;gt; Silence Bell&lt;/li&gt;
&lt;li&gt;Set iterm to jump over words¬†on option+left/right arrow and move to begin/end of line with cmd+left/right arrow.
iTerm2 Preferences -&amp;gt; Profiles -&amp;gt; Keys:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;¬† 1. ‚å•‚Üê¬†(option + left arrow) - set action to "Send Escape Sequence" - Esc+ &lt;code&gt;b&lt;/code&gt;&lt;br&gt;
¬† 2. ‚å•‚Üí (option + right arrow) - set action to "Send Escape Sequence" - Esc+ &lt;code&gt;f&lt;/code&gt;&lt;br&gt;
¬† 3. ‚åò‚Üê(cmd¬†+ left arrow) - set action to "Send Hex Code" - value is &lt;code&gt;0x01&lt;/code&gt;&lt;br&gt;
¬† 4. ‚åò‚Üí(cmd + right arrow) - set action to "Send Hex Code" - value is &lt;code&gt;0x05&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#oh-my-zsh"&gt;
  &lt;/a&gt;
  Oh My Zsh üò±
&lt;/h3&gt;

&lt;p&gt;oh-my-zsh is a framework for managing zsh configurations. zsh is the default shell on macos these days.&lt;br&gt;
There are hundreds themes and plugins and you can configure almost everything inside.&lt;/p&gt;

&lt;p&gt;Lets start by installing oh-my-zsh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need fzf for fuzzy search (some plugins need it):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install fzf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#themes"&gt;
  &lt;/a&gt;
  Themes:
&lt;/h4&gt;

&lt;p&gt;There are &lt;a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Themes"&gt;so many oh-my-zsh themes&lt;/a&gt; that you can use. I like &lt;code&gt;intheloop&lt;/code&gt;, but you can try others and find the one that you like the most.&lt;br&gt;
To set the relevant theme open your &lt;code&gt;~/.zshrc&lt;/code&gt; file and change the value of &lt;code&gt;ZSH_THEME&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ZSH_THEME="intheloop"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#plugins"&gt;
  &lt;/a&gt;
  Plugins:
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;zsh-autosuggestions&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install zsh-autosuggestions
echo "source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh" &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;zsh-syntax-highlighting&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install zsh-syntax-highlighting
echo "source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;zsh-yarn-autocompletions&lt;/strong&gt; - not in brew, so we need to install it manually:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download the mac zip/targz file from the release age: &lt;a href="https://github.com/g-plane/zsh-yarn-autocompletions/releases"&gt;https://github.com/g-plane/zsh-yarn-autocompletions/releases&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Extract it&lt;/li&gt;
&lt;li&gt;Run the following: &lt;code&gt;./install.sh $ZSH_CUSTOM/plugins&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Once installed - add it to your &lt;code&gt;plugins&lt;/code&gt; section in the &lt;code&gt;~/.zshrc&lt;/code&gt; file:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plugins=(
# some plugins
yarn-autocompletions
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is an important step - to allow running this file you need to set some permissions.&lt;br&gt;
Open Finder, go to &lt;code&gt;~/.oh-my-zsh/custom/plugins/yarn-autocompletions&lt;/code&gt;, hold the shift key, right-click on the &lt;code&gt;yarn-autocompletions&lt;/code&gt; file, click &lt;code&gt;open&lt;/code&gt; (while holding the shift-key).&lt;/p&gt;

&lt;p&gt;By default - oh-my-zsh comes with many other plugins. You just need to enable them. The complete list can be found in your &lt;code&gt;~/.oh-my-zsh/plugins&lt;/code&gt; folder, and you can just edit your &lt;code&gt;~/.zshrc&lt;/code&gt; file and add them as part of the plugins config.&lt;/p&gt;

&lt;p&gt;Here is a good list to begin with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plugins=(
# other plugins
aws
git
npm
yarn
zsh-interactive-cd
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-fuck"&gt;
  &lt;/a&gt;
  The Fuck
&lt;/h3&gt;

&lt;p&gt;The Fuck is a great tool that corrects errors in previous console commands.&lt;/p&gt;

&lt;p&gt;Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚ûú git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master


‚ûú fuck
git push --set-upstream origin master [enter/‚Üë/‚Üì/ctrl+c]
Counting objects: 9, done.
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To install just run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install thefuck
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do you think I'm missing something? Let me know in the comments.&lt;/p&gt;




Cover photo by &lt;a href="https://unsplash.com/@cgower"&gt;Christopher Gower @ unsplash&lt;/a&gt;

</description>
      <category>productivity</category>
      <category>tutorial</category>
      <category>macos</category>
      <category>developers</category>
    </item>
    <item>
      <title>Complete Introduction to CSS Flexbox üí™</title>
      <author>KUMAR HARSH</author>
      <pubDate>Sun, 25 Jul 2021 07:48:07 +0000</pubDate>
      <link>https://dev.to/cenacr007_harsh/complete-introduction-to-css-flexbox-1fhl</link>
      <guid>https://dev.to/cenacr007_harsh/complete-introduction-to-css-flexbox-1fhl</guid>
      <description>&lt;p&gt;Flexbox is a powerful, well-supported layout method that was introduced with the latest version of CSS, CSS3. With flexbox, it's easy to center elements on the page and create dynamic user interfaces that shrink and expand automatically.&lt;/p&gt;

&lt;p&gt;Life was tough before Flexbox and Grid came, centering a div was so troublesome that it became a meme.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oCTpefFj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4b8o33jlsb1q7ed5n9us.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oCTpefFj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4b8o33jlsb1q7ed5n9us.jpg" alt="meme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But fear no more, Flexbox and Grid have solved all our problems and things are so much easier now.&lt;/p&gt;

&lt;p&gt;In this blog, we'll learn the fundamentals of flexbox and dynamic layouts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-raw-display-flex-endraw-to-position-two-boxes"&gt;
  &lt;/a&gt;
  üìå Use &lt;code&gt;display: flex&lt;/code&gt; to Position Two Boxes
&lt;/h2&gt;

&lt;p&gt;Placing the CSS property &lt;code&gt;display: flex&lt;/code&gt; on an element allows you to use other flex properties to build a responsive page.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hLoD2x-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6i9iry6hv4rddo54lsa9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hLoD2x-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6i9iry6hv4rddo54lsa9.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After applying &lt;code&gt;display: flex&lt;/code&gt; property to parent element:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pI5jZiPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebnk1l1n05v95xwtsj6l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pI5jZiPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebnk1l1n05v95xwtsj6l.jpg" alt="parent"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cKREb9bW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lsdd4iy435liovw2rh0u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cKREb9bW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lsdd4iy435liovw2rh0u.jpg" alt="2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-the-raw-flexdirection-endraw-property"&gt;
  &lt;/a&gt;
  üìå Use the &lt;code&gt;flex-direction&lt;/code&gt; Property
&lt;/h2&gt;

&lt;p&gt;Adding &lt;code&gt;display: flex&lt;/code&gt; to an element turns it into a flex container. This makes it possible to align any children of that element into rows or columns.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;flex-direction&lt;/code&gt; property specifies the direction of the items within the flex container&lt;/p&gt;

&lt;p&gt;You do this by adding the &lt;code&gt;flex-direction&lt;/code&gt; property to the parent item and setting it to &lt;code&gt;row&lt;/code&gt; or &lt;code&gt;column&lt;/code&gt;. Creating a row will align the children horizontally, and creating a column will align the children vertically.&lt;/p&gt;

&lt;p&gt;Other options for flex-direction are &lt;code&gt;row-reverse&lt;/code&gt; and &lt;code&gt;column-reverse&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ih2CQbHP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s928brc75rg6xhx7r8lq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ih2CQbHP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s928brc75rg6xhx7r8lq.jpg" alt="dir"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: The default value for the &lt;code&gt;flex-direction&lt;/code&gt; property is &lt;code&gt;row&lt;/code&gt;. This is the reason when we used &lt;code&gt;display: flex&lt;/code&gt; on the boxes above they were aligned in a row automatically.&lt;/p&gt;

&lt;p&gt;After applying &lt;code&gt;row&lt;/code&gt;, &lt;code&gt;row-reverse&lt;/code&gt;, &lt;code&gt;column&lt;/code&gt; and &lt;code&gt;column-reverse&lt;/code&gt; in &lt;strong&gt;&lt;code&gt;flex-direction&lt;/code&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;They all are pretty intuitive.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-flexdirection-row-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;flex-direction: row&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qplDgxYs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9zwqvlfdz3wron3aayjh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qplDgxYs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9zwqvlfdz3wron3aayjh.jpg" alt="row"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-flexdirection-rowreverse-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;flex-direction: row-reverse&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U3Xv9M83--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82h7xrin7ufs712zfc2m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3Xv9M83--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82h7xrin7ufs712zfc2m.jpg" alt="rowrev"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-flexdirection-column-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;flex-direction: column&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U7-Meq-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikiz947ohrcktzb22obm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U7-Meq-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikiz947ohrcktzb22obm.png" alt="col"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-flexdirection-columnreverse-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;flex-direction: column-reverse&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9qIIBkX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbgjy04yhku0h98uvd8r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9qIIBkX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbgjy04yhku0h98uvd8r.png" alt="colrev"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-the-raw-flexwrap-endraw-property-to-wrap-a-row-or-column"&gt;
  &lt;/a&gt;
  üìå Use the &lt;code&gt;flex-wrap&lt;/code&gt; Property to Wrap a Row or Column
&lt;/h2&gt;

&lt;p&gt;If we have a large number of elements in the flex container, it can destroy the width of elements.&lt;/p&gt;

&lt;p&gt;CSS flexbox has a feature to split a flex item into multiple rows (or columns). By default, a flex container will fit all flex items together. For example, a row will all be on one line.&lt;/p&gt;

&lt;p&gt;However, using the &lt;code&gt;flex-wrap&lt;/code&gt; property tells CSS to wrap items. This means extra items move into a new row or column. It persists the width of elements.&lt;/p&gt;

&lt;p&gt;The breakpoint of where the wrapping happens depends on the size of the items and the size of the container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Vimeo: &lt;iframe src="https://player.vimeo.com/video/578996529" width="710" height="399"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;CSS has options for the direction of the wrap:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-nowrap-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;nowrap&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;this is the default setting and does not wrap items.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Ar2XoH6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xiji8onoqbdeycdvpcr1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Ar2XoH6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xiji8onoqbdeycdvpcr1.png" alt="nowrap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-wrap-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;wrap&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;wraps items onto multiple lines from top-to-bottom if they are in rows and left to right if they are in columns.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XtWWxXSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfll050k1a9jitp1kov3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XtWWxXSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfll050k1a9jitp1kov3.png" alt="wrap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-wrapreverse-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;wrap-reverse&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;wraps items onto multiple lines from bottom-to-top if they are in rows and right-to-left if they are in columns.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p9zMCweN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqky3jfcdqvvuz23b3ih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p9zMCweN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqky3jfcdqvvuz23b3ih.png" alt="wrap-reverse"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mainaxis-and-crossaxis"&gt;
  &lt;/a&gt;
  üìå Main-Axis and Cross-Axis
&lt;/h2&gt;

&lt;p&gt;We can align elements within Flexbox in accordance with these two axes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xw9MIx00--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oa75ny23dwlafq6bdatg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xw9MIx00--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oa75ny23dwlafq6bdatg.png" alt="Axis"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To help you better understand:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wv84d1Xl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqlumm8j6rawwe039duj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wv84d1Xl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqlumm8j6rawwe039duj.jpg" alt="axis2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Time to align flexible items within a flex container &lt;/p&gt;

&lt;p&gt;üî∏ Justify-content: For horizontal alignment &lt;br&gt;
üî∏ Align-content:  For vertical alignment&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#align-elements-using-the-raw-justifycontent-endraw-property"&gt;
  &lt;/a&gt;
  üìå Align Elements Using the &lt;code&gt;justify-content&lt;/code&gt; Property
&lt;/h2&gt;

&lt;p&gt;Sometimes the flex items within a flex container do not fill all the space in the container. It is common to want to tell CSS how to align and space out the flex items a certain way.&lt;/p&gt;

&lt;p&gt;Fortunately, the &lt;code&gt;justify-content&lt;/code&gt; property has several options to do this. But first, it is important to understand the Main Axis and Cross Axis, which we did in the last section.&lt;/p&gt;

&lt;p&gt;Recall that setting a flex container as a row places the flex items side-by-side from left to right. A flex container set as a column places the flex items in a vertical stack from top-to-bottom.&lt;/p&gt;

&lt;p&gt;For each, the direction the flex items are arranged is called the &lt;strong&gt;main axis&lt;/strong&gt;. For a row, this is a horizontal line that cuts through each item. And for a column, the main axis is a vertical line through the items.&lt;/p&gt;

&lt;p&gt;There are several options for how to space the flex items along the line that is the main axis.&lt;/p&gt;

&lt;p&gt;Most commonly used ones are:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#-raw-justifycontent-center-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;justify-content: center&lt;/code&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;aligns all the flex items to the center inside the flex container.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--poahcXB5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j82pbmy3okcjjfx2guhp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--poahcXB5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j82pbmy3okcjjfx2guhp.png" alt="center"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#-raw-justifycontent-flexstart-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;justify-content: flex-start&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;aligns items to the start of the flex container. For a row, this pushes the items to the left of the container. For a column, this pushes the items to the top of the container. This is the default alignment if no justify-content is specified.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2sJzrTql--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sm78fs3aquel79cnula4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2sJzrTql--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sm78fs3aquel79cnula4.png" alt="flex-start"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#-raw-justifycontent-flexend-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;justify-content: flex-end&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;aligns items to the end of the flex container. For a row, this pushes the items to the right of the container. For a column, this pushes the items to the bottom of the container.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hEuAMkFW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/honqw7ch1fdd6j6uuoqw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hEuAMkFW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/honqw7ch1fdd6j6uuoqw.png" alt="flex-end"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other options include:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#-raw-justifycontent-spacebetween-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;justify-content: space-between&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;aligns items to the center of the main axis, with extra space placed between the items. The first and last items are pushed to the very edge of the flex container. For example, in a row the first item is against the left side of the container, the last item is against the right side of the container, then the remaining space is distributed evenly among the other items.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AcuitWR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aj5wh44ma89v6tpvthm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AcuitWR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aj5wh44ma89v6tpvthm.png" alt="space-between"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#-raw-justifycontent-spacearound-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;justify-content: space-around&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;similar to space-between but the first and last items are not locked to the edges of the container, the space is distributed around all the items with a half-space on either end of the flex container.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aeOkYcWQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmynqmj4f6madnwwl9vl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aeOkYcWQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmynqmj4f6madnwwl9vl.png" alt="space-around"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#-raw-justifycontent-spaceevenly-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;justify-content: space-evenly&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Distributes space evenly between the flex items with a full space at either end of the flex container&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JYV6skU1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/je7a8uzo53l5sdwgvb68.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JYV6skU1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/je7a8uzo53l5sdwgvb68.png" alt="space-evenly"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#see-the-code"&gt;
  &lt;/a&gt;
  üë®‚Äçüíª SEE THE CODE:
&lt;/h4&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/cenacr007_harsh/embed/poPpved?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#align-elements-using-the-raw-alignitems-endraw-property"&gt;
  &lt;/a&gt;
  üìå Align Elements Using the &lt;code&gt;align-items&lt;/code&gt; Property
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;align-items&lt;/code&gt; property is similar to &lt;code&gt;justify-content&lt;/code&gt;. Recall that the justify-content property aligned flex items along the main axis. For rows, the main axis is a horizontal line and for columns, it is a vertical line.&lt;/p&gt;

&lt;p&gt;Flex containers also have a cross-axis which is the opposite of the main axis. For rows, the cross axis is vertical and for columns, the cross axis is horizontal.&lt;/p&gt;

&lt;p&gt;CSS offers the &lt;code&gt;align-items&lt;/code&gt; property to align flex items along the &lt;strong&gt;cross-axis&lt;/strong&gt;. For a row, it tells CSS how to push the items in the entire row up or down within the container. And for a column, how to push all the items left or right within the container.&lt;/p&gt;

&lt;p&gt;The different values available for align-items include:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-alignitems-center-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;align-items: center&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;aligns items to the center. For rows, this vertically aligns items (equal space above and below the items). For columns, this horizontally aligns them (equal space to the left and right of the items).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvjvIvcC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3uv87lqyuse8vmabf5r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvjvIvcC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3uv87lqyuse8vmabf5r.png" alt="center"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-alignitems-flexend-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;align-items: flex-end&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;aligns items to the end of the flex container. For rows, this aligns items to the bottom of the container. For columns, this aligns items to the right of the container.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x3DYgc47--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djvv7ez4elsmmdy03gig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x3DYgc47--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djvv7ez4elsmmdy03gig.png" alt="flex-end"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-alignitems-flexstart-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;align-items: flex-start&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;aligns items to the start of the flex container. For rows, this aligns items to the top of the container. For columns, this aligns items to the left of the container.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tyMFDVAf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28zgh3a8twxw38qiv862.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tyMFDVAf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28zgh3a8twxw38qiv862.png" alt="flex-start"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-alignitems-stretch-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;align-items: stretch&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;stretch the items to fill the flex container. For example, rows items are stretched to fill the flex container top-to-bottom.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;This is the default value if no align-items value is specified.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7mmD6h5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98zwd0833g4g5x0sjn6p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7mmD6h5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98zwd0833g4g5x0sjn6p.png" alt="stretch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-alignitems-baseline-endraw-"&gt;
  &lt;/a&gt;
  üî∂ &lt;code&gt;align-items: baseline&lt;/code&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;aligns items to their baselines. Baseline is a text concept, think of it as the line that the letters sit on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FtfJ4DZ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zklsfo6ckkgh2hzai7r9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FtfJ4DZ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zklsfo6ckkgh2hzai7r9.png" alt="baseline"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#see-the-code"&gt;
  &lt;/a&gt;
  üë®‚Äçüíª SEE THE CODE:
&lt;/h4&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/cenacr007_harsh/embed/BaRJyMZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-the-raw-flexshrink-endraw-property-to-shrink-items"&gt;
  &lt;/a&gt;
  üìå Use the &lt;code&gt;flex-shrink&lt;/code&gt; Property to Shrink Items
&lt;/h2&gt;

&lt;p&gt;So far, all the properties we have discussed apply to the flex container (the parent of the flex items). However, there are several useful properties for the flex items.&lt;/p&gt;

&lt;p&gt;The first is the flex-shrink property. When it's used, it allows an item to shrink if the flex container is too small. Items shrink when the width of the parent container is smaller than the combined widths of all the flex items within it.&lt;/p&gt;

&lt;p&gt;The flex-shrink property takes numbers as values. The higher the number, the more it will shrink compared to the other items in the container. For example, if one item has a flex-shrink value of 1 and the other has a flex-shrink value of 3, the one with the value of 3 will shrink three times as much as the other.&lt;/p&gt;

&lt;p&gt;For Example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CbJNKUM4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdy043a5adiyqchau8py.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CbJNKUM4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdy043a5adiyqchau8py.png" alt="shrink"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is how they respond to changing screen width:&lt;/p&gt;

&lt;p&gt;Vimeo: &lt;iframe src="https://player.vimeo.com/video/579006783" width="710" height="399"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-the-flexgrow-property-to-expand-items"&gt;
  &lt;/a&gt;
  üìå Use the flex-grow Property to Expand Items
&lt;/h2&gt;

&lt;p&gt;The opposite of &lt;code&gt;flex-shrink&lt;/code&gt; is the &lt;code&gt;flex-grow&lt;/code&gt; property. Recall that flex-shrink controls the size of the items when the container shrinks. The flex-grow property controls the size of items when the parent container expands.&lt;/p&gt;

&lt;p&gt;Using a similar example from the last challenge, if one item has a flex-grow value of 1 and the other has a flex-grow value of 3, the one with the value of 3 will grow three times as much as the other.&lt;/p&gt;

&lt;p&gt;For Example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d-r70vWO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aisrp63ht7zhuxyd63vk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d-r70vWO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aisrp63ht7zhuxyd63vk.png" alt="grow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F-wj7_Ph--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlz6vnwuvrzq4km6fjgl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F-wj7_Ph--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlz6vnwuvrzq4km6fjgl.jpg" alt="groweg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-the-raw-flexbasis-endraw-property-to-set-the-initial-size-of-an-item"&gt;
  &lt;/a&gt;
  üìå Use the &lt;code&gt;flex-basis&lt;/code&gt; Property to Set the Initial Size of an Item
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;flex-basis&lt;/code&gt; property specifies the initial size of the item before CSS makes adjustments with &lt;code&gt;flex-shrink&lt;/code&gt; or &lt;code&gt;flex-grow&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The units used by the flex-basis property are the same as other size properties (&lt;code&gt;px&lt;/code&gt;, &lt;code&gt;em&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, etc.). The value auto sizes items based on the content.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4YhIRpuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4nmr2pa3upv06legxxzf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4YhIRpuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4nmr2pa3upv06legxxzf.png" alt="basis"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-the-flex-shorthand-property"&gt;
  &lt;/a&gt;
  üìå Use the flex Shorthand Property
&lt;/h2&gt;

&lt;p&gt;There is a shortcut available to set several flex properties at once. The &lt;code&gt;flex-grow&lt;/code&gt;, &lt;code&gt;flex-shrink&lt;/code&gt;, and &lt;code&gt;flex-basis&lt;/code&gt; properties can all be set together by using the flex property.&lt;/p&gt;

&lt;p&gt;For example, &lt;code&gt;flex: 1 0 10px&lt;/code&gt;; will set the item to &lt;code&gt;flex-grow: 1&lt;/code&gt;;, &lt;code&gt;flex-shrink: 0&lt;/code&gt;;, and &lt;code&gt;flex-basis: 10px&lt;/code&gt;;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The default property settings are &lt;code&gt;flex: 0 1 auto&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#use-the-raw-order-endraw-property-to-rearrange-items"&gt;
  &lt;/a&gt;
  üìå Use the &lt;code&gt;order&lt;/code&gt; Property to Rearrange Items
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;order&lt;/code&gt; property is used to tell CSS the order of how flex items appear in the flex container. By default, items will appear in the same order they come in the source HTML. The property takes numbers as values, and negative numbers can be used.&lt;/p&gt;

&lt;p&gt;For Example: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5y-iKOOM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lavn9iq05rtkoa9uhgbr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5y-iKOOM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lavn9iq05rtkoa9uhgbr.jpg" alt="code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vY0BaPSw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qsegih18cmfv4jn3wp4h.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vY0BaPSw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qsegih18cmfv4jn3wp4h.jpg" alt="op"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-the-raw-alignself-endraw-property"&gt;
  &lt;/a&gt;
  üìå Use the &lt;code&gt;align-self&lt;/code&gt; Property
&lt;/h2&gt;

&lt;p&gt;The final property for flex items is &lt;code&gt;align-self&lt;/code&gt;. This property allows you to adjust each item's alignment individually, instead of setting them all at once. This is useful since other common adjustment techniques using the CSS properties float, clear, and vertical-align does not work on flex items.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;align-self&lt;/code&gt; accepts the same values as &lt;code&gt;align-items&lt;/code&gt; and will override any value set by the align-items property.&lt;/p&gt;

&lt;p&gt;For Example: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ONcAsTjs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m04bbzcpasn604cc2u7f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ONcAsTjs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m04bbzcpasn604cc2u7f.png" alt="center"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TVCXAaLn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/noijm0thxgvo019267m8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TVCXAaLn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/noijm0thxgvo019267m8.png" alt="end"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can pass the following values in align-self&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;auto&lt;/li&gt;
&lt;li&gt;stretch&lt;/li&gt;
&lt;li&gt;center&lt;/li&gt;
&lt;li&gt;flex-start&lt;/li&gt;
&lt;li&gt;flex-end&lt;/li&gt;
&lt;li&gt;baseline&lt;/li&gt;
&lt;li&gt;initial&lt;/li&gt;
&lt;li&gt;inherit&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#play-with-code-here"&gt;
  &lt;/a&gt;
  ‚ú® &lt;a href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_align-self&amp;amp;preval=auto"&gt;Play With Code Here&lt;/a&gt;
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  üéØ Bonus
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.toFLEXBOX%20FROGGY"&gt;FLEXBOX FROGGY&lt;/a&gt;&lt;br&gt;
A game designed to test your flexbox skills, you can practice here to solidify your learning.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://flexbox.io/"&gt;What the FlexBox!&lt;/a&gt;&lt;br&gt;
A course designed by Wes Bos, with many projects to help understand Flexbox better.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;That's all for today!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;References: &lt;a href="https://www.freecodecamp.org/"&gt;1&lt;/a&gt; &lt;a href="https://twitter.com/Prathkum"&gt;2&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-you-liked-my-content-consider-following-me-on-twitter"&gt;
  &lt;/a&gt;
  If you liked my content consider following me on &lt;a href="https://twitter.com/cenacr007_harsh"&gt;Twitter&lt;/a&gt;.
&lt;/h3&gt;

&lt;p&gt;Also if you got any questions feel free to ping me on Twitter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank You! üòä
&lt;/h3&gt;

</description>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>SWE 101 : Programming Terms Explained in simplest form</title>
      <author>Uday Yadav</author>
      <pubDate>Sun, 25 Jul 2021 07:40:10 +0000</pubDate>
      <link>https://dev.to/dev117uday/swe-101-programming-terms-explained-in-simplest-form-401h</link>
      <guid>https://dev.to/dev117uday/swe-101-programming-terms-explained-in-simplest-form-401h</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7diBrh4y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pompixb3i6q6c39ac5gb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7diBrh4y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pompixb3i6q6c39ac5gb.png" alt="banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What is idempotent again ?&lt;/p&gt;

&lt;p&gt;Closure, Memoization, Idempotence : Decoding and understanding programming terms one by one in simplest definition&lt;/p&gt;

&lt;p&gt;All code written in this javascript, but dont worry about the language, syntax is kept super simple. For practise, you can implement them in your favourite programming language.&lt;/p&gt;

&lt;p&gt;Lets start with first class functions&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#first-class-function"&gt;
  &lt;/a&gt;
  First Class Function
&lt;/h1&gt;

&lt;p&gt;A programming language is said to have first class functions if it treat its functions as first class citizens&lt;/p&gt;

&lt;p&gt;What are first class citizens : something that can be&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;passed as an argument&lt;/li&gt;
&lt;li&gt;returned from a function&lt;/li&gt;
&lt;li&gt;assigned to a variable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whatever satisfies the above 3 properties in you programming language can be called as first class citizen. Lets take a look at with examples&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#assigning-function-to-a-variable"&gt;
  &lt;/a&gt;
  Assigning Function to a variable
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="c1"&gt;// Assigned to another variable&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#passed-as-an-argument-aka-high-order-functions"&gt;
  &lt;/a&gt;
  Passed as an Argument aka High order functions
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// sqr the the passed square function&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;my_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; 

   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
       &lt;span class="c1"&gt;// the passed function is used here&lt;/span&gt;
       &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; 
   &lt;span class="p"&gt;}&lt;/span&gt; 
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// square function is passed as argument&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;squares&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;my_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;squares&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#function-as-return%C2%A0type"&gt;
  &lt;/a&gt;
  Function as Return¬†Type
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;log_message&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Log : &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
   &lt;span class="p"&gt;}&lt;/span&gt; 
   &lt;span class="c1"&gt;//  this is a function, returning from parent functions&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;log_message&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="nx"&gt;logHello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="nx"&gt;logHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before moving on, please read the above and try to understand the concept, it would be helpfull&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#closure"&gt;
  &lt;/a&gt;
  Closure
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;They are similar to functions returned from another function but captures the internal state of parent function at the time of invoked.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A closure is a record storing a function together with an environment, a mapping associating each free variable of the function with the value of storage location to which the name was bound when then the closure was created. ( Kinda formal¬†, read below and look at code snippet )&lt;/li&gt;
&lt;li&gt;A closure, unlike a plain function, allows the function to access those captured and closed variables when the function is invoked outside the scope.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;outer_function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;inner_function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Look at point 2 from definition&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;inner_function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// invoked from outside&lt;/span&gt;
&lt;span class="nx"&gt;outer_function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#another-example-of-closure"&gt;
  &lt;/a&gt;
  Another Example of Closure
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;outer_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;inner_function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;inner_function&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;outer_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#immutable-and%C2%A0mutable"&gt;
  &lt;/a&gt;
  Immutable and¬†Mutable
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// strings in js are immutable &lt;/span&gt;
&lt;span class="c1"&gt;// they cannot be changed once initialised&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;uday Yadav&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;U&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// this makes not difference&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// still small case 'u'&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; 

&lt;span class="c1"&gt;// array in js is mutable &lt;/span&gt;
&lt;span class="c1"&gt;// they can be changed once created&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#memoization"&gt;
  &lt;/a&gt;
  Memoization
&lt;/h1&gt;

&lt;p&gt;Some operations are expensive to preform, so we store the results of them in some form of temporary storage and when required to recalculate, first find them in the temporary storage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;expensive_compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;answer cache : &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
       &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;answer : &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;expensive_compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;expensive_compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;expensive_compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;expensive_compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;expensive_compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#idempotence"&gt;
  &lt;/a&gt;
  Idempotence
&lt;/h1&gt;

&lt;p&gt;The property of certain operations in mathematics and computer science, that can be applied multiple times without changing the result without initial application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Not Idempotent example&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#ephemeral"&gt;
  &lt;/a&gt;
  Ephemeral
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;synonyms to temporary&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#anonymous-functions"&gt;
  &lt;/a&gt;
  Anonymous Functions
&lt;/h1&gt;

&lt;p&gt;Function without a name, also known as lambda function in &lt;br&gt;
Python&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;mapped&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// x =&amp;gt;  is a function without a name&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapped&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#predicate"&gt;
  &lt;/a&gt;
  Predicate
&lt;/h1&gt;

&lt;p&gt;Functions that return true or false depending on the input. They usually start with &lt;em&gt;is&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;makeSound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isCat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animal&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; MEOW ! &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; NOT CAT ! &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isCat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;animal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newCat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;makeSound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newCat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#parsing-and-stringify"&gt;
  &lt;/a&gt;
  Parsing and Stringify
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Parsing¬†: converting string to some object&lt;/li&gt;
&lt;li&gt;Stringify¬†: converting some object to string
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Uday Yadav&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Gender&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dataReturns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dataReturns&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;dataReturns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;More about me¬†: &lt;a href="https://uday-yadav.web.app/"&gt;https://uday-yadav.web.app/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to use Tailwind CSS in Astro</title>
      <author>Chris Bongers</author>
      <pubDate>Sun, 25 Jul 2021 07:35:13 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/how-to-use-tailwind-css-in-astro-1fnd</link>
      <guid>https://dev.to/dailydevtips1/how-to-use-tailwind-css-in-astro-1fnd</guid>
      <description>&lt;p&gt;To be honest, it's never been easier to include Tailwind CSS in a framework.&lt;/p&gt;

&lt;p&gt;Why? Astro has &lt;a href="https://docs.astro.build/guides/styling#-tailwind"&gt;build in support for Tailwind&lt;/a&gt;! ü•≥&lt;br&gt;
And yes, even the &lt;a href="https://daily-dev-tips.com/posts/why-tailwind-jit-compiler-is-amazing/"&gt;Tailwind JIT compiler&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I'll write down this quick guide to get you started setting up Tailwind CSS in an Astro project.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installing-tailwind-css-in-an-astro-project"&gt;
  &lt;/a&gt;
  Installing Tailwind CSS in an Astro project
&lt;/h2&gt;

&lt;p&gt;Let's start with a basic Astro project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;astro-tailwind &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;astro-tailwind
npm init astro
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can choose any of the templates. It doesn't matter, actually.&lt;/p&gt;

&lt;p&gt;Now let's install Tailwind CSS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-D&lt;/span&gt; tailwindcss
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to create a &lt;code&gt;tailwind.config.js&lt;/code&gt; file to tell Tailwind which files to purge and enable the JIT compiler.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;purge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./public/**/*.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/**/*.{astro,js,jsx,ts,tsx,vue}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can Astro that it should use this Tailwind config file by modifying the &lt;code&gt;astro.config.js&lt;/code&gt; file and add this to the &lt;code&gt;devOptions&lt;/code&gt; section.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;devOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;tailwindConfig&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./tailwind.config.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now edit the &lt;code&gt;global.css&lt;/code&gt; file in the &lt;code&gt;public/style&lt;/code&gt; directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's modify our &lt;code&gt;src/pages/index.astro&lt;/code&gt; to test out how it works.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-gradient-to-br from-indigo-900 to-green-900 min-h-screen overflow-auto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container max-w-5xl mx-auto px-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-4/5 mx-auto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mt-32 text-white text-6xl font-bold"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"60"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"80"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/logo.svg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Astro logo"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; Welcome to
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://astro.build/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Astro&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-4/5 my-10 mx-auto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-300"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Build faster websites with less
        &lt;span class="nt"&gt;&amp;lt;strong&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-white"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;client-side Javascript&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        This is how easy it is to get started
      &lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-2/5 mx-auto bg-black text-white p-10 leading-10 rounded-2xl shadow-lg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      mkdir astro&lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      cd astro&lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      npm init astro
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this results in the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---a4cHz98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626673864896/iu-ZiwbwcQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---a4cHz98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626673864896/iu-ZiwbwcQ.png" alt="Tailwind starter in Astro"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also download this project from &lt;a href="https://github.com/rebelchris/astro-tailwind"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>astro</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>#2) Explain Hoisting in JavaScript‚ùì</title>
      <author>Mayank Yadav</author>
      <pubDate>Sun, 25 Jul 2021 06:00:27 +0000</pubDate>
      <link>https://dev.to/myk/2-explain-hoisting-in-javascript-4c58</link>
      <guid>https://dev.to/myk/2-explain-hoisting-in-javascript-4c58</guid>
      <description>&lt;p&gt;‚úîHoisting is a default behavior of JavaScript where all the &lt;br&gt;
variable and function declarations are moved on top.&lt;/p&gt;

&lt;p&gt;This means that irrespective of where the variables and functions are declared, they are moved on top of the scope.&lt;/p&gt;

&lt;p&gt;--&amp;gt;The scope can be both local and global.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T5JLElNk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr6i37buts30e0lc48xr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T5JLElNk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr6i37buts30e0lc48xr.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note:
&lt;/h1&gt;

&lt;p&gt;‚úîVariable initializations are not hoisted, only variable declarations are hoisted.&lt;/p&gt;

&lt;p&gt;‚úîUsing a let variable before it is declared will result in a ReferenceError.&lt;/p&gt;

&lt;p&gt;‚úîUsing a const variable before it is declared, is a SyntaxError.&lt;/p&gt;

&lt;p&gt;‚úîTo avoid hoisting, you can run JavaScript in strict mode by using ‚Äúuse strict‚Äù on top of the code.&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>AWS EKS With Amazon EC2 Spot Instances</title>
      <author>Vu Dao</author>
      <pubDate>Sun, 25 Jul 2021 05:53:57 +0000</pubDate>
      <link>https://dev.to/awscommunity-asean/aws-eks-with-amazon-ec2-spot-instances-405o</link>
      <guid>https://dev.to/awscommunity-asean/aws-eks-with-amazon-ec2-spot-instances-405o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#abstract"&gt;
  &lt;/a&gt;
  Abstract
&lt;/h2&gt;

&lt;p&gt;This post provides an overview of Amazon EC2 Spot Instances, as well as best practices for using them on AWS EKS effectively&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#What-to-know-about-spot-instances?"&gt;What to know about spot instances?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#The-life-cycle-of-a-Spot-Instance"&gt;The life cycle of a Spot Instance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-to-Launch-Spot-Instances?"&gt;How to Launch Spot Instances&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Spot-Instance-Termination-Notice"&gt;Spot Instance Termination Notice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Deploy-the-node-termination-handler"&gt;Deploy the node termination handler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Spot-Instance-Best-Practices"&gt;Spot Instance Best Practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Solution"&gt;Solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#what-to-know-about-spot-instances"&gt;
  &lt;/a&gt;
  üöÄ &lt;strong&gt;What to know about spot instances?&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dxQRXqpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/spot_intro.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dxQRXqpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/spot_intro.png%3Fraw%3Dtrue" alt="Alt-Test"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-life-cycle-of-a-spot-instance"&gt;
  &lt;/a&gt;
  üöÄ &lt;strong&gt;The life cycle of a Spot Instance&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. You (or an application running on your behalf) submits a bid to run a desired number of EC2 instances of a particular type. The bid includes the price that you are willing to pay to use the instance for an hour.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. When your bid price exceeds the current Spot price (which varies based on supply and demand), your instances are run.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Spot instance is interrupted or reclaimed for one of following reasons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Price ‚Äì The Spot price is greater than your maximum price.&lt;/li&gt;
&lt;li&gt;Capacity ‚Äì If there are not enough unused EC2 instances to meet the demand for On-Demand Instances, Amazon EC2 interrupts Spot Instances. The order in which the instances are interrupted is determined by Amazon EC2.&lt;/li&gt;
&lt;li&gt;Constraints ‚Äì If your request includes a constraint such as a launch group or an Availability Zone group, these Spot Instances are terminated as a group when the constraint can no longer be met.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-launch-spot-instances"&gt;
  &lt;/a&gt;
  üöÄ &lt;strong&gt;How to Launch Spot Instances&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The most recommended service for launching Spot Instances is Amazon EC2 Auto Scaling especially Amazon EKS node group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you require more flexibility, have built your own instance launch workflows, or want to control individual aspects of the instance launches or the scaling mechanisms, you can use EC2 Fleet in Instant mode.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sf6Mj_4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/launch_spot.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sf6Mj_4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/launch_spot.png%3Fraw%3Dtrue" alt="Alt-text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#spot-instance-termination-notice"&gt;
  &lt;/a&gt;
  üöÄ &lt;strong&gt;Spot Instance Termination Notice&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The best way for you to gracefully handle Spot Instance interruptions is to architect your application to be fault-tolerant. To accomplish this, you can take advantage of Spot Instance interruption notices. A Spot Instance interruption notice is a warning that is issued &lt;strong&gt;two minutes&lt;/strong&gt; before Amazon EC2 stops or terminates your Spot Instance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It's recommended to check for these interruption notices every 5 seconds. eg. &lt;code&gt;Polling http://169.254.169.254/latest/meta-data/spot/termination-time every 5 second(s)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#deploy-the-node-termination-handler"&gt;
  &lt;/a&gt;
  üöÄ &lt;strong&gt;Deploy the node termination handler&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We will deploy a pod on each Spot Instance to detect the instance termination notification signal so that we can both terminate gracefully any pod that was running on that node, drain from load balancers and redeploy applications elsewhere in the cluster.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Helm chart we will use to deploy AWS Node Termination Handler on each Spot Instance uses a DaemonSet. This will monitor the EC2 meta-data service on each of the EC2 Spot Instances to capture EC2 interruption notices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Within the Node Termination Handler DaemonSet, the workflow can be summarized as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Identify that a Spot Instance is being reclaimed.&lt;/li&gt;
&lt;li&gt;Use the 2-minute notification window to gracefully prepare the node for termination.&lt;/li&gt;
&lt;li&gt;Taint the node and cordon it off to prevent new pods from being placed.&lt;/li&gt;
&lt;li&gt;Drain connections on the running pods.&lt;/li&gt;
&lt;li&gt;Replace the pods on remaining nodes to maintain the desired capacity.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In this post, I would like to enable SpotInterruptionDraining on SPOT instances only. Read more &lt;a href="https://github.com/aws/aws-node-termination-handler"&gt;AWS Node Termination Handler&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using helm deploy &lt;code&gt;aws-node-termination-handler&lt;/code&gt; with enable &lt;code&gt;enableSpotInterruptionDraining&lt;/code&gt; and &lt;code&gt;enableRebalanceMonitoring&lt;/code&gt;, plus webhookURL to send notification to slack, apply for spot instances only. We use &lt;code&gt;--set nodeSelector.lifecycle=spot&lt;/code&gt; to tell the all daemon sets where to place the node-termination-handler pods but the autoscaling group need to add the label &lt;code&gt;lifecycle=spot&lt;/code&gt; to it nodes or you can use any labels that matche the requirement&lt;br&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm repo add eks https://aws.github.io/eks-charts
helm upgrade --install aws-node-termination-handler \
  --namespace kube-system \
  --set enableSpotInterruptionDraining="true" \
  --set enableRebalanceMonitoring="true" \
  --set enableScheduledEventDraining="false" \
  --set nodeSelector.lifecycle=spot \
  --set webhookURL=https://hooks.slack.com/services/&amp;lt;ID&amp;gt; \
  eks/aws-node-termination-handler
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Check the pods
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl get pod -n kube-system |grep aws-node-termination-handler
aws-node-termination-handler-2gsq2              1/1     Running   0          2m      10.3.254.49    ip-10-3-254-49.ap-northeast-2.compute.internal    &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
aws-node-termination-handler-8tn5w              1/1     Running   0          2m      10.3.158.85    ip-10-3-158-85.ap-northeast-2.compute.internal    &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
aws-node-termination-handler-j8xf6              1/1     Running   0          2m      10.3.141.203   ip-10-3-141-203.ap-northeast-2.compute.internal   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Slack alarm&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rebalance recommendation
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_n4sCILR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/slack1.png%3Fraw%3Dtrue" alt="slack"&gt;
&lt;/li&gt;
&lt;li&gt;Spot interruption event
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EKDwQjmB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/spot_interrupt.jpg%3Fraw%3Dtrue" alt="interrupt"&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check CPU and mem cost by the pod&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kG6Z7bK3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/cpu_mem_cost.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kG6Z7bK3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/cpu_mem_cost.png%3Fraw%3Dtrue" alt="cost"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#spot-instance-best-practices"&gt;
  &lt;/a&gt;
  üöÄ &lt;strong&gt;Spot Instance Best Practices&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Flexible about instance types, for example, my applications almost run in java and they require much memory so I choose R5 type and its family could be r5.xlarge, r5a.xlarge, etc.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flexible of Availability Zone, here I give the case of using EKS node group.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Configure multiple node groups, scope each group to a single Availability Zone, and enable the &lt;code&gt;--balance-similar-node-groups&lt;/code&gt; feature in &lt;a href="https://dev.to/awscommunity-asean/kubernetes-cluster-autoscaler-with-irsa-3bg5"&gt;cluster autoscaler&lt;/a&gt; so that we will have at least each node in different zones and guarentee the HA. Especially when the PVC is attached to an AZ, the pod need to be start on a spot instance in same zone.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;eg. Create two node groups in different AZ using AWS cdk&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        self.eks_cluster.add_nodegroup_capacity(
        id="EksNodeGroupStateless",
        capacity_type=eks.CapacityType.SPOT,
        desired_size=1,
        disk_size=20,
        instance_types=[ec2.InstanceType("r5a.xlarge"), ec2.InstanceType("r5.xlarge")],
        labels={'role': 'worker', 'type': 'stateless', 'lifecycle': 'spot'},
        max_size=2,
        min_size=1,
        nodegroup_name='eks-node-group',
        node_role=worker_role,
        subnets=ec2.SubnetSelection(subnet_type=ec2.SubnetType.PRIVATE, availability_zones=['ap-northeast-2a'])
        )

        self.eks_cluster.add_nodegroup_capacity(
        id="EksNodeGroupStateful",
        capacity_type=eks.CapacityType.SPOT,
        desired_size=1,
        disk_size=20,
        instance_types=[ec2.InstanceType("r5a.xlarge"), ec2.InstanceType("r5.xlarge")],
        labels={'role': 'worker', 'type': 'stateful', 'lifecycle': 'spot'},
        max_size=2,
        min_size=1,
        nodegroup_name='eks-node-group-stateful',
        node_role=worker_role,
        subnets=ec2.SubnetSelection(subnet_type=ec2.SubnetType.PRIVATE, availability_zones=['ap-northeast-2b'])
        )
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare individual instances for interruptions: The best way for you to gracefully handle Spot Instance interruptions is to architect your application to be fault-tolerant, in EKS we can use HPA to ensure the number of available pods if one node down, and use cluster autoscaler to request new node.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Max price&lt;/strong&gt;: We recommend that you do not specify a maximum price, but rather let the maximum price default to the On-Demand price. A high maximum price does not increase your chances of launching a Spot Instance. See &lt;a href="https://aws.amazon.com/blogs/compute/new-amazon-ec2-spot-pricing/"&gt;EC2 Spot pricing model&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPDNzwVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/pricing_history.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPDNzwVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/pricing_history.png%3Fraw%3Dtrue" alt="Spot Instance pricing history"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Ref:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/awsmenacommunity/overview-of-amazon-ec2-spot-instances-3kph"&gt;https://dev.to/awsmenacommunity/overview-of-amazon-ec2-spot-instances-3kph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://instances.vantage.sh/"&gt;https://instances.vantage.sh/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://d1.awsstatic.com/events/reinvent/2019/REPEAT_1_Save_up_to_90_percent_and_run_production_workloads_on_Spot_Instances_CMP331-R1.pdf"&gt;https://d1.awsstatic.com/events/reinvent/2019/REPEAT_1_Save_up_to_90_percent_and_run_production_workloads_on_Spot_Instances_CMP331-R1.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;div class="ltag__user ltag__user__id__512906"&gt;
  
    .ltag__user__id__512906 .follow-action-button {
      background-color: #000000 !important;
      color: #62df88 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/vumdao" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bGwkUMWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ugeYdWM---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/512906/2472752c-cfd5-4e02-b3d8-55b790178884.png" alt="vumdao image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/vumdao"&gt;Vu Dao&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/vumdao"&gt;Awesome Devops || AWS SA || CloudOpz&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;




&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vumdao"&gt;
        vumdao
      &lt;/a&gt; / &lt;a href="https://github.com/vumdao/vumdao"&gt;
        vumdao
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>aws</category>
      <category>eks</category>
      <category>cloudopz</category>
      <category>spot</category>
    </item>
    <item>
      <title>5 UI Tips to Become a Better Front End Developer</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 25 Jul 2021 05:43:29 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/5-ui-tips-to-become-a-better-front-end-developer-1ae1</link>
      <guid>https://dev.to/ruppysuppy/5-ui-tips-to-become-a-better-front-end-developer-1ae1</guid>
      <description>&lt;p&gt;Often while starting out, beginners struggle to create &lt;em&gt;captivating&lt;/em&gt; &lt;strong&gt;UI&lt;/strong&gt; that gets users hooked to their applications. Today we are going to fix just that. &lt;/p&gt;

&lt;p&gt;But before starting I would like to point out that there is no &lt;strong&gt;One Right Answer&lt;/strong&gt; to Designing, anything that looks pleasing to the eye of a large majority of the people is considered &lt;em&gt;good design&lt;/em&gt;. In this article, we would go over 5 Tips that are considered &lt;em&gt;Good Design Practices&lt;/em&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-maintain-consistent-alignment"&gt;
  &lt;/a&gt;
  1. Maintain Consistent Alignment
&lt;/h1&gt;

&lt;p&gt;A lot of sites follow &lt;em&gt;Inconsistent Alignment&lt;/em&gt;, with different alignments for the &lt;em&gt;Navbar&lt;/em&gt; and the &lt;em&gt;Main Content&lt;/em&gt; of the site. This leads the websites to look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bol43x1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brj26gmvhhh9k0vuxywx.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bol43x1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brj26gmvhhh9k0vuxywx.PNG" alt="Alignment Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The example below looks much more structured:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FxNvmE6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/maak0kguwy4j4yofaj3s.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FxNvmE6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/maak0kguwy4j4yofaj3s.PNG" alt="Alignment Fix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-space-out-your-content"&gt;
  &lt;/a&gt;
  2. Space Out Your Content
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--btBxw7nf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0e6keqxr8zrnbs2q90vk.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--btBxw7nf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0e6keqxr8zrnbs2q90vk.PNG" alt="Spacing Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rjer6Q----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lwn14a58fy7th26rue27.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rjer6Q----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lwn14a58fy7th26rue27.PNG" alt="Spacing Fix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is one of the things you develop an eye for by default, as you gain more experience in developing more websites. As you can see here, the one with more spaced-out content looks much more professional. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; More spacing isn't always what is required, for example, you can get away with little spacing between the &lt;em&gt;Title&lt;/em&gt; and &lt;em&gt;Date&lt;/em&gt; in the case of a Blog website. &lt;/p&gt;

&lt;p&gt;Something that goes hand-in-hand with the previous point, maintain consistent spacing: the &lt;em&gt;padding/margin&lt;/em&gt; in the left &amp;amp; right sides should be equal, same is the case for the &lt;em&gt;padding/margin&lt;/em&gt; in the top &amp;amp; bottom.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-color-and-contrast"&gt;
  &lt;/a&gt;
  3. Color and Contrast
&lt;/h1&gt;

&lt;p&gt;Color is an inherent part of design and is simply the most important thing to keep in mind while developing a modern &lt;strong&gt;UI&lt;/strong&gt;, without proper Color &amp;amp; Contrast, even the websites with the best &lt;strong&gt;UI&lt;/strong&gt; end up looking like crap. You can see the significant improvement in the picture below, just by changing the colors:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D9zoEl5---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/130grpl85ak7ddem42jz.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D9zoEl5---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/130grpl85ak7ddem42jz.PNG" alt="Color Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AEiQ1T-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7serm7wplr2nih18715y.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AEiQ1T-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7serm7wplr2nih18715y.PNG" alt="Color Fix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use Tools like &lt;a href="https://coolors.co/6e2594-ecd444-808080-000000-ffffff"&gt;Coolors&lt;/a&gt; to generate colors that go well with each other. It's a good idea to limit the &lt;em&gt;number of colors&lt;/em&gt; you use to &lt;strong&gt;Two&lt;/strong&gt; (you can very well use different &lt;em&gt;hues&lt;/em&gt; of the same colors and some generic colors like &lt;em&gt;white&lt;/em&gt;, &lt;em&gt;black&lt;/em&gt; &amp;amp; &lt;em&gt;grey&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;Web Accessibility&lt;/strong&gt;, &lt;strong&gt;WCAG 2.0 level AA&lt;/strong&gt; requires a contrast ratio of at least &lt;strong&gt;4.5:1&lt;/strong&gt; for normal text and &lt;strong&gt;3:1&lt;/strong&gt; for large text. &lt;strong&gt;WCAG 2.1&lt;/strong&gt; requires a contrast ratio of at least &lt;strong&gt;3:1&lt;/strong&gt; for graphics and user interface components (such as form input borders). &lt;strong&gt;WCAG Level AAA&lt;/strong&gt; requires a contrast ratio of at least &lt;strong&gt;7:1&lt;/strong&gt; for normal text and &lt;strong&gt;4.5:1&lt;/strong&gt; for large text.&lt;/p&gt;

&lt;p&gt;To check your Website's &lt;strong&gt;Accessibility&lt;/strong&gt;, you can use tools like &lt;strong&gt;Lighthouse&lt;/strong&gt; (from &lt;strong&gt;Chrome Dev Tools&lt;/strong&gt;) and &lt;a href="https://wave.webaim.org/"&gt;Wave&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-typography"&gt;
  &lt;/a&gt;
  4. Typography
&lt;/h1&gt;

&lt;p&gt;You can easily get away with using only one &lt;strong&gt;Font Family&lt;/strong&gt; for your entire website. At most you should try to keep the &lt;strong&gt;Font Families&lt;/strong&gt; limited to &lt;strong&gt;Two&lt;/strong&gt; as using multiple &lt;strong&gt;fonts&lt;/strong&gt; can easily overwhelm the user and even make the website look unstructured and unprofessional.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X6Ip4qET--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubevxxbtkftdasb1fc0n.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X6Ip4qET--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubevxxbtkftdasb1fc0n.PNG" alt="Typography Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--83TzbB16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5bzcw2tvxrwu32jl0jb.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--83TzbB16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5bzcw2tvxrwu32jl0jb.PNG" alt="Typography Fix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-visual-hierarchy"&gt;
  &lt;/a&gt;
  5. Visual Hierarchy
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Visual Hierarchy&lt;/strong&gt; is also one of the most crucial components of an amazing &lt;strong&gt;UI&lt;/strong&gt;. There is a great quote by a &lt;em&gt;Great Developer&lt;/em&gt; (read: By Me üòú):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A great developer is someone who makes implied actions evident&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Visual Hierarchy&lt;/strong&gt; is used to highlight certain parts of the Website which you want the users to focus on. You can employ several tactics for making users focus on a part of the site.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No Focus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQBsiBfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7ewpawl3x88nt0by6u0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQBsiBfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7ewpawl3x88nt0by6u0.png" alt="No Focus"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Focus using Contrast&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h1gaYOmd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1l8q3zgmt0xy6vqmae3t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h1gaYOmd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1l8q3zgmt0xy6vqmae3t.png" alt="Focus using Contrast"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Focus using Color&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ydZj0c9u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmb3m84r0ctm9e3kt75a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ydZj0c9u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmb3m84r0ctm9e3kt75a.png" alt="Focus using Color"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Focus using Scale&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S0bMMl08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wky5cy2jlokf1vxvo7w0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S0bMMl08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wky5cy2jlokf1vxvo7w0.png" alt="Focus using Scale"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Focus using Contrast, Color &amp;amp; Scale&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yrXYAjLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hcaq2u9bdmcxdx3bdlt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yrXYAjLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hcaq2u9bdmcxdx3bdlt.png" alt="Focus using Contrast, Color &amp;amp; Scale"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visual Hierarchy&lt;/strong&gt; provides information to the users where they should look at&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MmJgBJLo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0mkh6f49887msf28kd6.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MmJgBJLo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0mkh6f49887msf28kd6.PNG" alt="Visual Hierarchy Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this example, it's not evident in one glance where we should focus our attention on. This can easily be improved by making some minor changes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0WX5-JUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fad4wub4bhkqp9bxcar2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0WX5-JUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fad4wub4bhkqp9bxcar2.PNG" alt="Visual Hierarchy Fix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this article, we went through some &lt;strong&gt;UI&lt;/strong&gt; concepts that help you develop a more attractive &lt;strong&gt;UI&lt;/strong&gt;. I would like to remind you &lt;strong&gt;UI&lt;/strong&gt; design is quite subjective and as stated in the &lt;em&gt;Intro&lt;/em&gt;, there is no &lt;strong&gt;ONE&lt;/strong&gt; correct answer. Hope you will employ these concepts in your applications and make awe-inspiring websites :)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a Digital Nomad in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For the past few weeks, I had a lot of people reach out to me asking these questions hundreds of times, so I decided to add a dedicated &lt;strong&gt;FAQ&lt;/strong&gt; section for them&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Front-End Web Dev?&lt;/strong&gt;&lt;br&gt;
First get the fundamentals of &lt;strong&gt;HTML&lt;/strong&gt;, &lt;strong&gt;CSS&lt;/strong&gt;, &lt;strong&gt;JS&lt;/strong&gt; down; Learn any &lt;em&gt;front-end framework/library&lt;/em&gt; (&lt;strong&gt;React&lt;/strong&gt;, &lt;strong&gt;Vue&lt;/strong&gt;, &lt;strong&gt;Angular&lt;/strong&gt;); Then keep making &lt;strong&gt;Projects&lt;/strong&gt; or make &lt;strong&gt;Open Source Contributions&lt;/strong&gt; to attain mastery.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relevant Article Links&lt;/strong&gt;&lt;br&gt;
    1. &lt;a href="https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p"&gt;Front End Project Ideas&lt;/a&gt;&lt;br&gt;
    2. &lt;a href="https://dev.to/ruppysuppy/zero-to-hero-get-started-with-open-source-10b7"&gt;Get Started With Open Source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;br&gt;
Sorry, I already am under a lot of workload and would not have the time to mentor anyone.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Connect to me on&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>ui</category>
      <category>ux</category>
      <category>webdesign</category>
    </item>
    <item>
      <title>What is  Anchor tag ?</title>
      <author>Hrushikesh41</author>
      <pubDate>Sun, 25 Jul 2021 05:09:01 +0000</pubDate>
      <link>https://dev.to/hrushikesh41/what-is-a-tag-553j</link>
      <guid>https://dev.to/hrushikesh41/what-is-a-tag-553j</guid>
      <description>&lt;p&gt;Hello Guy's&lt;/p&gt;

&lt;p&gt;I'm back with another post. As mentioned in my previous post that my next post will be on anchor tags. Hope you liked my previous post.&lt;/p&gt;

&lt;p&gt;So let's start üëç&lt;/p&gt;

&lt;p&gt;Let's take for example that whenever you visit any site it asks you to login. But sometimes it happens that you forget your password. So you click on the forgot password link which redirects you to another page.&lt;/p&gt;

&lt;p&gt;Ever wondered how does it happens ??&lt;/p&gt;

&lt;p&gt;It is done with the help of anchor tag.&lt;/p&gt;

&lt;p&gt;Anchor tag means hyperlink. It is used to link one HTML page to another. &lt;/p&gt;

&lt;p&gt;The main attribute in this element is &lt;b&gt;href&lt;/b&gt;. In this &lt;b&gt;href&lt;/b&gt; attribute we specify the location of the file. Whenever the user will click on the link, user will be redirected to the page that you have provided in &lt;b&gt;href&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;Let's see it practically üë©‚Äçüíªüë©‚Äçüíª&lt;/p&gt;

&lt;p&gt;HTML&lt;/p&gt;

&lt;p&gt;anchor tag is created by writing just a letter in arrows. The href attribute is placed inside the &lt;b&gt;a tag&lt;/b&gt;. You can see the code below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v-8w9IfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1j6mjr734tzvvtmvcclq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v-8w9IfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1j6mjr734tzvvtmvcclq.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your hyperlink will be seen like this :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gQMJ-Wm9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f41fsp0z1jz0neag0o98.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gQMJ-Wm9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f41fsp0z1jz0neag0o98.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now in the Above HTML code you might have noticed that I have written "#" in href attribute. this means that hyperlink will be created but will not redirect to any link. &lt;/p&gt;

&lt;p&gt;It's time to add a file in href attribute.&lt;/p&gt;

&lt;p&gt;Now there are multiple ways to give location. Select the file that you want to give in href and press right click copy the entire file location. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n0dol9hy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyuj8mdoq67ewxxlwxuu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n0dol9hy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyuj8mdoq67ewxxlwxuu.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now just paste the file location in href attribute.&lt;/p&gt;

&lt;p&gt;Second method: If you have multiple files or folder in your project just write "./" in href attribute and you can see the files and folder. Just select it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0_bcZy2X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/995arqdiubk8aep7g1li.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0_bcZy2X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/995arqdiubk8aep7g1li.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now when you click on the hyperlink it redirect user to the new page that you gave in href. &lt;/p&gt;

&lt;p&gt;You can see the output below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gz5P7oC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oktj13escsk9fkt40gyo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gz5P7oC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oktj13escsk9fkt40gyo.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So here how you can create a hyperlink in your page. &lt;/p&gt;

&lt;p&gt;Give it try in your navbar. Just create some pages and place the file locations in href. &lt;/p&gt;

&lt;p&gt;If you don't know how to create navbar have a look on my previous post. &lt;/p&gt;

&lt;p&gt;See you in next post. &lt;/p&gt;

&lt;p&gt;Happy Coding üë©‚Äçüíªüë©‚Äçüíªüë©‚Äçüíª&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>vscode</category>
    </item>
    <item>
      <title>10 Unique CSS Properties</title>
      <author>Vansh Sharma</author>
      <pubDate>Sun, 25 Jul 2021 05:07:34 +0000</pubDate>
      <link>https://dev.to/vanshsh/10-unique-css-properties-5fb9</link>
      <guid>https://dev.to/vanshsh/10-unique-css-properties-5fb9</guid>
      <description>&lt;p&gt;CSS has 100s of properties to style. &lt;strong&gt;Remembering&lt;/strong&gt; all of them is not an easy task and also it is not feasible to learn everything. But there are some &lt;strong&gt;&lt;em&gt;unfamiliar&lt;/em&gt;&lt;/strong&gt; properties using them in your &lt;strong&gt;Style Sheet&lt;/strong&gt; can give your project  &lt;strong&gt;different&lt;/strong&gt; look. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-borderimage"&gt;
  &lt;/a&gt;
  1. border-image
&lt;/h2&gt;

&lt;p&gt;The border-image property allows you to specify an image to be used as the border around an element.&lt;/p&gt;

&lt;p&gt;The border-image property is a shorthand property for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;border-image-source&lt;/strong&gt;: The path to the image to be used as a border
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;border-image-source : url()&lt;/code&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;border-image-slice:&lt;/strong&gt; The border-image-slice property specifies how to slice the image specified by border-image-source. The image is always sliced into nine sections: four corners, four edges, and the middle. The "middle" part is treated as fully transparent unless the fill keyword is set.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;border-image-slice: number|%|fill|&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;border-image-width&lt;/strong&gt;: The border-image-width property specifies the width of the border-image.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;border-image-width: number|%|&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;border-image-outset&lt;/strong&gt;: The border-image-outset property specifies the amount by which the border image area extends beyond the border box.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;border-image-outset: length|number|&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;border-image-repeat&lt;/strong&gt;: The border-image-repeat property specifies whether the border image should be repeated, rounded or stretched.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;border-image-repeat: stretch|repeat|round|&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gK6crMYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032221408/EJlRuCSv_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gK6crMYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032221408/EJlRuCSv_.png" alt="Screenshot (722).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-boxdecorationbreak"&gt;
  &lt;/a&gt;
  2. box-decoration-break:
&lt;/h2&gt;

&lt;p&gt;The box-decoration-break property specifies how the background, padding, border, border-image, box-shadow, margin, and clip-path of an element is applied when the box for the element is fragmented.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;box-decoration-break: slice|clone|&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CuHHDYOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032230874/XoHW5AHX-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CuHHDYOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032230874/XoHW5AHX-.png" alt="Screenshot (723).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-boxshadow"&gt;
  &lt;/a&gt;
  3. box-shadow:
&lt;/h2&gt;

&lt;p&gt;The box-shadow property attaches one or more shadows to an element.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;box-shadow: none|h-offset v-offset blur spread color |&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0xzarOLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032249944/Su_6atFU5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0xzarOLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032249944/Su_6atFU5.png" alt="Screenshot (724).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-captionside"&gt;
  &lt;/a&gt;
  4. caption-side
&lt;/h2&gt;

&lt;p&gt;The caption-side property specifies the placement of a table caption.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;caption-side: top|bottom|&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MuVTJgMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032275767/hP0RkrQ41.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MuVTJgMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032275767/hP0RkrQ41.png" alt="Screenshot (725).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-clear"&gt;
  &lt;/a&gt;
  5. clear
&lt;/h2&gt;

&lt;p&gt;The clear property controls the flow next to floated elements.&lt;br&gt;
The clear property specifies what should happen with the element that is next to a floating element.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;clear: none|left|right|both&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eohbT2MM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032284403/1hroi4bbC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eohbT2MM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032284403/1hroi4bbC.png" alt="Screenshot (726).png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#6-filter"&gt;
  &lt;/a&gt;
  6. filter
&lt;/h2&gt;

&lt;p&gt;The filter property defines visual effects (like blur and saturation) to an element often &lt;a href="" class="article-body-image-wrapper"&gt;&lt;img&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; filter: none | blur() | brightness() | contrast() | drop-shadow() | grayscale() | hue-rotate() | invert() | 
opacity() | saturate() | sepia() | url()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Co5irDvx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032307336/DOa12tpaV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Co5irDvx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032307336/DOa12tpaV.png" alt="Screenshot (727).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-hyphens"&gt;
  &lt;/a&gt;
  7. hyphens
&lt;/h2&gt;

&lt;p&gt;The hyphens property defines whether hyphenation is allowed to create more soft wrap opportunities within a line of text.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hyphens: none|manual|auto|&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zvo0PHop--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032325547/ZD1pqNU-4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zvo0PHop--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032325547/ZD1pqNU-4.png" alt="Screenshot (728).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-isolation"&gt;
  &lt;/a&gt;
  8. isolation
&lt;/h2&gt;

&lt;p&gt;The isolation property defines whether an element must create a new stacking content.&lt;br&gt;
&lt;code&gt;isolation: auto|isolate|&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_wQxavHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032334497/8cfAgKJbp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_wQxavHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032334497/8cfAgKJbp.png" alt="Screenshot (729).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-quotes"&gt;
  &lt;/a&gt;
  9. quotes
&lt;/h2&gt;

&lt;p&gt;The quotes property sets the type of quotation marks for quotations.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;quotes: none|string|&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WGo-pBIr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032347870/G7hZhpB8e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WGo-pBIr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032347870/G7hZhpB8e.png" alt="Screenshot (730).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-userselect"&gt;
  &lt;/a&gt;
  10. user-select
&lt;/h2&gt;

&lt;p&gt;The user-select property specifies whether the text of an element can be selected.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;user-select: auto|none|text|&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n4oyt0WT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032356113/M-YZLdE6v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4oyt0WT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627032356113/M-YZLdE6v.png" alt="Screenshot (731).png"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;That's all for this &lt;strong&gt;Blog&lt;/strong&gt;. If you liked and learned from this blog. Do give it a &lt;strong&gt;&lt;em&gt;LIKE&lt;/em&gt;&lt;/strong&gt; and share your valuable &lt;strong&gt;&lt;em&gt;FEEDBACK&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We will meet in the next blog. Till then &lt;strong&gt;&lt;em&gt;Keep Learning, Keep Growing&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  Connect with me üëá
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/Vanshsh2701"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y-ozPGI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.icons8.com/clouds/60/000000/twitter.png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://www.linkedin.com/in/vanshsharma27/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ObNF6flA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.icons8.com/bubbles/60/000000/linkedin.png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="mailto:vanshsharma9354@gmail.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VDnSwS5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.icons8.com/clouds/60/000000/gmail.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
