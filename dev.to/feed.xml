<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Everything About Django - 3 (Models and Migrations)</title>
      <author>Priyanshu Panwar</author>
      <pubDate>Mon, 08 Nov 2021 07:03:26 +0000</pubDate>
      <link>https://dev.to/priyanshupanwar/everything-about-django-3-models-and-migrations-4660</link>
      <guid>https://dev.to/priyanshupanwar/everything-about-django-3-models-and-migrations-4660</guid>
      <description>&lt;p&gt;This is the &lt;strong&gt;third blog&lt;/strong&gt; of the series &lt;strong&gt;Everything About Django&lt;/strong&gt;. In this article we are going to study about &lt;strong&gt;Models&lt;/strong&gt; and &lt;strong&gt;Migrations&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-models"&gt;
  &lt;/a&gt;
  What are Models?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Models are the database tables.&lt;/li&gt;
&lt;li&gt;Django uses ORM (Object Relational Mapping) for models.&lt;/li&gt;
&lt;li&gt;Each model is a subclass inherited from &lt;code&gt;django.db.models.Model&lt;/code&gt; class.&lt;/li&gt;
&lt;li&gt;Every attribute in Django Model specifies a field in the database table.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-orm"&gt;
  &lt;/a&gt;
  What is ORM?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ORM means Object Relational Mapper, one of the most powerful feature of Django.&lt;/li&gt;
&lt;li&gt;Django's ORM is just a pythonical way to create SQL to query and manipulate your database and get results in a pythonic fashion.&lt;/li&gt;
&lt;li&gt;How wonderful this is, you need not type SQL and do all the db stuff.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-model"&gt;
  &lt;/a&gt;
  How to create a model?
&lt;/h2&gt;

&lt;p&gt;Let's take an example to see how a model is made.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.db import models
class Student(models.Model):
    name = models.CharField(max_length=100)
    roll = models.IntegerField()
    address = models.CharField(max_length=200)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way I have created a table Student with the following attributes : name - Char, roll - Integer, address - Char.&lt;br&gt;
In SQL we do this by :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CREATE TABLE Student
(
roll int,
name varchar(100),
address varchar(200)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So you see how easy and pythonic this is with Django.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-migration"&gt;
  &lt;/a&gt;
  What is a migration?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Once we have defined a model, it's just a python code not yet reflected in our database, no table is created so far, until we migrate this to our database.&lt;/li&gt;
&lt;li&gt;Once our models is defined, we need to run &lt;code&gt;python manage.py makemigrations&lt;/code&gt;. See the example bro.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GZdJibKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ll3m8xslaqsknar7kpcq.png" alt="makemigrations" width="562" height="75"&gt;
&lt;/li&gt;
&lt;li&gt;Here core is the app in which my models is defined. It creates a folder in my app &lt;code&gt;migrations&lt;/code&gt;.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NfXogNkS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fph7sm29z6vypjbqn59i.png" alt="migrations" width="161" height="262"&gt;
&lt;/li&gt;
&lt;li&gt;With every makemigrations, a file is created like &lt;code&gt;0001_initial.py&lt;/code&gt; which contains the information about our reflected changes in the database, which looks like this.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KfdLHpUj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cm1yyxjki16yuyqza18q.png" alt="0001_initial.py" width="880" height="614"&gt;
This is a internal file created by django to reflect changes in the db.&lt;/li&gt;
&lt;li&gt;Once we have made migrations, we need to actually reflect them in the database to create and modify the table. For this run, &lt;code&gt;python manage.py migrate&lt;/code&gt;. This command will run the latest migrations made and reflect their changes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will create an article on tips while creating a model, where I will define all the attributes, functions one should define in a model.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  THANK YOU
&lt;/h2&gt;

&lt;p&gt;You can find me on : &lt;a href="http://priyanshu-panwar.github.io/"&gt;Priyanshu Panwar&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/priyanshu-panwar"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please feel free to comment for any help or topic I should write an article on.&lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Animate and Change Header Background on Scroll</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Mon, 08 Nov 2021 07:03:03 +0000</pubDate>
      <link>https://dev.to/avneesh0612/animate-and-change-header-background-on-scroll-1cci</link>
      <guid>https://dev.to/avneesh0612/animate-and-change-header-background-on-scroll-1cci</guid>
      <description>&lt;p&gt;You might have seen some web apps where the header changes its color or becomes glassmorphic when you scroll down. So in this tutorial, I am going to show you how you can do the same. Let's jump right into it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.loom.com/share/432917e923304aa5807ef6a6228a38b9"&gt;https://www.loom.com/share/432917e923304aa5807ef6a6228a38b9&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#create-a-new-react-app"&gt;
  &lt;/a&gt;
  Create a new react app
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app animated-header
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#cleanup"&gt;
  &lt;/a&gt;
  Cleanup
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Delete everything in the app div in &lt;code&gt;App.js&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "./App.css";

function App() {
  return &amp;lt;div className="app"&amp;gt;&amp;lt;/div&amp;gt;;
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Delete everything in &lt;code&gt;App.css&lt;/code&gt; and add this basic styling-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.app {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;in &lt;code&gt;index.css&lt;/code&gt; add-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* {
  margin: 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-the-navbar"&gt;
  &lt;/a&gt;
  Creating the navbar
&lt;/h2&gt;

&lt;p&gt;Create a new file &lt;code&gt;Header.js&lt;/code&gt; in the &lt;code&gt;src&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;I am creating a very simple navbar-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "./Header.css";

const Header = () =&amp;gt; {
  return (
    &amp;lt;nav className="header"&amp;gt;
      &amp;lt;h3&amp;gt;I am a nav&amp;lt;/h3&amp;gt;
    &amp;lt;/nav&amp;gt;
  );
};

export default Header;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to create a &lt;code&gt;Header.css&lt;/code&gt; file for our stylings. I am going to add very basic stylings, feel free to style it more as per your app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.header {
  padding: 20px 0px;
  background-color: #282c34;
  text-align: center;
  position: fixed;
  top: 0;
  width: 100vw;
}

.header &amp;gt; h3 {
  color: white;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Render the Header&lt;/strong&gt;&lt;br&gt;
In &lt;code&gt;App.js&lt;/code&gt; add the header and import it-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "./App.css";
import Header from "./Header";

function App() {
  return (
    &amp;lt;div className="app"&amp;gt;
      &amp;lt;Header /&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kp6W7zZw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295628487/UinfRTRZdq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kp6W7zZw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295628487/UinfRTRZdq.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-dummy-section"&gt;
  &lt;/a&gt;
  Adding dummy section
&lt;/h2&gt;

&lt;p&gt;In &lt;code&gt;App.js&lt;/code&gt; I am going to add a dummy section with some text, to see the navbar properly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "./App.css";
import Header from "./Header";

function App() {
  return (
    &amp;lt;div className="app"&amp;gt;
      &amp;lt;Header /&amp;gt;
      &amp;lt;div className="landing_page"&amp;gt;
        &amp;lt;h2&amp;gt;
          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Architecto
          nisi qui iste quos placeat sint explicabo labore. Vero quaerat odio
          reprehenderit, id laborum placeat harum fugit? Explicabo dolorem
          obcaecati nostrum.Lorem ipsum dolor sit amet, consectetur adipisicing
          elit. Architecto nisi qui iste quos placeat sint explicabo labore.
          Vero quaerat odio reprehenderit, id laborum placeat harum fugit?
          Explicabo dolorem obcaecati nostrum.Lorem ipsum dolor sit amet,
          consectetur adipisicing elit. Architecto nisi qui iste quos placeat
          sint explicabo labore. Vero quaerat odio reprehenderit, id laborum
          placeat harum fugit? Explicabo dolorem obcaecati nostrum.
        &amp;lt;/h2&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give us some text below our navbar like this-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AnUSuHb0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295821659/b7CmOi3wz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AnUSuHb0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295821659/b7CmOi3wz.png" alt="image.png" width="880" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's add some stylings to the h2 tag and the landing page div&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.landing_page {
  display: flex;
  flex-direction: column;
  padding-top: 40vh;
  height: 100vh;
  width: 100vw;
  background-color: aqua;
}

.landing_page &amp;gt; h2 {
  margin: 0 auto;
  width: 80vw;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This styles will center the text and give it an aqua background with a y-axis scroll as it is more than 100vh.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RiFAcWLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295903287/Pfu7PRLa9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RiFAcWLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636295903287/Pfu7PRLa9.png" alt="image.png" width="880" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-additional-class-based-on-scroll"&gt;
  &lt;/a&gt;
  Adding additional class based on scroll
&lt;/h3&gt;

&lt;p&gt;Create a state to hold if we need to change the background or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [animateHeader, setAnimateHeader] = useState(false);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setting the state based on scroll-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  useEffect(() =&amp;gt; {
    const listener = () =&amp;gt; {
      if (window.scrollY &amp;gt; 140) {
        setAnimateHeader(true);
      } else setAnimateHeader(false);
    };
    window.addEventListener("scroll", listener);

    return () =&amp;gt; {
      window.removeEventListener("scroll", listener);
    };
  }, []);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You might need to change the value for scrollY based on your app needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#styling-the-animated-header"&gt;
  &lt;/a&gt;
  Styling the animated header
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.header--animated {
  background: rgba(255, 255, 255, 0.3);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  backdrop-filter: blur(4px);
  box-shadow: rgba(255, 255, 255, 0.3);
}

.header--animated &amp;gt; h3 {
  color: black;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give you a glassmorphic background on scrolling.&lt;/p&gt;

&lt;p&gt;I am also going to increase the padding a bit in the animated header-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.header--animated {
  background: rgba(255, 255, 255, 0.3);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  backdrop-filter: blur(4px);
  box-shadow: rgba(255, 255, 255, 0.3);
  padding: 25px 0px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Make the animation smoother&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;.header&lt;/code&gt; I will add one more property-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;transition: all 0.1s;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you could also make your header beautiful and better like this. See ya in the next one ✌️&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful links
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/avneesh0612/animated-header-demo"&gt;GitHub repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://avneesh-links.vercel.app/"&gt;Let's connect&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>40+ Login/Sign up Form To Compliment Your Website 2021</title>
      <author>ThemeWagon</author>
      <pubDate>Mon, 08 Nov 2021 06:44:13 +0000</pubDate>
      <link>https://dev.to/themewagon/40-loginsign-up-form-to-compliment-your-website-2021-4nib</link>
      <guid>https://dev.to/themewagon/40-loginsign-up-form-to-compliment-your-website-2021-4nib</guid>
      <description>&lt;p&gt;&lt;strong&gt;Login/Sign up&lt;/strong&gt; page can be counted as a gateway to extensive user interaction. Usually Login system prevents unauthorized access to private data and allows elaborate communication. It requires username and a password for user identification and authentication. You get to communicate with the admin or get user access to the platform through a login system. For example, if you want to join Twitter, you have to get authenticated by them before giving you access to their platform. If you don't have an account, you have to sign up first and log in to the platform.&lt;/p&gt;

&lt;p&gt;As for signing up, users have to fill up some input fields like First Name, Last Name, Gender, Email, Mobile Number, Password, etc. Many registration forms are not user-friendly, and users always want to go through a small authentication system. So while developing an authentication system, you have to keep it as simple as you can.&lt;/p&gt;

&lt;p&gt;To craft a simple sign-in/sign-up form, you should be ware of some key features. First, you have to clarify where to log in, and it's important to differentiate between login and registration forms. If there is an option to sign in with external accounts (for example, Facebook), it is more user-encouraging. Secondly, you should put an option for "Forget password" on the login page as it's quite normal that many are going to forget their password without any particular reason. It would be best if you put all the features to fulfill user's satisfaction in a simple way. A recent study found that &lt;a href="https://seo-hacker.com/user-registration-affects-business/" rel="nofollow noopener"&gt;seventy-seven percent(77%)&lt;/a&gt; of users agreed that websites should offer social logins and &lt;a href="https://seo-hacker.com/user-registration-affects-business/" rel="noopener"&gt;sixty-five percent(65%)&lt;/a&gt; of consumers return to a website that automatically welcomes them through social login.&lt;/p&gt;

&lt;p&gt;In this article, we are presenting some user-friendly and simple collection of login and sign-up forms. These forms are completely &lt;b&gt;free and highly flexible&lt;/b&gt; that anyone can use in one's project easily. So, let's have a look at the collection.&lt;/p&gt;

&lt;h2&gt;01. Login/Sign up form with animation&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/JjWVPXy" rel="noopener"&gt;&lt;br&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4iArt4E1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/1.gif" alt="40+ free login and sign up form 2021" width="600" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This login form is perfect for those who want something basic and dynamic. In addition, when you click on the plus sign the registration form appears with a creative animation effect. &lt;b&gt;No dependency on jQuery&lt;/b&gt;, To obtain this effect, you just attach the javascript file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/JjWVPXy" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;02. HTML/CSS form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/KKWYPGM" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KR4VspRV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/2.gif" alt="40+ free login and sign up form 2021" width="600" height="393"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This lovely form was created using simply &lt;b&gt;HTML and CSS&lt;/b&gt;. It arrives with a stunning animation effect. Check it out, it's completely free to use.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/KKWYPGM" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;03. Slider Authentication form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/mr-zouraiz123/full/ZEeKMVP" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AnjeWLjM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/3.gif" alt="40+ free login and sign up form 2021" width="800" height="524"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Zouriaz created a sign-up and login form, which is accessed by two tab buttons at the top of the form. It's built with &lt;b&gt;HTML, CSS, Javascript&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/mr-zouraiz123/pen/ZEeKMVP" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;04. Login &amp;amp; Signup form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/jOBRNMO" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fZahYm28--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/4.gif" alt="40+ free login and sign up form 2021" width="800" height="524"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This template is for you if you're looking for a fully unique and modern-day designed login form for your website. It has a fantastic shaking hover effect. You can also sign up with social media account. &lt;b&gt;No dependency upon jQuery&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/jOBRNMO" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;05. Awesome Authentication page&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/LYWaoog" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r6IAEnOD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/5.gif" alt="40+ free login and sign up form 2021" width="800" height="524"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This simple authentication template can be used free of charge. The code is simple, and if you want to change the color scheme to suit your needs, simply change it. You must &lt;b&gt;add some Javascript code&lt;/b&gt; for this stunning effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/LYWaoog" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;06. Creative login/sign up form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/WNpWeRe" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--amgPr0so--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/6.gif" alt="40+ free login and sign up form 2021" width="800" height="524"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This simple authentication template can be used free of charge. The code is simple, and if you want to change the color scheme to suit your needs, simply change it. Keep in mind that you'll need to use the click function in javascript to get the spinning effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/WNpWeRe" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;07. Login &amp;amp; sign-up form with animation concept&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/WNpWeWw" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7dQwrB97--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/7.gif" alt="40+ free login and sign up form 2021" width="600" height="274"&gt;&lt;/a&gt;&lt;br&gt;This login template features a stunning motion effect and a modern style. HTML, CSS, and Javascript are all included in the template. You must &lt;b&gt;include the javascript file&lt;/b&gt; if you wish to utilize this form with this effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/WNpWeWw" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;08. Sign up/Login form&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codepen.io/ehermanson/full/KwKWEv" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EWuuhrzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/8.gif" alt="40+ free login and sign up form 2021" width="864" height="536"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The registration form with a black backdrop is attractive, contemporary. It’s free to use and created by Eric. It's built with &lt;b&gt;HTML,CSS and Javascript&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/ehermanson/pen/KwKWEv" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;09. Login/Registration Form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/andytran/full/GpyKLM" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0zSQVc0n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/9.gif" alt="40+ free login and sign up form 2021" width="600" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It uses HTML, CSS, and Javascript and is created by Andy Tran. When you click on a toggle button, a sliding effect is seen on the registration form. &lt;b&gt;No dependency on jQuery&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/andytran/pen/GpyKLM" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;10. Sign in &amp;amp; Sign up modal&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/THEORLAN2/full/MyedKo" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BBc2sLzZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/10.gif" alt="40+ free login and sign up form 2021" width="600" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dany Santos created this form. This form has a stunning slider effect and a background video effect. &lt;b&gt;HTML, CSS, and Javascript&lt;/b&gt; were used to make it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/THEORLAN2/pen/MyedKo" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;11. HTML5/CSS3 login and signup form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/joshsorosky/full/gaaBoB" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WJ31Y9Ep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/11.gif" alt="40+ free login and sign up form 2021" width="600" height="478"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With a dark backdrop, Josh Sorosky has created a beautiful login and sign-up form. There is a choose button for the option to keep me signed in and an &lt;b&gt;animation effect with Javascript dependency&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/joshsorosky/pen/gaaBoB" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;12. Simple login &amp;amp; Signup form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/JjWzVwE" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9UYZkCSc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/12.gif" alt="40+ free login and sign up form 2021" width="600" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a basic HTML, CSS, and Javascript-based login and signup form with a slider effect. This form is &lt;b&gt;dependent on jQuery&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/JjWzVwE" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;13. Slider login/Signup form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/Anna_Batura/full/QEAqyE" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tlBxiPjU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/13.gif" alt="40+ free login and sign up form 2021" width="600" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A modal login form in HTML/CSS with a &lt;b&gt;javascript slider effect&lt;/b&gt;. Anna Batura designed it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/Anna_Batura/pen/QEAqyE" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;14. Animated Login &amp;amp; Signup Form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/khadkamhn/full/ZGvPLo" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H7sB1boo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/14.gif" alt="40+ free login and sign up form 2021" width="600" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s a beautifully animated login and sign-up form with a transparent background image created by Mohan Khadka.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/khadkamhn/pen/ZGvPLo?editors=1100" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;15. Sign in/Sign up form with CSS&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/rNybNxJ" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZHJ1qkcS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/15.gif" alt="40+ free login and sign up form 2021" width="600" height="395"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A beautiful login template! This Login and signup is a very basic and clean style, with a lovely backdrop that adds to the aesthetic attractiveness of your website. Its effect was created with only CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/rNybNxJ?editors=1100" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;16. Sign in/Sign up form modal&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/THEORLAN2/full/mPLPwj/" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tp7fCZ-w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/16.gif" alt="40+ free login and sign up form 2021" width="600" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This modal is simple and elegant, giving your project a polished appearance. Dany Santos created this beautiful login page. It requires &lt;b&gt;jQuery dependency&lt;/b&gt; and essential for the animation effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/THEORLAN2/pen/mPLPwj" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;17. Falcon login/signup&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TSpnAWNY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/07/falcon-login.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TSpnAWNY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/07/falcon-login.gif" alt="Falcon login/signup" width="600" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Login/Sign-up section of Falcon is unique and crafted deliberately. But it is a part of &lt;a href="https://themewagon.com/theme_tag/quality-checked/?ref=topNav" rel="noopener"&gt;premium product&lt;/a&gt;, Falcon which is available at &lt;a href="https://themes.getbootstrap.com/store/themewagon/" rel="noopener"&gt;Bootstrap market&lt;/a&gt;. The Login/Signup form of Falcon got no dependency on JQuery, Which makes it perfectly suitable for &lt;b&gt;Bootstrap 5&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themes.getbootstrap.com/product/falcon-admin-dashboard-webapp-template/" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;18. Double slider login/signup&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/PoprgzP" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hy89ZaHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/18.gif" alt="40+ free login and sign up form 2021" width="600" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This code is ready to use, all you have to do now is include it into your project. The animation effects make this form special and to &lt;b&gt;get this effect you need to add a javascript file&lt;/b&gt;. Florin Pop is the one who created it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/PoprgzP" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;19. Login/signup with pure CSS&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/eYvoYgM" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ahIZvvY1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/19.gif" alt="40+ free login and sign up form 2021" width="600" height="397"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This login and sign up form is created with only HTML and CSS. Its animation effect is so smooth and unique. You can use it any project because there is &lt;b&gt;no dependencies&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/eYvoYgM?editors=1100" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;20. Sparrow Login/signup&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://themes.getbootstrap.com/product/sparrow-simple-seamless-alive/" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bhQSevIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/20.gif" alt="40+ free login and sign up form 2021" width="600" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another login/signup page from a &lt;a href="https://themes.getbootstrap.com/store/themewagon/" rel="noopener"&gt;premium&lt;/a&gt; template, &lt;a href="https://themes.getbootstrap.com/product/sparrow-simple-seamless-alive/" rel="noopener"&gt;Sparrow&lt;/a&gt;. Simple layout with OAuth feature makes its Login/Sign-up page stand out among the crowd. Sparrow's login/signup form is &lt;b&gt;dependent upon jQuery&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themes.getbootstrap.com/product/sparrow-simple-seamless-alive/" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;21. Rotating Login/signup form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/ourystd/full/MxLbXQ" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7qdR2YDi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/21.gif" alt="40+ free login and sign up form 2021" width="600" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Login with a rotating effect is a unique and fun tool. It not only has all of the essential functions of a login and sign-up form, but it also has a lovely color palette. Oury designed it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/ourystd/pen/MxLbXQ" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;22. Login/signup form with slider effect&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/ZEeZEpv" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ruaSgMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/22.gif" alt="40+ free login and sign up form 2021" width="600" height="266"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This beautiful form was simply made with &lt;b&gt;HTML, CSS, Javascript&lt;/b&gt;. It comes with an eye-catching animation effect. It is totally free to use.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/ZEeZEpv" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;23. Login/signup form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/designify-me/full/RWaBJE" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dZ5UZsZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/23.gif" alt="40+ free login and sign up form 2021" width="600" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To create an online form with appropriate semanticized HTML elements, is very important for a website. This sample login form reduces your work. You can customize it according to your need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/designify-me/pen/RWaBJE" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;24. Login/signup form with slider effect&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/Mestika/full/ZGaWya" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aMxZAMPM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/24.gif" alt="40+ free login and sign up form 2021" width="600" height="244"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It has a beautiful sliding effect with black and blue color combination. Its made with HTML, CSS and little bit Javascript. Designed by Emil Devantie.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/Mestika/pen/ZGaWya" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;25. Login/signup form template&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/nazaninrey/full/qZOPWB" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qV0By8t_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/25.gif" alt="40+ free login and sign up form 2021" width="600" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This template offers a clean and elegant login form design. You can use it for free. It appears with popup &lt;b&gt;animation effect with javascript click function&lt;/b&gt;, designed by Nazani Reihani.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/nazaninrey/pen/qZOPWB" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;26. Card switch forms&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/TheThinkinGeek/full/NRwZGr" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fHjVwCIU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/26.gif" alt="40+ free login and sign up form 2021" width="600" height="434"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This exceptional registration and sign in form is straightforward and appealing for any website. It's designed by Omkar Kulkarni which is built with HTML, CSS and Javascript. &lt;b&gt;No dependency with jQuery&lt;/b&gt;, you just need to add a javascript file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/TheThinkinGeek/pen/NRwZGr" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;27. Flat login and sign up form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/zoite/full/gbNEOr" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QqTFLu2X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/27.gif" alt="40+ free login and sign up form 2021" width="600" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A lovely modern CSS form with a green background. You may easily adjust the login design to suit your needs.This simple authentication form created by Zoite.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/zoite/pen/gbNEOr" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;28. Slick authentication page&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://prium.github.io/slick/blocks/forms-5.html" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V6hxdbz8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/28.gif" alt="40+ free login and sign up form 2021" width="600" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Custom-made by ThemeWagon, &lt;a href="https://themes.getbootstrap.com/store/themewagon/" rel="noopener"&gt;premium&lt;/a&gt; template, &lt;a href="https://themewagon.com/themes/slick/" rel="noopener"&gt;Slick&lt;/a&gt; owns beautiful login/signup pages that add more value to your dream project. This one is also &lt;b&gt;dependent on jQuery&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://prium.github.io/slick/" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;29. Responsive login and sign up form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/YzZRRxV" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VYfsLFUF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/29.gif" alt="40+ free login and sign up form 2021" width="600" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This responsive login form template comes with an elegant green and white color combination. The template comes integrated with &lt;b&gt;HTML, CSS, and Javascript&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/YzZRRxV?editors=1010" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;30. Login/Sign up&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/ethan-arrowood/full/ygoaKd" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jgqqsBVN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/30-1.gif" alt="40+ free login and sign up form 2021" width="600" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a login modal with 2 panels. A login panel, and a registration panel which is appears with sliding effect. For this sliding effect you have to add some javascript code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/ethan-arrowood/pen/ygoaKd" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;31. Login and Register tabbed form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bootsnipp.com/snippets/z1Bpy" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--voejqIRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/311.gif" alt="40+ free login and sign up form 2021" width="600" height="311"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's built with Bootstrap framework, HTML, CSS, and Javascript. This form template is simple and appears with tabbed options. It has beautiful hover effect on button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bootsnipp.com/snippets/z1Bpy" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;32. Popup Login &amp;amp; Signup with jQuery&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/monkeytempal/full/VvKLMe" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--crvCaL7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/32.gif" alt="40+ free login and sign up form 2021" width="600" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a very straightforward and cost-free login page. In your project, you may use it and customize it to your needs. It is built with &lt;b&gt;HTML, CSS, jQuery&lt;/b&gt; with popup effect designed by Bijay Pakhrin.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/monkeytempal/pen/VvKLMe" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;33. Login &amp;amp; Signup UI&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/YzZoogB" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jxg7MQhI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/33.gif" alt="40+ free login and sign up form 2021" width="600" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a modern login and signup form comes with background image. It has also option for login with social media account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/YzZoogB?editors=1100" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;34. Login template&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/wvJLLLK" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1FWI0DOv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/34.gif" alt="40+ free login and sign up form 2021" width="600" height="443"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This basic login template is completely free to use. The coding is straightforward, and you can easily alter the color palette to fit your needs. It has a beautiful effect &lt;b&gt;based on Javascript&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/wvJLLLK" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;35. Login/signup form with slider&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/mrtial/full/RRGOad" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nE59HnQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/35.gif" alt="40+ free login and sign up form 2021" width="600" height="443"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It comes with beautiful &lt;b&gt;javascript animation effect&lt;/b&gt;, designed by Charlie Yang.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/mrtial/pen/RRGOad" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;36. Responsive login &amp;amp; sign up form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/codyhouse/full/pIrbg" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v0fF7M-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/36.gif" alt="40+ free login and sign up form 2021" width="600" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a form for any business website that includes correct semantic HTML elements. The snippet of this login form reduces your work; copying the CSS code is all you require.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/codyhouse/pen/pIrbg" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;37. Simple HTML5/CSS3 Form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/colorlib/full/rxddKy" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G6g0hQhr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/37.gif" alt="40+ free login and sign up form 2021" width="600" height="376"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a very simple and free login page. You can utilize and adapt it to your needs in your project. Silkalns Aigars designed it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/colorlib/pen/rxddKy" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;38. Tabbed Log In &amp;amp; Register Panel&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/gOmNVma" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RZDjg9Xn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/38.gif" alt="40+ free login and sign up form 2021" width="600" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This log In &amp;amp; Register Panel is clean and straightforward, providing your project a professional look. This form template was created entirely with &lt;b&gt;HTML and CSS&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/gOmNVma" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;39. Login/Sign-up with social media&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/GeBuOr/full/mJJmgx" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OQRtEDQo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/39.gif" alt="40+ free login and sign up form 2021" width="600" height="396"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code is easy, and if you want to modify the color combination to suit your needs, you can do so by changing it. This form is designed by Jenert Org.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/GeBuOr/pen/mJJmgx" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;40. Responsive Signup/Login form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/gOmVYgG" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tRGjg5s3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/40.gif" alt="40+ free login and sign up form 2021" width="600" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're searching for a completely distinctive and modern-looking login form for your website, this is the template for you. It has a great Javascript animation effect that shakes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/gOmVYgG" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;41. Black Signup/Login form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/eYvqOLY" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E_aqLjbd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/41.gif" alt="40+ free login and sign up form 2021" width="600" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a stunning login and sign-up form with a dark background. &lt;b&gt;HTML, CSS, and Javascript&lt;/b&gt; were used to make it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/eYvqOLY" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;42. Signup/Login form&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://codepen.io/shusom229/full/oNZKvmw" rel="noopener"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kgrqUFUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://themewagon.com/wp-content/uploads/2021/06/42.gif" alt="40+ free login and sign up form 2021" width="600" height="374"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simply &lt;b&gt;HTML, CSS and four line of Javascript code&lt;/b&gt; were used to build this beautiful form. It comes with an eye-catching animation effect. This basic authentication template is completely free to use. You can easily alter the color palette to fit your needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/shusom229/pen/oNZKvmw" rel="noopener"&gt;View Code&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;If you don't know where to begin, creating a login page might be challenging. Make your login forms simple and smooth, design the page properly, and provide people the guidance they need. This article will assist those who wish to create a nice and easy login page. If you liked this post about the login page, you might be interested in learning about website templates.&lt;/p&gt;


&lt;blockquote&gt;
&lt;h3&gt;Check this Out:&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://themewagon.com/best-travel-tourism-template-built-bootstrap/" rel="noopener"&gt;Best 27 Travel &amp;amp; Tourism Template Built with Bootstrap&lt;/a&gt;&lt;br&gt;&lt;a href="https://themewagon.com/free-bootstrap-templates/" rel="noopener"&gt;13+ Free Bootstrap 5 Templates To Make Your Online Presence Remarkable&lt;/a&gt;&lt;/p&gt;




&lt;/blockquote&gt;



</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What Do You Think?</title>
      <author>Al Siam</author>
      <pubDate>Mon, 08 Nov 2021 06:32:03 +0000</pubDate>
      <link>https://dev.to/alsiamworld/what-do-you-think-2488</link>
      <guid>https://dev.to/alsiamworld/what-do-you-think-2488</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0T-gEMbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iavhpyma126m1hu7vqi9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0T-gEMbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iavhpyma126m1hu7vqi9.jpg" alt="Image description" width="880" height="1100"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Scripting The Monty Hall Problem</title>
      <author>Oluwole Ajewole</author>
      <pubDate>Mon, 08 Nov 2021 06:08:26 +0000</pubDate>
      <link>https://dev.to/wolemercy/scripting-the-monty-hall-problem-5d5g</link>
      <guid>https://dev.to/wolemercy/scripting-the-monty-hall-problem-5d5g</guid>
      <description>&lt;p&gt;Ahoy!&lt;/p&gt;

&lt;p&gt;If like me your eyes glisten and your ears perk up when you come across deceptive math puzzles, you are sure to find some value in this piece. Here, I introduce the Monty Hall problem, discuss a useful way to think about the solution, and present a python script I wrote to validate it.&lt;/p&gt;

&lt;h2&gt;The Monty Hall Problem&lt;/h2&gt;

&lt;p&gt;The Monty Hall problem (named after Monty Hall, a game show host) is a rather deceptive brain teaser that became somewhat popular towards the end of the 20th Century. It is not a difficult problem to understand as it contains very simple premises but it is, nevertheless, pretty tricky to solve. &lt;/p&gt;

&lt;p&gt;Like the Ball And Bat Problem, psychologists often use the Monty Hall problem to illustrate how easily humans can fail to grasp the "math" or the "rational", opting instead for the "immediately obvious" or "intuitive" response. They call out our tendency to introduce bias and other forms of heuristics when making decisions—preferring easier, less laborious, and inaccurate approaches to more tasking, and more accurate ones. &lt;/p&gt;

&lt;p&gt;What I find most amusing and fascinating about such problems that is that we are usually very aware that they are tricky problems—tricky problems that we are probably hearing about because they've most likely conquered the minds of many people. Yet, we dive in to answer them, optimistic that we'd give a correct response. But of course, we are usually wrong—like I and most people were with the Monty Hall Problem. And even when we are presented with the correct answer, it could be pretty difficult to wrap our heads around the right answer.&lt;/p&gt;

&lt;p&gt;The Monty Hall problem tests our understanding of probabilities in some sort of illusory manner. Here is my  variant of the problem:&lt;/p&gt;

&lt;p&gt;Say you are Luffy, a pirate searching for the grandest treasure—The One Piece. Say there are three identical maps, one of which leads you to the treasure. The other two maps lead you to a wasteland filled with sand. Of course you want the treasure, but you don't know which of the three maps has the treasure. You can't differentiate one from the other.&lt;/p&gt;

&lt;p&gt;Say the maps have a custodian, Monty Hall, and he knows what map leads where. In other words, Monty Hall knows which maps lead you to a wasteland and the one that can guide you to the treasure. He decides to play a game with you as follows;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You are to pick any one of the three maps (at this point, you don't know if your chosen map leads you to the treasure or to a wasteland)&lt;/li&gt;
&lt;li&gt;Next, of the other two maps, Monty Hall picks one map that leads to a wasteland. Remember, he knows where each map leads to and he always picks a wasteland map.&lt;/li&gt;
&lt;li&gt;At this point you have picked one map (that may or may not lead to the treasure) and Monty Hall has picked a map that definitely leads to the wasteland. Monty's map needn't be considered anymore, but there is a third map that neither of you chose.&lt;/li&gt;
&lt;li&gt;Next, Monty Hall asks you; do you want to stick with your initial selection or do you want to switch your selection to the third map?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's the problem statement. You are given a choice to stick with your initial map selection or switch to the third map that neither of you chose. Will you stick or switch?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U-3EB83M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlgj5nyus9f3cmo7nacz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U-3EB83M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlgj5nyus9f3cmo7nacz.png" alt="Luffy befuddled" width="770" height="770"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;The Answer&lt;/h2&gt;

&lt;p&gt;With little or no deliberation, we are tempted to choose to stick with our original decision. This is because we believe that switching to the third map would not change the odds that we chose the right map. Our mind is heavily focused on the probability that our first choice was correct, and switching seems like an unnecessary risk. We could also think, perhaps, that after that after Monty Hall chooses the second map, the probability that our original selection is the treasure map is equal to the probability that the third map is the treasure map, i.e. 1/2 each since there are now two options. So there is no point switching. But that is not so!&lt;/p&gt;

&lt;p&gt;It may take some time to sink in, but here is what I consider a useful approach to analysing the problem;&lt;/p&gt;

&lt;p&gt;At the start, when you make the first selection &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the probability of picking a treasure map is 1/3;&lt;/li&gt;
&lt;li&gt;and the probability of picking a wasteland map is 2/3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In other words, you are more likely to pick a wasteland map than a treasure map.&lt;/p&gt;

&lt;p&gt;Next, regardless of your choice, Monty Hall will always pick a wasteland map. &lt;/p&gt;

&lt;p&gt;After Monty picks, there are two possible scenarios; either the third unselected map is the treasure map or it is another wasteland map. And these two scenarios play out probabilistically in relation to your first choice in the following ways;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if the third unselected map is a wasteland map, it must mean that your first selection was the treasure map. This happens one-third of the time (1/3) as stated above. And therefore, you'd win if you don't switch&lt;/li&gt;
&lt;li&gt;if the third unselected map is the treasure map, it must mean that your first selection was a wasteland map. This happens two-thirds of the time (2/3) as stated above. And therefore, you'd win if you switch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As such, since your first selection is likely to be a wasteland map than the treasure map, it makes statistical sense to always switch to the third map. Of course, winning is not guaranteed by switching. But you are twice as likely to win when you switch than when you stick to your first selection. So always switch!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-python-script-some-evidence"&gt;
  &lt;/a&gt;
  The Python Script: Some Evidence
&lt;/h2&gt;

&lt;p&gt;It is normal to still have doubts about the solution to the Monty Hall problem. A useful way to perhaps, cement your belief in and acceptance of the answer is to simulate the problem several times. This is exactly what I did with using a Python Script. You can find the gist &lt;a href="https://gist.github.com/Wolemercy/3d26cb6ad5b9a9c18a819121e78b0346"&gt;here&lt;/a&gt; and the repo &lt;a href="https://github.com/Wolemercy/monty-hall"&gt;here&lt;/a&gt;.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Let's walk through the code;&lt;/p&gt;

&lt;p&gt;First we import the &lt;code&gt;random&lt;/code&gt; module. We define a function called &lt;code&gt;single run&lt;/code&gt; that initializes our map trio as an array. We select a random map to contain our One Piece treasure and the function returns the map array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# The Monty Hall Problem

import random

# Instantiating a random treasure map
def single_run():
    maps = ['wasteland', 'wasteland', 'wasteland']
    treasure_index = random.randint(0, 2)
    maps[treasure_index] = 'one piece'
    return maps
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we define a function that returns Luffy's random first choice&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Luffy's first choice
def luffy():
    luffy_first_choice = random.randint(0, 2)
    return luffy_first_choice
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we define a function that returns Monty's choice of a wasteland map. We use a while loop to ensure that Monty's chosen map is neither Luffy's first choice nor the treasure map.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Monty's choice of a location that is neither Luffy's choice nor the treasure location
def monty(maps, luffy_first_choice):
    monty_choice = 0

    while monty_choice == luffy_first_choice or maps[monty_choice] == 'one piece':
        monty_choice += 1

    return monty_choice
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we define a function that returns Luffy's switched choice. Note that this function is not necessary for the simulation. I only included it for the sake of completeness.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# switch Luffy's choice
def luffy_switch(luffy_first_choice, monty_choice):

    luffy_switch_choice = 0

    while luffy_switch_choice == luffy_first_choice or luffy_switch_choice == monty_choice:
        luffy_switch_choice += 1

    return luffy_switch_choice
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we define a function that returns the output. It accepts as input, the number of times switching yielded the treasure map, the number of times sticking yielded the treasure map, and the number of trials. It returns the percentages for both decisions as part of a string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# output to be displayed
def output(stick, switch, trials):
    stick_percent = round((stick/trials) * 100)
    switch_percent = round((switch/trials) * 100)

    print(f'Luffy found One Piece {stick_percent} % of the time when he decided to stick to his initial choice ')
    print(f'Luffy found One Piece {switch_percent} % of the time when he decided to switch his initial choice')

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we have the body of the script. It accepts the number of trials as input, i.e. the number of simulations you want to run. We also initialize the number of  times sticking and switching yield the treasure map to zero. &lt;/p&gt;

&lt;p&gt;We run our loop as many times as the number of trials. Inside the  loop, we use are already defined functions to;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;get the maps array&lt;/li&gt;
&lt;li&gt;randomly make Luffy's initial map choice&lt;/li&gt;
&lt;li&gt;make Monty choose a wasteland map&lt;/li&gt;
&lt;li&gt;switch Luffy's initial choice&lt;/li&gt;
&lt;li&gt;increment the &lt;code&gt;stick_count&lt;/code&gt; if the initial choice has the One Piece treasure&lt;/li&gt;
&lt;li&gt;increment the &lt;code&gt;switch_count&lt;/code&gt; if the switched choice has the One Piece treasure
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print('The Monty Hall Problem')
trials = int(input('Enter the number of trials:  '))

# Luffy sticks
stick_count = 0

# Luffy switches
switch_count = 0

for i in range(trials):
    maps = single_run()
    luffy_first_choice = luffy()
    monty_choice = monty(maps, luffy_first_choice)
    luffy_switch_choice = luffy_switch(luffy_first_choice, monty_choice)

    if maps[luffy_first_choice] == 'one piece':
        stick_count += 1

    elif maps[luffy_switch_choice] == 'one piece':
        switch_count += 1

output(stick_count, switch_count, trials) 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note, as mentioned earlier, that we don't need the &lt;code&gt;luffy_switch&lt;/code&gt; function, and by implication we can do without incrementing the &lt;code&gt;switch_count&lt;/code&gt; as we have done. That's because we are  sure that if Luffy's initial choice was the treasure map, then the third choice is definitely not the treasure map. In the same vein, if Luffy's initial choice wasn't the treasure map, then the third choice that could have been switched to would be the treasure map. &lt;/p&gt;

&lt;p&gt;In other words, the treasure map is either the original choice or the switched choice. The incidences of both (&lt;code&gt;stick_count&lt;/code&gt; and &lt;code&gt;switch_count&lt;/code&gt; ) necessarily add up to the number of trials. So we can use simple arithmetic to evaluate one if we have the other; &lt;code&gt;switch_count = trials - stick_count&lt;/code&gt;. That's definitely a more concise way of writing this script. I only wrote it this way for the sake of completeness.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The result of running the Python Script (several times) proves that Luffy gets the treasure map about two-thirds (2/3) of the time when he switches as opposed to one-third (1/3) of the time when he sticks with his original choice.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OdYzPJjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx4egob8t1vhoyg2igb6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OdYzPJjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx4egob8t1vhoyg2igb6.png" alt="Monty Hall script terminal output" width="805" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's The Monty Hall Problem. The key thing to remember is to always switch maps after Monty Hall chooses a wasteland map because your initial choice was more likely wrong than correct. As such, switching improves the chances that you'd win the treasure map. &lt;/p&gt;

&lt;p&gt;And when you find the treasure, remember to share it with me! A comment, a like, a repost, some feedback—anything will do!&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;br&gt;
Also connect with me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;LinkedIn: &lt;a href="https://www.linkedin.com/in/wolemercy"&gt;Wolemercy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter:  &lt;a href="https://twitter.com/wolemercy"&gt;Wolemercy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GitHub: &lt;a href="https://github.com/Wolemercy"&gt;Wolemercy&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>explainlikeimfive</category>
      <category>programming</category>
      <category>sideprojects</category>
    </item>
    <item>
      <title>How to put website online under 10 minutes?</title>
      <author>Rakesh Potnuru</author>
      <pubDate>Mon, 08 Nov 2021 06:01:45 +0000</pubDate>
      <link>https://dev.to/rakeshpotnuru/how-to-put-website-online-under-10-minutes-3m2g</link>
      <guid>https://dev.to/rakeshpotnuru/how-to-put-website-online-under-10-minutes-3m2g</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OY0EvkwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ibb.co/PC6GRGM" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OY0EvkwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ibb.co/PC6GRGM" width="" height=""&gt;&lt;/a&gt;As a beginner in web development, you may always think about how to actually put a website you made, on the internet. In this blog, you are going to learn how you can do it in less than 10 minutes with simple steps using Github pages. &lt;/p&gt;

&lt;h2&gt;End Result&lt;/h2&gt;

&lt;p&gt;This is what we are going to make by the end of the blog. See the URL, it's on the internet 👀.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(This is a simple calculator webapp which contains HTML,css,js files)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OY0EvkwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ibb.co/PC6GRGM" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OY0EvkwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ibb.co/PC6GRGM" width="" height=""&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7VIboTzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/VBqYdYx/endresult.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--7VIboTzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/VBqYdYx/endresult.png" width="640" height="344"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;ul&gt;
    &lt;li&gt;A website having HTML, CSS, Javascript files. (because Github pages support only static websites)&lt;/li&gt;
    &lt;li&gt;
&lt;a href="https://github.com"&gt;Github&lt;/a&gt; account.&lt;/li&gt;
    &lt;li&gt;Basic knowledge about git.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Let's get started&lt;/h1&gt;

&lt;h3&gt;Step-1: &lt;/h3&gt;

&lt;p&gt;Create a repository on GitHub and add all your HTML, CSS, js files.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: Make sure you make the repository public.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Step-2:&lt;/h3&gt;

&lt;p&gt;Open repository and click on &lt;strong&gt;Settings.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wGMr0LSW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/PMKqqQ2/Settings.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--wGMr0LSW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/PMKqqQ2/Settings.png" width="640" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step-3:&lt;/h3&gt;

&lt;p&gt;Scroll down and click on &lt;strong&gt;Pages&lt;/strong&gt; from the left panel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wmU2-d5_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/SyVtGPp/pages.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--wmU2-d5_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/SyVtGPp/pages.png" width="640" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step-4:&lt;/h3&gt;

&lt;p&gt;Now you have to enable GitHub pages for the repository. To do so, click on &lt;strong&gt;None&lt;/strong&gt; and select the main branch of your repository. In my case it is &lt;strong&gt;master&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RWMPgZMo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/kQCR5FH/master.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--RWMPgZMo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/kQCR5FH/master.png" width="640" height="330"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step-5:&lt;/h3&gt;

&lt;p&gt;After selecting the branch, the save button will be enabled, so click on &lt;strong&gt;Save&lt;/strong&gt; to confirm.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wBrKVB6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/VBkCz9z/save.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--wBrKVB6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/VBkCz9z/save.png" width="640" height="328"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step-6:&lt;/h3&gt;

&lt;p&gt;Now, you can see an indication saying - &lt;q&gt;&lt;em&gt;Your site is ready to be published at &amp;lt;URL&amp;gt;&lt;/em&gt;&lt;/q&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Y3ZQvq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/VWZxrGJ/ready.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Y3ZQvq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/VWZxrGJ/ready.png" width="640" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step-7:&lt;/h3&gt;

&lt;p&gt;Wait for few minutes and refresh the page. That indication will be changed to - &lt;q&gt;&lt;em&gt;Your site is published at &amp;lt;URL&amp;gt;&lt;/em&gt;&lt;/q&gt;&lt;/p&gt;

&lt;p&gt;Click on the link and that's it your site is ready and you can share the URL with anyone and show off your project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P10PYUYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/RB5vC5g/done.png" class="article-body-image-wrapper"&gt;&lt;img alt="" src="https://res.cloudinary.com/practicaldev/image/fetch/s--P10PYUYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/RB5vC5g/done.png" width="640" height="328"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Also read - &lt;a href="https://dev.to/rakeshpotnuru/how-to-host-your-website-on-azure-5h11"&gt;How to host your website on Azure?&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Hope this helps you!&lt;br&gt;
Save for reference.&lt;br&gt;
Connect with me on &lt;a href="https://twitter.com/rakesh_at_tweet"&gt;Twitter&lt;/a&gt; and &lt;a href="https://twitter.com/rakesh_at_tweet"&gt;GitHub&lt;/a&gt;. Follow me for more 😃.&lt;/p&gt;

</description>
      <category>github</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>6 Habilidades Técnicas clave para crecer de Junior a Senior</title>
      <author>Mariano Rentería</author>
      <pubDate>Mon, 08 Nov 2021 05:33:29 +0000</pubDate>
      <link>https://dev.to/marianorenteria/6-habilidades-tecnicas-clave-para-crecer-de-junior-a-senior-52p2</link>
      <guid>https://dev.to/marianorenteria/6-habilidades-tecnicas-clave-para-crecer-de-junior-a-senior-52p2</guid>
      <description>&lt;p&gt;La profesión de desarrollo de software es una profesión que constantemente tiene novedades, cada mes, cada día hay algo nuevo, es fácil distraerse y tener ansiedad acerca de las tecnologías que deberías de conocer, mi recomendación es no ser de los primeros que adoptan o implementan sino ir tal vez un año detrás para corroborar que es algo que va a tener soporte y comunidad. &lt;/p&gt;

&lt;p&gt;Pero hay algunas habilidades que independientemente del lenguaje que manejes van a ser constantes. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A01-conocimiento-de-frameworks"&gt;
  &lt;/a&gt;
   1. Conocimiento de frameworks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y74ZFpga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xcfao5rk1us3ff5lm7p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y74ZFpga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xcfao5rk1us3ff5lm7p.png" alt="Conocimiento de frameworks" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Los frameworks en los lenguajes de programación son un paradigma importante porque nos ayudan a estandarizar la forma de trabajo con algún lenguaje. &lt;/p&gt;

&lt;p&gt;No son absolutamente necesarios, sin embargo es simplemente una de las herramientas disponibles que te ayudará a desarrollar mejor y más rápido. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-desarrollo-de-pruebas-automatizadas"&gt;
  &lt;/a&gt;
  2. Desarrollo de pruebas automatizadas
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qAHMW4Rj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h32lexb286vlc1k3o0rp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qAHMW4Rj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h32lexb286vlc1k3o0rp.png" alt="Desarrollo de pruebas automatizadas" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Spoiler Alert, cuando hablo de pruebas automatizadas no me refiero solo a Test Driven Development (TDD).&lt;/p&gt;

&lt;p&gt;La construcción de productos de software es una constante, realmente nunca terminas, esto es algo comúnmente aceptado en la industria. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-buscar-en-internet-y-leer-el-manual"&gt;
  &lt;/a&gt;
  3. Buscar en Internet y Leer el Manual
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UdHPI1GL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bnfjnkz7epe7h1m520u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UdHPI1GL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bnfjnkz7epe7h1m520u.png" alt="Buscar en Internet y Leer el Manual" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Es común que alguna vez te hayas topado con que te escriben LMGTFY (Let Me Google That For You) u otro clásico el RTFM (Read The Fucking Manual), básicamente te están diciendo que no deberías hacer preguntas que tienen respuestas obvias y que tienen que ver con que tu mismo lo averigües.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-control-de-versiones-y-revisiones-de-c%C3%B3digo-git"&gt;
  &lt;/a&gt;
  4. Control de versiones y revisiones de código (Git)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fkBcPAAj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xtsaazarmaa7arnw3hw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fkBcPAAj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xtsaazarmaa7arnw3hw.png" alt="Control de versiones y revisiones de código (Git)" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No se me ocurren motivos para no usar un sistema de control de versiones, Git es el más utilizado y aunque pareciera que es sencillo de aprender y de utilizar, hay formas correctas, formas incorrectas y formas raras de utilizarlo. En este capítulo hablaremos de algunos de los escenarios más comunes y otros nuevos. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-emplear-patrones-de-dise%C3%B1o"&gt;
  &lt;/a&gt;
  5. Emplear Patrones de diseño
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gYWeTbOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ywmfmayhgisdrhsukaw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gYWeTbOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ywmfmayhgisdrhsukaw.png" alt="Patrones de diseño" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Se dicen cosas como:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Los patrones de diseño son importantísimos&lt;/li&gt;
&lt;li&gt;Conocer patrones de diseño te convertirá en Arquitecto&lt;/li&gt;
&lt;li&gt;Si no programas con patrones de diseño no eres Senior&lt;/li&gt;
&lt;li&gt;Los buenos programadores se comunican a través de patrones de diseño&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hablaremos de cuáles argumentos son sólidos y cuáles son solo humo. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-conocimiento-de-tecnolog%C3%ADas-complementarias"&gt;
  &lt;/a&gt;
  6. Conocimiento de tecnologías complementarias
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XSRvB3RY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t23h5xxuq0g9vea5jifr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XSRvB3RY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t23h5xxuq0g9vea5jifr.png" alt="Conocimiento de tecnologías complementarias" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Te volverás senior y querrás resolver todos los problemas con lo que has aprendido, pero no porque te vuelvas muy bueno utilizando un martillo deberás de verle cara de clavo a todo. &lt;/p&gt;

&lt;p&gt;Será posible que a veces tengas que recomendar o implementar tecnologías que complementen lo que sabes y que ayuden a resolver los problemas a los que te puedes enfrentar. &lt;/p&gt;

&lt;p&gt;El reto como siempre al querer conocer nuevas o diferentes tecnologías es el distinguir las señales entre tanto ruido que hay en la industria.&lt;/p&gt;




&lt;p&gt;Esta serie de blog posts tiene contenido de mi &lt;a href="https://marianorenteria.gumroad.com/l/guia-junio-senior"&gt;libro 📕 el cual se encuentra en preventa y saldrá antes de terminar 2021&lt;/a&gt;. &lt;/p&gt;




&lt;p&gt;Sigo trabajando en mis productos con el fin de ayudar de forma más estructurada a la comunidad de TI, si te interesan &lt;a href="https://marianorenteria.gumroad.com/"&gt;pásale a mi perfil de Gumroad&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;📕 Líder Técnico&lt;/li&gt;
&lt;li&gt;📘 De Junior a Senior&lt;/li&gt;
&lt;li&gt;🗓 Mentorías&lt;/li&gt;
&lt;li&gt;📑 Revisión de C.V.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Te invito a que &lt;strong&gt;&lt;a href="https://twitter.com/marianorenteria/"&gt;me sigas en Twitter&lt;/a&gt;&lt;/strong&gt; para que te enteres de todo el contenido que hago normalmente 🙃.&lt;/p&gt;

&lt;p&gt;También soy creador del &lt;a href="#"&gt;podcast Chile, Mole &amp;amp; Tech&lt;/a&gt;(&lt;a href="https://dev.to/chilemoleytech"&gt;https://dev.to/chilemoleytech&lt;/a&gt;), el cual esta &lt;a href="#"&gt;en todas las plataformas&lt;/a&gt;(&lt;a href="https://linktr.ee/chilemoleytech"&gt;https://linktr.ee/chilemoleytech&lt;/a&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-si-te-gusto-este-post-no-dudes-en-compartirlo-me-ayuda-mucho-"&gt;
  &lt;/a&gt;
  ** Si te gusto este post, no dudes en compartirlo, me ayuda mucho. **
&lt;/h2&gt;

</description>
      <category>spanish</category>
      <category>beginners</category>
      <category>career</category>
      <category>latam</category>
    </item>
    <item>
      <title>Holy S**T, I love BlitzJS</title>
      <author>Jonathan Higger</author>
      <pubDate>Mon, 08 Nov 2021 04:13:36 +0000</pubDate>
      <link>https://dev.to/jjhiggz/holy-st-i-love-blitzjs-5h3p</link>
      <guid>https://dev.to/jjhiggz/holy-st-i-love-blitzjs-5h3p</guid>
      <description>&lt;p&gt;So I've been tinkering with BlitzJS for the past couple of weeks and I have to say, it's now my favorite way of making websites HANDS DOWN.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-blitz"&gt;
  &lt;/a&gt;
  What is Blitz?
&lt;/h2&gt;

&lt;p&gt;Blitz is a framework that attempts to be a React on Rails (Ruby on Rails but with React) sort of thing, and it feels friggin amazing to program in. We'll get back to the deetz on this in a bit. But first lets give a quick history of what things were like before blitz.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-little-history-on-rails"&gt;
  &lt;/a&gt;
  A Little History on Rails
&lt;/h2&gt;

&lt;p&gt;If you don't know, Ruby on Rails' claim to fame is basically that you can churn out a full-stack website super fast. Here's how they achieve that.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Really Great CLI Tooling&lt;/li&gt;
&lt;li&gt;Amazing ORM (Active Record)&lt;/li&gt;
&lt;li&gt;MVC Architecture allows you to create your frontend without explicit fetch calls&lt;/li&gt;
&lt;li&gt;built in seeds / migration for database&lt;/li&gt;
&lt;li&gt;built in integration / unit/ and e2e tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of this means you can start doing full stack development the second you run &lt;code&gt;rails g new project-name&lt;/code&gt;, and you can have a full stack website built literally within a minute. You can even get relational data working from your CLI. The way they accomplish this is largely defined by their motto "Convention over Configuration", meaning that they've made a lot of the tough tech choices for you, and in doing so preconfigured all of them to work with each other. It's also probably worth noting here that Rails is like THE ruby stack that everybody chooses. It's Ruby's killer tech, and without the Rails framework, it's likely that Ruby would not be a popular language at all. &lt;/p&gt;

&lt;p&gt;Unfortunately here's some things that kind of suck about rails.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It uses Ruby instead of JS / TS&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This isn't a problem per se, but the thing is that IMO Ruby as a language suffers in a few areas. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Async Programming doesn't feel as good as it does with JavaScript. &lt;/li&gt;
&lt;li&gt;Ruby is designed to be terse, sometimes unnecessarily so, and this can make complex code really hard to trace sometimes. &lt;/li&gt;
&lt;li&gt;It's difficult to trace where things come from in Ruby, making it often VERY difficult to figure out how to do something that isn't well documented&lt;/li&gt;
&lt;li&gt;It's weakly typed, and there's no well-working typescript kind of thing for ruby.&lt;/li&gt;
&lt;li&gt;Everybody knows Javascript, not everybody knows Ruby&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You're views are locked into being pretty static, pessimistically rendered. sure you can feed them with data, but most of the good stuff happens AFTER you refresh a page (Although there is new ways that Ruby is trying to Tackle this [ripping off Pheonix liveview]). If you are a beginner this basically means that the backend will primarily be driving any UI changes on the front. This simplifies logic, but can also be limiting in the types of things you can create.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It doesn't have the massive Javascript Community&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Many tools won't work with ruby very well, ie: firebase, styling libraries, UI testing libraries, etc...&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Sure Convention over configuration is great, but what if like I really really need to use some special package. Welp, it might be easy, or it might be really hard and difficult to debug. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Quick summary of pros and cons&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pros&lt;/th&gt;
&lt;th&gt;Cons&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Fast to make Full Stack Website&lt;/td&gt;
&lt;td&gt;Difficult to deviate from the norm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Best practice on DB, Testing from the jump&lt;/td&gt;
&lt;td&gt;Ruby &amp;lt; Javascript / Typescript IMO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Amazing Codegen tools&lt;/td&gt;
&lt;td&gt;Scalability&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#on-the-other-hand-javascript"&gt;
  &lt;/a&gt;
  On The Other Hand (Javascript)
&lt;/h2&gt;

&lt;p&gt;Javascript, has felt like the opposite of rails. It's power came from it's flexibility. There are so many people with so many libraries constantly coming out that it's difficult to pick and choose which ones actually fit your needs. Furthermore, when you do pick them, now you have to make them play well with each other. &lt;/p&gt;

&lt;p&gt;To give you an example, when I was learning to code, people called node-express a backend framework. Which is INSANE. All of express's functionality is a small subset of what rails can do. When you want to set up a full stack website with node you'll need a stack similar to the following&lt;/p&gt;

&lt;p&gt;On the backend&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Express (handles controllers and routes)&lt;/li&gt;
&lt;li&gt;Passport (helps you with protecting routes)&lt;/li&gt;
&lt;li&gt;Some Database Client (helps you connect to a database)&lt;/li&gt;
&lt;li&gt;Some ORM(prisma), SQL Query Writer, or similar thing (allows you to query your database)&lt;/li&gt;
&lt;li&gt;Some Validations Library&lt;/li&gt;
&lt;li&gt;Need to go way out of your way to set up migrations / seeds for good database practice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On the frontend&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Choose your favorite: React, Vue, NextJS, Ember, JQuery, VanillaJS etc...&lt;/li&gt;
&lt;li&gt;Maybe: form libraries, validation libraries, typescript configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On both frontend and backend (this takes me for flarking ever personally 10+ hours to start and ever changing after I get the initial setup)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;typescript configuration&lt;/li&gt;
&lt;li&gt;prettier configuration&lt;/li&gt;
&lt;li&gt;eslint configuration&lt;/li&gt;
&lt;li&gt;testing configuration&lt;/li&gt;
&lt;li&gt;pipeline configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So yeah, it's super nice because you can swap out libraries and know what the heck is going on BUT it's A LOT of work and as they say "time is $$$$$$".&lt;/p&gt;

&lt;p&gt;In summary on what programming in Javascript has been like &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pros&lt;/th&gt;
&lt;th&gt;Cons&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Very Scalabile&lt;/td&gt;
&lt;td&gt;Since nobody makes a choice for you,  you will likely make some bad ones before you make good ones&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ton's of libraries&lt;/td&gt;
&lt;td&gt;Configuration can take a very long time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Very Flexible, and transparent configuration&lt;/td&gt;
&lt;td&gt;Slower to develop&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#alright-so-how-does-blitz-solve-these-problems"&gt;
  &lt;/a&gt;
  Alright so How does blitz solve these problems
&lt;/h2&gt;

&lt;p&gt;First let's just look at blitz's core values&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Fullstack &amp;amp; Monolithic&lt;/li&gt;
&lt;li&gt;API Not Required&lt;/li&gt;
&lt;li&gt;Convention over Configuration&lt;/li&gt;
&lt;li&gt;Loose Opinions&lt;/li&gt;
&lt;li&gt;Easy to Start, Easy to Scale&lt;/li&gt;
&lt;li&gt;Stability&lt;/li&gt;
&lt;li&gt;Community over Code&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'm not going to get too into it, but lets break apart their mission a bit. The majority of these are fully inline with rails( Fullstack, api not required, convention over configuration, easy to start[although rails is harder to scale from what I understand]). One of the key divergences here is that "Loose Opinions", it basically means that the blitz team cares about you being able to switch alot of the technology. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-on-loose-opinions"&gt;
  &lt;/a&gt;
  More on loose opinions
&lt;/h2&gt;

&lt;p&gt;Here is where you are locked in on Blitz. You have to use NextJS, React and.... thats about it. From there you can kind of do whatever you want, although you will have an easier time if you choose to use Prisma, and blitz's queries etc..&lt;/p&gt;

&lt;p&gt;In other words, with Blitz they give you a happy path at default but straying from the happy path isn't like trying scale everest, it's just maybe going to be uphill and a little bumpy. In fact Blitz even has tools like "recipes" (which come from gatsby), that allow you to adopt new technologies not core to blitz, that maybe someone else has configured before.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazing-albeit-somewhat-unfinished-cli-tools"&gt;
  &lt;/a&gt;
  Amazing ( albeit somewhat unfinished )CLI Tools
&lt;/h2&gt;

&lt;p&gt;A little while back, I did an &lt;a href="https://dev.to/jjhiggz/nestjs-could-be-amazing-someday-3in7"&gt;article about nestJS&lt;/a&gt; where I talked about their CLI. I really liked the idea of it, and it did save a little bit of time, but it's not nearly as good as Blitz's. The blitz CLI tools gives you some pretty amazing out of the box features, some of which wrap prisma commands. Here are some examples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz g resource modelname attr1:datatype1 belongsTo:otherModel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;modifies your schema to generate a new model, in this case your model will have attr1 set to datatype 1, and belong to another model.  a real example of this might be &lt;code&gt;blitz g resource dog name:string belongsTo:user&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz g resource modelname attr1:datatype1 belongsTo:otherModel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;does everything that generating the resource does, but also adds an index, show, edit, new page for that model. For example now out of the box you can go to /dogs/new and create a new dog which is pretty insane.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz console
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;allows you to explore your database with a CLI tool. This can be a bit buggy but is still super useful
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz prisma migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;wraps prisma to migrate your schema
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz seed
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;runs your seeds.ts file
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz install ___recipe_name___
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this will install based off of a recipe. For example you could run &lt;code&gt;blitz install tailwind&lt;/code&gt; and BAM you've installed tailwind. &lt;/p&gt;

&lt;p&gt;It's some pretty amazing codegen tools that blitz has set up for you, and that's only one of the features that makes blitz feel amazing. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automatic-codegen"&gt;
  &lt;/a&gt;
  Automatic Codegen
&lt;/h2&gt;

&lt;p&gt;So I don't fully understand the magic here, but prisma utilizes something they call the zero-api layer to generate types from your schema. Which is also pretty F**king insane. &lt;/p&gt;

&lt;p&gt;In my backend I have a properties table, which in the schema looks like this. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ee_KPX3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbzl8mshrxnpz6lbopt4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ee_KPX3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbzl8mshrxnpz6lbopt4.png" alt="Image description" width="880" height="487"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now once I migrate that file, I get types not only on my backend, but also on my frontend. At the top of my file I type `import {Property} from "db", and now I have the shape of my data on the frontend, I didn't have to make an interface anywhere. There's a single source of truth on that, which feels amazing. Now if I go to mess with a property on the front I know exactly what's there as soon as I make a change to my database. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RLRpjyip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mau9p71okd2f1jwvk4vc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RLRpjyip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mau9p71okd2f1jwvk4vc.jpg" alt="Image description" width="880" height="1173"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This also means that if I make a breaking change to a type on the database, that breaking change breaks the backend and the frontend as well. Which just means you catch stupid type errors instantly which I love.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h2&gt;

&lt;p&gt;The routing comes basically straight out of NextJS but with a twist. I'm not super familiar with next, but from what I understand in nextJS, you couldn't structure your routes by folder, but in blitz you can. So for example if you have the following&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;`&lt;br&gt;
src&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pages

&lt;ul&gt;
&lt;li&gt;properties

&lt;ul&gt;
&lt;li&gt;[propertyId]

&lt;ul&gt;
&lt;li&gt;edit.tsx&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;[propertyId].tsx&lt;/li&gt;
&lt;li&gt;new.tsx&lt;/li&gt;
&lt;li&gt;index.tsx
`&lt;code&gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You get the following routes automatically. &lt;br&gt;
&lt;code&gt;/properties/:id&lt;/code&gt; is your show page&lt;br&gt;
&lt;code&gt;/properties/:id/edit&lt;/code&gt; is your edit property page&lt;code&gt;&lt;br&gt;
&lt;/code&gt;/properties/new&lt;code&gt; is your create property page&lt;br&gt;
&lt;/code&gt;/properties/` is your properties index page &lt;/p&gt;

&lt;p&gt;This just makes your life easier with routing&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outro"&gt;
  &lt;/a&gt;
  Outro
&lt;/h2&gt;

&lt;p&gt;I'm not going to go full on over all of blitz here, because the &lt;a href="https://blitzjs.com/"&gt;blitzJS Documentation&lt;/a&gt; is already amazing. But here's some features that I never mentioned you get access to.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free Authentication, User, Password, Email OUT OF THE BOX&lt;/li&gt;
&lt;li&gt;React suspense library integration&lt;/li&gt;
&lt;li&gt;everything you already like about NextJS&lt;/li&gt;
&lt;li&gt;API routes and middleware&lt;/li&gt;
&lt;li&gt;Date Serialization&lt;/li&gt;
&lt;li&gt;Recipes, and ability to create your own custom recipes&lt;/li&gt;
&lt;li&gt;Jest out of the box&lt;/li&gt;
&lt;li&gt;A Cypress Recipe if you want e2e tests&lt;/li&gt;
&lt;li&gt;The team is trying to make this React Native Friendly (which would be a dream come true)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Long story short, BlitzJS feels amazing. I think it's just one of the best developer experiences that I've ever had and I highly suggest you try it out too. &lt;/p&gt;

</description>
      <category>react</category>
      <category>nextjs</category>
      <category>saas</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Basic Azure DevOps Build Pipeline</title>
      <author>Kristen Kinnear-Ohlmann</author>
      <pubDate>Mon, 08 Nov 2021 04:05:06 +0000</pubDate>
      <link>https://dev.to/kristenkinnearohlmann/basic-azure-devops-build-pipeline-4agb</link>
      <guid>https://dev.to/kristenkinnearohlmann/basic-azure-devops-build-pipeline-4agb</guid>
      <description>&lt;p&gt;I had the opportunity recently to work on an existing project that had an Azure DevOps build pipeline. &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/?view=azure-devops"&gt;Azure DevOps pipelines&lt;/a&gt; have a lot of options and configurations and can be involved to dive into. &lt;/p&gt;

&lt;p&gt;I had some existing work I could use as a guideline but I knew I needed to try to figure out a basic build pipeline before I could proceed. I have a personal Azure DevOps account so I was able to model out the work I needed to do. To sign up for an account, a person needs to have an email account that is not associated to Google or other personal type accounts; I created a Zoho mail account to use for Azure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuration-for-sample-nodejs-application"&gt;
  &lt;/a&gt;
  Configuration for sample Node.js application
&lt;/h2&gt;

&lt;p&gt;I started with a basic Node.js app, &lt;a href="https://github.com/kristenkinnearohlmann/simple-node-azure-pipeline"&gt;Simple Node Azure Pipeline&lt;/a&gt;. I installed &lt;code&gt;dotenv&lt;/code&gt; so I could work with variables in my sample script and prepare for using them in the Azure build pipeline.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// .env&lt;/span&gt;
&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;Kristen&lt;/span&gt;
&lt;span class="nx"&gt;favColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;orange&lt;/span&gt;
&lt;span class="nx"&gt;favFood&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;chocolate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/app.js&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world, this is a simple Node app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Your name is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. Your favorite color is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;favColor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. Your favorite food is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;favFood&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I created a script in &lt;code&gt;package.json&lt;/code&gt; to run locally and confirm that my &lt;code&gt;src/index.js&lt;/code&gt; script worked as expected. I invoked &lt;code&gt;dotenv&lt;/code&gt; from this script so that I wouldn't need to require it in &lt;code&gt;src/index.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;simple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node -r dotenv/config src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm run simple
&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; simple-node-azure-pipeline@1.0.0 simple
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; node &lt;span class="nt"&gt;-r&lt;/span&gt; dotenv/config src/index.js
&lt;span class="nb"&gt;.&lt;/span&gt;
Hello world, this is a simple Node app
Your name is Kristen. Your favorite color is orange. Your favorite food is chocolate.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I created a version of the &lt;code&gt;simple&lt;/code&gt; script called &lt;code&gt;simple:ci&lt;/code&gt;. The second version calls only &lt;code&gt;src/index.js&lt;/code&gt; since variables will be handled by Azure. Our organization uses the &lt;code&gt;ci&lt;/code&gt; tag to identify scripts run as a part of &lt;a href="https://www.redhat.com/en/topics/devops/what-is-ci-cd"&gt;CI/CD pipelines&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;simple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node -r dotenv/config src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;simple:ci&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This final version was pushed to a remote repo in Azure DevOps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-azure-devops-variable-group"&gt;
  &lt;/a&gt;
  Configure Azure DevOps Variable Group
&lt;/h2&gt;

&lt;p&gt;The first action I took was configuring a &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?view=azure-devops&amp;amp;tabs=yaml"&gt;variable group&lt;/a&gt;. These variables will be used later within the build pipeline.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigate to &lt;strong&gt;Pipelines &amp;gt; Library&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qtHWs71U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/439bf60507b2a0e0bd78b4b79d0403d5/accec/azure-01-library.jpg" alt="Azure pipelines library" width="363" height="507"&gt;
&lt;/li&gt;
&lt;li&gt;Add a &lt;strong&gt;Variable Group&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MTBvAdu8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/0d5fa03751d6efd3cdc03fb7400acbd7/78ff8/azure-02-add-var-group.jpg" alt="Azure pipelines add variable group" width="493" height="141"&gt;
&lt;/li&gt;
&lt;li&gt;Name the variable group and create entries for each variable, together with the value you want to use in the build pipeline
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LIt1q6ZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/7d0ea0f43f1b8e0e0b24865ed99b72f6/88632/azure-03-complete-var-group.jpg" alt="Azure pipelines variable group entries" width="778" height="785"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#configure-azure-devops-build-pipeline"&gt;
  &lt;/a&gt;
  Configure Azure DevOps Build Pipeline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Navigate to &lt;strong&gt;Pipelines &amp;gt; Pipelines&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_MB_cZSP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/dfffd8a46586176ca0a820f92f4ad9cd/158ba/azure-04-pipelines-pipelines.jpg" alt="Azure pipelines initial" width="360" height="398"&gt;
&lt;/li&gt;
&lt;li&gt;Choose to &lt;strong&gt;Create pipeline&lt;/strong&gt; (if there are no existing pipelines) or &lt;strong&gt;New pipeline&lt;/strong&gt; (if other pipelines exist)
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s1cJlBCF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/eee960a5b2459a30fbe776274d4724ba/9bc89/azure-05-pipelines-create.jpg" alt="Azure pipelines create" width="755" height="417"&gt;
&lt;/li&gt;
&lt;li&gt;In the &lt;strong&gt;Connect&lt;/strong&gt; step, choose &lt;strong&gt;Azure Repos Git&lt;/strong&gt; since the repo was pushed to the remote project
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZGMNhoQi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/d8a4b2e080736c508dca3a14ccd75d7e/c80f2/azure-06-pipelines-repo.jpg" alt="Azure pipelines connect" width="796" height="257"&gt;
&lt;/li&gt;
&lt;li&gt;Choose the repo to work with
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1N_-SpSp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/4e44d44cfbd98ca653720dec569e729c/b4708/azure-07-pipelines-repo-select.jpg" alt="Azure pipelines repo choice" width="862" height="280"&gt;
&lt;/li&gt;
&lt;li&gt;Choose the project type; the repo contains a Node.js app
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qMuEzT3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/a619517132a42cb9684b10deb1236a8e/dfe3c/azure-08-pipelines-type.jpg" alt="Azure pipelines repo type" width="625" height="211"&gt;
&lt;/li&gt;
&lt;li&gt;A basic YAML file will be created.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PShVDzw3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/c97f4090b66758fabb9635311bcc6e90/88304/azure-09-pipelines-basic-yaml.jpg" alt="Azure pipelines basic YAML" width="863" height="751"&gt;
&lt;/li&gt;
&lt;li&gt;From the &lt;strong&gt;Save and run&lt;/strong&gt; dropdown, choose &lt;strong&gt;Save&lt;/strong&gt; to work further with the file. &lt;strong&gt;Note&lt;/strong&gt;: For future development, perform a pull locally before additional work to retrieve the YAML file.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Dduk0PK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/4d0cce3d60de4b1a3bf01638f40d8073/f89ba/azure-10-pipelines-save.jpg" alt="Azure pipelines YAML save" width="587" height="557"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#adjust-yaml-file-for-variable-use"&gt;
  &lt;/a&gt;
  Adjust YAML file for variable use
&lt;/h2&gt;

&lt;p&gt;The basic YAML file needs to be updated to reference the variable group and its variables.&lt;/p&gt;

&lt;p&gt;Additions to note in the image below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lines 12 - 13: Add a reference to the variable group&lt;/li&gt;
&lt;li&gt;Line 21: Update the reference to the &lt;code&gt;simple:ci&lt;/code&gt; script&lt;/li&gt;
&lt;li&gt;Lines 23 - 26: Add an &lt;code&gt;env&lt;/code&gt; group and list the variable name and its correlated entry in the variable group enclosed in &lt;code&gt;$()&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LJBfI_wJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/cf9fec0a55c4a86bd85b99560476cc5b/8bac5/azure-11-pipeline-yaml-update.jpg" alt="Azure pipelines YAML update" width="673" height="547"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#grant-pipeline-permission-to-variable-group"&gt;
  &lt;/a&gt;
  Grant pipeline permission to variable group
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Return to &lt;strong&gt;Pipelines &amp;gt; Library&lt;/strong&gt; and select the variable group to update&lt;/li&gt;
&lt;li&gt;Choose &lt;strong&gt;Pipeline permissions&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y6-GpIEt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/609cf1216479c72a857ff1a9e494928c/1f1b4/azure-12-pipelines-library-perms.jpg" alt="Azure variable group permissions" width="776" height="123"&gt;
&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;+&lt;/code&gt; to add the pipeline configured above to the permission group
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jv76J96B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/e65a2bddaeb572864ca27101b21beb03/d412e/azure-13-pipelines-library-perms-add.jpg" alt="Azure variable group permissions add" width="880" height="396"&gt;
&lt;/li&gt;
&lt;li&gt;The permissions are automatically saved&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#run-the-build-pipeline"&gt;
  &lt;/a&gt;
  Run the build pipeline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Return to &lt;strong&gt;Pipelines &amp;gt; Pipelines&lt;/strong&gt; and select the pipeline configure above. Choose &lt;strong&gt;Run pipeline&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S-3ym9yg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/fa78501df9521f320101d852a6b9365b/4e3e1/azure-14-pipelines-run.jpg" alt="Azure pipelines run" width="857" height="160"&gt;
&lt;/li&gt;
&lt;li&gt;Click the &lt;strong&gt;Job&lt;/strong&gt; entry to monitor the run
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G2uoIdmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/34b76c4eabfe393500f4bbe0437fa6ca/35372/azure-15-pipelines-monitor-run.jpg" alt="Azure pipelines run monitor" width="867" height="752"&gt;
&lt;/li&gt;
&lt;li&gt;The job will run through all of the configured steps, some of which have been set up by Azure
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UY1a8fUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/1037b017bc87b7c5a430640f42c72dd6/572c8/azure-16-pipelines-run-job-output.jpg" alt="Azure pipelines run steps" width="880" height="468"&gt;
&lt;/li&gt;
&lt;li&gt;Click on the &lt;code&gt;npm run and build&lt;/code&gt; step that invoked the script; the output reflects the variables set in the variable group not the local set of variables
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YkjB5goF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kristenkinnearohlmann.dev/static/47faad5277e523cecc88b7a9ac90046a/01a1d/azure-17-pipelines-run-job-output-build.jpg" alt="Azure pipelines review script execution" width="880" height="447"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;This basic Azure DevOps build pipeline configuration provides an example of how to set up the pipeline and use variables from a variable group.&lt;/p&gt;

&lt;p&gt;Once the configuration is established in the YAML, it can be further enhanced to perform other actions and tasks.&lt;/p&gt;

</description>
      <category>azure</category>
      <category>devops</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Start your programming journey: Coding bootcamps vs. Self-learning</title>
      <author>Christine Shu</author>
      <pubDate>Mon, 08 Nov 2021 03:16:53 +0000</pubDate>
      <link>https://dev.to/christineshu/start-your-programming-journey-coding-bootcamps-vs-self-learning-7ae</link>
      <guid>https://dev.to/christineshu/start-your-programming-journey-coding-bootcamps-vs-self-learning-7ae</guid>
      <description>&lt;p&gt;If you’re considering switching careers to become a developer, you’ve probably spent hours researching bootcamps and other learning options, such as online courses and various self-learning methods. At the core, what you may actually be asking is: are coding bootcamps worth it or is self-learning more suitable?&lt;/p&gt;

&lt;p&gt;In this article we’ll help you figure out if full-time onsite coding bootcamps or self-learning fit your learning needs better by comparing these five factors: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Structure and industry relevance&lt;/li&gt;
&lt;li&gt;Motivation&lt;/li&gt;
&lt;li&gt;Cost&lt;/li&gt;
&lt;li&gt;Flexibility&lt;/li&gt;
&lt;li&gt;Possibility of landing a job&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ll take a closer look at some of the pros and cons under each category. Hopefully we will get you one step closer to taking that first step in your programming journey! &lt;/p&gt;

&lt;p&gt;Short on time? 👉 &lt;a href="https://ucarecdn.com/051f2576-2add-4050-abd4-0f5436975d9c/"&gt;Jump to the summary table&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#structure-amp-industry-relevance"&gt;
  &lt;/a&gt;
  Structure &amp;amp; Industry Relevance
&lt;/h2&gt;

&lt;p&gt;Full-time onsite bootcamps are a more organized style of learning whereas self-learning allows you freedom in building your own curriculum. In this section, we will compare the structured vs. unstructured aspect, and how easy it is to stay updated with the latest programming knowledge. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootcamps"&gt;
  &lt;/a&gt;
  Bootcamps
&lt;/h3&gt;

&lt;p&gt;Onsite coding bootcamps are structured classes with a set curriculum taught by a dedicated teacher and a few teaching assistants. Most coding bootcamps focus on web development holistically. This means you’ll learn a variety of technologies, including the latest industry knowledge. &lt;/p&gt;

&lt;p&gt;In the bootcamp, you likely have a daily planned module and weekly goals. Classes can range from learning the foundations to building your own web applications. It’s common to learn basic programming languages such as JavaScript, SQL, Python, and some common industry practices, such as unit testing and the agile methodology.&lt;/p&gt;

&lt;p&gt;Bootcamps are specifically designed to help you get a developer job after graduation. This means that the material will be tailored to the knowledge and skills that a software developer will need in the real world.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selflearning"&gt;
  &lt;/a&gt;
  Self-learning
&lt;/h3&gt;

&lt;p&gt;With self-learning, the structure is up to you. You can choose to set a strict schedule or give yourself more flexibility. You can also plan when, where, and how you want to acquire new programming knowledge. &lt;/p&gt;

&lt;p&gt;For example, if you are learning Javascript from scratch, this might be what your curriculum looks like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Take the &lt;a href="https://www.codecademy.com/learn/introduction-to-javascript"&gt;Javascript course on Codecademy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Practice with &lt;a href="https://www.w3schools.com/js/default.asp"&gt;tutorials and practices on W3schools&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Find free videos on Youtube to dive deeper into specific concepts &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you already know the basics and want someone more experienced to look through your projects or answer your questions, you can use platforms like &lt;a href="https://www.codementor.io/search/mentors"&gt;Codementor&lt;/a&gt; (hey, that’s us! 😉) &lt;br&gt;
to find mentors specialized in Javascript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codementor.io/blog/how-to-use-codementor-cu74d4twet"&gt;&lt;em&gt;9 Ways A Mentor Can Advance Your Programming Journey&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-verdict-a-tie"&gt;
  &lt;/a&gt;
  The verdict 📣 : A tie
&lt;/h3&gt;

&lt;p&gt;As long as you understand your goals, your availability, and your learning style, structured and unstructured learning can be equally powerful. While structured bootcamps may save you time and energy by providing you with a set curriculum and industry knowledge, there is less freedom in deciding what and how you want to learn. On the other hand, self-learning would give you more flexibility, but could lack the structure and boundaries that might be helpful.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j6rDNX6g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/7e8d9aad-4ec8-4d8b-ae0c-f9774a16bce9/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6rDNX6g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/7e8d9aad-4ec8-4d8b-ae0c-f9774a16bce9/" alt="Coding Bootcamps or Self-learning? Structure and Relevance comparison.png" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;Learning to code can be overwhelming. How you keep up the momentum, stay curious and motivated, and continue to advance your knowledge is a skill in itself. As shown in the graph below, you are likely to build up a sense of confidence during the honeymoon phase, and just when you think you’ve gotten through the learning curve, you enter this cliff of confusion and go downhill from there. This is where many people give up, but once you push through, it’s uphill from there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--23wqKKOo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/4cc14df8-89dc-4ebe-9fbf-5fe519d53150/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--23wqKKOo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/4cc14df8-89dc-4ebe-9fbf-5fe519d53150/" alt="codingconfidence.png" width="880" height="540"&gt;&lt;/a&gt;&lt;em&gt;Image from &lt;a href="https://www.thinkful.com/blog/why-learning-to-code-is-so-damn-hard/"&gt;&lt;em&gt;Why learning to code is so damn hard&lt;/em&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this section, we will take a closer look at the motivation factor. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootcamps"&gt;
  &lt;/a&gt;
  Bootcamps
&lt;/h3&gt;

&lt;p&gt;With a set curriculum, full-time onsite coding bootcamps create a learning environment where everyone learns the same information and works on projects at the same time. You feel a strong sense of belonging to this community of peers as everyone works toward the same goal: to become a software developer.&lt;/p&gt;

&lt;p&gt;While your cohort and classroom can keep you accountable and motivated, it could also do the opposite. You could be distracted by the social environment, discouraged by others who seem to be ahead of you, or overwhelmed and drained by the heavy workload. While there are structures to help you stay motivated in bootcamps, it is not always a given.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selflearning"&gt;
  &lt;/a&gt;
  Self-learning
&lt;/h3&gt;

&lt;p&gt;For some, it is much easier to learn independently because you can set your own pace and not be bound by a structured curriculum and strict deadlines. &lt;/p&gt;

&lt;p&gt;However, the down side of teaching yourself is that you might lose motivation, feel isolated, or feel lost without a clear roadmap. One way around this is to find an accountability partner,  mentor, or peer to work with to stay motivated. As accountability is not inherently built into self-learning, staying motivated may be extra challenging. The journey for you to become a developer could take longer, and you may experience several dips throughout your learning journey.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-verdict-coding-bootcamps"&gt;
  &lt;/a&gt;
  The verdict 📣 : Coding bootcamps
&lt;/h3&gt;

&lt;p&gt;Social interactions and the right amount of competition and mutual encouragement will help you thrive. Joining a cohort of students can keep you motivated and give you the push you need when you feel like giving up.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9bvxMD_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/b3c50aea-9ec1-4a3a-b45f-d1ef0a62b4f5/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9bvxMD_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/b3c50aea-9ec1-4a3a-b45f-d1ef0a62b4f5/" alt="Coding Bootcamps or Self-learning? Motivation comparison.png" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codementor.io/blog/improve-programming-skills-d2ymtec4cl"&gt;&lt;em&gt;How To Improve Your Programming Skills As Developers and Non-Developers&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flexibility"&gt;
  &lt;/a&gt;
  Flexibility
&lt;/h2&gt;

&lt;p&gt;Who doesn’t love a flexible schedule? We all want to be able to work, rest, eat, and set our own schedule. If you attend an in person bootcamp, your schedule is set for you, whereas you can maintain a high level of freedom and flexibility with self-learning.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootcamps"&gt;
  &lt;/a&gt;
  Bootcamps
&lt;/h3&gt;

&lt;p&gt;With full-time onsite bootcamps, you set aside everything in your life and focus on the course for roughly 3.5 months. You have a fixed start and end date, and a set schedule for each day. You dedicate most of your time to the course and sacrifice flexibility. The guarantee is, at the end of the course, you should have the skills and a solid portfolio to prepare you for your first developer job.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selflearning"&gt;
  &lt;/a&gt;
  Self-learning
&lt;/h3&gt;

&lt;p&gt;Self-learning is considerably more flexible as you get to set your own schedule.  You aren’t bound by potential commute, class-attending, and group project time. You can set a learning schedule around your work hours. You are the main decision maker, and can decide on the topics you want to learn, how deep you want to go, the projects you want to work on, and adjust them at any time. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-verdict-selflearning"&gt;
  &lt;/a&gt;
  The verdict 📣 : Self-learning
&lt;/h3&gt;

&lt;p&gt;Self-learning is the best learning option for you if you value and prioritize flexibility. Other than a flexible schedule, you also have the maximum flexibility to choose the material and people you want to learn from. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gPfnYjm---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/c41a3b89-1d9a-412d-9973-6c233bbb310b/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gPfnYjm---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/c41a3b89-1d9a-412d-9973-6c233bbb310b/" alt="Coding Bootcamps or Self-learning?Flexibility comparison table.png" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cost"&gt;
  &lt;/a&gt;
  Cost
&lt;/h2&gt;

&lt;p&gt;In 2021, the &lt;a href="https://www.ziprecruiter.com/Salaries/Software-Developer-Salary"&gt;average annual salary&lt;/a&gt; of a software developer in the United States is $86,523, with the &lt;a href="https://www.payscale.com/research/US/Job=Software_Engineer/Salary"&gt;top 75th percentile&lt;/a&gt; making around $100k a year. How much are you willing to spend to have a career in software development?&lt;/p&gt;

&lt;p&gt;In this section, we’ll look at the cost of joining a bootcamp and self-directed learning. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootcamps"&gt;
  &lt;/a&gt;
  Bootcamps
&lt;/h3&gt;

&lt;p&gt;To join a full-time onsite coding bootcamp, you’re looking at around $13,500 (&lt;a href="https://www.bestcolleges.com/bootcamps/payment/bootcamp-cost/"&gt;median bootcamp tuition in 2020&lt;/a&gt;) for a roughly 14-week period. While it is more affordable than getting a 4-year or 2-year computer science degree, for some, this is a considerable sum of money and time invested into a career they’re not sure will work out for them. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selflearning"&gt;
  &lt;/a&gt;
  Self-learning
&lt;/h3&gt;

&lt;p&gt;With all the free resources online, such as courses, books, tutorials, or even talks, it’s possible to learn programming completely free of charge. You can also pay a few hundred dollars for an online course from platforms like &lt;a href="https://www.udemy.com/"&gt;Udemy&lt;/a&gt;, and &lt;a href="https://www.educative.io/"&gt;Educative&lt;/a&gt;, or for subscription-based learning options, such as &lt;a href="https://frontendmasters.com/"&gt;Frontend Masters&lt;/a&gt; and &lt;a href="https://teamtreehouse.com/"&gt;Treehouse&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-verdict-selflearning"&gt;
  &lt;/a&gt;
  The verdict 📣 : Self-learning
&lt;/h3&gt;

&lt;p&gt;From fully free resources, to investing hundreds of dollars into resources of your choosing, self-learning is much more affordable. You can continue to learn at your own pace and pick up new skills according to your own financial ability. With coding bootcamps, you have to decide whether it is cost effective for you for the fixed price and timeframe. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tcKaO565--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/6d1cf759-6c29-470b-885b-55d805d55fb0/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tcKaO565--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/6d1cf759-6c29-470b-885b-55d805d55fb0/" alt="Coding Bootcamps or Self-learning? Cost comparison table.png" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#landing-a-job"&gt;
  &lt;/a&gt;
  Landing a job
&lt;/h2&gt;

&lt;p&gt;If you’re learning programming to switch careers, you should consider how likely and how quickly you can find a developer job with bootcamps and self-learning.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootcamps"&gt;
  &lt;/a&gt;
  Bootcamps
&lt;/h3&gt;

&lt;p&gt;The goal of a coding bootcamp is to help you land a software developer job. Bootcamps will  require you to complete a resume and portfolio by the end of the program. They will also provide career-focused resources, such as career counselors. Some even have “hiring days” or similar events where students can present their portfolio and attend interviews with the bootcamp industry partners. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selflearning"&gt;
  &lt;/a&gt;
  Self-learning
&lt;/h3&gt;

&lt;p&gt;As career resources are not provided to self taught developers, you’d have to take on the sole responsibility of preparing for and finding your first developer job. There are plenty of resources online dedicated to helping people find their first developer job. For more personalized help, you can consult developers in the industry for tips on landing your first job.You can also connect with mentors or senior developers for portfolio feedback and mock interviews.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-verdict-bootcamp"&gt;
  &lt;/a&gt;
  The verdict 📣: Bootcamp
&lt;/h3&gt;

&lt;p&gt;A coding bootcamp is familiar with what the industry is looking for and has experience helping students switch careers. Naturally, they have a better idea of what portfolios would work, what your resume should include, and other career resources you might need to kickstart your developer career. The added guidance is especially helpful when you’re switching careers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E_SsSJRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/f2b64b7c-be8c-4b66-9fd0-d8c11815fd15/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E_SsSJRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/f2b64b7c-be8c-4b66-9fd0-d8c11815fd15/" alt="Coding Bootcamps or Self-learning? Possibility of landing a job.png" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Hopefully we’ve given you a bit more insights on two of the methods you could choose from. There are many many different ways to learn programming, what’s most important is understanding your own needs and goals and choosing a learning style that suits you best. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GsdJo3TI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/051f2576-2add-4050-abd4-0f5436975d9c/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GsdJo3TI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/051f2576-2add-4050-abd4-0f5436975d9c/" alt="Coding Bootcamps or Self-learning? A Summary table.png" width="880" height="806"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Regardless of which route you choose, you can always find an accountability partner or a &lt;a href="https://www.codementor.io/search/mentors"&gt;&lt;strong&gt;coding mentor&lt;/strong&gt;&lt;/a&gt; to support you through your journey. Not to mention, programming is a lifelong journey for all developers. A coding mentor can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Continue to encourage you even after you graduate from a coding bootcamp. &lt;/li&gt;
&lt;li&gt;Provide you technical and career advice.&lt;/li&gt;
&lt;li&gt;Share their experience and the latest trends in the tech industry. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Join discussion with other mentors and users on 👉 &lt;a href="https://github.com/CodementorIO/event-topics/discussions/4"&gt;Getting into tech without a Computer Science degree&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have you gone through a coding bootcamp or are you a self-taught developer? We’d love to hear what worked for you and what didn’t. Comment below to let us know!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>How to get an A+ Security Grade For Your Website on Mozilla Observatory (Part 2 - Nginx)</title>
      <author>Jeremy</author>
      <pubDate>Mon, 08 Nov 2021 02:24:00 +0000</pubDate>
      <link>https://dev.to/jeremyling/how-to-get-an-a-security-grade-on-mozilla-observatory-part-2-nginx-47fg</link>
      <guid>https://dev.to/jeremyling/how-to-get-an-a-security-grade-on-mozilla-observatory-part-2-nginx-47fg</guid>
      <description>&lt;p&gt;After rewriting the FormBlob website with Hugo, I wanted to ensure that the website adhered to security best practices and was not vulnerable to any known issues. I began looking for a measure for website security and found Mozilla Observatory. On my very first scan, I received a C grade. While not particularly bad, I wanted to rectify any flaws found to achieve the best score I could. It was also an opportunity to learn a little more about website security.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-what-is-mozilla-observatory"&gt;
  &lt;/a&gt;
  So what is Mozilla Observatory?
&lt;/h3&gt;

&lt;p&gt;The following quote is taken directly from the FAQ at &lt;a href="https://observatory.mozilla.org/faq" rel="noopener"&gt;&lt;/a&gt;&lt;a href="https://observatory.mozilla.org/faq"&gt;https://observatory.mozilla.org/faq&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Observatory tests for preventative measure against cross-site scripting attacks, man-in-the-middle attacks, cross-domain information leakage, cookie compromise, content delivery network compromise, and improperly issued certificates.&lt;/p&gt;

&lt;p&gt;However, it does not test for outdated software versions, SQL injection vulnerabilities, vulnerable content management system plugins, improper password creation policies or storage procedures, and more. These are just as important as what the Observatory tests for, and site operators should not be neglectful of them simply because they score well on the Observatory.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While it may sound like a mouthful, these tests largely measure how vulnerable your website is to some of the most common malicious attacks that prey on a website developer's negligence in setting up secure networking configurations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#formblob-setup"&gt;
  &lt;/a&gt;
  FormBlob Setup
&lt;/h3&gt;

&lt;p&gt;I will split the discussion in this article into two parts - one for &lt;a href="https://formblob.com"&gt;https://formblob.com&lt;/a&gt; and another for &lt;a href="https://build.formblob.com"&gt;https://build.formblob.com&lt;/a&gt;. This is because the main site is a static site built using Hugo and deployed on Netlify, while the form builder site is a React app deployed on AWS ECS behind an elastic load balancer (ELB).&lt;/p&gt;

&lt;p&gt;This is part two of the article discussing how you would set up Nginx to achieve an A+ grade. For part one discussing how to set up Netlify, &lt;a href="https://formblob.com/resources/how-i-got-an-a-security-grade-on-mozilla-observatory-netlify"&gt;click here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h3&gt;

&lt;p&gt;In order to improve your grade for Mozilla Observatory scans, you'll need to add HTTP response headers. To add HTTP response headers to Nginx, you will need to edit the server context in the &lt;code&gt;nginx.conf&lt;/code&gt; file. Here, I assume that you are familiar enough with Nginx to set up the config file. I list the full list of headers and config added to achieve an A+ grade below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
  listen 80&lt;span class="p"&gt;;&lt;/span&gt;
  ...

  &lt;span class="k"&gt;return &lt;/span&gt;301 https://&lt;span class="nv"&gt;$host$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

server &lt;span class="o"&gt;{&lt;/span&gt;
  listen 443:
  ...

  &lt;span class="c"&gt;# Only connect to this site and subdomains via HTTPS for the next two years&lt;/span&gt;
  add_header Strict-Transport-Security &lt;span class="s2"&gt;"max-age=63072000; includeSubDomains; preload"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Only allow my site to frame itself&lt;/span&gt;
  add_header X-Frame-Options &lt;span class="s2"&gt;"SAMEORIGIN"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Prevent browsers from incorrectly detecting non-scripts as scripts&lt;/span&gt;
  add_header X-Content-Type-Options &lt;span class="s2"&gt;"nosniff"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Block pages from loading when they detect reflected XSS attacks&lt;/span&gt;
  add_header X-Xss-Protection &lt;span class="s2"&gt;"1; mode=block"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Only send the shortened referrer to a foreign origin, full referrer to a local host&lt;/span&gt;
  add_header Referrer-Policy &lt;span class="s2"&gt;"strict-origin-when-cross-origin"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Configue CSP&lt;/span&gt;
  add_header Content-Security-Policy &lt;span class="s2"&gt;"default-src 'self' formblob.com *.formblob.com fblob.me *.fblob.me; connect-src 'self' formblob.com *.formblob.com wss://*.formblob.com fblob.me *.fblob.me https://sockjs-mt1.pusher.com firebase.googleapis.com firebaseinstallations.googleapis.com https://www.googleapis.com/webfonts/ www.google-analytics.com; font-src 'self' https://fonts.gstatic.com; img-src https: data: blob: www.googletagmanager.com https://ssl.gstatic.com https://www.gstatic.com; media-src https: data: blob:; script-src 'self' 'unsafe-eval' js.stripe.com https://www.googletagmanager.com https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/ 'sha256-TQ+edvHvrQ4+h8G+tZQdFsQSrUAeSfwE/D8KjAzDnT0='; style-src 'self' 'unsafe-inline' fonts.googleapis.com; frame-src 'self' formblob.com *.formblob.com fblob.me *.fblob.me js.stripe.com https://www.google.com/recaptcha/ https://recaptcha.google.com/recaptcha/; frame-ancestors 'self' formblob.com *.formblob.com fblob.me *.fblob.me;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  ...
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#test-scores"&gt;
  &lt;/a&gt;
  Test Scores
&lt;/h3&gt;

&lt;p&gt;Mozilla Observatory scores your website on a predefined set of tests. Let's go through each of the tests individually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1cqyVGma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i21r8559mhinokxtllss.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1cqyVGma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i21r8559mhinokxtllss.png" alt="Test Scores" width="880" height="591"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#content-security-policy"&gt;
  &lt;/a&gt;
  Content Security Policy
&lt;/h4&gt;

&lt;p&gt;Content Security Policy (CSP) gives you fine-grained control over which resources can be loaded on your website and from where such resources are allowed. It aims to protect your website from cross-site scripting (XSS) vulnerabilities. XSS vulnerabilities stem from unsafe inline Javascript and disabling this effectively eliminates most XSS attacks. However, disabling unsafe inline also means that &lt;em&gt;all&lt;/em&gt; Javascript must be loaded from &lt;code&gt;&amp;lt;script src=""&amp;gt;&lt;/code&gt; tags. Javascript inside &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags but not loaded via &lt;code&gt;src&lt;/code&gt; will fail to execute.&lt;/p&gt;

&lt;p&gt;Configuring CSP is a tedious process that requires you to evaluate the sources of all the scripts and styles loaded on your website. Before we dive into each policy, here's a look at the complete CSP I deployed on FormBlob. Note that I split each directive onto a separate line here for readability. When deploying, the entire CSP must be in a single line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/&lt;span class="k"&gt;*&lt;/span&gt;
  &lt;span class="c"&gt;# Configure CSP&lt;/span&gt;
  add_header Content-Security-Policy &lt;span class="s2"&gt;"
    default-src 'self' formblob.com *.formblob.com fblob.me *.fblob.me;
    connect-src 'self' formblob.com *.formblob.com wss://*.formblob.com fblob.me *.fblob.me https://sockjs-mt1.pusher.com firebase.googleapis.com firebaseinstallations.googleapis.com https://www.googleapis.com/webfonts/ www.google-analytics.com;
    font-src 'self' https://fonts.gstatic.com;
    img-src https: data: blob: www.googletagmanager.com https://ssl.gstatic.com https://www.gstatic.com;
    media-src https: data: blob:;
    script-src 'self' 'unsafe-eval' js.stripe.com https://www.googletagmanager.com https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/ 'sha256-TQ+edvHvrQ4+h8G+tZQdFsQSrUAeSfwE/D8KjAzDnT0=';
    style-src 'self' 'unsafe-inline' fonts.googleapis.com;
    frame-src 'self' formblob.com *.formblob.com fblob.me *.fblob.me js.stripe.com https://www.google.com/recaptcha/ https://recaptcha.google.com/recaptcha/;
    frame-ancestors 'self' formblob.com *.formblob.com fblob.me *.fblob.me;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I used a subset of the full list of directives that are relevant to FormBlob. I will limit my discussion here to only these directives and a few others that are common. You can read more about the &lt;a href="https://developers.google.com/web/fundamentals/security/csp"&gt;full list of directives here&lt;/a&gt;. Also, as a start, I recommend using the header &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; instead of &lt;code&gt;Content-Security-Policy&lt;/code&gt; to get a report of all the violations without breaking your website.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/default-src"&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; is a fallback directive for the other fetch directives. Directives that are specified have no inheritance, while directives that are not specified will fall back to the value of &lt;code&gt;default-src&lt;/code&gt;. Here, you want to include 'self' (the origin site with the same scheme and port) and other trusted domains. The recommended setting for this is &lt;code&gt;none&lt;/code&gt;, which will require you to set almost every other directive.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/connect-src"&gt;&lt;code&gt;connect-src&lt;/code&gt;&lt;/a&gt; provides control over fetch requests, XHR, eventsource, beacon and websockets connections. This defines any resources that you need to connect to. For websocket connections, you will have to set the relevant scheme. For example, wss://*.formblob.com.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/font-src"&gt;&lt;code&gt;font-src&lt;/code&gt;&lt;/a&gt; specifies which URLs to load fonts from. If you are using Google Fonts, this directive should include &lt;code&gt;https://fonts.gstatic.com data:&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/img-src"&gt;&lt;code&gt;img-src&lt;/code&gt;&lt;/a&gt; specifies the URLs that images can be loaded from. If you use Google Tag Manager, this directive should include &lt;code&gt;www.googletagmanager.com https://ssl.gstatic.com https://www.gstatic.com&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/media-src"&gt;&lt;code&gt;media-src&lt;/code&gt;&lt;/a&gt; specifies the URLs from which video, audio and text track resources can be loaded from.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/manifest-src"&gt;&lt;code&gt;manifest-src&lt;/code&gt;&lt;/a&gt; specifies the URLs that application manifests may be loaded from.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src"&gt;&lt;code&gt;script-src&lt;/code&gt;&lt;/a&gt; specifies the locations from which a script can be executed from. If you use Google Tag Manager, the recommended approach is to use the &lt;a href="https://developers.google.com/tag-manager/web/csp"&gt;nonce method&lt;/a&gt; for GTM scripts. I include the &lt;code&gt;'unsafe-eval'&lt;/code&gt; keyword here because FormBlob uses a heavily sanitized &lt;code&gt;Function()&lt;/code&gt; method to evaluate previously set fields to personalise the experience for users completing forms. This is a quintessential feature across all form builders.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In this directive, I also include a hash keyword &lt;code&gt;'sha256-TQ+edvHvrQ4+h8G+tZQdFsQSrUAeSfwE/D8KjAzDnT0='&lt;/code&gt;. You may use the hashed script as a keyword to allow any script to be loaded. This hash is automatically generated in the report in the console for any script that violates the directive. You can copy the hash together with the single quotes directly into the directive to allow the script.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src"&gt;&lt;code&gt;style-src&lt;/code&gt;&lt;/a&gt; controls from where styles get applied to a document. This includes &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; elements, &lt;code&gt;@import&lt;/code&gt; rules, and requests originating from a &lt;code&gt;Link&lt;/code&gt; HTTP response header field. You may notice that I include the &lt;code&gt;'unsafe-inline'&lt;/code&gt; keyword. This is because I directly alter inline styles using Material UI. Again, this is a potential vulnerability that you should avoid if you can. If using Google Fonts and/or Google Tag Manager, you should include these &lt;code&gt;fonts.googleapis.com &lt;a href="https://tagmanager.google.com"&gt;https://tagmanager.google.com&lt;/a&gt;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-src"&gt;&lt;code&gt;frame-src&lt;/code&gt;&lt;/a&gt; restricts the URLs that can be embedded on the site.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/form-action"&gt;&lt;code&gt;form-action&lt;/code&gt;&lt;/a&gt; restricts the URLs which the forms can submit to.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors"&gt;&lt;code&gt;frame-ancestors&lt;/code&gt;&lt;/a&gt; restricts the URLs that can embed the requested resource inside of &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt; elements. This directive does not fallback to default-src directive. If this is set, X-Frame-Options is ignored by user agents.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/upgrade-insecure-requests"&gt;&lt;code&gt;upgrade-insecure-requests&lt;/code&gt;&lt;/a&gt; instructs user agents to rewrite URL schemes, changing HTTP to HTTPS. This directive is for websites with large numbers of old URL's that need to be rewritten.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cookies"&gt;
  &lt;/a&gt;
  Cookies
&lt;/h4&gt;

&lt;p&gt;For FormBlob all cookies used are created on the API server for the purpose of session tracking, and I do not set any cookies on the frontend server hosting the website. However, if you do need to set cookies using Nginx, ensure that your cookies use the &lt;code&gt;Secure&lt;/code&gt; flag and set the appropriate &lt;code&gt;SameSite&lt;/code&gt; attribute. Session cookies should also have the &lt;code&gt;HttpOnly&lt;/code&gt; flag. Cookies should also have an expiration as soon as is necessary.&lt;/p&gt;

&lt;p&gt;For the &lt;code&gt;SameSite&lt;/code&gt; attribute, this is a direct quote from &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Strict means that the browser sends the cookie only for same-site requests, that is, requests originating from the same site that set the cookie. If a request originates from a URL different from the current one, no cookies with the SameSite=Strict attribute are sent.&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;
Lax means that the cookie is not sent on cross-site requests, such as on requests to load images or frames, but is sent when a user is navigating to the origin site from an external site (for example, when following a link). This is the default behavior if the SameSite attribute is not specified.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Add a cookie with [name] and [value] that expires in 1 day (86400 seconds)&lt;/span&gt;
&lt;span class="c"&gt;# and restricted to formblob.com and its subdomains&lt;/span&gt;
add_header Set-Cookie &lt;span class="s2"&gt;"[name]=[value]; Max-Age=86400; Path=/; Domain=formblob.com HttpOnly; Secure"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#crossorigin-resource-sharing"&gt;
  &lt;/a&gt;
  Cross-origin Resource Sharing
&lt;/h4&gt;

&lt;p&gt;Cross-origin Resource Sharing (CORS) is not needed for most websites and FormBlob is no exception. This should not be set unless specifically needed.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#http-public-key-pinning"&gt;
  &lt;/a&gt;
  HTTP Public Key Pinning
&lt;/h4&gt;

&lt;p&gt;HTTP Public Key Pinning is only required for maximum risk sites. It is not recommended for most sites and you would probably not need it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#http-strict-transport-security"&gt;
  &lt;/a&gt;
  HTTP Strict Transport Security
&lt;/h4&gt;

&lt;p&gt;HTTP Strict Transport Security (HSTS) notifies user agents to only connect to a given site over HTTPS, even if the scheme chosen was HTTP. It works in tandem with HTTP to HTTPS redirects and should be set on response headers from the HTTPS request. The recommended setting is &lt;code&gt;Strict-Transport-Security: max-age=63072000; includeSubdomains&lt;/code&gt;. If the &lt;code&gt;includeSubdomains&lt;/code&gt; flag is present, all requests to subdomains will also be upgraded to HTTPS. Ensure that all subdomains can handle HTTPS traffic before including this flag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Only connect to this site and subdomains via HTTPS for the next two years&lt;/span&gt;
add_header Strict-Transport-Security &lt;span class="s2"&gt;"max-age=63072000; includeSubDomains; preload"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#https-redirection"&gt;
  &lt;/a&gt;
  HTTPS Redirection
&lt;/h4&gt;

&lt;p&gt;Sites that listen on port 80 should redirect to the same resource on HTTPS. Once the redirection has occurred, HSTS ensures that all future HTTP requests are instead sent directly to the secure site. The setting below redirects all HTTP traffic to the exact same resource on HTTPS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
  listen 80&lt;span class="p"&gt;;&lt;/span&gt;
  ...

  &lt;span class="k"&gt;return &lt;/span&gt;301 https://&lt;span class="nv"&gt;$host$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#referrer-policy"&gt;
  &lt;/a&gt;
  Referrer Policy
&lt;/h4&gt;

&lt;p&gt;There are four options for this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;no-referrer&lt;/code&gt;: never send the Referer header&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;same-origin&lt;/code&gt;: send referrer, but only on requests to the same origin&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;strict-origin&lt;/code&gt;: send referrer to all origins, but only the URL sans path (e.g. &lt;a href="https://example.com/"&gt;https://example.com/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;strict-origin-when-cross-origin&lt;/code&gt;: send full referrer on same origin, URL sans path on foreign origin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default, you would want to use &lt;code&gt;strict-origin-when-cross-origin&lt;/code&gt;. This protects user privacy on cross-origin requests but allows you to track users using analytics within your own site.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Only send the shortened referrer to a foreign origin, full referrer to a local host&lt;/span&gt;
add_header Referrer-Policy &lt;span class="s2"&gt;"strict-origin-when-cross-origin"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#subresource-integrity"&gt;
  &lt;/a&gt;
  Subresource Integrity
&lt;/h4&gt;

&lt;p&gt;Subresource integrity (SRI) protects against attackers modifying the contents of Javascript libraries hosted on content delivery networks (CDNs) in order to create vulnerabilities in websites that make use of that hosted library. SRI uses a hash of the library's content to verify that a library has not been changed. If it has, the website will refuse to load the library. &lt;a href="https://www.srihash.org/"&gt;Here's a good resource to generate SRI hashes&lt;/a&gt;. Below is an example of an embedded form from FormBlob using SRI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script
  &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/@jeremyling/form-renderer@0.4.16/dist/web.min.js"&lt;/span&gt;
  &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha512-27spyugyD2KOU0tPev6hnJ2bCeKPh5WpMzEWna4uXXCSlSQcFRDxAKZDfBhJ21lF0hyBbTD1KoOXmXJwKU5NHQ=="&lt;/span&gt;
  &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#xcontenttypeoptions"&gt;
  &lt;/a&gt;
  X-Content-Type-Options
&lt;/h4&gt;

&lt;p&gt;X-Content-Type-Options is a header supported by Internet Explorer, Chrome and Firefox 50+ that tells user agents not to load scripts and stylesheets unless the server indicates the correct MIME type. Without this header, these browsers can incorrectly detect files as scripts and stylesheets, leading to XSS attacks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Prevent browsers from incorrectly detecting non-scripts as scripts&lt;/span&gt;
add_header X-Content-Type-Options &lt;span class="s2"&gt;"nosniff"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#xframeoptions"&gt;
  &lt;/a&gt;
  X-Frame-Options
&lt;/h4&gt;

&lt;p&gt;X-Frame-Options controls where your site may be framed within an iframe. This helps to prevent clickjacking, in which an attacker frames your site within a malicious platform that tricks users into clicking on links which the attacker has control over.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Only allow my site to frame itself&lt;/span&gt;
add_header X-Frame-Options &lt;span class="s2"&gt;"SAMEORIGIN"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#xxssprotection"&gt;
  &lt;/a&gt;
  X-XSS-Protection
&lt;/h4&gt;

&lt;p&gt;X-XSS-Protection is a feature of Internet Explorer and Chrome that stops pages from loading when they detect reflected XSS attacks. While a strong CSP may make this header redundant, it protects users on older browsers that do not support CSP.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Block pages from loading when they detect reflected XSS attacks&lt;/span&gt;
add_header X-Xss-Protection &lt;span class="s2"&gt;"1; mode=block"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#complete-nginxconf-configuration"&gt;
  &lt;/a&gt;
  Complete nginx.conf Configuration
&lt;/h3&gt;

&lt;p&gt;We have successfully gone through each of the tests and set up configurations to help us pass them. If you have followed along, you should receive at least an A grade with this setup. Here's a recap of the full configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
  listen 80&lt;span class="p"&gt;;&lt;/span&gt;
  ...

  &lt;span class="k"&gt;return &lt;/span&gt;301 https://&lt;span class="nv"&gt;$host$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

server &lt;span class="o"&gt;{&lt;/span&gt;
  listen 443:
  ...

  &lt;span class="c"&gt;# Only connect to this site and subdomains via HTTPS for the next two years&lt;/span&gt;
  add_header Strict-Transport-Security &lt;span class="s2"&gt;"max-age=63072000; includeSubDomains; preload"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Only allow my site to frame itself&lt;/span&gt;
  add_header X-Frame-Options &lt;span class="s2"&gt;"SAMEORIGIN"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Prevent browsers from incorrectly detecting non-scripts as scripts&lt;/span&gt;
  add_header X-Content-Type-Options &lt;span class="s2"&gt;"nosniff"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Block pages from loading when they detect reflected XSS attacks&lt;/span&gt;
  add_header X-Xss-Protection &lt;span class="s2"&gt;"1; mode=block"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Only send the shortened referrer to a foreign origin, full referrer to a local host&lt;/span&gt;
  add_header Referrer-Policy &lt;span class="s2"&gt;"strict-origin-when-cross-origin"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;# Configue CSP&lt;/span&gt;
  add_header Content-Security-Policy &lt;span class="s2"&gt;"default-src 'self' formblob.com *.formblob.com fblob.me *.fblob.me; connect-src 'self' formblob.com *.formblob.com wss://*.formblob.com fblob.me *.fblob.me https://sockjs-mt1.pusher.com firebase.googleapis.com firebaseinstallations.googleapis.com https://www.googleapis.com/webfonts/ www.google-analytics.com; font-src 'self' https://fonts.gstatic.com; img-src https: data: blob: www.googletagmanager.com https://ssl.gstatic.com https://www.gstatic.com; media-src https: data: blob:; script-src 'self' 'unsafe-eval' js.stripe.com https://www.googletagmanager.com https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/ 'sha256-TQ+edvHvrQ4+h8G+tZQdFsQSrUAeSfwE/D8KjAzDnT0='; style-src 'self' 'unsafe-inline' fonts.googleapis.com; frame-src 'self' formblob.com *.formblob.com fblob.me *.fblob.me js.stripe.com https://www.google.com/recaptcha/ https://recaptcha.google.com/recaptcha/; frame-ancestors 'self' formblob.com *.formblob.com fblob.me *.fblob.me;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  ...
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding Remarks
&lt;/h3&gt;

&lt;p&gt;With an A+ security grade, &lt;a href="https://formblob.com"&gt;FormBlob&lt;/a&gt; ranks as the most secure form building platform in the market. FormBlob respects data privacy and aims to ensure all data is secure from malicious attacks. We make an effort to meet and exceed all established security requirements. While not officially HIPAA or NIST certified due to how new we currently are, our infrastructure and security setup meet these requirements and we are confident of getting certified in the long run. Here are the Mozilla Observatory results of other popular form builders that we benchmark against.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X5fxWBJj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ugmruztm4tgf5x78a7kl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X5fxWBJj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ugmruztm4tgf5x78a7kl.jpg" alt="Benchmarks" width="880" height="571"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>tutorial</category>
      <category>nginx</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Virtual interview tips to win any job</title>
      <author>Ryo Naruse</author>
      <pubDate>Mon, 08 Nov 2021 01:40:23 +0000</pubDate>
      <link>https://dev.to/ryy/virtual-interview-tips-to-win-any-job-2a3f</link>
      <guid>https://dev.to/ryy/virtual-interview-tips-to-win-any-job-2a3f</guid>
      <description>&lt;p&gt;You came to know your interview date. You are excited but are you not nervous? “What will ask, what will happen if I can’t answer, how to prepare myself” -- hundreds of such questions are swirling in your mind. &lt;/p&gt;

&lt;p&gt;Hmm, I understand. I can feel that. I used to feel the same way before the interview. But now I know the solution. &lt;/p&gt;

&lt;p&gt;No worries, my dear. Great virtual interview tips are waiting for you that you have never thought of before in this way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#virtual-interview-tips"&gt;
  &lt;/a&gt;
  Virtual interview tips:
&lt;/h2&gt;

&lt;p&gt;Copy my &lt;strong&gt;virtual interview&lt;/strong&gt; tips, and you will see the unbelievable result.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-are-you-focusing"&gt;
  &lt;/a&gt;
  Where are you focusing:
&lt;/h3&gt;

&lt;p&gt;Are you focusing on yourself? Do you want your interviewer to like you? Are you placing your attention on what you want to get from the position? If your answer is yes, -- you’ll feel worried, nervous, and a lot of fear. &lt;/p&gt;

&lt;p&gt;So, how to lessen your fear? Just pay attention to the interviewer’s needs and the organization’s goal. &lt;/p&gt;

&lt;p&gt;This simple technique can lessen your interview fear. Do you know why it is possible?&lt;/p&gt;

&lt;p&gt;Just because you have moved your attention to another external thing, it is essential to place your attention. It will determine how much fear you have. &lt;/p&gt;

&lt;p&gt;It would be best to focus on the hiring manager and organization’s needs when interviewing (before and during). Try to show your experiences that match those needs.&lt;/p&gt;

&lt;p&gt;Do not try to show your hiring manager that you are intelligent, great etc. All you need to do is focus on the company needs. &lt;/p&gt;

&lt;p&gt;This way, you can avoid fear from an interview.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#embrace-rejection"&gt;
  &lt;/a&gt;
  Embrace rejection:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Embrace rejection!&lt;/strong&gt; Why? You may think, what type of &lt;strong&gt;virtual interview tips&lt;/strong&gt; is this? &lt;/p&gt;

&lt;p&gt;The truth is rejection is part of success. Successful people know rejection is unavoidable. Think of it this way: you may be the sweetest man in this world, but some people do not like sweet.&lt;/p&gt;

&lt;p&gt;Yes, I know rejection can hurt you. The truth is it can be a possible outcome. &lt;br&gt;
If you have a solid mindset to embrace interview rejection, you will not be worried about the interview rejection (before and during). Cheers! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dress-is-important"&gt;
  &lt;/a&gt;
  Dress is important:
&lt;/h2&gt;

&lt;p&gt;Imagine, today, you have to face an in-person interview. What kind of clothes would you wear then? Formal dress. &lt;/p&gt;

&lt;p&gt;In the same way, you have to think in the case of a video interview. You have to get dressed as you would be for an in-person interview. &lt;/p&gt;

&lt;p&gt;If you don’t, your hiring manager may get the wrong message about your interest in the role.&lt;/p&gt;

&lt;p&gt;One more thing, please make sure your outfit looks good on camera. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recheck-your-tech"&gt;
  &lt;/a&gt;
  Recheck your tech:
&lt;/h2&gt;

&lt;p&gt;Dear reader,I have already given you three important &lt;strong&gt;virtual interview tips.&lt;/strong&gt;  I think you have found them essential.&lt;/p&gt;

&lt;p&gt;Want to read more? Are these tips beneficial? Okay then, please keep reading. &lt;/p&gt;

&lt;p&gt;Think, your video interview has been started. The hiring manager has asked you a question. You are going to answer. When you are answering, you see that your microphone is not working. &lt;/p&gt;

&lt;p&gt;Think about the situation. &lt;/p&gt;

&lt;p&gt;So, it is crucial to test your tech before any virtual interview. Make sure you can hear and be heard and see and be seen. &lt;/p&gt;

&lt;p&gt;So, recheck your setup before any interview. You can talk with your friend using the same platform (for example, zoom) that the organization will use for rechecking your tech set up ahead of your interview. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-up-your-frame"&gt;
  &lt;/a&gt;
  Set up your frame:
&lt;/h2&gt;

&lt;p&gt;Your background frame should be a room without a lot of distracting clutter. A blank wall can be an excellent decision for a background. &lt;/p&gt;

&lt;p&gt;----- Choose a calm area for your interview.&lt;/p&gt;

&lt;p&gt;----- Consider the natural light if possible. If not, then you can invest in ring light and place it behind the camera.&lt;/p&gt;

&lt;p&gt;Remember, a decent setup helps to grow a positive impression in the interviewer’s mind.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sitting-distance"&gt;
  &lt;/a&gt;
  Sitting distance:
&lt;/h2&gt;

&lt;p&gt;Maintain a standard distance from your computer to your sitting chair. You may ask me how you will understand the standard distance.&lt;/p&gt;

&lt;p&gt;Hmm, it’s a good question. But the answer is straightforward.&lt;/p&gt;

&lt;p&gt;Set your chair at such a distance from your computer that you are not looking too huge or too tiny on your screen. &lt;/p&gt;

&lt;p&gt;Please check that your shoulders and upper chest are visible and keep a bit of space on your computer screen above your head. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#eye-contact"&gt;
  &lt;/a&gt;
  Eye contact:
&lt;/h2&gt;

&lt;p&gt;Let’s imagine a scene. You are talking with a friend about an important matter. After a couple of minutes, you notice your friend is looking at your shoulders or somewhere else when talking with him.&lt;/p&gt;

&lt;p&gt;How do you feel if it happens? You will assume he is not listening to you or not paying attention to the matters. A negative impression will grow. &lt;/p&gt;

&lt;p&gt;The same will happen if you do so as a candidate during the interview. So, eye contact is a crucial part of the interview. The hiring manager will feel you are paying attention to him.&lt;/p&gt;

&lt;p&gt;Yes, actual eye contact is not possible in the case of a video interview. I agree with that, but you can look at your interviewer’s face. This is enough to feel them you are listening or engaged with what they are saying. &lt;/p&gt;

&lt;p&gt;Look at your camera in such a way during an interview that you do at the time of natural conversation. This is enough to show your seriousness to your employer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#practice-before-a-video-interview"&gt;
  &lt;/a&gt;
  Practice before a video interview:
&lt;/h2&gt;

&lt;p&gt;One point I forgot to write in this article (virtual interview tips to win any job”). Guess what it can be? That is nothing but a rehearsal. &lt;/p&gt;

&lt;p&gt;You may ask me, “Hey writer, is it a drama? Why do I need rehearsal before any interview?”&lt;/p&gt;

&lt;p&gt;Not a wrong question, but yes, it’s a drama. An interviewer not only judge your knowledge related to the post but also your behavior, your conversation style, your posture and gesture and more.&lt;/p&gt;

&lt;p&gt;How can your rehearsal be?&lt;/p&gt;

&lt;p&gt;Your career coach or an expert can take your interview as like an actual interview. Record this practice and find out the problems (if any) when you will watch that record. &lt;/p&gt;

&lt;p&gt;If you find, you look away from the camera often then solve it. If you find your posture is wrong, then make adjustments accordingly. &lt;/p&gt;

&lt;p&gt;That’s how you can prepare yourself before the actual interview. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#digital-handshake"&gt;
  &lt;/a&gt;
  Digital handshake:
&lt;/h2&gt;

&lt;p&gt;You may be not familiar with the word “digital handshake.” Before explaining, I need to say something. &lt;/p&gt;

&lt;p&gt;In the in-person interview, it’s possible to meet with the interviewer physically and shake hands. You can make small talk.&lt;/p&gt;

&lt;p&gt;But in the case of a video interview, this is not possible. So, try a digital handshake!  I mean, say “hello” and add a smile. This small step helps a lot to make a connection and translates warmth and openness. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-you-sound-is-vital"&gt;
  &lt;/a&gt;
  How you sound is vital:
&lt;/h2&gt;

&lt;p&gt;You may be surprised after reading this point. Is it one of the virtual interview tips? Yes, my dear. &lt;/p&gt;

&lt;p&gt;Maximum candidates are too much concerned with how they look in a video interview. &lt;/p&gt;

&lt;p&gt;Yes, looking formal is essential, but they forget about how they sound. How fast you speak, pause, and voice tone—all these things need to be practiced. Always try to speak clearly, but keep it natural. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#join-a-couple-of-minutes-early"&gt;
  &lt;/a&gt;
  Join a couple of minutes early:
&lt;/h2&gt;

&lt;p&gt;You know where your video interview will take place. Open that platform (Zoom, Google Meet etc.) 5 minutes beforehand. &lt;/p&gt;

&lt;p&gt;There are hundreds of interview software to check your shot. Use any of those before you fully enter the meeting for an interview. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;Dear reader, follow these virtual interview tips properly, and you will be far ahead of other candidates. Pay attention to your hiring manager’s needs, and grow a mentality to accept rejection. These two will help you to lessen your interview fear. Practice before the interview and record that practising video. If you need to improve anywhere, like posture, gesture etc., adjust accordingly. Recheck your hardware, such as microphone, camera, etc., and select a calm and quiet place for video interviews to avoid distraction.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#related-article"&gt;
  &lt;/a&gt;
  Related Article
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://remoteful.dev/blog/remote-work-mean-tips"&gt;What Does Remote Work Mean | 10 Tips for remote work for YOU&lt;/a&gt;&lt;/p&gt;

</description>
      <category>remote</category>
      <category>remotejobs</category>
      <category>jobs</category>
      <category>remotework</category>
    </item>
  </channel>
</rss>
