<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Coding the code versus coding the code that codes</title>
      <author>aldin / aлдин / الدين</author>
      <pubDate>Wed, 30 Jun 2021 07:13:04 +0000</pubDate>
      <link>https://dev.to/infobipdev/coding-the-code-versus-coding-the-code-that-codes-4m44</link>
      <guid>https://dev.to/infobipdev/coding-the-code-versus-coding-the-code-that-codes-4m44</guid>
      <description>&lt;p&gt;According to Tiobe &lt;a href="https://www.tiobe.com/tiobe-index/programming-languages-definition/"&gt;analysis&lt;/a&gt;, there are close to 300 programming languages today. Their analysis is a bit complex though. It rules out markup languages and frameworks from the equation, it also expects programming languages to have a certain number of Google search hits in order to include them, etc.&lt;/p&gt;

&lt;p&gt;About ⅔ of programming languages listed there, I've never even heard of. And mind you, I've coded anything in just a bit under two dozen of them. At the same time, there are about 100 code generators out there. Some of them support a significant number of those programming languages. Within the community, however, there are polarized views on when to go with generating as opposed to coding the whole thing manually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H6ROS7zg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phwnzdi0454vfhvrcech.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H6ROS7zg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phwnzdi0454vfhvrcech.png" alt="Crossroad, a dilemma. Should I go left or right?!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-dilemma"&gt;
  &lt;/a&gt;
  A dilemma
&lt;/h2&gt;

&lt;p&gt;Do you even have to pick one over the other? I'm a bit biased here - I do both. Some of it I code and some of it I find easier to generate and even more easy to maintain.&lt;/p&gt;

&lt;p&gt;Do I think one is better than the other?&lt;br&gt;
YES. And also NO.&lt;/p&gt;

&lt;p&gt;It's basically up to the person to decide how they want to approach a certain challenge. I'll get back to this later. If you stick until the end of this blog post, you'll see why we used and even built on top of the code generator. Hence the pun in the title. I know, hilarious. But for now, back to the basics.&lt;/p&gt;

&lt;p&gt;Here are some of the stronger arguments against using code generation tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It's an anti-pattern.&lt;/li&gt;
&lt;li&gt;Can reduce the performance.&lt;/li&gt;
&lt;li&gt;Not as clean, tidy, and fancy written as manually written code can be.&lt;/li&gt;
&lt;li&gt;Manually written code still does the same thing but better.&lt;/li&gt;
&lt;li&gt;You cannot really generate business logic.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you hear this, you might wonder why even bother using something that might reduce performance.&lt;/p&gt;

&lt;p&gt;Additionally, potentially cause a worse experience if, for example, we're creating the library which wraps around HTTP API. In my team in Infobip, we do exactly that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#challenge-at-hand"&gt;
  &lt;/a&gt;
  Challenge at hand
&lt;/h2&gt;

&lt;p&gt;You see, here in Infobip, my team is in charge of DevRel. To simplify, our main goal is to enhance the developer experience when using or better say &lt;a href="https://www.infobip.com/docs"&gt;integrating our platform&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are not familiar with Infobip, our platform is about omnichannel engagement. Our job is to help businesses of our clients and partners to communicate with their own clients while using any of the communication platforms we can provide.&lt;/p&gt;

&lt;p&gt;A few months back we were set a challenge to upgrade API client libraries for the company's complete product stack for a programming language of our choice, but which will continuously keep on adding additional features and programming languages.&lt;/p&gt;

&lt;p&gt;We needed to make a decision on how to tackle this. There were several options. Creating libraries for dozens of products and dealing with different programming languages wasn't easy. Upgrading existing ones at times can be even harder. A lot of questions popped up as well as potential red flags. How to scale it? How not to end up in never-ending library development in multiple, different, programming languages? How not to create a horrible piece of software if we go with code generation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ldRcFnHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rlvlpdmb5rcne5nviroh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ldRcFnHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rlvlpdmb5rcne5nviroh.png" alt="Random enthusiastic person coding, stepping up the game."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-up-the-game"&gt;
  &lt;/a&gt;
  Step up the game!
&lt;/h2&gt;

&lt;p&gt;Some code generation tools are configurable and programmable. You can do just about anything. For example, you are able to produce a complete set list of language-specific details or which library should you use to generate a certain functionality.&lt;/p&gt;

&lt;p&gt;But yes, more often than not, generated code does not look awesome. Now, why don't you write one piece of software and built on top of a certain code generator? And then you can programmatically refine the generated code.&lt;br&gt;
Let me introduce the OpenAPI.&lt;/p&gt;

&lt;p&gt;Long story short, OpenAPI Specification is an API description format for REST API. Basically, it's a file in which you can, by following certain standards, describe your entire API, authentication, and more. The cool part is, several code generation tools can read it, understand it, and translate it to a compilable, working project in one or more available programming languages. The tool we are using within my team is called OpenAPI Generator and we love it.&lt;/p&gt;

&lt;p&gt;What we did was we wrote a service that consumes this tool and builds on top of it to enhance the generated code. Yes, we wrote it manually. That service basically serves as a set of preprocessing and postprocessing steps around the configuration for code generation and extends the certain functionalities of the generator itself.&lt;/p&gt;

&lt;p&gt;So what that means in our case is that, among the rest, we integrated a linter for each of the programming languages we are generating the code for. Some linters simply give results that feel more natural and configuring the right one is of great importance. We defined an additional set of rules to make it look more natural and less generic to someone to integrate that library into its own project.&lt;/p&gt;

&lt;p&gt;When you think of it, we literally extended a code generation tool by writing our own set of rules on some things. Also, we've enriched the result of the code generation execution by both using the language-specific options within the generator and furthermore by applying a linter to it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-it-even-worth-it"&gt;
  &lt;/a&gt;
  Is it even worth it?
&lt;/h2&gt;

&lt;p&gt;You might ask:&lt;br&gt;
"Well, isn't this an overkill?"&lt;/p&gt;

&lt;p&gt;Or you might even go on and say:&lt;br&gt;
Even if you saved time on learning the specifics of certain programming languages, you still had to write the configuration for each and every one of those generations. You had to implement the service which is building on top of it, AND you had to test all that afterward and not simply just push it to the world to use it."&lt;/p&gt;

&lt;p&gt;If you look at it that way, then yes, it's an overkill. BUT!&lt;/p&gt;

&lt;p&gt;Let's say you manually write all the code for a single product - a set of API methods, by hand, for all the programming languages. And let's assume for the sake of the argument, that it takes exactly the same amount of time to create the release-ready product in both cases.&lt;br&gt;
Would you still consider using code generators as an overkill approach?&lt;/p&gt;

&lt;p&gt;If the answer was yes, well, I'd have to disagree. And I'm going to break it down as to why I disagree.&lt;/p&gt;

&lt;p&gt;In an ideal universe maybe, but just maybe, it would be safe to say that API will be built in such a way that no breaking changes will occur. Take an even more utopian scenario where the product team created the API endpoints in such a way that they cover all the aspects of its usage, all the use-cases ever needed, and that all the potential authentication processes are covert.&lt;/p&gt;

&lt;p&gt;That does not happen, like, ever.&lt;/p&gt;

&lt;p&gt;This means that for every single update you need to do, you will have to write code for every programming language you used in the initial release. Furthermore, this means that you will keep having to do it over and over again.&lt;/p&gt;

&lt;p&gt;And we only talked about one product written in several programming languages. In reality, we are not taking care of only one product. We're talking about multiple products developed by different teams.&lt;/p&gt;

&lt;p&gt;How would you handle that?&lt;/p&gt;

&lt;p&gt;And up until this moment we talked about the code, but there are so many more things that make a project complete.&lt;/p&gt;

&lt;p&gt;So if you have a similar use case like my team, I would be more inclined to say that an overkill would be manually coding over and over again all the things that need to be changed in every single programming language. Instead, in most cases, all we need to tweak after an initial release is that OpenAPI Specification. And it will use the same building blocks we prepared up until that point and do the heavy work for us.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kRWlQ_GG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlgycm82nxk30k5m8tij.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kRWlQ_GG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlgycm82nxk30k5m8tij.png" alt="Analytics, lots of data to process and understand prior to implementing stuff"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understand-your-challenge"&gt;
  &lt;/a&gt;
  Understand your challenge!
&lt;/h2&gt;

&lt;p&gt;I've tried to emphasize this at the very beginning. There isn't a deterministic answer as to which approach is better. Well, at least I don't see a deterministic answer.&lt;/p&gt;

&lt;p&gt;As with most of the things in the world of software, I find that it very much depends on what you are trying to achieve. And on which problem are you trying to solve.&lt;/p&gt;

&lt;p&gt;To be fair, most of us do use code generation to some extent every single day. If you're programming in a language like Java, using annotation libraries like Lombok per definition ends up with having parts of your code generated in the compile time. But whichever side you are leaning on, do what feels the best for you.&lt;/p&gt;

&lt;p&gt;When facing certain challenges, take your time. Try to get a bigger picture rather than trying to solve the issue instantly. It just might save you a ton of time later on.&lt;/p&gt;

</description>
      <category>api</category>
      <category>openapi</category>
      <category>infobip</category>
      <category>codegeneration</category>
    </item>
    <item>
      <title>My Top React Interview Questions</title>
      <author>Michael Hoffmann</author>
      <pubDate>Wed, 30 Jun 2021 07:01:51 +0000</pubDate>
      <link>https://dev.to/mokkapps/my-top-react-interview-questions-5hfb</link>
      <guid>https://dev.to/mokkapps/my-top-react-interview-questions-5hfb</guid>
      <description>&lt;p&gt;This article summarizes a list of React interview questions that I would ask candidates and that I get often asked in interviews.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents&lt;a href="#table-of-contents"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-what-is-react"&gt;1. What is React?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-what-are-the-advantages-of-react"&gt;2. What are the advantages of React?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-what-are-disadvantages-of-react"&gt;3. What are disadvantages of React?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-what-is-jsx"&gt;4. What is JSX?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-how-to-pass-data-between-components"&gt;5. How to pass data between components?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6-what-are-the-differences-between-functional-and-class-components"&gt;6. What are the differences between functional and class components?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#7-what-is-the-virtual-dom"&gt;7. What is the Virtual DOM?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#8-is-the-shadow-dom-the-same-as-the-virtual-dom"&gt;8. Is the Shadow DOM the same as the Virtual DOM?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#9-what-is-react-fiber"&gt;9. What is “React Fiber”?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#10-how-does-state-differ-from-props"&gt;10. How does state differ from props?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#11-what-are-the-differences-between-controlled-and-uncontrolled-components"&gt;11. What are the differences between controlled and uncontrolled components?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#12-what-are-the-different-lifecycle-methods-in-react"&gt;12. What are the different lifecycle methods in React?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#13-how-can-you-improve-your-react-apps-performance"&gt;13. How can you improve your React app’s performance?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#14-what-are-keys-in-react"&gt;14. What are keys in React?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#15-what-are-higher-order-components"&gt;15. What are Higher Order Components?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#16-what-are-error-boundaries"&gt;16. What are error boundaries?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#17-why-hooks-were-introduced"&gt;17. Why Hooks were introduced?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#18-what-is-the-purpose-of-useeffect-hook"&gt;18. What is the purpose of useEffect hook?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#19-what-are-synthetic-events-in-react"&gt;19. What are synthetic events in React?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#20-what-is-the-use-of-refs"&gt;20. What is the use of refs?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-what-is-react"&gt;
  &lt;/a&gt;
  1. What is React?&lt;a href="#1-what-is-react"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; is a “JavaScript library for building user interfaces” which was developed by Facebook in 2011.&lt;/p&gt;

&lt;p&gt;It’s the V in the MVC (Model - View -Controller), so it is rather an open-source UI library than a framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-what-are-the-advantages-of-react"&gt;
  &lt;/a&gt;
  2. What are the advantages of React?&lt;a href="#2-what-are-the-advantages-of-react"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Good performance: due to VDOM, see &lt;a href="https://mokkapps.de/blog/my-top-react-interview-questions/#7-what-is-the-virtual-dom"&gt;#17&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Easy to learn: with basic JavaScript knowledge you can start building applications. Frameworks like Angular require more knowledge about other technologies and patterns like RxJS, TypeScript, and Dependency Injection.&lt;/li&gt;
&lt;li&gt;One-way data flow: this flow is also called “parent to child” or “top to bottom” and prevents errors and facilitates debugging.&lt;/li&gt;
&lt;li&gt;Reusable components: Re-using React components in other parts of the code or even in different projects can be done with little or no changes.&lt;/li&gt;
&lt;li&gt;Huge community: The community supplies a ton of libraries that can be used to build React applications.&lt;/li&gt;
&lt;li&gt;It is very popular among developers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-what-are-the-disadvantages-of-react"&gt;
  &lt;/a&gt;
  3. What are the disadvantages of React?&lt;a href="#3-what-are-the-disadvantages-of-react"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;As React provides only the View part of the MVC model you mostly will rely on other technologies in your projects as well. Therefore, every React project might look quite different.&lt;/li&gt;
&lt;li&gt;Some people think that JSX is too difficult to grasp and too complex.&lt;/li&gt;
&lt;li&gt;Often poor documentation for React and its libraries.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-what-is-jsx"&gt;
  &lt;/a&gt;
  4. What is JSX?&lt;a href="#4-what-is-jsx"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;JSX (JavaScript XML) allows us to write HTML inside JavaScript. The &lt;a href="https://reactjs.org/docs/introducing-jsx.html"&gt;official docs&lt;/a&gt; describe it as “syntax extension to JavaScript”.&lt;/p&gt;

&lt;p&gt;React recommends using JSX, but it is also possible to create applications &lt;a href="https://reactjs.org/docs/react-without-jsx.html"&gt;without using JSX&lt;/a&gt; at all.&lt;/p&gt;

&lt;p&gt;A simple JSX example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;world&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-how-to-pass-data-between-components"&gt;
  &lt;/a&gt;
  5. How to pass data between components?&lt;a href="#5-how-to-pass-data-between-components"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Use props to pass data from parent to child.&lt;/li&gt;
&lt;li&gt;Use callbacks to pass data from child to parent.&lt;/li&gt;
&lt;li&gt;Use any of the following methods to pass data among siblings:

&lt;ul&gt;
&lt;li&gt;Integrating the methods mentioned above.&lt;/li&gt;
&lt;li&gt;Using &lt;a href="https://redux.js.org/"&gt;Redux&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Utilizing &lt;a href="https://reactjs.org/docs/context.html#api"&gt;React’s Context API&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#6-what-are-the-differences-between-functional-and-class-components"&gt;
  &lt;/a&gt;
  6. What are the differences between functional and class components?&lt;a href="#6-what-are-the-differences-between-functional-and-class-components"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/hooks-intro.html"&gt;Hooks&lt;/a&gt; were introduced in React 16.8. In previous versions, functional components were called stateless components and did not provide the same features as class components (e.g., accessing state). Hooks enable functional components to have the same features as class components. There are no plans to remove class components from React.&lt;/p&gt;

&lt;p&gt;So let’s take a look at the differences:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#declaration-amp-props"&gt;
  &lt;/a&gt;
  Declaration &amp;amp; Props&lt;a href="#declaration--props"&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#functional-component"&gt;
  &lt;/a&gt;
  Functional Component&lt;a href="#functional-component"&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Functional components are JavaScript functions and therefore can be declared using an arrow function or the &lt;code&gt;function&lt;/code&gt; keyword. Props are simply function arguments and can be directly used inside JSX:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Card&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;Title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Card&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#class-component"&gt;
  &lt;/a&gt;
  Class component&lt;a href="#class-component"&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Class components are declared using the ES6 &lt;code&gt;class&lt;/code&gt; keyword. Props need to be accessed using the &lt;code&gt;this&lt;/code&gt; keyword:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Card&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#handling-state"&gt;
  &lt;/a&gt;
  Handling state&lt;a href="#handling-state"&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#functional-components"&gt;
  &lt;/a&gt;
  Functional components&lt;a href="#functional-components"&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;In functional components we need to use the &lt;code&gt;useState&lt;/code&gt; hook to be able to handle state:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;increment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Increment&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#class-components"&gt;
  &lt;/a&gt;
  Class components&lt;a href="#class-components"&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;It’s not possible to use React Hooks inside class components, therefore state handling is done differently in a class component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;counter&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;increment&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prevState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;prevState&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Increment&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#7-what-is-the-virtual-dom"&gt;
  &lt;/a&gt;
  7. What is the Virtual DOM?&lt;a href="#7-what-is-the-virtual-dom"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://reactjs.org/docs/faq-internals.html#what-is-the-virtual-dom"&gt;Virtual DOM (VDOM)&lt;/a&gt; is a lightweight JavaScript object and it contains a copy of the real DOM.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Real DOM&lt;/th&gt;
&lt;th&gt;Virtual DOM&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Slow &amp;amp; expensive DOM manipulation&lt;/td&gt;
&lt;td&gt;Fast &amp;amp; inexpensive DOM manipulation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Allows direct updates from HTML&lt;/td&gt;
&lt;td&gt;It cannot be used to update HTML directly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Wastes too much memory&lt;/td&gt;
&lt;td&gt;Less memory consumption&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#8-is-the-shadow-dom-the-same-as-the-virtual-dom"&gt;
  &lt;/a&gt;
  8. Is the Shadow DOM the same as the Virtual DOM?&lt;a href="#8-is-the-shadow-dom-the-same-as-the-virtual-dom"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;No, they are different.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM"&gt;Shadow DOM&lt;/a&gt; is a browser technology designed primarily for scoping variables and CSS in web components.&lt;/p&gt;

&lt;p&gt;The virtual DOM is a concept implemented by libraries in JavaScript on top of browser APIs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-what-is-react-fiber"&gt;
  &lt;/a&gt;
  9. What is “React Fiber”?&lt;a href="#9-what-is-react-fiber"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Fiber is the new reconciliation engine in React 16.&lt;/p&gt;

&lt;p&gt;Its headline feature is incremental rendering: the ability to split rendering work into chunks and spread it out over multiple frames.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/acdlite/react-fiber-architecture"&gt;Read more&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-how-does-state-differ-from-props"&gt;
  &lt;/a&gt;
  10. How does state differ from props?&lt;a href="#10-how-does-state-differ-from-props"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Both props and state are plain JavaScript objects.&lt;/p&gt;

&lt;p&gt;Props (short for “properties”) is an object of arbitrary inputs that are passed to a component by its parent component.&lt;/p&gt;

&lt;p&gt;State are variables that are initialized and managed by the component and change over the lifetime of a specific instance of this component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kentcdodds.com/blog/props-vs-state"&gt;This article from Kent C. Dodds&lt;/a&gt; provides a more detailed explanation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-what-are-the-differences-between-controlled-and-uncontrolled-components"&gt;
  &lt;/a&gt;
  11. What are the differences between controlled and uncontrolled components?&lt;a href="#11-what-are-the-differences-between-controlled-and-uncontrolled-components"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The value of an input element in a controlled React component is controlled by React.&lt;/p&gt;

&lt;p&gt;The value of an input element in an uncontrolled React component is controlled by the DOM.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-what-are-the-different-lifecycle-methods-in-react"&gt;
  &lt;/a&gt;
  12. What are the different lifecycle methods in React?&lt;a href="#12-what-are-the-different-lifecycle-methods-in-react"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;React class components provide these lifecycle methods:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;componentDidMount()&lt;/code&gt;: Runs after the component output has been rendered to the DOM.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;componentDidUpdate()&lt;/code&gt;: Runs immediately after updating occurs.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;componentWillUnmount()&lt;/code&gt;: Runs after the component is unmounted from the DOM and is used to clear up the memory space.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There exist some other &lt;a href="https://reactjs.org/docs/react-component.html#legacy-lifecycle-methods"&gt;rarely used&lt;/a&gt; and &lt;a href="https://reactjs.org/docs/react-component.html#legacy-lifecycle-methods"&gt;legacy&lt;/a&gt; lifecycle methods.&lt;/p&gt;

&lt;p&gt;Hooks are used in functional components instead of the above-mentioned lifecycle methods. The Effect Hook &lt;code&gt;useEffect&lt;/code&gt; adds, for example, the ability to perform side effects and provides the same functionality as &lt;code&gt;componentDidMount&lt;/code&gt;, &lt;code&gt;componentDidUpdate&lt;/code&gt;, and &lt;code&gt;componentWillUnmount&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-how-can-you-improve-your-react-apps-performance"&gt;
  &lt;/a&gt;
  13. How can you improve your React app’s performance?&lt;a href="#13-how-can-you-improve-your-react-apps-performance"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;a href="https://reactjs.org/docs/react-api.html#reactpurecomponent"&gt;React.PureComponent&lt;/a&gt; which is a base class like &lt;code&gt;React.Component&lt;/code&gt; but it provides in some cases a performance boost if its &lt;code&gt;render()&lt;/code&gt; function renders the same result given the same props and state.&lt;/li&gt;
&lt;li&gt;Use &lt;a href="https://reactjs.org/docs/hooks-reference.html#usememo"&gt;useMemo Hook&lt;/a&gt; to memoize functions that perform expensive calculations on every render. It will only recompute the memoized value if one of the dependencies (that are passed to the Hook) has changed.&lt;/li&gt;
&lt;li&gt;State colocation is a process that moves the state as close to where you need it. Some React applications have a lot of unnecessary state in their parent component which makes the code harder to maintain and leads to a lot of unnecessary re-renders. &lt;a href="https://kentcdodds.com/blog/state-colocation-will-make-your-react-app-faster"&gt;This article&lt;/a&gt; provides a detailed explanation about state colocation.&lt;/li&gt;
&lt;li&gt;Lazy load your components to reduce the load time of your application. React &lt;a href="https://reactjs.org/docs/react-api.html#suspense"&gt;Suspense&lt;/a&gt; can be used to lazy load components.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#14-what-are-keys-in-react"&gt;
  &lt;/a&gt;
  14. What are keys in React?&lt;a href="#14-what-are-keys-in-react"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;React needs keys to be able to identify which elements were changed, added, or removed. Each item in an array needs to have a key that provides a stable identity.&lt;/p&gt;

&lt;p&gt;It’s not recommended to use indexes for keys if the order of items may change as it can have a negative impact on the performance and may cause state issues. React will use indexes as keys if you do not assign an explicit key to list items.&lt;/p&gt;

&lt;p&gt;Check out Robin Pokorny’s article for an &lt;a href="https://medium.com/@robinpokorny/index-as-a-key-is-an-anti-pattern-e0349aece318"&gt;in-depth explanation of the negative impacts of using an index as a key&lt;/a&gt;. Here is another &lt;a href="https://reactjs.org/docs/reconciliation.html#recursing-on-children"&gt;in-depth explanation about why keys are necessary&lt;/a&gt; if you’re interested in learning more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#15-what-are-higher-order-components"&gt;
  &lt;/a&gt;
  15. What are Higher Order Components?&lt;a href="#15-what-are-higher-order-components"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="https://reactjs.org/docs/higher-order-components.html#use-hocs-for-cross-cutting-concerns"&gt;higher-order component (HOC)&lt;/a&gt; is a function that takes a component and returns a new component.&lt;/p&gt;

&lt;p&gt;They are an advanced technique in React for reusing component logic and they are not part of the React API, per se. They are a pattern that emerges from React’s compositional nature:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;EnhancedComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;higherOrderComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;WrappedComponent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whereas a component transforms props into UI, a higher-order component transforms a component into another component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#16-what-are-error-boundaries"&gt;
  &lt;/a&gt;
  16. What are error boundaries?&lt;a href="#16-what-are-error-boundaries"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;React 16 introduced a new concept of an “error boundary”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/error-boundaries.html#gatsby-focus-wrapper"&gt;Error boundaries&lt;/a&gt; are React components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of the component tree that crashed. Error boundaries catch errors during rendering, in lifecycle methods, and in constructors of the whole tree below them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#17-why-hooks-were-introduced"&gt;
  &lt;/a&gt;
  17. Why Hooks were introduced?&lt;a href="#17-why-hooks-were-introduced"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Hooks solve a wide variety of seemingly unconnected problems in React that were encountered by Facebook over five years of writing and maintaining tens of thousands of components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hooks allow you to reuse stateful logic without changing your component hierarchy.&lt;/li&gt;
&lt;li&gt;Hooks let you split one component into smaller functions based on what pieces are related (such as setting up a subscription or fetching data).&lt;/li&gt;
&lt;li&gt;Hooks let you use more of React’s features without classes.&lt;/li&gt;
&lt;li&gt;It removed the complexity of dealing with the &lt;code&gt;this&lt;/code&gt; keyword inside class components.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/hooks-intro.html#motivation"&gt;Read more&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#18-what-is-the-purpose-of-useeffect-hook"&gt;
  &lt;/a&gt;
  18. What is the purpose of useEffect hook?&lt;a href="#18-what-is-the-purpose-of-useeffect-hook"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://reactjs.org/docs/hooks-reference.html#useeffect"&gt;Effect hook&lt;/a&gt; lets us perform side effects in functional components. It helps us to avoid redundant code in different lifecycle methods of a class component. It helps to group related code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#19-what-are-synthetic-events-in-react"&gt;
  &lt;/a&gt;
  19. What are synthetic events in React?&lt;a href="#19-what-are-synthetic-events-in-react"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/events.html"&gt;SyntheticEvent&lt;/a&gt; is a cross-browser wrapper around the browser’s native event. It has the same API as the browser’s native event, including &lt;code&gt;stopPropagation()&lt;/code&gt; and `preventDefault(), except the events work identically across all browsers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#20-what-is-the-use-of-refs"&gt;
  &lt;/a&gt;
  20. What is the use of refs?&lt;a href="#20-what-is-the-use-of-refs"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="https://reactjs.org/docs/glossary.html#refs"&gt;Ref&lt;/a&gt; is a special attribute that can be attached to any component. It can be an object created by &lt;code&gt;React.createRef()&lt;/code&gt;, a callback function or a string (in legacy API).&lt;/p&gt;

&lt;p&gt;To get direct access to a DOM element or component instance you can use ref attribute as a callback function. The function receives the underlying DOM element or class instance (depending on the type of element) as its argument.&lt;/p&gt;

&lt;p&gt;In most cases, refs should be used sparingly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion&lt;a href="#conclusion"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;I hope this list of React interview questions will help you to get your next React position. Leave me a comment if you know any other important React interview questions.&lt;/p&gt;

&lt;p&gt;If you liked this article, follow me on &lt;a href="https://twitter.com/mokkapps"&gt;Twitter&lt;/a&gt; to get notified about new blog posts and more content from me.&lt;/p&gt;

&lt;p&gt;If you are looking for more interview questions you should take a look at this &lt;a href="https://github.com/sudheerj/reactjs-interview-questions"&gt;list of top 500 React interview questions &amp;amp; answers&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>interview</category>
      <category>frontend</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Create a robust server using Auto Scaling groups and Load Balancers- AWS Hands On</title>
      <author>Ajit Singh</author>
      <pubDate>Wed, 30 Jun 2021 06:36:07 +0000</pubDate>
      <link>https://dev.to/this-is-learning/create-a-robust-server-using-auto-scaling-groups-and-load-balancers-aws-hands-on-1308</link>
      <guid>https://dev.to/this-is-learning/create-a-robust-server-using-auto-scaling-groups-and-load-balancers-aws-hands-on-1308</guid>
      <description>&lt;p&gt;Image taken from &lt;a href="https://stackoverflow.com/questions/13956653/aws-ami-multiple-instances"&gt;stackoverflow.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we have all the tools to create a robust server. In this exercise we will create a server that can auto scale, be load balanced and can handle instance failures according to requirements.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To do this create a load balancer as we did in last &lt;a href="https://dev.to/this-is-learning/setup-load-balancer-on-aws-elb-hands-on-1f9p"&gt;hands on&lt;/a&gt; but don't add any instance to it or if you are using the previous exercise load balancer terminate those instances&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go to Auto Scaling Groups under auto scaling in your EC2 instance dashboard. Click on Create Auto Scaling Group.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EBMvQC6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ryubs9sk11e5xhs0prc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EBMvQC6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ryubs9sk11e5xhs0prc.png" alt="auto-scaling-1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fill the auto scaling group name and select a launch template of you have one if you don't have one select create new launch template. This launch template is a template which will be used to create our new EC2 instances for auto scaling.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4pc4_w_q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qm3qk5wljrfaay7toew2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4pc4_w_q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qm3qk5wljrfaay7toew2.png" alt="auto-scaling-2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Select a name and description for our template
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KjHgb07A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nlxyszjld05nso4md8dg.png" alt="auto-scaling-3"&gt;
&lt;/li&gt;
&lt;li&gt;Select the AMI for which you want this template. if you don't know select Amazon Linux 2 AMI (HVM), SSD Volume Type for the purpose of this tutorial this should be the first option&lt;/li&gt;
&lt;li&gt;Select the instance type as t2.micro (free tier eligible)
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zUujeTu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfde9sr25ls843o5x035.png" alt="auto-scaling-5"&gt;
&lt;/li&gt;
&lt;li&gt;A key pair name for ssh login. You can select one we created while creating an ec2 instance.&lt;/li&gt;
&lt;li&gt;Let network settings be VPC lets not get into what this is for the purpose of this tutorial&lt;/li&gt;
&lt;li&gt;Select a security group. Select the same one that we select while creating our EC2 instances&lt;/li&gt;
&lt;li&gt;Then there is storage, tags, network interfaces no need to touch them.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BRd2a6MI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bsyfhyg4ykhw874bi6yj.png" alt="auto-scaling-4"&gt;
&lt;/li&gt;
&lt;li&gt;Open Additional details and in user data paste the following script and click on create new launch template
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# Use this for your user data (script from top to bottom)&lt;/span&gt;
&lt;span class="c"&gt;# install httpd (Linux 2 version)&lt;/span&gt;
yum update &lt;span class="nt"&gt;-y&lt;/span&gt;
yum &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; httpd
systemctl start httpd
systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;httpd
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;h1&amp;gt;Hello World from &lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;hostname&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/h1&amp;gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /var/www   /html/index.html

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g3Gcyk7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0r480d7nlzxf9ep2npr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g3Gcyk7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0r480d7nlzxf9ep2npr.png" alt="auto-scaling-6"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O4EYSlZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cxv4ievrf90nydl7ec01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O4EYSlZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cxv4ievrf90nydl7ec01.png" alt="auto-scaling-7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Go to your old tab and click refresh on right side of launch template dropdown. You will see your launch template there select your template in my case its &lt;code&gt;demo-template&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GXjqTj-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rp6xdgqaxrvesjda1wz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GXjqTj-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rp6xdgqaxrvesjda1wz.png" alt="auto-scaling-8"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now you will see configure settings screen which you can select that all your instances can adhere to launch template or you can mix and match them with spot or other instances I think that will be complex for now. So lets adhere to launch template&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FwFvCjkb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3e7p4d0h3s6i5nm90c8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FwFvCjkb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3e7p4d0h3s6i5nm90c8.png" alt="auto-scaling-9"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let the VPC remain same. Select all the subnets in your region. So that we can use multiple availability zones in our region. Click next&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aInQN81d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iq4hfeeh464o491u7gbu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aInQN81d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iq4hfeeh464o491u7gbu.png" alt="auto-scaling-10"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next is load balancing. Select &lt;code&gt;Attach to an existing load balancer&lt;/code&gt;. Select a target group you created while creating the load balancer. Select ELB health checks it checks if the underlying structure is working correctly. If you want to enable cloud watch logs. Select additional settings monitoring else click next. I don't need cloudwatch logs so I left it unchecked.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kFQcZORc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo0gorvaqb3qrpdq0dvp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kFQcZORc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo0gorvaqb3qrpdq0dvp.png" alt="auto-scaling-11"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next it is the most important part we select our min, preferred and max instances.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OpAyui3v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yc5yjo66hl01wevr9v84.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OpAyui3v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yc5yjo66hl01wevr9v84.png" alt="auto-scaling-12"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next we select the auto scaling policy as our needs for CPU utilization of each instance, requests etc. Configure it according to needs. Click on next.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_j-AXa85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zahj88vz2aqw98jem6l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_j-AXa85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zahj88vz2aqw98jem6l.png" alt="auto-scaling-13"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next we can add notifications on scale in and out but we will study about it later. For now remove it and click next.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rBHzSSat--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b29qnwwb5vfr02ruad0h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rBHzSSat--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b29qnwwb5vfr02ruad0h.png" alt="auto-scaling-14"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can add tags to better identify our Auto scaling Group and instances associated with it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AL4P4wog--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n197dtvkf49by7d2823e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AL4P4wog--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n197dtvkf49by7d2823e.png" alt="auto-scaling-15"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click next review that everything is set correctly and click &lt;code&gt;Create Auto Scaling Group&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Chg1kHTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9krnnx447agv7m9jvof0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Chg1kHTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9krnnx447agv7m9jvof0.png" alt="auto-scaling-16"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your auto scaling group is created.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2dTU2QGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhtilh97hspu4sh261bs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2dTU2QGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhtilh97hspu4sh261bs.png" alt="auto-scaling-17"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To check it go to instances. You will see two instances with the name that we added in tags.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mm1uXIIH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0fabn6lu38ahk17lbr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mm1uXIIH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0fabn6lu38ahk17lbr3.png" alt="auto-scaaling-18"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next go to the load balancer DNS to see if the instances work.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y23ZHRLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dt44h5o5s8v6qaynguq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y23ZHRLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dt44h5o5s8v6qaynguq.png" alt="auto-scaling-20"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w3H9DOvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqh9xql0mfe3qwileuyq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w3H9DOvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqh9xql0mfe3qwileuyq.png" alt="auto-scaling-19"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lets see what happens if we terminate on of our instances.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c2p9gvZj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8uza4fjjxj2o2xy95v7t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c2p9gvZj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8uza4fjjxj2o2xy95v7t.png" alt="auto-scaling-21"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go to auto scaling again and in a few seconds once you select instance management. We will see that it shows one healthy instance.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZYOWKqq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5a91dw68rws697w5gxj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZYOWKqq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5a91dw68rws697w5gxj.png" alt="UTO-SCALING-22"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wait for a few minutes AWS will detect the unhealthy instance and launch a new instance in its place.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OIiHUx_A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyuwv0nej1tu3acqrjbj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OIiHUx_A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyuwv0nej1tu3acqrjbj.png" alt="auto-scaling-23"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can also check what happens in the activity tab. You will see it launches two instances first and then detects that there is a terminated instance and launches a new instance&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Teue_CU_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gtgao1mv0mzqcwcz3wx6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Teue_CU_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gtgao1mv0mzqcwcz3wx6.png" alt="auto-scaling-24"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now to deploy an actual application you just have to expose the API over port 80 in deployment for HTTP or over port 443 for HTTPS in your instance and you have to setup SSL. Suggest a small opensource application if you want to see it deployed other wise I'm working on a small python Django project it is a work in progress we will deploy than in 20-30 days until that we have to wait. Until that this is as far as we go. &lt;/p&gt;

&lt;p&gt;In the next tutorial we will see how to setup EC2 instances AMI so that we have pre configured EC2 instances on our disposal.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloudskills</category>
      <category>cloud</category>
    </item>
    <item>
      <title>GitHub Bots for every open-source project</title>
      <author>Pragati Verma</author>
      <pubDate>Wed, 30 Jun 2021 06:25:33 +0000</pubDate>
      <link>https://dev.to/pragativerma18/github-bots-for-every-open-source-project-47hl</link>
      <guid>https://dev.to/pragativerma18/github-bots-for-every-open-source-project-47hl</guid>
      <description>&lt;p&gt;With the explosive growth and expansion of open-source projects, the project maintainers have to be always on their feet. The longer an open-source project thrives, the more the number of issues and pull requests. And keeping track of new contributions becomes more difficult, which might result in losing out on important bug reports and feature requests. Well, no need to worry, we have bots to our rescue! &lt;/p&gt;

&lt;p&gt;Automation could be the key here, bots can assist in welcoming new contributors, informing them of what to expect, where to look for important information, and keeping track of their contributions. Outsourcing this labor to bots can relieve the burden on maintainers, allowing them to devote their time to more important tasks, and also helping to shape better culture and community ambiance around these open-source projects.&lt;/p&gt;

&lt;p&gt;Let's dive in and explore some awesome GitHub bots/apps that can ease the maintainers' burden by enabling and empowering them to extend their workflows and customizing the way GitHub functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction-to-probot"&gt;
  &lt;/a&gt;
  Introduction to Probot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://probot.github.io/"&gt;Probot&lt;/a&gt; is a Node.js framework used to create GitHub Apps. Probot monitors webhook events in a repository or organization, such as commenting on a pull request, creating a new issue, submitting a pull request, reviewing code, and so on. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LBimeikA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624989922622/2BxBCbeLN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LBimeikA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624989922622/2BxBCbeLN.png" alt="Probot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Although you can make your own &lt;a href="https://probot.github.io/docs/"&gt;GitHub Bots&lt;/a&gt;, however, for this post, we'll see the bots already existing on the Probot community platform, so no need to re-invent the wheel all over again.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#probot-apps-for-welcoming-and-inclusivity"&gt;
  &lt;/a&gt;
  Probot apps for welcoming and inclusivity
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#welcome"&gt;
  &lt;/a&gt;
  Welcome
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://probot.github.io/apps/welcome/"&gt;Welcome&lt;/a&gt; is a simple and easy-to-use bot to welcome new contributors to the repository using comments defined by the maintainers. It is a combination of three plugins - &lt;a href="https://github.com/behaviorbot/new-issue-welcome"&gt;new-issue-welcome&lt;/a&gt;, &lt;a href="https://github.com/behaviorbot/new-pr-welcome"&gt;new-pr-welcome&lt;/a&gt;, and &lt;a href="https://github.com/behaviorbot/first-pr-merge"&gt;first-pr-merge&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ozI8Syxa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624989975187/USt3YS59D.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ozI8Syxa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624989975187/USt3YS59D.png" alt="Welcome Bot in Action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This bot can be configured and activated by creating a &lt;code&gt;.github/config.yml&lt;/code&gt; file to declare the contents of the comments. These comments can include important information like project norms, how long do the contributor can expect to wait before receiving a response, or just a generous welcome message with gifs or images, conveying warmth, enthusiasm, and gratitude.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#all-contributors-bot"&gt;
  &lt;/a&gt;
  All Contributors Bot
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://probot.github.io/apps/all-contributors/"&gt;All Contributors Bot&lt;/a&gt; helps you recognize all the contributors, not just the ones who pushed code but also the ones who contributed to designs, documentation, etc. It uses an &lt;a href="https://allcontributors.org/docs/en/emoji-key"&gt;emoji key&lt;/a&gt; to determine the contribution type. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KLaIc_em--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624990814543/-9Dawpvtu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KLaIc_em--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624990814543/-9Dawpvtu.png" alt="contributors-table-small.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It can be simply used to add a contributor with comments on issues or pull requests, e.g. &lt;code&gt;@all-contributors please add @tbenning for design&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rp86-624--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624990820361/Qp1IB7aas6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rp86-624--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624990820361/Qp1IB7aas6.png" alt="add-contributors.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#probot-apps-for-enforcing-community-norms"&gt;
  &lt;/a&gt;
  Probot apps for enforcing community norms
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#stale-bot"&gt;
  &lt;/a&gt;
  Stale Bot
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://probot.github.io/apps/stale/"&gt;Stale Bot&lt;/a&gt; helps in closing down stale issues and pull requests that have been open for a long time and have seen no particular action, hence, cutting down on the accumulation of issues and pull requests on the project. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RhBCp6OI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624991226159/F6sAh9HKf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RhBCp6OI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624991226159/F6sAh9HKf.png" alt="Stale Bot in Action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After a period of inactivity, an issue will be labeled as stale, and a comment may be posted to notify contributors that the Issue or Pull Request will be closed. If the Issue or Pull Request is updated, or if someone comments on it, the stale label is removed, and nothing else is done until it becomes stale again. If there is no further activity, the Issue or Pull Request will be closed automatically with an optional comment. It can be configured and enabled by adding a &lt;code&gt;.github/stale.yml&lt;/code&gt; in the default branch of the repository.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#auto-assign-bot"&gt;
  &lt;/a&gt;
  Auto Assign Bot
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://probot.github.io/apps/auto-assign/"&gt;Auto Assign&lt;/a&gt; allows you to randomly assign individual reviewers or review groups to a pull request when opened. It has to be installed and then configured using the &lt;code&gt;.github/auto_assign.yml&lt;/code&gt; file on the default branch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Cb7B8Xz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624991533164/zEHABjIqz.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Cb7B8Xz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624991533164/zEHABjIqz.gif" alt="demo.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This helps in pointing out the responsible person for the code reviews, thus, helping in getting a quick review and response. You can also configure skip keywords such as WIP (work in progress) so that reviewers only get assigned on pull requests that are ready so that they don't have to bother unnecessarily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#probot-apps-for-general-utility"&gt;
  &lt;/a&gt;
  Probot apps for general utility
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#unfurl-links"&gt;
  &lt;/a&gt;
  Unfurl Links
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://probot.github.io/apps/unfurl-links/"&gt;Unfurl Links&lt;/a&gt; is a simple utility bot that helps by adding context to the links shared in the discussions. This bot comes into action whenever it detects a link in the comments and then adds more information to the bottom of the comment about the link.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LiLAU0J_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624992556810/_F9Cab5WG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LiLAU0J_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624992556810/_F9Cab5WG.png" alt="unfurl"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gitpod"&gt;
  &lt;/a&gt;
  Gitpod
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.gitpod.io/"&gt;Gitpod&lt;/a&gt; is an online IDE for GitHub that can be launched with a single click. It can be launched by prefixing any GitHub URL with &lt;code&gt;gitpod.io#&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DCVJYYHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624992886005/CxK1ZnDq7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DCVJYYHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624992886005/CxK1ZnDq7.png" alt="cr-gitpod-starter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Such links are generated by &lt;a href="https://probot.github.io/apps/gitpod/"&gt;Gitpod Bot&lt;/a&gt; and posted as comments on issues and pull requests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OTCVqADv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624992907612/tSFWYtI1V.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OTCVqADv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624992907612/tSFWYtI1V.png" alt="gitpod"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It can be enabled by creating &lt;code&gt;.github/gitpod.yml&lt;/code&gt; in the default branch, which can also be used to add customizations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reminders"&gt;
  &lt;/a&gt;
  Reminders
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://probot.github.io/apps/reminders/"&gt;Reminders&lt;/a&gt; can be used to set reminders on issues and pull requests that you want to ensure a revisit to. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NhbLC6ap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624993260462/3FAiRRBDz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NhbLC6ap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624993260462/3FAiRRBDz.png" alt="reminder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To set a reminder on any comment box on GitHub, use the &lt;code&gt;/remind&lt;/code&gt; command, and you'll receive a ping when the reminder is due. The usual syntax goes like - &lt;code&gt;/remind me [what] [when]&lt;/code&gt;, for example - &lt;code&gt;/remind me to deploy on Oct 10&lt;/code&gt; or &lt;code&gt;/remind me next Monday to review the requirements&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In a nutshell, being an open-source project maintainer can be tough, especially when it's not your day job. However, Probot can be a boon for such situations, as it allows them to get time-saving automation up and running very quickly. As the saying goes:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Most communities just happen; the best are planned.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's all for this article. I hope this has been a helpful and insightful read. Please comment with your valuable suggestions and feedback. Also, let me know your favorite GitHub bots or apps that you may have used.&lt;/p&gt;

&lt;p&gt;In case you want to connect with me, follow the links below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/pragativerma18/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/PragatiVerma18/"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/pragati_verma18"&gt;Twitter&lt;/a&gt; | &lt;a href="https://medium.com/@itispragativerma"&gt;Medium&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>opensource</category>
      <category>webdev</category>
      <category>github</category>
    </item>
    <item>
      <title>I'm not an expert; I'm learning</title>
      <author>Chris Bongers</author>
      <pubDate>Wed, 30 Jun 2021 05:56:28 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/i-m-not-an-expert-i-m-learning-1pod</link>
      <guid>https://dev.to/dailydevtips1/i-m-not-an-expert-i-m-learning-1pod</guid>
      <description>&lt;p&gt;Although I've been a developer for most of my life, I can't say I'm an expert.&lt;/p&gt;

&lt;p&gt;I do have some expertise, but as many things in Tech, they keep evolving, changing, and improving.&lt;br&gt;
The same has to apply to my expertise.&lt;/p&gt;

&lt;p&gt;Hence today's topic, being a software developer is a life-long commitment to learning.&lt;/p&gt;

&lt;p&gt;In some recent posts, I've talked about &lt;a href="https://daily-dev-tips.com/tags/python/"&gt;Python&lt;/a&gt; not because I'm an expert, but because I want to learn about it.&lt;br&gt;
And my way of learning includes writing about it.&lt;/p&gt;

&lt;p&gt;In those cases, I love it when people point out other use-cases or alternatives to the examples I sketch.&lt;br&gt;
This doesn't mean my learning is wrong, but there might be room for improvement.&lt;/p&gt;

&lt;p&gt;And this, in return, makes one a better developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#public-learning"&gt;
  &lt;/a&gt;
  Public learning
&lt;/h2&gt;

&lt;p&gt;You might call this approach public learning, and it doesn't work for everyone.&lt;/p&gt;

&lt;p&gt;However, some aspect that might convince you to give public learning a try:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Feedback by peers&lt;/li&gt;
&lt;li&gt;Feedback by product owners&lt;/li&gt;
&lt;li&gt;Help from community members&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For me, those kinds of feedback you typically won't get in school or even in companies.&lt;br&gt;
So pro for getting community help.&lt;/p&gt;

&lt;p&gt;But how does one go about this type of learning?&lt;br&gt;
Some ideas to get you started:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Contribute to open source issues&lt;/li&gt;
&lt;li&gt;Write down some learnings on a blog&lt;/li&gt;
&lt;li&gt;Create a Twitter thread&lt;/li&gt;
&lt;li&gt;Open discussions on Reddit/StackOverflow/etc.&lt;/li&gt;
&lt;li&gt;Participate in meetups/events&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And like mentioned before, don't expect to be the expert, but the learner. It's ok to make mistakes and have people guide you in the right direction.&lt;/p&gt;

&lt;p&gt;If everyone knew how to do everything, it would be a very boring world.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#provide-feedback-and-questions"&gt;
  &lt;/a&gt;
  Provide feedback and questions
&lt;/h2&gt;

&lt;p&gt;You might have heard me say this before: "Ask questions," and even here, it's valuable.&lt;/p&gt;

&lt;p&gt;You might often see a tweet or discussion by me asking for feedback on a certain language, idea, or concept.&lt;/p&gt;

&lt;p&gt;This is a valid way to get in touch with people who have done something like this before.&lt;/p&gt;

&lt;p&gt;With the information from these people, you will complete your idea on this particular topic and learn from it.&lt;/p&gt;

&lt;p&gt;Don't be afraid to ask something you're not sure about, or you question why it's done in that way.&lt;br&gt;
I love it when my PR's are being reviewed and someone questions why I use method x over method y.&lt;br&gt;
Often that's a super good question too, which I either can answer well because of z. Or I refactor it because it didn't have a particular choice to it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;To conclude this article, in the upcoming week, ask yourself am I learning? If so, make that choice to ask/write/speak about that learning!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
    </item>
    <item>
      <title>Five++ cool Python snippets (Part - 2)</title>
      <author>Apoorv Tyagi</author>
      <pubDate>Wed, 30 Jun 2021 05:44:49 +0000</pubDate>
      <link>https://dev.to/apoorvtyagi/five-cool-python-snippets-part-2-k9o</link>
      <guid>https://dev.to/apoorvtyagi/five-cool-python-snippets-part-2-k9o</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction 👋
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt; is a beautifully designed high-level interpreted programming language that provides us with many features.&lt;/p&gt;

&lt;p&gt;This is a gentle guide to some of those Python features that you probably might not be aware of or didn't know about that specific use-case which you'll see later in this blog.&lt;/p&gt;

&lt;p&gt;So in continuation of my &lt;a href="https://dev.to/apoorvtyagi/five-cool-python-snippets-that-will-blow-your-mind-hfe"&gt;previous article&lt;/a&gt;, here I am sharing another 5++ tips and tricks to help you write an elegant Python code in your competitive programming journey or in general as well! 😉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-lambda-function"&gt;
  &lt;/a&gt;
  1. Lambda Function
&lt;/h2&gt;

&lt;p&gt;A lambda function is a small anonymous function. &lt;strong&gt;You can use "lambda" expression to sort a nested array by the second element&lt;/strong&gt;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt; arr_list = [[1, 4], [3, 3], [5, 7]]
&amp;gt;&amp;gt; sorted_list = arr_list.sort(arr_list , key=lambda x: x[1])
&amp;gt;&amp;gt; sorted_list 
[[1, 4], [3, 3], [5, 7]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;🔗&lt;a href="https://twitter.com/apoorv__tyagi/status/1356946442573725696"&gt;Link To Tweet&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-counter"&gt;
  &lt;/a&gt;
  2. Counter
&lt;/h2&gt;

&lt;p&gt;Counter class is a special type of object data-set provided with the collections module in Python3.&lt;/p&gt;

&lt;p&gt;Let's say we want an 𝐮𝐧𝐨𝐫𝐝𝐞𝐫𝐞𝐝 collection where elements are stored as 𝐝𝐢𝐜𝐭𝐢𝐨𝐧𝐚𝐫𝐲 𝐤𝐞𝐲𝐬 &amp;amp; their counts are stored as 𝐝𝐢𝐜𝐭𝐢𝐨𝐧𝐚𝐫𝐲 𝐯𝐚𝐥𝐮𝐞𝐬&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import collections

&amp;gt;&amp;gt; A = collections.Counter([1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 6, 7])
&amp;gt;&amp;gt; A
Counter({3: 4, 1: 2, 2: 2, 4: 1, 5: 1, 6: 1, 7: 1})
&amp;gt;&amp;gt; A.most_common(1)
[(3, 4)]
&amp;gt;&amp;gt;A.most_common(3)
[(3,4), (1, 2), (2, 2)]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;🔗&lt;a href="https://twitter.com/apoorv__tyagi/status/1355167637660164097"&gt;Link To Tweet&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-merge-2-dictionaries"&gt;
  &lt;/a&gt;
  3. Merge 2 Dictionaries
&lt;/h2&gt;

&lt;p&gt;Python 3.9 introduces &lt;strong&gt;Dictionary union (|)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It will return a new dictionary consisting of the left operand merged with the right operand. If a key appears in both operands, the last-seen value (i.e., from the right-hand operand) is selected.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt; d1 = {'a': 10, 'b': 5, 'c': 3}
&amp;gt;&amp;gt; d2 = {'d':6, 'c': 4, 'b': 8}
&amp;gt;&amp;gt; d1 | d2
{'a': 10, 'b': 8, 'c': 4, 'd': 6}
&amp;gt;&amp;gt; d2 | d1
{'d': 6, 'c': 3, 'b': 5, 'a': 10}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;🔗&lt;a href="https://twitter.com/apoorv__tyagi/status/1343177309323464705"&gt;Link To Tweet&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-special-strip"&gt;
  &lt;/a&gt;
  4. Special Strip
&lt;/h2&gt;

&lt;p&gt;Can you guess what will be the output of the following python code -&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; "three cool features in Python".strip(" Python")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Well, strip() only remove the substring " Python" from the beginning or the end but the way it does it is quite peculiar&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It removes the individual characters " ", "P", "y", "t", "h", "o", "n" instead of checking the whole "Python" as a word&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that it even considers spaces while removing characters and It is also &lt;strong&gt;case sensitive&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;🔗&lt;a href="https://twitter.com/apoorv__tyagi/status/1350057647672872961"&gt;Link To Tweet&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-gt-"&gt;
  &lt;/a&gt;
  5. [] + [] -&amp;gt; {}
&lt;/h2&gt;

&lt;p&gt;Ever wanted to form a dictionary out of two lists??&lt;/p&gt;

&lt;p&gt;In Python🐍 it is super easy&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There's a zip() function that takes several iterable objects and returns a list of tuples&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Each tuple groups the elements of the input objects by their positional index&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; x = ['a', 'b', 'c']
&amp;gt;&amp;gt;&amp;gt; y = [1, 2, 3]
&amp;gt;&amp;gt;&amp;gt; dict(zip(x, y))
{'a': 1, 'b': 2, 'c': 3}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;You can even use it when you want to transpose a 2-D matrix, like this ⬇&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; mat = [[1, 2, 3], [4, 5, 6]]
&amp;gt;&amp;gt;&amp;gt; list(zip(*mat))
[(1, 4), (2, 5), (3, 6)]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;🔗&lt;a href="https://twitter.com/apoorv__tyagi/status/1323254708832628736"&gt;Link To Tweet&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-sliding-window"&gt;
  &lt;/a&gt;
  5++.  Sliding Window
&lt;/h2&gt;

&lt;p&gt;When I was doing competitive programming, I saw a lot of questions involving the &lt;a href="https://leetcode.com/tag/sliding-window/"&gt;sliding window problem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In C++ it was a little hectic, But in python, you can do it with just a few lines of code -&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; from itertools import islice
&amp;gt;&amp;gt;&amp;gt;def slide(list_name, window_size):
...           z = islice(list_name, i, None) for i in range(windw_size)
...           return zip(*z)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Here's the sample input and output response ⬇&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; list(slide([1, 2, 3, 4, 5, 6, 7], 3))
[(1, 2, 3), (2, 3, 4), (3, 4, 5), (4, 5, 6), (5, 6, 7)]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;🔗&lt;a href="https://twitter.com/apoorv__tyagi/status/1334200547826573312"&gt;Link To Tweet&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up 🏁
&lt;/h2&gt;

&lt;p&gt;So those were the 5++ cool quirks of python. I hope you liked them and learned something new.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#starting-out-in-web-development"&gt;
  &lt;/a&gt;
  Starting out in web development?? 💻
&lt;/h3&gt;

&lt;p&gt;Checkout ▶ &lt;a href="https://gumroad.com/a/316675187"&gt;HTML To React: The Ultimate Guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This ebook is a comprehensive guide that teaches you &lt;strong&gt;everything you need to know to be a web developer through a ton of easy-to-understand examples and proven roadmaps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It contains 👇&lt;/p&gt;

&lt;p&gt;✅  Straight to the point explanations&lt;/p&gt;

&lt;p&gt;✅  Simple code examples&lt;/p&gt;

&lt;p&gt;✅  50+ Interesting project ideas&lt;/p&gt;

&lt;p&gt;✅  3 Checklists of secret resources&lt;/p&gt;

&lt;p&gt;✅  A Bonus Interview prep&lt;/p&gt;

&lt;p&gt;You can even check out &lt;a href="https://drive.google.com/drive/u/0/folders/1GJECqmBUbOwgg5eQvGlMwHcDShqxKISJ"&gt;a free sample from this book&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and here's the &lt;a href="https://gumroad.com/a/316675187"&gt;link&lt;/a&gt; with 60% off on the original price on the complete book set ⬇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gumroad.com/a/316675187"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GvQd_5ED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618289289910/D--w2qaO3h.png" alt="eBook.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>computerscience</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Always the Buyer</title>
      <author>Sandor Dargo</author>
      <pubDate>Wed, 30 Jun 2021 05:37:29 +0000</pubDate>
      <link>https://dev.to/sandordargo/always-the-buyer-2ifp</link>
      <guid>https://dev.to/sandordargo/always-the-buyer-2ifp</guid>
      <description>&lt;p&gt;&lt;a href="https://resources.strategiccoach.com/quarterly-books/always-be-the-buyer"&gt;Always the Buyer&lt;/a&gt; is the title of another free e-book of Dan Sullivan (I recently reviewed &lt;a href="https://devreads.sandordargo.com/4c-formula-by-dan-sullivan/"&gt;The 4C's formula&lt;/a&gt;). But this article now is not a book review. I haven't read the book - yet.&lt;/p&gt;

&lt;p&gt;Benjamin P Hardy, the author of &lt;a href="https://devreads.sandordargo.com/personality-is-not-permanent/"&gt;Personality Isn't Permanent&lt;/a&gt; shared a &lt;a href="https://www.youtube.com/watch?v=2zghpVWfvXU"&gt;video&lt;/a&gt; in which he talks about the main idea of the book and it made me think.&lt;/p&gt;

&lt;p&gt;More than that, it really resonated with me.&lt;/p&gt;

&lt;p&gt;But, Sandor, what's the main idea?&lt;/p&gt;

&lt;p&gt;You should always be the buyer, haven't I written?! The buyer makes the decision. The buyer has the most important control over the course of action. The buyer can reject the seller. &lt;/p&gt;

&lt;p&gt;The seller tries to sell something, and the buyer can determine if he wants it or not. The buyer can choose among several sellers and reject all the others.&lt;/p&gt;

&lt;p&gt;The example used by Hardy was about the purchase of a car. As a buyer, you got to choose among many different cars, but as a seller, you can get easily rejected. Generally, as a seller, you would sell your car to the first person who pays the price, but as a buyer, you usually check out a lot.&lt;/p&gt;

&lt;p&gt;Hardy is so American, he never experienced the world of socialism, where goods were on short and often sellers were king. Car sellers, fruit sellers, you name it. In a shortage, the seller is king.&lt;/p&gt;

&lt;p&gt;But the bitter reality of socialism doesn't take away the expressive power of the metaphor.&lt;/p&gt;

&lt;p&gt;You want to be in a position where you can reject things.&lt;/p&gt;

&lt;p&gt;Hardy said that at a point he rejected to be an employee and he wanted to work on his own.&lt;/p&gt;

&lt;p&gt;I immediately thought that you want to be in a buyer position where you can reject ideas, demands, orders, positions even as an employee - without taking too much risk.&lt;/p&gt;

&lt;p&gt;How is that possible?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reject-employers-as-a-job-seeker"&gt;
  &lt;/a&gt;
  Reject employers as a job seeker
&lt;/h2&gt;

&lt;p&gt;You can see this from the perspective of a job seeker. You want to be in a position where you can choose your employer, you can choose your team.&lt;/p&gt;

&lt;p&gt;This requires that you are good enough to attract multiple employers/teams. You take the time to do your homework and you are both well-prepared for the interview and you also know exactly what you want. What you want from a team, what you want from a job. Oh, and of course, you highly qualified and you have a good reputation.&lt;/p&gt;

&lt;p&gt;Being in multiple hiring processes or just not being in a rush to accept an offer can give you leverage and a high level of confidence.&lt;/p&gt;

&lt;p&gt;I'll always remember to the face of one of my soon-to-be managers when approaching the end of our interview, he said something like, "if we choose you, we'll...".&lt;/p&gt;

&lt;p&gt;Then I replied something like, "of course, if we both choose each other, we'll...".&lt;/p&gt;

&lt;p&gt;His eyes were wide-open. "If we both choose each other? You have other offers?" I was interviewing for like 5 teams and I was clearly in a position where I'd be able to choose from multiple offers.&lt;/p&gt;

&lt;p&gt;When I shared this with him, his tone totally changed. In the end, I was really hesitant and I turned him down. He called me back later and convinced me to join - in hindsight it was a good decision.&lt;/p&gt;

&lt;p&gt;The moral is that I had options and that gave me freedom and confidence. I quickly became the buyer.&lt;/p&gt;

&lt;p&gt;But to be honest, this is not the first thing that I had in mind when I said you have to be the buyer at your workplace.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reject-your-own-boss-if-you-need-to"&gt;
  &lt;/a&gt;
  Reject your own boss if you need to
&lt;/h2&gt;

&lt;p&gt;What I had in mind is that you still have to be the buyer in the relationship of you and your boss - especially if you work for a corporation.&lt;/p&gt;

&lt;p&gt;I emphasize the word &lt;strong&gt;corporation&lt;/strong&gt; because it is both a dangerous and a promising place for those who have clear ideas about their careers.&lt;/p&gt;

&lt;p&gt;It's a promising place because there are endless opportunities if you find your way around. Often, you don't even need to change teams to try something else. You can take on the role of an SRE as a side role, you can deal with security or maybe you can be the DevOps. And it's not that everyone has to do everything, so your team is managed well and if you manage yourself well, you can try the different roles according to your interests and taste. You can pick interesting skills at your job without taking the risk of hopping from one company to the other.&lt;/p&gt;

&lt;p&gt;If you don't like your position, you can probably even rotate to another team without major difficulties. Often, you can try a completely different stack, you can move from backend to frontend or the other way around. You can even try to become a QA or a business analyst and later come back. Not to mention human or project management if that's your perversity.&lt;/p&gt;

&lt;p&gt;At the same time, a company can also be a dangerous place. Sometimes you might feel that you are sitting on a rollercoaster, things are moving so fast around you. You are going from one reorganization into another while the e-ink hasn't even dried on the previous decision record.&lt;/p&gt;

&lt;p&gt;These changes can easily sweep you away from your career plan in the short term. You can try to stay firm, but often the only thing you can do is to wait and see and consider leaving.&lt;/p&gt;

&lt;p&gt;But even without deep reorganizations, life rarely stops and people will move around. Often, managers try to move people around as if they were pawns on a chessboard. Soulless resources that can be assigned between assembly lines of a software factory.&lt;/p&gt;

&lt;p&gt;And with many devs, they can do this, because many don't have a clear idea about what they want. Many don't even consider they could say no, they could object. Object to what? And why? Oh, for that you need independent thoughts and a vision... Sadly, many people lack that and they just float around.&lt;/p&gt;

&lt;p&gt;But if you have that vision about your career and you deliver results, you can make your voice heard even if you're not asked or if the question is just a formality. &lt;/p&gt;

&lt;p&gt;During my last years, I had managers who thought that I should be more business-oriented, some others thought that I should spend significant time on the front-end side. While I'm not dogmatic about the languages I'm working with, if you follow my works, you know that I try to get deeper and deeper in C++ - even though that's not the only language I'm comfortable with. Moving to the front-end teams is simply not fitting my career plans. I'm investing much of my free time in - really slowly - becoming a C++ expert, an author and even a trainer. Assigning me to a non-C++ job would be damaging to my plans.&lt;/p&gt;

&lt;p&gt;I was not buying the idea when I was to become a frontend dev.&lt;/p&gt;

&lt;p&gt;So even in unhealthy business conditions, when it was difficult to find another team, I started to oppose. Not just a little bit.&lt;/p&gt;

&lt;p&gt;It didn't make everyone happy, but we found a compromise I was more than happy with. I could buy that.&lt;/p&gt;

&lt;p&gt;Essentially, I remained the buyer.&lt;/p&gt;

&lt;p&gt;You can only remain the buyer if otherwise, you're flexible on smaller things. Being generally flexible, and someone who delivers reliably gives you the ability not to bend when it would hurt your career.&lt;/p&gt;

&lt;p&gt;You can only remain the buyer if you deliver good results and people around you know that they can trust you.&lt;/p&gt;

&lt;p&gt;You can only remain the buyer if you know what you want to buy. Otherwise, they will sell you.&lt;/p&gt;

&lt;p&gt;And probably this last point is the most important. If you don't fulfil the other two, you can be tossed around. If you don't know what you want, if you don't have a clear plan, you're just a product.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Being the buyer means that you are in control, you can reject others who try to sell you products, ideas, even jobs and positions.&lt;/p&gt;

&lt;p&gt;In your career, this means that you don't just get hired by the first company that happens to make you an offer, but that you choose an employer, a team based on your needs, based on your vision.&lt;/p&gt;

&lt;p&gt;It also means that once you are in a team, in an organization, you cannot simply be tossed around like a figure on a chessboard. With a clear vision in front of you and a long list of high-quality deliveries behind you, you have the power to say no, to oppose if you feel that a new project is not mutually beneficial for you and your employer.&lt;/p&gt;

&lt;p&gt;Know what you want, and give yourself a favour, support yourself with high performance so that you can remain the buyer.&lt;/p&gt;

&lt;p&gt;It might not bring a smile to faces all the time, but it will earn you both confidence and respect.&lt;/p&gt;

&lt;p&gt;Always be the buyer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-deeper"&gt;
  &lt;/a&gt;
  Connect deeper
&lt;/h2&gt;

&lt;p&gt;If you liked this article, please &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hit on the like button,
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/gvcv1j"&gt;subscribe to my newsletter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;and let's connect on &lt;a href="https://twitter.com/SandorDargo"&gt;Twitter&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>career</category>
      <category>psychology</category>
      <category>watercooler</category>
      <category>selfmanagement</category>
    </item>
    <item>
      <title>[Angular] How to create beautiful and realistic confetti animations using tsParticles</title>
      <author>Matteo Bruni</author>
      <pubDate>Wed, 30 Jun 2021 05:34:30 +0000</pubDate>
      <link>https://dev.to/matteobruni/angular-how-to-create-beautiful-and-realistic-confetti-animations-using-tsparticles-4j14</link>
      <guid>https://dev.to/matteobruni/angular-how-to-create-beautiful-and-realistic-confetti-animations-using-tsparticles-4j14</guid>
      <description>&lt;p&gt;I wrote a post about tsParticles and the new confetti animation created in the &lt;code&gt;1.30&lt;/code&gt; version.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/matteobruni" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQFfhxbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--48F7T3mb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349511/bb633a3a-649f-4897-9773-86a525c8fdc3.png" alt="matteobruni"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/matteobruni/how-to-create-beautiful-and-realistic-confetti-animation-with-tsparticles-1lkm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;[JS] How to create beautiful and realistic confetti animation with tsParticles&lt;/h2&gt;
      &lt;h3&gt;Matteo Bruni ・ Jun 29 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;This configuration can be used as is in any Angular tsParticles installation (&lt;code&gt;ng-particles&lt;/code&gt; package).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;app.module.ts&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NgParticlesModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ng-particles&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;NgModule&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;declarations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="cm"&gt;/* ... */&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;imports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="cm"&gt;/* ... */&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;NgParticlesModule&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="na"&gt;bootstrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="cm"&gt;/* ... */&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;app.component.html&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- this component can be placed anywhere --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;Particles&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"tsparticles"&lt;/span&gt; &lt;span class="na"&gt;[options]=&lt;/span&gt;&lt;span class="s"&gt;"options"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/Particles&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;app.component.ts&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AppComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* ... */&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/* ... */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;A working sample can be found below&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/compassionate-sunset-3fz9d"&gt;
&lt;/iframe&gt;
&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/matteobruni"&gt;
        matteobruni
      &lt;/a&gt; / &lt;a href="https://github.com/matteobruni/tsparticles"&gt;
        tsparticles
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      tsParticles - Easily create highly customizable particles animations and use them as animated backgrounds for your website. Ready to use components available for React, Vue.js (2.x and 3.x), Angular, Svelte, jQuery, Preact, Inferno.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://particles.js.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58f22f0a546d5d7f34b4668dc842ac91b3a4cf9a5de72346559b7d15b13e587e/68747470733a2f2f7061727469636c65732e6a732e6f72672f696d616765732f62616e6e6572322e706e67" alt="banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
tsParticles - TypeScript Particles&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;A lightweight TypeScript library for creating particles. Dependency free (*), browser ready and compatible with React, Vue, Angular, Svelte, jQuery, Preact, Inferno&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openbase.com/js/tsparticles?utm_source=embedded&amp;amp;utm_medium=badge&amp;amp;utm_campaign=rate-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/303db015a31c411aee869f57d55a44a53cd2f5380d0de5ee8abecb337a9452a6/68747470733a2f2f6261646765732e6f70656e626173652e636f6d2f6a732f726174696e672f74737061727469636c65732e737667" alt="Rate on Openbase"&gt;&lt;/a&gt; &lt;a href="https://www.jsdelivr.com/package/npm/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c64088d02effc095dd7386325d216ce6d6bd46513a88ed2274e0ec4e6d876cf/68747470733a2f2f646174612e6a7364656c6976722e636f6d2f76312f7061636b6167652f6e706d2f74737061727469636c65732f62616467653f7374796c653d726f756e646564" alt="jsDelivr"&gt;&lt;/a&gt; &lt;a href="https://cdnjs.com/libraries/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9e5a7a72f7cbc65eedd0e4d7431e4d4762c472ad4a66b6648a8e74c2b6be331/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f74737061727469636c6573" alt="Cdnjs"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e18baafcedd7efbbd13d6e2b1cf738c07ea898383c946e6e7b16400f813d70cb/68747470733a2f2f62616467652e667572792e696f2f6a732f74737061727469636c65732e737667" alt="npmjs"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc16ec38506bbab6f6b729850ad28fd94a5643f1633b4356647033c3aa3fe102/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f74737061727469636c6573" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://lerna.js.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3bc63f921dd60bac6d91aa900ef570c928b2aa4c2124ed23647e8fe9d2232853/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61696e7461696e6564253230776974682d6c65726e612d6363303066662e737667" alt="lerna"&gt;&lt;/a&gt; &lt;a href="https://www.codefactor.io/repository/github/matteobruni/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ce969771f1502f57861fe8ce7c787c209c50ef17c2e19f35cb1de0c960eba94a/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6d617474656f6272756e692f74737061727469636c65732f6261646765" alt="CodeFactor"&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/manual/ar3s/tsparticles?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=matteobruni/tsparticles&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f96d4d0dccc9c7491f3ed07af70a808b0fd4d2e4d863a1f7bb9e51e10ae526e/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6239383361616633343631613463343862316532656563636531666631643734" alt="Codacy Badge"&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/matteobruni/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/daadb4894128d1e19b72d80236f5959f1f2b47f9fe081373f3246131f0189f6c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974706f642d72656164792d2d746f2d2d636f64652d626c75653f6c6f676f3d676974706f64" alt="Gitpod Ready-to-Code"&gt;&lt;/a&gt; &lt;a href="https://repl.it/github/matteobruni/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64adf1bd83058aa64f848245f74bef77cd7cc2a3f36343ac44d6d0c39cc41bc3/68747470733a2f2f7265706c2e69742f62616467652f6769746875622f6d617474656f6272756e692f74737061727469636c6573" alt="Run on Repl.it"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Do you want to use it on your website?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;This library is available on the two most popular CDNs and it's easy and ready to use, if you were using particles.js it's even easier&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You'll find the instructions &lt;a href="https://github.com/matteobruni/tsparticles/blob/main/README.md#library-installation"&gt;below&lt;/a&gt;, with all the links you need, and &lt;em&gt;don't be scared by &lt;strong&gt;TypeScript&lt;/strong&gt;, it's just the source language&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The output files are just JavaScript&lt;/strong&gt;. 🤩&lt;/p&gt;
&lt;p&gt;CDNs and &lt;code&gt;npm&lt;/code&gt; have all the sources you need in &lt;strong&gt;Javascript&lt;/strong&gt;, a bundle browser ready (tsparticles.min.js) and all files splitted for &lt;code&gt;import&lt;/code&gt; syntax.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you are still interested&lt;/strong&gt; some lines below there are some instructions for migrating from the old particles.js library.&lt;/p&gt;
&lt;h2&gt;
&lt;strong&gt;&lt;em&gt;Library installation&lt;/em&gt;&lt;/strong&gt;
&lt;/h2&gt;
&lt;h3&gt;
&lt;strong&gt;&lt;em&gt;Hosting / CDN&lt;/em&gt;&lt;/strong&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Please use this hosts or your own to&lt;/em&gt;&lt;/strong&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/matteobruni/tsparticles"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



</description>
      <category>angular</category>
      <category>javascript</category>
      <category>showdev</category>
      <category>webdev</category>
    </item>
    <item>
      <title>New benchmark: Mezon Router is upt o 567 times faster than Zaphpa Router</title>
      <author>alexdodonov</author>
      <pubDate>Wed, 30 Jun 2021 05:10:49 +0000</pubDate>
      <link>https://dev.to/alexdodonov/new-benchmark-mezon-router-is-upt-o-567-times-faster-than-zaphpa-router-2cfm</link>
      <guid>https://dev.to/alexdodonov/new-benchmark-mezon-router-is-upt-o-567-times-faster-than-zaphpa-router-2cfm</guid>
      <description>&lt;p&gt;Hi all! Today we have one more benchmark.&lt;/p&gt;

&lt;p&gt;As usual we have two cases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;http server accepts request, launches php script, which handles this request, and then all script data is removed from memory. All following requests are processed in the same way. In this case very critical to launch script as soon as possible and we do not have time for long pre-compilations and preparations. Because all of it will be lost after the script will finish working;&lt;/li&gt;
&lt;li&gt;php script is launching, initiating all internal components (and router is one of them) and then starting processing requests. This case can be organized via for example react-php. It differs from the previous case because we can spend reasonable time to pre-compile routes for faster processing.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#the-first-case"&gt;
  &lt;/a&gt;
  The first case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// static routes&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/0'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateZaphpaStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/99'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateZaphpaStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/199'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateZaphpaStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /static/999 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// non static routes&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/0/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateZaphpaNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/99/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateZaphpaNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/199/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateZaphpaNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /param/999/1 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#the-second-case"&gt;
  &lt;/a&gt;
  The second case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// static routes&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateZaphpaStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/0'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/99'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/199'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /static/999 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// non static routes&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateZaphpaNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/0/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/99/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/199/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;route&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /param/999/1 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#ok-what-do-we-have"&gt;
  &lt;/a&gt;
  OK What do we have?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#the-first-case-static-routes"&gt;
  &lt;/a&gt;
  The first case + static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+------------------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+--------+
| benchmark                          | subject     | set | revs | its | mem_peak    | best          | mean          | mode          | worst         | stdev        | rstdev | diff   |
+------------------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+--------+
| CoffeeSingleRequestStaticBench     | benchStatic | 0   | 10   | 10  | 2,940,952b  | 42,735.700μs  | 44,148.740μs  | 43,823.046μs  | 45,839.800μs  | 890.843μs    | 2.02%  | 11.74x |
| DVKSingleRequestStaticBench        | benchStatic | 0   | 10   | 10  | 3,397,712b  | 25,728.100μs  | 26,532.410μs  | 26,713.614μs  | 27,142.700μs  | 408.093μs    | 1.54%  | 7.05x  |
| HoaSingleRequestStaticBench        | benchStatic | 0   | 10   | 10  | 3,852,584b  | 45,056.000μs  | 47,831.220μs  | 45,880.336μs  | 51,961.500μs  | 2,559.187μs  | 5.35%  | 12.72x |
| IBSingleRequestStaticBench         | benchStatic | 0   | 10   | 10  | 3,476,344b  | 127,911.800μs | 131,211.200μs | 130,371.554μs | 136,347.600μs | 2,443.760μs  | 1.86%  | 34.88x |
| MezonSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 2,292,096b  | 9,211.200μs   | 9,625.020μs   | 9,471.161μs   | 10,096.800μs  | 291.190μs    | 3.03%  | 2.56x  |
| MiladSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 33,654,328b | 29,808.400μs  | 31,162.020μs  | 30,789.082μs  | 32,980.100μs  | 983.367μs    | 3.16%  | 8.28x  |
| PeceeSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 7,089,792b  | 37,428.900μs  | 39,933.580μs  | 38,535.194μs  | 43,256.900μs  | 2,055.144μs  | 5.15%  | 10.62x |
| PowerSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 3,866,936b  | 19,369.400μs  | 21,803.010μs  | 20,382.670μs  | 33,752.200μs  | 4,076.400μs  | 18.70% | 5.80x  |
| SteampixelSingleRequestStaticBench | benchStatic | 0   | 10   | 10  | 2,571,112b  | 213,552.900μs | 250,146.770μs | 269,120.880μs | 280,522.800μs | 23,116.598μs | 9.24%  | 66.50x |
| ToroSingleRequestStaticBench       | benchStatic | 0   | 10   | 10  | 1,749,936b  | 1,694.300μs   | 3,761.660μs   | 2,360.575μs   | 6,628.600μs   | 1,878.398μs  | 49.94% | 1.00x  |
| ZaphpaSingleRequestStaticBench     | benchStatic | 0   | 10   | 10  | 3,441,392b  | 38,126.200μs  | 64,181.420μs  | 55,310.419μs  | 97,458.200μs  | 19,113.623μs | 29.78% | 17.06x |
+------------------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+--------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-first-case-nonstatic-routes"&gt;
  &lt;/a&gt;
  The first case + non-static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+--------+
| benchmark                         | subject    | set | revs | its | mem_peak     | best          | mean          | mode          | worst         | stdev        | rstdev | diff   |
+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+--------+
| CoffeeSingleRequestParamBench     | benchParam | 0   | 10   | 10  | 3,907,992b   | 54,855.700μs  | 64,850.750μs  | 60,320.435μs  | 94,186.400μs  | 11,398.296μs | 17.58% | 3.72x  |
| DVKSingleRequestParamBench        | benchParam | 0   | 10   | 10  | 3,390,096b   | 29,949.400μs  | 34,775.460μs  | 32,276.041μs  | 46,015.800μs  | 5,177.218μs  | 14.89% | 1.99x  |
| HoaSingleRequestParamBench        | benchParam | 0   | 10   | 10  | 4,170,184b   | 47,621.600μs  | 48,482.750μs  | 48,300.887μs  | 49,846.700μs  | 650.654μs    | 1.34%  | 2.78x  |
| IBSingleRequestParamBench         | benchParam | 0   | 10   | 10  | 3,597,064b   | 148,953.500μs | 152,604.200μs | 152,200.110μs | 158,433.600μs | 2,434.881μs  | 1.60%  | 8.75x  |
| MezonSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 139,513,448b | 128,445.400μs | 146,859.660μs | 135,077.748μs | 222,587.900μs | 27,770.802μs | 18.91% | 8.42x  |
| MiladSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 34,512,864b  | 35,955.200μs  | 37,055.130μs  | 36,607.349μs  | 38,904.300μs  | 940.858μs    | 2.54%  | 2.13x  |
| PeceeSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 6,673,976b   | 77,843.800μs  | 79,267.680μs  | 78,578.377μs  | 81,225.500μs  | 1,123.203μs  | 1.42%  | 4.55x  |
| PowerSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 3,866,936b   | 20,282.400μs  | 23,715.390μs  | 21,660.704μs  | 40,997.500μs  | 5,939.511μs  | 25.04% | 1.36x  |
| SteampixelSingleRequestParamBench | benchParam | 0   | 10   | 10  | 2,671,064b   | 266,386.600μs | 347,398.400μs | 301,574.887μs | 440,961.500μs | 62,212.096μs | 17.91% | 19.92x |
| ToroSingleRequestParamBench       | benchParam | 0   | 10   | 10  | 1,870,896b   | 10,984.400μs  | 17,435.850μs  | 15,213.384μs  | 29,775.800μs  | 5,613.780μs  | 32.20% | 1.00x  |
| ZaphpaSingleRequestParamBench     | benchParam | 0   | 10   | 10  | 3,544,800b   | 50,162.200μs  | 86,169.690μs  | 84,714.534μs  | 130,054.700μs | 25,618.593μs | 29.73% | 4.94x  |
+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+--------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-second-case-static-routes"&gt;
  &lt;/a&gt;
  The second case + static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------------------+-------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+-------------+--------+------------+
| benchmark                  | subject     | set | revs | its | mem_peak   | best          | mean          | mode          | worst         | stdev       | rstdev | diff       |
+----------------------------+-------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+-------------+--------+------------+
| CoffeeReactStaticBench     | benchStatic | 0   | 10   | 10  | 2,414,120b | 8,009.000μs   | 8,518.490μs   | 8,405.855μs   | 9,352.000μs   | 378.483μs   | 4.44%  | 381.38x    |
| DVKReactStaticBench        | benchStatic | 0   | 100  | 10  | 2,657,016b | 10,541.570μs  | 10,995.686μs  | 10,762.513μs  | 12,333.660μs  | 518.953μs   | 4.72%  | 492.29x    |
| HoaReactStaticBench        | benchStatic | 0   | 100  | 10  | 2,898,656b | 3,578.440μs   | 3,676.794μs   | 3,664.041μs   | 3,811.110μs   | 62.987μs    | 1.71%  | 164.61x    |
| IBReactStaticBench         | benchStatic | 0   | 10   | 10  | 3,039,600b | 26,708.000μs  | 27,240.900μs  | 27,081.392μs  | 28,411.600μs  | 450.931μs   | 1.66%  | 1,219.60x  |
| MezonReactStaticBench      | benchStatic | 0   | 100  | 10  | 1,912,928b | 19.100μs      | 22.336μs      | 20.502μs      | 34.340μs      | 4.461μs     | 19.97% | 1.00x      |
| MiladReactStaticBench      | benchStatic | 0   | 10   | 10  | 5,279,912b | 15,713.200μs  | 17,850.040μs  | 16,708.343μs  | 22,679.200μs  | 2,329.194μs | 13.05% | 799.16x    |
| PeceeReactStaticBench      | benchStatic | 0   | 10   | 10  | 4,248,656b | 18,801.800μs  | 20,019.940μs  | 19,824.268μs  | 21,243.300μs  | 711.830μs   | 3.56%  | 896.31x    |
| PowerReactStaticBench      | benchStatic | 0   | 10   | 10  | 3,034,352b | 15,840.300μs  | 17,689.340μs  | 16,348.676μs  | 24,220.300μs  | 2,739.784μs | 15.49% | 791.97x    |
| SteampixelReactStaticBench | benchStatic | 0   | 10   | 10  | 2,610,280b | 245,022.200μs | 253,592.850μs | 248,838.780μs | 265,128.100μs | 7,135.987μs | 2.81%  | 11,353.55x |
| ToroReactStaticBench       | benchStatic | 0   | 10   | 10  | 1,739,768b | 359.900μs     | 395.980μs     | 370.684μs     | 564.000μs     | 60.614μs    | 15.31% | 17.73x     |
| ZaphpaReactStaticBench     | benchStatic | 0   | 10   | 10  | 2,884,936b | 11,746.100μs  | 12,658.930μs  | 12,680.628μs  | 13,220.000μs  | 372.641μs   | 2.94%  | 566.75x    |
+----------------------------+-------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+-------------+--------+------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-second-case-nonstatic-routes"&gt;
  &lt;/a&gt;
  The second case + non-static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+---------------------------+------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+---------------+--------+---------+
| benchmark                 | subject    | set | revs | its | mem_peak   | best          | mean          | mode          | worst         | stdev         | rstdev | diff    |
+---------------------------+------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+---------------+--------+---------+
| CoffeeReactParamBench     | benchParam | 0   | 10   | 10  | 2,414,088b | 8,113.000μs   | 8,640.060μs   | 8,488.276μs   | 9,144.000μs   | 309.602μs     | 3.58%  | 7.94x   |
| DVKReactParamBench        | benchParam | 0   | 100  | 10  | 2,661,408b | 13,084.360μs  | 13,385.467μs  | 13,300.446μs  | 13,996.920μs  | 248.691μs     | 1.86%  | 12.29x  |
| HoaReactParamBench        | benchParam | 0   | 100  | 10  | 3,365,544b | 3,756.650μs   | 4,278.759μs   | 3,844.301μs   | 6,113.990μs   | 854.762μs     | 19.98% | 3.93x   |
| IBReactParamBench         | benchParam | 0   | 10   | 10  | 3,162,080b | 34,718.000μs  | 36,019.680μs  | 35,490.992μs  | 38,965.300μs  | 1,184.278μs   | 3.29%  | 33.08x  |
| MezonReactParamBench      | benchParam | 0   | 100  | 10  | 3,134,208b | 1,029.700μs   | 1,088.736μs   | 1,103.231μs   | 1,133.210μs   | 33.768μs      | 3.10%  | 1.00x   |
| MiladReactParamBench      | benchParam | 0   | 10   | 10  | 5,407,408b | 20,613.300μs  | 21,961.730μs  | 21,229.817μs  | 28,489.300μs  | 2,210.792μs   | 10.07% | 20.17x  |
| PeceeReactParamBench      | benchParam | 0   | 10   | 10  | 4,629,752b | 44,592.000μs  | 57,865.700μs  | 52,179.807μs  | 105,175.900μs | 16,653.134μs  | 28.78% | 53.15x  |
| PowerReactParamBench      | benchParam | 0   | 10   | 10  | 3,034,352b | 15,865.000μs  | 35,597.940μs  | 26,385.699μs  | 91,584.400μs  | 21,756.776μs  | 61.12% | 32.70x  |
| SteampixelReactParamBench | benchParam | 0   | 10   | 10  | 2,669,432b | 253,075.200μs | 347,525.780μs | 288,684.856μs | 821,716.900μs | 164,378.252μs | 47.30% | 319.20x |
| ToroReactParamBench       | benchParam | 0   | 10   | 10  | 1,789,832b | 7,903.400μs   | 10,732.150μs  | 9,897.662μs   | 19,353.600μs  | 3,211.102μs   | 29.92% | 9.86x   |
| ZaphpaReactParamBench     | benchParam | 0   | 10   | 10  | 2,941,176b | 23,079.200μs  | 26,114.040μs  | 25,981.879μs  | 30,210.300μs  | 2,189.627μs   | 8.38%  | 23.99x  |
+---------------------------+------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+---------------+--------+---------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see almost in all cases Mezon Router is faster that Zaphpa router.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h1&gt;

&lt;p&gt;More articles can be found in my &lt;a href="https://twitter.com/mezonphp"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-mezonrouter"&gt;
  &lt;/a&gt;
  What is mezon/router?
&lt;/h1&gt;

&lt;p&gt;mezon/router now is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;framework for routing with &lt;strong&gt;100% code coverage&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;10.0 points&lt;/strong&gt; on scrutinizer-ci.com&lt;/li&gt;
&lt;li&gt;router is a part of the &lt;a href="https://github.com/alexdodonov/mezon"&gt;Mezon Project&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Repo on github.com: &lt;a href="https://github.com/alexdodonov/mezon-router"&gt;https://github.com/alexdodonov/mezon-router&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#it-will-be-great-if-you-will-contribute-something-to-this-project-documentation-sharing-the-project-in-your-social-media-bug-fixing-refactoring-or-even-submitting-issue-with-question-or-feature-request-thanks-anyway-"&gt;
  &lt;/a&gt;
  It will be great if you will contribute something to this project. Documentation, sharing the project in your social media, bug fixing, refactoring, or even &lt;strong&gt;&lt;a href="https://github.com/alexdodonov/mezon-router/issues"&gt;submitting issue with question or feature request&lt;/a&gt;&lt;/strong&gt;. Thanks anyway )
&lt;/h1&gt;

</description>
      <category>php</category>
      <category>router</category>
      <category>zaphpa</category>
      <category>benchmark</category>
    </item>
    <item>
      <title>Angular Material 12 Image upload with Preview example</title>
      <author>Tien Nguyen</author>
      <pubDate>Wed, 30 Jun 2021 03:47:16 +0000</pubDate>
      <link>https://dev.to/tienbku/angular-material-12-image-upload-with-preview-example-44cd</link>
      <guid>https://dev.to/tienbku/angular-material-12-image-upload-with-preview-example-44cd</guid>
      <description>&lt;p&gt;In this tutorial, I will show you way to build (Multiple) Image upload and Preview example with Web API/Rest API using Angular Material 12, FormData and Progress Bar.&lt;/p&gt;

&lt;p&gt;Full Article: &lt;a href="https://bezkoder.com/angular-material-12-image-upload-preview/"&gt;https://bezkoder.com/angular-material-12-image-upload-preview/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Overview&lt;/h2&gt;

&lt;p&gt;We will create an Angular Material 12 (Multiple) Image upload with Preview application in that user can:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;see the preview of images that will be uploaded&lt;/li&gt;
    &lt;li&gt;see the upload process (percentage) of all uploading images&lt;/li&gt;
    &lt;li&gt;view all uploaded images&lt;/li&gt;
    &lt;li&gt;download image by clicking on the file name&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are screenshots of our React App:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Before upload:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3w2t9EzX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2owppefrysb8wo9a36lb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3w2t9EzX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2owppefrysb8wo9a36lb.png" alt="angular-material-12-image-upload-preview-example-before-upload"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When Upload is done:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NFi5D0Rg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qncnt9mwbwp3gbqrbb1w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NFi5D0Rg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qncnt9mwbwp3gbqrbb1w.png" alt="angular-material-12-image-upload-preview-example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;List of Images Display with download Urls:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--slJwUwW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jfqwk1g6yq3oov0v4s5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--slJwUwW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jfqwk1g6yq3oov0v4s5.png" alt="angular-material-12-image-upload-preview-example-image-list"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Show status for each image upload:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xgUxyigH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96ppxuuj7bad4ezebmc4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xgUxyigH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96ppxuuj7bad4ezebmc4.png" alt="angular-material-12-image-upload-preview-example-upload-status"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Technology&lt;/h2&gt;

&lt;ul&gt;
    &lt;li&gt;Angular 12&lt;/li&gt;
    &lt;li&gt;RxJS 6&lt;/li&gt;
    &lt;li&gt;Angular Material 12&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Web API for Image Upload &amp;amp; Storage&lt;/h2&gt;

&lt;p&gt;Here are Rest APIs that we will use Axios to make HTTP requests:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Methods&lt;/th&gt;
&lt;th&gt;Urls&lt;/th&gt;
&lt;th&gt;Actions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/upload&lt;/td&gt;
&lt;td&gt;upload a File&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/files&lt;/td&gt;
&lt;td&gt;get List of Files (name &amp;amp; url)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/files/[filename]&lt;/td&gt;
&lt;td&gt;download a File&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;You can find how to implement the Rest APIs Server at one of following posts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/node-js-express-file-upload/"&gt;Node.js Express File Upload Rest API example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/google-cloud-storage-nodejs-upload-file/"&gt;Node.js Express File Upload to Google Cloud Storage example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-file-upload/"&gt;Spring Boot Multipart File upload (to static folder) example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Angular Material 12 App for Image upload with Preview&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ILUPaotg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/envb3ym6bimvqhjouchn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ILUPaotg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/envb3ym6bimvqhjouchn.png" alt="angular-material-12-image-upload-preview-example-project-structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me explain it briefly.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We import necessary library, components in &lt;em&gt;app.module.ts&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;file-upload.service&lt;/em&gt; provides methods to save File and get Files from Rest Apis Server.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;upload-images.component&lt;/em&gt; contains upload multiple images form, preview, some progress bars, display list of images.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;app.component&lt;/em&gt; is the container that we embed all components.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;index.html&lt;/em&gt; for importing the Font and Icons.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more steps and source code, please visit:&lt;br&gt;
&lt;a href="https://bezkoder.com/angular-material-12-image-upload-preview/"&gt;https://bezkoder.com/angular-material-12-image-upload-preview/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;p&gt;More Practice:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/angular-12-spring-boot-file-upload/"&gt;Angular 12 + Spring Boot: File upload example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/angular-12-node-js-file-upload/"&gt;Angular 12 + Node.js: File Upload example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/angular-12-jwt-auth/"&gt;Angular 12 Login and Registration example with JWT &amp;amp; Web Api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/angular-12-crud-app/"&gt;Angular 12 CRUD Application example with Web API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/angular-12-form-validation/"&gt;Angular 12 Form Validation example (Reactive Forms)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Using Bootstrap: &lt;a href="https://bezkoder.com/angular-12-multiple-image-upload-preview/"&gt;Angular 12 Multiple Images Upload with Preview example&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Serverless with Firebase:&lt;br&gt;
&lt;a href="https://bezkoder.com/angular-12-file-upload-firebase-storage/"&gt;Angular 12 Upload File to Firebase Storage example&lt;/a&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>I said goodbye to local development and so can you</title>
      <author>Mike Nikles</author>
      <pubDate>Wed, 30 Jun 2021 03:18:28 +0000</pubDate>
      <link>https://dev.to/mikenikles/i-said-goodbye-to-local-development-and-so-can-you-1eca</link>
      <guid>https://dev.to/mikenikles/i-said-goodbye-to-local-development-and-so-can-you-1eca</guid>
      <description>&lt;p&gt;&lt;strong&gt;Key Takeaways&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Individual developer efficiency is hard to measure, but directly impacts a company’s bottom line and team morale.&lt;/li&gt;
&lt;li&gt;Remote work requires developers to onboard in isolation, a process that was already challenging when teams were co-located.&lt;/li&gt;
&lt;li&gt;Onboarding instructions are often outdated, as are automated onboarding scripts because only new hires run them.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.gitpod.io"&gt;www.gitpod.io&lt;/a&gt; provides automated, one-off development environments you spin up in the cloud for each task. In seconds, repeatedly, and securely.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#what-its-like-today"&gt;What it’s like today&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#open-source-project-onboarding"&gt;Open source project onboarding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#meet-alice-and-bob"&gt;Meet Alice and Bob&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#set-up-a-new-project"&gt;Set up a new project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#develop-a-new-feature"&gt;Develop a new feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#switch-context"&gt;Switch context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set-up-a-new-computer"&gt;Set up a new computer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contribute-to-open-source-projects"&gt;Contribute to open source projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#whats-the-catch"&gt;What’s the catch?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-its-like-today"&gt;
  &lt;/a&gt;
  What it’s like today
&lt;/h2&gt;

&lt;p&gt;Whether you recently joined a new team or contributed to an open source project for the first time, I’m quite sure you spent anywhere from an hour to a few days onboarding. If you were lucky, other contributors provided detailed, up-to-date instructions you could follow. Possibly even commands you could copy &amp;amp; paste and watch your development environment set itself up one step at a time. If this is your experience, congratulations on finding such a great and diligent team - tell them what an awesome job they did 🤩!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;More often than not though, this is not what an onboarding experience is like.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is more likely that there are no automated scripts while instructions, if there are any, are slightly outdated or incomplete - leaving you struggling to figure things out on your own. The techlead to the rescue, who then asks you to update the documentation so the next team member who joins does not run into the same issues. Except, the project evolves, and instructions fall behind again. This is no fault of anyone in particular, but simply a fact of life because once a developer sets up their local development environment, there is no need to set it up again when the code changes. Every team member applies incremental changes to their development environment without starting from scratch, leave alone following the onboarding documentation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This process is costly&lt;/strong&gt;, both in terms of time and team morale. The larger your team, the more time is lost on setting up development environments and keeping them maintained. At the same time, I don’t know anyone who enjoys reading outdated documentation. Feeling helpless on the first day working on a new project is certainly not a great way to get started 😕.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#open-source-project-onboarding"&gt;
  &lt;/a&gt;
  Open source project onboarding
&lt;/h3&gt;

&lt;p&gt;In addition, there is a cost that applies to open source projects that is almost impossible to measure: &lt;strong&gt;the % of people who would like to contribute to a project, but give up because getting started is too complex or interferes with their other projects in their local environment!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To illustrate this with an example, imagine you usually work with Java 8 and want to contribute to two open source projects. Project A requires Java 7, while project B only runs with Java 11. In order for you to contribute to these projects, you need to install a Java version manager and remember to switch Java version every time you change the project you work on.&lt;br&gt;
The exact same applies to databases (no need to install MySQL, MongoDB, Postgres, etc. locally), operating system libraries, anything you currently install locally.&lt;/p&gt;

&lt;p&gt;Let’s look at a day in the life of two developers and see how cloud-based development environments simplify workflows significantly.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#meet-alice-and-bob"&gt;
  &lt;/a&gt;
  Meet Alice and Bob
&lt;/h2&gt;

&lt;p&gt;Bob is like most of us, he works on a desktop or laptop where he installs development tools, clones git repositories and installs dependencies for the projects he works on. He may or may not have had a great onboarding experience 😉. Once every so often, Bob is required to upgrade his tools and dependencies, a task he dreads because upgrading the version of an installed programming language may impact projects that are not compatible with that newer version. With every new version he installs, his cognitive load increases as he needs to remember to switch to the correct version based on the project he works on. Bob is very, very careful in the way he treats his computer because he really doesn’t want it to break… Just imagine setting everything up again from scratch 😱.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alice is not like Bob&lt;/strong&gt;, not anymore! Alice too lived a life like Bob where she carefully set up and maintained her local development environment over the lifetime of her laptop (we will talk about her experience when she gets a new laptop later). However, she has since realized there is a better way not only for herself, but for her entire team and anyone who contributes to their projects.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Alice no longer has any code on her computer, none whatsoever. She does that thanks to cloud-based, ephemeral development environments provided by &lt;a href="http://www.gitpod.io"&gt;www.gitpod.io&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let’s dive in and learn more about Bob and Alice and how you can turn yourself from being a traditional Bob to being a modern, efficient version of Alice 🥰.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#set-up-a-new-project"&gt;
  &lt;/a&gt;
  Set up a new project
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Bob&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bob starts by cloning the source code, then ensures he has the correct runtime versions installed (e.g. Java, Node, .NET) and also makes sure the project supports his operating system.&lt;br&gt;
Once that’s all good, he looks for onboarding instructions and works his way through that, potentially spending up to a few days on this task.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alice&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Alice creates a &lt;code&gt;.gitpod.yml&lt;/code&gt; configuration file at the root of her project, then adds &lt;a href="https://www.gitpod.io/docs/config-start-tasks"&gt;start tasks&lt;/a&gt; such as the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;tasks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;init&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm install&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm run dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;She also enables Gitpod &lt;a href="https://www.gitpod.io/docs/prebuilds"&gt;Prebuilds&lt;/a&gt; - telling Gitpod to continuously create new development environments as soon as her project’s source code changes! This significantly reduces the startup time when she or anyone who works on her project needs a development environment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rzgCtghN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/upyfzunappt80zyvs26s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rzgCtghN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/upyfzunappt80zyvs26s.png" alt="Set up a new project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#develop-a-new-feature"&gt;
  &lt;/a&gt;
  Develop a new feature
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Bob&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bob is very familiar with this workflow, it’s something he does many times a week, possibly even a few times per day.&lt;/p&gt;

&lt;p&gt;He starts by making sure his new feature branch is based on the latest code. He does that by first pulling the latest default branch and then creating a feature branch.&lt;/p&gt;

&lt;p&gt;Since one of his colleagues may have added a new dependency or changed a required runtime version, Bob needs to ensure he has the latest versions. You know, otherwise he starts the dev server only to be presented with an error message telling him a dependency is missing. You know what I’m talking about 😉.&lt;/p&gt;

&lt;p&gt;Then, Bob is ready to shift into feature development mode. Well... after he started the database and dev servers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alice&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;She’s keen to get started right away. Once she looks at the issue on GitHub, GitLab or Bitbucket, she simply clicks the “Gitpod” button*. This opens a new workspace with a feature branch already created, all dependencies installed and the database and dev servers started!&lt;/p&gt;

&lt;p&gt;* She gets that by installing the &lt;a href="https://www.gitpod.io/docs/browser-extension"&gt;Gitpod browser extension&lt;/a&gt;. Alternatively, she could prefix the issue URL with &lt;code&gt;gitpod.io/#&amp;lt;issue-url&amp;gt;&lt;/code&gt; to open a new development environment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BccPl7o2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lifbczeaznb3ey1kcdhj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BccPl7o2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lifbczeaznb3ey1kcdhj.png" alt="Develop a new feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#switch-context"&gt;
  &lt;/a&gt;
  Switch context
&lt;/h3&gt;

&lt;p&gt;Imagine this: You’re working on a feature when your team member contacts you, letting you know she needs your review for a production hotfix pull request. Here’s how Bob and Alice handle this situation:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bob&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hm... 🤔 Bob is a bit hesitant. He has a bunch of code changes that are not ready to be committed, he also removed a dependency that is no longer needed thanks to his feature - yay! The timing to review a pull request is less than ideal.&lt;/p&gt;

&lt;p&gt;He stashes his changes, pulls the PR branch and switches to it. Since he removed a dependency in his feature branch, he needs to install that again because the production hotfix PR still requires it.&lt;/p&gt;

&lt;p&gt;Time to start the dev server and review the hotfix. Looks good, LGTM 👍.&lt;/p&gt;

&lt;p&gt;To get back to his feature branch and continue development, he first switches back to his branch. Next, Bob needs his stashed files back, then drops that dependency his feature no longer requires and eventually starts the servers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alice&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Alice’s workflow is no different than when she develops a new feature. She opens a new browser tab, navigates to the pull request and opens a new development environment based on that PR. Within seconds, the environment starts and the database and dev servers already run - ready for Alice’s review.&lt;/p&gt;

&lt;p&gt;She can even leave review comments right within VS Code and have them synced with GitHub.&lt;/p&gt;

&lt;p&gt;When she’s done with the review, Alice closes the browser tab. This brings her back to her previous development environment where she continues to work on her feature.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o5oVM0Ss--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqaynpg1sywub1oybbbb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o5oVM0Ss--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqaynpg1sywub1oybbbb.png" alt="Switch context"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-up-a-new-computer"&gt;
  &lt;/a&gt;
  Set up a new computer
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Bob&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Oh boy... where to start?! Ah right, from scratch 😰!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alice&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Alice, well Alice is excited to get a new computer and is up and running as soon as she installs her favourite browser 🚀. Way to go, Alice!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f_rbnrHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lit40c6u8obqt8dgxzd7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f_rbnrHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lit40c6u8obqt8dgxzd7.png" alt="Set up a new dev environment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contribute-to-open-source-projects"&gt;
  &lt;/a&gt;
  Contribute to open source projects
&lt;/h3&gt;

&lt;p&gt;Remember the example with the three open source projects earlier that use different versions of Java? In Alice’s case, she does not have Java installed locally at all. She starts any open source project in an ephemeral development environment and uses whatever version of Java is configured for that project. She can even contribute to two projects in parallel - if she really wanted to 😛.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-the-catch"&gt;
  &lt;/a&gt;
  What’s the catch?
&lt;/h2&gt;

&lt;p&gt;Well, for the time being you need an internet connection to work like Alice. The good news, it doesn’t have to be high bandwidth since the data exchange between Gitpod and your browser is minimal. A decent latency is all you need for a smooth experience.&lt;/p&gt;

&lt;p&gt;If you read this and think “Well, what about X?” please get in touch, I’d love to work with you and set up Gitpod for your project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Alice &amp;amp; Bob, two not-so-fictional characters living their life as software developers. I used to be a Bob for close to two decades before I found &lt;a href="http://www.gitpod.io"&gt;www.gitpod.io&lt;/a&gt; which gives me everything Alice has! Want to get a sneak peek? Click the following button to start your first development environment in the cloud (it will open the source file of this blog post):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/gitpod-io/website/blob/main/src/routes/blog/i-said-goodbye-to-local-development-and-so-can-you.md"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i-A98cdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gitpod.io/button/open-in-gitpod.svg%3Fv%3Dkumquat" alt="Open in Gitpod"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’d love to hear your thoughts and feedback, please get in touch 🙏.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>cloud</category>
      <category>gitpod</category>
      <category>remote</category>
    </item>
    <item>
      <title>AWS Managed ADのユーザーをGoogleに同期する</title>
      <author>ryanc</author>
      <pubDate>Wed, 30 Jun 2021 02:19:42 +0000</pubDate>
      <link>https://dev.to/ryanch79/aws-managed-ad-google-481n</link>
      <guid>https://dev.to/ryanch79/aws-managed-ad-google-481n</guid>
      <description>&lt;p&gt;&lt;a href="https://dev.to/ryanch79/aws-managed-ad-x-aws-sso-google-workspace-2kf8"&gt;AWS Managed AD x AWS SSOでGoogle Workspaceにログインする&lt;/a&gt;の記事で、AWS Managed Microsoft ADとAWS SSOを利用し、Google Workspaceにシングルサインオンする方法を紹介した。&lt;/p&gt;

&lt;p&gt;シングルサインオンをセットアップしただけなので、この時点ではユーザーの同期（プロビジョニング）は行われていない。つまり、AD側でユーザーを作成したり削除したりしたら、Google側でも同じ操作をしてあげなければならない。&lt;/p&gt;

&lt;p&gt;認証はシングルサインオンで行うのでパスワード管理を別々にする必要はないとしても、これじゃ大規模組織のユーザー管理は非現実的だ。なので、ユーザー同期もセットアップしてみる。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
GoogleはGoogle Cloud Directory Sync（GCDS）というツールを提供しているため、これを利用する。&lt;/p&gt;

&lt;p&gt;設定手順はこちらのGoogleのドキュメントの通りでOK。&lt;br&gt;
&lt;a href="https://cloud.google.com/architecture/identity/federating-gcp-with-active-directory-synchronizing-user-accounts"&gt;https://cloud.google.com/architecture/identity/federating-gcp-with-active-directory-synchronizing-user-accounts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;なお、単純に同期を設定する前に、当然ADとGoogleでは設計思想が異なるしユーザー同期においても色々と検討すべきことがある。かなり長いが、こちらの概要のドキュメントをしっかり読んでおくことをおすすめする。&lt;br&gt;
&lt;a href="https://cloud.google.com/architecture/identity/federating-gcp-with-active-directory-introduction"&gt;https://cloud.google.com/architecture/identity/federating-gcp-with-active-directory-introduction&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
今回は、GCDS専用のEC2インスタンスをt2.mediumでたててそこにC\GCDSインストールした。ユーザー同期用に利用するAD側ユーザー（手順内では「gcds」）は特に管理者権限を与えなくても大丈夫だったので、AWS Managed ADでも特に問題なく利用できる。&lt;/p&gt;

&lt;p&gt;唯一Googleのドキュメントの手順に加えて要検討だったのは「ユーザーのプロビジョニング」→「ユーザー マッピングの構成」の中のユーザーの「Search Rule」だ。&lt;/p&gt;

&lt;p&gt;ここではBase DNを空にしているが、AWS Managed ADはゼロから構築したADとは少しOU構造が異なるので、内部システム用アカウント等を誤って拾わないように、Base DNはAWS Managed ADのユーザーに割り当てられたOUのDNを設定した。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wed64I8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ew8nyo4caeqod8mrcvgw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wed64I8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ew8nyo4caeqod8mrcvgw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;※今回は、NETBIOS名「CREATIVE」を指定しているので、DNは「OU=CREATIVE,DC=your-domain,DC=com」という感じになっている&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
DNの書き方が分からない人は、こういうやりかたで確認できる。&lt;/p&gt;

&lt;p&gt;Active Directory Users and Computersの管理画面から、Advanced Features（詳細設定）を表示させるよう設定する。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VjD19fdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ao27p7rg2no36tb45sw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VjD19fdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ao27p7rg2no36tb45sw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Managed ADで管理されるOUがNETBIOS名で表示されているはずなので（この例では「CREATIVE」）、これを右クリックしてプロパティを表示。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jxarBGT_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvxl6lfq6ai4hrz9lomn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jxarBGT_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvxl6lfq6ai4hrz9lomn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Attribute Editorタブで、&lt;code&gt;distinguishedName&lt;/code&gt;を探して、その値を控えればそれがDNだ。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_2rQy-I9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ntg254egrqnj2kt9drka.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_2rQy-I9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ntg254egrqnj2kt9drka.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
そんなこんなで、GCDSの設定も終わり、AD側で新たに作成したユーザーが問題なくGoogleにも作成されたことを確認できた。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oz1vNf8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uopkindmgnj58wv9acbe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oz1vNf8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uopkindmgnj58wv9acbe.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;あとはこれをまたドキュメントの手順通りに定期実行されるように設定すれば、自動化完了。&lt;/p&gt;

</description>
      <category>aws</category>
      <category>activedirectory</category>
      <category>google</category>
    </item>
  </channel>
</rss>
