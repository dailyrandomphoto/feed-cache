<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>I made a website that makes articles appear like a Twitter thread</title>
      <author>Kunal Bagaria</author>
      <pubDate>Thu, 29 Jul 2021 07:55:06 +0000</pubDate>
      <link>https://dev.to/kb24x7/i-made-a-website-that-makes-articles-appear-like-a-twitter-thread-12pp</link>
      <guid>https://dev.to/kb24x7/i-made-a-website-that-makes-articles-appear-like-a-twitter-thread-12pp</guid>
      <description>&lt;p&gt;Link: &lt;a href="https://threadroll.app"&gt;threadRoll&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So long ago, I came across a product called Thread Reader App, that unrolls Twitter threads into a article format. So this, is exactly the opposite of that.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MzXEX1uN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/il6p4p11qdd8dmpz0dtw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MzXEX1uN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/il6p4p11qdd8dmpz0dtw.png" alt="Website Preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But why?&lt;/p&gt;

&lt;p&gt;I have been asking myself the same question for weeks while I was making this. Basically, people read really long threads in Twitter. So they are habitual to reading them like that, and may find it nostalgic to read everything that way.&lt;/p&gt;

&lt;p&gt;This was made completely from scratch using this tech stack:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;React.js [Next.js], Node.js [Express.js], Auth0 [Authentication]
Deployed on: Vercel [Frontend] and Railway [Backend]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom Article Links&lt;/li&gt;
&lt;li&gt;Save Articles&lt;/li&gt;
&lt;li&gt;Curated Article Recommendations&lt;/li&gt;
&lt;li&gt;Share them with others&lt;/li&gt;
&lt;li&gt;Theme switching&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope you like it. Any feedback is appreciated in the comments!&lt;/p&gt;

</description>
      <category>twitter</category>
      <category>react</category>
      <category>nextjs</category>
      <category>node</category>
    </item>
    <item>
      <title>Custom cursor on a webpage in pure CSS</title>
      <author>Cl√©ment Gaudini√®re</author>
      <pubDate>Thu, 29 Jul 2021 07:38:58 +0000</pubDate>
      <link>https://dev.to/clementgaudiniere/custom-cursor-on-a-webpage-in-pure-css-1dmk</link>
      <guid>https://dev.to/clementgaudiniere/custom-cursor-on-a-webpage-in-pure-css-1dmk</guid>
      <description>&lt;p&gt;Hello everyone, today we are going to look at the cursor property available in CSS. And why not use a custom cursor ?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preintegrated-cursors"&gt;
  &lt;/a&gt;
  Pre-integrated cursors
&lt;/h3&gt;

&lt;p&gt;The CSS allows us to choose a cursor from over thirty pre-built cursors. Some browsers automatically switch to certain cursors, for example when the cursor passes over a link, the browser instinctively understands that it is a clickable element and switches the mouse cursor to the &lt;code&gt;cursor: pointer;&lt;/code&gt; property.&lt;/p&gt;

&lt;p&gt;To summarise, here is a table of almost all the sliders currently available in CSS :&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CSS value&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;auto&lt;/td&gt;
&lt;td&gt;The UA will determine the cursor to display based on the current context. E.g., equivalent to text when hovering text.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;default&lt;/td&gt;
&lt;td&gt;The platform-dependent default cursor. Typically an arrow.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;No cursor is rendered.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;context-menu&lt;/td&gt;
&lt;td&gt;A context menu is available.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pointer&lt;/td&gt;
&lt;td&gt;Help information is available.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;The cursor is a pointer that indicates a link. Typically an image of a pointing hand.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;progress&lt;/td&gt;
&lt;td&gt;The program is busy in the background, but the user can still interact with the interface (in contrast to &lt;code&gt;wait&lt;/code&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cell&lt;/td&gt;
&lt;td&gt;The table cell or set of cells can be selected.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;crosshair&lt;/td&gt;
&lt;td&gt;Cross cursor, often used to indicate selection in a bitmap.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;The text can be selected. Typically the shape of an I-beam.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vertical-text&lt;/td&gt;
&lt;td&gt;The vertical text can be selected. Typically the shape of a sideways I-beam.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;alias&lt;/td&gt;
&lt;td&gt;An alias or shortcut is to be created.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;copy&lt;/td&gt;
&lt;td&gt;Something is to be copied.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;move&lt;/td&gt;
&lt;td&gt;Something is to be moved.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-drop&lt;/td&gt;
&lt;td&gt;An item may not be dropped at the current location. On Windows and Mac OS X, no-drop is the same as not-allowed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;not-allowed&lt;/td&gt;
&lt;td&gt;The requested action will not be carried out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;grab&lt;/td&gt;
&lt;td&gt;Something can be grabbed (dragged to be moved).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;grabbing&lt;/td&gt;
&lt;td&gt;Something is being grabbed (dragged to be moved).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;all-scroll&lt;/td&gt;
&lt;td&gt;Something can be scrolled in any direction (panned). On Windows, all-scroll is the same as move.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col-resize&lt;/td&gt;
&lt;td&gt;The item/column can be resized horizontally. Often rendered as arrows pointing left and right with a vertical bar separating them.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;row-resize&lt;/td&gt;
&lt;td&gt;The item/row can be resized vertically. Often rendered as arrows pointing up and down with a horizontal bar separating them.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zoom-in&lt;/td&gt;
&lt;td&gt;Something can be zoomed (magnified) in.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zoom-out&lt;/td&gt;
&lt;td&gt;Something can be zoomed (magnified) out.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;For more information, you can also consult the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/cursor"&gt;documentation on the CSS cursor property&lt;/a&gt; on the MDN Web Docs site.&lt;/p&gt;

&lt;p&gt;You can see a demo of some of the cursors below :&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/clement-gaudiniere/embed/xxdGNaa?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#custom-cursor"&gt;
  &lt;/a&gt;
  Custom cursor
&lt;/h3&gt;

&lt;p&gt;Fortunately we are not limited to pre-built cursors, we can use custom cursors in pure CSS. &lt;br&gt;
To add a custom cursor, it's quite simple, we use url: cursor: url(one.svg);. But we are not limited to urls, we can also put an svg as in the code below, where we ask the browser to replace our mouse cursor with the svg :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("data:image/svg+xml,%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='24px' height='24px' viewBox='0 0 512 512' style='enable-background:new 0 0 512.011 512.011;' xml:space='preserve'%3E %3Cpath fill='DeepSkyBlue' d='M434.215,344.467L92.881,3.134c-4.16-4.171-10.914-4.179-15.085-0.019  c-2.011,2.006-3.139,4.731-3.134,7.571v490.667c0.003,4.382,2.685,8.316,6.763,9.92c4.081,1.603,8.727,0.545,11.712-2.667  l135.509-145.92h198.016c5.891,0.011,10.675-4.757,10.686-10.648C437.353,349.198,436.226,346.473,434.215,344.467z'/%3E %3C/svg%3E")&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see the result of our code below :&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/clement-gaudiniere/embed/RwVMyae?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope this tutorial has allowed you to add your own custom sliders to your website, or at least to have discovered how to use them, if you have any questions, feel free to ask me in the comments. üëç&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Learning Python-Basic course: Day 24, String Methods Part-3</title>
      <author>Aatmaj</author>
      <pubDate>Thu, 29 Jul 2021 07:35:33 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-basic-course-day-24-string-methods-part-3-1mg9</link>
      <guid>https://dev.to/aatmaj/learning-python-basic-course-day-24-string-methods-part-3-1mg9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-finally-finish-up-with-string-methods-in-case-you-missed-the-previous-part-1-and-part-2-of-string-methods-then-you-can-check-them-out"&gt;
  &lt;/a&gt;
  Today we will finally finish up with string methods. In case you missed the previous &lt;a href="https://dev.to/aatmaj/learning-python-basic-course-day-22-string-methods-part-1-9j8"&gt;part 1&lt;/a&gt; and &lt;a href="https://dev.to/aatmaj/day-23-fi9"&gt;part 2&lt;/a&gt; of string methods, then you can check them out.
&lt;/h2&gt;

&lt;p&gt;String manipulation in Python can be implemented in a very easy way with the use of inbuilt, methods. This comes very handy when we need to manipulate strings while working with complex operations. For example, this saves a lot of code while working with 'front-endish' applications like GUI. Let's say we are writing a password management system and want to check if only alphanumeric vakyes are present. In such cases, the inbuilt functions save code wile compared to long nested for loops. &lt;/p&gt;

&lt;p&gt;Another feature of string slicing can be very handy and save a lot of code, say when you want to reverse strings or take only a part of whole sentences.&lt;/p&gt;




&lt;p&gt;In this part, I am presenting only sample programs, as the methods do not require much explaination and code is commented wherever necessary. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trimming-strings"&gt;
  &lt;/a&gt;
  Trimming Strings
&lt;/h2&gt;

&lt;p&gt;We will now use inbuilt functions to trim strings into parts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt; 1. left justified"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt; 2. Right justified"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rjust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt; 3. Center Aligned"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;#lstrip()   Returns a left trim version of the string
#rstrip()   Returns a right trim version of the string
#strip()    Returns a left and right trim version of the string
&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;output-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; 1. left justified
Python....

 2. Right justified
....Python

 3. Center Aligned
..Python..

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#stripping-strings"&gt;
  &lt;/a&gt;
  Stripping Strings
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;****** left strip()*****&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"   Python Level 2    "&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"length = "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="n"&gt;lst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;     &lt;span class="c1"&gt;#trim
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"length = "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"after the left strip method"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;****** right strip()*****&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;rst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;     &lt;span class="c1"&gt;#trim
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"length = "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rst&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"after the right strip method"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;****** strip()*****&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;sst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;     &lt;span class="c1"&gt;#trim
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"length = "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sst&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"after the strip method"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OUTPUT&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;****** left strip()*****

   Python Level 2    
length =  21
Python Level 2    
length =  18
Python Level 2     after the left strip method

****** right strip()*****

length =  17
   Python Level 2 after the right strip method

****** strip()*****

length =  14
Python Level 2 after the strip method

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#slicing-strings"&gt;
  &lt;/a&gt;
  Slicing Strings
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;****** slicing of strings *****&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;st&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Python Fundamentals"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t\t&lt;/span&gt;&lt;span class="s"&gt;Length = "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[2:8]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[0:len(st)]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[0:4]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;           
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[4:len(st)]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;            
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[3:-5]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;         
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[4:0]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;          
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[4:]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[8:-1]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[8:-3]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OUTPUT&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;****** slicing of strings *****

Python Fundamentals         Length =  19
st[2:8]              thon F
st[0:len(st)]        Python Fundamentals
st[0:4]              Pyth
st[4:len(st)]        on Fundamentals
st[3:-5]             hon Fundame
st[4:0]              
st[4:]               on Fundamentals
st[8:-1]             undamental
st[8:-3]             undament

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reversing-of-strings"&gt;
  &lt;/a&gt;
  Reversing of strings
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Learning Python Course"&lt;/span&gt;
&lt;span class="c1"&gt;# :: and -ve index to reverse the string
&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[4::-1]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[8::-2]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[::-1]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[::-2]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[1::-1]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;][::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[5:10][::-1]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"st[4::3]"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ljust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OUTPUT&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;st[4::-1]            nraeL
st[8::-2]             nnaL
st[::-1]             esruoC nohtyP gninraeL
st[::-2]             ero otPgire
st[1::-1]            eL
st[5:10][::-1]       P gni
st[4::3]             ngyoCr
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So friends that's all for this part. üòä Hope you all are enjoying.üòé Please let me know in the comment section if you liked it or not. üßê And don't forget to like the post if you did. üòç I am open to any suggestions or doubts. ü§† Just post in the comments below or gmail me. üòâ&lt;br&gt;
Thank you for being so patient.üëç&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>python</category>
      <category>learningpython</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My Set of Game Dev Tools</title>
      <author>Cybear Tron</author>
      <pubDate>Thu, 29 Jul 2021 07:27:52 +0000</pubDate>
      <link>https://dev.to/cybeartron/my-set-of-game-dev-tools-d06</link>
      <guid>https://dev.to/cybeartron/my-set-of-game-dev-tools-d06</guid>
      <description>&lt;h1&gt;
  &lt;a href="#so-every-gamedev-has-hisher-own-set-of-tools-that-they-use-to-make-their-own-game-i-have-one-too"&gt;
  &lt;/a&gt;
  So every gamedev has his/her own set of tools that they use to make their own game. I have one too.
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#its-for-making-a-game-if-i-am-all-alone-in-a-team-or-i-have-to-do-a-particular-task-by-myself-in-a-team-if-needed"&gt;
  &lt;/a&gt;
  Its for making a game if I am all alone in a team or I have to do a particular task by myself in a team if needed.
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#for-art"&gt;
  &lt;/a&gt;
  For Art:
&lt;/h2&gt;

&lt;p&gt;### 1) Piskel for Pixel art:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UMuFnDdf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28gqizfff7tjb3mq9k2g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UMuFnDdf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28gqizfff7tjb3mq9k2g.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 Piskel is my goto app for pixel art. I used to use the web version but to me the offline version works better and I can store the files locally. I can set up a preview for a single frame and also for an animation too!! Its very easy to use and actually works.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-krita-for-vector-art-thumbnails-and-quite-everything-else"&gt;
  &lt;/a&gt;
  2) Krita for vector art, Thumbnails and quite everything else:
&lt;/h3&gt;

&lt;p&gt;Krita is my main art editor and I find it quite easy to use. I like making quite everything else that's 2d with krita. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zoye-7nd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0kztvvjj3dkw64o7086.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zoye-7nd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0kztvvjj3dkw64o7086.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-blockbench-for-voxel-art"&gt;
  &lt;/a&gt;
  3) BlockBench for voxel art:
&lt;/h3&gt;

&lt;p&gt;I use blockbench for making voxel art. I am not good at it tho. I use the web app for it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RWifs1OM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dz1k60tnyehur8dn3zdy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RWifs1OM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dz1k60tnyehur8dn3zdy.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 Its quite nice actually.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-music"&gt;
  &lt;/a&gt;
  For Music:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#bosca-ceoil"&gt;
  &lt;/a&gt;
  Bosca Ceoil:
&lt;/h3&gt;

&lt;p&gt;I use Bosca Ceoil for making music for games and other stuff. Its very beginner friendly and we can easily make some nice music even for a programmer.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--olMSbVWm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627541429235/pdFdjrnvy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--olMSbVWm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627541429235/pdFdjrnvy.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-programming"&gt;
  &lt;/a&gt;
  For Programming:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-vscode-for-programming-almost-everything"&gt;
  &lt;/a&gt;
  1) Vscode for Programming almost everything:
&lt;/h3&gt;

&lt;p&gt;I use vscode for coding almost everything. I luv the editor and it has a lot of cool features.&lt;br&gt;
I jus don't use it for stuff like Java (recently in a blog I found myself an ide called jlite) and for godot.&lt;/p&gt;

&lt;p&gt;It has code completion, extensions, debugging support and much much more!!!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pWOSD5ww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627541927490/Oa9tkFIr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pWOSD5ww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627541927490/Oa9tkFIr3.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Not to forget an integrated console!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XqBQR6r3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627542067828/GDHWQXjbq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XqBQR6r3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627542067828/GDHWQXjbq.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-godot-as-game-engine"&gt;
  &lt;/a&gt;
  2) Godot as Game Engine:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cfvknmry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627542586184/rnrV0l6LXI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cfvknmry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627542586184/rnrV0l6LXI.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
I use the free and open source game engine Godot for making games and all. Its a nice little game engine thats very powerful. I luv using it!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6EoKjEyO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627542546432/jBAj_dBda.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6EoKjEyO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627542546432/jBAj_dBda.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I guess thats it for today so bye!!!! :D&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to test your NPM package locally</title>
      <author>Chris Bongers</author>
      <pubDate>Thu, 29 Jul 2021 06:36:35 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/how-to-test-your-npm-package-locally-2b6</link>
      <guid>https://dev.to/dailydevtips1/how-to-test-your-npm-package-locally-2b6</guid>
      <description>&lt;p&gt;We made our very &lt;a href="https://daily-dev-tips.com/posts/publish-your-own-npm-package/"&gt;first NPM package&lt;/a&gt;, and briefly touched on how to test it locally.&lt;/p&gt;

&lt;p&gt;However, I felt this needs some more explanation.&lt;br&gt;
As I hit this wall when making my NPM package.&lt;/p&gt;

&lt;p&gt;You don't want to be that person pushing new versions just so you're able to test if something works.&lt;/p&gt;

&lt;p&gt;And trust me, I did this ü§¶‚Äç‚ôÇÔ∏è.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#link-your-npm-package-locally"&gt;
  &lt;/a&gt;
  Link your NPM package locally
&lt;/h2&gt;

&lt;p&gt;The first step is to open a terminal and navigate to your NPM package on your machine.&lt;/p&gt;

&lt;p&gt;Now execute the following command in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;link&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will link this local package to your globally installed packages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#import-the-link-in-a-test-project"&gt;
  &lt;/a&gt;
  Import the link in a test project
&lt;/h2&gt;

&lt;p&gt;On the other side, we need to link this package to the test project we want to try it out in.&lt;/p&gt;

&lt;p&gt;Navigate to the test project and execute the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;link&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;package-name&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I named my package &lt;code&gt;npm-calculator&lt;/code&gt;, so I have to run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;link &lt;/span&gt;npm-calculator
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, if we look at our node_modules, we can see this is a symlink now!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vJvQajhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627018880474/78ybxp50m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJvQajhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627018880474/78ybxp50m.png" alt="Link a local NPM package"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's also actually try if it works. By creating a test index file, we can import our NPM package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;npm-calculator&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we run the code now, it works. Our NPM package is loaded and worked locally.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oQCfglCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627019052208/_LJY3ELiS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oQCfglCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627019052208/_LJY3ELiS.png" alt="How to test your NPM package locally"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To try this out, edit your NPM package by, for instance, adding a console log. This is just for the sake of testing the local link.&lt;/p&gt;

&lt;p&gt;I'll add a log in the add function.&lt;/p&gt;

&lt;p&gt;Now without doing anything, head back to your test app and re-run the code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N8XAN5Ao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627019207297/kgXI6zSNT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N8XAN5Ao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627019207297/kgXI6zSNT.png" alt="Changed local NPM package"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, our change works right away!&lt;br&gt;
This makes for a much quicker development experience.&lt;br&gt;
And again, once you're happy with this, you can go ahead and &lt;a href="https://daily-dev-tips.com/posts/publish-your-own-npm-package/"&gt;publish your NPM package to the registry&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>npm</category>
      <category>javascript</category>
      <category>testing</category>
    </item>
    <item>
      <title>Regular vs Arrow Function</title>
      <author>Suprabha</author>
      <pubDate>Thu, 29 Jul 2021 06:36:18 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/regular-vs-arrow-function-4kpe</link>
      <guid>https://dev.to/suprabhasupi/regular-vs-arrow-function-4kpe</guid>
      <description>&lt;p&gt;&lt;span&gt;D&lt;/span&gt;efine your functions in many ways.&lt;/p&gt;

&lt;p&gt;One way is using &lt;code&gt;function&lt;/code&gt; keyword:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// function declaration&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Hey &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// function expression&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Hey &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can call both &lt;strong&gt;function declaration&lt;/strong&gt; and &lt;strong&gt;expression&lt;/strong&gt; as Normal/Regular Function&lt;/p&gt;

&lt;p&gt;Arrow function is introduced in &lt;strong&gt;ES6&lt;/strong&gt; and also known as fat arrow function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arrowFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Hey &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you see both functions work same by above example.  Now the question comes why do we need regular or arrow function. &lt;/p&gt;

&lt;p&gt;Let's discuss below üëá&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-syntax"&gt;
  &lt;/a&gt;
  1. &lt;a href="#syntax"&gt;Syntax&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#2-arguments-binding"&gt;
  &lt;/a&gt;
  2. &lt;a href="#arguments"&gt;Arguments binding&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#3-this"&gt;
  &lt;/a&gt;
  3. &lt;a href="#this"&gt;this&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#4-new-keyword"&gt;
  &lt;/a&gt;
  4. &lt;a href="#new"&gt;new keyword&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#5-no-duplicate-named-parameters"&gt;
  &lt;/a&gt;
  5. &lt;a href="#no-duplicate-name"&gt;No duplicate named parameters&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#6-function-hoisting"&gt;
  &lt;/a&gt;
  6. &lt;a href="#function-hoisting"&gt;Function Hoisting&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#7-methods"&gt;
  &lt;/a&gt;
  7. &lt;a href="#methods"&gt;Methods&lt;/a&gt;
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  &lt;h3 id="syntax"&gt;1Ô∏è‚É£ Syntax&lt;/h3&gt;
&lt;/h3&gt;

&lt;p&gt;We can write normal and arrow function in this way üòé&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ES5&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// ES6&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;  &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#implicit-return"&gt;
  &lt;/a&gt;
  Implicit Return
&lt;/h3&gt;

&lt;p&gt;In regular function, you have to use return keyword to return any value. If you don't return anything then the function will return undefined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;regFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Regular Function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;regFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;span class="c1"&gt;// Regular Function&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;regFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Regular Function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;regFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;span class="c1"&gt;// Regular Function&lt;/span&gt;
&lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Arrow functions behave in the same way when returning values.&lt;/p&gt;

&lt;p&gt;If the arrow function contains one expression, you can omit the curly braces, and then the expression will be implicitly returned.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-endraw-not-required-if-its-only-one-line-of-statement"&gt;
  &lt;/a&gt;
  &lt;code&gt;{}&lt;/code&gt; not required if its only one line of statement
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addOne&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;addOne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#-raw-endraw-not-required-if-you-pass-only-one-argument"&gt;
  &lt;/a&gt;
  &lt;code&gt;()&lt;/code&gt; not required if you pass only one argument
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#if-there-is-no-arguments"&gt;
  &lt;/a&gt;
  If there is no arguments
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arrowFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Arrow Function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#arguments-binding"&gt;
  &lt;/a&gt;
  &lt;h3 id="arguments"&gt;2Ô∏è‚É£ Arguments binding&lt;/h3&gt;
&lt;/h3&gt;

&lt;p&gt;In regular function, Arguments keywords can be used to access the arguments of which passed to function.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Example:&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;regularFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;regularFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Arguments[1,2]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Arrow functions do not have an arguments binding.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arrowFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;arrowFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;//ReferenceError: argumnets is not defined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, if you want to access arguments in an arrow function, you can use the rest operator:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arrowFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;arrowFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// 1 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#this"&gt;
  &lt;/a&gt;
  &lt;h3 id="this"&gt;3Ô∏è‚É£ this&lt;/h3&gt;
&lt;/h3&gt;

&lt;p&gt;In regular function, this changes according to the way that function is invoked.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Simple Invocation:&lt;/strong&gt;¬†&lt;code&gt;this&lt;/code&gt;¬†equals the global object or maybe undefined if you are using strict mode.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Method Invocation:&lt;/strong&gt;¬†&lt;code&gt;this&lt;/code&gt;¬†equals the object that owns the method.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Indirect Invocation:&lt;/strong&gt;¬†&lt;code&gt;this&lt;/code&gt;¬†equals the first argument.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Constructor Invocation:&lt;/strong&gt;¬†&lt;code&gt;this&lt;/code&gt;¬†equals the newly created instance.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// 1Ô∏è‚É£ Simple Invocation&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;simpleInvocation&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;simpleInvocation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;span class="c1"&gt;// Window Object&lt;/span&gt;


&lt;span class="c1"&gt;// 2Ô∏è‚É£ Method Invocation&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;methodInvocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;methodInvocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;span class="c1"&gt;// logs methodInvocation object&lt;/span&gt;


&lt;span class="c1"&gt;// 3Ô∏è‚É£ Indirect Invocation&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;aVal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;bVal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;B&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;indirectInvocation&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;indirectInvocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// logs { aVal: 'A' }&lt;/span&gt;
&lt;span class="nx"&gt;indirectInvocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// logs { bVal: 'A' }&lt;/span&gt;


&lt;span class="c1"&gt;// 4Ô∏è‚É£ Constructor Invocation&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;constructorInvocation&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;constructorInvocation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;span class="c1"&gt;// logs an instance of constructorInvocation&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Arrow functions don't have their own &lt;code&gt;this&lt;/code&gt;, and they don‚Äôt redefine the value of &lt;code&gt;this&lt;/code&gt; within the function.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;this&lt;/code&gt; inside an arrow function always refers to this from the outer context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Suprabha&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;supi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;arrowFunc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;regularFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;newObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arrowFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Suprabha&lt;/span&gt;
&lt;span class="nx"&gt;newObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;regularFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// supi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#new"&gt;
  &lt;/a&gt;
  &lt;h3 id="new"&gt;4Ô∏è‚É£ new &lt;/h3&gt;
&lt;/h3&gt;

&lt;p&gt;Regular functions are constructible, they can be called using the new keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, arrow functions can never be used as constructor functions. Hence, they can never be invoked with the new keyword&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// TypeError: add is not a constructor&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#no-duplicate-named-parameters"&gt;
  &lt;/a&gt;
  &lt;h3 id="no-duplicate-name"&gt;5Ô∏è‚É£ No duplicate named parameters &lt;/h3&gt;
&lt;/h3&gt;

&lt;p&gt;In normal function, we can do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ‚úÖ will work &lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c1"&gt;// ‚ùå will not work &lt;/span&gt;
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c1"&gt;// Uncaught SyntaxError: Duplicate parameter name not allowed in this context&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Arrow functions can never have duplicate named parameters, whether in strict or non-strict mode.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arrowFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c1"&gt;// Uncaught SyntaxError: Duplicate parameter name not allowed in this context&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#function-hoisting"&gt;
  &lt;/a&gt;
  &lt;h3 id="function-hoisting"&gt;6Ô∏è‚É£ Function Hoisting&lt;/h3&gt;
&lt;/h3&gt;

&lt;p&gt;In regular function, function gets hoisting at top.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;normalFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;normalFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Normal Function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// "Normal Function"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In arrow function, function get hoisted where you define. So, if you call the function before initialisation you will get referenceError.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;arrowFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arrowFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Arrow Function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// ReferenceError: Cannot access 'arrowFunc' before initialization&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#methods"&gt;
  &lt;/a&gt;
  &lt;h3 id="methods"&gt; 7Ô∏è‚É£ Methods&lt;/h3&gt;
&lt;/h3&gt;

&lt;p&gt;You can define methods in class using regular function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;FullName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;FullName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Suprabha&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;// FullName¬†{name: "Suprabha"}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to apply method as callback also.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;// after 1 second logs ""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But if you bind &lt;code&gt;this&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;// Suprabha&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By above example, you can see that you have to bind the this to there context.&lt;/p&gt;

&lt;p&gt;In arrow function, you don't have to bind with context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;FullName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;FullName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Suprabha&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Suprabha&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#when-not-to-use-arrow-function"&gt;
  &lt;/a&gt;
  When not to use Arrow function üë©üèª‚Äçüíª
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Object Methods&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;jumps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you call &lt;code&gt;dog.jumps&lt;/code&gt;, the number of count does not increase. It is because this is not bound to anything, and will inherit the value of this from its parent scope.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference üßê
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/difference-between-regular-functions-and-arrow-functions/"&gt;GeeksForGeeks normal vs arrow function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;In regular function, &lt;code&gt;this&lt;/code&gt; value is dynamic, In arrow function it equals to this of the outer function.&lt;/p&gt;

&lt;p&gt;In regular function, arguments will give you list of parameter passed in function, In arrow function arguments is not defined.&lt;/p&gt;

&lt;p&gt;In regular function, you always have to return any value, but in Arrow function you can skip return keyword and write in single line.&lt;/p&gt;

&lt;p&gt;In arrow function parameters should be unique.&lt;/p&gt;

&lt;p&gt;Hoisting matters in arrow function as function get not be invoked before initialisations.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
Thanks for reading the article ‚ù§Ô∏è&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/suprabhasupi"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aDe0OdcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/4t25pJE.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        üåü &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        üë©üèª‚Äçüíª &lt;a href="https://www.suprabha.me/"&gt; suprabha.me&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        üåü &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Dockerize and Deploy a Laravel Application to Production</title>
      <author>Edouard Bonlieu</author>
      <pubDate>Thu, 29 Jul 2021 06:23:28 +0000</pubDate>
      <link>https://dev.to/koyeb/dockerize-and-deploy-a-laravel-application-to-production-3326</link>
      <guid>https://dev.to/koyeb/dockerize-and-deploy-a-laravel-application-to-production-3326</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Laravel is a popular, simple and flexible PHP application framework.&lt;br&gt;
Laravel comes with many build features offering a great developer experience such as thorough dependency injection, an expressive database abstraction layer, queues and scheduled jobs, unit and integration testing, and more.&lt;/p&gt;

&lt;p&gt;In this guide, we will explain how to dockerize and deploy a Laravel application to production using Docker to containerize our application and deploy it to the Koyeb Serverless Platform.&lt;/p&gt;

&lt;p&gt;By deploying your Laravel application on Koyeb, you benefit from native autoscaling, autohealing, TLS encryption, global load balancing across our edge network, service discovery, and more.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;p&gt;To successfully follow and complete this guide, you need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt; installed on your machine

&lt;ul&gt;
&lt;li&gt;A &lt;a href="https://app.koyeb.com"&gt;Koyeb account&lt;/a&gt; to deploy and run the Laravel web application&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://dev.to/docs/cli/installation"&gt;Koyeb CLI&lt;/a&gt; installed to interact with Koyeb from the command line&lt;/li&gt;
&lt;li&gt;Have a registry we will use to store our Laravel web app Docker image and deploy it on Koyeb&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h2&gt;

&lt;p&gt;To successfully deploy a Laravel web application on the Koyeb serverless platform, you need to follow these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#create-a-new-laravel-application"&gt;&lt;strong&gt;Create a new Laravel application&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dockerize-the-laravel-application"&gt;&lt;strong&gt;Dockerize the Laravel application&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#push-the-docker-image-to-a-container-registry"&gt;&lt;strong&gt;Push the Docker image to a container registry&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploy-the-dockerized-laravel-web-app-on-koyeb"&gt;&lt;strong&gt;Deploy the Dockerized Laravel web app on Koyeb&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#create-a-new-laravel-application"&gt;
  &lt;/a&gt;
  Create a new Laravel application
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;If you already have an existing Laravel application you want to dockerize and deploy on Koyeb, you can jump to the next step.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To get started, we will create a new Laravel project using Composer, a PHP package manager. In your terminal, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer create-project &lt;span class="nt"&gt;--prefer-dist&lt;/span&gt; laravel/laravel laravel-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will create a new Laravel application in the &lt;code&gt;laravel-demo&lt;/code&gt; directory and install all the dependencies required by the app to run properly.&lt;/p&gt;

&lt;p&gt;You can launch the application in development mode by running the following command in your terminal from the &lt;code&gt;laravel-demo&lt;/code&gt; directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php artisan serve
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open a browser window and navigate to the &lt;code&gt;http://localhost:8000&lt;/code&gt; URL. You should see the Laravel welcome page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dockerize-the-laravel-application"&gt;
  &lt;/a&gt;
  Dockerize the Laravel application
&lt;/h2&gt;

&lt;p&gt;With our minimalistic Laravel application ready, we can now create the Dockerfile that we will use to containerize our Laravel application.&lt;/p&gt;

&lt;p&gt;We will use the &lt;code&gt;webdevops/php-nginx:7.4-alpine&lt;/code&gt; as the base image which provides Nginx with PHP-FPM installed and configured. The image can be customized depending on your needs. You can read the full documentation &lt;a href="https://dockerfile.readthedocs.io/en/latest/content/DockerImages/dockerfiles/php-nginx.html"&gt;here&lt;/a&gt;.&lt;br&gt;
In your application directory, create a new file named &lt;code&gt;Dockerfile&lt;/code&gt; and paste the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; webdevops/php-nginx:7.4-alpine&lt;/span&gt;

&lt;span class="c"&gt;# Install Laravel framework system requirements (https://laravel.com/docs/8.x/deployment#optimizing-configuration-loading)&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;apk add oniguruma-dev postgresql-dev libxml2-dev
&lt;span class="k"&gt;RUN &lt;/span&gt;docker-php-ext-install &lt;span class="se"&gt;\
&lt;/span&gt;        bcmath &lt;span class="se"&gt;\
&lt;/span&gt;        ctype &lt;span class="se"&gt;\
&lt;/span&gt;        fileinfo &lt;span class="se"&gt;\
&lt;/span&gt;        json &lt;span class="se"&gt;\
&lt;/span&gt;        mbstring &lt;span class="se"&gt;\
&lt;/span&gt;        pdo_mysql &lt;span class="se"&gt;\
&lt;/span&gt;        pdo_pgsql &lt;span class="se"&gt;\
&lt;/span&gt;        tokenizer &lt;span class="se"&gt;\
&lt;/span&gt;        xml

&lt;span class="c"&gt;# Copy Composer binary from the Composer official Docker image&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --from=composer:latest /usr/bin/composer /usr/bin/composer&lt;/span&gt;

&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; WEB_DOCUMENT_ROOT /app/public&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; APP_ENV production&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;composer &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--no-interaction&lt;/span&gt; &lt;span class="nt"&gt;--optimize-autoloader&lt;/span&gt; &lt;span class="nt"&gt;--no-dev&lt;/span&gt;
&lt;span class="c"&gt;# Optimizing Configuration loading&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;php artisan config:cache
&lt;span class="c"&gt;# Optimizing Route loading&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;php artisan route:cache
&lt;span class="c"&gt;# Optimizing View loading&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;php artisan route:cache

&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;chown&lt;/span&gt; &lt;span class="nt"&gt;-R&lt;/span&gt; application:application .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you probably noticed, we don't specify the &lt;code&gt;CMD&lt;/code&gt; to tell Docker how to run our container.&lt;br&gt;
This is because the base image &lt;code&gt;FROM webdevops/php-nginx:7.4-alpine&lt;/code&gt; run the Nginx and PHP-FPM in the foreground and we inherit this command.&lt;/p&gt;

&lt;p&gt;If your application requires additional php extensions, you can install them using the &lt;code&gt;docker-php-ext-install&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In this guide we will push the Docker image to the Docker Hub. You are free to use another different registry as Koyeb allows you to deploy from any container registry.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To build the image run the following command and replace &lt;code&gt;&amp;lt;DOCKER_HUB_USERNAME&amp;gt;&lt;/code&gt; with your own.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; &amp;lt;DOCKER_HUB_USERNAME&amp;gt;/laravel-demo &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the build is complete, you can run the image locally to ensure everything is working as expected.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; 9000:80 &amp;lt;DOCKER_HUB_USERNAME&amp;gt;/laravel-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#push-the-docker-image-to-a-container-registry"&gt;
  &lt;/a&gt;
  Push the Docker image to a container registry
&lt;/h2&gt;

&lt;p&gt;Now that we have our Docker image ready, we can push it to the Docker Hub by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker push &amp;lt;DOCKER_HUB_USERNAME&amp;gt;/laravel-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the image is successfully pushed to the Docker Hub, we can use it to deploy the Laravel application on Koyeb.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploy-the-dockerized-laravel-web-app-on-koyeb"&gt;
  &lt;/a&gt;
  Deploy the Dockerized Laravel web app on Koyeb
&lt;/h2&gt;

&lt;p&gt;With the previous steps completed, we can now deploy our application on production to Koyeb.&lt;br&gt;
This section explains how to deploy on the Koyeb serverless platform using the CLI. This operation can also be performed using the &lt;a href="https://app.koyeb.com"&gt;control panel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, we need to create a Koyeb Secret containing the Docker Hub configuration to deploy private images. In your terminal execute the following command and replace &lt;code&gt;&amp;lt;DOCKER_HUB_USERNAME&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;DOCKER_HUB_TOKEN&amp;gt;&lt;/code&gt;&lt;br&gt;
with your own.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s1"&gt;'{
  "auths": {
    "index.docker.io/v1/": {
      "username": "&amp;lt;DOCKER_HUB_USERNAME&amp;gt;",
      "password": "&amp;lt;DOCKER_HUB_TOKEN&amp;gt;"
    }
  }
}'&lt;/span&gt; | koyeb secrets create docker-hub-credentials &lt;span class="nt"&gt;--value-from-stdin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now deploy the Laravel application by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;koyeb app init laravel-demo &lt;span class="nt"&gt;--docker&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;DOCKER_HUB_USERNAME&amp;gt;/laravel-demo"&lt;/span&gt; &lt;span class="nt"&gt;--docker-private-registry-secret&lt;/span&gt; docker-hub-credentials
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command creates a new Koyeb App and deploy the Laravel application using the Docker image. To retrieve your Koyeb App URL and access your application, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$koyeb&lt;/span&gt; app get laravel-demo
ID                                      NAME            DOMAINS                                 UPDATED AT
d58ebed1-48c0-46b7-a2f1-91f3ffdbcccc    laravel-demo    laravel-demo-&amp;lt;YOUR_ORG&amp;gt;.koyeb.app       2021-06-28 12:46:55.411403 +0000 UTC
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the URL in your browser to access your application running on Koyeb.&lt;/p&gt;

&lt;p&gt;This guide shows how easy it is to deploy your Laravel application in production using Docker and Koyeb.&lt;br&gt;
Thanks to Koyeb native global load balancing edge network, your content is distributed near your users and your app comes with native TLS encryption.&lt;/p&gt;

&lt;p&gt;To learn more about what Koyeb has to offer, check out the &lt;a href="https://dev.to/features"&gt;features&lt;/a&gt; page.&lt;/p&gt;

</description>
      <category>php</category>
      <category>tutorial</category>
      <category>docker</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Resumable file upload with TUS protocol</title>
      <author>Swoichha Adhikari</author>
      <pubDate>Thu, 29 Jul 2021 06:19:01 +0000</pubDate>
      <link>https://dev.to/jankaritech/resumable-file-upload-with-tus-protocol-5c3b</link>
      <guid>https://dev.to/jankaritech/resumable-file-upload-with-tus-protocol-5c3b</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"Work half done is still some work done"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We all have faced problems while uploading a file. Whether it is an error with a file exceeding the maximum upload size or failing to write a file to disk.&lt;/p&gt;

&lt;p&gt;Here, in this blog, we are going to talk about partial upload failing. We all have been to that place where we have uploaded a huge file and have been waiting for minutes if not hours to finish the uploading process. Finally, the moment comes when our upload is about to be completed but then some error occurs, and our upload fails.&lt;/p&gt;

&lt;p&gt;Now, you have to go through all the trouble to re-upload it, which is irritating as well as time-consuming.&lt;/p&gt;

&lt;p&gt;There might be various factors for such failure. Such as a weak internet connection, your browser might crash, etc.&lt;br&gt;
So, what can we do? Should we re-upload the whole file? But then again the re-uploading process will take the same amount of time and effort that it required earlier. If only there was a way that we could continue from where the last failure occurred.&lt;/p&gt;

&lt;p&gt;Well, we are in luck because the answer is simple, "TUS upload".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tus"&gt;
  &lt;/a&gt;
  What is TUS?
&lt;/h2&gt;

&lt;p&gt;TUS stands for Transloadit Upload Server.&lt;/p&gt;

&lt;p&gt;"TUS is a protocol for resumable uploads built on HTTP. It offers simple, cheap, and reusable stacks for clients and servers. It supports any programming-language, any platform, and any network."&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-tus"&gt;
  &lt;/a&gt;
  Why TUS?
&lt;/h2&gt;

&lt;p&gt;So, the question may arise, Why do we need TUS? The thing about TUS is that it allows us to continue uploading our file from where we left off even after it has failed previously.&lt;/p&gt;

&lt;p&gt;For example, We are trying to upload a file of 100 GB and due to some interruption, we were able to upload only 60 GB of the data. Normally, we would re-upload the file which means we will be uploading the 60 GB of the same data that was already uploaded in a prior upload. But, using TUS we won't need to upload that 60 GB we will be uploading the remaining 40 GB of data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It is built upon HTTP and supports any programming-language, any platform, and any network.&lt;/li&gt;
&lt;li&gt;The main advantage of using TUS is that you can start uploading files from the point where you left off last time.&lt;/li&gt;
&lt;li&gt;It is open source. So, anyone can use and contribute to it.&lt;/li&gt;
&lt;li&gt;It allows the user the ability to pause and resume the upload anytime they want(even after multiple days).&lt;/li&gt;
&lt;li&gt;It can handle increasing numbers of connections and uploads.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To see a demo of how it works you can visit the &lt;a href="https://tus.io/demo.html"&gt;Resumable File Upload Demo&lt;/a&gt; and for real-life implementation of TUS resumable upload protocol have a look at &lt;a href="https://tus.io/implementations.html"&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This brings us to the end of this blog. In the next blog, we will look into specifications for the TUS protocol and its HTTP methods.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Flutter - deploying your app to Play Store</title>
      <author>Jacob Hunsaker</author>
      <pubDate>Thu, 29 Jul 2021 06:12:26 +0000</pubDate>
      <link>https://dev.to/mimanjh/flutter-deploying-your-app-to-play-store-2nnc</link>
      <guid>https://dev.to/mimanjh/flutter-deploying-your-app-to-play-store-2nnc</guid>
      <description>&lt;p&gt;I've had some luck to study and work with flutter these days. Flutter is a Google's UI kit, made for cross-platforms, meaning that with just one set of codes, it can be used to run in Android, iOS, and Web. Pretty neat, right?&lt;/p&gt;

&lt;p&gt;Anyways, I've been hitting my keyboard here and there, and was lucky enough to create two simple apps and deploy it on both Play Store and App Store. Flutter has a pretty nice documentation, so you can follow &lt;a href="https://flutter.dev/docs/deployment/android"&gt;that&lt;/a&gt; directly. However, if you're like me, who understands better by reading/watching at somebody who does it then this post will do. Today, I'll be sharing my experience on how I did it with some tips alongside (assuming you know the basics of flutter).&lt;/p&gt;

&lt;p&gt;This post will discuss how to deploy an app to Play Store. If you're interested in how to publish an app on App Store, follow this &lt;a href="https://dev.to/mimanjh/flutter-deploying-your-app-to-app-store-3afp"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've used Android Studio to develop in flutter, and Visual Studio should be work the same. You should create a Play Console account and pay a one-time $25 to activate the account for publishing to work.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#android"&gt;
  &lt;/a&gt;
  Android
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-add-a-launcher-icon"&gt;
  &lt;/a&gt;
  1. Add a launcher icon.
&lt;/h2&gt;

&lt;p&gt;Let's first start off by setting a launcher icon. This can be done, thanks to romannurik, at this &lt;a href="https://romannurik.github.io/AndroidAssetStudio/icons-launcher.html#foreground.type=clipart&amp;amp;foreground.clipart=android&amp;amp;foreground.space.trim=1&amp;amp;foreground.space.pad=0.25&amp;amp;foreColor=rgba(96%2C%20125%2C%20139%2C%200)&amp;amp;backColor=rgb(68%2C%20138%2C%20255)&amp;amp;crop=0&amp;amp;backgroundShape=square&amp;amp;effects=none&amp;amp;name=ic_launcher"&gt;site&lt;/a&gt;. I'll name the icon, "icon_logo.png". Once you've created what the launcher icon, create an assets folder in your project directory and put your icon in it. &lt;br&gt;
Now let's be more technical. We'll be using one of flutter packages called &lt;a href="https://pub.dev/packages/flutter_launcher_icons"&gt;flutter_launcher_icons&lt;/a&gt; to change the app icon. In your pubspec.yaml file, add/update the following lines appropriately. The latest version for flutter_launcher_icons was 0.9.0 in my case. Remember that indentation is very important for yaml files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nl"&gt;dev_dependencies:&lt;/span&gt;
  &lt;span class="nl"&gt;flutter_launcher_icons:&lt;/span&gt; &lt;span class="s"&gt;"^0.9.0"&lt;/span&gt;

&lt;span class="nl"&gt;flutter_icons:&lt;/span&gt;
  &lt;span class="nl"&gt;android:&lt;/span&gt; &lt;span class="s"&gt;"launcher_icon"&lt;/span&gt;
  &lt;span class="nl"&gt;ios:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nl"&gt;image_path:&lt;/span&gt; &lt;span class="s"&gt;"assets/icon_logo.png"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then, run this command in terminal at your project directory and your app launcher icon will change.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;flutter pub clean &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; flutter pub get &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; flutter pub run flutter_launcher_icons:main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-change-the-name-of-the-app-amp-bundle"&gt;
  &lt;/a&gt;
  2. Change the name of the App &amp;amp; Bundle.
&lt;/h2&gt;

&lt;p&gt;We'll be running some terminal commands to make this happen, using a flutter package called &lt;a href="https://pub.dev/packages/rename"&gt;rename&lt;/a&gt;. You can set your app name to whatever you want, with any language. your bundleId can also be anything, but the typical format is com.companyname.appname.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;flutter pub global activate rename
flutter pub global run rename &lt;span class="nt"&gt;--appname&lt;/span&gt; YourAppName
flutter pub global rename &lt;span class="nt"&gt;--bundleId&lt;/span&gt; com.company.appname
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-keyproperties"&gt;
  &lt;/a&gt;
  3. key.properties
&lt;/h2&gt;

&lt;p&gt;Now let's create a file called key.properties in the android directory, in the same level as local.properties. Inside, copy and paste the following four lines of code and adjust according to your wants. storePassword and keyPassword are usually the same. the value for storeFile can change to wherever you put your keystore in the next step.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;storePassword=pw
keyPassword=pw
keyAlias=upload
storeFile=../app/upload-keystore.jks 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-generating-key"&gt;
  &lt;/a&gt;
  4. Generating key.
&lt;/h2&gt;

&lt;p&gt;This section is divided into two, depending on whether your developing device is Windows or Mac.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#windows"&gt;
  &lt;/a&gt;
  Windows
&lt;/h3&gt;

&lt;p&gt;Copy and adjust the following code to your appropriate directories. Run it on cmd. First address is where your java keytool lies, and the second address after -keystore is where you want to download the key, as well as its name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;C:&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;"Program Files"&lt;/span&gt;&lt;span class="se"&gt;\A&lt;/span&gt;ndroid&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;"Android Studio"&lt;/span&gt;&lt;span class="se"&gt;\j&lt;/span&gt;re&lt;span class="se"&gt;\b&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="se"&gt;\k&lt;/span&gt;eytool &lt;span class="nt"&gt;-genkeypair&lt;/span&gt; &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="nt"&gt;-keystore&lt;/span&gt; C:&lt;span class="se"&gt;\U&lt;/span&gt;sers&lt;span class="se"&gt;\A&lt;/span&gt;dministrator&lt;span class="se"&gt;\u&lt;/span&gt;pload-keystore.jks &lt;span class="nt"&gt;-storetype&lt;/span&gt; JKS &lt;span class="nt"&gt;-keyalg&lt;/span&gt; RSA &lt;span class="nt"&gt;-keysize&lt;/span&gt; 2048 &lt;span class="nt"&gt;-validity&lt;/span&gt; 10000 &lt;span class="nt"&gt;-alias&lt;/span&gt; upload

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#mac"&gt;
  &lt;/a&gt;
  Mac
&lt;/h3&gt;

&lt;p&gt;It's easier for Mac users, since you can simply just copy and paste the following code to the terminal and you're set.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;keytool &lt;span class="nt"&gt;-genkey&lt;/span&gt; &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="nt"&gt;-keystore&lt;/span&gt; ~/upload-keystore.jks &lt;span class="nt"&gt;-keyalg&lt;/span&gt; RSA &lt;span class="nt"&gt;-keysize&lt;/span&gt; 2048 &lt;span class="nt"&gt;-validity&lt;/span&gt; 10000 &lt;span class="nt"&gt;-alias&lt;/span&gt; upload
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next thing I would suggest you do is to move the key to where your app resides: inside android/app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-update-gitignore"&gt;
  &lt;/a&gt;
  5. Update .gitignore
&lt;/h2&gt;

&lt;p&gt;Since we've now added key.properties and our key into the app, we don't want those to be uploaded into GitHub. In our .gitignore file inside the android directory, you can simply add key.properties and app/upload-keystore.jks to prevent that from happening.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-update-androidmanifest-and-buildgradle"&gt;
  &lt;/a&gt;
  6. Update AndroidManifest and build.gradle
&lt;/h2&gt;

&lt;p&gt;In your android/src directory, there are three AndroidManifest.xml files. In the one in main, make sure that the following codes are added. Remember that indentations are very important in xml files.&lt;br&gt;
Add the following before the android block:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;   def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }

   android {
         ...
   }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Find and replace the buildTypes block with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;   signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }
   buildTypes {
       release {
           signingConfig signingConfigs.release
       }
   }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One thing I've noticed is, when you leave the buildType to release, debugging won't work. Hence, when you're done with releasing, return it back to signingConfigs.debug so that you can debug and develop.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-review-your-app"&gt;
  &lt;/a&gt;
  7. Review your app.
&lt;/h2&gt;

&lt;p&gt;Read through the &lt;a href="https://flutter.dev/docs/deployment/android#reviewing-the-app-manifest"&gt;documentation&lt;/a&gt; to see if you didn't miss any app-breaking mistakes to be fixed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-create-app-bundle"&gt;
  &lt;/a&gt;
  8. Create app bundle.
&lt;/h2&gt;

&lt;p&gt;We are almost done! Now that our app is ready to be deployed, we will create an app bundle to upload to Play Console. Remember to run the following code in the project directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;flutter build appbundle
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your app bundle will now be located at [project]/build/app/outputs/bundle/release/app.aab.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-play-console"&gt;
  &lt;/a&gt;
  9. Play Console.
&lt;/h2&gt;

&lt;p&gt;At the &lt;a href="https://play.google.com"&gt;Play Console&lt;/a&gt;, create a developer account and create a new app. Upload your app bundle you've created above at the Production tab. Once you do that, Play Store is great in telling what needs to be done to successfully publish an app. Fill in all of the information until you can submit for approval. Once it is approved, your app will be deployed to Play Store.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-updating-your-app"&gt;
  &lt;/a&gt;
  10. Updating your app.
&lt;/h2&gt;

&lt;p&gt;After editing or adding functionalities to your app, you'll have to update the version of the app. Play Store won't accept the same version number to be uploaded. Therefore, we have to go to pubspec.yaml and update the version of your app. &lt;a href="https://flutter.dev/docs/deployment/android#updating-the-apps-version-number"&gt;Flutter documentation for version control&lt;/a&gt; is somewhat confusing. Basically, 1.0.0 is the version number and the number after + is the build number. Whenever there is a minor update, you should update the version as the following: 1.0.1+2. The next iteration will be 1.0.2+3, and so forth. Then, you'll build the app again and create another app bundle to post on Play Console. You can now add another version there.&lt;/p&gt;




&lt;p&gt;That sums up on how to publish an app on Play Store for flutter apps. If you're also interested in how to publish an app on App Store, follow this &lt;a href="https://dev.to/mimanjh/flutter-deploying-your-app-to-app-store-3afp"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If there are things I could improve on, please don't hesitate to let me know! I'm all ears :)&lt;/p&gt;

&lt;p&gt;-JH&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/jacobjhunsaker/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/mimanjh"&gt;Github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>flutter</category>
      <category>tutorial</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>24 Sexy Looking VS Code Themes to look cool in CafeüòÇ</title>
      <author>coderwatchHQ</author>
      <pubDate>Thu, 29 Jul 2021 05:43:37 +0000</pubDate>
      <link>https://dev.to/coderwatch/24-sexy-looking-vs-code-themes-to-look-cool-in-cafe-53o8</link>
      <guid>https://dev.to/coderwatch/24-sexy-looking-vs-code-themes-to-look-cool-in-cafe-53o8</guid>
      <description>&lt;p&gt;I'm certain that there are a ton of designers out there that would prefer not to get sore eyes from working the entire day with a light-themed IDE. &lt;/p&gt;

&lt;p&gt;Actually, my table is dark, my office is dim on account of a power outage in the Window since you know, an excessive amount of light is irritating.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#cobalt2-theme-official"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2"&gt;Cobalt2 Theme Official&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9vZVPWwH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/wesbos/cobalt2-vscode/cobalt2-updates/images/ss.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9vZVPWwH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/wesbos/cobalt2-vscode/cobalt2-updates/images/ss.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An amazing dark category theme by Wes Bos. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#noctis"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=liviuschera.noctis"&gt;Noctis&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JwQtW18z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/liviuschera/noctis/master/images/noctis.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JwQtW18z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/liviuschera/noctis/master/images/noctis.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Noctis is a collection of light &amp;amp; dark themes with a well balanced blend of warm and cold colors&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-touch-of-lilac"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=alexnho.a-touch-of-lilac-theme"&gt;A touch of Lilac&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ApHH05e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/alexnho/vscode-a-touch-of-lilac-theme/master/images/html.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ApHH05e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/alexnho/vscode-a-touch-of-lilac-theme/master/images/html.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lilac tinted color UI theme with vibrant syntax highlighting colors for Visual Studio Code. It also has a No-Italics version.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#synthwave-84"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=RobbOwen.synthwave-vscode"&gt;SynthWave '84&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ReP0Hy---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/robb0wen/synthwave-vscode/master/theme.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ReP0Hy---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/robb0wen/synthwave-vscode/master/theme.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A Synthwave-inspired colour theme to satisfy your neon dreams&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#andromeda"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=EliverLara.andromeda"&gt;Andromeda&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UsLZEFvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/EliverLara/Andromeda/raw/master/images/andromeda.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UsLZEFvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/EliverLara/Andromeda/raw/master/images/andromeda.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aurora-x"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=marqu3s.aurora-x"&gt;Aurora X&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dlHox95E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/marqu3s10/Aurora-X/raw/master/images/screenshot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dlHox95E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/marqu3s10/Aurora-X/raw/master/images/screenshot.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Minimalistic looking based on Material Theme&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cyberpunk"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=max-SS.cyberpunk"&gt;Cyberpunk&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MsrYst0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Murderlon/cyberpunk-iterm/blob/master/preview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MsrYst0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Murderlon/cyberpunk-iterm/blob/master/preview.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hacker colorscheme for iTerm &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#one-monokai-theme"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=azemoh.one-monokai"&gt;One Monokai Theme&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MdjuSGdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/azemoh/vscode-one-monokai/raw/master/screenshot-v0.2.0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MdjuSGdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/azemoh/vscode-one-monokai/raw/master/screenshot-v0.2.0.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A cross between Monokai and One Dark theme&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celestial"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=apvarun.celestial"&gt;Celestial&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KqWcxz43--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/apvarun/celestial-theme/master/Preview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KqWcxz43--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/apvarun/celestial-theme/master/Preview.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;VS Code theme for all the people who love to code in deep dark spaces.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remedy"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=robertrossmann.remedy"&gt;Remedy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e_gxj8EG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/robertrossmann/vscode-remedy/master/resources/screenshots/peekview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e_gxj8EG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/robertrossmann/vscode-remedy/master/resources/screenshots/peekview.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A dark &amp;amp; bright theme with orange accents with roots in Base16 - Eighties colour theme&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#atom-one"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=emroussel.atomize-atom-one-dark-theme"&gt;Atom ONE&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="" class="article-body-image-wrapper"&gt;&lt;img alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A detailed and accurate Atom One Dark Theme&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#palenight"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=AlexDauenhauer.nocterial-palenight"&gt;Palenight&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JCuU-Dz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/alexdauenhauer/nocterial-palenight/main/images/python_sample.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JCuU-Dz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/alexdauenhauer/nocterial-palenight/main/images/python_sample.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This theme takes Noctis syntax highlighting and replaces color scheme with Material Palenight. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bluberry-dark"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=peymanslh.blueberry-dark-theme"&gt;Bluberry Dark&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--87elJFj8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/peymanslh/vscode-blueberry-dark-theme/master/screenshot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--87elJFj8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/peymanslh/vscode-blueberry-dark-theme/master/screenshot.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blueberry Dark Theme for Visual Studio Code&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nord"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=arcticicestudio.nord-visual-studio-code"&gt;Nord&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OaW_ORt0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627281592263/p1ZXOT2jL.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OaW_ORt0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627281592263/p1ZXOT2jL.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An arctic, north-bluish clean and elegant Visual Studio Code theme.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gruvbox-material"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=sainnhe.gruvbox-material"&gt;Gruvbox Material&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hsZb-4Jl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gitlab.com/sainnhe/img/-/raw/master/gm-vsc-dark-soft-high-contrast.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hsZb-4Jl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gitlab.com/sainnhe/img/-/raw/master/gm-vsc-dark-soft-high-contrast.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HdUQPYvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gitlab.com/sainnhe/img/-/raw/master/gm-vsc-light-medium-material.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HdUQPYvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gitlab.com/sainnhe/img/-/raw/master/gm-vsc-light-medium-material.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gruvbox with Material Palette&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shadows-of-purple"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=ahmadawais.shades-of-purple"&gt;Shadows of Purple&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="" class="article-body-image-wrapper"&gt;&lt;img alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ü¶Ñ A professional theme suite with hand-picked &amp;amp; bold shades of purple for your VS Code editor and terminal apps. One of the excellent, most downloaded, and top-rated VSCode Themes on the marketplace. Part of VSCode.pro course.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#radical"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=dhedgecock.radical-vscode"&gt;Radical&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xf_7TLaY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/DHedgecock/radical-vscode/master/assets/editor.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xf_7TLaY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/DHedgecock/radical-vscode/master/assets/editor.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A dark theme for radical hacking inspired by retro futuristic design&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ayu"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=teabyii.ayu"&gt;Ayu&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="" class="article-body-image-wrapper"&gt;&lt;img alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A simple theme with bright colors and comes in three versions ‚Äî dark, light and mirage for all day long comfortable work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chalice"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=artlaman.chalice-color-theme"&gt;Chalice&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6-uOTN-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/artlaman/chalice-color-theme/master/preview-dark.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6-uOTN-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/artlaman/chalice-color-theme/master/preview-dark.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Minimalistic color themes based on Alabaster theme&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#helium"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=DhyeyThumar.helium-theme"&gt;Helium&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KIwrIWeo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Dhyeythumar/helium-vscode/main/images/example.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KIwrIWeo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Dhyeythumar/helium-vscode/main/images/example.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;VS Code Theme Color&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#zeonica"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=andrewvallette.zeonica"&gt;Zeonica&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h22___tq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://zeonica.com/images/zeonica_screenshot_home.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h22___tq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://zeonica.com/images/zeonica_screenshot_home.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A colorful original theme with a dark blue background &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hipster"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=ModoNoob.vscode-hipster-theme"&gt;Hipster&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWlftNz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/lalevac/vscode-hipster-theme/master/screenshot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWlftNz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/lalevac/vscode-hipster-theme/master/screenshot.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A very colorful theme inspired by Atom's Hipster theme.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#laserwave"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=jaredkent.laserwave"&gt;Laserwave&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sgvjYP1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Jaredk3nt/laserwave/8ae402fa54d73ba36cd5810383cedd564dd1244e/screenshot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sgvjYP1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Jaredk3nt/laserwave/8ae402fa54d73ba36cd5810383cedd564dd1244e/screenshot.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Retro outrun syntax theme&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#city-lights"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=Yummygum.city-lights-theme"&gt;City Lights&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Npd1KXn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://citylights.xyz/assets/images/theme/vsc-syntax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Npd1KXn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://citylights.xyz/assets/images/theme/vsc-syntax.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The City Lights Color Theme is a gorgeous dark color theme designed with focus in mind.&lt;/p&gt;




&lt;p&gt;These are our picks for the best Visual Studio Code topics. We trust this article assists you with picking another subject and give the general stylish of your coding arrangement a facelift. Things being what they are, which of these Visual Studio Code subjects do you like the most? &lt;/p&gt;

&lt;p&gt;Tell us in the comments segment underneath. Additionally, in the event that you utilize a subject that we haven't referenced yet ought to be on the rundown, don't spare a moment to impart it to others in the comments.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Image credits -&amp;gt; All the images credits to the publisher and developers of these amazing themes. *&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>vscode</category>
      <category>programming</category>
      <category>developers</category>
    </item>
    <item>
      <title>7 Best Blender Courses for Beginners to learn 3D Modeling in 2021</title>
      <author>hiticmangal</author>
      <pubDate>Thu, 29 Jul 2021 05:33:15 +0000</pubDate>
      <link>https://dev.to/hiticmangal/7-best-blender-courses-for-beginners-to-learn-3d-modeling-in-2021-kfa</link>
      <guid>https://dev.to/hiticmangal/7-best-blender-courses-for-beginners-to-learn-3d-modeling-in-2021-kfa</guid>
      <description>&lt;p&gt;After Reviewing about 20+ Blender courses we have picked these 7 Courses from Udemy that you can enroll to learn &lt;strong&gt;3D Modeling in Blender&lt;/strong&gt;. We have picked the best courses based on the real student's reviews, Course content &amp;amp; and how updated the lectures are. As technology is always progressing we need to always refer to the latest content. We have picked the below Tutorials that you can buy in 2021 to learn Blender Designing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--22IWQmTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yjnlpg4k82xn82r8ixiv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--22IWQmTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yjnlpg4k82xn82r8ixiv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-best-blender-course-for-beginners-certifications-amp-tutorials-online-in-2021-updated"&gt;
  &lt;/a&gt;
  5 Best Blender Course for Beginners, Certifications &amp;amp; Tutorials Online in 2021 [Updated]
&lt;/h2&gt;

&lt;p&gt;Below is the list of Top Blender courses from udemy and you can enroll in any course or bunch of courses at a time at a price of about $9.99 to $15 which is about a 95% discount on the original price. The Promotional offer will be automatically applied to the courses and you don't have to search for any coupon codes as the best Voucher will be applied automatically.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-complete-blender-creator-learn-3d-modelling-for-beginners"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://click.linksynergy.com/deeplink?id=iES2LKDPLgo&amp;amp;mid=39197&amp;amp;u1=medium&amp;amp;murl=https://www.udemy.com/course/blendertutorial/"&gt;Complete Blender Creator: Learn 3D Modelling for Beginners&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Bk498OO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onen3q4ybf5m3q2fmrnj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Bk498OO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onen3q4ybf5m3q2fmrnj.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to learn Blender and you are a beginner this is the best course for you to start. It is the Best seller course on Udemy and the best value course due to its pricing with respect to the content quality. In this course, you will learn to Use Blender to Create Beautiful 3D Models for Video Games, 3D Printing &amp;amp; More. &lt;br&gt;
The Course is rated 4.6 out of 5 by more than 38k students and about 200k students are already enrolled in this class. The instructor of this course is always updating the lectures with the latest version of Blender and the course is being updated to BLENDER 2.8. The best thing about the Udemy course is you will get lifetime access to the courses and any new lectures. So, once enrolled in any classes you will get lifetime free upgraded lectures.&lt;br&gt;
Learn how to create 3D Models and Assets for games using Blender, the free-to-use 3D production suite. We start super simple so you‚Äôll be ok with little or no experience. With our online tutorials, you‚Äôll be amazed at what you can achieve. The course is project-based, so you will applying your new skills immediately to real 3D models. All the project files will be included, as well as additional references and resources ‚Äî you‚Äôll never get stuck. There are talking-head videos, powerful diagrams, quality screencasts, and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Rating: 4.6/5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Number of Students: 197k+&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Number of Lectures: 65 Hours of 374+ Lectures&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-creating-3d-environments-in-blender"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://click.linksynergy.com/deeplink?id=iES2LKDPLgo&amp;amp;mid=39197&amp;amp;u1=medium&amp;amp;murl=https://www.udemy.com/course/blender-environments/"&gt;Creating 3D environments in Blender&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lFUP_wJg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ninvz6rodu1tl7m8j96z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lFUP_wJg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ninvz6rodu1tl7m8j96z.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are already familiar with Blender Designing and want to learn to design Environment scenes then you can enroll in this course. Remember if you are a beginner then I recommend enrolling in the first course from above too to get a solid understanding of Blender although this course is also for the beginner. This course helps you creating wonderful environment scenes, organizing your workflow, and find the right inspiration. This course is one of the best for learning environment scene designing and has a rating of 4.6 with 57000 students already learned from this online class.&lt;/p&gt;

&lt;p&gt;Learn Creating stunning unique environments and Organize your workflow to make large environment scenes to create all scene assets, including buildings, rocks, grass, trees, and more. This course is not only a technical education, but it also covers topics like focus, inspiration, and organization. I believe that a well-organized focused designer, with the right inspiration, will be able to make every 3D dream come to life. This course is well documented and guides you through the process of creating 3D scenes in Blender 2.81.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Rating: 4.6/5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Number of Students: 57k+&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Number of Lectures: 66 Hours of 418+ Lectures&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-blender-character-creator-v20-for-video-games-design"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://click.linksynergy.com/deeplink?id=iES2LKDPLgo&amp;amp;mid=39197&amp;amp;u1=medium&amp;amp;murl=https://www.udemy.com/course/blendercharacters/"&gt;Blender Character Creator v2.0 for Video Games Design&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The above two courses were about learning Blender and creating Environment in Blender. Now, this course is about creating Game characters in Blender. You will learn to design Model Video Game Characters. Use The Sculpt Tool To Shape, Add Texture, Rig &amp;amp; Animate Video Game Characters. &lt;/p&gt;

&lt;p&gt;These are the steps to learn complete Blender and all of the courses can be referenced to learn complete Blender Modeling. Now, this course is also the best seller with the highest of 4.7 Rating by more than 1000 students. This course has been created using Blender 2.83 and is compatible with newer versions of Blender.&lt;/p&gt;

&lt;p&gt;The entire course is project-based, so you will apply your new skills immediately to real 3D models. All the project files will be included, as well as additional references and resources ‚Äî you‚Äôll never get stuck. There are talking-head videos, powerful diagrams, quality screencasts, and more. The course will show you how to create a highly detailed, great-looking character for your portfolio as well as turning that same character into an asset ready to be implemented into a video game engine.&lt;/p&gt;

&lt;p&gt;Learn to Create a character from start to finish using &lt;strong&gt;Blender&lt;/strong&gt; and Animate your character. Use the sculpt tools to shape the broad-level details of your character. Texture paint your character to give it color and details. Rig (add bones) to your character so that it can be animated and much more. And finally, Add your character into the Unity game engine if you choose to do so. Take your first steps to becoming a 3D character artist ‚Äî learn everything from modeling to painting to animating the character. The course is the sequel to the highly popular Blender Character Creator course, enjoyed by 10s of thousands of students.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Rating: 4.6/5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Number of Students: 15k+&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Number of Lectures: 66 Hours of 418+ Lectures&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-the-blender-28-encyclopedia"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://click.linksynergy.com/deeplink?id=iES2LKDPLgo&amp;amp;mid=39197&amp;amp;u1=medium&amp;amp;murl=https://www.udemy.com/course/the-blender-encyclopedia/"&gt;The Blender 2.8 Encyclopedia&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is another most complete beginner-to-advanced guide for Blender 2.8x created by Lee Salvemini, Chris Plush &amp;amp; CG Masters. It has a rating of 4.7 by more than 1.5k students. All lectures are organized in a learning path, so you can watch this course from start to finish, or skip around if you‚Äôre more experienced! Learn how to build a professional studio-quality character rig from start to finish, then learn all the tools you need to animate it!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Blender 2.8 Encyclopedia&lt;/strong&gt;, the most comprehensive training course available covering all aspects of Blender 3D, a completely free 3D production suite. The newest release series, Version 2.8, is the biggest upgrade yet, with many new features and improvements. The Blender 2.8 Encyclopedia will be of use throughout your entire 3D journey. No matter what job you‚Äôve been entrusted with, or creative idea you want to make a reality, this is the most important reference guide you‚Äôll own.&lt;/p&gt;

&lt;p&gt;This course will not teach you how to design, or how to view and imagine 3D objects, if you have previous experience in paper and pencil about shapes and how does parallel projection work then this is the only right course you can find online, it teaches in a very clear way step by step how to use the software, and now it's up to you to be organized and creative while using it. As a teacher, I can't recommend this any enough! this is great content, I have a bad internet connection so I ended up downloading half of what I watch so far, to make sure I can see where is the clicking, But if you expecting a course to teach you how to model a bottle of water, you will only learn how to model a bottle of water, this course teaches you how to use the tools, and leave it an open end for you to use it properly!&lt;/p&gt;

&lt;p&gt;Although the course also includes lots of examples of modeling, I think its the greats courses ever, as a beginner, now I know if something if possible or not, and then i can search more about it if I really need to. although its 100% covered in this course.&lt;br&gt;
I can't be any happier with this course, it's perfect so far.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Rating: 4.6/5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Number of Students: 7k+&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Number of Lectures: 52 Hours of 431+ Lectures&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-blender-for-complete-and-total-beginners"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://click.linksynergy.com/deeplink?id=iES2LKDPLgo&amp;amp;mid=39197&amp;amp;u1=medium&amp;amp;murl=https://www.udemy.com/course/blender-3d-for-complete-and-total-beginners/"&gt;Blender for Complete and Total Beginners&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Starting to learn 3D modeling from the absolute start then you can choose the course as it‚Äôs best for start &lt;strong&gt;learning Modeling and Rendering in Blender&lt;/strong&gt;. This Tutorial is rated 4.8/5 by about 115 students. This is a new course and the Instructor of this class is Chris Plug and CD Masters who have to start the recording and teaching of this course in March 2021. &lt;/p&gt;

&lt;p&gt;So, you can expect very new content from these courses. You will learn the most fundamental concepts of 3D art and Blender and a Full step-by-step project on creating a fun pirate raft scene from start to finish. This course is using the latest Blender version 2.92 and future classes will be recorded using the new versions. As it is a beginner tutorial you will need Absolutely no experience with 3D or Blender.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Rating: 4.8/5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Number of Students: 645+&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Number of Lectures: 5+ Hours of 65+ Lectures&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-blender-environment-artist-create-3d-worlds"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://click.linksynergy.com/deeplink?id=iES2LKDPLgo&amp;amp;mid=39197&amp;amp;u1=medium&amp;amp;murl=https://www.udemy.com/course/blenderenvironment/"&gt;Blender Environment Artist: Create 3D Worlds&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is an &lt;strong&gt;Environment designing Blender&lt;/strong&gt; class to &lt;strong&gt;Learn Blender 2.8 basics&lt;/strong&gt; &amp;amp; its Eevee Rendering Engine. Create 3D Assets For Video Games &amp;amp; Make Unique Environment Props. It is a 4.5 rated course with about 18k online students. It uses the latest Blender 2.8 to Create marvelous materials and textures that bring your worlds to life. In this class, you will learn to Cleverly light your environments to create different moods and atmospheres. Use procedural textures to create new geometry. Blender is completely free to use and allows you to export your creations into any game engine, including Unity and Unreal.&lt;/p&gt;

&lt;p&gt;This course starts simple, so no previous experience with 3D modeling is required. We cover modeling, texturing, lighting, layout, and many more core aspects needed for an environment artist. With our online tutorials, you‚Äôll be amazed at what you can achieve. The entire course is project-based, so you will apply your new skills immediately to real 3D models. All the project files will be included, as well as additional references and resources you‚Äôll never get stuck. We provide challenges and solutions at each step to make sure that you are learning by doing and not just watching someone else make art.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Rating: 4.6/5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Number of Students: 7k+&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Number of Lectures: 52 Hours of 431+ Lectures&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-learn-blender-the-right-way"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://click.linksynergy.com/deeplink?id=iES2LKDPLgo&amp;amp;mid=39197&amp;amp;u1=https://www.udemy.com/course/learn-blender-28/"&gt;Learn Blender The Right Way!&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is a Course to &lt;strong&gt;Learn 3D Modeling, Materials, Lights, Render, and Animation in Blender!&lt;/strong&gt; The Content is created by Gustavo Rosa and was updated in 2021. This is far rated course with over 4.7 ratings by more than 1200+ Students and about 5000 students already enrolled in this Class. Learn From Zero ‚Äî Understand and use Blender Interface. In this course, you will learn about Blender‚Äôs interface and fundamental concepts. In addition, you &lt;/p&gt;

&lt;p&gt;will learn to:&lt;br&gt;
Create and transform objects&lt;br&gt;
Use polygonal modeling tools to create your own objects.&lt;br&gt;
Map, texture, and create materials of various types, including PBR materials with PBR textures.&lt;br&gt;
Lighten and render scenes using EEVEE and Cycles;&lt;br&gt;
Illuminate scenes using HDR images.&lt;br&gt;
Configure hierarchies between objects.&lt;br&gt;
Create simple animations.&lt;/p&gt;

&lt;p&gt;So, these are the Blender courses you can refer to if you want to learn Game designing. If you want my recommendation then I recommend you to first enroll in the first course and learn Blender Basics then gradually you can increase efficiency in creating Environment and Game characters. You can enroll in all of the 3 Courses and learn to complete Blender. The first course is also enough but extra practice will make you perfect.&lt;br&gt;
I always recommend keeping practicing as just enrolling and watching classes won't make you a Game designer or anything. You will soon forget what you learned if won't use that skills. It's better to select any simple game and try to replicate its characters and schemes as in beginning you will have a problem in getting Ideas. So, the start will recreate already created designs.&lt;/p&gt;

&lt;p&gt;Disclaimer: Some of the links may be affiliate links and we may get a part of the Commission for any sale through those links.&lt;/p&gt;

</description>
      <category>blender</category>
      <category>dmodeling</category>
      <category>gamedesigning</category>
    </item>
    <item>
      <title>Coder trying no-code Software/APP and Website Development solutions</title>
      <author>Cybear Tron</author>
      <pubDate>Thu, 29 Jul 2021 05:30:09 +0000</pubDate>
      <link>https://dev.to/cybeartron/coder-trying-no-code-software-app-and-website-development-solutions-4dfg</link>
      <guid>https://dev.to/cybeartron/coder-trying-no-code-software-app-and-website-development-solutions-4dfg</guid>
      <description>&lt;p&gt;Hwlo There !! Another episode of our series "Tryin em Out".&lt;/p&gt;

&lt;p&gt;So today we will try some no-code software and website development solutions. Me being a coder, I code and develop my apps myself. So this will be fun to see the difference and the limitations and advantages too!!!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#app-developent"&gt;
  &lt;/a&gt;
  App Developent:
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-pandasuite-studio-so-i-found-this-app-called-pandasuite-studio-it-seemed-fun-and-was-free-so-i-downloaded-it-and-installed-it-after-installing-and-all-i-was-to-create-a-new-app-none-of-the-templates-suited-to-me-so-yea-blank-app-i-named-it-hwlo-spammer-cuz-i-want-to-spam-hwlo-on-the-screen-with-it-if-it-can-allow-me-to-i-set-the-res-for-pc-apps-lol-so-i-was-brought-to-a-rather-beautiful-scene"&gt;
  &lt;/a&gt;
  1 PandaSuite Studio: So I found this app called PandaSuite Studio. It seemed fun and was free. So I downloaded it and installed it. After installing and all I was to create a new app. None of the templates suited to me so yea blank app. I named it Hwlo Spammer Cuz I want to spam hwlo on the screen with it if it can allow me to. I set the res for pc apps lol!! So I was brought to a rather beautiful scene:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MYy8VZ5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/slrh99pflwjjllizkj03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MYy8VZ5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/slrh99pflwjjllizkj03.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CX97_8XO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ppvyeub3w4fl0h781nmc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CX97_8XO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ppvyeub3w4fl0h781nmc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I planned on adding some images &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KE9BeVfn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4275im6g017nlcdpy92l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KE9BeVfn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4275im6g017nlcdpy92l.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 I always have weird images on the pc so I added a bg texture image. Resized it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kX9P5KBR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djqbzaf5qhgmwzv0wxoy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kX9P5KBR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djqbzaf5qhgmwzv0wxoy.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 I added some text (adjusting which was quite finnicky) Then I saved it cuz I have a habit of damn jus ctrl+s-ing. Doing not that makes me anxious (I cant damn lose progress lol.. I need help). Ah the saving takes a while.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXwFsBZ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wbi2jal2jgh0gkcmhl0q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXwFsBZ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wbi2jal2jgh0gkcmhl0q.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Uhh the preview... It does nothing till now so lets add some functionality.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1YbLX5Ph--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wt7susd8895h409f43jm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1YbLX5Ph--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wt7susd8895h409f43jm.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wow. A lot of options. I tried doing some stuff but had to resort to searching for a tutorial on this. Ok there were some tutorials but I am irritated now. How can people bear this much self pain on themselves other than jus learning to code. Wow. I cant f*cking understand how to actually get that interactive area change the empty text area I have. It has a frickin action to let you interact with another component with that interactive area when its damn clicked, BUT NO!! THEY WON'T LET YOU HAHA!! ALL OF THIS IS AN ILLUSION!! IT MAKES YOU FEEL LIKE ITS TOO EASY AND IT WILL BE BETTER FOR YOU TO ACTUALLY USE THIS BUT NO!!! YOU CANT DO A FRICKING THING CUZ THEY WONT LET YOU!!! I will still give it another try you know... for seeing if I used it wrong with another app.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u8woaxkf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bk9be085qxgmrn9j6f8w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u8woaxkf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bk9be085qxgmrn9j6f8w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OH WELL NO!! FEED YOUR MONEY TO OUR NON-EXISTENT FAT PANDA SO THAT YOU CAN WASTE YOUR TIME EVEN FURTHER? NO WAY SIR NO WAY!! INTO THE OBLIVION YOU GO. I angrily uninstalled it.&lt;/p&gt;

&lt;p&gt;Oh yea I have signed up to a lot of sketchy and normal alike sites today.. and My eyes are messed up because of the never ending light mode of these sites and hashnode's dark mode and I cant see some part and rainbow style stuff is there.... So please like this and share.....&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#web-development-carrd-i-found-this-site-called-carrd-that-will-help-us-to-make-a-nice-landing-page-for-ourselves-i-found-myself-a-good-template-and-here-we-are"&gt;
  &lt;/a&gt;
  Web Development: Carrd: I found this site called Carrd that will help us to make a nice landing page for ourselves. I found myself a good template and here we are:
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PwjgPMq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91e0f9w42w8i4bfs9nbv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PwjgPMq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91e0f9w42w8i4bfs9nbv.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
It had some weird settings and all but at the last I had a site&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cmEwd_5O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/npnce62sg8c6rpcwx4ws.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cmEwd_5O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/npnce62sg8c6rpcwx4ws.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The link to My new portfolio site&lt;/p&gt;

&lt;p&gt;This was a rather short one as I didn't get quite enough time because of me being in a game jam so BYE!!!&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
