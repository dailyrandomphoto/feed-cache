<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Day 63 - 65/100 Project: A Programming Language</title>
      <author>Rio Cantre</author>
      <pubDate>Fri, 19 Nov 2021 08:04:52 +0000</pubDate>
      <link>https://dev.to/riocantre/day-63-65100-project-a-programming-language-1cl</link>
      <guid>https://dev.to/riocantre/day-63-65100-project-a-programming-language-1cl</guid>
      <description>&lt;p&gt;"The evaluator, which determines the meaning of expressions in a programming language, is just another program."&lt;/p&gt;

&lt;p&gt;â€“ Hal Abelson and Gerald Sussman, Structure and Interpretation of Computer Programs&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MMHbqVGH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/87ka6gar0uy7k5pl9ot3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MMHbqVGH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/87ka6gar0uy7k5pl9ot3.png" alt="egg" width="880" height="529"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>programming</category>
      <category>challenge</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Singleton Pattern | Design Patterns in Java</title>
      <author>coder4life</author>
      <pubDate>Fri, 19 Nov 2021 07:47:23 +0000</pubDate>
      <link>https://dev.to/coder4_life/singleton-pattern-design-patterns-in-java-3pm9</link>
      <guid>https://dev.to/coder4_life/singleton-pattern-design-patterns-in-java-3pm9</guid>
      <description>&lt;p&gt;Creational design pattern: Watch a Java implementation of the Singleton Pattern, where we use double-checked-locking (DCL) for thread-safety.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/5qCrqUD91Ao"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Contributing to a Class Repo</title>
      <author>Leyang Yu</author>
      <pubDate>Fri, 19 Nov 2021 07:42:00 +0000</pubDate>
      <link>https://dev.to/lyu4321/contributing-to-a-class-repo-3one</link>
      <guid>https://dev.to/lyu4321/contributing-to-a-class-repo-3one</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;One of the courses I previously took at Seneca, IPC144, is getting a major overhaul to their website, and through my open source class, I had the opportunity to contribute to this project. There was a huge &lt;a href="https://github.com/Seneca-ICTOER/IPC144/issues/18"&gt;meta issue&lt;/a&gt; with all the pages that needed to be updated and I decided to take on the task of auditing and fixing the arrays.md page because I like arrays ðŸ™‚ðŸ™‚&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#approaching-the-task"&gt;
  &lt;/a&gt;
  Approaching the Task
&lt;/h2&gt;

&lt;p&gt;If you take a look at the &lt;a href="https://github.com/Seneca-ICTOER/IPC144/issues/40"&gt;issue&lt;/a&gt;, there was quite a significant list of things to be completed. I first forked and cloned the issue, created a new branch for my issue (called issue-40) and started up the website to see how it looked. After this, I tackled the list one by one, checking off tasks as I completed them and creating commits for each one.&lt;/p&gt;

&lt;p&gt;Some of the changes I made included:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fixing typos&lt;/li&gt;
&lt;li&gt;adding intra-site links and adding descriptive text to links&lt;/li&gt;
&lt;li&gt;adding Frontmatter
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;arrays&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Arrays"&lt;/span&gt;
&lt;span class="na"&gt;sidebar_position&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;slug&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/data-structures/arrays&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;An&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;array&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;data&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;structure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;consisting&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;of&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;an&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ordered&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;set&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;of&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;elements&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;of&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;common&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;type&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;that&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;are&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;stored&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;contiguously&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;memory."&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;adding syntax highlighting&lt;/li&gt;
&lt;li&gt;fixing some HTML that was causing console errors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, in the HTML tables, there were no &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; tags which caused the &lt;code&gt;&amp;lt;tr&amp;gt; cannot appear as a child of &amp;lt;table&amp;gt;&lt;/code&gt; error and the columns were using colspan instead of colSpan.&lt;/p&gt;

&lt;p&gt;I pushed all these changes to the issue-40 branch and created a pull request in the main repository.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#receiving-reviews"&gt;
  &lt;/a&gt;
  Receiving Reviews
&lt;/h2&gt;

&lt;p&gt;I received so many helpful reviews to my pull request. For example, the image on the page was difficult to see in dark mode and I had forgotten to add alt text. Two of my classmates, &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/76#issuecomment-969101607"&gt;Tengzhen&lt;/a&gt; and  &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/76#issuecomment-969762369"&gt;Minsu&lt;/a&gt; pointed these out to me and Tengzhen suggested that I could save the image and add a white background so that the black text would still be visible on a black background. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jFB11TsX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s00hy2swx3c927fbum5j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jFB11TsX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s00hy2swx3c927fbum5j.png" alt="Image Before" width="880" height="134"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is what the image looked like before. As you can see, the circled text is barely visible in dark mode. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XQ4lGzlH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04s37z3bve1i0tgfhecz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XQ4lGzlH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04s37z3bve1i0tgfhecz.png" alt="Image After" width="880" height="129"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the fix, it's clearer. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/76#issuecomment-970201478"&gt;Jerry&lt;/a&gt; suggested that I could convert the tables to images since the tables didn't look great on all screen sizes and in his case, he needed to scroll to see the full table. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A-bvP6cV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6j9i1d3ygs81sx7rrgo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A-bvP6cV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6j9i1d3ygs81sx7rrgo.png" alt="Table Before" width="880" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is how a table looked for Jerry.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wRDY2vDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u50v4bohozeoi2u4ncwn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wRDY2vDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u50v4bohozeoi2u4ncwn.png" alt="Table After" width="880" height="241"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the fix, all the tables are images and resize according to the page size.&lt;/p&gt;

&lt;p&gt;Finally, &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/76#discussion_r750541451"&gt;Kien&lt;/a&gt; pointed out a typo as well as a &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/76#discussion_r750543605"&gt;broken link&lt;/a&gt; on the page. &lt;/p&gt;

&lt;p&gt;Although I had checked over my work before creating the pull request, I guess the great thing about open source is even if you miss something, you can get a lot of great input from the community and suggestions on how to make things even better. It was a bit overwhelming working on such a large meta issue because everyone had different ways of approaching the tasks, but it was a great learning experience and made me very appreciative of working with a open source community. &lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>HTML tags | bdo</title>
      <author>Carlos Espada</author>
      <pubDate>Fri, 19 Nov 2021 07:22:52 +0000</pubDate>
      <link>https://dev.to/carlosespada/html-tags-bdo-5fnc</link>
      <guid>https://dev.to/carlosespada/html-tags-bdo-5fnc</guid>
      <description>&lt;p&gt;The &lt;code&gt;&amp;lt;bdo&amp;gt;&lt;/code&gt; element (&lt;em&gt;Bi-Directional Override&lt;/em&gt;) &lt;strong&gt;overrides the current directionality of text&lt;/strong&gt;, so that the text within is rendered in a different direction.&lt;/p&gt;

&lt;p&gt;The text's characters are drawn from the starting point in the given direction; the individual characters' orientation is not affected (so characters don't get drawn backward, for example).&lt;/p&gt;

&lt;p&gt;It has a &lt;code&gt;dir&lt;/code&gt; attribute to specify the direction in which text should be rendered in this element's contents. Possible values are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ltr&lt;/code&gt;: Indicates that the text should go in a left-to-right direction.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rtl&lt;/code&gt;: Indicates that the text should go in a right-to-left direction.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most browsers will display the &lt;code&gt;&amp;lt;bdo&amp;gt;&lt;/code&gt; element with the following default CSS value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bdo {
  unicode-bidi: bidi-override;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Type: &lt;em&gt;inline&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Self-closing: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Semantic value: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/tags/tag_bdo.asp"&gt;Definition&lt;/a&gt; | &lt;a href="https://www.w3schools.com/tags/tryit.asp?filename=tryhtml_bdo"&gt;Example&lt;/a&gt; | &lt;a href="https://caniuse.com/mdn-html_elements_bdo"&gt;Support&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>tags</category>
      <category>bdo</category>
    </item>
    <item>
      <title>Git Tip: Keeping an eye on the source repository</title>
      <author>Abhinav Pandey</author>
      <pubDate>Fri, 19 Nov 2021 07:20:52 +0000</pubDate>
      <link>https://dev.to/abh1navv/git-tip-keeping-an-eye-on-the-source-repository-3jk6</link>
      <guid>https://dev.to/abh1navv/git-tip-keeping-an-eye-on-the-source-repository-3jk6</guid>
      <description>&lt;h3&gt;
  &lt;a href="#why-do-i-need-to-check-out-a-source-repository-alongside-my-forked-repository"&gt;
  &lt;/a&gt;
  Why do I need to check out a source repository alongside my forked repository?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It helps you to compare the source code of the forked repository with the source code of the source repository.&lt;/li&gt;
&lt;li&gt;It also helps you to see the changes made in the source repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#checking-out-the-source-repository"&gt;
  &lt;/a&gt;
  Checking out the source repository
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: &lt;br&gt;
Open a Git Bash terminal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: &lt;br&gt;
Change directory to the directory where you have cloned the repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;: &lt;br&gt;
Check out the source branch.&lt;br&gt;
Command syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote add repo_name url_of_source_repository
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Runnning the command will add a remote repository named "repo_name" to the local repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;: &lt;br&gt;
Fetch the source branch.&lt;br&gt;
Command syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git fetch repo_name master 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Runnning the command will fetch the master branch from the remote repository.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#comparing-the-two-repositories"&gt;
  &lt;/a&gt;
  Comparing the two repositories
&lt;/h4&gt;

&lt;p&gt;To compare the two repositories, you can use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git diff &lt;span class="nt"&gt;--stat&lt;/span&gt; origin/master repo_name/master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The option &lt;code&gt;--stat&lt;/code&gt; shows the number of added, deleted, and modified lines and not the actual content of the files. Don't use &lt;code&gt;--stat&lt;/code&gt; if you want to see the actual content of the files.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#checking-latest-commits-in-the-source-repository"&gt;
  &lt;/a&gt;
  Checking latest commits in the source repository
&lt;/h4&gt;

&lt;p&gt;To see the latest commits in the source repository, you can use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--oneline&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--graph&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--after&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--before&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;author] repo_name/master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The option &lt;code&gt;--oneline&lt;/code&gt; shows the commit message.&lt;br&gt;
The option &lt;code&gt;--graph&lt;/code&gt; is used to show the commit graph.&lt;br&gt;
The option &lt;code&gt;--after=date&lt;/code&gt; shows the commits after the date.&lt;br&gt;
The option &lt;code&gt;--before=date&lt;/code&gt; shows the commits before the date.&lt;br&gt;
The option &lt;code&gt;--author=author&lt;/code&gt; shows the commits made by the author.&lt;/p&gt;

&lt;p&gt;There can be many more options to filter the commits. Check the &lt;a href="https://git-scm.com/docs/git-log"&gt;Git log documentation&lt;/a&gt; for more information.&lt;/p&gt;




&lt;p&gt;Thank you for reading! If you want to connect with me, you can find me on Twitter &lt;a href="https://twitter.com/abh1navv"&gt;@abh1navv&lt;/a&gt; &lt;/p&gt;

</description>
      <category>git</category>
      <category>beginners</category>
      <category>bash</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>The Open Source Story - Open Sourcing RudderStack Blog and Docs</title>
      <author>RudderStack</author>
      <pubDate>Fri, 19 Nov 2021 07:05:37 +0000</pubDate>
      <link>https://dev.to/rudderstack/the-open-source-story-open-sourcing-rudderstack-blog-and-docs-482j</link>
      <guid>https://dev.to/rudderstack/the-open-source-story-open-sourcing-rudderstack-blog-and-docs-482j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#its-all-about-open-source"&gt;
  &lt;/a&gt;
  It's all About Open Source
&lt;/h2&gt;

&lt;p&gt;Open source is a component of almost all software development that takes place today. If you look back, the influence has been potent. For example, the main reason Python became the language most-suited for machine learning is the open-source contributors. In fact, because of the enormous size of the open-source community that is tirelessly developing Python,Â &lt;a href="https://www.wired.com/2015/11/google-open-sources-its-artificial-intelligence-engine/"&gt;Google open-sourced TensorFlow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Joe Worrall, Director of Open Source and Developer Advocacy at New Relic,Â &lt;a href="https://blog.newrelic.com/product-news/contributor-centric-systems/"&gt;describes&lt;/a&gt;Â the dynamics behind the power of building contributor-centric systems:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"Contributors don't give to the cause. They are a part of it."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;RudderStack is an open-source customer data pipeline tool for developers. Being open source is a tag we wear with pride, so much so that we recently partnered with GitHub forÂ &lt;a href="https://github.com/sponsors"&gt;GitHub Sponsors for Companies&lt;/a&gt;. We value the developer community that works hard to build and support open-source projects. In a recentÂ &lt;a href="https://rudderstack.com/blog/RudderStack-gitHub-sponsors-making-open-source-more-sustainable-for-developers"&gt;blog&lt;/a&gt;, we explained why RudderStack directly compensates developers for their contributions to our project. This post discusses why and how we open-sourced our content and took the next step in our open source journey.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-we-open-sourced-our-blog-and-docs"&gt;
  &lt;/a&gt;
  Why we Open Sourced our Blog and Docs
&lt;/h2&gt;

&lt;p&gt;Said simply, bringing more voices to the table increases our content's quality and value, both in thought leadership and our technical documentation.&lt;/p&gt;

&lt;p&gt;We want developers to share their ideas, thoughts, and findings while working with RudderStack, customer data, and data in general. We want to learn about the data stacks you are building, problems you are solving, and solutions you are creating. Blogs, tutorials, and even case studies are great ways to share that knowledge. In short, we want you to contribute!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#our-previous-blog-infrastructure"&gt;
  &lt;/a&gt;
  Our Previous Blog Infrastructure
&lt;/h2&gt;

&lt;p&gt;We usedÂ &lt;a href="https://wordpress.org/"&gt;WordPress&lt;/a&gt;Â for our blog before we decided to open source it. WordPress itself is open source and is fantastic for its simplicity, SEO settings, advertising, and flexible themes. In fact, WordPress is theÂ &lt;em&gt;numero uno&lt;/em&gt;Â choice of bloggers for hosting their own websites as perÂ &lt;a href="https://www.techradar.com/in/best/cms"&gt;Tech Radar&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From a site performance and version-control standpoint, though, it's less straightforward than more modern tooling. Also, to allow contribution, you have to use some sort of plugin (likeÂ &lt;a href="https://wordpress.org/plugins/user-submitted-posts/"&gt;User Submitted Posts&lt;/a&gt;), a less-than-ideal experience for developers, and opens up your dashboard to outside users.&lt;/p&gt;

&lt;p&gt;All-in-all, building an open-source, version-controlled blog that enables developers to create content and submit it via pull requests easily is a cumbersome and tricky process on WordPress.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-source-frameworks-options-for-our-blog"&gt;
  &lt;/a&gt;
  Open Source Frameworks Options for our Blog
&lt;/h2&gt;

&lt;p&gt;When we decided to open-source our blog and docs, we were spoilt for choices. Today there are multiple well-supported and fully-featured frameworks for open-source content creation. Some of the options that we considered wereÂ &lt;a href="https://ghost.org/features/"&gt;Ghost&lt;/a&gt;,Â &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;,Â &lt;a href="https://gohugo.io/"&gt;Hugo&lt;/a&gt;,Â &lt;a href="https://nanoc.ws/"&gt;Nanoc&lt;/a&gt;, andÂ &lt;a href="https://www.gatsbyjs.com/"&gt;Gatsby&lt;/a&gt;. There are even more frameworks beyond these, and each tool has its pros and cons. Which one do we recommend? Well, we don't. The best tool for you is the one that fulfills your requirements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-we-picked-gatsby"&gt;
  &lt;/a&gt;
  Why we Picked Gatsby
&lt;/h2&gt;

&lt;p&gt;We pickedÂ &lt;a href="https://www.gatsbyjs.com/docs"&gt;Gatsby.js&lt;/a&gt;Â as the framework for open-sourcing our content. While making the decision, Jekyll was a strong contender, but the final choice for us was Gatsby.&lt;/p&gt;

&lt;p&gt;Here's why we chose it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Writing content in Gatsby is simple and developer-friendly. It uses Markdown for formatting. It just takes two plugins to set it up (&lt;code&gt;gatsby-source-filesystem&lt;/code&gt;Â andÂ &lt;code&gt;gatsby-transformer-remark&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;  Integration with GitHub Pages is simple, which was a priority for us.&lt;/li&gt;
&lt;li&gt;  Gatsby has a rich library of plugins, which you can use for extending and introducing additional functionalities (in fact, through GitHub Sponsors, we had aÂ &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-rudderstack/"&gt;RudderStack plugin&lt;/a&gt;Â made!)&lt;/li&gt;
&lt;li&gt;  Implementing Gatsby is relatively straightforward in most cases. You can check theirÂ &lt;a href="https://www.gatsbyjs.com/docs/quick-start/"&gt;docs&lt;/a&gt;Â to see how to get started with Gatsby.js.&lt;/li&gt;
&lt;li&gt;  Gatsby is super high performance, meaning speedy page load times.&lt;/li&gt;
&lt;li&gt;  Gatsby allows creating an interactive experience for the readers.&lt;/li&gt;
&lt;li&gt;  A vast modern web development community contributes to it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wait-what-about-the-docs"&gt;
  &lt;/a&gt;
  Wait, What About the Docs?
&lt;/h2&gt;

&lt;p&gt;Our docs still run on Gitbook but are now open-sourced so that others can contribute. We are currently exploring other open-source frameworks like Slate that will give us more flexibility and better telemetry. We will write another post when we make a decision and complete the migration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-are-open-source-now"&gt;
  &lt;/a&gt;
  We are Open Source now!
&lt;/h2&gt;

&lt;p&gt;So, the RudderStack Blog and Docs are now open source. We're excited about contributions from the RudderStack community and beyond.&lt;/p&gt;

&lt;p&gt;In fact, developers have already started contributing to our documentation. Recently,Â &lt;a href="https://github.com/benedikt"&gt;Benedikt&lt;/a&gt;Â from theÂ &lt;a href="https://userlist.com/"&gt;Userlist&lt;/a&gt;Â team created theÂ &lt;a href="https://docs.rudderstack.com/destinations/userlist"&gt;docs for the Userlist destination&lt;/a&gt;Â for RudderStack (see the pull requestÂ &lt;a href="https://github.com/rudderlabs/rudderstack-docs/pull/12"&gt;here&lt;/a&gt;). They also built the Userlist integration, submitted a pull request, and it is now live on our platform! This is the beauty of open source!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-contribute"&gt;
  &lt;/a&gt;
  How to Contribute
&lt;/h2&gt;

&lt;p&gt;Contributing to RudderStack is simple!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  VisitÂ &lt;a href="https://github.com/rudderlabs/rudder-blog/tree/main/content/blog"&gt;RudderStack Blog&lt;/a&gt;Â to contribute to blogs orÂ &lt;a href="https://github.com/rudderlabs/rudderstack-docs"&gt;RudderStack Docs&lt;/a&gt;Â for docs..&lt;/li&gt;
&lt;li&gt;  If you wish to add a new blog/doc, click onÂ Create new fileÂ orÂ Upload filesÂ as shown in the following diagram.&lt;/li&gt;
&lt;li&gt;  Also, to suggest changes to an existing file, go to the file and select Edit this file.&lt;/li&gt;
&lt;li&gt;  Once you make the changes, Click onÂ Propose changes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8X42VUn5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.sanity.io/images/97bpcflt/production/7173a9d00b74afaf1d8ee14321dad303d388b95d-1654x800.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8X42VUn5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.sanity.io/images/97bpcflt/production/7173a9d00b74afaf1d8ee14321dad303d388b95d-1654x800.png" alt="image-7173a9d00b74afaf1d8ee14321dad303d388b95d-1654x800-png" width="880" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Once your Pull Request is created, we will review the changes you've made.&lt;/li&gt;
&lt;li&gt;  If everything looks okay, our team will accept it (or edit to make it reader-friendly), andÂ &lt;a href="https://www.merriam-webster.com/dictionary/voil%C3%A0"&gt;VoilÃ &lt;/a&gt;! Your changes will reflect on the pages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sign-up-for-free-and-start-sending-data"&gt;
  &lt;/a&gt;
  Sign up for Free and Start Sending Data
&lt;/h2&gt;

&lt;p&gt;Test out our event stream, ELT, and reverse-ETL pipelines. Use our HTTP source to send data in less than 5 minutes, or install one of our 12 SDKs in your website or app.Â &lt;a href="https://app.rudderlabs.com/signup?type=freetrial"&gt;Get started&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>gatsby</category>
      <category>cdp</category>
      <category>dataengineering</category>
    </item>
    <item>
      <title>Hating windows won't make you cool</title>
      <author>NewLinuxHelper</author>
      <pubDate>Fri, 19 Nov 2021 07:02:10 +0000</pubDate>
      <link>https://dev.to/developerbishwas/hating-windows-wont-make-you-cool-28co</link>
      <guid>https://dev.to/developerbishwas/hating-windows-wont-make-you-cool-28co</guid>
      <description>&lt;p&gt;It's five years of introducing myself as a Debian user in the OS world. But I have full respect for Windows as well. Well, my dad uses Windows, but that's not the reason you should hate Windows OS.&lt;/p&gt;

&lt;p&gt;Microsoft Windows is with us from the start of OS development, from 1985. But this is also not the reason you shouldn't hate Windows.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reasons-to-not-hate-windows"&gt;
  &lt;/a&gt;
  Reasons to not hate Windows
&lt;/h3&gt;

&lt;p&gt;The only reason I am stuck on Linux/Debian OS is that it is good enough to fulfil my requirements. Similarly, many people are stuck in Windows because it is good enough to fulfil their requirements. &lt;/p&gt;

&lt;p&gt;Well, one of my college friends tried Linux, he search for a piece of software to do some writing stuff, he got LibreOffice, and tried it. FOR HIM, LibreOffice wasn't good enough. I told him to use Google Docs as well, but at the end of the day, it didn't match with him.&lt;/p&gt;

&lt;p&gt;Also, he was a Valorant player friend. He search &lt;strong&gt;how to install Valorant in Linux?&lt;/strong&gt; And guess what, he got disappointed, &lt;code&gt;Valorant isn't playable in Linux, aka: BANNED&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So, we need to keep in mind that if something fulfils our requirement why one should change he/her workflow.&lt;/p&gt;

&lt;p&gt;In a nutshell, we all want our tasks to be accomplished as soon as possible. If something we currently own and does the task we want without any issue, we're good to go with it.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#peace&lt;/code&gt; &lt;code&gt;#linux&lt;/code&gt; &lt;code&gt;#amen&lt;/code&gt; &lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>linux</category>
      <category>windows</category>
    </item>
    <item>
      <title>What's the programming language to learn first?</title>
      <author>Vik ðŸ“ˆ</author>
      <pubDate>Fri, 19 Nov 2021 07:01:37 +0000</pubDate>
      <link>https://dev.to/heyvik/whats-the-programming-language-to-learn-first-3ifo</link>
      <guid>https://dev.to/heyvik/whats-the-programming-language-to-learn-first-3ifo</guid>
      <description>&lt;p&gt;First of all, there is no BEST programming language to learn first. It always depend on what you want to do with that language, still, whether you want to choose programming as a hobby, as a career you have to first choose which programming language you have to learn.&lt;/p&gt;

&lt;p&gt;In this blog I will give you some options, so you can decide which programming language you could learn as your first programming language.&lt;/p&gt;

&lt;p&gt;Following me on twitter helps me a lot &lt;a href="https://twitter.com/vikstack"&gt;Follow Now&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h4&gt;

&lt;p&gt;Being one of the most popular language out there. It is used in a variety of websites including Gmail, Spotify, Facebook, and Instagram and many more. It can communicate with HTML and CSS. It is a must have when adding interactivity to websites.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-javascript"&gt;
  &lt;/a&gt;
  Why choose JavaScript?
&lt;/h5&gt;

&lt;p&gt;If you want to try out frontend development, or even backend, you can choose JavaScript.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h4&gt;

&lt;p&gt;This is also incredibly famous. Python reads like English and is easy to understand for someone who is just starting to code. Python is ideal to do web development, graphic user interfaces (GUIs), and software development. Python is often thought of as a slow language that requires more testing and is not as practical for developing mobile apps as other languages.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-python"&gt;
  &lt;/a&gt;
  Why choose Python?
&lt;/h5&gt;

&lt;p&gt;If youâ€™re looking for something easy, python can be a choice for you.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C
&lt;/h4&gt;

&lt;p&gt;While C is one of the more difficult languages to learn, itâ€™s still an excellent first language pick up because almost all programming languages are implemented in it. This means that once you learn C, itâ€™ll be simple to learn more languages like C++ and C#.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-c"&gt;
  &lt;/a&gt;
  Why choose c#?
&lt;/h5&gt;

&lt;p&gt;If you want a solid foundation to make you a master developer, C is a solid choice for you.&lt;/p&gt;

&lt;p&gt;Here was 3 of the most famous and preferred language to use. While Python and JavaScript are for beginners and C is kinda hard to learn. &lt;/p&gt;

&lt;p&gt;Thanks for reading till here. Cheers &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Strategies How to Migrate Existing Applications to Microservices </title>
      <author>john methew</author>
      <pubDate>Fri, 19 Nov 2021 06:52:55 +0000</pubDate>
      <link>https://dev.to/johnmethew18/strategies-how-to-migrate-existing-applications-to-microservices-2cll</link>
      <guid>https://dev.to/johnmethew18/strategies-how-to-migrate-existing-applications-to-microservices-2cll</guid>
      <description>&lt;p&gt;Another set of how to migrate monolithic(Existing) application to microservices, an easy and simple steps design by DEV IT expert.&lt;/p&gt;

&lt;p&gt;Monolithic application is set of modules, business process, and all functionality in one set and various database related operation. it is easy to test and only one application to release all time.&lt;/p&gt;

&lt;p&gt;But the main issue with monolithic application is to scaling up, because whenever any bug occurs you have to check entire system and solve it out and redeploy it and that takes much time of developer. &lt;/p&gt;

&lt;p&gt;So, as the technology evolved developers has found the way to develop all require module into separate way as they deploy separately and easy to manage while any bug occurs and its called microservices. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://www.devitpl.com/cloud-migration/"&gt;migrating monolithic(existing) application to microservices require proper planning by an expert&lt;/a&gt;&lt;/b&gt; Below I have mentioned few practical strategies which helps to developer.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make a good transition plan&lt;/li&gt;
&lt;li&gt;Identify all logical modules and most independent modules.&lt;/li&gt;
&lt;li&gt;Identify inter-system relationships.&lt;/li&gt;
&lt;li&gt;Identify groups of modules.&lt;/li&gt;
&lt;li&gt;Prepare an individual service-wise database.&lt;/li&gt;
&lt;li&gt;Never allow migrated-service code to again fall in the 
monolith app.&lt;/li&gt;
&lt;li&gt;Migrate module groups to separate services and make separate 
deployments.&lt;/li&gt;
&lt;li&gt;You can also break an existing microservice into smaller ones.
Make use of the event bus to communicate between 
microservices.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Read the full article over on DEV IT journal &lt;a href="https://www.blog.devitpl.com/migrating-strategies-to-move-existing-applications-to-microservices/"&gt;https://www.blog.devitpl.com/migrating-strategies-to-move-existing-applications-to-microservices/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>monolithicapplication</category>
      <category>microservices</category>
      <category>cloudmigration</category>
      <category>devops</category>
    </item>
    <item>
      <title>What you need to know to become an automation test engineer</title>
      <author>Oswin Losper</author>
      <pubDate>Fri, 19 Nov 2021 06:45:17 +0000</pubDate>
      <link>https://dev.to/oswinlosper/what-you-need-to-know-to-become-an-automation-test-engineer-52e1</link>
      <guid>https://dev.to/oswinlosper/what-you-need-to-know-to-become-an-automation-test-engineer-52e1</guid>
      <description>&lt;p&gt;QA used to consist of two types of testing, namely, manual testing and automation testing.&lt;/p&gt;

&lt;p&gt;Manual testers main task was to do regression testing while automation tester was only focussed on writing code and scripts.&lt;/p&gt;

&lt;p&gt;The connection between the two was a rare thing, expect when the automation engineers wanted to explore additional test cases to automate.&lt;/p&gt;

&lt;p&gt;However in the world we live today, its different. Yes, both manual and automation testing is still important, I am still of the believe that automation is not there to replace manual testing, however the gap between manual and the automation world is getting smaller and smaller.&lt;/p&gt;

&lt;p&gt;Its important for manual and automation to work together, but most importantly, to make sure that both sides understands each other tasks. This is a strategy we implement at my current workplace, Wyzetalk, ever since we switched to this approach, workflow has been much more beneficial for all parties involved.&lt;/p&gt;

&lt;p&gt;When applying for new jobs, some companies requires that candidates to have experience in both manual and automation testing. This leaves the questions, where do I start to become a automation tester? What skills do I need for this?&lt;/p&gt;

&lt;p&gt;I was in the same boat years ago. I started of as a web designer, had no experience in automation testing. Thankfully, like all problems, it not a hard problem to solve, however it requires action on your part.&lt;/p&gt;

&lt;p&gt;There are 2 main focus areas to become a successful automation engineer. Keep in mind that requirements can depend on the role and can have additional requirements, but below is a list of basic requirements.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#development-languages"&gt;
  &lt;/a&gt;
  Development Languages
&lt;/h4&gt;

&lt;p&gt;Number one, you need to know a specific language. Like mentioned above, this can depend on the role you are applying for, but most of the time when you know the popular languages like Java or Javascript, it should be enough&lt;/p&gt;

&lt;p&gt;You dont have to be a experienced developer but it would be good if you have enough knowledge to write automation tests and scripts. I would recommend the basic fundamentals.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Classes, objects, and methods&lt;/li&gt;
&lt;li&gt;Inheritance&lt;/li&gt;
&lt;li&gt;Strings, Integers&lt;/li&gt;
&lt;li&gt;Interface concept and how to use it&lt;/li&gt;
&lt;li&gt;Polymorphism&lt;/li&gt;
&lt;li&gt;Arrays (single and multi-dimensional)&lt;/li&gt;
&lt;li&gt;Override and overload&lt;/li&gt;
&lt;li&gt;Access modifiers&lt;/li&gt;
&lt;li&gt;Date class&lt;/li&gt;
&lt;li&gt;Role of constructors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These should be enough to start writing automation code.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#framework-for-ui-automation-testing"&gt;
  &lt;/a&gt;
  Framework for UI Automation testing
&lt;/h4&gt;

&lt;p&gt;Unit testing allows us to verify that different modules of our application are operating in the correct manner, but we also need to test applications from a UI end-to-end point.&lt;/p&gt;

&lt;p&gt;In a previous article I wrote about, I dive deeper into what you must consider in selecting a automation tool, below is a brief breakdown of breakdown in performing tests on a UI framework:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating a new project in your favorite IDE&lt;/li&gt;
&lt;li&gt;Setting up dependencies in a build management system&lt;/li&gt;
&lt;li&gt;Creating a base class for the framework&lt;/li&gt;
&lt;li&gt;Setting up global properties for your project&lt;/li&gt;
&lt;li&gt;Implementing the page-object model for your project&lt;/li&gt;
&lt;li&gt;Writing test cases for your project&lt;/li&gt;
&lt;li&gt;Grouping your test cases&lt;/li&gt;
&lt;li&gt;Wiring up a tool for generating reports and screenshots for failed test cases&lt;/li&gt;
&lt;li&gt;Running your test cases efficiently by using an automation tool&lt;/li&gt;
&lt;li&gt;Analyzing the result of executed test cases&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;After you finished the framework, one important thing that people are not doing in the automation testing world, is to manage the automation suite, this must to be done in order for the automation tests to bring value and longevity to the quality of your project&lt;/p&gt;

&lt;p&gt;The specifics of writing UI automation code would depend on a platform (e.g mobile or desktop) and other factors, but this is basically what you need to focus your attention to.&lt;/p&gt;

&lt;p&gt;In a nut shell, write test and report on results of test cases.&lt;/p&gt;

&lt;p&gt;I hope this article will give you a better understand of what you need to do to make the switch to be a automation test engineer.&lt;/p&gt;

</description>
      <category>automation</category>
      <category>testing</category>
      <category>beginners</category>
      <category>automationengineer</category>
    </item>
    <item>
      <title>Learn Python with Artificial Intelligence and Robotics</title>
      <author>sumedhaLV</author>
      <pubDate>Fri, 19 Nov 2021 06:43:46 +0000</pubDate>
      <link>https://dev.to/sumedhalv/learn-python-with-artificial-intelligence-and-robotics-101e</link>
      <guid>https://dev.to/sumedhalv/learn-python-with-artificial-intelligence-and-robotics-101e</guid>
      <description>&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;br&gt;
Thanks to robotics applications, learning new programming languages is now possible and straightforward. Python is a frequently used programming languages today. Python has become relatively simple to understand because of robotics applications. Artificial Intelligence and Robotics have been present for more than half a century, and their breakthroughs are increasing at a rapid pace. The need for Artificial Intelligence is at an all-time high, and if you're interested in learning more about AI and robotics, you've come to the perfect spot. Artificial Intelligence and Robotics are the topics of this blog. With Python, you'll be able to grasp all of the ideas of AI and robotics through actual Python implementations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A. What is Artificial Intelligence and Robotics?&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Thby2hSj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/yBsdC53.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Thby2hSj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/yBsdC53.jpg" alt="imag" title="entreprenuersdiaries" width="512" height="288"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Image Source: entreprenuersdiaries&lt;/p&gt;

&lt;p&gt;Artificial intelligence (AI) and Robotics are the IT industry's new dark. While debates regarding the safety of its growth continue, developers continue to expand artificial intelligence's capabilities and capability. Artificial Intelligence has progressed far beyond the realm of science fiction. It became a requirement. AI, which is commonly used for processing and analysing large amounts of data, aids in the handling of tasks that are no longer possible to complete manually due to their increased volume and intensity.&lt;/p&gt;

&lt;p&gt;Artificial Intelligence (AI) has become a revolutionary term in the industry, and for a good reason. Artificial Intelligence, or AI, has progressed so far in the technological area that, according to a Gartner report, AI will create 2.3 million jobs by 2020, replacing the 1.8 million jobs it would displace.&lt;/p&gt;

&lt;p&gt;Python is a frequently used programming language today. Python has become relatively simple to understand because of robotics applications. This language is ideal for creating a variety of apps. Despite the fact that there are many other languages to choose from, people choose Python for a variety of reasons. Python is a flexible and strong language when compared to other software and computer languages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;B. Why Is Python Best For Artificial Intelligence and Robotics?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Python also comes with a vast code library, making it a versatile tool for a variety of applications. Robotics is an example of one of these fields. The combination of robots with Python produces really successful work.&lt;/p&gt;

&lt;p&gt;With the growing volume and complexity of data, AI and Robotics are now being employed to process and analyse it. To be fair, the human brain has the ability to analyse enormous volumes of data, but it is limited by the quantity of material it can take at any given time. Artificial Intelligence is not bound by this constraint. AI-assisted forecasts and insights improve company efficiency, reduce production costs, and boost productivity. It's no surprise that AI and Robotics are being used by numerous sectors to boost performance and accelerate product development.&lt;/p&gt;

&lt;p&gt;The industrial robots market is estimated to be worth $80 billion. The majority of robotics advancements are attributable to advancements in the artificial intelligence (AI) industry. In the robotics field, artificial intelligence aids in the control of robots. Python is a widely-used programming language due to its ease of use and flexibility.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C. Why has Python gained so much popularity in all these fields?&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K6Xsq771--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/fGLZ11V.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K6Xsq771--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/fGLZ11V.jpg" alt="imag" title="entreprenuersdiaries" width="512" height="241"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source: quintagroup&lt;/p&gt;

&lt;p&gt;Following are some of the major reasons why Python is the first choice of language for any core software developer or data scientist, or machine learning engineer or any other:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Less Code&lt;/strong&gt;: Implementation of Artificial Intelligence is a necessity for a larger number of functionalities. Thanks to Python's pre-defined packages, we don't have to code all the algorithms. To make things easier, Python has a "check as you code" methodology that decreases the amount of time spent testing the code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prebuilt Libraries&lt;/strong&gt;: Python has a large number of pre-built libraries which helps in implementing Artificial Intelligence and Robotics functionalities. So, each time you want to run an algorithm on a data set, all you have to do is write and run a single line code to install and load the appropriate packages. NumPy, Tensorflow, Pytorch, Keras and other pre-built libraries are examples.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of learning&lt;/strong&gt;: Python has a fairly basic syntax that can be used to implement simple computations like adding two strings to more sophisticated procedures like developing a Machine Learning model.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Platform Independent&lt;/strong&gt;: Python can operate on a variety of platforms, including Windows, macOS, Linux, Unix, and others. You can use tools like PyInstaller to take care of any dependency concerns while migrating code from one platform to another.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Huge User Community&lt;/strong&gt;: Python has a large user community that is always willing to help when we run into coding issues. Python offers various communities, groups, and forums where programmers can discuss their issues and support one another, in addition to a large fan base.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D. Robotics and Artificial Intelligence Libraries in Python&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Because this blog is about Python for Artificial Intelligence and Robotics, I'll show you some of the most useful and popular Artificial Intelligence-based Python libraries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tensorflow&lt;/strong&gt;: It is a Google-developed library is widely utilised in the development of Machine Learning algorithms and the execution of complex calculations involving Neural Networks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scikit-Learn&lt;/strong&gt;: Scikit-learn is a NumPy and SciPy-related Python package. It is considered one of the best libraries for dealing with large amounts of data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Numpy&lt;/strong&gt;: Numpy is a Python module that is used to compute scientific and mathematical data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Theano&lt;/strong&gt;: Theano is a functional library that efficiently calculates and computes multi-dimensional array mathematical expressions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Keras&lt;/strong&gt;: This library makes it easier to build neural networks. It also provides the best features for constructing models, assessing data sets, displaying graphs, and many other things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NLTK&lt;/strong&gt;: NLTK (Natural Language Toolkit): Kit is a Python library for Natural Language Processing, text analysis, and text mining that is a free source.&lt;/p&gt;

&lt;p&gt;Python is compatible with robotic operating systems. Python has computational libraries that are necessary for the robotics area. Python Remote Objects (Pyro), for example, is a library for creating applications in which objects can communicate with one another over the internet. Pybotics is a Python toolbox for robot kinematics and calibration that is open-source. Pyrobotics was created with the goal of providing a simple, clear, and compact interface for quickly simulating and evaluating various robot concepts, including kinematics, dynamics, and calibration. PyRobot is a Python toolkit for comparing and running robot learning experiments. It's suitable for applications that don't have APIs. We can now run robots without having to deal with robot-specific software, thanks to this library. Python's robotic libraries are really handy. Even simply for this vast library pool, Python can be taught.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;E. Demand For Robotics and Artificial Intelligence&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since AI was invented in the 1950s, we've seen an exponential increase in the potential of Artificial Intelligence. But, the question is why has AI suddenly become so important? Why are we discussing Artificial Intelligence and Robotics right now?&lt;/p&gt;

&lt;p&gt;The following are the primary reasons behind AI and Robotics enormous popularity:&lt;/p&gt;

&lt;p&gt;More computational power: Building AI and Robotics models includes important calculations and the implementation of complex neural networks, which requires a lot of computing power. This led to the invention of GPUs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data Production&lt;/strong&gt;: Over the last years, we've produced a lot of data. Machine Learning algorithms, other Robotics and AI approaches must be used to examine and process such data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Broad Investment&lt;/strong&gt;: As tech titans such as Tesla, Netflix, and Facebook began to invest in Artificial Intelligence and Robotics, the technology grew in prominence, resulting in a rise in demand for AI and Robotics-based solutions.&lt;/p&gt;

&lt;p&gt;Artificial Intelligence and Robotics are growing at an exponential rate, and it is contributing to the economy at a rapid rate. As a result, now is an excellent time for you to enter the field of Artificial Intelligence.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;F. Job Profiles after learning Python with Artificial Intelligence and Robotics&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;According to Indeed, the demand for AI and Robotics capabilities has more than doubled in the last three years, with a 119 per cent increase in job posts. Without the many Job Profiles, this Artificial Intelligence and Robotics with Python blog would be incomplete. So, if Artificial Intelligence and Robotics fascinate you and you want to work in the sector, below are the various Job Profiles you can apply for if you have AI and Robotics skills.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Machine Learning Engineer&lt;/li&gt;
&lt;li&gt;Big Data Engineer/Architect&lt;/li&gt;
&lt;li&gt;Artificial Intelligence Engineer&lt;/li&gt;
&lt;li&gt;Research Scientist&lt;/li&gt;
&lt;li&gt;Business Intelligence Developer&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data Scientist&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Conclusion&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Artificial Intelligence (AI) and Robotics are techniques that allow machines to replicate human behaviour. Artificial intelligence (AI) and Robotics is the study and development of computer systems that can do activities that would ordinarily require human intelligence, such as vision, speech recognition, decision-making, and language translation. You can learn all about how to implement Artificial Intelligence (AI) and Robotics with Python from various free &lt;a href="https://www.learnvern.com/course/core-python-programming-tutorial"&gt;python online course&lt;/a&gt;s on different platforms.&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>Adding reading time to Astro (the easy way)</title>
      <author>Chris Bongers</author>
      <pubDate>Fri, 19 Nov 2021 06:32:06 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/adding-reading-time-to-astro-the-easy-way-2370</link>
      <guid>https://dev.to/dailydevtips1/adding-reading-time-to-astro-the-easy-way-2370</guid>
      <description>&lt;p&gt;You may have noted this blog, along with many others out there, provides reading time.&lt;/p&gt;

&lt;p&gt;This reading time is used to indicate how long it would take to read an article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4XUhI5Z5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636348952789/5aUrwl586.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4XUhI5Z5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636348952789/5aUrwl586.png" alt="Reading time on a blog" width="752" height="183"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is valuable information, as sometimes you want to be aware of what you are getting into while starting to read an article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-a-reading-time-to-astro"&gt;
  &lt;/a&gt;
  Adding a reading time to Astro
&lt;/h2&gt;

&lt;p&gt;We'll be going for the easy way. Meaning it's not a scientific approach and more used as a guideline than a perfect number.&lt;/p&gt;

&lt;p&gt;First of all, let's take the Astro blog starter and work from there.&lt;/p&gt;

&lt;p&gt;Install the starter template with the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;astro-blog &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;astro-blog
npm init astro &lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;--template&lt;/span&gt; blog-multiple-authors
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll be adding our reading time script on the post overview page so the visitor can determine which article they want to read.&lt;/p&gt;

&lt;p&gt;First, let's create the file that will determine the actual reading time for us.&lt;/p&gt;

&lt;p&gt;I created a &lt;code&gt;lib&lt;/code&gt; folder in the &lt;code&gt;src&lt;/code&gt; directory for these little scripts, creating a &lt;code&gt;readingtime.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Then add the following template, which creates a function that accepts content and should return the reading time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getReadingTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// Do something&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now open up the &lt;code&gt;components/PostPreview.astro&lt;/code&gt; and import this script like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="o"&gt;---&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getReadingTime&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../lib/readingtime.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// Rest of frontmatter&lt;/span&gt;
&lt;span class="o"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And in our HTML section we can use it like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getReadingTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;astro&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; minutes to read&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We invoke the function and pass the HTML of the post content.&lt;br&gt;
However, nothing will happen at this point.&lt;/p&gt;

&lt;p&gt;So head back over to the &lt;code&gt;readingtime.js&lt;/code&gt; file.&lt;br&gt;
The first thing we need to do is determine what the average person reads per minute.&lt;/p&gt;

&lt;p&gt;This is widely known to be between 200/250 words, so let's stick to the lower number.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Read more on the &lt;a href="https://irisreading.com/what-is-the-average-reading-speed/"&gt;number of words read per minute&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With this in mind, we can create a variable that states this number.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;WORDS_PER_MINUTE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The content we pass is pure HTML, including all kinds of HTML tags, images, etc., which we don't want to count towards the reading time.&lt;/p&gt;

&lt;p&gt;We can't use document manipulation in Astro, so let's use a regex to remove these elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getReadingTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&amp;lt;&lt;/span&gt;&lt;span class="se"&gt;\/?[^&lt;/span&gt;&lt;span class="sr"&gt;&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;&amp;gt;|$&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can extract the number of words from our cleaned string by splitting it into spaces.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numberOfWords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\s&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, we can divide the number of words by our word per minute variable and round this up.&lt;/p&gt;

&lt;p&gt;Making the function look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;WORDS_PER_MINUTE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getReadingTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&amp;lt;&lt;/span&gt;&lt;span class="se"&gt;\/?[^&lt;/span&gt;&lt;span class="sr"&gt;&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;&amp;gt;|$&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numberOfWords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\s&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numberOfWords&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;WORDS_PER_MINUTE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we now go to our website, we should see the reading times pop-up.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7_znyLA5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636350382816/JTV8mwC-l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7_znyLA5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636350382816/JTV8mwC-l.png" alt="Reading time in action" width="543" height="322"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also find the completed code example on &lt;a href="https://github.com/rebelchris/astro-reading-time"&gt;GitHub&lt;/a&gt; for reference purposes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>astro</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
