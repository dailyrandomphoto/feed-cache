<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Memorable Hex codes</title>
      <author>Siddharth</author>
      <pubDate>Wed, 09 Jun 2021 08:38:20 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/memorable-hex-codes-37fg</link>
      <guid>https://dev.to/siddharthshyniben/memorable-hex-codes-37fg</guid>
      <description>&lt;p&gt;Hopefully this will save you a trip to the color picker.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;#b00b00 (deep red)&lt;/strong&gt;        - Good for errors&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;#de1e7e (pink)&lt;/strong&gt;            - Delete&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;#2fa (green)&lt;/strong&gt;              - Looks like tha 2FA was successful&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;#ac1d1c (red, obviously)&lt;/strong&gt;  - Warning! Extremely corrosive&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;#facade (pink)&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;#goodn8 (almost sky blue)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;#c0ffee (teal)&lt;/strong&gt;            - Yeah teal coffee&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There's a lot more &lt;a href="https://nedbatchelder.com/text/hexcolors.html"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
    </item>
    <item>
      <title>These Are The Most Popular Songs To Code To</title>
      <author>Amelia Selby</author>
      <pubDate>Wed, 09 Jun 2021 08:17:23 +0000</pubDate>
      <link>https://dev.to/ameliaselby/these-are-the-most-popular-songs-to-code-to-552o</link>
      <guid>https://dev.to/ameliaselby/these-are-the-most-popular-songs-to-code-to-552o</guid>
      <description>&lt;p&gt;We all know that listening to music can help you get into the ‘zone’. It's that powerful state that developers hit from time to time where the only thing that matters is the problem you're working on.&lt;/p&gt;

&lt;p&gt;When you’re trying to focus, music is the best way to keep yourself entertained as it can be difficult to listen to podcasts or watch youtube videos. And whether it’s the passing traffic, a squeaky floorboard or dull office chitter-chatter, a cracking playlist can go a long way to blocking out unwanted noise!&lt;/p&gt;

&lt;p&gt;So, what &lt;em&gt;are&lt;/em&gt; the best songs to listen to get you into that elusive zone?&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.ko2.co.uk/most-popular-songs-to-code-to/"&gt;KO2&lt;/a&gt; decided to scrape Spotify for coding playlists and work out which songs and artists are the most popular to programme to. With a list of 58,000 songs from an eclectic mix of genres, they have been able to figure out the winner!&lt;/p&gt;

&lt;p&gt;Intrigued by who made the cut? Well, scroll down to see the results of the most popular songs and artists to code to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-most-popular-songs-to-code-to"&gt;
  &lt;/a&gt;
  The most popular songs to code to
&lt;/h2&gt;

&lt;p&gt;1.Blinding Lights - The Weeknd - 135 BPM&lt;br&gt;
2.Day One - Hans Zimmer - 96 BPM&lt;br&gt;
2.French Inhale - [bsd.u] - 80 BPM&lt;br&gt;
4.Both of Us - Idealism - 85 BPM&lt;br&gt;
4.Cornfield Chase - Hans Zimmer - 94 BPM&lt;br&gt;
4.Solar Sailer - Daft Punk - 124 BPM&lt;br&gt;
4.Time - Hans Zimmer - 127 BPM&lt;br&gt;
8.[oops] - potsu - 69 BPM&lt;br&gt;
8.Affection - Jinsang - 84 BPM&lt;br&gt;
8.controlla - Idealism - 80 BPM&lt;br&gt;
8.Snowman - WYS - 110 BPM&lt;/p&gt;

&lt;p&gt;Outshining the rest of the competition was The Weeknd’s 2019 hit, ‘Blinding Lights’, which topped the list by featuring on the most coding playlists. Whilst clearly a popular choice with programmers, the song is also a favourite all-round, with Spotify revealing that it is the second most-streamed song on the platform with over 2.2 billion listens.&lt;/p&gt;

&lt;p&gt;Close behind, and tied with [bsd.u], is ‘One Day’ by Hans Zimmer, who nabbed 3 of the top 10 spots. ‘One Day’ was written and produced for the film, Pirates of the Caribbean: At World's End, serving as the romantic theme for the movie and featuring in most of Will and Elizabeth’s scenes. Well, its soft string ostinato is clearly a popular background choice for writing code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-most-popular-artists-to-code-to"&gt;
  &lt;/a&gt;
  The most popular artists to code to
&lt;/h2&gt;

&lt;p&gt;1.Daft Punk&lt;br&gt;
2.ODESZA&lt;br&gt;
3.M83&lt;br&gt;
4.deadmau5&lt;br&gt;
4.Hans Zimmer&lt;br&gt;
6.Bonobo&lt;br&gt;
6.Jon Hopkins&lt;br&gt;
6.Tycho&lt;br&gt;
9.Ludovico Einaudi&lt;br&gt;
9.The Weeknd&lt;/p&gt;

&lt;p&gt;When looking at which artists are the most popular to code to, Daft Punk takes the top spot with their songs appearing the most frequently across the coding Spotify playlists. The French electronic musicians average over 15 million monthly listeners on the music platform in general.&lt;/p&gt;

&lt;p&gt;Sitting in second place is the American duo ODESZA, known individually as Catacombkid and BeachesBeaches, whose electronic tunes average a respectable 5 million monthly Spotify listeners on Spotify.&lt;/p&gt;

&lt;p&gt;Electronic seems to be a popular music genre for programmers getting in the zone, with The Weeknd and Daft Punk appearing in the top 10 of both lists. This isn’t surprising though, as a consistent beat can help you establish a rhythm while working; the faster the music, the faster you work, maybe?&lt;/p&gt;

&lt;p&gt;But, it’s clearly not only about the upbeat tunes when it comes to coding. The German film composer Hans Zimmer ranks three times in the top 10 of the most popular songs list, and the muted tones of lofi music scores highly in both too. A rather eclectic mix to say the least...&lt;/p&gt;

&lt;p&gt;In fact, the beats per minute (BPM) in the top songs range from a heart-racing 176 BPM in Tycho’s ‘Awake’ right down to a chilled 69 BPM in Potsu’s lofi ‘[oops]’.&lt;/p&gt;

</description>
      <category>music</category>
      <category>productivity</category>
    </item>
    <item>
      <title>I need #UI testing tool #WebApp</title>
      <author>sathishkumarkevin</author>
      <pubDate>Wed, 09 Jun 2021 08:05:27 +0000</pubDate>
      <link>https://dev.to/sathishkumarkevin/i-need-ui-testing-tool-webapp-4p59</link>
      <guid>https://dev.to/sathishkumarkevin/i-need-ui-testing-tool-webapp-4p59</guid>
      <description>&lt;p&gt;Hello,&lt;br&gt;
I would like to know tool for UI testing for modern webapp (react , angular kind of thing). Yep, most of them know tool called "selenium", but its hard to learn and write code. Could pls share tool which use less coding or without coding to create ui testing and also situmulate parallel user session? &lt;/p&gt;

</description>
    </item>
    <item>
      <title>15 Best Open-Source Autonomous Driving Datasets</title>
      <author>SiaSearch</author>
      <pubDate>Wed, 09 Jun 2021 07:05:45 +0000</pubDate>
      <link>https://dev.to/siasearch/15-best-open-source-autonomous-driving-datasets-2e81</link>
      <guid>https://dev.to/siasearch/15-best-open-source-autonomous-driving-datasets-2e81</guid>
      <description>&lt;p&gt;In recent years, more and more companies and research institutions have made their &lt;a href="https://www.siasearch.io/open-data"&gt;autonomous driving datasets&lt;/a&gt; open to the public. However, the best datasets are not always easy to find, and scouring the internet for them takes time.&lt;/p&gt;

&lt;p&gt;To help, we at SiaSearch have put together a list of the top 15 open datasets for autonomous driving. The resources below collectively contain millions of data samples, many of which are already annotated. We hope this list provides you with a solid starting point for learning more about the field, or for starting your own autonomous driving project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-open-datasets-for-autonomous-driving-projects"&gt;
  &lt;/a&gt;
  Top Open Datasets for Autonomous Driving Projects
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;A2D2 Dataset&lt;/strong&gt;&lt;br&gt;
The Audi Autonomous Driving Dataset (A2D2) features over 41,000 labeled with 38 features. Around 2.3 TB in total, A2D2 is split by annotation type (i.e. semantic segmentation, 3D bounding box).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ApolloScape Dataset&lt;/strong&gt;&lt;br&gt;
ApolloScape is an evolving research project that aims to foster innovation across all aspects of autonomous driving, from perception to navigation and control. Via their website, users can explore a variety of simulation tools and over 100K street view frames, 80k lidar point cloud and 1000km trajectories for urban traffic.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Argoverse Dataset&lt;/strong&gt;&lt;br&gt;
The Argoverse dataset includes 3D tracking annotations for 113 scenes and over 324,000 unique vehicle trajectories for motion forecasting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Berkeley DeepDrive Dataset&lt;/strong&gt;&lt;br&gt;
Also known as BDD 100K, the DeepDrive dataset gives users access to 100,000 annotated videos and 10 tasks to evaluate image recognition algorithms for autonomous driving. The dataset represents more than 1000 hours of driving experience with more than 100 million frames, as well as information on geographic, environmental, and weather diversity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CityScapes Dataset&lt;/strong&gt;&lt;br&gt;
CityScapes is a large-scale dataset focused on the semantic understanding of urban street scenes in 50 German cities. It features semantic, instance-wise, and dense pixel annotations for 30 classes grouped into 8 categories. The entire dataset  includes 5,000 annotated images with fine annotations, and an additional 20,000 annotated images with coarse annotations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Comma2k19 Dataset&lt;/strong&gt;&lt;br&gt;
This dataset includes 33 hours of commute time recorded on highway 280 in California. Each 1-minute scene was captured on a 20km section of highway driving between San Jose and San Francisco. The data was collected using comma EONs, which features a road-facing camera, phone GPS, thermometers and a 9-axis IMU. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Google-Landmarks Dataset&lt;/strong&gt;&lt;br&gt;
Published by Google in 2018, the Landmarks dataset is divided into two sets of images to evaluate recognition and retrieval of human-made and natural landmarks. The original dataset contains over 2 million images depicting 30 thousand unique landmarks from across the world. In 2019, Google published Landmarks-v2, an even larger dataset with 5 million images and 200k landmarks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;KITTI Vision Benchmark Suite&lt;/strong&gt;&lt;br&gt;
First released in 2012 by Geiger et al, the &lt;a href="https://www.siasearch.io/kitti-dataset/"&gt;KITTI dataset&lt;/a&gt; was released with the intent of advancing autonomous driving research with a novel set of real-world computer vision benchmarks. One of the first ever autonomous driving datasets, KITTI boasts over 4000 academic citations and counting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Level 5 Open Data&lt;/strong&gt;&lt;br&gt;
Published by popular rideshare app Lyft, the Level5 dataset is another great source for autonomous driving data. It includes over 55,000 human-labeled 3D annotated frames, surface map, and an underlying HD spatial semantic map that is captured by 7 cameras and up to 3 LiDAR sensors that can be used to contextualize the data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;nuScenes Dataset&lt;/strong&gt;&lt;br&gt;
Developed by Motional, the &lt;a href="https://www.siasearch.io/nuscenes-dataset/"&gt;nuScenes dataset&lt;/a&gt; is one of the largest open-source datasets for autonomous driving. Recorded in Boston and Singapore using a full sensor suite (32-beam LiDAR, 6 360° cameras and radars), the dataset contains over 1.44 million camera images capturing a diverse range of traffic situations, driving maneuvers, and unexpected behaviors.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Looking for more datasets? Read the entire blogpost at &lt;a href="https://www.siasearch.io/blog/best-open-source-autonomous-driving-datasets"&gt;https://www.siasearch.io/blog/best-open-source-autonomous-driving-datasets&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>datascience</category>
      <category>machinelearning</category>
      <category>database</category>
      <category>autonomousdriving</category>
    </item>
    <item>
      <title>Types and Mocking - Typescript</title>
      <author>Maina Wycliffe</author>
      <pubDate>Wed, 09 Jun 2021 06:53:47 +0000</pubDate>
      <link>https://dev.to/this-is-learning/types-and-mocking-typescript-1m00</link>
      <guid>https://dev.to/this-is-learning/types-and-mocking-typescript-1m00</guid>
      <description>&lt;p&gt;In this article, we are going to learn how to create functions which are easy to test and mock using TypeScript utility types.&lt;/p&gt;

&lt;p&gt;Let's take the following function, how do you mock it's inputs i.e. &lt;code&gt;person&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nl"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getPersonsFullName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One common way, is to create an object of type &lt;code&gt;Person&lt;/code&gt; with only the fields being used by function and then cast the object as any, as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const person = {
    name: {
        firstName: "Wycliffe",
        lastName: "Maina"
    }
}

console.log(getPersonsFullName(person as any));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This works, but you are losing the benefits of typescript typing system by casting as any, since the compiler won't type check the object &lt;code&gt;person&lt;/code&gt; being passed to the function. &lt;/p&gt;

&lt;p&gt;A good reason as to why this is not a good idea, is that if the function changes and starts using other properties or the shape of the input object changes, TypeScript will not help you. I am guilty of casting as &lt;code&gt;any&lt;/code&gt;, especially when writing mocks for tests.&lt;/p&gt;

&lt;p&gt;But, is there a better way? Yes, we can improve the function above, so that it is easier to mock the input without resulting to the above technique. One approach, which I really recommend, is to create a new type which only has the fields the function needs to run successfully, in this case the &lt;code&gt;name&lt;/code&gt; property. This can easily be achieved in Typescript using Utility Types, which you can learn more about &lt;a href="https://mainawycliffe.dev/blog/transforming-types-typescript-utility-types"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;We can use the &lt;code&gt;Pick&amp;lt;T&amp;gt;&lt;/code&gt; utility type, to create a new type from Person, with only the name field i.e. picking the &lt;code&gt;name&lt;/code&gt; field from the &lt;code&gt;Person&lt;/code&gt; type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getPersonsFullName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Pick&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way, our mock example still works, but without resulting to casting as any:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Wycliffe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Maina&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getPersonsFullName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The advantage of this is that you can still pass a person object with more properties as long as name property is present, as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Wycliffe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Maina&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// this still works&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getPersonsFullName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Utility types such as &lt;code&gt;Omit&lt;/code&gt;, &lt;code&gt;Pick&lt;/code&gt;, &lt;code&gt;Partial&lt;/code&gt;, &lt;code&gt;Required&lt;/code&gt;, etc. can help you create new types easily that define the shape of an input object for a function. This makes it possible to define with precision what a function input type is, with just a little extra work on your part. You can learn more about TypeScript utility types in my previous article &lt;a href="https://mainawycliffe.dev/blog/transforming-types-typescript-utility-types/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This makes your functions and methods more friendly since they are taking in only what they need, making it easy to mock as seen above. Another advantage is that your functions are more re-usable as they don't place an unnecessary burden on the consumer of the function by requiring larger input than they are using.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Is coding mental health friendly?</title>
      <author>Valeria</author>
      <pubDate>Wed, 09 Jun 2021 06:50:21 +0000</pubDate>
      <link>https://dev.to/valeriavg/is-coding-mental-health-friendly-331i</link>
      <guid>https://dev.to/valeriavg/is-coding-mental-health-friendly-331i</guid>
      <description>&lt;p&gt;With our ability to work from anywhere any time it seems like an awesome choice to live stress-free. But at the same time, a lot of us have mental disorders of varying intensity. &lt;/p&gt;

&lt;p&gt;I can't help but wonder if it is because e.g. a personality disorder or generalised anxiety doesn't affect the career in dev or if the lack of social interactions actually perpetuates the problem and let the disorders bloom. &lt;/p&gt;

&lt;p&gt;What do you think?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>mentalhealth</category>
    </item>
    <item>
      <title>Mac OS X setting up virtual hosts</title>
      <author>Chris Bongers</author>
      <pubDate>Wed, 09 Jun 2021 06:27:00 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/mac-os-x-setting-up-virtual-hosts-ga6</link>
      <guid>https://dev.to/dailydevtips1/mac-os-x-setting-up-virtual-hosts-ga6</guid>
      <description>&lt;p&gt;You might remember the days of MAMP/XAMP/WAMP? Well, for Mac OS X, we don't need these tools anymore.&lt;/p&gt;

&lt;p&gt;It's actually possible to host a website on your local Mac, and it's not as hard as you would think!&lt;/p&gt;

&lt;p&gt;Today, we'll set up a local PHP website that we can reach through our browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enabling-virtual-hosts-on-mac-os-x"&gt;
  &lt;/a&gt;
  Enabling virtual hosts on Mac OS X
&lt;/h2&gt;

&lt;p&gt;The first step to making this work is enabling virtual hosts on Mac OS X.&lt;/p&gt;

&lt;p&gt;To do this, we need to modify the &lt;code&gt;httpd.conf&lt;/code&gt; file. Execute the following command in your terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;nano /etc/apache2/httpd.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Look for the following line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#Include /private/etc/apache2/extra/httpd-vhosts.conf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And below that, on a new line add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Include /private/etc/apache2/vhosts/&lt;span class="k"&gt;*&lt;/span&gt;.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This tells Apache to load all &lt;code&gt;.conf&lt;/code&gt; files in this directory.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: You could also add all the hosts in the &lt;code&gt;httpd-vhost&lt;/code&gt; file, but I found this a cleaner method.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now we need to make the configuration files, make sure the directory exist or create it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; /etc/apache2/vhosts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can create our first configuration in that folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;nano /etc/apache2/vhosts/daily-dev-tips.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Place the following information inside:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
    DocumentRoot "/Users/chrisbongers/www/daily-dev-tips"
    ServerName daily-dev-tips.local

    &amp;lt;Directory "/Users/chrisbongers/www/daily-dev-tips"&amp;gt;
        AllowOverride All
        Require all granted
    &amp;lt;/Directory&amp;gt;
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You have to set the DocumentRoot to your own directory on your local machine. For me, it's a www folder at my user level.&lt;br&gt;
Next, set the ServerName to the URL you want to serve it on.&lt;/p&gt;

&lt;p&gt;Now we need to restart Apache&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apachectl restart
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, if we now visit: &lt;code&gt;http://daily-dev-tips.local&lt;/code&gt; we don't see anything...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mapping-the-local-domain"&gt;
  &lt;/a&gt;
  Mapping the local domain
&lt;/h2&gt;

&lt;p&gt;To make the local domain work, we need to map the domain to our local server.&lt;/p&gt;

&lt;p&gt;Modify your host file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;nano /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And add a line like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;127.0.0.1       daily-dev-tips.local
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure you use the domain you set in the vhost file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-our-website"&gt;
  &lt;/a&gt;
  Testing our website
&lt;/h2&gt;

&lt;p&gt;If you open your website link, another app might point to the default page, depending on whether you already set up the folder.&lt;/p&gt;

&lt;p&gt;I didn't, so create the folder in the place you provided in the vhost file and create a simple index.php inside.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Hello world from my own Mac OS X server'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now open the website again and see the beauty of your server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8kxF_Di8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622892784431/zqB_N0Csw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8kxF_Di8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622892784431/zqB_N0Csw.png" alt="Mac OS X Virtual Host server"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>mac</category>
      <category>serverless</category>
    </item>
    <item>
      <title>How to patch an HTTP Response with Cypress</title>
      <author>Tim Deschryver</author>
      <pubDate>Wed, 09 Jun 2021 05:48:33 +0000</pubDate>
      <link>https://dev.to/this-is-learning/how-to-patch-an-http-response-with-cypress-1kmh</link>
      <guid>https://dev.to/this-is-learning/how-to-patch-an-http-response-with-cypress-1kmh</guid>
      <description>&lt;p&gt;Follow me on Twitter at &lt;a href="https://timdeschryver.dev/twitter"&gt;@tim_deschryver&lt;/a&gt; | Subscribe to the &lt;a href="https://timdeschryver.dev/newsletter"&gt;Newsletter&lt;/a&gt; | Originally published on &lt;a href="https://timdeschryver.dev/blog/how-to-patch-an-http-response-with-cypress"&gt;timdeschryver.dev&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://timdeschryver.dev/blog/how-to-patch-an-http-response-with-cypress?tldr=true"&gt;Read the TLDR version on timdeschryver.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For most of our Cypress tests, we have a &lt;a href="https://timdeschryver.dev/blog/reseed-your-database-with-cypress"&gt;seed for each test&lt;/a&gt;.a&lt;br&gt;
However, this might lead to a lot of different data seeds, which can become an unmaintainable spaghetti bowl. Especially for large data objects that have one or more child relations.&lt;/p&gt;

&lt;p&gt;As a solution, we can patch the incoming HTTP response by using the &lt;a href="https://docs.cypress.io/api/commands/intercept"&gt;intercept&lt;/a&gt; and &lt;a href="https://docs.cypress.io/api/commands/intercept#Providing-a-stub-response-with-req-reply"&gt;reply&lt;/a&gt; methods of Cypress.&lt;/p&gt;

&lt;p&gt;This quick and easy fix eliminates the problem that we're oversaturating the codebase with data seeds.&lt;br&gt;
I find this ideal for one-off tests or when you're not in total control of the (seeded) data.&lt;/p&gt;

&lt;p&gt;In the following snippet, we see how we can change the username of a GitHub user in the test.&lt;br&gt;
The code intercepts the HTTP request to the GitHub API and uses the response in the reply method to overwrite the username.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should path the response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;intercept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`https://api.github.com/users/timdeschryver`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fake-username&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findByRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;heading&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/hello fake-username/i&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While the above example is very trivial, this solution allows us to quickly re-use an existing seed to test a specific business requirement. For example, to create a customer with overdue payments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should warn when the customer has an overdue payment and makes a new order&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;intercept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`/api/customers/*`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// reuse the first payment and convert it to an overdue payment&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;payment&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;payments&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nx"&gt;payment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;paymentDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;payments&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;payment&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findByRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alert&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/account has an overdue payment/i&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We choose this solution because until recently our team was in total control of the customers' data, which encapsulates multiple domains.&lt;br&gt;
While it was a chore to create a new customer seed, it was just a one-time task.&lt;br&gt;
But now, we also had the requirement to read from a legacy system.&lt;br&gt;
Instead of deploying a faked legacy system with test data, we choose to reuse the existing system and to patch the incoming responses. We think this is an elegant solution that requires less work, and this way we're also not required to learn and interact with the internals of the legacy system.&lt;/p&gt;




&lt;p&gt;Follow me on Twitter at &lt;a href="https://timdeschryver.dev/twitter"&gt;@tim_deschryver&lt;/a&gt; | Subscribe to the &lt;a href="https://timdeschryver.dev/newsletter"&gt;Newsletter&lt;/a&gt; | Originally published on &lt;a href="https://timdeschryver.dev/blog/how-to-patch-an-http-response-with-cypress"&gt;timdeschryver.dev&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>cypress</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Using pre-commit and post-update git hooks</title>
      <author>Joseph D. Marhee</author>
      <pubDate>Wed, 09 Jun 2021 05:42:08 +0000</pubDate>
      <link>https://dev.to/jmarhee/using-pre-commit-and-post-update-git-hooks-1e54</link>
      <guid>https://dev.to/jmarhee/using-pre-commit-and-post-update-git-hooks-1e54</guid>
      <description>&lt;p&gt;Adding some additional processing to your git workflow is sometimes useful/cool/interesting, and the functionality provided by &lt;a href="https://githooks.com/"&gt;githooks&lt;/a&gt; make this fairly accessible to make use of. I typically make use of very few of these (in place of having things happen on the server-side — tests, etc.-that can be enabled externally or using server-side hooks) on the client-side, and adapt two included in &lt;code&gt;.git/hooks/&lt;/code&gt; by default, &lt;code&gt;pre-commit&lt;/code&gt; and &lt;code&gt;post-update&lt;/code&gt;, for, you guessed it, before commits are made, and after a set of commits are pushed.&lt;/p&gt;

&lt;p&gt;In my capacity as an operations engineer, I make use of tools like Terraform often, which has the benefit of including a formatting tool and a validation tool — this is a good example of where a pre-commit hook can be useful — before I create a commit, I can validate the manifest and check formatting/style of the manifests being updated. I can do this by modifying, in my project root, &lt;code&gt;.git/hooks/pre-commit.sample&lt;/code&gt;, and add something like this to check &lt;code&gt;.tf&lt;/code&gt; files against these standards:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;modified_files&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;git ls-files &lt;span class="nt"&gt;-m&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for &lt;/span&gt;f &lt;span class="k"&gt;in &lt;/span&gt;modified_files
&lt;span class="k"&gt;do
    if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$f&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt;.tf &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
        &lt;/span&gt;terraform validate &lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;dirname&lt;/span&gt; &lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
        terraform &lt;span class="nb"&gt;fmt&lt;/span&gt; &lt;span class="nv"&gt;$f&lt;/span&gt; &lt;span class="nt"&gt;-check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true
        &lt;/span&gt;git add &lt;span class="nv"&gt;$f&lt;/span&gt;
    &lt;span class="k"&gt;fi
done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I’ve adapted my approach from &lt;a href="https://gist.github.com/jamtur01/a567078b7ba545c3492f7cd32a65450d"&gt;James Turnbull’s pre-commit hook script&lt;/a&gt; to process this slightly differently, but also highlights that these are basically just a scriptable interface to manage git’s behavior.&lt;/p&gt;

&lt;p&gt;To enable this hook, copy the file to &lt;code&gt;.git/hooks/pre-commit&lt;/code&gt; (no &lt;code&gt;.sample&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Let’s take a look at a more involved example in my &lt;code&gt;post-update&lt;/code&gt; script. In my case, I am working on a Mac, so I’d like to make the most of this — maybe introduce some more visual cues for me to follow, so I want to use some Applescript as well.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;.git/hooks/post-update&lt;/code&gt;, I want to grab the hash and message of the last commit pushed, and the branch I pushed to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;COMMIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;git log &lt;span class="nt"&gt;-1&lt;/span&gt; HEAD | &lt;span class="nb"&gt;head&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; 1 | &lt;span class="nb"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;'{print $1}'&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;MESSAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;git log &lt;span class="nt"&gt;--format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;%B &lt;span class="nt"&gt;-n&lt;/span&gt; 1 &lt;span class="nv"&gt;$COMMIT&lt;/span&gt; | xargs &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;BRANCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;git branch | &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="se"&gt;\*&lt;/span&gt; | &lt;span class="nb"&gt;cut&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="nt"&gt;-f2&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and to make this useful, I can see a summary of my latest push by adding this call to &lt;code&gt;osascript&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/usr/bin/osascript &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;EOF&lt;/span&gt;&lt;span class="sh"&gt;
display dialog "To &lt;/span&gt;&lt;span class="nv"&gt;$BRANCH&lt;/span&gt;&lt;span class="sh"&gt;:&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="nv"&gt;$MESSAGE&lt;/span&gt;&lt;span class="se"&gt;\n\n\t&lt;/span&gt;&lt;span class="sh"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$COMMIT&lt;/span&gt;&lt;span class="sh"&gt;)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="sh"&gt;" with title "Git Push" buttons {"I meant to do that"} default button 1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To have a pop-up dialog and just a reminder of what I did, so I stop to check my work one last time before moving on to my next task.&lt;/p&gt;

</description>
      <category>git</category>
      <category>terraform</category>
      <category>automation</category>
      <category>testing</category>
    </item>
    <item>
      <title>3 ways to prevent micro-burnouts</title>
      <author>Sandor Dargo</author>
      <pubDate>Wed, 09 Jun 2021 05:14:52 +0000</pubDate>
      <link>https://dev.to/sandordargo/3-ways-to-prevent-micro-burnouts-2jbh</link>
      <guid>https://dev.to/sandordargo/3-ways-to-prevent-micro-burnouts-2jbh</guid>
      <description>&lt;p&gt;I've been proposing some topics for a person I'm mentoring and one was "productivity/motivation". She immediately became quite excited about the idea, so I asked what is going on.&lt;/p&gt;

&lt;p&gt;She told me that she is regularly facing issues regarding her motivation and therefore her productivity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#working-in-bursts"&gt;
  &lt;/a&gt;
  Working in bursts
&lt;/h2&gt;

&lt;p&gt;It turned out that she is often doing unpaid overtime to meet some deadlines. Usually afterwards she has a period when there is less tasks to do, but she doesn't really work less. She is losing a lot of time during those more slack periods because she is not concentrated and whatever time is left for her, she doesn't use to have a rest or to learn something new.&lt;/p&gt;

&lt;p&gt;Is there a problem with this? You might say no, but I think there is. To say the truth, it doesn't matter what I think or what you think about this. She said it's a problem to her and it's happening with her, so that's a problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#without-proper-rest-towards-a-burnout"&gt;
  &lt;/a&gt;
  Without proper rest, towards a burn-out
&lt;/h2&gt;

&lt;p&gt;The results of these long hours manifest in extra tiredness felt after the overloaded sprints, after the burst of overtimes. This makes sense, we cannot overload ourselves in the long run without paying a penalty and even in the short terms we can see some harmful effects.&lt;/p&gt;

&lt;p&gt;This is not a problem if it's handled the right way. Think about sprinters. They have to deliver extreme performance in a (few) hundred meters. But after, they get some rest. They wouldn't be able to sprint through a marathon. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x28V9N_n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kw9i0otgtgcji9zyg9y8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x28V9N_n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kw9i0otgtgcji9zyg9y8.jpg" alt="Bolt running and resting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's not different at work. You cannot crunch for weeks and than claim that everything is fine. It's probably OK to do a full-nighter once in a while (though I would discourage you from doing it), but you cannot work late night every day and stay mentally healthy.&lt;/p&gt;

&lt;p&gt;In fact, one of the departments I worked for had such a problem - luckily it got solved before I joined. Due to extremely bad management, people were doing overtime for long times, and of course, the productivity dropped even below. By the time they kind of finished their project, people were so much fed up with the situation that in a year everyone left. The first one was the manager and but she didn't leave voluntarily. Even that didn't save the team, it had to be rebuilt from its ashes.&lt;/p&gt;

&lt;p&gt;What my mentee is experiencing is in fact a form of burnout. A micro-burnout. After each sprint (not using the agile terms here), she experiences lack of motivation, exhaustion, lack of performance. It's not dangerous yet, she can climb back to her previous states, but if she doesn't change her attitude she can soon find herself in a situation where it will be impossible for her to come back. Or better to say to find any motivation to come back.&lt;/p&gt;

&lt;p&gt;She will eventually burn out following this pattern.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solutions"&gt;
  &lt;/a&gt;
  Solutions
&lt;/h2&gt;

&lt;p&gt;You might argue if what I call a micro-burnout is a burnout or if it can lead to a "real burnout". I'm not a doctor of any kind. Probably you are not either. But we can agree that it's not healthy to regularly do unpaid overtime without having a clear goal in mind.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preserve-yourself-youre-in-a-marathon"&gt;
  &lt;/a&gt;
  Preserve yourself, you're in a marathon
&lt;/h3&gt;

&lt;p&gt;You might commit to do this for 2 years until you become a tech lead, a manager, whatever. I wouldn't advise to do so, I think there are better ways - more on that in my future book &lt;a href="https://leanpub.com/thesenioritytrap/"&gt;The Seniority Trap&lt;/a&gt; - but at least you have a plan. Most people have no plans. They work hard, because they take pride in it, because of their ego, but they have no idea where they want to end up.&lt;/p&gt;

&lt;p&gt;Working so hard without a plan simply paves the road to an early job switch at best, psychological and physical problems at worst.&lt;/p&gt;

&lt;p&gt;I remember what probably my so-far best boss used to tell one of my colleagues who used to put in a lot of overtime. "Look, Josh (not his real name), go home. I don't need someone who works so much in a day. I need someone who will be still here and work for me in a year." He nailed it. You have to find a sustainable pace to serve your team in the long run.&lt;/p&gt;

&lt;p&gt;A great manager understands this and acts proactively. A good manager understands if you tell him that you cannot keep working like that because it will harm you and eventually the team. A bad one will not understand anything like that, so you should leave.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#there-are-always-so-many-tasks-manage-your-expectations-manage-your-time"&gt;
  &lt;/a&gt;
  There are always so many tasks, manage your expectations, manage your time
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;We have to consider that the amount of work to be done is always more than our resources would allow us to complete. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's something we have to live with both as an individual contributor and both as a manager.&lt;/p&gt;

&lt;p&gt;If we don't understand it as a manager, we will chase away our best people one way or another. If we don't understand it as an individual contributor, we will suffer and always feel dissatisfied.&lt;/p&gt;

&lt;p&gt;I'm a firm believer that we are responsible of our state. Let it be mental, physical, financial, whatever. So before you start blaming your manager you should also consider what if it's a you problem. What if the workload is normal, but you struggle. Maybe you have to top up your skills, maybe it's about your time management skills, maybe it's projecting unreal expectations.&lt;/p&gt;

&lt;p&gt;I knew people who were technically very competent, not extremely productive people who spent significantly more time at work than the average others simply because - according to them - they had very poor time management skills. If that's the case, you should start working on those skills, there are good trainings on them. I really liked the classroom trainings of &lt;a href="https://uk.linkedin.com/in/john-b-may-b7b6821"&gt;John. B. May&lt;/a&gt;. As a start, let me share &lt;a href="https://www.sandordargo.com/blog/2018/12/05/reconquering-my-job"&gt;this summary&lt;/a&gt; with you based on John's course.&lt;/p&gt;

&lt;p&gt;Let give you a sneak peek:&lt;br&gt;
1) Mute your IM and e-mail client and check them at regular intervals. &lt;br&gt;
2) Block out uninterrupted times in your agenda. Preferably at 2 hour longs, but longer the better.&lt;br&gt;
3) Use the pomodoro technique and work for at least 25 minutes without checking anything. No e-mail, no IM, no social media, just focused work on one task.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://www.sandordargo.com/blog/2018/12/05/reconquering-my-job"&gt;Click here for more details!&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#span-out-the-workload-or-vary-your-weeks"&gt;
  &lt;/a&gt;
  Span out the workload or vary your weeks
&lt;/h3&gt;

&lt;p&gt;Yet another possibility is that your workload is really just varying. E.g. for accountants it's quite usual, they have more work at certain periods of the month and of the year as well.&lt;/p&gt;

&lt;p&gt;It's fine, if you and your management can handle it properly. If one week you work 60 hours, the next week you should work 20 and take the time to recover, or maybe you can take two 30-hour weeks, if you prefer. If you have such long weeks regularly, you should make sure that you take the time for rest. But you should also examine what you could do in order to span that workload over multiple weeks and to have a balanced workload. In software development, often this is just a planning and communication issue.&lt;/p&gt;

&lt;p&gt;In case it's not and it's indeed not possible to span that work out then it's crucial to set up weeks with varying working hours. It'll not only give you time for recovery, but it will also make you more productive. As &lt;a href="https://en.wikipedia.org/wiki/Parkinson%27s_law"&gt;Parkinson's law&lt;/a&gt; says, work expands to fill the time allotted. If you have 40 hours to do 20 hours of work, for sure it will take up 40 hours. Limit it and you'll find a way to do it in 20 hours.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we explored the phenomenon of micro-burnouts. You might experience it after working very-hard for a couple of weeks or days but you don't take time to rest afterwards. Instead you just fall back to your normal hours. Repeat this cycle and it's more and more likely that you're going to experience micro-burnouts. You'll know that you have it when you experience unreasonable tiredness, demotivation and you feel that each of your tasks take too much time compared to previous experiences.&lt;/p&gt;

&lt;p&gt;How to overcome this? I don't know, but I collected a couple of techniques to prevent it!&lt;/p&gt;

&lt;p&gt;First of all, you must understand that there will be always more work to do than hours in the day. Once that sinks in, you have to prioritize and delegate your tasks (when possible) and definitely communicate the changing priorities if that affects for your team.&lt;/p&gt;

&lt;p&gt;Often, you just have to stop those churns. Maybe nobody expects you to work so much and they don't even award it. Maybe it's your own expectations or ego. Let it go.&lt;/p&gt;

&lt;p&gt;You have to think about your time management as well. It can simply be that you are slow, scattered, while technically good at the same time.&lt;/p&gt;

&lt;p&gt;If you often have longer periods of overtime followed by periods of less work, you should sit down with your boss, with your team and either try to span out the work for more equal workloads or you have to plan shorter weeks after long ones to give yourself recovery time.&lt;/p&gt;

&lt;p&gt;Have you ever experienced micro-burnouts? What did you do to overcome or to prevent them?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-deeper"&gt;
  &lt;/a&gt;
  Connect deeper
&lt;/h2&gt;

&lt;p&gt;If you liked this article, please &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hit on the like button,
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/gvcv1j"&gt;subscribe to my newsletter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;and let's connect on &lt;a href="https://twitter.com/SandorDargo"&gt;Twitter&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>watercooler</category>
      <category>mentalhealth</category>
      <category>career</category>
      <category>management</category>
    </item>
    <item>
      <title>🔴 Build Twitter Clone using HTML and CSS - Tutorial</title>
      <author>Somanath Goudar</author>
      <pubDate>Wed, 09 Jun 2021 05:00:19 +0000</pubDate>
      <link>https://dev.to/somanathgoudar/build-twitter-clone-using-html-and-css-tutorial-aop</link>
      <guid>https://dev.to/somanathgoudar/build-twitter-clone-using-html-and-css-tutorial-aop</guid>
      <description>&lt;p&gt;Hello, Everyone. Lets Learn to build Twitter Clone using just HTML &amp;amp; CSS. I Just Love to build these to practice my HTML &amp;amp; CSS Skills. I made a tutorial video to help beginners to improve there html &amp;amp; css skills to build real world projects.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;➜ Tutorial Video:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TSsPAOmTFsM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➜ Github:&lt;/strong&gt; &lt;a href="https://github.com/somanath-goudar/html-css-projects"&gt;https://github.com/somanath-goudar/html-css-projects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA"&gt;Subscribe&lt;/a&gt; to My YouTube Channel, Tomorrow I Will also be building &lt;strong&gt;Hulu Clone&lt;/strong&gt; with just HTML &amp;amp; CSS.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;➜ You may also like my other posts:&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/facebook-clone-using-just-html-css-beginners-tutorial-2fe5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;FACEBOOK Clone Using just HTML &amp;amp; CSS - Beginners Tutorial&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ May 21 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
 


&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/build-a-youtube-clone-with-just-html-css-for-complete-beginners-4fk1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a YouTube Clone with just HTML &amp;amp; CSS + Responsive - For  Beginners&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ Mar 21 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/build-tiktok-clone-in-just-30-mins-using-html-and-css-213l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🔴 Build TikTok Clone using HTML and CSS&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ May 24 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>html</category>
    </item>
    <item>
      <title>Understanding Kubernetes Architecture</title>
      <author>Prashant Ghildiyal</author>
      <pubDate>Wed, 09 Jun 2021 04:59:07 +0000</pubDate>
      <link>https://dev.to/pghildiyal/understanding-kubernetes-architecture-2k0l</link>
      <guid>https://dev.to/pghildiyal/understanding-kubernetes-architecture-2k0l</guid>
      <description>&lt;p&gt;Kubernetes is becoming the new standard for deploying and managing the software in Cloud because of the wide number of features that Kubernetes provide such as automated rolling and rollback of deployments, storage orchestration, automating bin packing, self-healing, management of secrets and configuration files and many more. This blog post will give you a high-level view of the Kubernetes Architecture and in-depth explanation about Kubernetes Node Architecture and its components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview-of-kubernetes-architecture"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Overview of Kubernetes Architecture&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;A Kubernetes cluster consists of a set of worker machines known as &lt;strong&gt;nodes&lt;/strong&gt; that run containerized applications. Every cluster has at least one worker node. The worker node(s) host the pods that are the components of the application workload.&lt;/p&gt;

&lt;p&gt;Kubernetes cluster consists of at least one master and multiple nodes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#master"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Master:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;It is responsible for exposing the application program interface (API), scheduling the deployments and managing the overall Kubernetes cluster, the master server runs the following components:&lt;/p&gt;

&lt;p&gt;Kubernetes Master and Node Components&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Server:&lt;/strong&gt; It performs all the administrative tasks through the API server within the master node.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;scheduler:&lt;/strong&gt; It schedules the tasks to worker nodes. It stores the resource usage information for each slave node.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;controller-manager:&lt;/strong&gt; The controller watches the desired state of the objects it manages and ensures that their current state through the API server. If the current state of the objects it manages does not meet the desired state, then the control loop takes corrective steps to make sure that the current state is the same as the desired state.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;etcd:&lt;/strong&gt; etcd is a distributed key-value store that stores the cluster state and can also be used to store configuration details such as subnets, ConfigMaps, Secrets, etc. It can be part of the Kubernetes Master, or it can be configured externally.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mgBiCRhY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqmuw9hz2c5o7jn56gc1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mgBiCRhY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqmuw9hz2c5o7jn56gc1.png" alt="Basic Kubernetes Architecture Representation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#node"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Node:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;It is a physical server that has pods inside them that are responsible for running applications inside them and managed by the Master. The necessary components of Node are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubelet:&lt;/strong&gt; It is an agent that communicates with the Master node and executes on the worker nodes. It gets the Pod specifications through the API server and executes the containers associated with the Pod and ensures that the containers running within the pods are running and in a healthy state.&lt;/p&gt;

&lt;p&gt;Kubelet also periodically monitors the state of the pods and in case of any problem, launches the new instance instead. Kubelet also has an internal HTTP server exposing a read-only view at port 10255. For Example: /healthz is a health check endpoint, /pods get a list of running pods, /spec to get specifications of the machine on which kubelet is running on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kube-Proxy:&lt;/strong&gt; Kube-proxy runs on each node to deal with individual host sub-netting and ensures that the services are available to external parties. For each Service endpoint, Kube-proxy sets up the routes so that it can reach to it.&lt;/p&gt;

&lt;p&gt;It serves as a network proxy and a load balancer for the pods running on that particular node. It is an important networking part of Kubernetes and ensures that there is an efficient communication across all elements of the cluster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cAdvisor:&lt;/strong&gt; It was originally created by Google is now integrated with Kubelet. It collects metrics such as CPU, memory, file, and network usage for all running containers and makes sure that they are running properly. All the data is sent to the scheduler to ensure the performance of the node which is further used for tasks like scheduling, horizontal pod scaling and managing container resource limits.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Container Runtime:&lt;/strong&gt; Container Runtime is the software that is responsible for pulling images from public or private registries running containers based on these images. Kubelet directly interacts with Container Runtime to start, stop or delete containers. Kubernetes supports several runtimes such as Docker, container, CRI-O and any other implementation of Kubernetes CRI(Container Runtime Interface).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  &lt;strong&gt;About Me:&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;I am Prashant and I've been thoroughly enjoying working in the DevOps space for years. My main areas of work used to be around DevOps, Kubernetes Orchestration and CI/CD. With Experience I understood that there is a lack of consolidated delivery workflow for Kubernetes. Sure, there are tools that will help us achieve a specific task but no tool that encompasses the whole workflow efficiently. So, with some of my passionate friends in tech, I have Cofounded Devtron Labs intended to solve this problem. It is a completely community led Open Source, Software Delivery workflow for Kubernetes that efficiently manages security, cost and Stability.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/devtron-labs"&gt;
        devtron-labs
      &lt;/a&gt; / &lt;a href="https://github.com/devtron-labs/devtron"&gt;
        devtron
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Software Delivery Workflow For Kubernetes
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/devtron-labs/devtron/main/./assets/logo.png"&gt;&lt;img width="200" height="156" src="https://res.cloudinary.com/practicaldev/image/fetch/s--AB9WPdZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devtron-labs/devtron/main/./assets/logo.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Devtron is an open source software delivery workflow for kubernetes written in go
&lt;br&gt;
&lt;a href="https://docs.devtron.ai/" rel="nofollow"&gt;&lt;strong&gt;Explore documentation »&lt;/strong&gt;&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;
&lt;a href="https://devtron.ai/" rel="nofollow"&gt;Website&lt;/a&gt;
·
&lt;a href="https://devtron.ai/blog/" rel="nofollow"&gt;Blog&lt;/a&gt;
·
&lt;a href="https://discord.gg/jsRG5qx2gp" rel="nofollow"&gt;Join Discord&lt;/a&gt;
·
&lt;a href="https://twitter.com/DevtronL" rel="nofollow"&gt;Twitter&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://discord.gg/jsRG5qx2gp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/49150eb0ec107d15b5dd28d7377dfa805fe47ef61c1180a6ce3c9f482cb28d40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6f696e25323075732532306f6e2d446973636f72642d6530313536332e737667" alt="Join Discord"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/badge/github.com/devtron-labs/devtron" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d68a0a3471479dff6e5155220bd1e304b6d6405d281bbc54d5d559f78fa794da/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f64657674726f6e2d6c6162732f64657674726f6e" alt="Go Report Card"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/devtron-labs/devtron/main/./LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/2a2157c971b7ae1deb8eb095799440551c33dcf61ea3d965d86b496a5a65df55/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://bestpractices.coreinfrastructure.org/projects/4411" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/649d033dd2509020bf49e2775ffb7b18c6fcc80b4263d7050707540cf4357aa7/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f343431312f6261646765" alt="CII Best Practices"&gt;&lt;/a&gt;
&lt;a href="http://golang.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b530ddfe089b6cab64711fdab82afaa28b0e1a833b26bdb15082e261850d22e6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d476f2d3166343235662e737667" alt="made-with-Go"&gt;&lt;/a&gt;
&lt;a href="http://devtron.ai/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc954b1e6af0e39a8148a4908ac9a4e49e4f17340977c9c88173e3788af10eb6/68747470733a2f2f696d672e736869656c64732e696f2f776562736974652d75702d646f776e2d677265656e2d7265642f687474702f736869656c64732e696f2e737667" alt="Website devtron.ai"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
📖 Menu&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#bulb-why-devtron"&gt;Why Devtron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#tada-features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#rocket-getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.devtron.ai/" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#memo-compatibility-notes"&gt;Compatibility Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#busts_in_silhouette-community"&gt;Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#handshake-contribute"&gt;Contribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#beetle-vulnerability-reporting"&gt;Vulnerability Reporting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#bookmark-license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
💡 Why Devtron?&lt;/h2&gt;

&lt;p&gt;It is designed as a self-serve platform for operationalizing and maintaining applications (AppOps) on kubernetes in a developer friendly way
&lt;br&gt;
&lt;br&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/devtron-labs/devtron/main/./assets/preview.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7PECaETA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/devtron-labs/devtron/main/./assets/preview.gif"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
🎉 Features&lt;/h2&gt;


 &lt;b&gt; Zero code software delivery workflow &lt;/b&gt;
  
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;Workflow which understands the domain of &lt;strong&gt;kubernetes, testing, CD, SecOps&lt;/strong&gt; so that you dont have to write scripts&lt;/li&gt;
&lt;li&gt;Reusable and composable components so that workflows are easy to contruct and reason through&lt;/li&gt;
&lt;/ul&gt;


 &lt;b&gt; Multi cloud deployment &lt;/b&gt;
 &lt;br&gt; 
&lt;ul&gt;
&lt;li&gt;Deploy to multiple kubernetes cluster&lt;/li&gt;
&lt;/ul&gt;


  &lt;b&gt; Easy dev-sec-ops integration &lt;/b&gt; 
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;Multi level security policy at global, cluster, environment and application for efficient hierarchical policy management&lt;/li&gt;
&lt;li&gt;Behavior driven security policy&lt;/li&gt;
&lt;li&gt;Define policies and exception for kubernetes resources&lt;/li&gt;
&lt;li&gt;Define policies for events for faster resolution&lt;/li&gt;
&lt;/ul&gt;


  &lt;b&gt; Application debugging dashboard &lt;/b&gt; 
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;One place…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/devtron-labs/devtron"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


</description>
      <category>devops</category>
      <category>beginners</category>
      <category>kubernetes</category>
      <category>go</category>
    </item>
  </channel>
</rss>
