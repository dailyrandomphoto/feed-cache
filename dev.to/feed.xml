<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>20 Machine Learning Questions and Answer To Destroy Your Interview/</title>
      <author>Avi Arora</author>
      <pubDate>Fri, 29 Oct 2021 19:42:57 +0000</pubDate>
      <link>https://dev.to/aarora4/20-machine-learning-questions-and-answer-to-destroy-your-interview-1e3g</link>
      <guid>https://dev.to/aarora4/20-machine-learning-questions-and-answer-to-destroy-your-interview-1e3g</guid>
      <description>&lt;h2&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;In this article you will find essential machine learning interview questions that are geared towards beginners preparing for job or internship interviews. The questions in this article are general and cover a large breadth of information.&lt;/p&gt;

&lt;p&gt;If you are looking for more specific and niche questions geared towards Intermediate and Advanced readers, I recommend you check out some of my other &lt;strong&gt;topic specific machine learning question lists&lt;/strong&gt; below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://analyticsarora.com/11-unique-machine-learning-interview-questions-on-primary-component-analysis/"&gt;Primary Component Analysis&lt;/a&gt;&lt;br&gt;&lt;a href="https://analyticsarora.com/8-unique-machine-learning-interview-questions-on-backpropagation/"&gt;Backpropagation&lt;/a&gt;&lt;br&gt;&lt;a href="https://analyticsarora.com/8-unique-machine-learning-interview-questions-about-random-forests/"&gt;Random Forest&lt;/a&gt;&lt;br&gt;&lt;a href="https://analyticsarora.com/quickly-master-gradient-boosted-decision-trees-ml-interview-qa/"&gt;Gradient Boosted Decision Trees&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Without further ado, let's get into the quiz! You can take the interactive quiz here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://analyticsarora.com/20-machine-learning-questions-and-answer-to-destroy-your-interview/"&gt;https://analyticsarora.com/20-machine-learning-questions-and-answer-to-destroy-your-interview/&lt;/a&gt;&lt;/p&gt;




</description>
      <category>machinelearning</category>
      <category>beginners</category>
      <category>quiz</category>
      <category>datascience</category>
    </item>
    <item>
      <title>TMA - Too Many Acronyms (webdev edition)</title>
      <author>Eugene Kopich</author>
      <pubDate>Fri, 29 Oct 2021 19:14:18 +0000</pubDate>
      <link>https://dev.to/web2033/tma-too-many-acronyms-webdev-edition-1la5</link>
      <guid>https://dev.to/web2033/tma-too-many-acronyms-webdev-edition-1la5</guid>
      <description>&lt;p&gt;Web developers love three-letter acronyms. Here's some:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;API - Application Programming Interface&lt;/li&gt;
&lt;li&gt;AWS - Amazon Web Services&lt;/li&gt;
&lt;li&gt;BEM - Block, Element, Modifier&lt;/li&gt;
&lt;li&gt;CDN - Content Delivery Network&lt;/li&gt;
&lt;li&gt;CLI - Command Line Interface&lt;/li&gt;
&lt;li&gt;CLS - Cumulative Layout Shift&lt;/li&gt;
&lt;li&gt;CMS - Content Management System&lt;/li&gt;
&lt;li&gt;CSR - Client-side Rendering&lt;/li&gt;
&lt;li&gt;CSS - Cascading Style Sheets&lt;/li&gt;
&lt;li&gt;DDD - Domain Driven Design&lt;/li&gt;
&lt;li&gt;DNS - Domain Name System&lt;/li&gt;
&lt;li&gt;DOM - Document Object Model&lt;/li&gt;
&lt;li&gt;DRY - Don’t Repeat Yourself&lt;/li&gt;
&lt;li&gt;ESM - ECMAScript modules&lt;/li&gt;
&lt;li&gt;FID - First Input Delay&lt;/li&gt;
&lt;li&gt;GCP - Google Cloud Platform&lt;/li&gt;
&lt;li&gt;GPL - General Public Licence&lt;/li&gt;
&lt;li&gt;GUI - Graphical User Interface&lt;/li&gt;
&lt;li&gt;HMR - Hot Module Replacement&lt;/li&gt;
&lt;li&gt;IDE - Integrated Development Environment&lt;/li&gt;
&lt;li&gt;ISR - Incremental Static Regeneration&lt;/li&gt;
&lt;li&gt;JSX - JavaScript XML&lt;/li&gt;
&lt;li&gt;LCP - Largest Contentful Paint&lt;/li&gt;
&lt;li&gt;LTS - Long Term Support&lt;/li&gt;
&lt;li&gt;MDN - Mozilla Developer Network&lt;/li&gt;
&lt;li&gt;MPA - Multi Page Application&lt;/li&gt;
&lt;li&gt;MVC - Model-View-Controller&lt;/li&gt;
&lt;li&gt;MVP - Minimum Viable Product&lt;/li&gt;
&lt;li&gt;NPM - Node Package Manager&lt;/li&gt;
&lt;li&gt;OOP - Object-Oriented Programming&lt;/li&gt;
&lt;li&gt;OSS - Open-Source Software&lt;/li&gt;
&lt;li&gt;PWA - Progressive Web Apps&lt;/li&gt;
&lt;li&gt;SDK - Software Development Kit&lt;/li&gt;
&lt;li&gt;SEO - Search Engine Optimization&lt;/li&gt;
&lt;li&gt;SFC - Single File Component&lt;/li&gt;
&lt;li&gt;SPA - Single Page Application&lt;/li&gt;
&lt;li&gt;SQL - Structured Query Language&lt;/li&gt;
&lt;li&gt;SSG - Static Site Generation&lt;/li&gt;
&lt;li&gt;SSL - Secure Socket Layer&lt;/li&gt;
&lt;li&gt;SSR - Server-Side Rendering&lt;/li&gt;
&lt;li&gt;SVG - Scalable Vector Graphics&lt;/li&gt;
&lt;li&gt;SWC - Speedy web compiler&lt;/li&gt;
&lt;li&gt;SWR - stale-while-revalidate&lt;/li&gt;
&lt;li&gt;TDD - Test Driven Development&lt;/li&gt;
&lt;li&gt;TTI - Time to Interactive&lt;/li&gt;
&lt;li&gt;UMD - Universal Module Definition&lt;/li&gt;
&lt;li&gt;URL - Uniform Resource Locator&lt;/li&gt;
&lt;li&gt;VCS - Version Control System&lt;/li&gt;
&lt;li&gt;XML - Extensible Markup Language&lt;/li&gt;
&lt;li&gt;XSS - Cross Site Scripting&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>developer</category>
      <category>learning</category>
    </item>
    <item>
      <title>Multi-Tenancy with Nodejs and mongoDb </title>
      <author>Code Salley</author>
      <pubDate>Fri, 29 Oct 2021 19:04:55 +0000</pubDate>
      <link>https://dev.to/codesalley/multi-tenancy-with-nodejs-and-mongodb-3gn1</link>
      <guid>https://dev.to/codesalley/multi-tenancy-with-nodejs-and-mongodb-3gn1</guid>
      <description>&lt;p&gt;The main concept of multi-tenancy is privacy and data segregation, With MongoDB architecture ( Database and collections ). It’s easy to allocate collection for tenants database &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XpnY1MAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvbl5wkcok8k6en3dmzo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XpnY1MAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvbl5wkcok8k6en3dmzo.png" alt="Erb diagram" width="880" height="469"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should have a simple npm application setup and install &lt;code&gt;mongoose&lt;/code&gt; by running;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Implement a logic to handle MongoDB database connection and switching. In this scenario I will use two different approaches, switching between database's using &lt;code&gt;useDb&lt;/code&gt; and &lt;code&gt;disconnect&lt;/code&gt; and &lt;code&gt;reconnect&lt;/code&gt; ( this is useful for test cases only )&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect and disconnect approach&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// mongoose import &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// a function that takes database name and database url as import and return a mongoose connection&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connectDb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;databaseName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`mongodb connected to &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;connectDb&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with the above usage, all we need is the database name and database URL, We check the database name to see if it's already open, if open we just return mongoose object else we close all open connections and reconnect to the database using the URL we passed in. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useDb(recommended) approach&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// mongoose import &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// a function that takes database name and database url as import and return a mongoose connection&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connectDb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;databaseName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
                           &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`mongodb connected to &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;connectDb&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A very simple approach, with &lt;code&gt;useDb&lt;/code&gt; all we need is an open connection or create a new connection then return a new instance of MongoDB by passing the database name to the &lt;code&gt;useDb&lt;/code&gt; function from an open MongoDB connection. In other cases you might have separate models(schema) for tenants, Here is an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// connect to mongodb&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
                           &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// connect to prefer database&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;databaseName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// use model(schema) preferred&lt;/span&gt;
&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;modelName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Keep tenants locked up!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/__salley"&gt;twitter: code salley&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>mongodb</category>
      <category>multitenancy</category>
    </item>
    <item>
      <title>Tips to become a great programmer</title>
      <author>John</author>
      <pubDate>Fri, 29 Oct 2021 18:17:19 +0000</pubDate>
      <link>https://dev.to/jnb/tips-to-become-a-great-programmer-4fig</link>
      <guid>https://dev.to/jnb/tips-to-become-a-great-programmer-4fig</guid>
      <description>&lt;p&gt; A good programmer is someone who always looks both ways before crossing a one-way street. ~Doug Linder&lt;/p&gt;

&lt;p&gt;Let me start by saying that I do not consider myself to be a competent coder. I consider my coding abilities to be mediocre, and I am still learning and have a long way to go before I am even remotely satisfied with them.Yes, I am better at programming than a lot of others, but that is just because they are lazy and choose to sit about idle all day instead of programming. Their dreadful abilities make my less dreadful abilities appear fantastic.&lt;/p&gt;

&lt;p&gt;So most of the tips I will mention below are lessons learnt from failed endeavours, they are what I have wanted to be and I am not. So lets dive in. &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/tips-to-become-a-great-programmer/"&gt;Tips to become a great programmer&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>4 Consejos para ser un mejor desarrollador</title>
      <author>Ariel Calix</author>
      <pubDate>Fri, 29 Oct 2021 17:58:12 +0000</pubDate>
      <link>https://dev.to/arielcalix/4-consejos-para-ser-un-mejor-desarrollador-21f6</link>
      <guid>https://dev.to/arielcalix/4-consejos-para-ser-un-mejor-desarrollador-21f6</guid>
      <description>&lt;p&gt;Como desarrolladores de software creemos la mayor parte del tiempo que somos mejores que los demás y que por la cantidad de libros, notas, estudios y/o publicaciones que hemos leído estamos preparados para cualquier escenario en el que tengamos problemas.&lt;/p&gt;

&lt;p&gt;Pero, la realidad es que no es así. Lo que te dará mayor conocimiento y dominio de las técnicas y lenguajes que uses para el desarrollo son los proyectos que hayas logrado concluir. En pocas palabras la experiencia. Así que el día de hoy dejaré 4 consejos para ser un mejor desarrollador.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-mejora-tu-forma-de-escribir-c%C3%B3digo"&gt;
  &lt;/a&gt;
  1. Mejora tu forma de escribir código
&lt;/h2&gt;

&lt;p&gt;Generalmente a la hora de escribir código creemos que escribirlo de manera difícil y que los únicos que lo entiendan seamos nosotros significa un código perfecto. Pero la verdad es que no es nada, pero nada cerca de la realidad. Por ejemplo.&lt;/p&gt;

&lt;p&gt;Al escribir un código para una función que calcula un promedio es común escribirlo de la siguiente manera:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   int a[10] = [1,2,3,4,5,6,7,8,9,10];
   int b;
   int p;

   for (int c=0; c&amp;lt;10; c++) {
      b =+ a[c];
      if (c=a.length-1) {
            p = b/a.length;
      }
   }
   return p
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Si observas es algo difícil entender de que trata el código. Debido a que usamos letras para escribir el código. Pero si en lugar de letras usamos nombres descriptivos, el resultado es el siguiente:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   int elementosPromedio[10] =[1,2,3,4,5,6,7,8,9,10];
   int sumaTotalElementos;
   int promedio;

//En los ciclos es propio utilizar letras ya que no son variables
//en tiempo de ejecucion.

   for (int i; i &amp;lt;10; i++) {
      sumaTotalElementos =+ elementosPromedio[i];
      if (i=elementosPromedio.length-1) {
         promedio =sumaTotalElementos/elementosPromedio.length;
      }
   }
   return promedio
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Como puedes observar en el segundo ejemplo se puede ver la diferencia entre extractos de código que hacen la misma función y que difieren en la lectura y comprensión del mismo. &lt;em&gt;Un programador potente es el que escribe codigo que es fácil de entender o interpretar&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-utiliza-una-nomenclatura"&gt;
  &lt;/a&gt;
  2. Utiliza una nomenclatura
&lt;/h2&gt;

&lt;p&gt;Otra de las cosas que consideramos como algo ideal cuando escribimos código (mente de desarrollador) es el uso de nombres de muchos tipos y creemos que entre más tipos de nomenclatura usemos en mismo bloque más demostramos nuestra capacidad como desarrollador. Pero la realidad es que lo único que estas demostrando es la dificultad que tengas para seguir normas/estandares para tus desarrollos. Pará ello puedes implementar cualquiera de las nomenclaturas que existen. Por ejemplo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;camelCase/UpperCamelCase&lt;/li&gt;
&lt;li&gt;PascalCase&lt;/li&gt;
&lt;li&gt;snake_case&lt;/li&gt;
&lt;li&gt;kebab-case&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;De este modo tendrás un estándar en la manera que llamas a tus variables. No podemos decir que uno es mejor que otro. Pero cada uno mejora la comprensión del código de tu proyecto. Aprende a implementarlos y tu código se verá mejor.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-aprende-pero-aprende-bien"&gt;
  &lt;/a&gt;
  3. Aprende pero aprende bien
&lt;/h2&gt;

&lt;p&gt;Otro punto que consideramos que nos convierte en mejor desarrollador es saber de todos los lenguajes un poco, este principio está bien si eres un arquitecto o un administrador de proyecto, Pero si eres un desarrollador, es algo muy lejano a la verdad. Generalmente a las empresas no les impresiona que sepas cosas básicas de VB, C#, C/C++, JS/TS. Esto es simple ya que una empresa que tiene un área de IT ya tiene sus rubricas para el desarrollo, arquitecturas y estándares. Por lo que para ser un buen desarrollador, toma un lenguaje (el que quieras) y aprende ese lenguaje hasta que lo domines. No sólo lo básico, destaca por manejar el lenguaje y ser capaz de resolver cualquier problema usando ese lenguaje. Además de eso aprender patrones de diseño te resultará una mejor práctica que aprender el lenguaje en sí mismo. Dado que con los patrones sabrás como resolver un problema en cualquier lenguaje.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-no-critiques-el-trabajo-de-otros"&gt;
  &lt;/a&gt;
  4. No critiques el trabajo de otros
&lt;/h2&gt;

&lt;p&gt;En este punto mencionamos a los desarrolladores tóxicos. Aquellos que al revisar el código de otra persona o con el simple hecho de atender a una consulta, empiezan a decir, &lt;em&gt;"esto no es así", "esto lo haría de está forma", "no se porque este lenguaje",&lt;/em&gt; y un sin fin de formas de quejarse o criticar a los demás e incluso decir que una idea es terrible o solicitar cambios como:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cambiar el nombre de una variable, ejemplo:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   salarioEmpleado;
   sueldoEmpleado;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Cambiar el código de una función fácil de entender, por uno que es igual de fácil de entender pero es por preferencia de él.&lt;/li&gt;
&lt;li&gt;Dividir algo en varias lineas si en una linea se veía bien.&lt;/li&gt;
&lt;li&gt;Colocar algo en una sola linea en lugar de varias lineas sin beneficio para el código.&lt;/li&gt;
&lt;li&gt;Inventar nombres técnicos o no compartir documentación.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un desarrollador no tóxico, querra que sus compañeros se desarrollen y sean capaces de dar solución a los problemas, siempre para la continuidad del negocio.&lt;/p&gt;

&lt;p&gt;Como consejo, aprende a ser prudente, ayudar a tus compañeros de equipo, guiarlos, de está manera podrás desarrollar tu potencial y desarrollar el potencial de las demás personas en tu equipo.&lt;/p&gt;

&lt;p&gt;Ten en cuenta que cuando el conocimiento se comparte se multiplica, cuando no se comparte pierde su valor y recuerda no importa cual sea el nivel técnico que tengas, si eres un desarrollador desagradable nadie querra trabajar contigo.&lt;/p&gt;

&lt;p&gt;Imagen por &lt;a href="https://unsplash.com/@jefflssantos?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Jefferson Santos&lt;/a&gt; atraves de &lt;a href="https://unsplash.com/s/photos/code?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>:strong_migrations for Elixir - catch unsafe migrations easily</title>
      <author>Patryk Woziński</author>
      <pubDate>Fri, 29 Oct 2021 17:56:20 +0000</pubDate>
      <link>https://dev.to/patryk/strongmigrations-for-elixir-catch-unsafe-migrations-easily-3731</link>
      <guid>https://dev.to/patryk/strongmigrations-for-elixir-catch-unsafe-migrations-easily-3731</guid>
      <description>&lt;p&gt;Hey, hey! I just published my next small open-source library (actually, it's a "port" from Ruby). Thanks to &lt;code&gt;:strong_migrations&lt;/code&gt; you can catch all unsafe things that happening in your application's migrations like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;remove column&lt;/li&gt;
&lt;li&gt;rename column&lt;/li&gt;
&lt;li&gt;drop table&lt;/li&gt;
&lt;li&gt;add index non-concurrently&lt;/li&gt;
&lt;li&gt;add index concurrently in a transaction&lt;/li&gt;
&lt;li&gt;drop index concurrently in a transaction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;... and soon much more like migrations that are adding NOT NULL, etc. There are also a few configuration possibilities, so you can prepare everything to meet your application's requirements.&lt;/p&gt;

&lt;p&gt;Any feedback or feedback is welcome. That is my first time when I was working on the AST - that's also why I've opened an issue with the "help wanted" label. It's related to refactoring possibilities of the AST parser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/patrykwozinski/strong_migrations"&gt;https://github.com/patrykwozinski/strong_migrations&lt;/a&gt;&lt;/p&gt;

</description>
      <category>elixir</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Material Kit 2 - Free Python/Jinja template</title>
      <author>Sm0ke</author>
      <pubDate>Fri, 29 Oct 2021 17:53:00 +0000</pubDate>
      <link>https://dev.to/sm0ke/material-kit-2-free-pythonjinja-template-5akc</link>
      <guid>https://dev.to/sm0ke/material-kit-2-free-pythonjinja-template-5akc</guid>
      <description>&lt;p&gt;Hello Coders, &lt;/p&gt;

&lt;p&gt;This article presents an open-source &lt;strong&gt;Jinja Template&lt;/strong&gt; built on top of &lt;strong&gt;&lt;a href="https://github.com/app-generator/jinja-material-kit"&gt;Material Kit 2&lt;/a&gt;&lt;/strong&gt;, a colorful Bootstrap 5 design. The product, available for download directly from Github, can be used to style any Python-based web app that uses Flask, Django or any other compatible framework. For newcomers, &lt;strong&gt;&lt;a href="https://jinja-material-kit.appseed-srv1.com/"&gt;Material Kit 2&lt;/a&gt;&lt;/strong&gt; is a popular design developed by Creative-Tim agency with more than 160k downloads. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://jinja-material-kit.appseed-srv1.com/"&gt;Jinja Material Kit&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://github.com/app-generator/jinja-material-kit"&gt;Jinja Material Kit&lt;/a&gt; - Source Code&lt;/li&gt;
&lt;li&gt;✨ More &lt;a href="https://appseed.us/jinja-template"&gt;Jinja Templates&lt;/a&gt; - a curated index&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DkI-9n_1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgp0oe7i430jo17mghfl.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DkI-9n_1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgp0oe7i430jo17mghfl.gif" alt="Material Kit 2 - Free Python/Jinja template" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Probably the most easier way to use the product is to follow the Docker set up (steps listed on the README file): &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone the sources&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/jinja-material-kit.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;jinja-material-kit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull   &lt;span class="c"&gt;# download dependencies&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build  &lt;span class="c"&gt;# local set up&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up     &lt;span class="c"&gt;# start the app in Docker&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the above commands are executed, the product should be up &amp;amp; running in the browser on address &lt;code&gt;http://localhost:85&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gdFhEsF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gaow6ydgerkwrw3dwkn2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gdFhEsF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gaow6ydgerkwrw3dwkn2.png" alt="Jinja Material Kit - Contact page." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Jinja Material 2 - Components Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---SR6w1bK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fn4k0qpjumsgp3mbgysm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---SR6w1bK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fn4k0qpjumsgp3mbgysm.png" alt="Jinja Material 2 - Components Page" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Jinja Material 2 - Team Cards&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4-8___n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek28vj86y88vahjxxnif.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4-8___n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek28vj86y88vahjxxnif.png" alt="Jinja Material 2 - Team Cards" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#official-product-information"&gt;
  &lt;/a&gt;
  Official Product Information
&lt;/h2&gt;

&lt;p&gt;The most complex and innovative UI Kit Made by Creative Tim. Check our latest Freebie Bootstrap 5 UI Kit with a fresh, new design inspired by Google's Material Design 2. Designed for those who like bold elements and beautiful websites, Material Kit 2 is ready to help you create stunning websites and web apps.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WxDg40b7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx87j4tv6a78vcyucfn1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WxDg40b7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx87j4tv6a78vcyucfn1.png" alt="Material Kit 2 - FREE BOOTSTRAP 5 UI KIT." width="800" height="600"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Fully Coded Elements&lt;/strong&gt; - Material Kit 2 is built with over 60 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, which you can easily modify using SASS files and classes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example Pages&lt;/strong&gt; - If you want to get inspiration or just show something directly to your clients, you can jump-start your development with our pre-built example pages. You will be able to quickly set up the basic structure for your web project.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://bit.ly/3u2lZc6"&gt;Material Kit 2&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;✨ More &lt;a href="https://appseed.us/jinja-template"&gt;Jinja Templates&lt;/a&gt; - provided by AppSeed &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>material</category>
      <category>uikit</category>
      <category>opensource</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 29 Oct 2021 17:31:38 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-1p73</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-1p73</guid>
      <description>&lt;p&gt;Hey there! &lt;/p&gt;

&lt;p&gt;Looking back on this past week, what was something you were proud of accomplishing?&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Trying out a new recipe... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Congrats on your wins! I hope you all have a great day! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/Ote7fuZrFEV12yjvs5/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Ote7fuZrFEV12yjvs5/giphy.gif" alt="Dog with sunglasses saying happy friday" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>JavaScript Internal Property`[[]]` </title>
      <author>Dani Schuhman</author>
      <pubDate>Fri, 29 Oct 2021 17:20:57 +0000</pubDate>
      <link>https://dev.to/dani8439/javascript-internal-property-1nl2</link>
      <guid>https://dev.to/dani8439/javascript-internal-property-1nl2</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@dtopkin1?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Dayne Topkin&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/private?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maybe one day you were playing in the dev browser, and one day come across something that seemed a bit different. &lt;/p&gt;

&lt;p&gt;You've printed things out to the console, and something odd appears.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function foo() { 
    console.log("Hello")
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;foo.prototype
{constructor: ƒ}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Clicking on the arrow for the constructor, will return an object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{constructor: ƒ}
constructor: ƒ foo()
arguments: null
caller: null
length: 0
name: "foo"
prototype: {constructor: ƒ}
[[FunctionLocation]]: VM572:1
[[Prototype]]: ƒ ()
[[Scopes]]: Scopes[2]
[[Prototype]]: Object
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What on earth are those double brackets &lt;code&gt;[[]]&lt;/code&gt;? &lt;/p&gt;

&lt;p&gt;It's the internal property. In JavaScript, objects have an internal property known as &lt;code&gt;Prototype&lt;/code&gt;. You can also see that there is a &lt;code&gt;Scopes&lt;/code&gt; inside of these double brackets as well once clicking inside an object. &lt;/p&gt;

&lt;p&gt;Whenever there are &lt;code&gt;[[]]&lt;/code&gt; that appear, it's an internal property that can't be accessed by our code. Both &lt;code&gt;Scopes&lt;/code&gt; and &lt;code&gt;Prototype&lt;/code&gt; are internal properties of the &lt;code&gt;foo&lt;/code&gt; object. &lt;/p&gt;

&lt;p&gt;What's pretty cool, and also very helpful when clicking on the &lt;code&gt;Scopes&lt;/code&gt; internal property, is that when working with some concepts, say, a closure, clicking on the scopes property will show the closure itself.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let f;

const g = function() {
    const a = 23;
    f = function() {
        console.log(a * 2);
    };
};

g();
f();

console.dir(f)

// Returns
ƒ f()
arguments: null
caller: null
length: 0
name: "f"
prototype: {constructor: ƒ}
[[FunctionLocation]]: VM495:3
[[Prototype]]: ƒ ()
[[Scopes]]: Scopes[3]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Clicking on the &lt;code&gt;Scopes&lt;/code&gt; internal property, we can see where the closure lives.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[[Scopes]]: Scopes[3]
0: Closure (g) {a: 23}
1: Script {f: ƒ, g: ƒ}
2: Global {0: Window, window: Window, self: Window, docum...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's pretty cool, isn't it? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/11003021/what-internal-property-in-ecmascript-is-defined-for"&gt;StackOverFlow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://javascript.info/private-protected-properties-methods"&gt;JavaScript Info - Private Protected Properties&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Set Python3 as a default on MacOS</title>
      <author>yosi.eth</author>
      <pubDate>Fri, 29 Oct 2021 17:14:15 +0000</pubDate>
      <link>https://dev.to/yosi/set-python3-as-a-default-on-macos-516i</link>
      <guid>https://dev.to/yosi/set-python3-as-a-default-on-macos-516i</guid>
      <description>&lt;p&gt;Download the latest stable release from &lt;a href="https://www.python.org/downloads/macos/"&gt;python.org&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo ln&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; /Library/Frameworks/Python.framework/Versions/3.10/bin/python3 /usr/local/bin/python
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check it worked, open a &lt;strong&gt;new&lt;/strong&gt; terminal window and run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll get&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Python 3.10.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Happy coding! 🚀&lt;/p&gt;

</description>
      <category>python</category>
      <category>macos</category>
    </item>
    <item>
      <title>SolBusters NFT Affiliate System</title>
      <author>Brains</author>
      <pubDate>Fri, 29 Oct 2021 17:09:10 +0000</pubDate>
      <link>https://dev.to/neurologist/solbusters-nft-affiliate-system-4ihb</link>
      <guid>https://dev.to/neurologist/solbusters-nft-affiliate-system-4ihb</guid>
      <description>&lt;p&gt;&lt;a href="https://solbusters.com/mint"&gt;https://solbusters.com/mint&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nft</category>
      <category>react</category>
      <category>rust</category>
      <category>python</category>
    </item>
    <item>
      <title>How to use ES6+ features in nodejs </title>
      <author>sakethk</author>
      <pubDate>Fri, 29 Oct 2021 17:06:49 +0000</pubDate>
      <link>https://dev.to/sakethkowtha/how-to-use-es6-in-nodejs-3k38</link>
      <guid>https://dev.to/sakethkowtha/how-to-use-es6-in-nodejs-3k38</guid>
      <description>&lt;p&gt;This article is about how to use &lt;code&gt;es6+&lt;/code&gt; in nodejs project &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#initialising-project-with-npm"&gt;
  &lt;/a&gt;
  Initialising project with npm
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#installing-babel-plugins-for-es6-features"&gt;
  &lt;/a&gt;
  Installing babel plugins for es6+ features
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-D&lt;/span&gt; @babel/cli @babel/core @babel/plugin-proposal-class-properties @babel/plugin-transform-runtime @babel/preset-env 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#adding-babel-support-for-project"&gt;
  &lt;/a&gt;
  Adding babel support for project
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;touch&lt;/span&gt; .babelrc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Paste the following content in &lt;code&gt;.babelrc&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "presets": ["@babel/preset-env"],
    "plugins": ["@babel/plugin-proposal-class-properties", "@babel/transform-runtime"]
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Babel is not a compiler or interpreter it is just a transpiler so we have to transpile &lt;code&gt;es6&lt;/code&gt; to &lt;code&gt;es5&lt;/code&gt; using babel then we have to execute that transpiled code. For that we can write npm script.&lt;/p&gt;

&lt;p&gt;Add the following script to &lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="s2"&gt;"build"&lt;/span&gt;: &lt;span class="s2"&gt;"babel src -d dist"&lt;/span&gt;,
&lt;span class="s2"&gt;"start"&lt;/span&gt;: &lt;span class="s2"&gt;"npm run build &amp;amp;&amp;amp; node dist"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create &lt;code&gt;src&lt;/code&gt; folder and start writing &lt;code&gt;es6+&lt;/code&gt; code inside that folder. Run &lt;code&gt;npm start&lt;/code&gt; it will create &lt;code&gt;dist&lt;/code&gt; folder inside that folder we can find transpiled code.&lt;/p&gt;

&lt;p&gt;Cheers!!!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
