<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Lava Flow üî•</title>
      <author>Ushieru Kokoran</author>
      <pubDate>Mon, 20 Sep 2021 18:33:45 +0000</pubDate>
      <link>https://dev.to/ushieru/lava-flow-27k6</link>
      <guid>https://dev.to/ushieru/lava-flow-27k6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#haz-un-quickfixparche-luego-lo-arreglamos-bien"&gt;
  &lt;/a&gt;
  Haz un QuickFix/Parche, luego lo arreglamos bien. üôÖ
&lt;/h2&gt;

&lt;p&gt;Escribir mal un c√≥digo sin una arquitectura clara desde el principio solo har√° que nuestras funciones de m√°s de 100 l√≠neas, nuestro c√≥digo sin uso, nuestros m√©todos no documentados o nuestros procesos mal organizados que parec√≠an 'C√≥digo que podremos desechar en cualquier momento' se vuelva m√°s complicado de mantener.&lt;/p&gt;

&lt;p&gt;Conforme el sistema avanza en su desarrollo, y crece, se dice que estos flujos de lava se solidifican, es decir, se vuelve mucho m√°s complicado corregir los problemas que originan, y el desorden va creciendo.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mi-sistema-sufre-de-lava-flow"&gt;
  &lt;/a&gt;
  Mi sistema sufre de Lava Flow?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ö†Ô∏è Pon atencion a las alertas. ‚ö†Ô∏è&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Se declaran variables no justificadas.&lt;/li&gt;
&lt;li&gt;Se construyen clases o bloques de c√≥digo muy grandes y complejas sin documentar.&lt;/li&gt;
&lt;li&gt;Usando una inconsistente y difusa arquitectura.&lt;/li&gt;
&lt;li&gt;Cuando en el sistema existen muchas √°reas con c√≥digo por terminar o reemplazar.&lt;/li&gt;
&lt;li&gt;Cuando dejamos c√≥digo sin uso abandonado.&lt;/li&gt;
&lt;li&gt;Cuando duplicamos funciones que se diferencian apenas por un ligero cambio.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#soluci%C3%B3n"&gt;
  &lt;/a&gt;
  Soluci√≥n
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Recuerda que la complejidad planeada siempre es mejor que la complejidad por deuda t√©cnica&lt;/li&gt;
&lt;li&gt;Con tu equipo elijan la arquitectura m√°s adecuada para el sistema.&lt;/li&gt;
&lt;li&gt;No m√°s &lt;code&gt;push master&lt;/code&gt;. Asigna un lider de proyecto y que sea este quien revise las PR (Pull Request).&lt;/li&gt;
&lt;li&gt;Documenta todo.&lt;/li&gt;
&lt;li&gt;Deja de hacer parches y crea soluciones reales.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>architecture</category>
    </item>
    <item>
      <title>How does Linux work?</title>
      <author>Shubham</author>
      <pubDate>Mon, 20 Sep 2021 18:22:01 +0000</pubDate>
      <link>https://dev.to/shu8/how-does-linux-work-55d5</link>
      <guid>https://dev.to/shu8/how-does-linux-work-55d5</guid>
      <description>&lt;p&gt;I recently prepared for a position which prompted me to read up and consolidate my knowledge on Operating Systems and Linux which led me down a weird and wonderful rabbit hole learning so much more than I thought I knew!&lt;/p&gt;

&lt;p&gt;This post intends to be a summary of how an Operating System (focussing on Linux) works, and what happens behind the scenes.&lt;/p&gt;

&lt;p&gt;So, let's get started!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I, myself, am constantly learning more about this area, and whilst I've tried to be as accurate and concise as possible, there may be mistakes. If you spot something that looks wrong, I would &lt;em&gt;love&lt;/em&gt; to hear from you in the comments so we can all learn together!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-unix-and-linux"&gt;
  &lt;/a&gt;
  What are UNIX and Linux?
&lt;/h2&gt;

&lt;p&gt;UNIX and Linux are both families of Operating Systems (OSes) -- the underlying software behind many popular Operating Systems. An examples of a UNIX OSes is Solaris; examples of Linux-based distributions are Ubuntu and Arch Linux.&lt;/p&gt;

&lt;p&gt;The biggest difference between the two is that Linux is &lt;strong&gt;open-source&lt;/strong&gt; and &lt;strong&gt;free to use&lt;/strong&gt; ‚Äì &lt;em&gt;you&lt;/em&gt; can contribute to it if you want! UNIX on the other hand is proprietary software which requires a license to use.&lt;/p&gt;

&lt;p&gt;There's also &lt;strong&gt;POSIX&lt;/strong&gt;: the Portable Operating System Interface, which defines a set of standards so different OSes can be compatible. It includes things like; what should program exit codes be? What default environment variables are there? How do filenames work? What is the underlying C API? A lot of Linux distributions are mostly POSIX-compliant (although they may not be officially certified!).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-kernel-and-operating-system"&gt;
  &lt;/a&gt;
  What are the "Kernel" and "Operating System"?
&lt;/h2&gt;

&lt;p&gt;The kernel is a &lt;strong&gt;part of&lt;/strong&gt; the Operating System; it's at the lowest software level of the OS to control access to the hardware, system resources, files, processes, system calls, and more! Without an OS, your computer can't really do anything.&lt;/p&gt;

&lt;p&gt;A nice way to look at the difference between the Kernel and the general Operating System is that the OS as a whole sits between a user and the software; the kernel sits between the software and the hardware.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-how-does-my-computer-start"&gt;
  &lt;/a&gt;
  So, how does my computer start?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#bios"&gt;
  &lt;/a&gt;
  BIOS
&lt;/h3&gt;

&lt;p&gt;Your computer has a set of fixed instructions in a specific physical memory location in ROM (Read-Only Memory), which usually form the &lt;strong&gt;BIOS&lt;/strong&gt; (Basic Input/Output System). This is firmware (low-level software that's permanent on your system) that initializes the hardware on boot.&lt;/p&gt;

&lt;p&gt;The BIOS usually performs a &lt;strong&gt;POST&lt;/strong&gt; (Power-On Self-Test) to detect and setup any connected hardware (e.g. memory, video cards, CPUs, etc.). If there's an error here, your computer will normally display some text (if it can), or perform various different audible beeps, with each different number of beeps indicating a specific problem.&lt;/p&gt;

&lt;p&gt;Once the hardware is confirmed to be working, the BIOS starts the &lt;strong&gt;boot&lt;/strong&gt; process which involves finding the boot device (e.g., hard drive). Boot devices usually store a &lt;strong&gt;bootloader&lt;/strong&gt; (or a pointer to it), in the &lt;em&gt;Master Boot Record&lt;/em&gt; (MBR) or in a specific partition on the drive (&lt;em&gt;EFI&lt;/em&gt;). This is a tiny piece of software which is less than a kilobyte in size, and is responsible for loading the OS into RAM (memory). An example of a bootloader is &lt;a href="https://www.gnu.org/software/grub/"&gt;GRUB&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#initializing-the-kernel"&gt;
  &lt;/a&gt;
  Initializing the Kernel
&lt;/h3&gt;

&lt;p&gt;Once the bootloader has been loaded, it needs to be executed! This can get quite complicated and I definitely do not know every single thing that happens here. Here is an overview of what now happens:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The kernel is decompressed.&lt;/li&gt;
&lt;li&gt;A few &lt;strong&gt;registers&lt;/strong&gt; are initialized (e.g. the Interrupt Handler Table and Global Descriptor Table) ‚Äì these are needed later on when using the system.&lt;/li&gt;
&lt;li&gt;Various &lt;strong&gt;system calls&lt;/strong&gt; are made to spawn initial &lt;em&gt;processes&lt;/em&gt; such as the &lt;em&gt;task scheduler&lt;/em&gt; (these are all explained a bit later on!).&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;init&lt;/strong&gt; process executes, which is responsible for mounting all file systems in read/write mode, starting &lt;em&gt;daemons&lt;/em&gt; (like &lt;code&gt;sshd&lt;/code&gt; for SSH connections, &lt;code&gt;httpd&lt;/code&gt; for HTTP connections, etc.), and calling the &lt;code&gt;getty&lt;/code&gt; program ("get &lt;a href="https://unix.stackexchange.com/questions/4126/what-is-the-exact-difference-between-a-terminal-a-shell-a-tty-and-a-con"&gt;TTY&lt;/a&gt;") which prompts you to log in. &lt;code&gt;systemd&lt;/code&gt; is a common &lt;em&gt;init&lt;/em&gt; process used in Linux distributions.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this point, your computer is up and running! Now what?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#system-calls-amp-cpu-execution-modes"&gt;
  &lt;/a&gt;
  System Calls &amp;amp; CPU Execution Modes
&lt;/h2&gt;

&lt;p&gt;First, we should note that many of the low-level details about the hardware are abstracted away and hidden from user applications; this means the Operating System must issue requests to the kernel in the form of &lt;strong&gt;system calls&lt;/strong&gt; &lt;em&gt;(syscalls)&lt;/em&gt;, which are executed by the kernel.&lt;/p&gt;

&lt;p&gt;So, there are different CPU execution privilege modes (sometimes called &lt;em&gt;rings&lt;/em&gt;): User (ring 3) and Kernel (ring 0) mode. The rings in between are for device drivers (software that enables interaction with hardware peripherals).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User mode&lt;/strong&gt; is an &lt;em&gt;unprivileged&lt;/em&gt; mode for user programs ‚Äì programs can run and execute code, but they can't manipulate actual memory, use input/output devices, nor switch modes itself. As a result, when any of these resources are needed, the programs send a &lt;em&gt;system call&lt;/em&gt; which generates a &lt;em&gt;software interrupt&lt;/em&gt;. This prompts the switch to Kernel mode where the kernel checks for permissions, performs necessary actions, and returns relevant data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kernel mode&lt;/strong&gt; is therefore a &lt;em&gt;privileged&lt;/em&gt; mode; there is unrestricted access to memory and devices. Any errors encountered here are critical and trigger a &lt;em&gt;kernel panic&lt;/em&gt; (analogous to a Windows Blue Screen of Death).&lt;/p&gt;

&lt;p&gt;Why have separate modes? Having a separate kernel mode ensures that programs can't interfere with each other; it is the single source of truth for the entire system, and it is more secure, as the kernel handles permission checks to resources!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-filesystem"&gt;
  &lt;/a&gt;
  The Filesystem
&lt;/h2&gt;

&lt;p&gt;In Linux, you don't mount hard drives, or partitions. Instead, you mount the &lt;em&gt;file systems&lt;/em&gt; on those partitions.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Virtual File System&lt;/strong&gt; (VFS) abstracts a standard interface (think: an 'API') for file systems, so all file systems appear identical to the rest of the kernel and applications. Data is split into &lt;strong&gt;Blocks&lt;/strong&gt; (typically 4MB), which are further grouped into &lt;strong&gt;Block Groups&lt;/strong&gt;. The VFS caches blocks when they are accessed by placing them into the &lt;strong&gt;Buffer Cache&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inodes&lt;/strong&gt; (indexed nodes) are structures that store metadata for every file and directory, providing easy access to anyone who needs information on files. They have a number (&lt;em&gt;index&lt;/em&gt;) that uniquely identifies them in a filesystem, and are used in conjunction with the filesystem ID to ensure they are unique across the entire machine.&lt;/p&gt;

&lt;p&gt;Inodes are stored in a table so they are accessed by their index number, and they point to the disk blocks storing the contents of the file they represent.&lt;/p&gt;

&lt;p&gt;The use of inodes actually means &lt;em&gt;there is a limit to the number of files/directories you can store on a system&lt;/em&gt;! Mail servers can run into the problem where they store lots of tiny files (emails) which don't take up too much disk space but still run out of inodes! Inodes are usually 32-bit unsigned integers, meaning ~4.2 billion inodes maximum. Practically, a system might have much fewer available inodes as the default ratio tends to be 1 inode per &lt;em&gt;x&lt;/em&gt; bytes of storage capacity.&lt;/p&gt;

&lt;p&gt;Inodes store the file mode (permissions), type (file/directory), user, group, size, links, block count, creation/accessed/modified times, and inode checksum.&lt;/p&gt;

&lt;p&gt;Inodes don't store filenames themselves ‚Äì why? These are stored in &lt;strong&gt;directory structures&lt;/strong&gt; (or 'directory entries', or 'dentries'). These are tables that store filenames and their corresponding inodes; the first two entries are always &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt; which probably seem familiar. An advantage of this system is, if you are moving files, all you are doing is moving the &lt;code&gt;(name, inode)&lt;/code&gt; pair ‚Äì so it's extremely cheap!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#file-permissions"&gt;
  &lt;/a&gt;
  File permissions
&lt;/h3&gt;

&lt;p&gt;Commands like &lt;code&gt;chmod&lt;/code&gt; and &lt;code&gt;chown&lt;/code&gt; allow you to alter file &lt;strong&gt;permissions&lt;/strong&gt;, but how do they work? Each file/directory has &lt;strong&gt;three&lt;/strong&gt; user permission groups: &lt;em&gt;owner&lt;/em&gt;, &lt;em&gt;group&lt;/em&gt;, &lt;em&gt;all users&lt;/em&gt;(i.e., all &lt;em&gt;other&lt;/em&gt; users). For each of these, there are a further &lt;strong&gt;three&lt;/strong&gt; permission types: &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, &lt;em&gt;execute&lt;/em&gt;. For directories, these mean slightly different things: listing the contents of the directory, changing the contents of the directory (new/delete/rename files), and moving into the directory respectively.&lt;/p&gt;

&lt;p&gt;So what do the permissions looks like? &lt;code&gt;_ rwx rwx rwx 1 owner:group&lt;/code&gt; is the general format! (Remember, this is all stored in the inode!) The first group of 3 is the &lt;em&gt;owner&lt;/em&gt; permissions, the second group is the &lt;em&gt;group&lt;/em&gt; permissions, and the final group is the &lt;em&gt;all users&lt;/em&gt; permissions. The final string shows which user/group owns the file.&lt;/p&gt;

&lt;p&gt;The very first character is the 'special file type flag': &lt;code&gt;_&lt;/code&gt; means no special permissions, &lt;code&gt;d&lt;/code&gt; means it is a directory, &lt;code&gt;l&lt;/code&gt; means it is a symbolic link, &lt;code&gt;s&lt;/code&gt; is the setuid/setgid permission for executables (meaning it should be executed with the owner permissions), and &lt;code&gt;t&lt;/code&gt; is the sticky bit permission (meaning only the file owner can rename or delete the directory).&lt;/p&gt;

&lt;p&gt;If you've ever used &lt;code&gt;chmod&lt;/code&gt; you may have used a &lt;em&gt;number&lt;/em&gt; to set permissions ‚Äì this is the numeric method where a &lt;code&gt;4&lt;/code&gt; represents &lt;em&gt;read&lt;/em&gt;, &lt;code&gt;2&lt;/code&gt; represents &lt;em&gt;write&lt;/em&gt;, &lt;code&gt;1&lt;/code&gt; represents &lt;em&gt;execute&lt;/em&gt;. For example, &lt;code&gt;740&lt;/code&gt; means &lt;code&gt;7&lt;/code&gt; for the owner, &lt;code&gt;4&lt;/code&gt; for the group, &lt;code&gt;0&lt;/code&gt; for all others, i.e., &lt;code&gt;_ rwx r__ ___&lt;/code&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#memory"&gt;
  &lt;/a&gt;
  Memory
&lt;/h2&gt;

&lt;p&gt;Moving onto memory management! &lt;/p&gt;

&lt;p&gt;Linux is a multiprocessing OS; each process is a separate task with its own rights and responsibilities, and each has its own &lt;em&gt;virtual memory&lt;/em&gt;, running in its own &lt;em&gt;virtual address space&lt;/em&gt; so they can't affect each other, only interacting with others through the kernel.&lt;/p&gt;

&lt;p&gt;This means virtual and physical memory is split into &lt;strong&gt;pages&lt;/strong&gt;, small contiguous chunks of memory, which are mapped to each other via the &lt;strong&gt;page table&lt;/strong&gt;. When a program requests a virtual page address, the page table determines the actual memory address to use ‚Äì if it's not found, you get a &lt;em&gt;page fault&lt;/em&gt;. Pages aren't always loaded, so &lt;em&gt;demand paging&lt;/em&gt; is where memory is loaded lazily, as it is needed.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;swap file&lt;/strong&gt; is a file on the disk that is used when a virtual page is needed, but no physical page is available. In this case, an existing page is written to disk to this swap file, to be re-loaded later if needed! &lt;em&gt;Thrashing&lt;/em&gt; occurs if pages are constantly being read from/written to, which means the OS can't actually do anything meaningful!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#processes"&gt;
  &lt;/a&gt;
  Processes
&lt;/h2&gt;

&lt;p&gt;Processes are computer programs in-action; they include program instructions, data, CPU registers, the Program Counter, and call stacks. There is a limited number of processes that can execute at one time. Processes are stored in a &lt;code&gt;task&lt;/code&gt; array in the form of a &lt;code&gt;task_struct&lt;/code&gt; data structure (think: a linked list of dictionaries). This stores lots of information like how virtual memory is mapped onto the system's physical memory; CPU time consumed; (effective) user/group IDs, etc.&lt;/p&gt;

&lt;p&gt;Every process (except for the initial &lt;code&gt;init&lt;/code&gt; process) has a parent ‚Äì the &lt;code&gt;task_struct&lt;/code&gt; keeps a pointer to parent and child processes (a doubly linked list).&lt;/p&gt;

&lt;p&gt;Processes are &lt;strong&gt;not&lt;/strong&gt; &lt;em&gt;created&lt;/em&gt;, they are &lt;em&gt;cloned&lt;/em&gt; from a previous one via system calls. Usually, the &lt;code&gt;fork&lt;/code&gt; syscall is used which clones the calling process (including the code, the data, and call-stack), and then &lt;code&gt;exec&lt;/code&gt; is used to overwrite (&lt;em&gt;'overlay&lt;/em&gt;') the cloned process and its data with the supplied program name!&lt;/p&gt;

&lt;p&gt;It's not just one process that uses all the memory or CPU though; with multiprocessing, the system gives the CPU to processes that need it most. The &lt;strong&gt;scheduler&lt;/strong&gt; chooses which process is most appropriate to run, by selecting them out of the &lt;strong&gt;run queue&lt;/strong&gt;. It often uses a priority-based scheduling algorithm, but there are different types (e.g., round-robin, or first-in-first-out). The scheduler runs after processes are put onto the wait queue (e.g., whilst they are waiting for a system resource), or when a syscall is ending and the CPU is switching back to user mode.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;niceness&lt;/em&gt; of a process is a user-defined priority (ranging from -20 to 19 ‚Äì highest to lowest) that can be given to processes using the &lt;code&gt;nice -n NICENESS_VALUE&lt;/code&gt; command, e.g. &lt;code&gt;nice -n -15 ./my-important-program&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Processes have different states: &lt;em&gt;running&lt;/em&gt; (the current process in the system, or ready to run); &lt;em&gt;waiting&lt;/em&gt; (waiting for an event/resource); &lt;em&gt;stopped&lt;/em&gt; (stopped due to a signal); &lt;em&gt;zombie&lt;/em&gt; (halted processes which for some reason still have a &lt;code&gt;task_struct&lt;/code&gt; entry).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Threads&lt;/strong&gt; are a single execution sequence within a process; a process can contain many threads. They share the memory of the process they belong to, which means inter-thread-communication is cheaper than inter-process-communication.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#interprocess-communication-ipc"&gt;
  &lt;/a&gt;
  Inter-Process Communication (IPC)
&lt;/h3&gt;

&lt;p&gt;IPC allows processes to communicate with each other.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Signals&lt;/strong&gt; are the classic example of this, e.g. &lt;code&gt;SIGHUP&lt;/code&gt;, &lt;code&gt;SIGINT&lt;/code&gt;, &lt;code&gt;SIGKILL&lt;/code&gt;, etc. These are asynchronous events set to processes and can be generated by shells, keyboards, or even errors. Processes can choose how to deal with (or ignore) most of these, except for two: &lt;code&gt;SIGSTOP&lt;/code&gt; (halts a process until &lt;code&gt;SIGCONT&lt;/code&gt; resumes it) and &lt;code&gt;SIGKILL&lt;/code&gt; (exits a process entirely). Only the kernel and superusers can send signals to processes, or processes with the same GID/UID as others!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pipes&lt;/strong&gt; are another method of IPC, allowing redirection between commands ‚Äì they are one-way byte streams connecting the standard-out (stdout) of one process to the standard-in (stdin) of another. These are implemented using two files with the same temporary VFS inode, and are an abstraction as neither process is aware of the pipe!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sockets&lt;/strong&gt; are another method of IPC; these are pseudo-files that represent the network connection and can be read/written to using &lt;code&gt;read&lt;/code&gt;/&lt;code&gt;write&lt;/code&gt;/&lt;code&gt;send&lt;/code&gt;/&lt;code&gt;recv&lt;/code&gt; syscalls.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;That's a lot of information! I do hope this post helped you understand a tiny bit more about Linux (and Operating Systems in general), and how it works!&lt;/p&gt;

&lt;p&gt;If you're interested in learning more, I found &lt;a href="https://tldp.org/LDP/tlk/tlk.html"&gt;&lt;em&gt;The Linux Kernel&lt;/em&gt; by David A Rusling&lt;/a&gt; extremely useful, which goes into a lot more detail about the above topics, and much more.&lt;/p&gt;

&lt;p&gt;If you have any feedback, spotted any errors (or just want to chat!), please feel free to leave a comment below, or &lt;a href="https://sjain.dev"&gt;get in touch with me&lt;/a&gt; in any other way!&lt;/p&gt;

</description>
      <category>linux</category>
    </item>
    <item>
      <title>A Beginner's Guide To Fauna</title>
      <author>samaby213</author>
      <pubDate>Mon, 20 Sep 2021 18:03:32 +0000</pubDate>
      <link>https://dev.to/samaby213/a-beginner-s-guide-to-fauna-3ckg</link>
      <guid>https://dev.to/samaby213/a-beginner-s-guide-to-fauna-3ckg</guid>
      <description>&lt;p&gt;After having a hard time trying to grasp Fauna and serverless databases, I came up with the idea of demystifying what I have learned and the quickest way to get up and running with the Fauna.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-this-for"&gt;
  &lt;/a&gt;
  Who is this for?
&lt;/h2&gt;

&lt;p&gt;Those new to serverless databases who would like to try out Fauna to use in a project. You need basic programming knowledge to walk you through the lesson.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concept"&gt;
  &lt;/a&gt;
  Concept
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we will show how to create a basic Twitter social graph and get it on the web using NodeJS.&lt;/p&gt;

&lt;p&gt;Fauna is a next generation cloud database that simplifies the complexity of building complex relationships. It uses the same codebase as SQL, but is completely serverless and fast.&lt;br&gt;
This tutorial shows how to create a basic social graph with Fauna, which is powered by Node.js. You will also learn how to query the database using the Fauna Query Language.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#initial-setup"&gt;
  &lt;/a&gt;
  Initial setup
&lt;/h2&gt;

&lt;p&gt;Start by creating a Node project, then install the Fauna JS package and Express.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init -y

npm install faunadb express
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#initialize-fauna"&gt;
  &lt;/a&gt;
  Initialize Fauna
&lt;/h2&gt;

&lt;p&gt;From the Fauna security tab, create a server key. Initialize the client with your server key, then import the FQL functions required for this demo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// src/index.js 

const faunadb = require('faunadb');
const client = new faunadb.Client({ secret: 'YOUR-KEY' })

// FQL functions
const {
    Ref,
    Paginate,
    Get,
    Match,
    Select,
    Index,
    Create,
    Collection,
    Join,
    Call,
    Function: Fn,
} = faunadb.query;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#initialize-express"&gt;
  &lt;/a&gt;
  Initialize Express
&lt;/h2&gt;

&lt;p&gt;Express will be used to serve the API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// src/index.js 
const app = require('express')();

app.listen(5000, () =&amp;gt; console.log('API on http://localhost:5000'))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;An API like Insomnia is recommended when making a request to the API at port &lt;code&gt;http://localhost:5000&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#database-structure"&gt;
  &lt;/a&gt;
  Database structure
&lt;/h2&gt;

&lt;p&gt;The database contains three collections - users, tweets, and relationships. Create three collections: users, tweets, and relationships.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#users-and-tweets"&gt;
  &lt;/a&gt;
  Users and tweets
&lt;/h2&gt;

&lt;p&gt;In the next section, we will create an API that will allow users to read and write tweets to Fauna.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-tweet"&gt;
  &lt;/a&gt;
  Create a tweet
&lt;/h2&gt;

&lt;p&gt;We want to associate many tweets to this user account, so next we Create a document with your username as the username.So we go to our dashboard and create a document with our name as username.&lt;/p&gt;

&lt;p&gt;A relationship can be established between a user and a document by retrieving its data from the Create function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// src/index.js 
app.post('/tweet', async (req, res) =&amp;gt; {

    const data = {
        user: Select('ref', Get(Match(Index('users_by_name'), 'fireship_dev'))),
        text: 'Hello world!'
    }

    const doc = await client.query(
        Create(
            Collection('tweets'),
            { data }
        )
    )

    res.send(doc)
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#read-a-tweet-by-id"&gt;
  &lt;/a&gt;
  Read a tweet by ID
&lt;/h2&gt;

&lt;p&gt;Reading a document by its ID does not require an index. Doing so can be done by pointing to its ID and creating a new document.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// src/index.js 
app.get('/tweet/:id', async (req, res) =&amp;gt; {

    const doc = await client.query(
        Get(
            Ref(
                Collection('tweets'),
                req.params.id
            )
        )
    )

    res.send(doc)

});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#query-a-users-tweets"&gt;
  &lt;/a&gt;
  Query a user‚Äôs tweets
&lt;/h2&gt;

&lt;p&gt;Creating an index for each tweet document that a user has tweeted is required. The index will return all the documents that contain the user's name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// src/index.js
app.get('/tweet', async (req, res) =&amp;gt; {

    const docs = await client.query(
        Paginate(
            Match(
                Index('tweets_by_user'), 
                Select('ref', Get(Match(Index('users_by_name'), 'fireship_dev')))
            )
        )
    )

    res.send(docs)
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#fauna-functions"&gt;
  &lt;/a&gt;
  Fauna functions
&lt;/h2&gt;

&lt;p&gt;The code presented above duplicates the following line of FQL several times:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Select('ref', Get(Match(Index('users_by_name'), '&amp;lt;username&amp;gt;')))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fauna Functions are a way to extract the logic of your system to the cloud. They can be used to reduce duplicated and improve maintainability.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-function"&gt;
  &lt;/a&gt;
  Create a function
&lt;/h2&gt;

&lt;p&gt;Extract the duplicated code from the Fauna function. The function returns the username and the full document reference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#call-a-function"&gt;
  &lt;/a&gt;
  Call a function
&lt;/h2&gt;

&lt;p&gt;A Call can be used to execute this function in a query. For example, let's refactor the previous example like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// src/index.js
const {
    Call,
    Function: Fn,
} = faunadb.query;

app.get('/tweet', async (req, res) =&amp;gt; {

    const docs = await client.query(
        Paginate(
            Match(
                Index('tweets_by_user'), 
                Call(Fn("getUser"), '&amp;lt;username&amp;gt;v')
            )
        )
    )

    res.send(docs)
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#usertouser-relationships"&gt;
  &lt;/a&gt;
  User-to-user relationships
&lt;/h2&gt;

&lt;p&gt;The following section shows a graph where users can connect to other users and query their tweets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-relationship"&gt;
  &lt;/a&gt;
  Create a relationship
&lt;/h2&gt;

&lt;p&gt;Two user reference are contained in a relationship document ‚Äî the follower and followee.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// src/index.js
app.post('/relationship', async (req, res) =&amp;gt; {


    const data = {
        follower: Call(Fn("getUser"), 'bob'),
        followee: Call(Fn("getUser"), '&amp;lt;username&amp;gt;')
    }
    const doc = await client.query(
        Create(
            Collection('relationships'),
            { data }
        )
    )

    res.send(doc)
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#query-a-feed-of-tweets"&gt;
  &lt;/a&gt;
  Query a feed of tweets
&lt;/h2&gt;

&lt;p&gt;You probably want to query the tweets of followed users after establishing a relationship with them. To do so, create an index called &lt;code&gt;followees_by_follower&lt;/code&gt; with a search term and a value of follower.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;src/index.js
app.get('/feed', async (req, res) =&amp;gt; {
    const docs = await client.query(
        Paginate(
            Join(
                Match(
                    Index('followees_by_follower'),
                    Call(Fn("getUser"), 'bob')
                ),
                Index('tweets_by_user'),
            )
        )
    )

    res.send(docs)
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we learned how to create a basic Twitter social graph and get it on the web using Node.js.&lt;/p&gt;

&lt;p&gt;Written in connection with the &lt;a href="https://fauna.com/blog/write-with-fauna?utm_source=devto&amp;amp;utm_medium=writewithfauna&amp;amp;utm_campaign=WritewithFauna_BeginnersGuide_AmarachiKalu"&gt;Write with Fauna Program&lt;/a&gt;. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Java Generics ‚Äî Advanced Cases</title>
      <author>Semyon Kirekov</author>
      <pubDate>Mon, 20 Sep 2021 17:57:02 +0000</pubDate>
      <link>https://dev.to/kirekov/java-generics-advanced-cases-3iah</link>
      <guid>https://dev.to/kirekov/java-generics-advanced-cases-3iah</guid>
      <description>&lt;p&gt;Today we are going to discuss how to implement generics in your code in a most effective way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-use-raw-types"&gt;
  &lt;/a&gt;
  Don't Use Raw Types
&lt;/h2&gt;

&lt;p&gt;This statement seems obvious. Raw types break the whole idea of generics. Its usage doesn't allow the compiler to detect type errors. But that‚Äôs not the only problem. Suppose we have such class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;getNumbers&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;numbersList&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Assume that we don‚Äôt care about the generic type itself. All we need to do is to traverse &lt;code&gt;numbersList&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;traverseNumbersList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Container&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getNumbers&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Surprisingly this code doesn‚Äôt compile.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;error: incompatible types: Object cannot be converted to int
        for (int num : container.getNumbers()) {
                                           ^
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The thing is that the raw type's usage erases not only the information about the generic type of a class but even predefined ones. So, &lt;code&gt;List&amp;lt;Integer&amp;gt;&lt;/code&gt; becomes just List.&lt;/p&gt;

&lt;p&gt;What can we do about it? The answer is straightforward. If you don‚Äôt care about the generic type, use the &lt;em&gt;wildcard operator&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;traverseNumbersList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getNumbers&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code snippet works perfectly fine.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prefer-wildcardbased-inputs"&gt;
  &lt;/a&gt;
  Prefer Wildcard-Based Inputs
&lt;/h2&gt;

&lt;p&gt;The main difference between arrays and generics is that arrays are &lt;em&gt;&lt;a href="https://en.wikipedia.org/wiki/Covariance_and_contravariance_(computer_science)"&gt;covariant&lt;/a&gt;&lt;/em&gt; while generics are not. It means that &lt;code&gt;Number[]&lt;/code&gt; is a supertype for &lt;code&gt;Integer[]&lt;/code&gt;. And &lt;code&gt;Object[]&lt;/code&gt; is a supertype for any array (except primitive ones). That seems logical, but it may lead to bugs at runtime.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;Number&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1L&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2L&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3L&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;objs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;objs&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"ArrayStoreException happens here"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code does compile but it throws an unexpected exception. Generics were brought to solve this problem.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;longs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="n"&gt;nums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;longs&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// compilation error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;List&amp;lt;Long&amp;gt;&lt;/code&gt; cannot be assigned to &lt;code&gt;List&amp;lt;Number&amp;gt;&lt;/code&gt;. Though it helps us to avoid &lt;code&gt;ArrayStoreException&lt;/code&gt;, it also puts bounds that can make API not flexible and too strict.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;Money&lt;/span&gt; &lt;span class="nf"&gt;getSalary&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;EmployeeService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;Money&lt;/span&gt; &lt;span class="nf"&gt;calculateAvgSalary&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Collection&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Everything looks good, isn‚Äôt it? We have even put &lt;code&gt;Collection&lt;/code&gt; providently as an input parameter. That allows us to pass &lt;code&gt;List&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;Queue&lt;/code&gt;, etc. But don‚Äôt forget that &lt;code&gt;Employee&lt;/code&gt; is just an interface. What if we worked with collections of particular implementations? For example, &lt;code&gt;List&amp;lt;Manager&amp;gt;&lt;/code&gt; or &lt;code&gt;Set&amp;lt;Accountant&amp;gt;&lt;/code&gt;? We couldn't pass them directly. So, it would require to shift the elements to the collection of &lt;code&gt;Employee&lt;/code&gt; type each time.&lt;/p&gt;

&lt;p&gt;Or we can use the wildcard operator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;EmployeeService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;Money&lt;/span&gt; &lt;span class="nf"&gt;calculateAvgSalary&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Collection&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Manager&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;managers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;...;&lt;/span&gt;
&lt;span class="nc"&gt;Set&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Accountant&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;accountants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;...;&lt;/span&gt;
&lt;span class="nc"&gt;Collection&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;SoftwareEngineer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;engineers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;...;&lt;/span&gt;

&lt;span class="c1"&gt;// All these examples compile successfully&lt;/span&gt;
&lt;span class="n"&gt;employeeService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;calculateAvgSalary&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;managers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;employeeService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;calculateAvgSalary&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;accountants&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;employeeService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;calculateAvgSalary&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;engineers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the proper generic usage makes the life of a programmer much easier. Let‚Äôs see another example.&lt;/p&gt;

&lt;p&gt;Suppose we need to declare an API for the sorting service. Here is the first naive attempt.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;SortingService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Comparator&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;comparator&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we‚Äôve got a different kind of a problem. We have to be sure that &lt;code&gt;Comparator&lt;/code&gt; was created exactly for the &lt;code&gt;T&lt;/code&gt; type. But that‚Äôs not always true. We could build a universal one for &lt;code&gt;Employee&lt;/code&gt; which wouldn't work for either &lt;code&gt;Accountant&lt;/code&gt; or &lt;code&gt;Manager&lt;/code&gt; in this case.&lt;/p&gt;

&lt;p&gt;Let‚Äôs make the API a bit better.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;SortingService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Comparator&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;comparator&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// universal comparator&lt;/span&gt;
&lt;span class="nc"&gt;Comparator&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;comparator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;...;&lt;/span&gt;

&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Manager&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;managers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;...;&lt;/span&gt;
&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Accountant&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;accountants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;...;&lt;/span&gt;
&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;SoftwareEngineer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;engineers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;...;&lt;/span&gt;

&lt;span class="c1"&gt;// All these examples compile successfullly&lt;/span&gt;
&lt;span class="n"&gt;sortingService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;managers&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;comparator&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;sortingService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;accountants&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;comparator&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;sortingService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;engineers&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;comparator&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You know, the constraints are a little bit confusing. All these &lt;code&gt;? extends T&lt;/code&gt; and &lt;code&gt;? super T&lt;/code&gt; seems overcomplicated. Thankfully there is an easy rule that can help to identify the correct usage ‚Äî &lt;a href="https://howtodoinjava.com/java/generics/java-generics-what-is-pecs-producer-extends-consumer-super/"&gt;PECS&lt;/a&gt; (producer-extends, consumer-super). It means that a producer should be of type &lt;code&gt;? extends T&lt;/code&gt; while consumer of &lt;code&gt;? super T&lt;/code&gt; one.&lt;/p&gt;

&lt;p&gt;Let‚Äôs take a look at particular examples. The method &lt;code&gt;MoneyService.calculateAvgSalary&lt;/code&gt; that we described earlier accepts a producer. Because the collection &lt;em&gt;produces&lt;/em&gt; elements that are used for further computations.&lt;/p&gt;

&lt;p&gt;Another example comes right from the JDK standard library. I‚Äôm talking about &lt;code&gt;Collection.addAll&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;Collection&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;E&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;addAll&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Collection&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="no"&gt;E&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Defining upper bound generic allows us to concatenate &lt;code&gt;Collection&amp;lt;Employee&lt;/code&gt;&amp;gt; and &lt;code&gt;Collection&amp;lt;Manager&amp;gt;&lt;/code&gt; or any other classes that share the same interface.&lt;/p&gt;

&lt;p&gt;What about consumers? &lt;code&gt;Comparator&lt;/code&gt; that we used in &lt;code&gt;SortingService&lt;/code&gt; is a perfect example. This interface has one method that accepts a generic type and returns a concrete one. A typical example of a consumer. Other ones are &lt;code&gt;Predicate&lt;/code&gt;, &lt;code&gt;Consumer&lt;/code&gt;, &lt;code&gt;Comparable&lt;/code&gt;, and many others from &lt;code&gt;java.util&lt;/code&gt; package. Mostly all of these interfaces should be used with &lt;code&gt;? super T&lt;/code&gt; bound.&lt;/p&gt;

&lt;p&gt;There is also a unique one that is a producer and a consumer at the same time. It‚Äôs &lt;code&gt;java.util.Function&lt;/code&gt;. It converts the input value from one type to another. So, the commonFunction usage is &lt;code&gt;Function&amp;lt;? super T, ? extends R&amp;gt;&lt;/code&gt;. That may look scary but it really helps to build robust software. You can find out that all mapping functions in &lt;code&gt;Stream&lt;/code&gt; interface follow this rule.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;Stream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;BaseStream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Stream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Stream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;map&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Function&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Stream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;flatMap&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Function&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Stream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="nc"&gt;IntStream&lt;/span&gt; &lt;span class="nf"&gt;flatMapToInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Function&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;IntStream&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;One may notice that &lt;code&gt;SortingService.sort&lt;/code&gt; accepts &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; instead &lt;br&gt;
of &lt;code&gt;List&amp;lt;? extends T&amp;gt;&lt;/code&gt;. Why is it so? This is a producer after &lt;br&gt;
all. Well, the thing is that upper and lowerbounds make sense in &lt;br&gt;
comparing to the predefined type. Because &lt;code&gt;SortingService.sort&lt;/code&gt;&lt;br&gt;
method parameterizes itself, there is no sense to restrict &lt;code&gt;List&lt;/code&gt; &lt;br&gt;
with additional bounds. On the other hand, if &lt;code&gt;SortingService&lt;/code&gt; had a generic type, &lt;code&gt;? extends T&lt;/code&gt; would have its value.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;SortingService&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Comparator&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;comparator&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dont-return-bounded-containers"&gt;
  &lt;/a&gt;
  Don't Return Bounded Containers
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#upper-bounds"&gt;
  &lt;/a&gt;
  Upper Bounds
&lt;/h3&gt;

&lt;p&gt;Some developers that discovered the power of bounded generic types may consider that it‚Äôs a silver bullet. That can lead to the code snippets like the next one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;EmployeeRepository&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;findEmployeesByNameLike&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;nameLike&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What‚Äôs wrong here? Firstly, &lt;code&gt;List&amp;lt;? extends Employee&amp;gt;&lt;/code&gt; cannot be assigned to &lt;code&gt;List&amp;lt;Employee&amp;gt;&lt;/code&gt; without casting. More than that, this upper bound puts restrictions which are not obvious.&lt;/p&gt;

&lt;p&gt;For example, values of what type can we put inside the collection returned by &lt;code&gt;EmployeeRepository.findEmployeesByNameLike(String)&lt;/code&gt;? You may suggest that it‚Äôs something like &lt;code&gt;Accountant&lt;/code&gt;, &lt;code&gt;Manager&lt;/code&gt;, &lt;code&gt;SoftwareEngineer&lt;/code&gt;, and so on. But it‚Äôs a wrong assumption.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
&lt;span class="n"&gt;employeeRepository&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findEmployeesByNameLike&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nameLike&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Accountant&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;        &lt;span class="c1"&gt;// compile error&lt;/span&gt;
&lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;SoftwareEngineer&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;  &lt;span class="c1"&gt;// compile error&lt;/span&gt;
&lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Manager&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;           &lt;span class="c1"&gt;// compile error&lt;/span&gt;
&lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;                    &lt;span class="c1"&gt;// passes successfully üëç&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code snippet looks counter-intuitive but in reality, everything works just fine. Let‚Äôs deconstruct this case. First of all, we need to determine what collections can be assigned to &lt;code&gt;List&amp;lt;? extends Employee&amp;gt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;accountants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Accountant&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;managers&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Manager&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;engineers&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;SoftwareEngineer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// ...any other type that extends from Employee &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, basically list of any type that inherits from &lt;code&gt;Employee&lt;/code&gt; can be assigned to &lt;code&gt;List&amp;lt;? extends Employee&amp;gt;&lt;/code&gt;. This makes adding new items tricky. The compiler cannot be aware of the exact type of the list. That‚Äôs why it forbids to add any items in order to eliminate potential heap pollution. But &lt;code&gt;null&lt;/code&gt; is a special case. This value does not have its own type. It can be assigned to anything (except primitives). It is the reason why &lt;code&gt;null&lt;/code&gt; is the only allowed value to add.&lt;/p&gt;

&lt;p&gt;What about retrieving items from the list?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;...;&lt;/span&gt;

&lt;span class="c1"&gt;// passes successfully üëç&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Employee&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Emloyee&lt;/code&gt; is a supertype for any potential element the list may contain. No caveats here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lower-bounds"&gt;
  &lt;/a&gt;
  Lower Bounds
&lt;/h3&gt;

&lt;p&gt;What element can we add to &lt;code&gt;List&amp;lt;? super Employee&amp;gt;&lt;/code&gt;? The logic tells us that it's either &lt;code&gt;Object&lt;/code&gt; or &lt;code&gt;Employee&lt;/code&gt;. And it fools us again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;...;&lt;/span&gt;

&lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Accountant&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;       &lt;span class="c1"&gt;// passes successfully üëç&lt;/span&gt;
&lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Manager&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;          &lt;span class="c1"&gt;// passes successfully üëç&lt;/span&gt;
&lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;SoftwareEngineer&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// passes successfully üëç&lt;/span&gt;
&lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;&lt;span class="cm"&gt;/*implementation*/&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// passes successfully üëç&lt;/span&gt;
&lt;span class="o"&gt;);&lt;/span&gt;     
&lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;           &lt;span class="c1"&gt;// compile error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, to figure out this case let‚Äôs find out what collections can be assigned to &lt;code&gt;List&amp;lt;? super Employee&amp;gt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The compiler knows that the list can consist of either &lt;code&gt;Object&lt;/code&gt; types or &lt;code&gt;Employee&lt;/code&gt; ones. That‚Äôs why &lt;code&gt;Accountant&lt;/code&gt;, &lt;code&gt;Manager&lt;/code&gt;, &lt;code&gt;SoftwareEngineer&lt;/code&gt;, and &lt;code&gt;Employee&lt;/code&gt; can be safely added. They all implement &lt;code&gt;Employee&lt;/code&gt; interface and inherits from &lt;code&gt;Object&lt;/code&gt; class. At the same time, &lt;code&gt;Object&lt;/code&gt; cannot be added because it does not implement &lt;code&gt;Employee&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On the contrary, reading from &lt;code&gt;List&amp;lt;? super Employee&amp;gt;&lt;/code&gt; is not so easy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;...;&lt;/span&gt;

&lt;span class="c1"&gt;// compile error&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Employee&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The compiler cannot be sure that returned item is of &lt;code&gt;Employee&lt;/code&gt; type. Perhaps it is an &lt;code&gt;Object&lt;/code&gt;. That‚Äôs why the code does not compile.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#upperlower-bounds-conclusion"&gt;
  &lt;/a&gt;
  Upper-Lower Bounds Conclusion
&lt;/h2&gt;

&lt;p&gt;We can resume that upper bound make a collection &lt;em&gt;read-only&lt;/em&gt; while lower bound make it &lt;em&gt;write-only&lt;/em&gt;. Does it mean that we can use them as return types in order to restrict client‚Äôs access to data manipulation? I wouldn‚Äôt recommend to do it.&lt;/p&gt;

&lt;p&gt;Upper bound collections are not &lt;em&gt;completely&lt;/em&gt; read-only because you can still add &lt;code&gt;null&lt;/code&gt; to them. Lower bound collections are not &lt;em&gt;completely&lt;/em&gt; write-only because you can still read values as an &lt;code&gt;Object&lt;/code&gt;. I consider that it‚Äôs much better to use special containers that shall give the required access to an instance. You can either apply standard JDK utilities like &lt;code&gt;Collections.unmodifiableList&lt;/code&gt; or use libraries that will do the job (&lt;a href="https://docs.vavr.io/#_list"&gt;Vavr&lt;/a&gt;, for instance).&lt;/p&gt;

&lt;p&gt;Upper and lower bound collections act much better as input parameters. You should not mix them with return types.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recursive-generics"&gt;
  &lt;/a&gt;
  Recursive Generics
&lt;/h2&gt;

&lt;p&gt;We‚Äôve already mentioned recursive generics in this article. It‚Äôs the &lt;code&gt;Stream&lt;/code&gt; interface. Let‚Äôs take a look again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;Stream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;BaseStream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Stream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Stream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;map&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Function&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Stream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;flatMap&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Function&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Stream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="nc"&gt;IntStream&lt;/span&gt; &lt;span class="nf"&gt;flatMapToInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Function&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;IntStream&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, &lt;code&gt;Stream&lt;/code&gt; extends from &lt;code&gt;BaseStream&lt;/code&gt; that is parameterized with &lt;code&gt;Stream&lt;/code&gt; itself. What‚Äôs the reason for it? Let‚Äôs dive into &lt;code&gt;BaseStream&lt;/code&gt; to find out.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;BaseStream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;BaseStream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;AutoCloseable&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="no"&gt;S&lt;/span&gt; &lt;span class="nf"&gt;sequential&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="no"&gt;S&lt;/span&gt; &lt;span class="nf"&gt;parallel&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="no"&gt;S&lt;/span&gt; &lt;span class="nf"&gt;unordered&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="no"&gt;S&lt;/span&gt; &lt;span class="nf"&gt;onClose&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Runnable&lt;/span&gt; &lt;span class="n"&gt;closeHandler&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="nc"&gt;Iterator&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;iterator&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="nc"&gt;Spliterator&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;spliterator&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;isParallel&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;BaseStream&lt;/code&gt; is a typical example of the &lt;a href="https://en.wikipedia.org/wiki/Fluent_interface#:~:text=In%20software%20engineering%2C%20a%20fluent,Eric%20Evans%20and%20Martin%20Fowler."&gt;fluent API&lt;/a&gt; but instead of returning the type itself methods return &lt;code&gt;S extends BaseStream&amp;lt;T, S&amp;gt;&lt;/code&gt;. Let‚Äôs imagine that &lt;code&gt;BaseStream&lt;/code&gt; was designed without this feature.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;BaseStream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;AutoCloseable&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="nc"&gt;BaseStream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;sequential&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="nc"&gt;BaseStream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;parallel&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="nc"&gt;BaseStream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;unordered&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="nc"&gt;BaseStream&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;onClose&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Runnable&lt;/span&gt; &lt;span class="n"&gt;closeHandler&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="nc"&gt;Iterator&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;iterator&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="nc"&gt;Spliterator&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;spliterator&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;isParallel&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How would it affect the whole Stream API?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;...;&lt;/span&gt;
&lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
         &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;Employee:&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;getSalary&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
         &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parallel&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
         &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;reduce&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0L&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acc&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
          &lt;span class="c1"&gt;// compile error ‚õî: cannot find symbol&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;reduce&lt;/code&gt; method belongs to &lt;code&gt;Stream&lt;/code&gt; but not to &lt;code&gt;BaseStream&lt;/code&gt; interface. Therefore &lt;code&gt;parallel&lt;/code&gt; method returns &lt;code&gt;BaseStream&lt;/code&gt;. So, &lt;code&gt;reduce&lt;/code&gt; cannot be found. This becomes clearer in the schema below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cfa0kEtF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qvm65k3ghwpxyqdg0rbj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cfa0kEtF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qvm65k3ghwpxyqdg0rbj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recursive generics come in handy in this situation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nh5DyUe4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u53tn6sewb4mkdloxw8r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nh5DyUe4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u53tn6sewb4mkdloxw8r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This approach allows us to segregate interfaces that leads to better maintainability and readability.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope that you‚Äôve learned something new about Java generics. If you have any questions or suggestions, please leave your comments down below. Thanks for reading!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Covariance_and_contravariance_(computer_science)"&gt;Covariance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://howtodoinjava.com/java/generics/java-generics-what-is-pecs-producer-extends-consumer-super/"&gt;PECS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.vavr.io/#_list"&gt;Vavr library&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>bestofdev</category>
    </item>
    <item>
      <title>No-code web scrapers - the ultimate list</title>
      <author>Jelena Jovanovic</author>
      <pubDate>Mon, 20 Sep 2021 17:41:04 +0000</pubDate>
      <link>https://dev.to/plavookac/no-code-low-code-web-scrapers-the-ultimate-list-hmb</link>
      <guid>https://dev.to/plavookac/no-code-low-code-web-scrapers-the-ultimate-list-hmb</guid>
      <description>&lt;p&gt;&lt;em&gt;I originally published this post to &lt;a href="https://automatio.co/blog/no-code-web-scrapers-ultimate-list/"&gt;Automatio.co&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here you will find the ultimate list of &lt;strong&gt;web automation and data scraping tools&lt;/strong&gt; for technical and non-technical people who wants to collect information from a website without hiring a developer or writing a code.&lt;/p&gt;

&lt;p&gt;But before we dive into the list, let's talk a bit about web scraping.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-web-scraping"&gt;
  &lt;/a&gt;
  What is web scraping?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Web scraping&lt;/strong&gt; also called &lt;strong&gt;web data extraction&lt;/strong&gt; is an automated process of &lt;strong&gt;collecting&lt;/strong&gt; publicly available &lt;strong&gt;information&lt;/strong&gt; from a &lt;strong&gt;website&lt;/strong&gt;. This is done with different tools that simulate the human behavior of web surfing. The data gets exported into a standardized format that is more useful for the user such as a CSV, JSON,  Spreadsheet, or an API.&lt;/p&gt;

&lt;p&gt;Web scraping could be useful for a large number of different industries, such as: Information Technology and Services, Financial Services, Marketing and Advertising, Insurance, Banking, Consulting, Online Media, etc.&lt;/p&gt;

&lt;p&gt;It became an important process for businesses that make data-driven decisions. Some of the most common use cases of scraped data for businesses are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Market research&lt;/li&gt;
&lt;li&gt;Price monitoring&lt;/li&gt;
&lt;li&gt;SEO monitoring&lt;/li&gt;
&lt;li&gt;Machine Learning / AI&lt;/li&gt;
&lt;li&gt;Content Marketing&lt;/li&gt;
&lt;li&gt;Lead Generation&lt;/li&gt;
&lt;li&gt;Competitive Analysis&lt;/li&gt;
&lt;li&gt;Reviews scraping&lt;/li&gt;
&lt;li&gt;Job board scraping&lt;/li&gt;
&lt;li&gt;Social media monitoring&lt;/li&gt;
&lt;li&gt;Teaching and research&lt;/li&gt;
&lt;li&gt;many more...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As the Internet has grown enormously and more and more businesses rely on data extraction and web automation, the need for scraping tools is increasing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--il35l3Uw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/web-scraping-interest-over-time-google-trends.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--il35l3Uw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/web-scraping-interest-over-time-google-trends.png" alt="web scraping term on google trends"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start with our list.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#1-automatio"&gt;
  &lt;/a&gt;
  1. Automatio
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://automatio.co/"&gt;https://automatio.co/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;automatio.co, automatio, no code chrome extension, no code chrome extension builder, nocoding data scraper&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KwGRjono--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/automatio.co.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KwGRjono--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/automatio.co.png" alt="Automatio is most powerful no-code web automation tool which give you ability to create bots, scrapers, monitor websites"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Automatio easily handles the boring work so you don't have to. Create a bot to help you accomplish web-based tasks. Extract data, monitor websites, and more without writing a single line of code. Like building blocks, a simple interface lets you create a bot in minutes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Save a lot of money on development cost&lt;/li&gt;
&lt;li&gt;Make a bot in minutes, not in days or weeks&lt;/li&gt;
&lt;li&gt;Your bot will run in cloud servers even if you close your browser or shut down your computer. No configuration is required&lt;/li&gt;
&lt;li&gt;Deal with complex scenarios where other tools can't&lt;/li&gt;
&lt;li&gt;Export data to CSV, Excel, JSON or XML&lt;/li&gt;
&lt;li&gt;reCAPTCHA solver&lt;/li&gt;
&lt;li&gt;API&lt;/li&gt;
&lt;li&gt;Get data behind a log-in&lt;/li&gt;
&lt;li&gt;Automatically fill forms&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#2-bright-data"&gt;
  &lt;/a&gt;
  2. Bright Data
&lt;/h3&gt;

&lt;p&gt;website: brightdata.com&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;luminati, bright data, residential proxy, luminati proxy, residential proxies&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--og18tirr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/brightdata.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--og18tirr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/brightdata.jpg" alt="Bright Data (formerly Luminati) Proxy Networks and Data Collection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bright Data provides automated web data collection solutions for businesses and is the world‚Äôs most reliable proxy network. Collect accurate data from any website, at any scale, and have it delivered to you on autopilot, in the format of your choice.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automated web data extraction&lt;/li&gt;
&lt;li&gt;Rapidly adjusts to new page layouts&lt;/li&gt;
&lt;li&gt;Collects web data at any scale&lt;/li&gt;
&lt;li&gt;Learns to bypass the latest blocking methods&lt;/li&gt;
&lt;li&gt;Frees up resources, saving time, effort, and cost&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#3-octoparse"&gt;
  &lt;/a&gt;
  3. Octoparse
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://www.octoparse.com/"&gt;https://www.octoparse.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;octoparse, octoparse download, web scraper, website copier, web scraping software&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k1ZwxIGf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/octoparse.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k1ZwxIGf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/octoparse.png" alt="Web Scraping Tool &amp;amp;amp; Free Web Crawlers | Octoparse"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Octoparse is a cloud-based web data extraction solution that helps users extract relevant information from various types of websites without coding. It enables users from a variety of industries to scrape unstructured data and save it in different formats including Excel, plain text, and HTML.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Point-and-click interface&lt;/li&gt;
&lt;li&gt;Deal with all sorts of websites&lt;/li&gt;
&lt;li&gt;Cloud extraction&lt;/li&gt;
&lt;li&gt;Automatic IP rotation&lt;/li&gt;
&lt;li&gt;Schedule extraction&lt;/li&gt;
&lt;li&gt;API, CSV, Excel, Database&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#4-web-scraper"&gt;
  &lt;/a&gt;
  4. Web Scraper
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://webscraper.io/"&gt;https://webscraper.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;web scraper, web scraping, web scraping tools, webscraper, website scraper&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0us7lF0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/webscraper.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0us7lF0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/webscraper.jpg" alt="Web Scraper - The #1 web scraping extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web Scraper is a website data extraction tool. You can create a sitemaps that map how the site should be navigated and from which elements data should be extracted. Then you can run the scraper in your browser and download data in CSV.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Point and click interface&lt;/li&gt;
&lt;li&gt;Extract data from dynamic websites&lt;/li&gt;
&lt;li&gt;Built for the modern web&lt;/li&gt;
&lt;li&gt;Modular selector system&lt;/li&gt;
&lt;li&gt;Export data in CSV, XLSX and JSON formats&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#5-parsehub"&gt;
  &lt;/a&gt;
  5. ParseHub
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://parsehub.com/"&gt;https://parsehub.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;parsehub, web scraping, web scraper, scrape amazon product data, parsehub download&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zl1h2ZlZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/parsehub.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zl1h2ZlZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/parsehub.jpg" alt="ParseHub | Free web scraping - The most powerful web scraper"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free web scraping tool. Turn any site into a spreadsheet or API. As easy as clicking on the data you want to extract. You don‚Äôt need any technical knowledge to get started. Their ‚Äúquick select‚Äù feature figures out exactly how a webpage is structured and groups related pieces of data together for you. All you have to do is open a website and click on the information you want to extract!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scrapes any interactive website&lt;/li&gt;
&lt;li&gt;Easy to Use: no coding required&lt;/li&gt;
&lt;li&gt;Extract text, HTML and attributes&lt;/li&gt;
&lt;li&gt;Scrape and download images/files&lt;/li&gt;
&lt;li&gt;Get data behind a log-in&lt;/li&gt;
&lt;li&gt;Download CSV and JSON files&lt;/li&gt;
&lt;li&gt;Scheduled runs&lt;/li&gt;
&lt;li&gt;Automatic IP rotation&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#6-apify"&gt;
  &lt;/a&gt;
  6. Apify
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://apify.com/"&gt;https://apify.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;apify, facebook scraper, web scraper, scraper api, instagram scraping&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kfBjdlrg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/apify.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kfBjdlrg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/apify.jpg" alt="Web Scraping, Data Extraction and Automation ¬∑ Apify"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apify can automate anything you can do manually in a web browser, and run it at scale. We're your one-stop shop for web scraping, data extraction, and web RPA. It's a software platform that enables forward-thinking companies to leverage the full potential of the web‚Äîthe largest source of information ever created by humankind.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automate manual workflows and processes on the web&lt;/li&gt;
&lt;li&gt;Crawl websites, extract data from them and export it to Excel, CSV or JSON.&lt;/li&gt;
&lt;li&gt;Connect diverse web services and APIs&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#7-importio"&gt;
  &lt;/a&gt;
  7. Import.io
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://www.import.io/"&gt;https://www.import.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;data analysis, image url, data scraping, web scraping, import io&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rf7xnb-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/importio.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rf7xnb-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/importio.png" alt="Web Data Integration - Import.io - Data Extraction, Web Data, Web Harvesting, Data Preparation, Data Integration"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Import.io is a Web Data Integration (WDI) platform, which allows people to convert unstructured web data into a structured format by extracting, preparing and integrating web data for consumption in analytic platforms or used in business, sales or marketing applications.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Point-and-click training&lt;/li&gt;
&lt;li&gt;Interactive workflows&lt;/li&gt;
&lt;li&gt;ML auto-suggest&lt;/li&gt;
&lt;li&gt;Download images and files&lt;/li&gt;
&lt;li&gt;Data behind a login&lt;/li&gt;
&lt;li&gt;Easy scheduling&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#8-scrapestorm"&gt;
  &lt;/a&gt;
  8. ScrapeStorm
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://www.scrapestorm.com/"&gt;https://www.scrapestorm.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;scrapestorm, scrape storm, „Çø„Ç¶„É≥„Éö„Éº„Ç∏ „Çπ„ÇØ„É¨„Ç§„Éî„É≥„Ç∞, eol while scanning string literal, syntaxerror: eol while scanning string literal&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_jdY5o5y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/scrapestorm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_jdY5o5y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/scrapestorm.jpg" alt="AI-Powered Web Scraping Tool &amp;amp; Web Data Extractor | ScrapeStorm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AI-Powered visual website scraper, which can be used to extract data from almost any websites without writing any code. Support all operating systems. The best choice for beginners. No technical setup needed. Built by ex-Google crawler team. Free Download.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intelligent identification of data, no manual operation required&lt;/li&gt;
&lt;li&gt;Visual click operation, easy to use&lt;/li&gt;
&lt;li&gt;Multiple data export methods&lt;/li&gt;
&lt;li&gt;Powerful, providing enterprise scraping services&lt;/li&gt;
&lt;li&gt;Cloud account, convenient and fast&lt;/li&gt;
&lt;li&gt;All systems supported, leading technology&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#9-webautomation"&gt;
  &lt;/a&gt;
  9. WebAutomation
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://webautomation.io/"&gt;https://webautomation.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;just dial extractor, webautomation, web automation.io, justdial data extractor, scrape nuts and bolts of home depot using api data&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LdSQ9GBC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/WebAutomation.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LdSQ9GBC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/WebAutomation.jpg" alt="Web Data Extractor &amp;amp;amp; Scraper Tool | Try for FREE"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WebAutomation.io is the largest marketplace to find ready-made no code web scrapers. With only a few clicks and a few seconds you can start extracting data from your favourite site without coding or building from scratch. Scrape product &amp;amp; prices, track and monitor competitors prices.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scrape with one-click using ready made extractors&lt;/li&gt;
&lt;li&gt;Build new extractors with point and click Interface&lt;/li&gt;
&lt;li&gt;Get our concierge to build you an extractor&lt;/li&gt;
&lt;li&gt;Export data to CSV, Excel, JSON or XML&lt;/li&gt;
&lt;li&gt;reCAPTCHA solver&lt;/li&gt;
&lt;li&gt;API&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#10-listly"&gt;
  &lt;/a&gt;
  10. Listly
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://www.listly.io/"&gt;https://www.listly.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;listly, listly login, list ly, Î¶¨Ïä§ÌãÄÎ¶¨, web scraper&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aaE6LZ93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/listly.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aaE6LZ93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/listly.jpg" alt="Listly - The Best Web Scraper Ever"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Listly is a free Chrome Extension to turn Web data into Excel. All you need is just a click. It automatically extracts clean data and arranges them into rows and columns. Listly provides scheduler, e-mail alert for auto web scraping. In addition, the databoard allows you to register thousands of URLs at once and export all into a single spreadsheet with clicks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Export multiple pages into an excel spreadsheet on databoard&lt;/li&gt;
&lt;li&gt;Schedule a daily extraction&lt;/li&gt;
&lt;li&gt;Reproduce mouse / keyboard actions to load more data&lt;/li&gt;
&lt;li&gt;Select proxy server to change IP address&lt;/li&gt;
&lt;li&gt;Extract data from IFRAME&lt;/li&gt;
&lt;li&gt;Extract hyperlinks over content&lt;/li&gt;
&lt;li&gt;Get e-mail Notification&lt;/li&gt;
&lt;li&gt;Upload .html files to fileboard&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#11-agenty"&gt;
  &lt;/a&gt;
  11. Agenty
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://www.agenty.com/"&gt;https://www.agenty.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;agenty, xml scraper, agenty extension, enterprise web scraping, agenty chrome extension&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NMNWLzk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/agenty.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NMNWLzk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/agenty.jpg" alt="Agenty - Robotic Process Automation Software"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A very simple &amp;amp; advanced web data scraping extension by Agenty to extract data from websites using point-and-click CSS Selectors with real-time extracted data preview and export data into JSON/CSV/TSV quickly.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extract any number of fields from a web-page&lt;/li&gt;
&lt;li&gt;Use the built-in CSS selector to generate a pattern with one click&lt;/li&gt;
&lt;li&gt;Write your own custom CSS selector&lt;/li&gt;
&lt;li&gt;Choose the item you want to extract. E.g. TEXT, HTML or ATTR (Attribute)&lt;/li&gt;
&lt;li&gt;See the result preview instantly as CSS selector selected&lt;/li&gt;
&lt;li&gt;Toggle the position left/right&lt;/li&gt;
&lt;li&gt;Export output in most popular file format JSON, CSV or TSV&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#12-diffbot"&gt;
  &lt;/a&gt;
  12. Diffbot
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://www.diffbot.com/"&gt;https://www.diffbot.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;diffbot, diffbot terms of service, seed url, crawling api, crawl api&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JEpk8Cj8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Diffbot.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JEpk8Cj8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Diffbot.jpg" alt="Diffbot | Knowledge Graph, AI Web Data Extraction and Crawling"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Transform the web into data. Diffbot automates web data extraction from any website using AI, computer vision, and machine learning. Unlike traditional web scraping tools, Diffbot doesn't require any rules to read the content on a page. The result is a website transformed into clean structured data (like JSON or CSV), ready for your application.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extract structured data from web pages&lt;/li&gt;
&lt;li&gt;Crawl and extract entire domains&lt;/li&gt;
&lt;li&gt;Query the whole web and enhance your own data&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#13-axiom"&gt;
  &lt;/a&gt;
  13. Axiom
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://axiom.ai/"&gt;https://axiom.ai/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;Browser automation, RPA, No code, automation, LinkedIn, Amazon Seller Central, Shopify, Magento, E-commerce, Data enrichment, Data Entry&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P4SWypgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/axiom.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4SWypgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/axiom.jpg" alt="Axiom - create browser bots quickly without code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Axiom is browser Robotic Process Automation. RPA lets you automate with the UI. Not everyone knows how to code, but everybody knows how to point, click and type on a UI. Axiom enables more people to automate by building automations on a UI without code.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Consolidate data across many web applications&lt;/li&gt;
&lt;li&gt;Input data into any web form or web application&lt;/li&gt;
&lt;li&gt;Batch download &amp;amp; batch upload files&lt;/li&gt;
&lt;li&gt;Extract data from public sites or from behind logins&lt;/li&gt;
&lt;li&gt;Interact with any web application, even legacy systems&lt;/li&gt;
&lt;li&gt;Read/Write and merge data into spreadsheets&lt;/li&gt;
&lt;li&gt;Extract data from behind logins, inside iframes, and nested pages&lt;/li&gt;
&lt;li&gt;Google Drive, webhook and Zapier integration&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#14-docparser"&gt;
  &lt;/a&gt;
  14. Docparser
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://docparser.com/"&gt;https://docparser.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;docparser, what is ocr, ocr, pdf to json, extract data from pdf&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wPRFBbOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Docparser.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wPRFBbOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Docparser.jpg" alt="Docparser - Document Parser Software - Extract Data From PDF to Excel, JSON and Webhooks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docparser identifies and extracts data from Word, PDF and image based documents using Zonal OCR technology, advanced pattern recognition and with the help of anchor keywords. Choose from a selection of Docparser rules templates, or build your own custom document rules.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Smart layout parsing presets&lt;/li&gt;
&lt;li&gt;Extract tabular data&lt;/li&gt;
&lt;li&gt;Powerful custom parsing rules&lt;/li&gt;
&lt;li&gt;Smart filters for invoice processing&lt;/li&gt;
&lt;li&gt;Blazing fast processing&lt;/li&gt;
&lt;li&gt;OCR support for scanned documents&lt;/li&gt;
&lt;li&gt;Powerful image preprocessing&lt;/li&gt;
&lt;li&gt;Barcode and QR-code detection&lt;/li&gt;
&lt;li&gt;Fetch documents from cloud storage providers&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#15-hexomatic"&gt;
  &lt;/a&gt;
  15. Hexomatic
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://hexomatic.com/"&gt;https://hexomatic.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;hexomatic, hexomatic ltd, hexomatic lifetime deal, texau ltd, hexomate&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EWeKhnGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Hexomatic.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EWeKhnGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Hexomatic.jpg" alt="Hexomatic - The no-code, point and click work automation platform"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hexomatic is a no-code, work automation platform that enables you to harness the internet as your own data source, leverage the most sophisticated AI services and a crowdsourced team of human assistants to automate and delegate time consuming tasks. Find new prospects for any industry, discover email or social media profiles, translate content, enrich your leads with tech stack data, get traffic estimates at scale and more. Hexomatic features 30+ ready made automations you can deploy in minutes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scrape data from any website&lt;/li&gt;
&lt;li&gt;Find 100's of prospects in a few clicks using Google Maps&lt;/li&gt;
&lt;li&gt;Monitor Amazon sellers for specific products&lt;/li&gt;
&lt;li&gt;Supercharge your SEO backlinks outreach&lt;/li&gt;
&lt;li&gt;Create screenshots in bulk for any device size&lt;/li&gt;
&lt;li&gt;Perform SEO analysis at scale&lt;/li&gt;
&lt;li&gt;Convert images at scale&lt;/li&gt;
&lt;li&gt;Translate ad creatives or products at scale&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#16-prowebscraper"&gt;
  &lt;/a&gt;
  16. ProWebScraper
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://prowebscraper.com/"&gt;https://prowebscraper.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;json viewer, website downloader, website copier, download website, captcha solver&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bweWXTn_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Prowbscraper.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bweWXTn_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Prowbscraper.jpg" alt="ProWebScraper - Fast and Powerful Web Scraping Tool"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ProWebScraper is the most compelling web scraping tool in the market. It‚Äôs a point and click functionality to scrape data makes web scraping an effortless exercise. ProWebScraper can scrape 90% of internet websites with its robust features like automatic IP rotation, scraping data from js-rendered websites, and HTML tables.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Point and click selector&lt;/li&gt;
&lt;li&gt;Custom selector&lt;/li&gt;
&lt;li&gt;Extract data from multiple pages&lt;/li&gt;
&lt;li&gt;Chaining&lt;/li&gt;
&lt;li&gt;Generate URLs automatically&lt;/li&gt;
&lt;li&gt;Download high-quality images&lt;/li&gt;
&lt;li&gt;Access data via API&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#17-simplescraper"&gt;
  &lt;/a&gt;
  17. Simplescraper
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://simplescraper.io/"&gt;https://simplescraper.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;scraper api, simple scraper, simplescraper, scraper extension, scrapper API&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a1sBP2c---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Simplescraper.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a1sBP2c---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Simplescraper.jpg" alt="Simplescraper ‚Äî Scrape Websites and turn them into APIs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A web scraper that's fast, free and simple to use. Scrape website data and table data in seconds. Simplescraper is designed to be the most simple and most powerful web scraper you've ever used. Run locally in your browser (no need to signup) or create automated scraping recipes that can scrape thousands of web pages and turn them into APIs.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A simple point and click tool to select the data you need&lt;/li&gt;
&lt;li&gt;Smart selection that captures table columns as well as urls from links and images&lt;/li&gt;
&lt;li&gt;Download in CSV or JSON format&lt;/li&gt;
&lt;li&gt;Unlimited free local scraping&lt;/li&gt;
&lt;li&gt;Pagination (cloud scraping)&lt;/li&gt;
&lt;li&gt;Save scrape jobs so you can run again without having to re-select the data you want (cloud scraping)&lt;/li&gt;
&lt;li&gt;Navigate between recipes easily and run multiple scrape jobs simultaneously (cloud scraping)&lt;/li&gt;
&lt;li&gt;Historical snapshots of all the data you have downloaded in the past (cloud scraping)&lt;/li&gt;
&lt;li&gt;Free cloud scraping starting credits&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#18-parsers"&gt;
  &lt;/a&gt;
  18. Parsers
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://parsers.me/"&gt;https://parsers.me/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;import products from any website to shopify, imdb api, parsers, scraper parsers, free web scraper&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ca7AfzO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/parsers.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ca7AfzO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/parsers.jpg" alt="Parsers - Free web scraper - Parsers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Parsers is a browser extension for extracting structured data from sites and their visualization without code. You need to click on the data on the site and start the process. After the process is over, you can see the analyzed data on the charts and download the structured data in the required format (Excel, xml, csv) or get by API.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Select the necessary data for scraping on the site page in a few clicks&lt;/li&gt;
&lt;li&gt;View charts with analyzed data&lt;/li&gt;
&lt;li&gt;Download structured data in XLSX, XLS, XML, CSV or get the latest version by API&lt;/li&gt;
&lt;li&gt;Schedule scraping start and get updated data every day automatically&lt;/li&gt;
&lt;li&gt;View site scraping history and all versions by date&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#19-browse-ai"&gt;
  &lt;/a&gt;
  19. Browse AI
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://www.browseai.com/"&gt;https://www.browseai.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;browse ai, automatic browser, web bot automation,  automation, automate search on website, chromium browser automation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--frM2gdNH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/BrowseAI.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--frM2gdNH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/BrowseAI.jpg" alt="BrowseAI - Scrape and Monitor Data from Any Website with No Code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The easiest way to extract and monitor data from the web and turn any website into an API with no code.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Monitor any webpage for changes&lt;/li&gt;
&lt;li&gt;Download data as a spreadsheet&lt;/li&gt;
&lt;li&gt;Browse 50+ 1-click automations for popular use cases, or record a custom automation&lt;/li&gt;
&lt;li&gt;Extract data from any website as a spreadsheet&lt;/li&gt;
&lt;li&gt;Automate data entry on any web-based forms&lt;/li&gt;
&lt;li&gt;Create an API for any website that doesn't have a public API.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#20-rtila"&gt;
  &lt;/a&gt;
  20. RTILA
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://www.rtila.net/"&gt;https://www.rtila.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;rtila, web automation, browser automation, real-time monitoring, website 2 csv&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tn7-O_4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/RTILA.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tn7-O_4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/RTILA.jpg" alt="Rtila - Growth Hacking &amp;amp; Marketing Automation Software"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RTILA is an easy-to-use growth hacking and marketing automation software that can gather and scrape data that you need in almost any website out there. No coding skills are required.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web browser automation&lt;/li&gt;
&lt;li&gt;Real-time data monitoring&lt;/li&gt;
&lt;li&gt;Point-and-click interface&lt;/li&gt;
&lt;li&gt;Extract multiple pages at once&lt;/li&gt;
&lt;li&gt;For Windows &amp;amp; Mac &amp;amp; Linux&lt;/li&gt;
&lt;li&gt;Export in CSV, JSON &amp;amp; HTML&lt;/li&gt;
&lt;li&gt;Visualized web data selection&lt;/li&gt;
&lt;li&gt;Extract data from any site&lt;/li&gt;
&lt;li&gt;Preview results in realtime&lt;/li&gt;
&lt;li&gt;Bypass anti-scraping systems&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#21-dashblock"&gt;
  &lt;/a&gt;
  21. Dashblock
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://www.dashblock.com/"&gt;https://www.dashblock.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;dashblock, website to api, hiplead, built with app, trynow crunchbase&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aF4DxFmi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Dashblock.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aF4DxFmi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Dashblock.jpg" alt="Dashblock - Build web automations without coding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dashblock software is a platform used to automate processes in testing website and collect data seamlessly. The software uses a Machine Learning tool to create web automation and execute them with an API call. Add variables, send high-level commands, return data, select elements visually and get a visual feedback in real-time. It integrates with Slack and Zapier. Developer, Small and Medium companies make use of the software.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Collect data in real-time&lt;/li&gt;
&lt;li&gt;Monitor your competition&lt;/li&gt;
&lt;li&gt;Fill forms and book appointments&lt;/li&gt;
&lt;li&gt;Automatically checkout products&lt;/li&gt;
&lt;li&gt;Download invoices or reports&lt;/li&gt;
&lt;li&gt;Generate leads automatically&lt;/li&gt;
&lt;li&gt;Test your website&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#22-scrapedo"&gt;
  &lt;/a&gt;
  22. Scrape.do
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://scrape.do/"&gt;https://scrape.do/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;free rotating proxy api, scraper proxy api, best proxy for scraping, proxy scrape, scrape proxy&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PhAC9hHo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/scrapedo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PhAC9hHo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/scrapedo.jpg" alt="Scrape.do- Best Rotating Proxy and Scraping API Alternative"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Best Rotating Proxy &amp;amp; Scraping API Alternative You don't need to spend hours to create your own IP rotation rules and pay for different services. Just use scrape-do and only pay for successful requests.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Residential rotating proxies&lt;/li&gt;
&lt;li&gt;Geo targeting&lt;/li&gt;
&lt;li&gt;Unlimited bandwith&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#23-sequentum"&gt;
  &lt;/a&gt;
  23. Sequentum
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://sequentum.com/"&gt;https://sequentum.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;sequentum, content grabber, sequentum enterprise, proxy pool, content grabber&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MziVPRKS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Sequentum.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MziVPRKS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Sequentum.jpg" alt="Sequentum - Intelligent Web Data Pipelines with 95% Less Code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sequentum provides complete control for web data extraction, document management and intelligent process automation (IPA). Our end-to-end platform provides the flexibility to be used in-house or you can outsource your web data extraction needs to our experienced Managed Data Services group. Our tools create software configuration files that define exactly what data to extract, quality control monitors, and output specifications to any format or endpoint&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to use point and click interface&lt;/li&gt;
&lt;li&gt;Robust API supports easy drop-in to existing data pipelines&lt;/li&gt;
&lt;li&gt;Easily integrate third party AI, ML, NLP libraries or APIs for data enrichment&lt;/li&gt;
&lt;li&gt;Customization in common coding languages like Python3, C#, Javascript, Regular Expressions&lt;/li&gt;
&lt;li&gt;Optional integration with Microsoft or Google identities&lt;/li&gt;
&lt;li&gt;Export to any format&lt;/li&gt;
&lt;li&gt;Deliver to any endpoint&lt;/li&gt;
&lt;li&gt;On-premise, cloud, and hybrid deployment model&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#24-data-miner"&gt;
  &lt;/a&gt;
  24. Data Miner
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://dataminer.io/"&gt;https://dataminer.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;data miner, dataminer, data miner chrome extension, data miner extension, data miner chrome&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E1loiRTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/DataMiner.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E1loiRTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/DataMiner.jpg" alt="Scrape data from any website with 1 Click | Data Miner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data Miner is a Google Chrome Extension and Edge Browser Extension that helps you crawl and scrape data from web pages and into a CSV file or Excel spreadsheet.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extract tables &amp;amp; lists&lt;/li&gt;
&lt;li&gt;Pages behind login/firewall&lt;/li&gt;
&lt;li&gt;Javascript API hooks&lt;/li&gt;
&lt;li&gt;Click scraping&lt;/li&gt;
&lt;li&gt;Open &amp;amp; scrape a list of URLs&lt;/li&gt;
&lt;li&gt;Scrape dynamic ajax content&lt;/li&gt;
&lt;li&gt;Scrape paginated results&lt;/li&gt;
&lt;li&gt;Run custom Javascript&lt;/li&gt;
&lt;li&gt;Automatically fill forms&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#25-datagrab"&gt;
  &lt;/a&gt;
  25. DataGrab
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://datagrab.io/"&gt;https://datagrab.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;datagrab, grab io&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s_T_v0NG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/datagrabio.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s_T_v0NG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/datagrabio.png" alt="DataGrab - Extract web data at scale without coding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DataGrab allows you to extract data from web pages via a point-and-click interface, supporting a variety of use cases such as lead generation, price monitoring, data aggregation, real estate listings, and more. It was primarily designed for non-coders, but it still offers the flexibility for developers to tweak the generated CSS selectors&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Visual scraper setup&lt;/li&gt;
&lt;li&gt;Pagination (by following the links to next pages)&lt;/li&gt;
&lt;li&gt;Linking detail pages to their listing pages&lt;/li&gt;
&lt;li&gt;Dynamic sites (ones that employ techniques such as infinite scroll, "load more" button, etc.)&lt;/li&gt;
&lt;li&gt;Scheduling (run your scrapers automatically every hour, day, week or month)&lt;/li&gt;
&lt;li&gt;Exporting data in CSV or JSON format&lt;/li&gt;
&lt;li&gt;Automatic data delivery via email&lt;/li&gt;
&lt;li&gt;Data retention for 7 days&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#26-spider-pro"&gt;
  &lt;/a&gt;
  26. Spider Pro
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://tryspider.com/"&gt;https://tryspider.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;spider pro, pro web scraper&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--He7rm9v9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Spider-Pro.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--He7rm9v9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/Spider-Pro.jpg" alt="Spider Pro - the easiest way to scrape the internet"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Spider Pro, an easy-to-use web scraping tool that turns websites into organized data. It requires 0 configurations or programming experience, simply starts clicking to collect data.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unobtrusive user interface design&lt;/li&gt;
&lt;li&gt;Scrape paginated content with a single click&lt;/li&gt;
&lt;li&gt;Scrape ajax loaded content&lt;/li&gt;
&lt;li&gt;No server involved&lt;/li&gt;
&lt;li&gt;Improved selector logic for better results&lt;/li&gt;
&lt;li&gt;Custom selector for quirky website structures&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#27-scrapexai"&gt;
  &lt;/a&gt;
  27. ScrapeX.ai
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://scrapex.ai/"&gt;https://scrapex.ai/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;scrapex, scrape x, no code platform&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iCpUqMTK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/ScrapeX.ai.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iCpUqMTK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/ScrapeX.ai.jpg" alt="Scrapex.ai - Your complete No-Code data extraction platform"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ScrapeX.ai automate scraping and handle data extraction problems at scale. While you sit back and relax, it gets the data you want, the way you want it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scrape any webpage&lt;/li&gt;
&lt;li&gt;Manage your scraper instances on a single dashboard&lt;/li&gt;
&lt;li&gt;Cookie support&lt;/li&gt;
&lt;li&gt;Scripts to power scrapers&lt;/li&gt;
&lt;li&gt;Scrape an entire website for site audit and create site maps&lt;/li&gt;
&lt;li&gt;Automatic data extraction APIs&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#28-anypicker"&gt;
  &lt;/a&gt;
  28. AnyPicker
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://www.anypicker.com/"&gt;https://www.anypicker.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;anypicker, any picker, anypicker chrome extension&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1_5YF4rN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/AnyPicker.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1_5YF4rN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/AnyPicker.png" alt="Extract website data without any code - AnyPicker: Visual Web Scraper | Web Crawler | Web Data Extractor | Web Data Visualization"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AnyPicker is a Chrome extension for visual web scraping. It sets the web extraction rules super easily, just by clicking what you see on the website and without needing to download any other software. Integrated with Google Sheets, it saves scraped data just with one click, saving you time to upload and parse your data by Google Driver. All data is processed in your local computer, it is never passing through AnyPicker‚Äôs web server, so no one knows what you scraped.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simple and easy visual interface&lt;/li&gt;
&lt;li&gt;Works with any web site, even behind logins&lt;/li&gt;
&lt;li&gt;Get structured data in XLS,CSV, and format&lt;/li&gt;
&lt;li&gt;Scrape and download images automatically&lt;/li&gt;
&lt;li&gt;Recognizes data patterns automatically&lt;/li&gt;
&lt;li&gt;Full suport for pagination and infinite scroll&lt;/li&gt;
&lt;li&gt;Save recipes for repeat scraping&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#29-scrapio"&gt;
  &lt;/a&gt;
  29. Scrapio
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://www.getscrapio.com/"&gt;https://www.getscrapio.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;scrapio, get scrapio, scrapio extension, no code scraper, extract data&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xMDWYXAP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/scrapio.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMDWYXAP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/scrapio.jpg" alt="Scrapio - Webscraping from the comfort of your browser"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Automatically extract content from any webpage. Download extracted data, automate scraping processes over multiple links, and much more.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Auto content detection&lt;/li&gt;
&lt;li&gt;Manage scraped data&lt;/li&gt;
&lt;li&gt;Multiple filetypes&lt;/li&gt;
&lt;li&gt;Data interactions&lt;/li&gt;
&lt;li&gt;Repeat the extractor on scraped links&lt;/li&gt;
&lt;li&gt;Record content interactions&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#30-monitoro"&gt;
  &lt;/a&gt;
  30. Monitoro
&lt;/h3&gt;

&lt;p&gt;website: &lt;a href="https://www.monitoro.xyz/"&gt;https://www.monitoro.xyz/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tags: &lt;em&gt;monitoro, price monitoring, web scraping, google sheet, csv, airtable&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wrnwLT34--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/monitoro.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wrnwLT34--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automatio.co/blog/content/images/size/w1000/2021/09/monitoro.jpg" alt="No-code website monitoring and data integration | Monitoro"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoro is a cloud service that watches websites for changes. It scrapes data and sends it to other services every time a change happens. Every time a webpage changes, Monitoro calls your webhook with up-to-date data. Overall, Monitoro scrapes structured data, watches data for changes and then sends fresh data to webhooks&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automate web data extraction when a website changes&lt;/li&gt;
&lt;li&gt;Sync and enrich data in realtime with Google Sheets, Airtable, and any CMS or DB&lt;/li&gt;
&lt;li&gt;Get custom alerts in Slack, Discord, Email, SMS or your favorite channel&lt;/li&gt;
&lt;li&gt;Create custom triggers for Zapier, IFTTT or any webhook with the extracted data&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;This was a long list, but I hope you liked it and that this post will help you to choose the right tool for your needs.&lt;/p&gt;

&lt;p&gt;However, if you haven't found the right fit yet and you need help with some of your projects because they require more complex functionality, let us know. We‚Äôve built our own web automation and data extraction tool &lt;a href="https://automatio.co/"&gt;Automatio.io&lt;/a&gt; and created thousands of bots to collect millions of data over the years so we have high experience in this field.&lt;/p&gt;

</description>
      <category>webscraping</category>
      <category>scraping</category>
      <category>automation</category>
      <category>bot</category>
    </item>
    <item>
      <title>I created an e-book about developer job searching - Get a free sample!</title>
      <author>Eddy Vinck</author>
      <pubDate>Mon, 20 Sep 2021 17:13:54 +0000</pubDate>
      <link>https://dev.to/eddyvinck/i-created-an-e-book-about-developer-job-searching-get-a-free-sample-3pe2</link>
      <guid>https://dev.to/eddyvinck/i-created-an-e-book-about-developer-job-searching-get-a-free-sample-3pe2</guid>
      <description>&lt;p&gt;&lt;strong&gt;Developer Job Searching: The Not So Technical Parts&lt;/strong&gt; is the resource I wish I had when I started searching for developer jobs.&lt;/p&gt;

&lt;p&gt;It includes &lt;strong&gt;everything that I have learned about job searching&lt;/strong&gt; since I started learning how to code 5 years ago.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It launches tomorrow!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can get a free sample here: &lt;a href="https://eddyvinck.gumroad.com/l/pSKPZ"&gt;https://eddyvinck.gumroad.com/l/pSKPZ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like it, you can still save 40% by pre-ordering here: &lt;a href="https://eddyvinck.gumroad.com/l/developer-job-searching/pre-sale"&gt;https://eddyvinck.gumroad.com/l/developer-job-searching/pre-sale&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BYVVA1wz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o73odgefz4md7sgrwbwz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BYVVA1wz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o73odgefz4md7sgrwbwz.png" alt="e-book cover image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a pre-order, the e-book costs just &lt;strong&gt;$11.40&lt;/strong&gt;, and the Complete Package costs only &lt;strong&gt;$21&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Tomorrow, after the launch, the e-book will be &lt;strong&gt;$19&lt;/strong&gt;, and the Complete Package will be &lt;strong&gt;$35&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Save 40%:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://eddyvinck.gumroad.com/l/developer-job-searching/pre-sale"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T2x01eYm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xifa0u5rezzlioyj5i7.png" alt="I want this e-book!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Learn Javascript Reduce method with 5 examples</title>
      <author>Ramiro</author>
      <pubDate>Mon, 20 Sep 2021 17:03:06 +0000</pubDate>
      <link>https://dev.to/ramgendeploy/learn-javascript-reduce-method-with-5-examples-128n</link>
      <guid>https://dev.to/ramgendeploy/learn-javascript-reduce-method-with-5-examples-128n</guid>
      <description>&lt;p&gt;The reduce method applies a function to every item of an array and accumulates the result iteratively from a starting point then returns a single value/object.&lt;/p&gt;

&lt;p&gt;Some examples of the use of the reduce method&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sum-the-items-of-an-array"&gt;
  &lt;/a&gt;
  Sum the items of an array:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// For clarity the above code is the same as &lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#find-the-maximum-in-an-array"&gt;
  &lt;/a&gt;
  Find the maximum in an array:
&lt;/h2&gt;

&lt;p&gt;Here in each iteration we return the max between the accumulator and the current item and in the end we have the max of the entire array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kc"&gt;Infinity&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#removing-duplicates-in-an-array"&gt;
  &lt;/a&gt;
  Removing duplicates in an array:
&lt;/h2&gt;

&lt;p&gt;We check if the current value has index on the accumulator array if not is going to return -1 hence is not in the array and we can add it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dupes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;f&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;withOutDupes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dupes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;noDupes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curVal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;noDupes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;curVal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;noDupes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;curVal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;noDupes&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#extract-properties-in-an-array-of-objects-returning-an-array"&gt;
  &lt;/a&gt;
  Extract properties in an array of objects returning an array
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Alice&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Data Analyst&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AU&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bob&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Pilot&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;US&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Karen&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Software Eng&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jeremy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Artist&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SP&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ppl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curPerson&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;curPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;country&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;persons&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

&lt;span class="c1"&gt;// You can also do this with map&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pplm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;curPerson&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;curPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;country&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#flattened-an-array-of-arrays"&gt;
  &lt;/a&gt;
  Flattened an array of arrays
&lt;/h2&gt;

&lt;p&gt;This is only 1 level deep but it you can adapt this with a recursive function, but i'm not that fan of making recursive things on javascript üòÇ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;flattened&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singleArr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;nextArray&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;singleArr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nextArray&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="c1"&gt;// results is [3, 4, 5, 2, 5, 3, 4, 5, 6]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>MongoDB $weeklyUpdate (September 20, 2021): Latest MongoDB Tutorials, Events, Podcasts, &amp; Streams!</title>
      <author>Adrienne Tacke</author>
      <pubDate>Mon, 20 Sep 2021 16:54:00 +0000</pubDate>
      <link>https://dev.to/mongodb/mongodb-weeklyupdate-september-20-2021-latest-mongodb-tutorials-events-podcasts-streams-3nn9</link>
      <guid>https://dev.to/mongodb/mongodb-weeklyupdate-september-20-2021-latest-mongodb-tutorials-events-podcasts-streams-3nn9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hi-everyone"&gt;
  &lt;/a&gt;
  üëã Hi everyone!
&lt;/h2&gt;

&lt;p&gt;Welcome to MongoDB $weeklyUpdate! &lt;/p&gt;

&lt;p&gt;Here, you'll find the latest developer tutorials, upcoming official MongoDB events, and get a heads up on our latest Twitch streams and podcast, curated by &lt;a href="https://twitter.com/AdrienneTacke"&gt;Adrienne Tacke&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#freshest-tutorials-on-devhub"&gt;
  &lt;/a&gt;
  üéì Freshest Tutorials on &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Want to find the latest MongoDB tutorials and articles created for developers, by developers? Look no further than our &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#startactivityforresult-is-deprecated-"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/article/realm-startactivityforresult-registerForActivityResult-deprecated-android-kotlin/"&gt;StartActivityForResult is deprecated !!&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/mohit-sharma/"&gt;Mohit Sharma&lt;/a&gt; &lt;br&gt;
Learn the benefits and usage of registerForActivityResult for Android in Kotlin.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#build-offlinefirst-mobile-apps-by-caching-api-results-in-realm"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/how-to/realm-api-cache/"&gt;Build Offline-First Mobile Apps by Caching API Results in Realm&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/andrewmorgan"&gt;Andrew Morgan&lt;/a&gt; &lt;br&gt;
This article shows how the RCurrency mobile app fetches exchange rate data from a public API, and then caches it in Realm for always-on, local access.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#official-mongodb-events"&gt;
  &lt;/a&gt;
  üìÖ Official MongoDB &lt;a href="https://live.mongodb.com/events/#/calendar"&gt;Events&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Attend an official MongoDB event near you (virtual for now)! Chat with MongoDB experts, learn something new, meet other developers, and win some swag!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Sep 23 (4:00 PM GMT | Global) - &lt;a href="https://live.mongodb.com/events/details/mongodb-mongodb-global-virtual-community-presents-6-things-lauren-learned-while-modeling-data-in-mongodb/"&gt;6 Things Lauren Learned While Modeling Data in MongoDB&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sep 29 (3:00 PM GMT | Global) - &lt;a href="https://live.mongodb.com/events/details/mongodb-dach-virtual-community-presents-mongodb-atlas-mit-ansible-automatisieren/"&gt;MongoDB Atlas mit Ansible automatisieren&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#mongodb-on-twitch-amp-youtube"&gt;
  &lt;/a&gt;
  üì∫ MongoDB on &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt; &amp;amp; &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;We stream tech tutorials, live coding, and talk to members of our community via &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube&lt;/a&gt;. Sometimes, we even stream twice a week! Be sure to &lt;a href="https://www.twitch.tv/mongodb"&gt;follow us on Twitch&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;subscribe to our YouTube channel&lt;/a&gt; to be notified of every stream!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Latest Stream&lt;/em&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/wdmPTVzRBfs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;üçø &lt;a href="https://www.twitch.tv/mongodb"&gt;Follow us&lt;/a&gt; on Twitch and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;subscribe to our YouTube channel&lt;/a&gt; so you never miss a stream!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#%F0%9F%8E%99-last-word-on-the-mongodb-podcast"&gt;
  &lt;/a&gt;
  üéô Last Word on the &lt;a href="https://mongodb.libsyn.com/"&gt;MongoDB Podcast&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Latest Episode&lt;/em&gt;&lt;br&gt;
&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2q8YcXNkmhuRAMtfWDBlnV"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Catch up on past episodes&lt;/em&gt;:&lt;br&gt;
Ep. 76 - &lt;a href="https://open.spotify.com/episode/38kyw8xdKmm9n7ewHjYLBg?si=gwkcKALOQbmw1JgpvAYmDQ&amp;amp;dl_branch=1"&gt;The Role of a MongoDB Consulting Engineer with Eric Reid&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 75 - &lt;a href="https://open.spotify.com/episode/4IZ115BTG83rW3ErdGxgOp?si=fKEIXOV1SIOUeRWsUzMEhw&amp;amp;dl_branch=1"&gt;Speaking at Your Next Tech Conference with Sven Peters&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 74 - &lt;a href="https://open.spotify.com/episode/2tSRNf6OxZVlElawGyxPVk?si=nGcokX2nQZ-7pZ-ZxOwT5A&amp;amp;dl_branch=1"&gt;Thinking Diagnostically with Danny Hatcher&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Not listening on Spotify? We got you! We're most likely on your favorite podcast network, including &lt;a href="https://podcasts.apple.com/us/podcast/the-mongodb-podcast/id1500452446"&gt;Apple Podcasts&lt;/a&gt;, &lt;a href="https://player.fm/series/the-mongodb-podcast"&gt;PlayerFM&lt;/a&gt;, &lt;a href="https://podtail.com/en/podcast/the-mongodb-podcast/"&gt;Podtail&lt;/a&gt;, and &lt;a href="https://www.listennotes.com/podcasts/the-mongodb-podcast-mongodb-0g6fUKMDN_y/"&gt;Listen Notes&lt;/a&gt; üòä)&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mongodb-devrel-around-the-interwebz"&gt;
  &lt;/a&gt;
  üåç MongoDB DevRel around the Interwebz
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Watch our team do their thang at various conferences, meetups, and podcasts around the world (virtually, for now). Also, find external articles and guest posts from our DevRel team here!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#upcoming-conferences"&gt;
  &lt;/a&gt;
  üìÖ Upcoming Conferences
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Sep 28 - &lt;a href="https://paris.serverlessdays.io/en/"&gt;ServerlessDays Paris&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d6JMGxm0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E9uZaONUUAMkOOv%3Fformat%3Djpg%26name%3Dmedium" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d6JMGxm0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E9uZaONUUAMkOOv%3Fformat%3Djpg%26name%3Dmedium" alt="Speaker announcement card for Adrienne Tacke at ServerlessDays Paris. Happening on September 28, 2021. Talk title: Serverless Socializing: How I Built a Quick Multi-Player Serverless Game"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sep 29 - &lt;a href="https://www.devopsworld.com/home"&gt;DevOps World (Online)&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
Adrienne will be joining remotely to give her popular "Multi-Cloud Magic" talk!&lt;/p&gt;




&lt;p&gt;üí° These $weeklyUpdates are always posted to the &lt;a href="https://www.mongodb.com/community/forums/"&gt;MongoDB Community Forums&lt;/a&gt; &lt;em&gt;first&lt;/em&gt;! &lt;a href="https://account.mongodb.com/account/register"&gt;Sign up&lt;/a&gt; today to always get first dibs on these $weeklyUpdates and other MongoDB announcements, interact with the MongoDB community, and help others solve MongoDB related issues!&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>database</category>
      <category>programming</category>
      <category>mobile</category>
    </item>
    <item>
      <title>5 Ways to Stay Focused While Coding</title>
      <author>Mr. Unity Buddy</author>
      <pubDate>Mon, 20 Sep 2021 16:47:21 +0000</pubDate>
      <link>https://dev.to/unitybuddy/5-ways-to-stay-focused-while-coding-32hg</link>
      <guid>https://dev.to/unitybuddy/5-ways-to-stay-focused-while-coding-32hg</guid>
      <description>&lt;p&gt;Hello, buddies! Of course, coding is NOT hard but, if you can't keep your focus on coding, it would be hard. And the amount of coding some programmers need to do, it is common to not be able to get back into it or continue doing it for a long time. This can be the reason for a spaghetti code.&lt;/p&gt;

&lt;p&gt;So here are some of the ways that you can use to keep your focus while coding :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-use-pomodoro-technique"&gt;
  &lt;/a&gt;
  1. Use Pomodoro Technique
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VchHez6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625153209244/5PzRa6VHG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VchHez6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625153209244/5PzRa6VHG.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
I have mentioned this before too. The Pomodoro technique is a time-management methodology designed to give you bouts of uninterrupted focus for about 20-30 minutes at a time. Followed by some rest periods in between so that you don't completely lose it. &lt;/p&gt;

&lt;p&gt;Just play around with the technique and see how your body and mind react to it. Because sometimes even just a day of constant focus can make the difference in our week and completely shift our work mindset around.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-listen-to-music-when-you-code"&gt;
  &lt;/a&gt;
  2. Listen To Music When You Code
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uxEVyu_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625153245977/flfmxBl-v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uxEVyu_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625153245977/flfmxBl-v.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Music is a great way to keep your focus on almost anything(not for everyoneüòâ). There are lots of focus-based playlists and mixes on YouTube spread across various genres and styles. Find out what works for you and stick to it. To keep in focus, I recommend listening to calming and instrumental music. Listening to heavy metal music can make your code a spaghetti...&lt;/p&gt;

&lt;p&gt;While many find it difficult to focus when music is on, instrumental music like Piano functions to the contrary for many. It functions instead as background music, reinforcing your feedback loop and keeping you in the code for a long time. &lt;/p&gt;

&lt;p&gt;Related : - &lt;a href="https://thenursewhocoded.hashnode.dev/5-music-albums-to-listen-to-while-coding"&gt;5 music albums to listen to while coding&lt;/a&gt; By @&lt;a href="https://dev.to@Wolfwood"&gt;Gabriel RomayMachado (he/him)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mr-unity-buddy.hashnode.dev/why-you-should-listen-to-music-while-coding"&gt;Why You Should Listen To Music While Coding? üéß&lt;/a&gt; By BuddyüòÇ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-eat-for-the-task-at-hand"&gt;
  &lt;/a&gt;
  3. Eat for the task at hand
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X7cgAoBL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625153486409/CWGe2-B4A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X7cgAoBL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625153486409/CWGe2-B4A.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Our brain needs fuel to work, as does our car, our phone, our house and pretty much everything that man has created that works in a mechanized way. So eat for the situation at hand. Everyone is different, and at different metabolic rates and such, so I can't tell you what to eat exactly. But I can say that you should eat foods that don't make you sleepy afterward. Sure, sometimes those meals are satisfying and the nap afterward feels pretty fantastic. But you aren't going to build that next big space company while napping on your coding chair.üòÇüòÇ&lt;/p&gt;

&lt;p&gt;Of course, coffee is a good thing but don't drink more than 1 Mug-fulls a day. It can harm your mid-night nap. Recently I realized that a Teacup can do the task of coffee too. The best thing is, Tea doesn't harm your health like coffee!üçµ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-practice-meditation"&gt;
  &lt;/a&gt;
  4. Practice Meditation
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YEtGfuo7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625153555281/GlC9Gw9s7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YEtGfuo7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625153555281/GlC9Gw9s7.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Studies show that even a short meditation session of about 20 minutes per day increases the capability of performing cognitive tasks. Meditation helps the practice of not only focusing the mind but also being a part of the moment and observing one‚Äôs train of thought without controlling it. &lt;/p&gt;

&lt;p&gt;Even though I can't stay in the same place for a long time without doing anything, I can stay meditating. In our country(Sri Lanka), meditating is done by almost every person so I don't miss it üòú&lt;/p&gt;

&lt;p&gt;Related: &lt;a href="https://blog.andreizgirvaci.com/how-meditation-improved-my-productivity-as-a-developer"&gt;How meditation improved my productivity as a Developer&lt;/a&gt; By @&lt;a href="https://dev.to@andrei-zgirvaci"&gt;Andrei Zgirvaci&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Warning: You may fall in a beautiful nap while meditating so be careful!üí§&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#5-reward-yourself"&gt;
  &lt;/a&gt;
  5. Reward yourself
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HEYN9lT5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625153564192/cv_XPlJxM7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HEYN9lT5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625153564192/cv_XPlJxM7.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
I saved this one for last because it is the hardest to follow for some reason. But you need to reward yourself after having accomplished a milestone in your work. Something that says 'Good job' to yourself and that you can look forward to on your next focus session. That's where that pair-programming or teamwork worth much. Whenever you have done a task your mates cheer you! As I take my team as an example my mates cheer me before the work, while doing the work and after completing the work!üí™&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8TELxSNz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625151103416/gzfUxaz5uh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8TELxSNz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625151103416/gzfUxaz5uh.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
'Duck' is a nicknameüòú&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you feel saying 'Good Luck' for yourself, get a gift. It can be food, Games, Hangouts, Shot On iPhone, or anything that you love. For me, it would be a dark chocolate bar that I loveüç´üç´&lt;/p&gt;

&lt;p&gt;So, buddies, that's for now. Make sure you've focused when coding or debugging or anything to make it Not Hard! Happy coding!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mr-unity-buddy.hashnode.dev/5-ways-to-stay-focused-while-coding"&gt;Originally&lt;/a&gt; published on Hashnode&lt;/p&gt;

</description>
      <category>programming</category>
      <category>tips</category>
      <category>beginners</category>
      <category>focus</category>
    </item>
    <item>
      <title>The Simplest Thing That Could Possibly Work</title>
      <author>scottshipp</author>
      <pubDate>Mon, 20 Sep 2021 16:38:05 +0000</pubDate>
      <link>https://dev.to/scottshipp/the-simplest-thing-that-could-possibly-work-d6j</link>
      <guid>https://dev.to/scottshipp/the-simplest-thing-that-could-possibly-work-d6j</guid>
      <description>&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Ward_Cunningham"&gt;Wiki inventor Ward Cunningham&lt;/a&gt; once recalled &lt;a href="https://www.artima.com/articles/the-simplest-thing-that-could-possibly-work#part3"&gt;an experience&lt;/a&gt; he had with &lt;a href="https://en.wikipedia.org/wiki/Kent_Beck"&gt;Kent Beck&lt;/a&gt;, the creator of &lt;a href="https://en.wikipedia.org/wiki/Extreme_programming"&gt;XP&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When [Kent] and I were playing with Smalltalk, we found it amazing what Smalltalk would do compared to anything either of us had used before...sometimes the programming was almost effortless, as if Smalltalk had been made to write that program. It was amazing. But other times we'd be programming away, and we'd say, "Now, wait a second, what are we working on here?" We'd just get stuck. And if we were stuck more than a minute, I'd stop and say, "Kent, what's the simplest thing that could possibly work?"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Cunningham explained that approaching software design from the angle of "what's the simplest thing that could possibly work" was a mind hack that reliably got them free time and time again.&lt;/p&gt;

&lt;p&gt;"The simplest thing that could possibly work" soon became adopted as &lt;a href="http://www.agilenutshell.com/simplest_thing"&gt;a general design principle by early Agile practioners&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#simple-is-the-goal"&gt;
  &lt;/a&gt;
  Simple is the goal
&lt;/h2&gt;

&lt;p&gt;It's not clear how simplicity relates to software. Software is complex, especially in 2021. But there's an easy thought experiment that explains why simplicity should be a goal of software design. Imagine that you are designing a mousetrap. The simple mousetrap that we all know and love probably comes to mind immediately. And another popular design is seen in the board game &lt;a href="https://en.wikipedia.org/wiki/Mouse_Trap_%28game%29"&gt;Mouse Trap&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Of course, we all know that the hilarity of Mouse Trap stems from it being a &lt;a href="https://en.wikipedia.org/wiki/Rube_Goldberg_machine"&gt;Rube Goldberg machine&lt;/a&gt;. Instead of being &lt;em&gt;the simplest thing that could possibly work&lt;/em&gt; it is the &lt;em&gt;most convoluted thing that could possibly work.&lt;/em&gt; Half the time, it does not even complete the chain of overcomplicated events that are needed to drop the basket, thereby sparing the player who was unlucky enough to land underneath it.&lt;/p&gt;

&lt;p&gt;An ordinary mousetrap is easily preferable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#simple-is-better"&gt;
  &lt;/a&gt;
  Simple is better
&lt;/h2&gt;

&lt;p&gt;There are many other expressions of "the simplest thing that could possibly work." The US Navy developed the &lt;a href="https://en.wikipedia.org/wiki/KISS_principle"&gt;K.I.S.S. principle&lt;/a&gt; in the mid-20th Century. The idea of "elegance" is often linked to simplicity. Edsger Djikstra also linked reliability to simplicity when he said, "Simplicity is prerequisite for reliability." And Leonardo Da Vinci called simplicity "the ultimate sophistication."&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A designer knows that he has achieved perfection not when there is nothing left to add, but when there is nothing left to take away.&lt;/p&gt;

&lt;p&gt;de Saint-Exupery's Law of Design&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sometimes, &lt;em&gt;complexity&lt;/em&gt; in design literature is discussed instead. This is simply the other side of the coin:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The purpose of software engineering is to control complexity, not to create it.&lt;/p&gt;

&lt;p&gt;Pamela Zave&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Complexity kills. It sucks the life out of developers, it makes products difficult to plan, build and test, it introduces security challenges, and it causes end-user and administrator frustration.&lt;/p&gt;

&lt;p&gt;Ray Ozzie&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And, one of my personal favorites:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fools ignore complexity; pragmatists suffer it; experts avoid it; geniuses remove it.&lt;/p&gt;

&lt;p&gt;Alan Perlis&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#but-simplicity-is-not-easy"&gt;
  &lt;/a&gt;
  But, simplicity is not easy
&lt;/h2&gt;

&lt;p&gt;No one said that simplicity is &lt;em&gt;easy&lt;/em&gt; to achieve, though.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bM-1UzuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3j1uzqipnr9szov5q7v.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bM-1UzuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3j1uzqipnr9szov5q7v.jpeg" alt="The Life of a Software Engineer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dijkstra, as always, has a great thought to leave us with:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Simplicity and elegance are unpopular because they require hard work and discipline to achieve and education to be appreciated.&lt;/p&gt;

&lt;p&gt;Edsger W. Dijkstra&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>programming</category>
      <category>architecture</category>
      <category>learning</category>
    </item>
    <item>
      <title>Five things to know before learning JMeter</title>
      <author>NaveenKumar Namachivayam ‚ö°</author>
      <pubDate>Mon, 20 Sep 2021 16:27:13 +0000</pubDate>
      <link>https://dev.to/qainsights/five-things-to-know-before-learning-jmeter-4o1d</link>
      <guid>https://dev.to/qainsights/five-things-to-know-before-learning-jmeter-4o1d</guid>
      <description>&lt;p&gt;If you are reading this blog post, most probably you are planning or already planned or just getting started with Apache JMeter. Learning any performance testing tool could be challenging. Sometimes the technical documentation looks abstract, and the learning curve could be steep. In this blog post, I am going to list out five things to know before learning JMeter.&lt;/p&gt;

&lt;h2&gt;1. JMeter is not a browser&lt;/h2&gt;

&lt;p&gt;If you consider almost any performance testing tool, it will not execute JavaScript. HTML, CSS, and JavaScript are the essential components for any web page/app. If your application has JavaScript functions embedded in the page, JMeter will not execute that.&lt;/p&gt;

&lt;p&gt;e.g. &lt;a href="https://www.perftractor.xyz/calc.html" rel="noreferrer noopener"&gt;PerfTractor calculator&lt;/a&gt; app built using pure JavaScript on the web page doesn't send any network calls to the backend server.&lt;/p&gt;

&lt;p&gt;On the other hand, Random.org will send the inputs to the backend, then it will display the results.&lt;/p&gt;

&lt;p&gt;Here is the HTTP request for random number generation between 33 and 100: https://www.random.org/integers/?num=1&amp;amp;min=33&amp;amp;max=100&amp;amp;col=1&amp;amp;base=10&amp;amp;format=plain&amp;amp;rnd=new&lt;/p&gt;

&lt;p&gt;If you are not able to record a few actions using JMeter, it could probably be a JavaScript snippet. Hit Developer tools and debug to confirm.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/playlist?list=PLJ9A48W0kpRIjLkZ32Do9yDZXnnm7_uj_"&gt;https://youtube.com/playlist?list=PLJ9A48W0kpRIjLkZ32Do9yDZXnnm7_uj_&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;2. Use CLI mode for testing&lt;/h2&gt;

&lt;p&gt;JMeter has two modes: CLI and Non-CLI. CLI stands for Command Line Interface, alternatively you could call it &lt;em&gt;headless&lt;/em&gt;. CLI mode doesn't have any user interface. But Non-CLI mode has a user interface where you can point-and-click and interact with the JMeter.&lt;/p&gt;

&lt;p&gt;Non-CLI mode should be used for recording, scripting, and smoke testing. This mode utilizes more resources (CPU and memory).&lt;/p&gt;

&lt;p&gt;CLI mode must be used for load testing, stress testing, and other forms of performance testing as well as for CI/CD pipelines. This mode doesn't eat up more resources as there is no user interface to load and render. &lt;/p&gt;

&lt;p&gt;But if you have designed your test plan poorly, pretty soon you may end up in Out of Memory error. &lt;/p&gt;

&lt;p&gt;Listeners, Assertions, and unnecessary elements in your plan are resource hungry. You must optimize the test plan before starting your test.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dP1jhXo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/QAInsights/Testing-Jokes-Memes/master/memes/JMeter-Waiting.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dP1jhXo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/QAInsights/Testing-Jokes-Memes/master/memes/JMeter-Waiting.jpeg" alt="Five things to know before learning JMeter"&gt;&lt;/a&gt;Five things to know before learning JMeter&lt;/p&gt;

&lt;h2&gt;3. Power up using JMeter Plugins&lt;/h2&gt;

&lt;p&gt;The core elements of JMeter help you to build the test plan effectively. But in a few instances, you may need to go beyond the core elements.&lt;/p&gt;

&lt;p&gt;Suppose, if you want to design a custom workload model for stress testing, then you can achieve it using JMeter Plugins.&lt;/p&gt;

&lt;p&gt;There are 100+ plugins are available via Plugin Manager. Choose wisely and install the relevant plugins which are essential for your test plan.&lt;/p&gt;

&lt;p&gt;JMeter Plugins saves time, and expedites the process of designing, execution, debuggin, and result analysis.&lt;/p&gt;

&lt;h2&gt;4. Learn Groovy&lt;/h2&gt;

&lt;p&gt;JMeter core features help us to record, enhance, and execute the test plan. What if you have custom business requirements to accomplish? Well, you could try JMeter plugins or functions. But, what if the plugins or functions do not meet your requirements. Enter JSR223 elements.&lt;/p&gt;

&lt;p&gt;The JSR223 element helps you to write custom requirements in Java, JavaScript, Beansheel, Groovy and more. Out of all the languages, I recommend to implement your custom code using the Groovy language.&lt;/p&gt;

&lt;p&gt;Groovy is easy to learn, simple to write. If you are stuck, search engine is your friend. Using log.info statement, you can debug, or you could use the IntelliJ IDE.&lt;/p&gt;

&lt;p&gt;If you have a Java code, you can easily execute it in Groovy. Better performance than the Beanshell sampler. &lt;/p&gt;

&lt;h2&gt;5. Distribute your load&lt;/h2&gt;

&lt;p&gt;I often get this question: &lt;em&gt;How many JMeter threads I can run on my laptop?&lt;/em&gt; The answer is &lt;em&gt;I don't know&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;It depends on too many variables: Operating System specification, system configuration, Java version, JVM settings, JMeter test plan design, number of requests, and so on.&lt;/p&gt;

&lt;p&gt;Running the test from one machine induces a bottleneck eventually. Meaning, you cannot increase the resources of your system such as memory, CPU, disk, network after reaching the max limits. &lt;/p&gt;

&lt;p&gt;Enter &lt;em&gt;scaling&lt;/em&gt;. If you want to inject more load, you need a 'n' number of smaller instances, or one huge instance. I would go with the smaller instances. Because, there is no limit to scale. &lt;/p&gt;

&lt;p&gt;Even pricing wise, sometimes smaller instances could save you the budget. &lt;/p&gt;

&lt;p&gt;JMeter comes with a remote distributed load testing framework where you can set a master-worker model to run high volume tests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/WSDMLAEksz4"&gt;https://youtu.be/WSDMLAEksz4&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;There could be many things to know before you get started with JMeter. I have listed what I feel is important to know for beginners. If you think, I missed any important note, please add them in the comment.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>performance</category>
      <category>webperf</category>
      <category>tooling</category>
    </item>
    <item>
      <title>5 Awesome Websites to Download Free Vector Illustrations</title>
      <author>Kingsley Ubah</author>
      <pubDate>Mon, 20 Sep 2021 16:15:25 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/5-awesome-websites-to-download-free-vector-illustrations-3c6j</link>
      <guid>https://dev.to/ubahthebuilder/5-awesome-websites-to-download-free-vector-illustrations-3c6j</guid>
      <description>&lt;p&gt;Are you looking for illustrations or vector graphics for your next project? &lt;/p&gt;

&lt;p&gt;Well then, Great!&lt;/p&gt;

&lt;p&gt;I am going to share the five useful websites I go to for free pre-made illustrations. Most of the illustrations are free, while some packs are not.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#undraw"&gt;
  &lt;/a&gt;
  Undraw
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--blJyhlJ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632152197046/1T3AU5rI9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--blJyhlJ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632152197046/1T3AU5rI9.png" alt="undraw homepage"&gt;&lt;/a&gt; - UnDraw&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://undraw.co/illustrations"&gt;Undraw &lt;/a&gt; holds one of the largest collection of vector-based illustrations on the web.&lt;/p&gt;

&lt;p&gt;You can also use the in-built color filter (placed on the top right corner) to match the colour of all all illustrations to your brands color. You can also search for specific illustrations.&lt;/p&gt;

&lt;p&gt;Images can be downloaded either as an svg or png (for blog posts). They are also completely free to download. &lt;/p&gt;

&lt;p&gt;Since they are vector graphics, they can easily be adjusted and scaled.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#drawkit"&gt;
  &lt;/a&gt;
  Drawkit
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qqsftYkH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632152531167/jz_LJKLIZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qqsftYkH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632152531167/jz_LJKLIZ.png" alt="drawkit homepage"&gt;&lt;/a&gt; - Drawkit&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://drawkit.io/"&gt;DrawKit &lt;/a&gt; offers a beautiful collection of vector illustration packs. Some of the packs are free to download but most of them are paid.&lt;/p&gt;

&lt;p&gt;Illustrations can be downloaded in png and svg formats.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#icon8"&gt;
  &lt;/a&gt;
  Icon8
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5kTsbRLj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632152806550/59cqYuG3a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5kTsbRLj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632152806550/59cqYuG3a.png" alt="icon8 homepage"&gt;&lt;/a&gt; - Ouch! by Icon8&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://icons8.com/illustrations"&gt;Icon8 &lt;/a&gt; not only provides us with a huge collection of vector icons, but vector-based illustrations as well (Ouch!).  Illustrations are grouped into categories and we can search for any type of vector illustration using the search bar.&lt;/p&gt;

&lt;p&gt;There are also three plans for downloading icons from icons8. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--naWpT_c8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632152672793/AQv67y8ER.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--naWpT_c8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632152672793/AQv67y8ER.png" alt="download plans"&gt;&lt;/a&gt; - Download plans&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can also edit Icons8 illustrations inside of the mega creator&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yn-oqLjA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632152625664/zHLRFSCaW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yn-oqLjA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632152625664/zHLRFSCaW.png" alt="mega creator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flaticon"&gt;
  &lt;/a&gt;
  Flaticon
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZpgwsQue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632152948171/68fVMGh2E.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZpgwsQue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632152948171/68fVMGh2E.png" alt="Flaticon homepage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.flaticon.com/"&gt;Flaticon &lt;/a&gt; offers a huge collection of small and big vector icons and illustrations. They also allow you to download the png fomat for free and in any size you want. However, to download the icons as an svg file, you will have to become a premium member.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lucaszadam"&gt;
  &lt;/a&gt;
  Lucaszadam
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cPM5svhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632153284092/hzJzzH2y2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cPM5svhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632153284092/hzJzzH2y2.png" alt="lucaszadam.png"&gt;&lt;/a&gt; - Lucas Zadam&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This platform is owned a individual. &lt;a href="https://lukaszadam.com/"&gt;Lucas Zadam&lt;/a&gt; is a web designer and illustrator. This site contains a huge collection of vector based illustrations which is Free for commercial and personal use under the CC0 license (MIT license). No attribution required as well!&lt;/p&gt;

&lt;p&gt;All illustrations will be downloaded as a package from a gumroad page.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it!
&lt;/h3&gt;

&lt;p&gt;Illustrations add meaning and beauty to your web pages. When next you are building a landing page, you can spice up the design by downloading and using some vector illustrations from those sites.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#join-my-fresh-newsletter"&gt;
  &lt;/a&gt;
  JOIN MY FRESH NEWSLETTER
&lt;/h3&gt;

&lt;p&gt;Get empowered as a web developer. Join my newsletter and receive weekly tips on learning web development and monetizing your skills. Subscribe  &lt;a href="https://www.getrevue.co/profile/ubahthebuilder"&gt;here&lt;/a&gt; .&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
