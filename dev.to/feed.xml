<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Technical Interview #3: Is String A Palindrome</title>
      <author>Let's Code</author>
      <pubDate>Fri, 27 Aug 2021 02:33:25 +0000</pubDate>
      <link>https://dev.to/frontendengineer/technical-interview-3-is-string-a-palindrome-2ida</link>
      <guid>https://dev.to/frontendengineer/technical-interview-3-is-string-a-palindrome-2ida</guid>
      <description>&lt;h4&gt;
  &lt;a href="#interview-question-3"&gt;
  &lt;/a&gt;
  Interview Question #3:
&lt;/h4&gt;

&lt;p&gt;Write a function that returns if string a palindrome.ü§î‚ùì&lt;br&gt;
Palindrome happens when a string forms the same word when it is reversed.&lt;/p&gt;

&lt;p&gt;Example: &lt;br&gt;
abba =&amp;gt; true&lt;br&gt;
abcba =&amp;gt; true&lt;br&gt;
123xyz =&amp;gt; false&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you need practice, try to solve this on your own. I have included 2 potential solutions below. &lt;/p&gt;

&lt;p&gt;Note: There are many other potential solutions to this problem.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;
  &lt;a href="#solution-1-array-reverse-and-join-and-methods"&gt;
  &lt;/a&gt;
  Solution #1: Array reverse and join and methods
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#solution-2-array-every"&gt;
  &lt;/a&gt;
  Solution #2: array every
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;every&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;char&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In case you like a video instead of bunch of code üëçüòä&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vTIYUv13XLg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Happy coding and good luck if you are interviewing!&lt;/p&gt;

</description>
      <category>jobinterview</category>
      <category>frontendinterview</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What CSS Versions are You Talking About?</title>
      <author>‚Ç≥GEEK</author>
      <pubDate>Fri, 27 Aug 2021 01:33:22 +0000</pubDate>
      <link>https://dev.to/ageekdev/what-css-versions-are-you-talking-about-4394</link>
      <guid>https://dev.to/ageekdev/what-css-versions-are-you-talking-about-4394</guid>
      <description>&lt;p&gt;There is no official CSS documents for CSS authors &lt;a href="https://ageek.dev/css-evolution"&gt;over the last 3 decades&lt;/a&gt;, the closest things you can find are &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS"&gt;MDN CSS tutorials and references&lt;/a&gt;. There are only &lt;a href="https://www.w3.org/Style/CSS/"&gt;official specifications&lt;/a&gt; for CSS implementers standardized by &lt;a href="http://www.w3.org/"&gt;W3C&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Being able to understand the CSS specifications requires understanding the context, vocabulary, and fundamental concepts that the specifications are built out of. If you want to really understand the specs, good luck with that.&lt;/p&gt;

&lt;p&gt;When your site has a CSS problem which delays upcoming releases, you might have a hard time explaining to your boss about CSS versions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Boss&lt;/strong&gt;: What CSS versions are you talking about?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You&lt;/strong&gt;: CSS3, I guess&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Boss&lt;/strong&gt;: You guess? I heard there is CSS4?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You&lt;/strong&gt;: There is no single, integrated CSS4 specification&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Boss&lt;/strong&gt;: How about modules and snapshots thing?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You&lt;/strong&gt;: It's complicated&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Boss&lt;/strong&gt;: Hit me!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You&lt;/strong&gt;: %^&amp;amp;*()%$##...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CSS features are controlled and developed by &lt;a href="https://www.w3.org/Style/CSS/members"&gt;CSS Working Group&lt;/a&gt;, belongs to the broader organization &lt;a href="http://www.w3.org/"&gt;W3C&lt;/a&gt;, over the years &lt;a href="https://www.w3.org/Style/CSS/current-work"&gt;across multiple specifications&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A specification is not a user manual or user reference guide. The purpose of a spec is to tell developers who will implement the technology what features it must have, and how they are to be implemented.&lt;/p&gt;

&lt;p&gt;CSS does not have versions in the traditional sense; instead it has levels. Each level of CSS builds on the previous, refining definitions and adding features.&lt;/p&gt;

&lt;p&gt;The feature set of each higher level is a superset of any lower level, and the behavior allowed for a given feature in a higher level is a subset of that allowed in the lower levels. A user agent conforming to a higher level of CSS is thus also conformant to all lower levels.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;CSS Level 1 (CSS1)&lt;/strong&gt;: published in 1996 as a &lt;a href="https://www.w3.org/TR/CSS1/"&gt;single document&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CSS Level 2 (CSS2)&lt;/strong&gt;: published in 1998 as a &lt;a href="https://www.w3.org/TR/1998/REC-CSS2-19980512"&gt;single document&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CSS Level 2 Revision 1 (CSS2.1)&lt;/strong&gt;: published in 2011 as a &lt;a href="https://www.w3.org/TR/CSS21/"&gt;single document&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CSS Level 3 (CSS3)&lt;/strong&gt;: a term is used only to differentiate it from the previous monolithic versions. CSS Working Group chose to adopt a modular approach, where each module defines a part of CSS, rather than to define a single monolithic specification. This breaks the specification into more manageable &lt;a href="https://www.w3.org/Style/CSS/current-work"&gt;60+ modules&lt;/a&gt; and allows more immediate, incremental improvement to CSS.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CSS Level 4 (CSS4) and beyond&lt;/strong&gt;: There is no such thing CSS4. Independent modules can reach level 4 or beyond, but CSS the language no longer has levels.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main reason for adopting modular approach is that browser vendors implement CSS features at different speeds. To release a monolithic specification, every component part also has to be finished. It doesn‚Äôt make sense to draw a line at which all work slowed down by a single stubborn feature.&lt;/p&gt;

&lt;p&gt;When a new technology is added to CSS that is not an extension of something in an earlier CSS specification, it is published in a module that includes the indication &lt;strong&gt;Level 1&lt;/strong&gt; (&lt;a href="https://www.w3.org/TR/css-flexbox-1/"&gt;CSS Flexible Box Layout Module Level 1&lt;/a&gt;, &lt;a href="https://www.w3.org/TR/css-grid-1/"&gt;CSS Grid Layout Module Level 1&lt;/a&gt;, etc.)&lt;/p&gt;

&lt;p&gt;Since different CSS modules are at different levels of stability, the CSS Working Group has chosen to publish the &lt;a href="https://www.w3.org/TR/CSS/"&gt;CSS snapshot&lt;/a&gt; document. It includes only modules that the working group considers stable and for which there is enough implementation experience to be sure of that stability.&lt;/p&gt;

&lt;p&gt;Currently CSS versioning is a mess with countless separate modules. CSS authors should embrace feature or module based thinking by using feature queries (&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@supports"&gt;&lt;code&gt;@supports&lt;/code&gt;&lt;/a&gt;) or automatic tools (&lt;a href="https://github.com/browserslist/browserslist"&gt;browserslist&lt;/a&gt;, &lt;a href="https://postcss.org/"&gt;PostCSS&lt;/a&gt;, &lt;a href="https://github.com/postcss/autoprefixer"&gt;autoprefixer&lt;/a&gt;, etc.) to &lt;a href="https://ageek.dev/css-fallback-behavior"&gt;provide fallbacks&lt;/a&gt; or &lt;a href="https://ageek.dev/css-vendor-prefixes"&gt;vendor prefixes&lt;/a&gt; for legacy browsers.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Using the VueJS Composition API to Create Hooks for Supabase Database and Storage</title>
      <author>Aaron K Saunders</author>
      <pubDate>Fri, 27 Aug 2021 00:56:10 +0000</pubDate>
      <link>https://dev.to/aaronksaunders/using-the-vuejs-composition-api-to-create-hooks-for-supabase-database-and-storage-4b14</link>
      <guid>https://dev.to/aaronksaunders/using-the-vuejs-composition-api-to-create-hooks-for-supabase-database-and-storage-4b14</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pDOD0sjVF9E"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Sample application using &lt;a href="https://v3.vuejs.org/api/composition-api.html"&gt;Composition API&lt;/a&gt; to create "hooks" to interact with the &lt;a href="https://supabase.io/"&gt;supabase api&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;This is a work in progress, but wanted to show the approach I used which might inspire some one to go all the way... This isn't using typescript which I think would be a great next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;The main objective here is to get isolated the functionality into specific composition functions and take advantage of the reactivity of vue to expose refs for the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;loading&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;if you look at one of hooks below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useClient&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./sb-hooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * 
 * @param {*} table - table to execute query against
 * @param {*} columns - columns to return
 * @param {*} auto - if true, run query at startup
 * @returns 
 */&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// get supabase client&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * this is the function that does the actual query
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;qData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;qError&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;qData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;qError&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="c1"&gt;// if auto flag is set, run a startup&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;doQuery&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// reactive variables...&lt;/span&gt;
    &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;// function to call to execute query&lt;/span&gt;
    &lt;span class="nx"&gt;doQuery&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;here is how you might use it in your component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../hooks/sb-hooks-select&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;HomePage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
      &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="nx"&gt;doQuery&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;products&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and you template would look like this, utilizing the reactive properties from the hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"loading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;LOADING...&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-else-if=&lt;/span&gt;&lt;span class="s"&gt;"error"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"error-panel"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ error }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-else-if=&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in data"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item.id"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;router-link&lt;/span&gt; &lt;span class="na"&gt;:to=&lt;/span&gt;&lt;span class="s"&gt;"`/detail/$&lt;/span&gt;{item.id}`"&amp;gt;
      &lt;span class="nt"&gt;&amp;lt;item-component&lt;/span&gt; &lt;span class="na"&gt;:item=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/router-link&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#more"&gt;
  &lt;/a&gt;
  More
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Tons more content on my Youtube Channel &lt;a href="https://www.youtube.com/channel/UCMCcqbJpyL3LAv3PJeYz2bg"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Udemy Courses &lt;a href="https://www.udemy.com/user/aaronsaunders/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GumRoad Content &lt;a href="https://fiwic.gumroad.com/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vue</category>
      <category>postgres</category>
      <category>supabase</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Antenatal for ng new - The mother of all angular applications both dead and alive</title>
      <author>Valentine Awe</author>
      <pubDate>Fri, 27 Aug 2021 00:23:09 +0000</pubDate>
      <link>https://dev.to/valoni01/antenatal-for-ng-new-the-mother-of-all-angular-applications-both-dead-and-alive-5dlb</link>
      <guid>https://dev.to/valoni01/antenatal-for-ng-new-the-mother-of-all-angular-applications-both-dead-and-alive-5dlb</guid>
      <description>&lt;p&gt;Before we start, I would like to state that the concepts in this article are not restricted to the Angular framework alone, but can be applied to other frontend frameworks and libraries like Vue and React. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-antenatal"&gt;
  &lt;/a&gt;
  Why antenatal?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iDZyFFHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gixo3cyr4mfzr0bibhbm.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iDZyFFHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gixo3cyr4mfzr0bibhbm.jpeg" alt="surprise emoji"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Antenatal in the human world relates to the medical care of women when they are expecting a baby. In our case, &lt;code&gt;ng new&lt;/code&gt; is the mother while our yet be created application is the baby. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ng-new-the-mother-of-all-angular-applications-dead-and-alive"&gt;
  &lt;/a&gt;
  ng new : The mother of all angular applications dead and alive.
&lt;/h3&gt;

&lt;p&gt;Why this phrase? this is simply because almost all angular applications started with our glorious command &lt;code&gt;ng new&lt;/code&gt;. &lt;code&gt;ng new&lt;/code&gt; has birthed thousands of applications both the ones currently in development, the ones in production, the ones they have stopped using and the ones that never made it to production.&lt;/p&gt;

&lt;p&gt;The whole idea of antenatal is to ensure that complications are avoided during the pregnancy and delivery process. This directly applies to what you need to do before birthing a new application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The antenatal care for the &lt;code&gt;ng new&lt;/code&gt; refers to the requirement gathering, research processes, documentation and all that you need to do before you start or create your frontend application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#why-should-you-care"&gt;
  &lt;/a&gt;
  Why Should you Care?
&lt;/h3&gt;

&lt;p&gt;Below are some of the reasons why you would need to do the initial research and documentation of your frontend application before spinning up the project. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;planning the architecture of your application&lt;/li&gt;
&lt;li&gt;Decision on the numbers of resources needed&lt;/li&gt;
&lt;li&gt;Estimating and managing development time&lt;/li&gt;
&lt;li&gt;Easy maintainability and hand over&lt;/li&gt;
&lt;li&gt;Reduce back and forth with product owners and clients&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, whether you are in the consulting space or you work for a specific company, doing this antenatal across all your products makes your development process extra smooth and seamless.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#consulting"&gt;
  &lt;/a&gt;
  Consulting
&lt;/h3&gt;

&lt;p&gt;If you fall under this category, there is a chance that you are going to be involved in different types of projects with unique use cases. And it is important to ask the right questions and document all the specific requirements before you start your application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#companyspecific"&gt;
  &lt;/a&gt;
  Company-Specific
&lt;/h3&gt;

&lt;p&gt;If you fall under this category, You may have to do this process once in a while because there may be less frequent changes in your application development processes and policies. But it is also very important to have all these  documented so that new employees or consultants can use them as a reference.&lt;/p&gt;

&lt;p&gt;I have listed below with explanations and examples, some of the research and documentation (antenatal) you need to do before starting a new application. &lt;/p&gt;

&lt;p&gt;It is important to know that this is not a cast in stone. while all the below points are important, you can go ahead and pick the ones that suit your need or you can also add more. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Application overview&lt;/li&gt;
&lt;li&gt;Application features &lt;/li&gt;
&lt;li&gt;CSS framework&lt;/li&gt;
&lt;li&gt;External libraries&lt;/li&gt;
&lt;li&gt;Device support&lt;/li&gt;
&lt;li&gt;SEO&lt;/li&gt;
&lt;li&gt;Analytics tool&lt;/li&gt;
&lt;li&gt;Software management methodology&lt;/li&gt;
&lt;li&gt;Internationalisation and Localisation &lt;/li&gt;
&lt;li&gt;   Testing&lt;/li&gt;
&lt;li&gt;   Deployment (Staging and Deployment)&lt;/li&gt;
&lt;li&gt;   Communication &lt;/li&gt;
&lt;li&gt;   Documentation&lt;/li&gt;
&lt;li&gt;   Storage&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#1-application-overview"&gt;
  &lt;/a&gt;
  1.    Application Overview
&lt;/h3&gt;

&lt;p&gt;This is a detailed explanation of what the product entails  and it should be simple and very easy to understand by anyone who cares to look at the document.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-application-features"&gt;
  &lt;/a&gt;
  2.    Application features
&lt;/h3&gt;

&lt;p&gt;These are the key feature modules in your application. You can derive them from the functional requirement document. Eg. Transaction Management, User, Dashboard, etc. You can further divide this into features module and shared modules. This could help in making decisions around the structure of your application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-css-framework"&gt;
  &lt;/a&gt;
  3.    CSS Framework
&lt;/h3&gt;

&lt;p&gt;The choice of the CSS framework is one of those things that varies across different products especially when you are working in the freelance or consulting space where each client can have their own preference. Examples include bootstrap, angular material, etc. You can also specify the CSS methodology and the CSS preprocessor.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-external-libraries"&gt;
  &lt;/a&gt;
  4.    External Libraries
&lt;/h3&gt;

&lt;p&gt;These are external libraries apart from the CSS framework. they could range from your charting library, date/time and other critical libraries for company-specific or individual applications. It is important to always keep track of this and it is more useful for people with near static documentation. your consultants or staff will always know the appropriate permissible library to use when starting new projects or adding a new feature that requires an external library.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-device-support"&gt;
  &lt;/a&gt;
  5.    Device support
&lt;/h3&gt;

&lt;p&gt;While it is important to make your application mobile responsive at any point in time. It is also worthy to document the target browsers, resolution information and whether the application has mobile-specific features or views.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-seo"&gt;
  &lt;/a&gt;
  6.    SEO
&lt;/h3&gt;

&lt;p&gt;Here, you will specify how you want to improve the SEO of your application. You can specify the  strategies. Examples includes server side rendering, dynamic rendering or pre-rendering using tools like &lt;a href="https://scully.io/"&gt;scully&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-analytics-tools-and-monitoring"&gt;
  &lt;/a&gt;
  7.    Analytics tools And Monitoring
&lt;/h3&gt;

&lt;p&gt;You can further categorize this into different types of environments eg. for local Performance analysis, you can specify tools like the source map explorer. For production monitoring, you can use &lt;a href="https://sentry.io/welcome/"&gt;Sentry&lt;/a&gt; and &lt;a href="https://www.pingdom.com/"&gt;Pingdom&lt;/a&gt; &lt;br&gt;
for traffic, you can use mixpanel, fb, google etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-software-management-methodology"&gt;
  &lt;/a&gt;
  8.    Software management methodology
&lt;/h3&gt;

&lt;p&gt;Specify the details of the software management methodology. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-internationalization-and-localization"&gt;
  &lt;/a&gt;
  9.    Internationalization and Localization
&lt;/h3&gt;

&lt;p&gt;You need to specify whether there is a need for  internationalization, specify the locals you want to support and the translation tools you are going to use. This is very important as it is easier to implement this during application development. You also need to decide the localization strategy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-testing"&gt;
  &lt;/a&gt;
  10.    Testing
&lt;/h3&gt;

&lt;p&gt;You can specify everything about the application testing&lt;br&gt;
eg. The type of testing, test runner (Karma,Cypress), the testing framework (Jasmine,Jest), mocking libraries(Testdouble.js, Jasmine). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-deployment"&gt;
  &lt;/a&gt;
  11.    Deployment
&lt;/h3&gt;

&lt;p&gt;You can define the various deployment strategies and environment. Eg. Whether you will be containerizing your application with tools like Docker, the numbers of environments, server details, type of repositories, AOT or JIT etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-communication"&gt;
  &lt;/a&gt;
  12.    Communication;
&lt;/h3&gt;

&lt;p&gt;This includes things like encryption method, message format. Etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-storage"&gt;
  &lt;/a&gt;
  13.    Storage
&lt;/h3&gt;

&lt;p&gt;This includes general storage information ranging from application local and global storage eg. NGRX, Ankita, Rxjs,NGRX component store, ngrx-slice, session, local, cookies etc. Also, you can include your assets storage.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14-documentation"&gt;
  &lt;/a&gt;
  14. Documentation
&lt;/h3&gt;

&lt;p&gt;This is the actual documentation for you angular application. eg. For components libraries documentation you can specify &lt;a href="https://storybook.js.org/"&gt;Story book&lt;/a&gt; and also &lt;a href="https://compodoc.app/index.html"&gt;compodoc&lt;/a&gt; for the angular application documentation &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;I have outlined what I think are the most critical research or document to put in place before you start any new frontend application. I will gladly love to hear your opinion.&lt;/p&gt;

&lt;p&gt;Here is a repo that shows a possible structure of your document&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/valoni01/fe-documentation-guide/blob/main/README.md"&gt;Frontend Documentation Guide&lt;/a&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>react</category>
      <category>vue</category>
      <category>architecture</category>
    </item>
    <item>
      <title>`Proxy` all of the things! Part 1: Counters</title>
      <author>lionel-rowe</author>
      <pubDate>Thu, 26 Aug 2021 23:54:46 +0000</pubDate>
      <link>https://dev.to/lionelrowe/proxy-all-of-the-things-part-1-counters-4l92</link>
      <guid>https://dev.to/lionelrowe/proxy-all-of-the-things-part-1-counters-4l92</guid>
      <description>&lt;p&gt;To celebrate the &lt;a href="https://observer.com/2021/05/internet-explorer-is-officially-dead/"&gt;long-overdue death of Internet Explorer&lt;/a&gt;, I'm writing a series of articles on a massively useful and underused API that's &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#browser_compatibility"&gt;available in every other mainstream JavaScript environment&lt;/a&gt;: &lt;code&gt;Proxy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With a &lt;code&gt;Proxy&lt;/code&gt;, you can "intercept and redefine fundamental operations" for an object, such as getters and setters.&lt;/p&gt;

&lt;p&gt;Let's start with a simple example: &lt;strong&gt;counters with a default value&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let's say you're implementing a simple algorithm to count the number of occurrences of each word in a text. In a language like Ruby, you could do that easily like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;word_counts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;counters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\W+/&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;counters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;counters&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;wc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;word_counts&lt;/span&gt; &lt;span class="s1"&gt;'a a a b b c'&lt;/span&gt; &lt;span class="c1"&gt;# {"a" =&amp;gt; 3, "b" =&amp;gt; 2, "c" =&amp;gt; 1}&lt;/span&gt;
&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# 3&lt;/span&gt;
&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'d'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That &lt;code&gt;Hash.new(0)&lt;/code&gt; is really neat: it gives us key-value pairs with a default value of &lt;code&gt;0&lt;/code&gt; that we can increment from.&lt;/p&gt;

&lt;p&gt;JavaScript objects, on the other hand, &lt;em&gt;can't&lt;/em&gt; be given a default value. Passing a parameter to an &lt;code&gt;Object&lt;/code&gt; constructor instead converts that value itself into an object: &lt;code&gt;new Object(0)&lt;/code&gt; returns &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/Number"&gt;&lt;code&gt;Number {0}&lt;/code&gt;&lt;/a&gt;, which isn't what we want at all.&lt;/p&gt;

&lt;p&gt;However, we can easily mimic Ruby's &lt;code&gt;Hash.new&lt;/code&gt; behavior with a proxy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * @template T
 * @param {T} defaultVal
 * @returns {Record&amp;lt;string, T&amp;gt;}
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hashWithDefault&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;defaultVal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="nx"&gt;defaultVal&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;target&lt;/code&gt; parameter passed to the getter is the proxied object itself ‚Äî the first argument passed to the &lt;code&gt;Proxy&lt;/code&gt; constructor. As we didn't override &lt;code&gt;set&lt;/code&gt;, setting simply works as normal ‚Äî the property is set on that same &lt;code&gt;target&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Our JavaScript &lt;code&gt;hashWithDefault(0)&lt;/code&gt; now works very similarly to Ruby's &lt;code&gt;Hash.new(0)&lt;/code&gt;. We can now easily and ergonomically write our word count function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/** @param {string} text */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wordCounts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;counters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hashWithDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\W&lt;/span&gt;&lt;span class="sr"&gt;+/&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;counters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;counters&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wordCounts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a a a b b c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Proxy¬†{a: 3, b: 2, c: 1}&lt;/span&gt;
&lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cool, no? In a future installment, we'll look at using &lt;code&gt;Proxy&lt;/code&gt; with a setter function as well.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Game Programming Fundamentals</title>
      <author>Otmane Riad</author>
      <pubDate>Thu, 26 Aug 2021 23:11:36 +0000</pubDate>
      <link>https://dev.to/nexteventideas/game-programming-fundamentals-4nn4</link>
      <guid>https://dev.to/nexteventideas/game-programming-fundamentals-4nn4</guid>
      <description>&lt;p&gt;If you are looking for an answer to the question of ‚ÄúHow to Develop a Game‚Äù , you have come to the right place. First of all, we are not going to talk about the need to learn a programming language or game engines to program video games, because developing a game is about much more than just coding and game engines. In fact, the game industry is a field that includes many different industries, including mathematics, art, psychology, and even cinema. In other words, it is never enough to just master game engines and learn a programming language. So what, exactly. do we need to know?&lt;/p&gt;

&lt;p&gt;This beginner‚Äôs guide to video game development will cover everything you need to know to get started creating your own gaming software and apps.&lt;/p&gt;

&lt;p&gt;Video Game Mechanics Explained&lt;br&gt;
One of the biggest reasons why games reach huge audiences today has to do with game mechanics. In order to better understand what game mechanics are, we have to think of a game system. Imagine there are various sub-parts that this system controls. To picture this better, you can examine the diagram below:&lt;/p&gt;

&lt;p&gt;Read More: &lt;a href="https://hitechnoloy.ca/game-programming-fundamentals/"&gt;https://hitechnoloy.ca/game-programming-fundamentals/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>programming</category>
      <category>java</category>
      <category>unity3d</category>
    </item>
    <item>
      <title>Tart up your terminal!</title>
      <author>skino</author>
      <pubDate>Thu, 26 Aug 2021 22:51:25 +0000</pubDate>
      <link>https://dev.to/skino2020/tart-up-your-terminal-16n7</link>
      <guid>https://dev.to/skino2020/tart-up-your-terminal-16n7</guid>
      <description>&lt;p&gt;In the last few blog entries i have about Ubuntu a lot. from building a dev environment from scratch all the way through to how it feels still using it a week on. As i'm getting more and more familiar with Linux again after so many years away from it i want to make my terminal look a little better :)&lt;/p&gt;

&lt;p&gt;Now there is a lot of people who will say this is a waste of time and blah blah blah but its something i like doing, with the PHP and Laravel stuff i do i have a terminal window open pretty much all the time (so i don't need to open the IDE one) so making my terminal look nicer is just a personal preference.&lt;/p&gt;

&lt;p&gt;Check out the full post: &lt;a href="https://raspada-blog.co.uk/blog/tart-up-that-terminal"&gt;Tart up that terminal&lt;/a&gt;&lt;/p&gt;

</description>
      <category>terminal</category>
      <category>linux</category>
      <category>macos</category>
    </item>
    <item>
      <title>How to build a Modal</title>
      <author>Jay Cruz</author>
      <pubDate>Thu, 26 Aug 2021 22:30:43 +0000</pubDate>
      <link>https://dev.to/coderjay06/how-to-build-a-modal-55kh</link>
      <guid>https://dev.to/coderjay06/how-to-build-a-modal-55kh</guid>
      <description>&lt;p&gt;&lt;em&gt;A brief tutorial on how to build a modal using Javascript, HTML, and CSS.&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-a-modal"&gt;
  &lt;/a&gt;
  What‚Äôs a modal?
&lt;/h2&gt;

&lt;p&gt;Modals are pop-up windows or dialog boxes that display some sort of content above everything else on a web page. They usually are triggered by an event such as clicking on a button. They can also pop up automatically (which can be very annoying at times!). We‚Äôve all probably come across one at some point while browsing the web. Many times they will display some content asking you for your email or to sign up for some sort of promotional offer. Well, today we won't be signing up for anything, we‚Äôll be building one ourselves!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-a-modal"&gt;
  &lt;/a&gt;
  Building a Modal
&lt;/h2&gt;

&lt;p&gt;To build our modal we‚Äôll be using plain ol‚Äô Javascript, HTML, and, CSS. To start off we‚Äôre going to set up our HTML template. We‚Äôll need several parts to make up our modal. An outer div element that we‚Äôll label with the id overlay. This will be the window our modal box will sit on top of. The modal will contain all of the main content we want to be displayed once the modal opens, including a close button to hide the modal. We also need a button to actually trigger the modal to be opened. Lastly, we‚Äôll link our CSS and Javascript files.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
Now we can add some styling to make our modal more visually appealing by styling our buttons and the actual modal itself.&lt;br&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
Let‚Äôs see what our closed modal is looking like so far.

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JmNYlHsi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A9fRQuVRZ_h4Fy4X98_4Cng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JmNYlHsi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A9fRQuVRZ_h4Fy4X98_4Cng.png" alt="Green Contact Me button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looks great! Now we just have to hook it up using Javascript. We‚Äôll need to listen for click events for when a user clicks the &lt;em&gt;Contact Me&lt;/em&gt; button and when they close the modal.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
This sets up the functionality for opening and closing our modal. Now when a user clicks on the &lt;em&gt;Contact Me&lt;/em&gt; button our user will see the modal with all the contact details displayed.

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2-rCtWk2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A82mGQ5n1i7WHyiT-cNri9Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2-rCtWk2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A82mGQ5n1i7WHyiT-cNri9Q.png" alt="Modal with contact details"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Modals are meant to capture a user‚Äôs attention. When modals are triggered everything else on the page becomes temporarily deactivated. This creates an immediate focus on the information the modal is presenting. Sometimes this can enhance the user experience, other times it can do the exact opposite. It all depends on the use case and whether or not the modal presents useful content that‚Äôs relevant to the user.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-more-about-modals"&gt;
  &lt;/a&gt;
  Learn more about Modals
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Modal_window"&gt;Modal window (Wikipedia)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.w3schools.com/howto/howto_css_modals.asp"&gt;How to create a Modal Box (W3 Schools)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Recursive Function: What Exactly Is Recursion?</title>
      <author>Oluwatobi Sofela</author>
      <pubDate>Thu, 26 Aug 2021 22:29:35 +0000</pubDate>
      <link>https://dev.to/oluwatobiss/recursive-function-what-exactly-is-recursion-ph6</link>
      <guid>https://dev.to/oluwatobiss/recursive-function-what-exactly-is-recursion-ph6</guid>
      <description>&lt;p&gt;&lt;strong&gt;Recursion&lt;/strong&gt; is a method by which a problem gets solved through iteration.&lt;/p&gt;

&lt;p&gt;In other words, a recursive function is a function that repetitively invokes itself infinitely (or until something stops it).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#important-stuff-to-know-about-recursive-function"&gt;
  &lt;/a&gt;
  Important stuff to know about recursive function
&lt;/h2&gt;

&lt;p&gt;Keep these two essential pieces of info in mind whenever you choose to use recursive functions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#info-1-recursion-is-not-an-iife"&gt;
  &lt;/a&gt;
  Info 1: Recursion is not an IIFE
&lt;/h3&gt;

&lt;p&gt;A recursive function is different from an &lt;em&gt;Immediately Invoking function Expression&lt;/em&gt; (IIFE).&lt;/p&gt;

&lt;p&gt;An IIFE automatically invokes itself once.&lt;/p&gt;

&lt;p&gt;However, a recursive function automatically invokes itself repeatedly for an unlimited amount of time or until something stops its re-invocation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#info-2-a-recursive-function-needs-a-base-case"&gt;
  &lt;/a&gt;
  Info 2: A recursive function needs a base case
&lt;/h3&gt;

&lt;p&gt;The code written to discontinue the re-invocation of a recursive function is called a base case.&lt;/p&gt;

&lt;p&gt;It is always important to define a base case when creating a recursive function ‚Äî so that the function will not run endlessly, thereby crashing the browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-of-a-recursive-function"&gt;
  &lt;/a&gt;
  Example of a recursive function
&lt;/h2&gt;

&lt;p&gt;Below is a &lt;a href="https://www.codesweetly.com/html-css-javascript"&gt;JavaScript&lt;/a&gt; code that returns a &lt;a href="https://en.wikipedia.org/wiki/Concatenation"&gt;concatenation&lt;/a&gt; of all the values returned through the &lt;code&gt;countDown()&lt;/code&gt; function‚Äôs recursive invocation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a recursive function:&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;// Define the base case of this recursive function:&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Recursion Stopped!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="c1"&gt;// Define the recursive case:&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Invoke the countDown() recursive function:&lt;/span&gt;
&lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// The invocation above will return:&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2, 1, 0, Recursion Stopped!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the recursive algorithm above, the &lt;code&gt;countDown(num - 1)&lt;/code&gt; code makes the whole function a recursion because it is the &lt;a href="https://www.codesweetly.com/document-vs-data-vs-code#h-what-is-a-code"&gt;code&lt;/a&gt; that makes &lt;code&gt;countDown()&lt;/code&gt; recall itself repeatedly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#a-look-at-the-events-behind-the-scenes"&gt;
  &lt;/a&gt;
  A look at the events behind the scenes
&lt;/h2&gt;

&lt;p&gt;When we invoked the &lt;code&gt;countDown&lt;/code&gt; function and passed in the value &lt;code&gt;2&lt;/code&gt; (that is, &lt;code&gt;countDown(2)&lt;/code&gt;), the algorithm started running as follows:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-check-if-raw-2-endraw-is-less-than-raw-0-endraw-"&gt;
  &lt;/a&gt;
  Step 1: Check if &lt;code&gt;2&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The computer checked if the value &lt;code&gt;2&lt;/code&gt; ‚Äî that we passed to the &lt;code&gt;num&lt;/code&gt; parameter of the &lt;code&gt;countDown&lt;/code&gt; function ‚Äî is less than &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;2&lt;/code&gt; is not less than &lt;code&gt;0&lt;/code&gt;, the computer didn‚Äôt execute the &lt;code&gt;if&lt;/code&gt; statement‚Äôs code. Instead, it skipped to the next code after the &lt;code&gt;if&lt;/code&gt; statement ‚Äî which is the recursion code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-execute-the-return-statement"&gt;
  &lt;/a&gt;
  Step 2: Execute the return statement
&lt;/h3&gt;

&lt;p&gt;After skipping the &lt;code&gt;if&lt;/code&gt; statement, the computer executed the &lt;code&gt;return num + " " + countDown(num - 1)&lt;/code&gt; code ‚Äî but substituted the &lt;code&gt;num&lt;/code&gt; parameter with the parameter‚Äôs value (that is, &lt;code&gt;2&lt;/code&gt;) like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-3-execute-only-the-recursive-statement"&gt;
  &lt;/a&gt;
  Step 3: Execute only the recursive statement
&lt;/h3&gt;

&lt;p&gt;In step 2‚Äôs code above, notice that the &lt;code&gt;return&lt;/code&gt; command can‚Äôt return any value because the &lt;code&gt;return&lt;/code&gt; statement includes a recursive code (&lt;code&gt;countDown(1)&lt;/code&gt;) recalling the &lt;code&gt;countDown&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Therefore, while retaining the other parts of the &lt;code&gt;return&lt;/code&gt; statement (that is, &lt;code&gt;2 + ", " +&lt;/code&gt;), the computer will execute only the recursion code (&lt;code&gt;countDown(1)&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;In other words, the &lt;code&gt;countDown(1)&lt;/code&gt; code will automatically invoke the &lt;code&gt;countDown&lt;/code&gt; function while passing in the value &lt;code&gt;1&lt;/code&gt;. Then, the algorithm will start running again by checking if &lt;code&gt;1&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;1&lt;/code&gt; is not less than &lt;code&gt;0&lt;/code&gt;, the computer skipped to the recursion code like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-4-invoke-only-the-recursion-code"&gt;
  &lt;/a&gt;
  Step 4: Invoke only the recursion code
&lt;/h3&gt;

&lt;p&gt;Again, notice that the &lt;code&gt;return&lt;/code&gt; command (in step 3) cannot return any value because the &lt;code&gt;return&lt;/code&gt; statement includes a recursion code (&lt;code&gt;countDown(0)&lt;/code&gt;) that recalls the &lt;code&gt;countDown&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Therefore, while retaining the other parts of the &lt;code&gt;return&lt;/code&gt; statement (that is, &lt;code&gt;2 + ", " + 1 + ", " +&lt;/code&gt;), the computer will execute only the recursion code (&lt;code&gt;countDown(0)&lt;/code&gt;). So, the &lt;code&gt;countDown(0)&lt;/code&gt; code will automatically invoke the &lt;code&gt;countDown&lt;/code&gt; function while passing in the value &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, the function will start running again by checking if &lt;code&gt;0&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;0&lt;/code&gt; is not less than &lt;code&gt;0&lt;/code&gt;, the computer skipped to the recursion code like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-5-execute-only-the-recursion-code"&gt;
  &lt;/a&gt;
  Step 5: Execute only the recursion code
&lt;/h3&gt;

&lt;p&gt;Yet again, the &lt;code&gt;return&lt;/code&gt; command (in step 4) can‚Äôt return any value because the &lt;code&gt;return&lt;/code&gt; statement includes a recursion code (&lt;code&gt;countDown(-1)&lt;/code&gt;) recalling the &lt;code&gt;countDown&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Therefore, while retaining the other parts of the &lt;code&gt;return&lt;/code&gt; statement (that is, &lt;code&gt;2 + ", " + 1 + ", " + 0 + ", " +&lt;/code&gt;), the computer will execute only the recursion code (&lt;code&gt;countDown(-1)&lt;/code&gt;). So, the &lt;code&gt;countDown(-1)&lt;/code&gt; code will automatically invoke the &lt;code&gt;countDown&lt;/code&gt; function while passing in the value &lt;code&gt;-1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, the function will start running again by checking if &lt;code&gt;-1&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;At this point, &lt;code&gt;-1&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;. Therefore, the computer will execute the code of the &lt;code&gt;if&lt;/code&gt; statement by returning the value &lt;code&gt;‚ÄúRecursion Stopped!‚Äù&lt;/code&gt; like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Recursion Stopped!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At last, the &lt;code&gt;return&lt;/code&gt; statement now has values it can validly concatenate and return. Therefore, the returned value from &lt;code&gt;countDown&lt;/code&gt; will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2, 1, 0, Recursion Stopped!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#wrapping-it-up"&gt;
  &lt;/a&gt;
  Wrapping it up
&lt;/h2&gt;

&lt;p&gt;In this article, we learned that a recursive function is a function that repeatedly recalls itself until something stops the recall.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>functional</category>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Networking as a WebDev with Polywork</title>
      <author>LUKEÁü•„Çã</author>
      <pubDate>Thu, 26 Aug 2021 22:00:56 +0000</pubDate>
      <link>https://dev.to/lukeshiru/networking-as-a-webdev-with-polywork-3402</link>
      <guid>https://dev.to/lukeshiru/networking-as-a-webdev-with-polywork-3402</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Let me be upfront and maybe save you some time: &lt;strong&gt;I'll be absolutely honest about what I think&lt;/strong&gt;, but for the sake of transparency &lt;strong&gt;this post is sponsored by &lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt;. That being said...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#networking-usually-sucks"&gt;
  &lt;/a&gt;
  Networking usually sucks
&lt;/h2&gt;

&lt;p&gt;Internet is full of different social platforms, but every time we talk about professional networking, generally there is only a bunch that come to mind. Said platforms have been the "de facto" for networking, talent hunting/hiring, and so on for a long time. The thing is, we all know they have a bunch of issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The UI is extremely dated.&lt;/li&gt;
&lt;li&gt;The interaction with other users is always awkward.&lt;/li&gt;
&lt;li&gt;We get a bunch of unwanted messages and invitations.&lt;/li&gt;
&lt;li&gt;Sharing stuff in those networks feels fruitless, and generally, the things shared by other users are just looking for engagement (pointless polls, inspirational quotes, and so on).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The list goes on, but the main issue with them is that &lt;strong&gt;none of them actually work for networking&lt;/strong&gt;. When you want to meet people professionally, you only care about stuff like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;What do they do?&lt;/strong&gt; And generally the response is not only one thing.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Are they open to collaborating?&lt;/strong&gt; Some folks might be open for some activities, but not for others.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Do they share some passions with you?&lt;/strong&gt; Is great to be able to talk with your anime lover co-workers about the last episode of a show, or about mechanical keyboard customizations, or cats, or memes!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#networking-can-be-better"&gt;
  &lt;/a&gt;
  Networking can be better
&lt;/h2&gt;

&lt;p&gt;The solution so far was to create a custom website/portfolio to show up this kind of thing, and share the link everywhere so folks can find you. Luckily, we have a new player in town and is called &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt;. First and foremost, as you might imagine, &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt; allows us to do networking answering the questions mentioned in the previous section:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-you-do"&gt;
  &lt;/a&gt;
  What do you do?
&lt;/h3&gt;

&lt;p&gt;You can create "highlights" about what you do, not only your professional updates like job position changes but actual highlights like a YouTube video you created, a Twitch stream you did, a blog post you wrote, a talk you gave, and so on. In your highlights, you can use tags to identify the activity and add participants if you did that activity with others.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iTqCrXIT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/im9pb4a06icofch5z8ys.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iTqCrXIT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/im9pb4a06icofch5z8ys.gif" alt="Highlights"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#are-you-open-to-collaborating"&gt;
  &lt;/a&gt;
  Are you open to collaborating?
&lt;/h3&gt;

&lt;p&gt;You can specify what are the things you're open to do with others: Beta testing, open-source contributions, live streaming, mentoring... even resume feedback! You get your own "personal bot" who will deal with the folks wanting to collaborate with you and will take your preferences as a base for that dialog.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MIWn9gnv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u30vydir3u21044lxgmo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MIWn9gnv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u30vydir3u21044lxgmo.gif" alt="Opportunity preferences"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-your-passions"&gt;
  &lt;/a&gt;
  What are your passions?
&lt;/h3&gt;

&lt;p&gt;In your profile customization, you can add tags to yourself, so you can find likeminded professionals: Software developers, designers, cat dad/mom, streamers, dark mode enthusiasts, anime fans, gamers, animal rights defenders, star wars fans, dancers, introverts, and so on!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fEZzYSf6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4w9mn54jm96vngpcgofm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fEZzYSf6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4w9mn54jm96vngpcgofm.png" alt="Profile tags screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-not-only-networking"&gt;
  &lt;/a&gt;
  Is not only networking
&lt;/h2&gt;

&lt;p&gt;Besides the fact that it is an amazing networking experience, the UI is beautiful and simple (it has dark mode ‚ù§Ô∏è)...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vuK_M9XE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3baon1lx99kyqbu5pxm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vuK_M9XE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3baon1lx99kyqbu5pxm.png" alt="Profile screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It has DNS support so you can have your profile in your domain (mine is &lt;a href="//polywork.lukeshiru.me"&gt;polywork.lukeshiru.me&lt;/a&gt;), it has amazing features for finding and sharing new work opportunities such as the "Space Station", which allows you to search based on tags, collaboration openness and so on...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dWls2Bmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wue8cjuk86ws47am6efe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dWls2Bmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wue8cjuk86ws47am6efe.png" alt="Space station screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;... and the Multiverse, just to see what everyone is doing...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kWtNHQ7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5gmr2jhyob9wjxq6ylu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kWtNHQ7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5gmr2jhyob9wjxq6ylu.png" alt="Multiverse screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-use-polywork"&gt;
  &lt;/a&gt;
  How do I use Polywork
&lt;/h2&gt;

&lt;p&gt;Besides doing web development professionally, I also have open-source projects, a stream in Spanish called &lt;a href="https://hablemos.dev"&gt;hablemos.dev&lt;/a&gt;, and previously had a stream called "&lt;a href="https://lshi.ru/uwsyt"&gt;Untitled WebDev Stream&lt;/a&gt;", all my streams are on &lt;a href="https://lshi.ru/yt"&gt;my YouTube&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Instead of spamming in places like DEV creating posts every time I upload a new video to YouTube, or when I create a new open source project, I just create &lt;strong&gt;highlights&lt;/strong&gt; in &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt; about those &lt;a href="https://polywork.lukeshiru.me/lukeshiru/highlights/da5614db-5f0c-4e40-9e19-c8c8026fbd55"&gt;videos&lt;/a&gt;, &lt;a href="https://polywork.lukeshiru.me/lukeshiru/highlights/f5b7c2d7-20dd-4df0-81f5-4492e227ff2b"&gt;repos&lt;/a&gt;, and even &lt;a href="https://poly.work/lukeshiru/highlights/5d0d097a-45b7-41a4-8ea4-4f63fc55d756"&gt;my posts&lt;/a&gt; here in DEV. Because &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt; is designed to self-promote and answer the question "What do you do?", people actually expect to see that in your profile. In there I don't feel I'm being annoying if I spam the things I do, and the best thing is that it's even encouraged because your profile will be even better with highlights on it.&lt;/p&gt;

&lt;p&gt;Because of this, I added &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt; to my &lt;a href="https://lshi.ru"&gt;personal site&lt;/a&gt; a &lt;a href="https://twitter.com/lukeshiru/status/1417174170845126660"&gt;few weeks back&lt;/a&gt;, and I might get rid of &lt;a href="https://lshi.ru/lin"&gt;other links&lt;/a&gt; in there in the near future üòà&lt;/p&gt;

&lt;p&gt;Now, every time I create something new (a stream, a package, an app, and so on) I just update my &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt; profile by adding a new highlight. In the near future I plan to use this great platform to find folks willing to work with me in some personal projects of mine, or to collaborate in live streams about WebDev üòÑ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;When the folks at &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt; asked me if I was interested in writing an article about my experience using the platform, I was on board pretty much instantly mainly because I love the work they have done and I honestly believe that's how you do networking on the web. If you want to take a look I have a bunch of &lt;a href="https://www.polywork.com/invite/lukeshiruvip"&gt;VIP invites left&lt;/a&gt; so you can skip the line.&lt;/p&gt;

&lt;p&gt;Go and give it a try, and if you did already, leave a comment with your opinion about it so folks have more to read about it.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>webdev</category>
      <category>promotion</category>
    </item>
    <item>
      <title>React-toastify v8 is live</title>
      <author>Fadi Khadra</author>
      <pubDate>Thu, 26 Aug 2021 21:16:33 +0000</pubDate>
      <link>https://dev.to/fkhadra/react-toastify-v8-is-live-4bal</link>
      <guid>https://dev.to/fkhadra/react-toastify-v8-is-live-4bal</guid>
      <description>&lt;p&gt;Never heard of react-toastify before? Go check the &lt;a href="https://fkhadra.github.io/react-toastify/introduction"&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React-toastify has been around for 5 years(will turn five the 8 November üéÇ). Since the beginning, one of the goals was to provide a library that is highly customizable and also able to work out of the box. Every major release introduces breaking changes but this is for the best üëå.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-new-in-v8"&gt;
  &lt;/a&gt;
  What is new in v8
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yibF8rRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/5574267/130804494-a9d2d69c-f170-4576-b2e1-0bb7f13dd92d.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yibF8rRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/5574267/130804494-a9d2d69c-f170-4576-b2e1-0bb7f13dd92d.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#who-doesnt-like-icons"&gt;
  &lt;/a&gt;
  Who doesn't like icons
&lt;/h3&gt;

&lt;p&gt;Let's break down what is happening in the gif above. Notifications of different types (&lt;code&gt;toast.info&lt;/code&gt;, &lt;code&gt;toast.error&lt;/code&gt;, &lt;code&gt;toast.success&lt;/code&gt;, &lt;code&gt;toast.warning&lt;/code&gt;) display an icon associated with the selected type. You can also notice that the progress bar color matches the type color.&lt;/p&gt;

&lt;p&gt;Don't be afraid üò±, if you don't like those icons you can use your own or remove them. This is what it looks like in practice.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Default toast behavior is untouched, no icon to display&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// same as toast(message, {type: "info"});&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Without icon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You can provide any string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;üöÄ&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// custom icons have access to the theme and the toast type&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;And of course a component of your choice&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MyIcon&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Even a function, given you return something that can be rendered&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;//Disable icons&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ToastContainer&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#clear-separation-between-type-and-theme"&gt;
  &lt;/a&gt;
  Clear separation between type and theme
&lt;/h3&gt;

&lt;p&gt;Prior to v8, &lt;code&gt;toast.info&lt;/code&gt;, &lt;code&gt;toast.error&lt;/code&gt;, etc... Would display respectively a blue notification, a red notification, etc... This is not the case anymore. There are 3 distinct themes: &lt;code&gt;light&lt;/code&gt;, &lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;colored&lt;/code&gt;. The theme can be applied globally or per notification.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Set the theme globally &lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ToastContainer&lt;/span&gt; &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"dark"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// define per toast&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Display a dark notification of type info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Display a light notification of type info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Display a blue notification of type info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;colored&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This separation will benefit theming in the future.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-promise-this-is-new-ill-tell-you-if-you-await"&gt;
  &lt;/a&gt;
  I promise this is new, I'll tell you if you await
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ObjOojPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5574267/130862557-8d13ddf0-c6bf-4f52-968a-1d91c62b6016.png" class="article-body-image-wrapper"&gt;&lt;img alt="v8-promise" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ObjOojPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5574267/130862557-8d13ddf0-c6bf-4f52-968a-1d91c62b6016.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yt95t6cs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5574267/130862554-652397ed-1b1e-40d4-a250-c38734ec8e5d.png" class="article-body-image-wrapper"&gt;&lt;img alt="v8-promise-resolved" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yt95t6cs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5574267/130862554-652397ed-1b1e-40d4-a250-c38734ec8e5d.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The library exposes a &lt;code&gt;toast.promise&lt;/code&gt; function. Supply a promise and the notification will be updated if it resolves or fails. When the promise is pending a spinner is displayed. Again you hide it, I bet you already know how toüòÜ.&lt;/p&gt;

&lt;p&gt;Let's start with a simple example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resolveAfter3Sec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;resolveAfter3Sec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;pending&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise is pending&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise resolved üëå&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise rejected ü§Ø&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Displaying a simple message is what you would want to do in 90% of cases. But what if the message you want to display depends on the promise response, what if you want to change some options for the error notification? Rest assured, under the hood, the library uses &lt;code&gt;toast.update&lt;/code&gt;. Thanks to this, you have full control over each notification.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resolveWithSomeData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;resolveAfter3Sec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;pending&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise is pending&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}){&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="c1"&gt;// other options&lt;/span&gt;
        &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;üü¢&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}){&lt;/span&gt;
          &lt;span class="c1"&gt;// When the promise reject, data will contains the error&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;MyErrorComponent&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because you have the full power of &lt;code&gt;toast.update&lt;/code&gt;, you can even supply a custom transition if you want ü§Ø&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--id716aap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/5574267/130869645-586777a3-3326-4664-917e-a13aee367c43.gif" class="article-body-image-wrapper"&gt;&lt;img alt="v8-promise-resolved" src="https://res.cloudinary.com/practicaldev/image/fetch/s--id716aap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/5574267/130869645-586777a3-3326-4664-917e-a13aee367c43.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to take care of each step yourself you can use &lt;code&gt;toast.loading&lt;/code&gt; and update the notification yourself.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Please wait...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;//do something else&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All is good&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pass-data-even-when-you-are-not-rendering-a-react-component"&gt;
  &lt;/a&gt;
  Pass data even when you are not rendering a react component
&lt;/h3&gt;

&lt;p&gt;One way to pass data to the notification was to use the context api or provide your own component. Starting v8 a &lt;code&gt;data&lt;/code&gt; option is now available to make it easier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#i-just-want-to-change-few-colors"&gt;
  &lt;/a&gt;
  I just want to change few colors
&lt;/h3&gt;

&lt;p&gt;Most of the time, users are ok with the default style, they just want to change some colors to match their brand. I think one way to improve the DX for all of us is to embrace CSS variables. That's why the library has switched to css variables! &lt;br&gt;
All you want is to change the color of the progress bar? No problem&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;this&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;default&lt;/span&gt; &lt;span class="err"&gt;value&lt;/span&gt; &lt;span class="err"&gt;below&lt;/span&gt;
  &lt;span class="py"&gt;--toastify-color-progress-light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;#4cd964&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;#5ac8fa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;#007aff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;#34aadc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;#5856d6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;#ff2d55&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find the list of all exposed variables &lt;a href="//./how-to-style.md#override-css-variables"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading. You can access the full release note &lt;a href="https://fkhadra.github.io/react-toastify/migration-v8"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>library</category>
    </item>
    <item>
      <title>Walmart Store Sales Forecasting</title>
      <author>Phylis Jepchumba</author>
      <pubDate>Thu, 26 Aug 2021 21:16:08 +0000</pubDate>
      <link>https://dev.to/phylis/walmart-store-sales-forecasting-3ldm</link>
      <guid>https://dev.to/phylis/walmart-store-sales-forecasting-3ldm</guid>
      <description>&lt;p&gt;&lt;a href="https://www.kaggle.com/c/walmart-recruiting-store-sales-forecasting/data"&gt;The walmart dataset&lt;/a&gt; provides historical sales data of 45 stores of Walmart, each having various departments. &lt;/p&gt;

&lt;p&gt;The objective of this project is to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Predict the sales across various departments in each store.&lt;/li&gt;
&lt;li&gt;predict effect of markdowns on sales during the holiday.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will import necessary packages as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;plotly.express&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;px&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#data-preparation"&gt;
  &lt;/a&gt;
  Data Preparation
&lt;/h6&gt;

&lt;p&gt;The dataset contain the following files in the csv format:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;train.csv&lt;/strong&gt; : this file has 421570 rows and 5 columns. The columns contain the information for a store, department, date, weekly sales and whether a particular week is a holiday week or not&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;store.csv&lt;/strong&gt;  : this file has 45 rows and 3 columns. The columns correpond to the stores, their type and sizes of stores&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;features.csv&lt;/strong&gt; : this file 8190 rows and 12 columns. This file again has some further information regarding the stores and the region in which a particular store is located. It has date, temperature, fuel price, consumer price index, unemployment rate information for the region in which a particular store is located. It also has 5 columns MarkDown1-5 which corresponds to some promotional activities going on in different stores.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;walmart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'train.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;stores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'stores.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'features.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;testing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'test.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Merging of Data&lt;/strong&gt;&lt;br&gt;
Let's merge the data from 3 dataframes into a single dataframe and proceed further with a one dataframe.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;walmart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stores&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'left'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'left'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;testing_merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stores&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'left'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'left'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Extracting Date Information&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The sales are given for Years 2012-2012 on weekly basis. So let's split the date column to extract information for year, month and week&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;split_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Date'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Date'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Year'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Month'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Day'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'WeekOfYear'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isocalendar&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;week&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;   

&lt;span class="n"&gt;split_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;split_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testing_merged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Columns Information: Data Types&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ppw0vK7V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocahunxspaf72qt1mqx3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ppw0vK7V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocahunxspaf72qt1mqx3.png" alt="Screenshot (94)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Most of the columns in the data are numeric columns except the IsHoliday which is of boolean type and Type represents an object &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Missing Values&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;missing_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isna&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing_values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;missing_values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;missing_values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Missing Values"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Variable"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Missing Values"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pr564_KC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rsh28bea1byr3p8vbfr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pr564_KC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rsh28bea1byr3p8vbfr.png" alt="Screenshot (82)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the above plot;&lt;br&gt;
Markdown1-5 contain lots of missing values, more than 250000 in each markdown column. &lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#exploratory-data-analysis"&gt;
  &lt;/a&gt;
  Exploratory Data Analysis.
&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;Popularity of Store Types&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aAC9WYo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15vpyszwo0flpgrbisku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aAC9WYo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15vpyszwo0flpgrbisku.png" alt="Screenshot (83)"&gt;&lt;/a&gt;&lt;br&gt;
Insights;&lt;br&gt;
Type A stores are more popular than the B and C types&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average Monthly Sales - Per Year&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Insights&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Month of January witnessed the lowest sales for 2011 and 2012 while for 2010 the weekly sales are not given in the data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;From Feburary till October the weekly sales nearly remains constant around 15000 for the 3 years.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;November and December showed the highest sales for 2010 and 2011 while for 2012 the sales data has not been provided.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As shown below;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ybySdEHC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rspaosasrme1l3clwd72.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ybySdEHC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rspaosasrme1l3clwd72.png" alt="Screenshot (84)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average Weekly Sales - per Year&lt;/strong&gt;&lt;br&gt;
Insights&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2012 week 14 recorded the highest sales as compared to other weeks.&lt;/li&gt;
&lt;li&gt;Thanksgiving holiday and one week before Christmas witnessed the highest sales for the years 2010 and 2011.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As shown;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PuuaNG48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9sodnf5jfgv6wtp7ln9t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PuuaNG48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9sodnf5jfgv6wtp7ln9t.png" alt="Screenshot (85)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average Department Sales&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Different departments showed different levels of average sales&lt;/p&gt;

&lt;p&gt;As shown;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JqGem0mp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j553dk66a3cwre3rlio0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JqGem0mp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j553dk66a3cwre3rlio0.png" alt="Screenshot (86)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average Store Sales - Year Wise&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The overall trend of store sales over the 3 years remain the same as it depends on the type of store and its size.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LpE4lN6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfnh3brpdpg9e0ukp0at.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LpE4lN6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfnh3brpdpg9e0ukp0at.png" alt="Screenshot (97)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xdRs2yLB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1a5ahgle2tml7u6ucdtw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xdRs2yLB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1a5ahgle2tml7u6ucdtw.png" alt="Screenshot (98)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uRAwA-bB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/je6trq52mz43uwiqsp73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uRAwA-bB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/je6trq52mz43uwiqsp73.png" alt="Screenshot (99)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Holidays Vs Nonholidays Sales&lt;/strong&gt; &lt;br&gt;
*Despite being the less percentage of holiday weeks the sales in the holidays week are on the average higher than in the non-holiday weeks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tZLLdnUj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7ioyvjhtkc4ptm9dev1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tZLLdnUj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7ioyvjhtkc4ptm9dev1.png" alt="Screenshot (88)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relationship: Week of Year vs Sales&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Weekly sales increases towards the end of the year as shown;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5pPip6tD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkxae80qdvx4s3auhd78.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5pPip6tD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkxae80qdvx4s3auhd78.png" alt="Screenshot (89)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relationship: Size of Store vs Sales&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The sales generally increases with increase of size of store.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dXzVMxu1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdu5i3lxhyf1tk6dl0nx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dXzVMxu1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdu5i3lxhyf1tk6dl0nx.png" alt="Screenshot (92)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relationship: Fuel Price vs Sales&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Between fuel price and the sales there doesn't seem to exist any clear relationship.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r7OKmnHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzvghho6c0kt1enjphcr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r7OKmnHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzvghho6c0kt1enjphcr.png" alt="Screenshot (95)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relationship: Unemployment vs Sales&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unemployment rate doesn't seem to have any effect on the weekly sales.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HBoLFUrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5yy3h20jflw6a0mos7e5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HBoLFUrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5yy3h20jflw6a0mos7e5.png" alt="Screenshot (96)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Correlation Matrix&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lets now study the relationship between the different columns numerically to check how they correlate with the weekly sales in order to confirm the inferences we have gathered from the above EDA study. &lt;/p&gt;

&lt;p&gt;To carry out Correlation Matrix we will first convert the 'Type' column to numerical values as shown;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;storetype_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'B'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'C'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Type_Numeric'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;storetype_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;testing_merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Type_Numeric'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;testing_merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;storetype_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IoZI9Wrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2bg6pz6432sgptanw7a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IoZI9Wrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2bg6pz6432sgptanw7a.png" alt="Screenshot (93)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Insights obtained from above correlation matrix are;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Department, Store size and Type have moderate correlation with the weekly sales&lt;/li&gt;
&lt;li&gt;Markdown1-5 have very weak correlation with the weekly sales, so we will leave these columns out&lt;/li&gt;
&lt;li&gt;Temperature. Fuel price, CPI and Unemployment are very weakly coorelated with the weekly sales, so these columns will also be dropped out&lt;/li&gt;
&lt;li&gt;IsHoliday will be considered for the further analysis as the sales in the holiday weeks are higher than in the non-holiday weeks&lt;/li&gt;
&lt;li&gt;We will also leave out Month and Day as this information is already contained in the WeekOfYear.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#data-preparation-for-model-training"&gt;
  &lt;/a&gt;
  Data Preparation for Model Training.
&lt;/h6&gt;

&lt;p&gt;Following steps will be performed for preparing the data for the subsequent model training.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Based on the EDA and Correlation study, the columns with weak relationship with the target column will be dropped&lt;/li&gt;
&lt;li&gt;Input and Target dataframes will be created&lt;/li&gt;
&lt;li&gt;Inputs will be scaled in the 0 to 1 range&lt;/li&gt;
&lt;li&gt;Training and testing datasets will be created&lt;/li&gt;
&lt;li&gt;Generate predictions on training data
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'Date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Temperature'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'Fuel_Price'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="s"&gt;'MarkDown4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown5'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'CPI'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Unemployment'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Month'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Day'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;testing_merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;testing_merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'Date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Temperature'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'Fuel_Price'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="s"&gt;'MarkDown4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown5'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'CPI'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Unemployment'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Month'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Day'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Identify input and target columns.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Weekly_Sales'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;target_col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Weekly_Sales'&lt;/span&gt;

&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;target_col&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Scale the values&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.preprocessing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MinMaxScaler&lt;/span&gt;

&lt;span class="n"&gt;scaler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MinMaxScaler&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scaler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;testing_merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scaler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testing_merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create training and testing sets&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;
&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#machine-learning"&gt;
  &lt;/a&gt;
  Machine Learning
&lt;/h6&gt;

&lt;p&gt;We will use Linear regression algorithm.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.linear_model&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LinearRegression&lt;/span&gt;

&lt;span class="c1"&gt;# Create and train the model
&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LinearRegression&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Generate predictions on training data
&lt;/span&gt;&lt;span class="n"&gt;train_preds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;train_preds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output will be;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;array([17035.12035741, 15737.5350701 , 22990.63793901, ...,
       20276.77727003, 21110.53004444, 23548.55581834])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xNLewitE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erfy5qzbwmua9yc2wkvs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xNLewitE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erfy5qzbwmua9yc2wkvs.png" alt="Screenshot (91)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Phylis123/Walmart-Store-Sales-Forecasting"&gt;Full source code&lt;/a&gt;&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>python</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
