<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Create a black-out poetry maker with javascript</title>
      <author>Ivy Chen </author>
      <pubDate>Thu, 01 Jul 2021 01:41:42 +0000</pubDate>
      <link>https://dev.to/ivavay/create-a-black-out-poetry-maker-with-javascript-4kah</link>
      <guid>https://dev.to/ivavay/create-a-black-out-poetry-maker-with-javascript-4kah</guid>
      <description>&lt;p&gt;In this tutorial, I'll walk you through how to build a black-out poetry maker with vanilla javascript! Black-out poetry is a kind of reductionist poetry-writing method where you cross out words in black until the remaining words form a poem. Blackout poetry is known to help writers organize their thoughts, regulate emotions, and restore creativity. Let's get started! &lt;/p&gt;

&lt;p&gt;First in your HTML, let's create a &lt;code&gt;textarea&lt;/code&gt; and some buttons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;'input'&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Copy &amp;amp; paste a block of text you'd like to start with"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Display Text&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"download"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Download PNG&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id =&lt;/span&gt;&lt;span class="s"&gt;"myDiv"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the CSS, let's do some styling.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;textarea&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#myDiv&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, in the JS file, we're going to make each word a span element and make it so that when you click on a span element, its background turns black.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// enter a block of text and select words to black out  &lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;btn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;inputValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;inputValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// loop thru each word and create a span&lt;/span&gt;
    &lt;span class="nx"&gt;inputValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;span&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myDiv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;     
    &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we're going to use this html2canvas library to turn our div output into a png. First put this in your HTML.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.5.0-alpha1/html2canvas.min.js"&lt;/span&gt; &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha512-Ih/6Hivj+361PNhdTq03BrGbzCpetyokxTKSqohHw8GSsGD6jGzp4E5Wl8nayPWN3iUpZpfRNE/25q5BuaUd8Q=="&lt;/span&gt; &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt; &lt;span class="na"&gt;referrerpolicy=&lt;/span&gt;&lt;span class="s"&gt;"no-referrer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, put this in your JS file. Shoutout to stackoverflow for showing me how to do this!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// render div as png &lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;download&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;html2canvas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myDiv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;saveAs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toDataURL&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;file-name.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;saveAs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;download&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;download&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And yay, you're done! You should now be able to copy and paste a block of text to the textarea, start marking away, and render your finished poem in a png when the download button is clicked!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ztZ7okoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i32c6yvoqj6kenb81gtt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ztZ7okoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i32c6yvoqj6kenb81gtt.png" alt="poetry"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's the &lt;a href="https://codepen.io/Ivavay/pen/rNmBbvp"&gt;codepen&lt;/a&gt;, the &lt;a href="https://github.com/ivavay/jacobs-wonderbar"&gt;github repo&lt;/a&gt; for better css formating, and the &lt;a href="https://blackout-poetry-digital.glitch.me/"&gt;live version&lt;/a&gt; of the site.&lt;/p&gt;

&lt;p&gt;Have fun making poetry!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>A free (or mostly free) computer science education</title>
      <author>Jason Barr</author>
      <pubDate>Thu, 01 Jul 2021 01:13:37 +0000</pubDate>
      <link>https://dev.to/jasonsbarr/a-free-or-mostly-free-computer-science-education-1jk7</link>
      <guid>https://dev.to/jasonsbarr/a-free-or-mostly-free-computer-science-education-1jk7</guid>
      <description>&lt;p&gt;We programmers are lucky. A world-class education in the subject we practice is literally just a few searches away. There are myriad free and low-cost online courses available, and if you're not interested in the extras that come with taking actual courses you can just crib the notes from literally hundreds of course websites from university computer science courses all over the world.&lt;/p&gt;

&lt;p&gt;In fact, if you've ever tried to put together your own self-study computer science/programming program you might find you have the &lt;em&gt;opposite&lt;/em&gt; problem from what you'd expect: there's simply so much information out there that it's hard to know what to use.&lt;/p&gt;

&lt;p&gt;Here's a list of online courses and a few other resources I've put together to study for myself in lieu of getting an actual degree. &lt;/p&gt;

&lt;p&gt;Note that I'm already employed as a programmer, so a degree isn't necessary for me to work in the field. Your experience may vary, and you may decide an actual degree is the way to go. That's fine! There's nothing wrong with that. Sometimes I think we get stuck in this hacker mentality where we feel like we have to go our own way instead of following an established program. If a degree or other formal academic program is right for you, that's totally cool. Do what works best for you to help you meet your own goals.&lt;/p&gt;

&lt;p&gt;If it's not, here's one way you might go about educating yourself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-subjects"&gt;
  &lt;/a&gt;
  The subjects
&lt;/h2&gt;

&lt;p&gt;I wanted a list of resources that would cover most of the foundational subjects you would study in a top university CS program. These include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Programming&lt;/li&gt;
&lt;li&gt;Object-oriented programming and design&lt;/li&gt;
&lt;li&gt;Data structures and algorithms&lt;/li&gt;
&lt;li&gt;Low-level programming&lt;/li&gt;
&lt;li&gt;Computer architecture and organization&lt;/li&gt;
&lt;li&gt;Operating systems&lt;/li&gt;
&lt;li&gt;Software engineering&lt;/li&gt;
&lt;li&gt;Databases&lt;/li&gt;
&lt;li&gt;Networks and networking&lt;/li&gt;
&lt;li&gt;Programming languages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also picked some "electives" based on my own interests:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;More advanced algorithms&lt;/li&gt;
&lt;li&gt;Parallel and distributed programming&lt;/li&gt;
&lt;li&gt;Data science and machine learning&lt;/li&gt;
&lt;li&gt;Functional programming&lt;/li&gt;
&lt;li&gt;Interpreters and compilers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also added some relevant subjects in math, since as an arts major my collegiate math background was inadequate for a CS education:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Precalculus&lt;/li&gt;
&lt;li&gt;Single variable calculus&lt;/li&gt;
&lt;li&gt;Discrete mathematics&lt;/li&gt;
&lt;li&gt;Linear algebra&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've also added a physics course on electricity and magnetism, as it's a real-world prerequisite for the MIT Computation Structures course.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-i-chose-my-resources"&gt;
  &lt;/a&gt;
  How I chose my resources
&lt;/h2&gt;

&lt;p&gt;I decided to prefer existing online courses that have certificate options, although these usually require payment of some kind. I find that having an external reward like a certificate helps keep me motivated and keeps me coming back to study when I'm tired after work and would rather just veg out and watch Netflix.&lt;/p&gt;

&lt;p&gt;Even though in many cases I've linked to certificate programs that list a cost, you can access the content for the vast majority of courses I've picked for free, although there may be extra functionalities (like grading) that are unlocked by paying money.&lt;/p&gt;

&lt;p&gt;This is simply my preference, and if you decide to choose other resources that are completely free that's totally fine; do what works for you.&lt;/p&gt;

&lt;p&gt;I couldn't find adequate courses for all the relevant subjects, so in some cases I've listed books, video lectures, and materials available from course websites to fill the gaps.&lt;/p&gt;

&lt;p&gt;I'm considering each top-level bullet point to be roughly the equivalent of a 3 credit, semester-long university course (except as noted), but YMMV. Using that as a guide, the CS courses on this list equal a 60 credit sequence (plus 3 credits for physics, 6 for data science, and 9 for math not counting Precalculus, which wouldn't count towards degree requirements for most CS programs). That's about average for major requirements in an undergraduate CS program here in the United States.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-program"&gt;
  &lt;/a&gt;
  The program
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#introduction-to-computer-science-and-programming"&gt;
  &lt;/a&gt;
  Introduction to Computer Science and Programming
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/introduction-computer-science-harvardx-cs50x"&gt;HarvardX, CS50&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.edx.org/xseries/mitx-computational-thinking-using-python"&gt;MITx, Computational Thinking using Python&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Introduction to Computer Science and Programming Using Python&lt;/li&gt;
&lt;li&gt;Introduction to Computational Thinking and Data Science&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#objectoriented-programming"&gt;
  &lt;/a&gt;
  Object-Oriented Programming
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.edx.org/professional-certificate/gtx-introduction-to-object-oriented-programming-with-java"&gt;Georgia TechX, Introduction to Object-Oriented Programming using Java&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Foundations and Syntax Basics&lt;/li&gt;
&lt;li&gt;Object-Oriented Programming and Algorithms&lt;/li&gt;
&lt;li&gt;Exceptions, Data Structures, Recursion, and GUIs&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#software-design-and-engineering"&gt;
  &lt;/a&gt;
  Software Design and Engineering
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.edx.org/micromasters/ubcx-software-development"&gt;UBCx, Software Development&lt;/a&gt; (equal to 6 credits)

&lt;ul&gt;
&lt;li&gt;How to Code: Simple Data&lt;/li&gt;
&lt;li&gt;How to Code: Complex Data&lt;/li&gt;
&lt;li&gt;Optional: finish the parts of &lt;a href="http://htdp.org/"&gt;&lt;em&gt;How to Design Programs&lt;/em&gt;&lt;/a&gt; not covered by these courses&lt;/li&gt;
&lt;li&gt;Software Construction: Data Abstraction&lt;/li&gt;
&lt;li&gt;Software Construction: Object-Oriented Design&lt;/li&gt;
&lt;li&gt;Software Engineering: Introduction&lt;/li&gt;
&lt;li&gt;Software Development Capstone Project&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;MITx, Software Construction

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/software-construction-in-java"&gt;Software Construction in Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/advanced-software-construction-in-java"&gt;Advanced Software Construction in Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#data-structures-and-algorithms"&gt;
  &lt;/a&gt;
  Data Structures and Algorithms
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.edx.org/professional-certificate/gtx-data-structures-and-algorithms"&gt;Georgia TechX, Data Structures and Algorithms&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;ArrayLists, LinkedLists, Stacks and Queues&lt;/li&gt;
&lt;li&gt;Binary Trees, Heaps, SkipLists and HashMaps&lt;/li&gt;
&lt;li&gt;AVL and 2-4 Trees, Divide and Conquer Algorithms&lt;/li&gt;
&lt;li&gt;Pattern Matching, Dijkstra’s, MST, and Dynamic Programming Algorithms&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="http://timroughgarden.org/w16/w16.html"&gt;Stanford 261: A Second Course in Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lowlevel-programming"&gt;
  &lt;/a&gt;
  Low-Level Programming
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.edx.org/professional-certificate/dartmouth-imtx-c-programming-with-linux"&gt;DartmouthX, C Programming with Linux&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Getting Started&lt;/li&gt;
&lt;li&gt;Language Foundations&lt;/li&gt;
&lt;li&gt;Modular Programming and Memory Management&lt;/li&gt;
&lt;li&gt;Pointers and Memory Management&lt;/li&gt;
&lt;li&gt;Advanced Data Types&lt;/li&gt;
&lt;li&gt;Linux Basics: The Command Line Interface&lt;/li&gt;
&lt;li&gt;C Programming: Using Linux Tools and Libraries&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#electricity-and-magnetism"&gt;
  &lt;/a&gt;
  Electricity and Magnetism
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.edx.org/xseries/mitx-introductory-electricity-and-magnetism"&gt;MITx, Introductory Electricity and Magnetism&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Electrostatics&lt;/li&gt;
&lt;li&gt;Magnetic Fields and Forces&lt;/li&gt;
&lt;li&gt;Maxwell's Equations&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#computer-architecture-and-organization"&gt;
  &lt;/a&gt;
  Computer Architecture and Organization
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;MITx, Computation Structures

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/computation-structures-part-1-digital-circuits"&gt;Part 1: Digital Circuits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/computation-structures-2-computer-architecture-2"&gt;Part 2: Computer Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/computation-structures-3-computer-organization-2"&gt;Part 3: Computer Organization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Hebrew University of Jerusalem, Build a Modern Computer from First Principles: From Nand to Tetris

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/build-a-computer"&gt;Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/nand2tetris2"&gt;Part 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#operating-systems"&gt;
  &lt;/a&gt;
  Operating Systems
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Operating Systems

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLRdybCcWDFzCag9A0h1m9QYaujD0xefgM"&gt;Berkeley CS162 lecture videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pages.cs.wisc.edu/~remzi/OSTEP/"&gt;Book: &lt;em&gt;Operating Systems: Three Easy Pieces&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/remzi-arpacidusseau/ostep-projects"&gt;Projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#databases"&gt;
  &lt;/a&gt;
  Databases
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;StanfordX, Database courses

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/modeling-and-theory"&gt;Modeling and Theory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/databases-5-sql"&gt;Relational Databases and SQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/advanced-topics-in-sql"&gt;Advanced Topics in SQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/semistructured-data"&gt;Semistructured Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/olap-and-recursion"&gt;OLAP and Recursion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#networking"&gt;
  &lt;/a&gt;
  Networking
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Network Course Materials (from &lt;a href="https://github.com/ossu/computer-science"&gt;OSSU/computer-science&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLEAYkSg4uSQ2dr0XO_Nwa5OcdEcaaELSG"&gt;Stanford CS144 video lectures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PrincetonUniversity/COS461-Public/tree/master/assignments/assignment1"&gt;Assignment 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scs.stanford.edu/10au-cs144/lab/reliable/reliable.html"&gt;Assignment 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nptel.ac.in/content/storage2/courses/106105080/pdf/M2L7.pdf"&gt;Assignment 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www-net.cs.umass.edu/wireshark-labs/Wireshark_TCP_v7.0.pdf"&gt;Assignment 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gaia.cs.umass.edu/kurose_ross/interactive/index.php"&gt;Interactive Problems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#programming-languages-interpreters-and-compilers"&gt;
  &lt;/a&gt;
  Programming Languages, Interpreters, and Compilers
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;University of Washington, Programming Languages

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/programming-languages"&gt;Part A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/programming-languages-part-b"&gt;Part B&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/programming-languages-part-c"&gt;Part C&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Structure and Interpretation of Computer Programs

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/book.html"&gt;&lt;em&gt;Structure and Interpretation of Computer Programs&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://berkeley-cs61as.github.io/"&gt;Berkeley CS61AS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Interpreters and Programming Languages

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cs.brown.edu/courses/cs173/2012/book/"&gt;&lt;em&gt;Programming Languages: Application and Interpretation&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cs.brown.edu/courses/cs173/2012/OnLine/"&gt;Brown CSCI 1730&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/compilers?"&gt;StanfordX, Compilers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#parallel-concurrent-and-functional-programming"&gt;
  &lt;/a&gt;
  Parallel, Concurrent, and Functional Programming
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.coursera.org/specializations/pcdp"&gt;Rice, Parallel, Concurrent, and Distributed Programming in Java Specialization&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Parallel Programming in Java&lt;/li&gt;
&lt;li&gt;Concurrent Programming in Java&lt;/li&gt;
&lt;li&gt;Distributed Programming in Java&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.coursera.org/specializations/scala"&gt;École Polytechnique Fédérale de Lausanne, Functional Programming in Scala Specialization&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Functional Programming Principles in Scala&lt;/li&gt;
&lt;li&gt;Functional Program Design in Scala&lt;/li&gt;
&lt;li&gt;Parallel programming&lt;/li&gt;
&lt;li&gt;Big Data Analysis with Scala and Spark&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#data-science-and-machine-learning"&gt;
  &lt;/a&gt;
  Data Science and Machine Learning
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.edx.org/micromasters/mitx-statistics-and-data-science"&gt;MITx, Statistics and Data Science&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Probability - The Science of Uncertainty and Data&lt;/li&gt;
&lt;li&gt;Fundamentals of Statistics&lt;/li&gt;
&lt;li&gt;Machine Learning with Python: from Linear Models to Deep Learning&lt;/li&gt;
&lt;li&gt;Capstone Exam in Statistics and Data Science&lt;/li&gt;
&lt;li&gt;Data Analysis: Statistical Modeling and Computation in Applications&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/machine-learning"&gt;Stanford, Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#math"&gt;
  &lt;/a&gt;
  Math
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/precalculus"&gt;ASUx, Precalculus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.edx.org/xseries/mitx-18.01x-single-variable-calculus"&gt;MITx, Single Variable Calculus&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;1A: Differentiation&lt;/li&gt;
&lt;li&gt;1B: Integration&lt;/li&gt;
&lt;li&gt;1C: Coordinate Systems and Infinite Series&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;MIT, Mathematics for Computer Science

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://openlearninglibrary.mit.edu/courses/course-v1:OCW+6.042J+2T2019/about"&gt;Open Learning Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLB7540DEDD482705B"&gt;Video lectures&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Georgia TechX, Linear Algebra

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.edx.org/professional-certificate/gtx-introductory-linear-algebra"&gt;Introductory Linear Algebra&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Linear Equations&lt;/li&gt;
&lt;li&gt;Matrix Algebra&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.edx.org/professional-certificate/gtx-applications-of-linear-algebra"&gt;Applications of Linear Algebra&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Determinants and Eigenvalues&lt;/li&gt;
&lt;li&gt;Orthogonality &amp;amp; Symmetric Matrices and the SVD&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#for-further-study"&gt;
  &lt;/a&gt;
  For further study
&lt;/h2&gt;

&lt;p&gt;The above list will give you a solid foundation in computer science and programming on par with what you would get from a BS degree. These are obviously just suggestions, though; feel free to tailor your own study to your interests and the things that motivate you.&lt;/p&gt;

&lt;p&gt;If data science isn't your thing, maybe a course on &lt;a href="https://www.edx.org/professional-certificate/curtinx-mobile-app-development-with-swift"&gt;iOS&lt;/a&gt; or &lt;a href="https://www.coursera.org/specializations/android-app-development"&gt;Android&lt;/a&gt; app development will scratch your itch. You could also look into cloud-based development with programs from &lt;a href="https://www.edx.org/xseries/aws-developer-series"&gt;AWS&lt;/a&gt; or &lt;a href="https://www.edx.org/professional-certificate/ibm-full-stack-cloud-developer"&gt;IBM&lt;/a&gt;. Chances are good that, if you've got an interest, there's a course out there for you.&lt;/p&gt;

&lt;p&gt;I hope this list is helpful for you as you seek your own path to a well-rounded education as a developer.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Introduction to AVL  tree</title>
      <author>Aya Bouchiha</author>
      <pubDate>Thu, 01 Jul 2021 00:15:38 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/introduction-to-avl-tree-fbk</link>
      <guid>https://dev.to/ayabouchiha/introduction-to-avl-tree-fbk</guid>
      <description>&lt;p&gt;Hello, today, we're going to talk about &lt;strong&gt;AVL tree&lt;/strong&gt;.&lt;br&gt;
#day_19&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-we-need-to-use-avl-trees"&gt;
  &lt;/a&gt;
  why we need to use AVL trees.
&lt;/h2&gt;

&lt;p&gt;Sometimes, the Binary search tree's operations become O(n) instead of O(log n) due to being a skewed binary search tree, that's why &lt;strong&gt;A&lt;/strong&gt;delson, &lt;strong&gt;V&lt;/strong&gt;elskii and &lt;strong&gt;L&lt;/strong&gt;andis. &lt;em&gt;so what's an AVL tree ?&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
if you're not familiar with binary search tree, this &lt;a href="https://dev.to/ayabouchiha/part-3-binary-search-tree-in-data-structure-3p7m"&gt;post&lt;/a&gt; will help you :)&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#definition-of-avl-tree"&gt;
  &lt;/a&gt;
  Definition of AVL tree
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;AVL tree is a self-balancing Binary Search Tree (BST) where the difference between heights of left and right subtrees cannot be more than one for all nodes. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/avl-tree-set-1-insertion/"&gt;www.geeksforgeeks.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#time-and-space-complexity"&gt;
  &lt;/a&gt;
  Time and Space complexity
&lt;/h2&gt;

&lt;p&gt;The space complexity of the avl tree is &lt;strong&gt;O(n)&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;insert&lt;/th&gt;
&lt;th&gt;search&lt;/th&gt;
&lt;th&gt;delete&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;O(log n)&lt;/td&gt;
&lt;td&gt;O(log n)&lt;/td&gt;
&lt;td&gt;O(log n)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#balance-factor"&gt;
  &lt;/a&gt;
  Balance factor
&lt;/h2&gt;

&lt;p&gt;the difference between the height of left and right subtrees can be calculated using this formula below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;BalanceFactor = height(left-sutree) − height(right-sutree)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;if the balance factor was &lt;em&gt;less than or equal to 1&lt;/em&gt;, the tree is balanced, if not, we use the rotation to make it balanced. There are four types of rotation:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Right rotation&lt;/li&gt;
&lt;li&gt;Left rotation&lt;/li&gt;
&lt;li&gt;Right-Left rotation&lt;/li&gt;
&lt;li&gt;Left-Right rotation &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;in the next post, we'll cover rotation types with the implementation, see you tomorrow, have a great day!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references-and-useful-resources"&gt;
  &lt;/a&gt;
  References and useful resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/AVL_tree"&gt;https://en.wikipedia.org/wiki/AVL_tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/avl-tree-set-1-insertion/"&gt;https://www.geeksforgeeks.org/avl-tree-set-1-insertion/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/data_structures_algorithms/avl_tree_algorithm.htm"&gt;https://www.tutorialspoint.com/data_structures_algorithms/avl_tree_algorithm.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatpoint.com/avl-tree"&gt;https://www.javatpoint.com/avl-tree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>algorithms</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Set Up Your Next Web Dev Project with SCSS Made Easy!</title>
      <author>Russ Perry</author>
      <pubDate>Wed, 30 Jun 2021 23:21:59 +0000</pubDate>
      <link>https://dev.to/russdevs/set-up-your-next-web-dev-project-with-scss-made-easy-230d</link>
      <guid>https://dev.to/russdevs/set-up-your-next-web-dev-project-with-scss-made-easy-230d</guid>
      <description>&lt;p&gt;If you are anything like me, sometimes vanilla CSS just doesn't cut it. I mostly use SCSS for it's organizational purposes. &lt;/p&gt;

&lt;p&gt;Here, I will walk you through the pretty simple steps of how to set up SCSS for your next project! This article will just help you on how to set up SCSS / SASS in your project. If you would like to learn more on how to use SCSS / SASS and what it can do, you can check out the official SASS Guide &lt;a href="https://sass-lang.com/guide"&gt;Here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you don't care about the in depth explanations, check out the TLDR; section at the bottom!&lt;/p&gt;

&lt;p&gt;I have a folder structure that seems to work pretty well for me. In any given project folder, I will have a &lt;code&gt;dist&lt;/code&gt; folder that holds my index.html, image files, and any JavaScript files I may have. This is considered my distribution file, and if someone wanted to deploy the website, they could just use that folder to deploy without all that extra SCSS stuff to get in the way.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-your-project-folders"&gt;
  &lt;/a&gt;
  Creating your project folders
&lt;/h3&gt;

&lt;p&gt;Let's start off by creating a project folder for yourself. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a folder for your project.&lt;/li&gt;
&lt;li&gt;Within that folder, create another folder labeled &lt;code&gt;dist&lt;/code&gt;. You can name it whatever you want, but this is the name I use.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Also within your project folder, create another one called &lt;code&gt;scss&lt;/code&gt;. This will house all of your SCSS files.&lt;br&gt;
It should look a little something like this: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pZp3Ku6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltwj0q98024oyhdpaonc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pZp3Ku6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltwj0q98024oyhdpaonc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next step is installing node.js...&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#installing-node-and-sass"&gt;
  &lt;/a&gt;
  Installing Node and SASS
&lt;/h3&gt;

&lt;p&gt;Before we get started with SCSS, you will need Node on your machine. To get node, you can go to &lt;a href="https://nodejs.org/en/download/"&gt;Node's Website Here&lt;/a&gt; and follow the instructions for your device. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Once node is installed, open your terminal.&lt;/li&gt;
&lt;li&gt;To validate that you have node installed, run the command &lt;code&gt;node --version&lt;/code&gt;. You should see a version number returned.&lt;/li&gt;
&lt;li&gt;Now we will globally install SASS. To do this, run the command &lt;code&gt;npm install -g sass&lt;/code&gt;. This will install it globally on your machine.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#code-all-your-scss-to-your-hearts-content"&gt;
  &lt;/a&gt;
  Code all your SCSS to your heart's content
&lt;/h3&gt;

&lt;p&gt;Here is where you can get creative and code your SCSS files! Have fun with it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#compiling-your-scss"&gt;
  &lt;/a&gt;
  Compiling your SCSS
&lt;/h3&gt;

&lt;p&gt;Alright, now let's see what you did!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Within your terminal, you can navigate to your file path. 

&lt;ul&gt;
&lt;li&gt;To do this, you can type in &lt;code&gt;cd &amp;lt;filepath&amp;gt;&lt;/code&gt;. So if your project was on your desktop, you can do &lt;code&gt;cd \desktop\my_project&lt;/code&gt; and you will be brought to your project.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enter the command &lt;code&gt;sass /scss/main.scss dist/css/main.css&lt;/code&gt;. This will build and compile your SCSS files. Just run that command every time you want to compile!&lt;/li&gt;
&lt;li&gt;Just refresh your project, and BOOM! It's updated!&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#how-i-use-scss"&gt;
  &lt;/a&gt;
  How I Use SCSS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gcm48v6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oiv0u2yanf7io1b3nu4d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gcm48v6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oiv0u2yanf7io1b3nu4d.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
I use SCSS for organization. You can see how I am using this in one of my real projects I am working on. Within the SCSS folder, I use the &lt;code&gt;main.scss&lt;/code&gt; file as a file that holds imports to all other scss files. I then break down each section of the website into it's own scss file. So you can see in the above screenshot, I have a file specifically for the Hero of the page.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR;
&lt;/h3&gt;

&lt;p&gt;I know I was wordy up there, you can find a simple numbered list here on how to set it up.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create your project folder&lt;/li&gt;
&lt;li&gt;Within project folder, create a &lt;code&gt;dist&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;Within the project folder, create an &lt;code&gt;scss&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://nodejs.org/en/download"&gt;Node.js&lt;/a&gt; if you have not already.&lt;/li&gt;
&lt;li&gt;In your terminal, run the command &lt;code&gt;npm install -g sass&lt;/code&gt; to install SASS globally.&lt;/li&gt;
&lt;li&gt;Navigate to your project within your terminal.&lt;/li&gt;
&lt;li&gt;Code your SCSS with all your might!&lt;/li&gt;
&lt;li&gt;When you are ready to compile your SCSS files, you can enter the command &lt;code&gt;sass /scss/main.scss dist/css/main.css&lt;/code&gt;. This will build and compile your SCSS files. Just run that command every time you want to compile!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Congratulations, you are now up and running with SASS! Happy Coding!&lt;/p&gt;

</description>
      <category>scss</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Introduction To Graphs</title>
      <author>Ibrahim Banat</author>
      <pubDate>Wed, 30 Jun 2021 23:13:28 +0000</pubDate>
      <link>https://dev.to/ibrahimbanat/introduction-to-graphs-1p57</link>
      <guid>https://dev.to/ibrahimbanat/introduction-to-graphs-1p57</guid>
      <description>&lt;p&gt;Graph Data Structure Introduction including: adjacency list, adjacency matrix and the incidence matrix.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-graph-"&gt;
  &lt;/a&gt;
  what is a graph ?
&lt;/h2&gt;

&lt;p&gt;The graph data structure is not the same as a graph you may have learned about a math class, graphs are collections of things and the relationships or connections between them. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5guXnVVL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qeem5niqqchu04lfpg5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5guXnVVL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qeem5niqqchu04lfpg5.png" alt="undirectedgraph"&gt;&lt;/a&gt; &lt;br&gt;
The data in a graph are called nodes or vertices the connections between the nodes are called edges.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lNW2zGrX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s7qxgqphqernyokkp47y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lNW2zGrX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s7qxgqphqernyokkp47y.png" alt="undirectedgraph (1)"&gt;&lt;/a&gt;&lt;br&gt;
one example of graphs is a social network, where the nodes are you and other people and the edges are whether two people are friend with each other.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#types-of-graphs"&gt;
  &lt;/a&gt;
  Types of Graphs
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Directed:&lt;br&gt;
directed graphs are graphs with a direction and its edges.&lt;br&gt;
example of a directed graph could be the internet and web page links the nodes are web pages and the directed edges are links to other pages.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YBcJeeFb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ivstljgov23ye6rjtok4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YBcJeeFb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ivstljgov23ye6rjtok4.png" alt="graphhh"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Undirected Graph: &lt;br&gt;
undirected graphs are graphs without any direction on the edges between nodes. example of an undirected graph could be a social network the nodes are people and the edges are friendships.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nSrIaVLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/703eh7l23jroqv0flxtg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nSrIaVLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/703eh7l23jroqv0flxtg.png" alt="cycle-BFS"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#graph-representation"&gt;
  &lt;/a&gt;
  Graph Representation
&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Graph representation is a technique to store graph into the memory of computer. To represent a graph, we just need the set of vertices, and for each vertex the neighbors of the vertex (vertices which is directly connected to it by an edge).&lt;/p&gt;

&lt;p&gt;the main representations of a graph is &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Adjacency List: 
This representation for a graph associates each vertex in the graph with the collection of its neighboring vertices or edges.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fymunoxr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/plo98595wvpo3pn5uc7m.PNG" alt="pic1"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;in this image A is connected to B, B is connected to A and C, and C is connected to B.&lt;br&gt;
you could show the previous relationship with text as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Node1: Node2, Node3
Node2: Node1
Node3: Node3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and the JSON list representation for the previous relationship would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var underictedG = {
  Node1: ["Node2", "Node3"],
  Node2: ["Node1"],
  Node3: ["Node3"]
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and it's considered a un-directed graph because it's not showing the direction of the edges.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adjacency Matrix:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;adjacency matrix is a two-dimensional array where each nested array has the same number of elements as the outer array so it's basically a matrix of numbers where the numbers represent the edges zeroes means there is no edge or relationship and one means there is a relationship.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;this table shows an adjacency matrix, you can see that the labels for the nodes are on the top and left.&lt;/p&gt;

&lt;p&gt;then, the JavaScript representation of the same thing is like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let adjMatrix = [
  [0, 1, 1],
  [0, 0, 0],
  [1, 0, 0],
] 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;unlike an adjacency list each row of the matrix has to have the same number of elements as nodes in the graph here we have a 3 by 3 matrix which means we have 3 nodes our graph&lt;/p&gt;

&lt;p&gt;Adjacency matrix can be used to represent a directed graph here's &lt;br&gt;
a graph where the second node has an edge pointing toward the first node and then the third node has an edge pointing to the first node.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---_5EkG-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzxlp3qq3elfqlxt6vmc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---_5EkG-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzxlp3qq3elfqlxt6vmc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;the numbers in the array will change, there are only ones where a node is pointing toward another node and since there are only two points there are only two nodes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let adjMatrix = [
  [0, 0, 0],
  [1, 0, 0],
  [0, 1, 0],
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Incidence Matrix&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Like the adjacency matrix, incidence matrix is a two-dimensional array however the rows and columns means something else here.&lt;/p&gt;

&lt;p&gt;the adjacency matrix use both rows and columns to represent nodes and incidence matrix uses rows and columns to represent nodes and the columns to represent edges. this means that we can have an uneven number of rows and columns.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cRXSQZ34--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jn2otcozmwfapifphxy0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cRXSQZ34--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jn2otcozmwfapifphxy0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;each column will represent a unique edge also each edge connects two nodes to show that there is edge between two nodes. you will put a 1 in the two rows of a particular column as you can see in the diagram.&lt;/p&gt;

&lt;p&gt;edge 1 is connected to nodes A and B now look at the column for edge 1 in the incidence matrix table you will see a 1 in both the A row and the B row. this shows the edge 1 connects the nodes A&lt;br&gt;
and B.&lt;/p&gt;

&lt;p&gt;and that's what you need to know about graphs in JavaScript, see in next blog.&lt;/p&gt;

&lt;p&gt;sources: &lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=DBRW8nwZV-g&amp;amp;ab_channel=freeCodeCamp.org"&gt;source1&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.geeksforgeeks.org/graph-data-structure-and-algorithms/"&gt;source2&lt;/a&gt; &lt;/p&gt;

</description>
      <category>algorithms</category>
    </item>
    <item>
      <title>3 Tips for Developers Writing their First Book</title>
      <author>Stephanie Morillo</author>
      <pubDate>Wed, 30 Jun 2021 22:50:13 +0000</pubDate>
      <link>https://dev.to/radiomorillo/3-tips-for-developers-writing-their-first-book-1n00</link>
      <guid>https://dev.to/radiomorillo/3-tips-for-developers-writing-their-first-book-1n00</guid>
      <description>&lt;p&gt;&lt;em&gt;Photo Credit: #WOCinTech Chat&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So you want to write a book?&lt;/strong&gt; Or maybe you don't — but you've certainly seen more and more developers in the community publishing their own books, right? Since I published my first eBook last winter, I've seen the number of self-published books boom. Let's talk more about this format!&lt;/p&gt;

&lt;p&gt;Books are a great vehicle for diving deep on a topic and having a very clear outcome for the reader. You have to map out clearly where you're taking the reader and why, and you have to articulate what they'll be able to do or learn at the very end of it.&lt;/p&gt;

&lt;p&gt;Here are some tips I have for anyone who is thinking of writing a book.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-1-conduct-market-research"&gt;
  &lt;/a&gt;
  Tip #1: Conduct market research
&lt;/h2&gt;

&lt;p&gt;The purpose of market research isn't to dissuade you from writing your book. You'll discover if there are books similar to yours in the market and will help you figure out what makes yours different. When we go into a grocery store, we may find ten brands of milk for sale. But each one uses something distinct to make it stand out from the pack. See if there is a gap in what's available that you can use to your advantage, either as an angle to explore with your book or as a talking point when promoting it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to do this&lt;/strong&gt;: Search engines, browsing the catalogs of tech publishers, searching sites like Gumroad, Product Hunt, and other eCommerce places. Look for topics that are similar to yours and read the descriptions of those books, check out their table of contents, and read reviews. Understand where the similarities are and what is different between those books and yours.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-2-decide-whether-or-not-to-selfpublish"&gt;
  &lt;/a&gt;
  Tip #2 Decide whether or not to self-publish
&lt;/h2&gt;

&lt;p&gt;People who choose to self-publish versus those who decide to go the traditional publishing route want different things. Self-publishing is great for anyone who wants to build and sell digital products, promote their business, and control pricing. Traditional publishing is a great fit for anyone who wants the backing of a reputable publisher supporting their work, anyone who wants to write without the hassle of handling book editing and production, and to get their book in front of audiences unfamiliar with their work. Get clear about what your goals are and don't feel pressured to go one way or another because other people are doing it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bonus points&lt;/strong&gt;: Set up a casual conversation with peers who have self-published and peers who have published. Ask them what their goals were, why they went with the route they chose, what the pros and cons are of each track, and how they promoted their book. (Don't know anyone? All good! I talk more about each publishing track in-depth in The Developer's Guide to Book Publishing.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-3-if-you-selfpublish-hire-an-editor-or-two"&gt;
  &lt;/a&gt;
  Tip #3: If you self-publish, hire an editor or two
&lt;/h2&gt;

&lt;p&gt;An editor or two is an absolute must if you're self-publishing. You're creating a product that is meant to be read by others, and the quality needs to reflect the work you put in and the experience users expect to receive after they pay. An editor can do more than fix typos; they can help you with structure and formatting, spot inconsistencies, and make recommendations for things to add and improve. I like hiring two editors and having at least one peer review of my eBooks to ensure the edits and feedback are comprehensive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to do this&lt;/strong&gt;: Ask your network for referrals, or look at freelance marketplaces like &lt;a href="http://www.fiverr.com/s2/a6a80da60a"&gt;Fiverr&lt;/a&gt; (affiliate link), Wordy, and Upwork. Read reviews, read what services each platform offers, and look at pricing. Determine your budget ahead of time and filter for editors who meet your budgetary requirements and editing needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.stephaniemorillo.co/post/3-tips-for-developers-writing-their-first-book"&gt;&lt;em&gt;This post originally appeared on my blog.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I'm Stephanie, a Content Strategist and Technical PM.&lt;/em&gt; If you liked this post, &lt;a href="https://www.stephaniemorillo.co/links"&gt;visit my website for more content tips&lt;/a&gt; and to learn more about my work!&lt;/p&gt;

</description>
      <category>writing</category>
      <category>career</category>
      <category>productivity</category>
      <category>books</category>
    </item>
    <item>
      <title>LikedList Questions: Delete nth node from end in Single Pass</title>
      <author>Kathan Vakharia</author>
      <pubDate>Wed, 30 Jun 2021 22:25:23 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/likedlist-questions-delete-nth-node-from-end-single-pass-48d</link>
      <guid>https://dev.to/kathanvakharia/likedlist-questions-delete-nth-node-from-end-single-pass-48d</guid>
      <description>&lt;p&gt;In this series of posts, I will discuss coding questions on the &lt;code&gt;LinkedList&lt;/code&gt; Data structure.&lt;br&gt;
The posts in this series will be organized in the following way,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Question Link ❓&lt;/li&gt;
&lt;li&gt;Possible Explanation 📝&lt;/li&gt;
&lt;li&gt;Documented C++ Code 🧹&lt;/li&gt;
&lt;li&gt;Time and Space Complexity Analysis ⌛🌌&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#the-question"&gt;
  &lt;/a&gt;
  The Question
&lt;/h2&gt;

&lt;p&gt;Given the &lt;code&gt;head&lt;/code&gt; of a linked list, remove the &lt;code&gt;nth&lt;/code&gt; node from the end of the list and return its head.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Constraints:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The number of nodes in the list is &lt;code&gt;sz&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= sz &amp;lt;= 30&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= Node.val &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= n &amp;lt;= sz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://leetcode.com/problems/remove-nth-node-from-end-of-list/description/"&gt;https://leetcode.com/problems/remove-nth-node-from-end-of-list/description/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 Give yourself atleast 15-20 mins to figure out the solution :)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#approach-2-single-pass"&gt;
  &lt;/a&gt;
  Approach 2: Single Pass
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#what-do-i-mean-by-single-pass-here"&gt;
  &lt;/a&gt;
  What do I mean by single pass here?
&lt;/h3&gt;

&lt;p&gt;If you recall in the last post, we travelled the list two times:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/kathanvakharia" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kuqECyTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--bhbJL83l--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/458861/ab6297f8-b3bc-440d-bcba-e002322f382a.jpg" alt="kathanvakharia"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kathanvakharia/likedlist-questions-delete-nth-node-from-end-in-two-pass-2j63" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;LinkedList Questions: Delete nth node from end in Two Pass&lt;/h2&gt;
      &lt;h3&gt;Kathan Vakharia ・ Jun 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#algorithms&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cpp&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#linkedlist&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;To calculate the length of list.&lt;/li&gt;
&lt;li&gt;To delete the &lt;code&gt;L - n + 1&lt;/code&gt; th node where &lt;code&gt;L&lt;/code&gt; is the length of list.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's the reason we called it two pass method. &lt;/p&gt;

&lt;p&gt;But in this approach, we will travel the list only one time i.e. every node will be travelled &lt;em&gt;exactly once&lt;/em&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-blocks"&gt;
  &lt;/a&gt;
  Building Blocks
&lt;/h3&gt;

&lt;p&gt;Before we begin our discussion, I would like you to be aware of few observations when traversing a linkedlist. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you travel &lt;code&gt;m&lt;/code&gt; distance from the start, you'll end being on the &lt;code&gt;m + 1&lt;/code&gt; th node.&lt;/li&gt;
&lt;li&gt;If you append a dummy node( &lt;code&gt;start&lt;/code&gt; ) at the start of linkedlist, we can reach the &lt;code&gt;m&lt;/code&gt;th node in &lt;em&gt;original&lt;/em&gt; linkedlist in &lt;code&gt;m&lt;/code&gt; steps from &lt;code&gt;start&lt;/code&gt;. ( 1 step means &lt;code&gt;cur = cur→next&lt;/code&gt; operation )&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-approach"&gt;
  &lt;/a&gt;
  The Approach
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;📓 This approach might look a bit complicated but believe me, it is VERY important to understand it as this method forms the basis of many other questions( important ones ) on linkedlist.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Inorder to understand images, consider L=6( ListLength ) and n=3( postion of node from end that is to be deleted ).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The idea is still the same, we would want to delete the &lt;code&gt;L - n + 1&lt;/code&gt; th node from the beginning.&lt;/p&gt;

&lt;p&gt;Here's what we will do, &lt;/p&gt;

&lt;p&gt;1) Create a dummy node &lt;code&gt;start&lt;/code&gt;  and make it' s &lt;code&gt;next&lt;/code&gt; equal to &lt;code&gt;head&lt;/code&gt;. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uID8hRWh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5oa0xix5gg556txtojn4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uID8hRWh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5oa0xix5gg556txtojn4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) Initialize two pointers &lt;code&gt;fast&lt;/code&gt; and &lt;code&gt;slow&lt;/code&gt; equal to  &lt;code&gt;start&lt;/code&gt; node i.e their &lt;code&gt;next&lt;/code&gt; is equal to &lt;code&gt;head&lt;/code&gt; .&lt;br&gt;
3) Make &lt;code&gt;fast&lt;/code&gt; point to the &lt;code&gt;n&lt;/code&gt;th node in original linkedlist by peforming &lt;code&gt;n&lt;/code&gt; iterations( steps ).&lt;br&gt;
     🎯 Now hold on and think, how much steps will it take for  &lt;code&gt;fast&lt;/code&gt;  to reach the last node?&lt;br&gt;
     🎯 We are at the &lt;code&gt;n&lt;/code&gt;th node from start, so after &lt;code&gt;L - n&lt;/code&gt; steps we will reach the last node. [&lt;strong&gt;IMP&lt;/strong&gt;]&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rdp1v5oJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjkg8a8tjoacaihgj100.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rdp1v5oJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjkg8a8tjoacaihgj100.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4) Move &lt;code&gt;fast&lt;/code&gt; and &lt;code&gt;slow&lt;/code&gt; simultaneouly &lt;em&gt;one&lt;/em&gt; step at a time untill &lt;code&gt;fast&lt;/code&gt; reaches the &lt;em&gt;last&lt;/em&gt; node. This will ensure both pointers perform &lt;code&gt;L - n&lt;/code&gt;  steps.&lt;br&gt;
     🎯 This will ensure, now &lt;code&gt;slow&lt;/code&gt; points to the &lt;code&gt;L - n&lt;/code&gt; th node. ( &lt;a href="#building-blocks"&gt;Point 2&lt;/a&gt; of buldingblocks )&lt;br&gt;
5) Delete the required node( &lt;code&gt;slow → next&lt;/code&gt; ) using &lt;code&gt;slow&lt;/code&gt; pointer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9joCHC1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3ax1o5elnuyvvbfrobr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9joCHC1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3ax1o5elnuyvvbfrobr.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  C++ Code
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#definition-of-linkedlist"&gt;
  &lt;/a&gt;
  Definition of LinkedList
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Definition for singly-linked list.&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;ListNode&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nf"&gt;removeNthFromEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//! list is never empty&lt;/span&gt;

        &lt;span class="c1"&gt;//- initializing pointers&lt;/span&gt;
        &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;slow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//make fast point to the nth node&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;//move "slow" ahead untill "fast" points to the last node&lt;/span&gt;
        &lt;span class="c1"&gt;//i.e point "slow" to one node preceding the required node&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fast&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;slow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;//deleting the nth node from end or n-k+1th node from begin&lt;/span&gt;
        &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#complexity-analysis"&gt;
  &lt;/a&gt;
  Complexity Analysis
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;L&lt;/code&gt; is the length of linkedlist here&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-complexity-ol"&gt;
  &lt;/a&gt;
  Time Complexity: O(L)
&lt;/h3&gt;

&lt;p&gt;We have travelled the list exactly once.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#space-complexity-o1"&gt;
  &lt;/a&gt;
  Space Complexity: O(1)
&lt;/h3&gt;

&lt;p&gt;We didn't use any extra space.&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>cpp</category>
      <category>codenewbie</category>
      <category>linkedlist</category>
    </item>
    <item>
      <title>Use Higher-Order Functions map, filter, or reduce to Solve a Complex Problem</title>
      <author>Randy Rivera</author>
      <pubDate>Wed, 30 Jun 2021 22:06:41 +0000</pubDate>
      <link>https://dev.to/rthefounding/use-higher-order-functions-map-filter-or-reduce-to-solve-a-complex-problem-o0e</link>
      <guid>https://dev.to/rthefounding/use-higher-order-functions-map-filter-or-reduce-to-solve-a-complex-problem-o0e</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Now that you have worked and looked through the posts using higher-order functions like &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt;, and &lt;code&gt;reduce()&lt;/code&gt;, you now get to apply them to solve a more complex challenge.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Complete the code for the &lt;code&gt;squareList&lt;/code&gt; function using any combination of &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt;, and &lt;code&gt;reduce()&lt;/code&gt;. The function should return a new array containing the squares of only the positive integers (decimal numbers are not integers) when an array of real numbers is passed to it. An example of an array of real numbers is &lt;code&gt;[-3, 4.8, 5, 3, -3.2]&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const squareList = arr =&amp;gt; {
  // Only change code below this line
  return arr;
  // Only change code above this line
};

const squaredIntegers = squareList([-3, 4.8, 5, 3, -3.2]);
console.log(squaredIntegers);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Hint: &lt;/li&gt;
&lt;li&gt;You will need to filter() the &lt;code&gt;squareList&lt;/code&gt; for positive integers (decimals are not integers) and you will need to &lt;code&gt;map()&lt;/code&gt;the values from your filter() function to a variable.&lt;/li&gt;
&lt;li&gt;Answer:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const squareList = arr =&amp;gt; {
  let positiveIntegersSquared = arr.filter(num =&amp;gt; {
    if (Number.isInteger(num) &amp;amp;&amp;amp; num &amp;gt; 0) {
      return num;
    } 
  })
    .map(num =&amp;gt; {
      return num * num
  });

  return positiveIntegersSquared;
};

const squaredIntegers = squareList([-3, 4.8, 5, 3, -3.2]);
console.log(squaredIntegers);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;squareList([-3, 4.8, 5, 3, -3.2]) should return [25, 9].&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>devops</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Building Slack UI with pure HTML5, CSS3 and JavaScript: The power of CSS grids and flexbox</title>
      <author>John Idogun</author>
      <pubDate>Wed, 30 Jun 2021 21:54:41 +0000</pubDate>
      <link>https://dev.to/sirneij/building-slack-ui-with-pure-html5-css3-and-javascript-the-power-of-css-grids-and-flexbox-4ban</link>
      <guid>https://dev.to/sirneij/building-slack-ui-with-pure-html5-css3-and-javascript-the-power-of-css-grids-and-flexbox-4ban</guid>
      <description>&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;Sometimes last year, around October, I came across this &lt;a href="https://www.theverge.com/2020/3/18/21184865/slack-redesign-update-sidebar-changes-available-now-download"&gt;post&lt;/a&gt;&lt;sup id="fnref1"&gt;&lt;a href="#fn1"&gt;1&lt;/a&gt;&lt;/sup&gt; about slack's biggest redesign. It looked quite appealing to me and I tasked myself to make a clone of this page&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R0E5129g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.vox-cdn.com/thumbor/zdaHYS9cpyOpUhrqn0Pew9tWJk8%3D/0x0:1980x1320/920x613/filters:focal%28832x502:1148x818%29:format%28webp%29/cdn.vox-cdn.com/uploads/chorus_image/image/66517684/slacknewdesign.0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R0E5129g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.vox-cdn.com/thumbor/zdaHYS9cpyOpUhrqn0Pew9tWJk8%3D/0x0:1980x1320/920x613/filters:focal%28832x502:1148x818%29:format%28webp%29/cdn.vox-cdn.com/uploads/chorus_image/image/66517684/slacknewdesign.0.jpg" alt="Slack redesign" title="Slack redesign"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;using pure CSS3 and HTML5. I also wanted to ensure that it's totally responsive irrespective of the screen size.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#declaimer"&gt;
  &lt;/a&gt;
  Declaimer
&lt;/h2&gt;

&lt;p&gt;I am not fully into frontend stuff and hence not an expert. This was just for learning purposes. Comments, suggestions and constructive critism are welcome.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source code
&lt;/h2&gt;

&lt;p&gt;The full code for the clone is on github.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Sirneij"&gt;
        Sirneij
      &lt;/a&gt; / &lt;a href="https://github.com/Sirneij/slack-clone-ui"&gt;
        slack-clone-ui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A responsive and beautiful slack clone UI with rich text editor created from scratch using HTML5, CSS3 and Vanilla JavaScript
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
slack-clone-ui&lt;/h1&gt;
&lt;p&gt;A beautiful and responsive clone of the popular collaborating software, Slack! It has most of its UI's features implemented. It was written in pure HTML5, CSS3 and Vanilla JavaScript.&lt;/p&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;p&gt;To see it in action, check &lt;a href="https://sirneij.github.io/slack-clone-ui/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Sirneij/slack-clone-ui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;It was also hosted on github pages and can be accessed &lt;a href="https://sirneij.github.io/slack-clone-ui/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementations-and-decisions"&gt;
  &lt;/a&gt;
  Implementations and decisions
&lt;/h2&gt;

&lt;p&gt;Before starting out, I was a bit comfortable with CSS3 and HTML5 but &lt;code&gt;grids&lt;/code&gt; and &lt;code&gt;flexboxes&lt;/code&gt; were a bit fuzzy for me. I decided right there and then to learn these features. Therefore, the whole application was built using them.&lt;/p&gt;

&lt;p&gt;Starting from with the &lt;code&gt;container&lt;/code&gt; which is the wrapper for all the element's page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;...
 &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I ensured that it fills the entire width and height of the screen with one column and two rows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;grid-template-rows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.375rem&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;header&lt;/code&gt; starts from row 1 and ends on row 2:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="nc"&gt;.header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;grid-row&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;main&lt;/code&gt; howevers starts from row 2 till the end and it was also made a &lt;code&gt;grid&lt;/code&gt; layout which comprises a &lt;code&gt;sidebar&lt;/code&gt;(another grid layout) and &lt;code&gt;body&lt;/code&gt;(yet another grid layout):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="nc"&gt;.main&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;grid-row&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16.25rem&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.sidebar&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;...&lt;/span&gt;
  &lt;span class="nl"&gt;grid-column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="err"&gt;...&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4rem&lt;/span&gt; &lt;span class="n"&gt;minmax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6.25rem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;16.25rem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="nc"&gt;.body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;grid-column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="err"&gt;...&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The leftmost part of the &lt;code&gt;sidebar&lt;/code&gt; contains &lt;code&gt;flexboxes&lt;/code&gt; likewise many other parts of the entire application.&lt;/p&gt;

&lt;p&gt;To ensure proper responsiveness, notable breakpoints were screens with maximum width of &lt;code&gt;1250px&lt;/code&gt;, &lt;code&gt;960px&lt;/code&gt;, &lt;code&gt;918px&lt;/code&gt;, &lt;code&gt;834px&lt;/code&gt;, &lt;code&gt;806px&lt;/code&gt;, &lt;code&gt;724px&lt;/code&gt;, &lt;code&gt;786px&lt;/code&gt;, &lt;code&gt;754px&lt;/code&gt;, &lt;code&gt;600px&lt;/code&gt;, &lt;code&gt;506px&lt;/code&gt;, &lt;code&gt;500px&lt;/code&gt;, &lt;code&gt;495px&lt;/code&gt;, &lt;code&gt;422px&lt;/code&gt;, &lt;code&gt;...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That was mouthful!!! There should be a better way!!! I couldn't figure that out though! Help me out using the comment section.&lt;/p&gt;

&lt;p&gt;All the styles and markups gave rise to the artifact below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4xxVTOot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v64xcfvnjzjcz0cn3p4q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4xxVTOot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v64xcfvnjzjcz0cn3p4q.png" alt="Slack clone"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One cool thing about the sojourn was the implementation and styling of slack-like rich-text editor using the deprecated JavaScript's &lt;code&gt;execCommand&lt;/code&gt;. It was fun and exciting.&lt;/p&gt;

&lt;p&gt;A bit of JavaScript handled the rich text editor and some toggles for showing and hiding some parts of the grids.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;// sidebar&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sideBarWrapper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;sideBarWrapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sidebar-wrapper-display&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sideBar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;sideBar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user-sidebar-display&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;closeSideBar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;closeSideBar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sideBar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sidebar-display&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;sideBarWrapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sidebar-wrapper-display&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All vanilla!!! For the rich text editor, this &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Editable_content"&gt;MDN guide&lt;/a&gt;&lt;sup id="fnref2"&gt;&lt;a href="#fn2"&gt;2&lt;/a&gt;&lt;/sup&gt; was my saviour.&lt;/p&gt;

&lt;p&gt;That's the bit I want to talk about. &lt;a href="https://sirneij.github.io/slack-clone-ui/"&gt;Kindly check it out&lt;/a&gt; and make suggestions.&lt;/p&gt;




&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;&lt;a href="https://www.theverge.com/2020/3/18/21184865/slack-redesign-update-sidebar-changes-available-now-download"&gt;Slack unveils its biggest redesign yet&lt;/a&gt; - by &lt;cite&gt;Tom Warren&lt;/cite&gt; &lt;a href="#fnref1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Editable_content"&gt;Making content editable&lt;br&gt;
Warning&lt;/a&gt; &lt;a href="#fnref2"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>html</category>
      <category>javascript</category>
    </item>
    <item>
      <title>🎬Build a Step Progress Bar | JavaScript✨</title>
      <author>Robson Muniz</author>
      <pubDate>Wed, 30 Jun 2021 21:16:23 +0000</pubDate>
      <link>https://dev.to/robsonmuniz16/build-a-step-progress-bar-javascript-4lep</link>
      <guid>https://dev.to/robsonmuniz16/build-a-step-progress-bar-javascript-4lep</guid>
      <description>&lt;p&gt;In this episode you will Learn how to build a Step Progress Bar with HTML, CSS, and JavaScript, step-by-step the easy way!&lt;/p&gt;




&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/qKjDXXkkg8I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;🏆 Recommended Projects 🏆&lt;br&gt;
🎬 Neumorphism Login Form | HTML &amp;amp; CSS&lt;br&gt;
➤&lt;a href="https://youtu.be/QWh0S-3D7uY"&gt;https://youtu.be/QWh0S-3D7uY&lt;/a&gt;&lt;br&gt;
🎬 Animated Sidebar Menu with HTML &amp;amp; CSS&lt;br&gt;
➤ Watch: &lt;a href="https://youtu.be/QPZrQ_xPVs4"&gt;https://youtu.be/QPZrQ_xPVs4&lt;/a&gt;&lt;br&gt;
🎬 Amazing Social Media Buttons Hover Effects | HTML &amp;amp; CSS&lt;br&gt;
➤ &lt;a href="https://youtu.be/P9pi4hq7BBA"&gt;https://youtu.be/P9pi4hq7BBA&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;🛴 Follow me on:&lt;br&gt;
👉&lt;a href="https://www.facebook.com/WebdevMadeEasy"&gt;https://www.facebook.com/WebdevMadeEasy&lt;/a&gt;&lt;/p&gt;




</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Getting Started with Machine Learning Models in the Browser with TensorFlow.js</title>
      <author>Aidan Gee</author>
      <pubDate>Wed, 30 Jun 2021 21:06:29 +0000</pubDate>
      <link>https://dev.to/aidangee/getting-started-with-machine-learning-models-in-the-browser-with-tensorflow-js-14ah</link>
      <guid>https://dev.to/aidangee/getting-started-with-machine-learning-models-in-the-browser-with-tensorflow-js-14ah</guid>
      <description>&lt;p&gt;Originally posted here: &lt;a href="https://aidangee.dev/blog/getting-started-with-tensorflow-in-the-browser"&gt;https://aidangee.dev/blog/getting-started-with-tensorflow-in-the-browser&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;There were a great set of talks this year at &lt;a href="https://www.google.com/io"&gt;Google IO 2021&lt;/a&gt;, one that piqued my interest was &lt;a href="https://www.youtube.com/watch?v=qKkjCQlS1g4"&gt;this talk on machine learning &amp;amp; TensorFlow&lt;/a&gt;. There is a lot great new stuff here, but I'll summarize some key points from a web perspective. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; TensorFlow Lite models can now directly be run on the web in the browser 🎉&lt;/li&gt;
&lt;li&gt; Supports running all TFLite Task Library models for example image classification, objection detection, image segmentation and NLP&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I wanted to see how viable it is to use ML models on device in the browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tensorflowjs-amp-pretrained-models"&gt;
  &lt;/a&gt;
  TensorFlow.js &amp;amp; Pre-trained Models
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.tensorflow.org/js/"&gt;TensorFlow.js&lt;/a&gt; is a library for machine learning in JavaScript and can be used both in the browser and Node.js. We can use this library to build, run and train supported models. &lt;/p&gt;

&lt;p&gt;What is great for starters in the ML world (like me), is that this library comes with a &lt;a href="https://www.tensorflow.org/js/models"&gt;number of pre-trained TensorFlow.js models&lt;/a&gt;. So anyone can jump in and start using things like image object detection or text toxicity detection without the huge barrier to entry that is model training. &lt;/p&gt;

&lt;p&gt;Let's take a look at how the code looks for running object detection on an image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Note: Require the cpu and webgl backend and add them to package.json as peer dependencies.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tensorflow/tfjs-backend-cpu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tensorflow/tfjs-backend-webgl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tensorflow-models/coco-ssd&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Load the model.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="c1"&gt;// Classify the image.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;detect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Predictions: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So in just a few lines of JavaScript we have managed to load and run a ML Model in the browser on an image 🎉. This is not even restricted to images, the detect method will accept a canvas element, video element and a &lt;a href="https://js.tensorflow.org/api/latest/#tensor"&gt;3D tensor shape&lt;/a&gt;. So quite quickly here, we could do something like track objects as a video is playing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Note: Require the cpu and webgl backend and add them to package.json as peer dependencies.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tensorflow/tfjs-backend-cpu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tensorflow/tfjs-backend-webgl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tensorflow-models/coco-ssd&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;videoEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;video&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Load the model.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="c1"&gt;// Classify the frame of the video.&lt;/span&gt;
  &lt;span class="c1"&gt;// timeupdate is a quick way to run this as the video plays&lt;/span&gt;
  &lt;span class="nx"&gt;videoEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;timeupdate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;detect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;videoEl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Predictions: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The predictions you get back from the detect function look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="p"&gt;[{&lt;/span&gt;
    &lt;span class="na"&gt;bbox&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;person&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8380282521247864&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;bbox&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sports ball&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.74644153267145157&lt;/span&gt;
  &lt;span class="p"&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note : The position (bbox) variables you get back will be based on the original video resolution. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You could use this data to detect some context of what was in a particular video or track certain objects in the video as it plays ... all in the browser. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qCKnR3zN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/wubo/image/upload/c_scale%2Cf_auto%2Cq_72%2Cw_1435/v1625085017/blog/ml-obbect-recognition-video.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qCKnR3zN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/wubo/image/upload/c_scale%2Cf_auto%2Cq_72%2Cw_1435/v1625085017/blog/ml-obbect-recognition-video.png" alt="object recognition highlighted football in a video"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thoughts"&gt;
  &lt;/a&gt;
  Thoughts
&lt;/h2&gt;

&lt;p&gt;I could not believe how easy this was to get going with. The pre-trained models are a breeze to use and I would definitely recommend checking out the &lt;a href="https://www.tensorflow.org/js/models"&gt;full list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Depending on how you plan to use this functionality, something to keep in mind is the download times of models and how this effects the UX. For example, I found the Coco SSD model to take about 10 seconds to download on a solid Wi-Fi connection. So if your application relied on this, you are going to have extremely long start up times and probably frustrated users. Loading them in the background before the user needs them would be a nicer solution. &lt;/p&gt;

&lt;p&gt;I am excited to see this space develop over the next few years. I think we all know about the growth of AI / ML but having this be available to run so easily with JavaScript in the browser can only help accelerate it's usage. &lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>[Github] What is Git? How do we use it?</title>
      <author>Yuma-Tsushima </author>
      <pubDate>Wed, 30 Jun 2021 20:59:40 +0000</pubDate>
      <link>https://dev.to/yumatsushima07/github-what-is-git-how-do-we-use-it-3b43</link>
      <guid>https://dev.to/yumatsushima07/github-what-is-git-how-do-we-use-it-3b43</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-git"&gt;
  &lt;/a&gt;
  What is Git?
&lt;/h2&gt;

&lt;p&gt;If you are a software developer then you must be familiar with Git. Git is vastly used for version/revision control for software development for controlling source code.&lt;/p&gt;

&lt;p&gt;It is a distributed revision control system. Git is better than SVN for speed, data integrity and also support non-linear workflows. &lt;/p&gt;

&lt;p&gt;Git was initially designed and developed by Linus Torvalds for Linux kernel development purpose. Yes you read it correct.&lt;/p&gt;

&lt;p&gt;he creator of the Linux kernel designed and developed Git. Git was initially used for updating source code of the Linux kernel from around the world. &lt;/p&gt;

&lt;p&gt;Like any other version control systems, every Git working directory has a full-fledged repository with complete history and full version-tracking capabilities.&lt;/p&gt;

&lt;p&gt;Git is free software distributed under the terms of the GNU General Public License. Git utility or git tool is available with almost every Linux distributions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works?
&lt;/h2&gt;

&lt;p&gt;Git deals with  data more like a set of snapshots, snapshots of a miniature filesystem. Every time you commit your file, or save the state of your project in the git project repository, it basically takes a snapshots. So, it stores a reference to that snapshot of what all of your files look like at that moment of commit. To be efficient, fast &amp;amp; accurate if files have not changed, Git does not store that file again for further more changes with your commit. It just simply stored a link to the previous identical file it has already stored.&lt;/p&gt;

&lt;p&gt;It is a great tool with great efficiency for handling  large projects with hundred of thousand files with large project size. Git is primarily developed for Linux. Now a days, it also supports most major operating systems including BSD, Solaris, OS X, and even for Microsoft Windows.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-i-can-use-git"&gt;
  &lt;/a&gt;
  How I can use Git?
&lt;/h2&gt;

&lt;p&gt;There are a lot of different ways you can use Git. Most of the time we use command line tools and yes there are many graphical user interfaces (GUI) based software available as well of varying capabilities. I will be using Git on the command line or terminal over here. Command line / terminal is the  place where you can run all Git commands where as you can’t get all the features of Git on most of the GUIs based Git tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-git"&gt;
  &lt;/a&gt;
  Installing Git
&lt;/h2&gt;

&lt;p&gt;You need to install Git before you start using it. Though most of the Linux distributions comes up with Git as preinstalled. Even if it is already there, it’s good to update it to the latest version.&lt;/p&gt;

&lt;p&gt;For RedHat / CentOS / Fedora, use the following command in the terminal to install it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;yum &lt;span class="nb"&gt;install &lt;/span&gt;git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If you’re on a Debian-based distribution like Ubuntu, try the following command to install it:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;For openSUSE, use the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;zypper &lt;span class="nb"&gt;install &lt;/span&gt;git-core git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;For more different Linux distributions, there are instructions for installing on this &lt;a href="https://git-scm.com/download/linux"&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-your-identity"&gt;
  &lt;/a&gt;
  Create your identity
&lt;/h2&gt;

&lt;p&gt;First,  you need to  set your user name and email address with git. This is very important as every Git commits you made uses this information.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"Username here"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email xyz@xyz.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#check-your-git-setting"&gt;
  &lt;/a&gt;
  Check your Git setting
&lt;/h2&gt;

&lt;p&gt;To check your git setting, issue the following command in your terminal:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#cloning-a-git-repository"&gt;
  &lt;/a&gt;
  Cloning a Git repository
&lt;/h2&gt;

&lt;p&gt;First, you must clone the git repository for your project to start with and only then you can commit your changes.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://gitlab.com/xyz/abc.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The above command is showing how you can clone a git repository from a server. The server used in this example for git repository is gitlab and &lt;code&gt;abc.git&lt;/code&gt; is the name. You can use the IP address of the git hosting server or the FQDN of that git sever.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#initialize-a-new-git-repository"&gt;
  &lt;/a&gt;
  Initialize a new Git repository
&lt;/h2&gt;

&lt;p&gt;If you want to start your own git repository sever for your codebase, issue the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will initiate a new git repository and the machine/host can be now used as a git repository server for that particular codebase. You can access the newly created repository by using the host’s IP or hostname.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#checking-git-status"&gt;
  &lt;/a&gt;
  Checking Git status
&lt;/h2&gt;

&lt;p&gt;You can check the status of files in the index versus the working directory for your git repository by using the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; git status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#add-a-new-file-to-git-repository"&gt;
  &lt;/a&gt;
  Add a new file to Git repository
&lt;/h2&gt;

&lt;p&gt;Lets add a file to your newly created git repo. Go to your working folder for your source code.&lt;/p&gt;

&lt;p&gt;Now create a demo file by issuing the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nano demo.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Add these following lines to the &lt;code&gt;demo.txt&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;This is a demo file. This is second line of the file.&lt;/p&gt;

&lt;p&gt;Our demo file has been created. Next, add this newly created file to the index of the git repo by issuing.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; git add demo.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, we need to commit this to your git repo by using:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s1"&gt;'first commit'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will add the file “demo.txt” with it’s file content and with a comment “first commit” so that you can search it later.&lt;/p&gt;

&lt;p&gt;Now, add a third line and commit it again.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nano demo.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Add these following content to the file.&lt;/p&gt;

&lt;p&gt;This is a demo file. This is second line of the file. This is the third line.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s1"&gt;'second commit'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will update the file accordingly.&lt;/p&gt;

&lt;p&gt;Now, push the changes to the repository.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will push the changes into the master branch.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#deleting-a-file-from-git"&gt;
  &lt;/a&gt;
  Deleting a file from Git
&lt;/h2&gt;

&lt;p&gt;Say, you need to remove a file from your git. Just do the following one after another.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; git &lt;span class="nb"&gt;rm &lt;/span&gt;documentation.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"documentation.txt  file removed"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You are done removing documentation.txt from your git repository.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#git-reset"&gt;
  &lt;/a&gt;
  Git Reset
&lt;/h2&gt;

&lt;p&gt;If you want to reset your index and working directory to the state of your last commit or to any commit then issue the following command in the terminal&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; commit number/HEAD
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#git-stash"&gt;
  &lt;/a&gt;
  Git Stash
&lt;/h2&gt;

&lt;p&gt;Say you made changes in one of your file but you don’t want to commit it to the repo then you can stash it and also you can push it later as well.&lt;/p&gt;

&lt;p&gt;Simply type...&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;git stash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#git-pull"&gt;
  &lt;/a&gt;
  Git Pull
&lt;/h2&gt;

&lt;p&gt;If you want to sync your local git codebase with the latest codebase of the git remote server repository, you need to use the following command. It will fetches files from the remote repository and merges it with your local one.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; git pull
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#viewing-log-file"&gt;
  &lt;/a&gt;
  Viewing log file
&lt;/h2&gt;

&lt;p&gt;If you want to see a listing of commits on a master branch including details with logs, type the following&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; git log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#checking-git-branch"&gt;
  &lt;/a&gt;
  Checking Git branch
&lt;/h2&gt;

&lt;p&gt;A Git repository can have multiple branch including master branch. To know your git branch, issue the following on your terminal&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; git branch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;I tried to cover all the very basics of git in this article. I don’t want to make it complex. That’s why I don’t dive deep onto it. Hope you liked it. Thank you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Yuma-Tsushima07"&gt;
        Yuma-Tsushima07
      &lt;/a&gt; / &lt;a href="https://github.com/Yuma-Tsushima07/Yuma-Tsushima07"&gt;
        Yuma-Tsushima07
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Readme file
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
      &lt;h1&gt;
Welcome to Yuma-Tsushima's Github page!&lt;/h1&gt;
  &lt;p&gt;
  &lt;b&gt;Visitor count &lt;/b&gt;&lt;br&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/57a70d5f50ac5d203e9b6bd912fc9e4b01c8d40c215b656821b455d1f18f928f/68747470733a2f2f70726f66696c652d636f756e7465722e676c697463682e6d652f59756d612d5473757368696d6130372f636f756e742e737667"&gt;&lt;img src="https://camo.githubusercontent.com/57a70d5f50ac5d203e9b6bd912fc9e4b01c8d40c215b656821b455d1f18f928f/68747470733a2f2f70726f66696c652d636f756e7465722e676c697463682e6d652f59756d612d5473757368696d6130372f636f756e742e737667"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.patreon.com/Order_of_the_Black_Knights_C2_bot" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6a6769e2d2eb0567975317a589549beaa5db99df73ce9d6f5f9004ec12eee28e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f537570706f72742d42757925323075732532306125323050697a7a612d6f72616e67652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d70617472656f6e" alt="Support"&gt;&lt;/a&gt;
&lt;a href="https://disboard.org/server/711260885531885648" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/018986f113096a2680c8fa03f313cdf0b8adf24be6d7b9df04b81f14e7897680/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43322773253230506c6163652d4a6f696e2532307573253230666f7225323061253230636861742d626c75652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d646973636f7264" alt="Discord"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/mNAWykv67W" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3b2ffae6fa2d5de61341af99a4e69ce1546047acebcb5039aa106a8411b2209/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6f696e253230746f253230636861742d4379626572417274427974652d626c75652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d646973636f7264" alt="Discord"&gt;&lt;/a&gt;
&lt;a href="https://soundcloud.com/0c7av3h4ck5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b8ae02d15a55c4261d919a7dd81f80335cf71d017eb6b737cc32698877f322f9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536f756e642d436c6f75642d7265642e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d736f756e64636c6f7564" alt="SoundCloud"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/Yuma-Tsushima07/Yuma-Tsushima07/blob/main/assets/terminalpython.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--30kNr2f4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Yuma-Tsushima07/Yuma-Tsushima07/raw/main/assets/terminalpython.png"&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;h3&gt;
About Myself&lt;/h3&gt;
      &lt;p&gt;Hello, my name is Yuma-Tsushima (frequently shortened to Yuma). I am an ambitious coder, and I enjoy coding in JavaScript (mainly). I also love making websites using HTML, CSS and (of course) JS! I started programming (self taught) at the age of 13. Originally, I came from the creative field ; I draw/sing/animate/make music.  &lt;/p&gt;
   

&lt;h3&gt;
Talents and Hobbies&lt;/h3&gt;
&lt;p&gt;I love drawing (I have been drawing all of my life). I play strategy games, I code and I do CTFs! I am also good at animation, making AMVs and image editing. My favourite game is Mindustry, followed by Flow Free and Sudoku. I love watching anime (I love Code Geass - I relate to Lelouch a lot) and I aspire to create my own anime!&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/2ee6b04a74d2e5f3c133f042cf9a4c517c12de84f3b843a716694fc09474e417/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233653334633236266d6573736167653d44726177696e67253230253743253230412a"&gt;&lt;img src="https://camo.githubusercontent.com/2ee6b04a74d2e5f3c133f042cf9a4c517c12de84f3b843a716694fc09474e417/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233653334633236266d6573736167653d44726177696e67253230253743253230412a" alt="Drawing"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9107ed8d09376ce206e2398fd0513fae0bb422cf18f2c863fdeb4cff1da69c42/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233353633643763266d6573736167653d4d7573696325323025374325323042"&gt;&lt;img src="https://camo.githubusercontent.com/9107ed8d09376ce206e2398fd0513fae0bb422cf18f2c863fdeb4cff1da69c42/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233353633643763266d6573736167653d4d7573696325323025374325323042" alt="Music"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0f8e7c7e97a090de494030cec5e9c53271971a05cc99cc1877be133211103b2f/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233326237343839266d6573736167653d4469676974616c253230417274776f726b253230253743253230383025"&gt;&lt;img src="https://camo.githubusercontent.com/0f8e7c7e97a090de494030cec5e9c53271971a05cc99cc1877be133211103b2f/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233326237343839266d6573736167653d4469676974616c253230417274776f726b253230253743253230383025" alt="Digital Artwork"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e00451d5e1f51b60407fef6ea1383867d43e4520e2ba2b9e90a10defea549d16/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363841303633266d6573736167653d49435425323025374325323041"&gt;&lt;img src="https://camo.githubusercontent.com/e00451d5e1f51b60407fef6ea1383867d43e4520e2ba2b9e90a10defea549d16/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363841303633266d6573736167653d49435425323025374325323041" alt="ICT"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/06f4f740a9fa9a5b4bc25b358d6e98df500cccd4f936b4a8bb020ce509b12e23/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363144424642266d6573736167653d456c656374726f6e69637325323025374325323041"&gt;&lt;img src="https://camo.githubusercontent.com/06f4f740a9fa9a5b4bc25b358d6e98df500cccd4f936b4a8bb020ce509b12e23/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363144424642266d6573736167653d456c656374726f6e69637325323025374325323041" alt="Electronics"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f4a546b3fe39d4cfad9b832e36d1383b539c29e2876293b13466c3cfd6881a68/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d333036393938266d6573736167653d44657369676e73253230253743253230383525"&gt;&lt;img src="https://camo.githubusercontent.com/f4a546b3fe39d4cfad9b832e36d1383b539c29e2876293b13466c3cfd6881a68/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d333036393938266d6573736167653d44657369676e73253230253743253230383525" alt="Desgins"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8e0c219dec1ad0f1a1e6567edcbd25c8df8afddc0952dcd3f4e328f7d2074d65/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363032433530266d6573736167653d576562253230446576656c6f706d656e74253230253743253230383025"&gt;&lt;img src="https://camo.githubusercontent.com/8e0c219dec1ad0f1a1e6567edcbd25c8df8afddc0952dcd3f4e328f7d2074d65/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363032433530266d6573736167653d576562253230446576656c6f706d656e74253230253743253230383025" alt="Web dev"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/307207f36ded5f349f64978e2c8c68c08cd2f1474639832722a0ff0eff976491/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d373634616263266d6573736167653d5374726174656779253230253743253230393525"&gt;&lt;img src="https://camo.githubusercontent.com/307207f36ded5f349f64978e2c8c68c08cd2f1474639832722a0ff0eff976491/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d373634616263266d6573736167653d5374726174656779253230253743253230393525" alt="Strategy"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt; Check out my work!: &lt;/b&gt; &lt;br&gt;
❯ Soundcloud : &lt;a href="https://soundcloud.com/0c7av3h4ck5" rel="nofollow"&gt;0c7av3h4ck5&lt;/a&gt; &lt;br&gt;
❯ Discord : &lt;a href="https://discord.gg/mNAWykv67W" rel="nofollow"&gt;{CyberArtByte}&lt;/a&gt;  &lt;br&gt;
❯ Artwork : &lt;a href="https://medibang.com/u/AcceleratorArts07/" rel="nofollow"&gt;AcceleratorArts07&lt;/a&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Recent Medium&lt;/b&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Yuma-Tsushima07/Yuma-Tsushima07"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#follow-me"&gt;
  &lt;/a&gt;
  Follow me!
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/Yuma-Tsushima07"&gt;https://github.com/Yuma-Tsushima07&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Medium: &lt;a href="https://0xv37r1x3r.medium.com/"&gt;https://0xv37r1x3r.medium.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;SoundCloud: &lt;a href="https://soundcloud.com/0c7av3h4ck5"&gt;https://soundcloud.com/0c7av3h4ck5&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#discord-servers"&gt;
  &lt;/a&gt;
  Discord Servers!!
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Bounty Hunters&lt;/strong&gt;: An amazing bug hunting community full of developers and exploiters!!!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href="https://discord.gg/J5PsgKqdWq"&gt;https://discord.gg/J5PsgKqdWq&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;CyberArtByte&lt;/strong&gt;: My server full of bling and joy!!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href="https://discord.com/invite/mNAWykv67W"&gt;https://discord.com/invite/mNAWykv67W&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#new-soundcloud-track"&gt;
  &lt;/a&gt;
  New Soundcloud Track!!
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="100%" height="166" src="https://w.soundcloud.com/player/?url=https://soundcloud.com/0c7av3h4ck5/hack-with-your-heart-0c7av3h4ck5&amp;amp;auto_play=false&amp;amp;color=%23000000&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;show_teaser=true"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>github</category>
      <category>linux</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
