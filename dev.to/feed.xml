<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Getting Started with Azure: Pragmatic Guide for Beginners</title>
      <author>Vitaliy Kononenko</author>
      <pubDate>Sun, 09 May 2021 15:46:23 +0000</pubDate>
      <link>https://dev.to/konvio/getting-started-with-azure-pragmatic-guide-for-beginners-4mde</link>
      <guid>https://dev.to/konvio/getting-started-with-azure-pragmatic-guide-for-beginners-4mde</guid>
      <description>&lt;p&gt;Microsoft Azure is the second-most popular cloud computing platform, which provides several hundreds of products and services. &lt;/p&gt;

&lt;p&gt;For developers that want to start their learning journey, it can be difficult to find an efficient path because of the huge amount of study materials. &lt;/p&gt;

&lt;p&gt;In this guide, I would like to share the optimal strategy on how to get started with Azure and not be lost in the jungles of its capabilities.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-0-create-free-tier-azure-account"&gt;
  &lt;/a&gt;
  Step 0: Create Free Tier Azure Account
&lt;/h1&gt;

&lt;p&gt;Go to  &lt;a href="https://azure.microsoft.com"&gt;Azure Home Page&lt;/a&gt; and follow the instructions to create a free tier account.&lt;/p&gt;

&lt;p&gt;You will need to log in to your existing Microsoft account, verify your identity via credit card and phone number. The credit card won't be charged unless you switch to paid subscriptions explicitly.&lt;/p&gt;

&lt;p&gt;You will receive  &lt;a href="https://azure.microsoft.com/en-us/free/free-account-faq/"&gt;Free Tier&lt;/a&gt; for 12 months and $200 credit for 30 days. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1-understand-basic-terminology"&gt;
  &lt;/a&gt;
  Step 1: Understand Basic Terminology
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Subscription&lt;/strong&gt; - is a primary mechanism for billing purposes. Depending on the type, these can be free subscriptions, Pay-As-You-Go (Post-Paid) subscriptions, or a pre-paid subscriptions. Every resource is linked to a subscription. Everything will suspend or halt if the subscription carries zero credit unless the subscription is a post-paid pay-as-you-go subscription.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Service&lt;/strong&gt; - a basic building block of the Azure platform. You can think about Azure as a set of services. There are three types of services: infrastructure as a service (IaaS), platform as a service (PaaS), and software as a service (SaaS). As a developer, you will deal with PaaS and IaaS. However, as a user of Azure Platform, you can deal with SaaS also. It is important to understand the difference between these types of services and classify Azure services appropriately when dealing with them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Resource&lt;/strong&gt; - service instance managed by Azure. In order to use a service, you have to create an instance of it. An allocated service instance is a resource.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Resource group&lt;/strong&gt; - a logical construct that groups multiple resources together so they can be managed as a single entity based on lifecycle and security. Every resource must belong to a resource group. A resource group has a region and subscription associated with it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#step-2-learn-azure-fundamentals"&gt;
  &lt;/a&gt;
  Step 2: Learn Azure Fundamentals
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/learn/"&gt;Microsoft Learn&lt;/a&gt; is a free online platform that has a lot of study guides on Azure. Most importantly, it has hands-on exercises, so that you can get practical experience from the beginning. You will be provided with a sandbox subscription so that you can complete exercises without draining your free tier that can be used for your personal experiments.&lt;/p&gt;

&lt;p&gt;I recommend getting started with &lt;a href="https://docs.microsoft.com/en-us/learn/paths/az-900-describe-cloud-concepts/"&gt;Azure Fundamentals&lt;/a&gt; - a six-part series that gives a good overview of the most important Azure services and cloud computing principles in general. The learning path is all you need to gen foundational knowledge and also pass  &lt;a href="https://docs.microsoft.com/en-us/learn/certifications/exams/az-900"&gt;AZ-900&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-3-learn-developer-guide"&gt;
  &lt;/a&gt;
  Step 3: Learn Developer Guide
&lt;/h1&gt;

&lt;p&gt;After you have a basic understanding of Azure services, you can focus on learning how you can apply Azure to develop applications using the technology stack you are the most familiar with. There are Developer Guides for the most popular languages which can be a great start.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://docs.microsoft.com/en-us/azure/developer/python/"&gt;Python&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://docs.microsoft.com/en-us/dotnet/azure/"&gt;.NET&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://docs.microsoft.com/en-us/azure/developer/javascript/"&gt;JavaScript &amp;amp; Node.js&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://docs.microsoft.com/en-us/azure/developer/java/"&gt;Java &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://docs.microsoft.com/en-us/azure/developer/go/"&gt;Go&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#step-4-explore-azure-documentation"&gt;
  &lt;/a&gt;
  Step 4: Explore Azure Documentation
&lt;/h1&gt;

&lt;p&gt;At this stage, I recommend getting comfortable with  &lt;a href="https://docs.microsoft.com/en-us/azure/?product=featured"&gt;Azure Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you know how to apply Azure for your preferred programming language, you should be aware of which Azure Services are the most useful for you. &lt;/p&gt;

&lt;p&gt;You should not memorize everything, just be aware of the capabilities a service of your interest provides, how to utilize their capabilities, and what you can find on documentation.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-5-read-architecture-guide"&gt;
  &lt;/a&gt;
  Step 5: Read Architecture Guide
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.toAzure%20Architecture%20Center"&gt;Azure Architecture Center&lt;/a&gt; is a one-stop shop for all things related to architecture in Azure. You can find the best practices, design patterns, common architectures, and guides on how to design cloud applications here.&lt;/p&gt;

&lt;p&gt;I recommend read &lt;a href="https://docs.microsoft.com/en-us/azure/architecture/guide/"&gt;Azure Application Architecture Guide&lt;/a&gt; at the beginning, and refer to Azure Architecture Center from time as your app grows.&lt;/p&gt;

&lt;p&gt;# Step 6: Develop Your Own App with Free Tier&lt;/p&gt;

&lt;p&gt;It is very important to get hands-on experience while learning something new. At this stage, it will be useful to build small, but end-to-end cloud applications using familiar technology and services. For example, a small API that connects to a database and performs some tasks.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-7-explore-certifications-and-learning-paths"&gt;
  &lt;/a&gt;
  Step 7: Explore Certifications and Learning Paths
&lt;/h1&gt;

&lt;p&gt;Certification preparation is a great way to learn something in a structured way. &lt;/p&gt;

&lt;p&gt;Microsoft has a lot of &lt;a href="https://docs.microsoft.com/en-us/learn/certifications/browse/?products=azure"&gt;Azure Certifications&lt;/a&gt; to offer. Most importantly, every certification has a learning path. &lt;/p&gt;

&lt;p&gt;I suggest picking certification of interest and following the learning path associated with it, although taking an exam is optional. &lt;/p&gt;

&lt;p&gt;Here are the most relevant Azure Certifications for developers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/learn/certifications/azure-fundamentals/"&gt;Azure Fundamentals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/learn/certifications/azure-data-fundamentals/"&gt;Azure Data Fundamentals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href="https://docs.microsoft.com/en-us/learn/certifications/azure-developer/"&gt;Azure Developer Associate&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/learn/certifications/azure-data-engineer/"&gt;Azure Data Engineer Associate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/learn/certifications/azure-solutions-architect/"&gt;Azure Solutions Architect Expert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/learn/certifications/devops-engineer/"&gt;DevOps Engineer Expert&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Microsoft Azure is a big and mature cloud platform that has a lot to offer. At the beginning of the learning journey, it is very important not to focus on everything at once, but to choose the most relevant services and technologies and master them to get started. It will be much easier to continue learning Azure once you have solid knowledge and hands-on experience with its core services.&lt;/p&gt;

</description>
      <category>azure</category>
      <category>cloud</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My Dev Journey: Week 1</title>
      <author>Harry York</author>
      <pubDate>Sun, 09 May 2021 15:37:26 +0000</pubDate>
      <link>https://dev.to/harryyork97/my-dev-journey-week-1-47d</link>
      <guid>https://dev.to/harryyork97/my-dev-journey-week-1-47d</guid>
      <description>&lt;p&gt;So I've just finished my first week at Northcoders, it was introduction week. This is going to be my recap of what I've learnt.&lt;/p&gt;

&lt;p&gt;Check me out on &lt;a href="https://github.com/harryyork97"&gt;GitHub&lt;/a&gt; and &lt;a href="https://twitter.com/grand_oldduke"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-ive-learnt-this-week"&gt;
  &lt;/a&gt;
  What I've learnt this week
&lt;/h2&gt;

&lt;p&gt;This week has covered a lot of the same content as in the pre-course materials, but this definitely helped solidify the knowledge. It also gave room for everyone to ask questions and acclimatise to remote learning and how the tutors at NC teach. Here's a selection of some of the topics that have been covered this week, and the things that I found particularly interesting!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#version-control-and-starting-to-learn-how-to-pair-program"&gt;
  &lt;/a&gt;
  Version Control and starting to learn how to pair program.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I'd only used Git and GitHub by myself before, so getting to learn alongside another student, getting to know the process of working collaboratively and other people at the same time was really useful.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#functions-and-execution-context"&gt;
  &lt;/a&gt;
  Functions and Execution Context.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I found this super interesting because knowing how the code is run and computed has made it clear why some facets of JS behave the way they do.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#understanding-errors"&gt;
  &lt;/a&gt;
  Understanding Errors!
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Again super interesting because learning to read what the error message is telling you, solves half of the problem for you (in most cases 😅).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#regular-expressions"&gt;
  &lt;/a&gt;
  Regular Expressions! 💜
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Before this, I found RegEx daunting in that at face value it doesn't immediately make sense, but taking a deeper dive into what makes it work with a tool like RegExr has removed the worries I did have.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#array-methods"&gt;
  &lt;/a&gt;
  Array Methods
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;They're just really fun to use. 😅&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lastly-my-favourite-thing"&gt;
  &lt;/a&gt;
  Lastly, my favourite thing
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;How much more comfortable I've become using my terminal!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#resources-ive-found-useful-this-week"&gt;
  &lt;/a&gt;
  Resources I've found useful this week!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN&lt;/a&gt; - as always.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://devdocs.io"&gt;Devdocs.io&lt;/a&gt; - the breadth of easily accessible info here is incredible!.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://regexr.com"&gt;regexr.com&lt;/a&gt;  - getting to grips with the basics of Regular Expressions would be a lot harder without somewhere to sketch ideas out and see them work.&lt;/li&gt;
&lt;li&gt;The Northcoders tutors - there won't be a week go by of these posts where this won't stand. But I can't understate how useful it is to have multiple people to hand at all times! A real luxury.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>bootcamp</category>
    </item>
    <item>
      <title>History of Operating Systems</title>
      <author>thesystemsprogrammer</author>
      <pubDate>Sun, 09 May 2021 15:36:27 +0000</pubDate>
      <link>https://dev.to/thesystemsprogrammer/history-of-operating-systems-51no</link>
      <guid>https://dev.to/thesystemsprogrammer/history-of-operating-systems-51no</guid>
      <description>&lt;p&gt;The primary goal of an operating system is to allow a programmer to make use of the hardware in a fast and secure manner. However, it took many iterations to get to this definition. Brinch Hansens describes seven phases of the operating system which helped us get to where we are today.&lt;/p&gt;

&lt;p&gt;I Open Shop&lt;br&gt;
II Batch Processing&lt;br&gt;
III Multiprogramming&lt;br&gt;
IV Time Sharing&lt;br&gt;
V Concurrent Programming&lt;br&gt;
VI Personal Computing&lt;br&gt;
VII Distributed Systems&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-shop"&gt;
  &lt;/a&gt;
  Open Shop
&lt;/h2&gt;

&lt;p&gt;The first operating system was almost like a computer at a modern day library. Nobody owns it, and if you wanted to use it, you may need to book some time out with a librarian. You may have an hour to use the computer, but you’ll spend at least 10 - 15 minutes getting set up: downloading applications you need, loading files, logging in to websites. It may not seem like much but the overhead definitely adds up. Operating systems in the 1950s were very similar, you would have to book some time out with a human operator and they would schedule a slot for you to run your job. It would take you a while to set up your program, but once you had, you were free to run it for the remainder of your slot.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#batch-processing"&gt;
  &lt;/a&gt;
  Batch Processing
&lt;/h2&gt;

&lt;p&gt;The next phase of operating systems came with the realization that a human wasn’t needed to schedule these jobs, it could be done with software! Users would load their program onto a tape and the computer would have to process the jobs on a first come first serve basis because it was efficient to go forward with tape but extremely slow to go backwards. Even if you have a 10 minute job scheduled to run, if it is behind another user’s 5 hour job, you will have to wait 5 hours for your job to begin running.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multiprogramming"&gt;
  &lt;/a&gt;
  Multiprogramming
&lt;/h2&gt;

&lt;p&gt;As computer hardware support began to improve, the idea of a hardware interrupt came about. This enabled multiprogramming - allowing an operating system to execute multiple programs at once. Additionally, memory hardware began to support random-access which enabled new scheduling policies outside of first-come first-serve. Atlas was the first operating system in this era and it introduced demand-paging (paging memory in and out of RAM to disk) and supervisor calls (the early version of system calls) both of which are still used today. Scientists began to see problems like starvation with certain process scheduling policies which gave birth to the next phase of operating system innovation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#timesharing"&gt;
  &lt;/a&gt;
  Timesharing
&lt;/h2&gt;

&lt;p&gt;Timesharing meant what it sounds like - users would be able to share time on a computer simultaneously. To each user, it would seem like they had the whole computer to itself. John McCarthy had pioneered this idea and helped build a small example of it. Multics, although not used much outside of MIT, had built a larger scale version of this timesharing idea and also implemented the first hierarchical file system. This would allow for private files and folders which catalyzed the idea of timesharing and multi-user systems. Then finally came Unix which is still the basis of many operating systems used today.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concurrent-programming"&gt;
  &lt;/a&gt;
  Concurrent Programming
&lt;/h2&gt;

&lt;p&gt;Concurrency became a big problem as more and more people were using multiprogrammed operating systems. Multiprogramming also made it much more difficult for people to reason about programs without significant thought. To make operating system concepts easier to grasp, scientists began developing abstractions for how things worked and the idea of semaphores. Both things helped reduce the amount of crashes in an operating system and enabled more scientists and engineers to contribute to improving and building an operating system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#personal-computing"&gt;
  &lt;/a&gt;
  Personal Computing
&lt;/h2&gt;

&lt;p&gt;The increase in availability for engineers to contribute to operating systems and the reduction in crashes vastly improved the usability of computers. This coupled with reductions in hardware costs made it much more feasible for consumers to own computers. GUIs began to gain more popularity and single-user operating systems gained more investment specifically from a company called Xerox. Xerox had built Xerox Star which was an operating system designed to mimic things found in an office: files, trash, calculators, etc… Xerox Star would soon inspire the birth of Macintosh.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#distributed-systems"&gt;
  &lt;/a&gt;
  Distributed Systems
&lt;/h2&gt;

&lt;p&gt;Distributed systems gave users the ability to turn 5 computers into one interface. Instead of the inter-process communication mechanisms used in prior operating systems, they could use remote procedure calls which would communicate to other machines over a local area network. However, this was non-trivial to implement since remote procedure calls, specifically transferring data over network, were more often subject to hardware failures. This meant that remote procedure calls to a different machine could fail and there had to be mechanisms to account for that. RPCs made it possible for users to access data from their local machine that didn’t necessarily exist on their local machine.&lt;/p&gt;

&lt;p&gt;There you have it, that’s an introduction to the history of operating systems. I think it is important to understand this before diving into modern day operating systems since it gives some context behind why certain design decisions were made. If you have any questions, don’t hesitate to reach me at &lt;a href="//mailto:contact@thesystemsprogrammer.com"&gt;contact@thesystemsprogrammer.com&lt;/a&gt; or DM me on Twitter &lt;a href="https://twitter.com/asystemshacker"&gt;@asystemshacker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;References&lt;br&gt;
&lt;a href="http://brinch-hansen.net/papers/2001b.pdf"&gt;http://brinch-hansen.net/papers/2001b.pdf&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>computerscience</category>
      <category>systems</category>
      <category>inthirtyseconds</category>
    </item>
    <item>
      <title>Introduction to HTTP Cookies</title>
      <author>Linda</author>
      <pubDate>Sun, 09 May 2021 15:29:12 +0000</pubDate>
      <link>https://dev.to/lindaojo/introduction-to-http-cookies-1pn2</link>
      <guid>https://dev.to/lindaojo/introduction-to-http-cookies-1pn2</guid>
      <description>&lt;p&gt;I heard the british use biscuits instead of cookies...weird.&lt;/p&gt;

&lt;p&gt;Okay, let's focus.&lt;/p&gt;

&lt;h3&gt;What are Cookies&lt;/h3&gt;

&lt;p&gt;Cookies, more properly called HTTP cookies, are small bits of data stored as text files on a browser. Cookies associate bits of data to a specific user.&lt;/p&gt;

&lt;p&gt;Cookies are mainly used for three purposes:&lt;/p&gt;

&lt;h4&gt;Session management&lt;/h4&gt;

&lt;p&gt;Logins, shopping carts, game scores, or anything else the server should remember.&lt;/p&gt;

&lt;h4&gt;Personalization&lt;/h4&gt;

&lt;p&gt;User preferences, themes, and other settings.&lt;/p&gt;

&lt;p&gt;For example, a user's preferences such as language and preferred theme could be saved for future sessions.&lt;/p&gt;

&lt;h4&gt;Tracking&lt;/h4&gt;

&lt;p&gt;Recording and analyzing user behavior.&lt;/p&gt;

&lt;p&gt;When a user visits a shopping website and searches for an item, the item gets saved in their browser history. Cookies can read browsing history so similar are shown to the user next time they visit.&lt;/p&gt;

&lt;h3&gt;Types of Cookies&lt;/h3&gt;

&lt;h4&gt;Session cookies&lt;/h4&gt;

&lt;p&gt;Session cookies, also known as 'temporary cookies', help websites recognise users and the information provided when they navigate through a website. Session cookies only retain information about a user's activities for as long as they are on the website. Once the web browser is closed, the cookies are deleted.&lt;/p&gt;

&lt;h4&gt;Permanent cookies&lt;/h4&gt;

&lt;p&gt;Permanent cookies are also known as 'persistent cookies'. They remain in operation even after the web browser has closed. For example they can remember login details and passwords so web users don't need to re-enter them every time they use a site.&lt;/p&gt;

&lt;h4&gt;Third-party cookies&lt;/h4&gt;

&lt;p&gt;Third-party cookies are installed by third-parties with the aim of collecting certain information from web users to carry out research into, for example, behaviour, demographics or spending habits. They are commonly used by advertisers who want to ensure that products and services are marketed towards the right target audience.&lt;/p&gt;

&lt;h4&gt;Flash cookies&lt;/h4&gt;

&lt;p&gt;Flash cookies are also known as 'super cookies'. They are independent from the web browser. They are designed to be permanently stored on a user's computer. These types of cookies remain on a user's device even after all cookies have been deleted from their web browser.&lt;/p&gt;

&lt;h4&gt;Zombie cookies&lt;/h4&gt;

&lt;p&gt;Zombie cookies are a type of flash cookie that are automatically re-created after a user has deleted them. This means they are difficult to detect or manage. They are often used in online games to prevent users from cheating, but have also been used to install malicious software onto a user's device.&lt;/p&gt;

&lt;h4&gt;Secure Cookies&lt;/h4&gt;

&lt;p&gt;Only HTTPS websites can set secure cookies, i.e., cookies with encrypted data. Mostly, the checkout or payment pages of e-commerce websites have secure cookies to facilitate safer transactions. Similarly, online banking websites are required to use secure cookies for security reasons.&lt;/p&gt;

&lt;h3&gt;Creating Cookies with Vanilla JavaScript&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;NOTE: For the code below to work, your browser has to have local cookies support turned on.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JavaScript can create, read, and delete cookies with the document.cookie property.&lt;/p&gt;

&lt;p&gt;With JavaScript, a cookie can be created like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name=Linda Ojo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also add an expiry date (in UTC time). By default, the cookie is deleted when the browser is closed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name=Linda Ojo; expires=Wed, 1 Oct 2022 12:00:00 UTC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With a path parameter, you can tell the browser what path the cookie belongs to. By default, the cookie belongs to the current page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name=Linda Ojo; expires=Wed, 1 Oct 2022 12:00:00 UTC; path=/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Handling Cookies using just vanilla JavaScript can get tedious real quick that's why I prefer using the &lt;a href="https://www.npmjs.com/package/js-cookie"&gt;JavaScript Cookie Package&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Handling Cookies with &lt;a href="https://www.npmjs.com/package/js-cookie"&gt;JavaScript Cookie Package&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;JavaScript Cookie is a simple lightweight JavaScript API for handling cookies. It works on all browsers, accepts any character, heavily tested and requires no dependency. Awesome!&lt;/p&gt;

&lt;h4&gt;Installation&lt;/h4&gt;

&lt;p&gt;Run the command below in your root folder to install js-cookies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;Cookie Attributes&lt;/h4&gt;




&lt;li&gt;Expire: define when the cookie will be removed. Value can be a Number which will be interpreted as days from time of creation or a Date instance.&lt;/li&gt;
&lt;br&gt;
&lt;li&gt;Path: a String indicating the path where the cookie is visible. &lt;/li&gt;
&lt;br&gt;
&lt;li&gt;Domain: a String indicating a valid domain where the cookie should be visible. The cookie will also be visible to all subdomains. &lt;/li&gt;
&lt;br&gt;
&lt;li&gt;Secure: Either true or false, indicating if the cookie transmission requires a secure protocol (https).
&lt;/li&gt;

&lt;h4&gt;Create a cookie&lt;/h4&gt;

&lt;p&gt;We can create a cookie that valid across the entire website by providing the name and the value as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Cookies&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-cookie&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;Cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can specify how long it takes for a cookie to expire by passing an object that contains the number of days before expiration as the third argument in the &lt;code&gt;Cookie.set&lt;/code&gt; method. The cookie that's created below expires after 7 days. By default, a cookie is removed when the user closes the browser.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Cookies&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-cookie&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;Cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;expires&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next,We can create an secure expiring cookie that's only valid to the path of the current page. The path is add to the previous Object which contains the expiration date.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;expires&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;secure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;Read cookie&lt;/h4&gt;

&lt;p&gt;The point of creating cookies is so we can use them later. We can access already existing cookies using the &lt;code&gt;Cookie.get&lt;/code&gt; method. Let's create and read a real cookie called 'theme'.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Cookies&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-cookie&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;Cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;Cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; 'dark'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also update a cookie by overriding it's value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the theme cookie has a value of 'light'.&lt;/p&gt;

&lt;p&gt;We can get all cookies present at once by calling &lt;code&gt;Cookies.get&lt;/code&gt; method without passing in any arguments as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;Cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; { theme: 'light' }&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;Delete cookie&lt;/h4&gt;

&lt;p&gt;You can delete cookies that are globally accessible running the &lt;code&gt;Cookie.remove&lt;/code&gt; method with just the first argument which is &lt;code&gt;value&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;cwhen deleting a cookie and you're not relying on the default attributes, you must pass the exact same path and domain attributes that were used to set the cookie.&lt;br&gt;
let's set and delete a cookie valid to the path of the current page as an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;direction&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;north&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;Cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;direction&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// fail!&lt;/span&gt;
&lt;span class="nx"&gt;Cookies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;direction&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt; &lt;span class="c1"&gt;// removed!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all folks. &lt;a href="https://lindaojo.com/articles"&gt;Read more of my articles&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to create a dot loading animation</title>
      <author>Stackfindover</author>
      <pubDate>Sun, 09 May 2021 15:16:54 +0000</pubDate>
      <link>https://dev.to/stackfindover/how-to-create-a-dot-loading-animation-hc7</link>
      <guid>https://dev.to/stackfindover/how-to-create-a-dot-loading-animation-hc7</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Hello, guys In this tutorial we will try to solve the mentioned query. and also we will learn how to create dot loading animation using HTML &amp;amp; CSS&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#common-query"&gt;
  &lt;/a&gt;
  Common Query
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Dot Loading Screen&lt;/li&gt;
&lt;li&gt;How to create a loading animation&lt;/li&gt;
&lt;li&gt;How to create an animated loading screen&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;See Also:-&lt;/strong&gt; &lt;a href="https://blogs.stackfindover.com/how-to-create-animated-share-button-with-tooltip-animation/"&gt;animated share button with tooltip&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-create-dot-loading-animation-step-by-step"&gt;
  &lt;/a&gt;
  How to create dot loading animation step by step
&lt;/h3&gt;

&lt;p&gt;First, we need to create two files &lt;strong&gt;index.html&lt;/strong&gt; and &lt;strong&gt;style.css&lt;/strong&gt; then we need to do code for it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step1"&gt;
  &lt;/a&gt;
  Step:#1
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Add below code inside index.html&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;How to create Dot Loading Animation&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"ie=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"loader-outer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"loader"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot dot-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot dot-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot dot-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot dot-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step2"&gt;
  &lt;/a&gt;
  Step:#2
&lt;/h3&gt;

&lt;p&gt;Then we need to add code for &lt;strong&gt;style.css&lt;/strong&gt; which code I provide in the below screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.loader&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.loader&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dot-1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;anim&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="m"&gt;0s&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dot-2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;anim&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="m"&gt;0.25s&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dot-3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;anim&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="m"&gt;0.50s&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dot-4&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;anim&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="m"&gt;0.75s&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;anim&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-create-dot-loading-animation-video-output"&gt;
  &lt;/a&gt;
  How to create dot loading animation video output
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/JvKqVJyBVXQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-create-dot-loading-animation-codepen-output"&gt;
  &lt;/a&gt;
  How to create dot loading animation Codepen output
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;We will update soon :)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Publish NuGet packages via Docker Release Container</title>
      <author>Oleksii Nikiforov</author>
      <pubDate>Sun, 09 May 2021 15:03:24 +0000</pubDate>
      <link>https://dev.to/nikiforovall/publish-nuget-packages-via-docker-release-container-21ej</link>
      <guid>https://dev.to/nikiforovall/publish-nuget-packages-via-docker-release-container-21ej</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;You can use Docker to push packages to a NuGet feed. This blog post shows how to release a NuGet package to Amazon CodeArtifact via Docker. Source code can be found at &lt;a href="https://github.com/NikiforovAll/docker-release-container-sample"&gt;https://github.com/NikiforovAll/docker-release-container-sample&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#general"&gt;
  &lt;/a&gt;
  General
&lt;/h2&gt;

&lt;p&gt;The idea behind having a release container is pretty straightforward - you can bundle artifacts and tools so the release mechanism is portable and unified because of Docker. Also, another advantage of building NuGet packages in Docker is that you don't need any dependencies installed on the build-server itself. I invite you to read Andrew's Lock post to get more details about the use case (&lt;a href="https://andrewlock.net/pushing-nuget-packages-built-in-docker-by-running-the-container/"&gt;https://andrewlock.net/pushing-nuget-packages-built-in-docker-by-running-the-container/&lt;/a&gt;). This blog post is focused on the practical side, let's dive into it by reviewing the Dockerfile:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Base layer is used for publishing. It contains &lt;code&gt;aws-cli&lt;/code&gt; and credential provider (&lt;code&gt;AWS.CodeArtifact.NuGet.CredentialProvider&lt;/code&gt;) so we can deploy to private NuGet feed as described in &lt;a href="https://docs.aws.amazon.com/codeartifact/latest/ug/nuget-cli.html"&gt;here&lt;/a&gt;. Please see the excellent guide on how to work with Docker and NuGet feeds &lt;a href="https://github.com/dotnet/dotnet-docker/blob/main/documentation/scenarios/nuget-credentials.md"&gt;https://github.com/dotnet/dotnet-docker/blob/main/documentation/scenarios/nuget-credentials.md&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Build layer is used for building and packing.&lt;/li&gt;
&lt;li&gt;Entrypoint defines custom publishing script, essentially, &lt;code&gt;dotnet nuget push&lt;/code&gt; is called. Note that, you can specify additional arguments. (e.g: override &lt;code&gt;--source&lt;/code&gt; or provide &lt;code&gt;--api-key&lt;/code&gt;).
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; mcr.microsoft.com/dotnet/core/sdk:3.1-buster AS base&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt &lt;span class="nb"&gt;install &lt;/span&gt;unzip &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; curl
&lt;span class="k"&gt;RUN &lt;/span&gt;curl &lt;span class="s2"&gt;"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="s2"&gt;"awscliv2.zip"&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;unzip awscliv2.zip &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./aws/install

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /artifacts&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;dotnet new tool-manifest &lt;span class="nt"&gt;--name&lt;/span&gt; manifest
&lt;span class="k"&gt;RUN &lt;/span&gt;dotnet tool &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--ignore-failed-sources&lt;/span&gt; AWS.CodeArtifact.NuGet.CredentialProvider
&lt;span class="k"&gt;RUN &lt;/span&gt;dotnet codeartifact-creds &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; mcr.microsoft.com/dotnet/sdk:5.0-buster-slim AS build&lt;/span&gt;
&lt;span class="k"&gt;ARG&lt;/span&gt;&lt;span class="s"&gt; Configuration="Release"&lt;/span&gt;

&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; DOTNET_CLI_TELEMETRY_OPTOUT=true \&lt;/span&gt;
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE=true

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /src&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; ["src/ReleaseContainerSample/ReleaseContainerSample.csproj", "src/ReleaseContainerSample/"]&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; ["tests/ReleaseContainerSample.Tests/ReleaseContainerSample.Tests.csproj", "tests/ReleaseContainerSample.Tests/"]&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;dotnet restore &lt;span class="s2"&gt;"src/ReleaseContainerSample/ReleaseContainerSample.csproj"&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;dotnet build &lt;span class="s2"&gt;"src/ReleaseContainerSample"&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="nt"&gt;--configuration&lt;/span&gt; &lt;span class="nv"&gt;$Configuration&lt;/span&gt;
    &lt;span class="c"&gt;# --no-restore&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;dotnet &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s2"&gt;"tests/ReleaseContainerSample.Tests"&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="nt"&gt;--configuration&lt;/span&gt; &lt;span class="nv"&gt;$Configuration&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="nt"&gt;--no-build&lt;/span&gt;

&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; build AS publish&lt;/span&gt;

&lt;span class="k"&gt;ARG&lt;/span&gt;&lt;span class="s"&gt; Configuration="Release"&lt;/span&gt;
&lt;span class="k"&gt;ARG&lt;/span&gt;&lt;span class="s"&gt; Version=1.0.0&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;dotnet pack &lt;span class="s2"&gt;"src/ReleaseContainerSample"&lt;/span&gt;&lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="nt"&gt;-p&lt;/span&gt;:Version&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$Version&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="nt"&gt;--configuration&lt;/span&gt; &lt;span class="nv"&gt;$Configuration&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="nt"&gt;--output&lt;/span&gt; /artifacts &lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="nt"&gt;--include-symbols&lt;/span&gt;

&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; base AS final&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /artifacts&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --from=publish /artifacts .&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; ./build/publish-nuget.sh ./publish-nuget.sh&lt;/span&gt;

&lt;span class="k"&gt;LABEL&lt;/span&gt;&lt;span class="s"&gt; org.opencontainers.image.title="ReleaseContainerSample" \&lt;/span&gt;
    org.opencontainers.image.description="" \
    org.opencontainers.image.documentation="https://github.com/NikiforovAll/docker-release-container-sample" \
    org.opencontainers.image.source="https://github.com/NikiforovAll/docker-release-container-sample.git" \
    org.opencontainers.image.url="https://github.com/NikiforovAll/docker-release-container-sample" \
    org.opencontainers.image.vendor=""

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; ["./publish-nuget.sh"]&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["--source", "https://api.nuget.org/v3/index.json"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before we produce artifact, we need to specify version. Let's use &lt;code&gt;GitVersion&lt;/code&gt; to get the build version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;:/repo"&lt;/span&gt; gittools/gitversion:5.6.6 /repo &lt;span class="se"&gt;\&lt;/span&gt;
    | &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'\n'&lt;/span&gt; | &lt;span class="nb"&gt;tr&lt;/span&gt; , &lt;span class="s1"&gt;'\n'&lt;/span&gt; | &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="s1"&gt;'\n'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    | &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="s2"&gt;"NuGetVersion"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    | &lt;span class="nb"&gt;awk&lt;/span&gt; &lt;span class="nt"&gt;-F&lt;/span&gt;&lt;span class="s1"&gt;'"'&lt;/span&gt; &lt;span class="s1"&gt;'{print $4}'&lt;/span&gt; | &lt;span class="nb"&gt;head&lt;/span&gt; &lt;span class="nt"&gt;-n1&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$Version&lt;/span&gt;
&lt;span class="c"&gt;# out&lt;/span&gt;
1.0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, we are ready to build the release container (image)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker build &lt;span class="nt"&gt;-f&lt;/span&gt; ./src/ReleaseContainerSample/Dockerfile &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--build-arg&lt;/span&gt; &lt;span class="nv"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$Version&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-t&lt;/span&gt; release-container-example &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="c"&gt;# check the result&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker image list 
REPOSITORY                                                          TAG              IMAGE ID       CREATED          SIZE
release-container-example                                           latest           7ca4acd3845b   43 seconds ago   1.12GB
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can peek inside release container by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;--entrypoint&lt;/span&gt; &lt;span class="s1"&gt;'/bin/ls'&lt;/span&gt; &lt;span class="nt"&gt;--name&lt;/span&gt; release-container-sample release-container-example
&lt;span class="c"&gt;# out&lt;/span&gt;
ReleaseContainerSample.1.0.1.nupkg
ReleaseContainerSample.1.0.1.symbols.nupkg
publish-nuget.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🚀 Publish.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;AWS_DEFAULT_REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"eu-central-1"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--name&lt;/span&gt; release-container-sample release-container-example &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--source&lt;/span&gt; &lt;span class="s2"&gt;"https://codeartifact.eu-central-1.amazonaws.com/nuget/codeartifact-repository/v3/index.json"&lt;/span&gt;
&lt;span class="c"&gt;# Alternatively, you can use public  NuGet repository.&lt;/span&gt;
docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--name&lt;/span&gt; release-container-sample release-container-example &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--source&lt;/span&gt; &lt;span class="s2"&gt;"https://api.nuget.org/v3/index.json"&lt;/span&gt; &lt;span class="nt"&gt;--api-key&lt;/span&gt; &lt;span class="s2"&gt;"https://www.youtube.com/watch?v=dQw4w9WgXcQ"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;In this blog post, I showed how you can build NuGet packages via Docker, and push them to your NuGet feed when you run the container.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to release. The solution is portable. It's our goal after all.&lt;/li&gt;
&lt;li&gt;Extendable approach. You are in charge of how to build NuGet package and can install all required tools and dependencies when you need it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Images can be quite sizable. Additional space is required to release containers, so a retention policy should be applied.&lt;/li&gt;
&lt;li&gt;Adds unnecessary complexity if you already use dotnet toolchain and you have all dependencies installed on build server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/codeartifact/latest/ug/nuget-cli.html"&gt;https://docs.aws.amazon.com/codeartifact/latest/ug/nuget-cli.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/dotnet-docker/blob/main/documentation/scenarios/nuget-credentials.md"&gt;https://github.com/dotnet/dotnet-docker/blob/main/documentation/scenarios/nuget-credentials.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://andrewlock.net/pushing-nuget-packages-built-in-docker-by-running-the-container"&gt;https://andrewlock.net/pushing-nuget-packages-built-in-docker-by-running-the-container&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>docker</category>
      <category>devops</category>
      <category>nuget</category>
      <category>dotnet</category>
    </item>
    <item>
      <title>Block chain In a Nutshell</title>
      <author>Amana Samsudeen</author>
      <pubDate>Sun, 09 May 2021 14:45:45 +0000</pubDate>
      <link>https://dev.to/ucscmozilla/block-chain-in-a-nutshell-1h9a</link>
      <guid>https://dev.to/ucscmozilla/block-chain-in-a-nutshell-1h9a</guid>
      <description>&lt;p&gt;Before understanding what is blockchain lets try to understand what a distributed database is. A distributed database is a collection of multiple interconnected databases, which are spread physically across various locations that communicate via a computer network. &lt;br&gt;
A blockchain is similar to distributed databases that maintain a continuously growing list of chronologically ordered records, called blocks. These blocks are linked using encryption techniques which contains a link to connect each block to its previous block, a timestamp, and transaction data. It is like a decentralized, distributed and public digital ledger.&lt;br&gt;
Blockchains are mainly used to record transactions across many computers so that the record cannot be altered without the alteration of all subsequent blocks because the whole chains link depends on data in the nodes(blocks).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-is-blockchain-popular"&gt;
  &lt;/a&gt;
  Why is Blockchain Popular?
&lt;/h1&gt;

&lt;p&gt;Suppose one of us is transferring money to a friend from his/her bank account. He/ She would log in to online banking and transfer the amount to the other person using their account number. After the transaction is completed, the bank updates the transaction records of both persons. Even though this seems simple. These transactions are highly vulnerable.&lt;br&gt;
These types of transactions can be tampered very quickly. Blockchain technology was created essentially to overcome problems of this nature.&lt;/p&gt;

&lt;p&gt;So How Does Blockchain Protect These Transactions?&lt;br&gt;
How exactly does Blockchain technology work?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jLGwSwwI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jdd24k8vq6r13s5d16q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jLGwSwwI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jdd24k8vq6r13s5d16q.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blockchain is a combination of three leading technologies:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Cryptographic keys (Asymmetric and Symmetric Cryptographies).&lt;/li&gt;
&lt;li&gt;A peer-to-peer network containing a shared digital ledger.&lt;/li&gt;
&lt;li&gt;A means of computing, to store the transactions and records of the network.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cryptography keys consist of two keys those are Private key and Public key. These keys help in performing successful transactions between two parties. Each individual has these two keys, which they use to produce a secure digital identity reference. This secured identity is the most important aspect of Blockchain technology. In the world of cryptocurrency, this identity is referred to as ‘digital signature’ and is used for authorizing and controlling transactions&lt;br&gt;
The digital signature is merged with the peer-to-peer network; a large number of individuals who act as authorities use the digital signature in order to reach a general agreement on transactions, among other issues. When they authorize a deal, it is certified by a mathematical verification, which results in a successful secured transaction between the two network-connected parties. &lt;br&gt;
So, to sum it up, Blockchain users employ cryptography keys to perform different types of digital interactions over the peer-to-peer network.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>i3 Ricing</title>
      <author>Ritabrata Das</author>
      <pubDate>Sun, 09 May 2021 14:12:25 +0000</pubDate>
      <link>https://dev.to/ritabratadas343/i3-ricing-19ih</link>
      <guid>https://dev.to/ritabratadas343/i3-ricing-19ih</guid>
      <description>&lt;p&gt;Hello guys!!!&lt;br&gt;
Recently I have riced my entire &lt;strong&gt;Linux Mint 20.1 XFCE&lt;/strong&gt; using the &lt;strong&gt;i3-window manager&lt;/strong&gt;. Developers mostly use upgraded ricing tools like the Awesome window manager for their ricing models. Ricing in Arch-based systems is comparatively easier than in Ubuntu-based systems. Although, I preferred i3-window manager as it is &lt;strong&gt;good for beginners and we get to build the ricing model from scratch&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;My Ricing model is uploaded on YouTube on my friend's channel:&lt;br&gt;
 &lt;a href="https://youtu.be/-WyIyqiNpBk"&gt;i3-riced model&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-WyIyqiNpBk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The configuration file for the ricing model is uploaded on GitHub: &lt;br&gt;
 &lt;a href="https://github.com/RitabrataDas343/i3_Ricing"&gt;i3-config-files&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/RitabrataDas343"&gt;
        RitabrataDas343
      &lt;/a&gt; / &lt;a href="https://github.com/RitabrataDas343/i3_Ricing"&gt;
        i3_Ricing
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This is the repository containing the ricing configuration of the system. Please follow the steps of the README.md file in the repository to get the desired effect of ricing. 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
i3_Ricing&lt;/h1&gt;
&lt;p&gt;This is the repository containig the ricing configuration of the system. Please follow the steps of the README.md file in the repository to get the desired effect of ricing.&lt;/p&gt;
&lt;p&gt;i3 is one of the most popular open source software that is used for ricing. 'Ricing' basically represents customizing desktop and enables multi-tasking tiling features and so on.&lt;/p&gt;
&lt;h2&gt;
To install&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;$ sudo apt install i3
$ sudo apt install feh thunar rofi pavucontrol arandr i3blocks compton lxappearance&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Logout of the window and on the login screen, you will get a white icon depicting the i3 window manager, select that and login.&lt;/p&gt;
&lt;h4&gt;
On login, you will get to choose &lt;em&gt;Win&lt;/em&gt; or &lt;em&gt;Alt&lt;/em&gt; keys to be your Mod key. It is preferable to use the &lt;em&gt;Win&lt;/em&gt; key but you can use the &lt;em&gt;Alt&lt;/em&gt; key as well.&lt;/h4&gt;
&lt;p&gt;Now, you are good to go.&lt;/p&gt;
&lt;h4&gt;
Patch the i3 folder from the repository and place it&lt;/h4&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/RitabrataDas343/i3_Ricing"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I hope you can try it and publish your ricing models too. &lt;/p&gt;

&lt;p&gt;Other references:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://i3wm.org/docs/userguide.html"&gt;i3wm-guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/RitabrataDas343/e2cd532cbc7be330d58b58364bff0b07"&gt;My GitHub Gist for Keybindings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy Ricing!!!&lt;br&gt;
May the Source be with you 🐧💗. &lt;/p&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
    </item>
    <item>
      <title>Articles you may have missed this week but it's worth reading 👍</title>
      <author>Rafael Leitão</author>
      <pubDate>Sun, 09 May 2021 14:09:26 +0000</pubDate>
      <link>https://dev.to/carlosrafael22/articles-you-may-have-missed-this-week-but-it-s-worth-reading-2d93</link>
      <guid>https://dev.to/carlosrafael22/articles-you-may-have-missed-this-week-but-it-s-worth-reading-2d93</guid>
      <description>&lt;p&gt;Hello DEV people! 👋&lt;/p&gt;

&lt;p&gt;For some time I've had this idea of trying to support those developers who create content sharing things they've learned to help others in the community but for different reasons didn't get many interactions in their articles.&lt;/p&gt;

&lt;p&gt;There are many reasons for that to happen, maybe time of posting, article's title, not having many people following them here, etc... for whatever reason the post didn't get many interactions and this can be frustrating.&lt;/p&gt;

&lt;p&gt;Frustration is relative since people have different expectations when they share an article here. Nonetheless, deep down, they shared to help others, and when there are few interactions we assume we haven't helped as much as we could've. The feelings involved depend on the writer but as someone who also shares posts sometimes here I know this can be true to some.&lt;/p&gt;

&lt;p&gt;Okay okay for introductions, this list aims to help these content creators to have another way to reach more people and have their work appreciated. I tried to get these articles(in no particular order) from the last 7 days so they are relatively new on here.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-list-memo"&gt;
  &lt;/a&gt;
  The list 📝
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-tips-for-frontend-devs-on-how-to-better-approach-coding-designs"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://dev.to/joannaotmianowska/tips-for-frontend-devs-on-how-to-better-approach-coding-designs-390i"&gt;Tips for frontend devs on how to better approach coding designs&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;We as frontend developers when having to implement a new design it's important to give a fresh new eye and review it from a different angle from what the designers created.&lt;/p&gt;

&lt;p&gt;When doing this, having in mind how the user would think while interacting with these new features is essential to sane all the doubts and build them the best way.&lt;/p&gt;

&lt;p&gt;To help with it, &lt;a href="https://dev.to/joannaotmianowska"&gt;Joanna&lt;/a&gt; shares some questions she tries to answer when getting the design.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/joannaotmianowska" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Py5U0DB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8ZnanMS---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/483639/7ce63455-fb9d-4b09-8a64-bf9baecd3b35.jpeg" alt="joannaotmianowska image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/joannaotmianowska/tips-for-frontend-devs-on-how-to-better-approach-coding-designs-390i" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Tips for frontend devs on how to better approach coding designs&lt;/h2&gt;
      &lt;h3&gt;Joanna Otmianowska ・ May 2 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#frontend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#design&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#2-on-becoming-a-better-junior-developer"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://dev.to/snickdx/on-becoming-a-better-junior-developer-4eb1"&gt;On Becoming A Better Junior Developer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Based on his experience, &lt;a href="https://dev.to/snickdx"&gt;Nicholas&lt;/a&gt; created a list of things Junior developers should have in mind for success.&lt;/p&gt;

&lt;p&gt;I would add that not only Junior but every developer should have those points in mind to work better in a team and always evolve.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/snickdx" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--54mJK8k---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Tj-OguEM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/304653/d0e52f0e-c7ea-4cfe-ac87-d6755560c44b.jpg" alt="snickdx image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/snickdx/on-becoming-a-better-junior-developer-4eb1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;On Becoming A Better Junior Developer&lt;/h2&gt;
      &lt;h3&gt;Nicholas Mendez ・ May 6 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#promotion&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#3-app-101-jamstack-vs-traditional-webapps"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://dev.to/zackdotcomputer/app-101-jamstack-vs-traditional-webapps-3pbe"&gt;App 101: Jamstack vs Traditional Webapps&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;To start his App 101 series, that will bring discussions to help us make some decisions when building webapps, &lt;a href="https://dev.to/zackdotcomputer"&gt;Zack&lt;/a&gt; decided to go down the memory lane.&lt;/p&gt;

&lt;p&gt;In this article, he shares a bit of the history and evolution of web development from those old webapps to the modern JAMStack. Nice one to reflect on how things evolved and give food for thought to which approach best suites your need.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/zackdotcomputer" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--My-QQriy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--TyeGFGvU--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/104593/cd17983a-a1b6-4976-89b9-c0745bb31bc1.jpg" alt="zackdotcomputer image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/zackdotcomputer/app-101-jamstack-vs-traditional-webapps-3pbe" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;App 101: Jamstack vs Traditional Webapps&lt;/h2&gt;
      &lt;h3&gt;Zack Sheppard ・ May 4 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#architecture&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#learning&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4-7-approaches-i-took-while-learning-web-dev-from-scratch"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://dev.to/mmiask/7-approaches-i-took-while-learning-web-dev-from-scratch-3imo"&gt;7 Approaches I Took While Learning Web Dev From Scratch&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Switching from biotechnology to software engineering is not easy task and through this path &lt;a href="https://dev.to/mmiask"&gt;Michael&lt;/a&gt; has learned a lot about the pros and cons of different approach while learning.&lt;/p&gt;

&lt;p&gt;In this article, he shares how these approaches helped him and how you could also benefit from them. It's not a guide on how to make your study plan but it is definitely a great starting point based on his experience.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mmiask" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NM_VIEYI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--W_K3da6P--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/413154/792e0076-9e08-4fb3-a00b-f93a0102d53f.jpeg" alt="mmiask image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mmiask/7-approaches-i-took-while-learning-web-dev-from-scratch-3imo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;7 Approaches I Took While Learning Web Dev From Scratch&lt;/h2&gt;
      &lt;h3&gt;mmiask ・ May 4 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#5-everything-you-need-to-know-about-styled-components"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://dev.to/paulclindo/everything-you-need-to-know-about-styled-components-2a6a"&gt;Everything you need to know about Styled Components&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The latest libs making waves in the CSS-in-JS paradigm are TailwindCSS and Chakra-Ui but many projects still uses one of the most successful lib when this approach emerged, Styled-Components.&lt;/p&gt;

&lt;p&gt;In this article, &lt;a href="https://dev.to/paulclindo"&gt;Paul&lt;/a&gt; shares a lot of great tips showing the capabilities of the lib to help you with it. Worth checking out if you work with Styled-Components.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/paulclindo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TxVJ_n9m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--LFjgNqSl--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/254237/0867238b-b804-4880-a712-bcec8ba40a79.png" alt="paulclindo image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/paulclindo/everything-you-need-to-know-about-styled-components-2a6a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Everything you need to know about Styled Components
&lt;/h2&gt;
      &lt;h3&gt;Paul Ccari ・ May 4 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#6-state-and-setstate-explained-with-emotion"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://dev.to/shaundai/state-and-setstate-explained-with-emotion-110k"&gt;State and setState Explained with Emotion&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you're a beginner in React this is a nice introduction to state with actionable examples on how to deal and pass it between components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/shaundai"&gt;Shaundai&lt;/a&gt; nailed it with the funny naming for this example and the explanations :)&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/shaundai" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MTKQpxmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--MEr0ibtp--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/255076/c3d8d3d0-a4e4-45ff-98f0-662de1d1c9b1.png" alt="shaundai image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/shaundai/state-and-setstate-explained-with-emotion-110k" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;State and setState Explained with Emotion&lt;/h2&gt;
      &lt;h3&gt;Shaundai Person ・ May 3 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#functional&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#thats-it-v"&gt;
  &lt;/a&gt;
  That's it! ✌️
&lt;/h1&gt;

&lt;p&gt;Hope you find it usefull somehow. If you liked it don't forget to go to these articles and give it a ❤️. It's nice when someone show their love and gratifying for the author to see they've helped people :)&lt;/p&gt;

&lt;p&gt;This is just a list I made trying to help these bloggers, none of them asked for it neither they know about it 😂.&lt;/p&gt;

&lt;p&gt;There are many other nice articles out there but I can't put them all here so if you think your article deserves a second chance feel free to drop it in the comments :)&lt;/p&gt;

&lt;p&gt;If you liked it, leave it a ❤️. Hopefully we can also connect on &lt;a href="https://twitter.com/c_rafael22"&gt;Twitter&lt;/a&gt;, I also share nice articles I find there :)&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>bestofdev</category>
      <category>webdev</category>
      <category>icymi</category>
    </item>
    <item>
      <title>How to approach Dynamic Programming?</title>
      <author>| pro._.gramer |</author>
      <pubDate>Sun, 09 May 2021 14:08:07 +0000</pubDate>
      <link>https://dev.to/anushree71199/how-to-approach-dynamic-programming-1ide</link>
      <guid>https://dev.to/anushree71199/how-to-approach-dynamic-programming-1ide</guid>
      <description>&lt;p&gt;Dynamic Programming(DP) itself sounds so huge that coders try to avoid it as far as possible. But big companies like Nutenix, Flipkart, Amazon love those coders who can code a solution that is both optimised and have a minimum time complexity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wondering-what-this-post-is-about"&gt;
  &lt;/a&gt;
  Wondering what this post is about?
&lt;/h2&gt;

&lt;p&gt;The title suits this post well, today we'll talk about how a noob coder can identify a DP problem and then approach towards solving it. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#firstly-let-me-tell-you-that-dp-is-all-about-recursion"&gt;
  &lt;/a&gt;
  Firstly, let me tell you that DP is all about recursion:
&lt;/h4&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;                     DP = Enhanced Recursion
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;where Enhanced Recursion is basically calling a function itself with a simpler input.&lt;/p&gt;

&lt;p&gt;Parent of a DP problem is Recursion. What do I mean by parent here? Every DP problem can be solved using recursion so it really matters for you to learn recursion first. Clear your concepts on Recursion then proceed to DP.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#secondly-identifying-the-question-of-dp"&gt;
  &lt;/a&gt;
  Secondly, identifying the question of DP
&lt;/h3&gt;

&lt;p&gt;Keep these two things in mind while identifying:&lt;br&gt;
a) Choice will be given like in a Knapsack problem which element to include and which one element shouldn’t be included.&lt;br&gt;
b) Optimal Questions like those questions covering topics about Minimal, Maximum, Largest, Maximum Profit.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#from-recursion-overlapping-recursion-is-a-dp-problem"&gt;
  &lt;/a&gt;
  From recursion, Overlapping Recursion is a DP problem.
&lt;/h3&gt;

&lt;p&gt;Now you must be wondering what is this overlapping recursion? Well it's basically a tree-like structure of a recursion function getting called two or more times and then overlapping each other while getting called up. &lt;br&gt;
If the function is called and the program gets executed without even touching other recursion functions then that is called overlapping problem in recursion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-get-to-the-approach-that-should-be-used-for-solving-a-dp-problem"&gt;
  &lt;/a&gt;
  Let's get to the approach that should be used for solving a DP problem:
&lt;/h3&gt;

&lt;p&gt;If you don't know this approach: &lt;br&gt;
[#Recursive Solution---&amp;gt; Memoization] &lt;br&gt;
then do not I repeat DO NOT use this approach to solve your question that is using a "Top down approach which means forming a matrix initially and then filling up the boxes assuming some conditions"&lt;/p&gt;

&lt;p&gt;As a developer in making I would really like to add that without knowing Recursion, proceeding to DP is stupidity. You should have a recursive approach to proceed to a top down solution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-standard-form-to-solve-any-dp-question-is-this"&gt;
  &lt;/a&gt;
  The standard form to solve any DP question is this:
&lt;/h3&gt;

&lt;p&gt;Recursive Solution ---&amp;gt; Memoize ---&amp;gt; Top-Down Approach&lt;/p&gt;

&lt;p&gt;The only difference between various DP variations question lies in the recursive code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus-point"&gt;
  &lt;/a&gt;
  BONUS POINT
&lt;/h3&gt;

&lt;p&gt;Different questions that you can try out learning are:&lt;br&gt;
1) 0 1 Knapsack Problem(6)[this 6 means the different questions that includes variation with 0 1 knapsack]:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Subset Sum&lt;/li&gt;
&lt;li&gt;Equal Sum Partition&lt;/li&gt;
&lt;li&gt;Count of Subset Sum&lt;/li&gt;
&lt;li&gt;Minimum Subset sum difference&lt;/li&gt;
&lt;li&gt;Target Sum(Leet Code Problem)&lt;/li&gt;
&lt;li&gt;Count number Of Subset with a given difference&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2) Unbounded knapsack(5)&lt;br&gt;
3) Fibonaaci(7) &lt;br&gt;
4) LCS(Longest Common Sub-sequence)(15)&lt;br&gt;
5) LIS(Longest Increasing Sub-sequence)(10)&lt;br&gt;
6) Kadane's Algorithm(6)&lt;br&gt;
7) Matrix Chain Multiplication(7)&lt;br&gt;
8) DP on Grids(4)&lt;br&gt;
9) DP on trees(14)&lt;br&gt;
10) Others(5)&lt;/p&gt;

&lt;p&gt;Ending this post while reminding you all to take care of yourselves and keep coding 💜&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>programming</category>
      <category>productivity</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Worry about managing databases at backend. Don't worry PAGECLIP is for you.</title>
      <author>Rishabh Dwivedi</author>
      <pubDate>Sun, 09 May 2021 13:58:10 +0000</pubDate>
      <link>https://dev.to/rishabh062/worry-about-managing-databases-at-backend-don-t-worry-pageclip-is-for-you-1572</link>
      <guid>https://dev.to/rishabh062/worry-about-managing-databases-at-backend-don-t-worry-pageclip-is-for-you-1572</guid>
      <description>&lt;p&gt;Are you a &lt;em&gt;Front end developer&lt;/em&gt; but sometimes struck when it comes about adding forms and accessing it data and storing it.&lt;br&gt;
I have a great site for you i.e. &lt;strong&gt;Pageclip&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-pageclip"&gt;
  &lt;/a&gt;
  What is &lt;strong&gt;Pageclip&lt;/strong&gt;?
&lt;/h4&gt;

&lt;p&gt;A server for your HTML forms.&lt;br&gt;
&lt;em&gt;Collect info from users without a server—Pageclip is your server. Lead capture forms, surveys, newsletter forms, contact forms, etc. Setup any form in seconds.&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#this-site-is-very-helpful-for-student-developer"&gt;
  &lt;/a&gt;
  This site is very helpful for student developer
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XDsnxIm2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxia7vw4x6ihwjus1ckq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XDsnxIm2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxia7vw4x6ihwjus1ckq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-add-data-here"&gt;
  &lt;/a&gt;
  How to add data here.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form action="https://send.pageclip.co/abc123def456"&amp;gt;
  &amp;lt;input type="text" name="name" value="Roscoe Jones"/&amp;gt;
  &amp;lt;input type="text" name="email" value="roscoe@example.com"/&amp;gt;
  &amp;lt;input type="submit" value="Send"&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Its quite simple to add data here.&lt;br&gt;
&lt;strong&gt;Uses:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Collect Leads for Your New Product&lt;/li&gt;
&lt;li&gt;Setup a Contact Form&lt;/li&gt;
&lt;li&gt;Capture Emails for a Newsletter&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#plan-and-pricing"&gt;
  &lt;/a&gt;
  Plan and Pricing
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Most demanding thing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free-&amp;gt; One site, One form, 1000 submissions&lt;/li&gt;
&lt;li&gt;Basic-&amp;gt; One site, Unlimited form , 20000 submissions(Use github student developer pack for accessing this pack.) or (get it at $9)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Rest are standard one which are useful for companies.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#just-make-an-account-or-signup-from-here"&gt;
  &lt;/a&gt;
  Just make an account or signup from &lt;a href="https://pageclip.co/signup"&gt;&lt;strong&gt;Here&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Just visit official &lt;a href="https://pageclip.co/"&gt;&lt;strong&gt;Pageclip&lt;/strong&gt;&lt;/a&gt; site for getting started with it and for more information.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;br&gt;
&lt;strong&gt;Rishabh Dwivedi&lt;/strong&gt;&lt;br&gt;
Visit &lt;a href="http://projectron.tech/"&gt;&lt;strong&gt;Projectron&lt;/strong&gt;&lt;/a&gt; my early startup.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>pageclip</category>
      <category>database</category>
      <category>backend</category>
    </item>
    <item>
      <title>A Really Simple Intro to localStorage in React</title>
      <author>Laura Todd</author>
      <pubDate>Sun, 09 May 2021 13:37:49 +0000</pubDate>
      <link>https://dev.to/lauratoddcodes/a-really-simple-intro-to-localstorage-in-react-35e3</link>
      <guid>https://dev.to/lauratoddcodes/a-really-simple-intro-to-localstorage-in-react-35e3</guid>
      <description>&lt;p&gt;Saving information to local storage can be incredibly useful and can make for a far better user experience in your apps. Imagine if you had to log in from scratch every time you wanted to look at Twitter! &lt;/p&gt;

&lt;p&gt;By using the localStorage method in React, we can make save certain information to the user's machine to save them re-entering it whenever they use our app.&lt;/p&gt;

&lt;p&gt;I'll take you through a very simple example of saving a name and username from a form. &lt;/p&gt;

&lt;p&gt;We'll begin with two input fields and a submit button, like so -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pwLFceZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/whacr8munnkds5mgc9fn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pwLFceZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/whacr8munnkds5mgc9fn.jpg" alt="Name and username input fields"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find the starting code &lt;a href="https://github.com/LauraToddCode/local-storage-blog/tree/starter-code/src"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Add onChange and onSubmit event listeners to the input fields and the form as would normally.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f6sKo1hU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rbumqo3hvh54c5due9o6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f6sKo1hU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rbumqo3hvh54c5due9o6.png" alt="Form with input fields and submit button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the constructor, initialise the state for 'name' and 'username'.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O7fxtLB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0sevxudrnd2ljnf4u02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O7fxtLB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0sevxudrnd2ljnf4u02.png" alt="initialisation of name and username"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, create the onChange handler functions, allowing them to set the state of 'name' and 'username' to the input values.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--npeTkVKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ycj9tml4yj69lg2vr5k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--npeTkVKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ycj9tml4yj69lg2vr5k.png" alt="handler functions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, create the onSubmit handler function.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ut6c54qN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y411h47iw8u69acnotja.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ut6c54qN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y411h47iw8u69acnotja.png" alt="submit handler function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the first line, we use a destructured array to assign this.state.name and this.state.username to the 'name' and 'username' variables. Then, we use the localStorage.setItem() method store those values as 'name' and 'username' to be accessed by the local storage later. &lt;/p&gt;

&lt;p&gt;Make sure that you bind all three functions in the constructor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BCYlTz_A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ha1cfz1mwyxfp5jtlpxm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BCYlTz_A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ha1cfz1mwyxfp5jtlpxm.png" alt="Bind functions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, we can use the localStorage.getItem() method within ComponentDidMount() to access the stored values and assign them to this.state.name and this.state.username on initialisation. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WyD_rvkt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fd4l1a1wm4vb8e9opvcm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WyD_rvkt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fd4l1a1wm4vb8e9opvcm.png" alt="component did mount"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it! Now, when you enter values into the input fields and refresh the page, those values should remain in the fields.&lt;/p&gt;

&lt;p&gt;You can check your finished code &lt;a href="https://github.com/LauraToddCode/local-storage-blog/tree/main/src"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>state</category>
      <category>hooks</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
