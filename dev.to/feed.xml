<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React (work in progress) Cheat sheet</title>
      <author>Eric Chapman</author>
      <pubDate>Fri, 16 Apr 2021 15:23:18 +0000</pubDate>
      <link>https://dev.to/ericchapman/react-work-in-progress-cheat-sheet-13fb</link>
      <guid>https://dev.to/ericchapman/react-work-in-progress-cheat-sheet-13fb</guid>
      <description>&lt;p&gt;I don't use React often and so whenever I need to do even the smallest thing in React, I have to check out the documentation, a tutorial, or post a question on a forum.&lt;/p&gt;

&lt;p&gt;That's why I decided to do this memory aid and given that my memory is not that good I thought why not make a monstrous memory aid with all the concepts I know about React.&lt;/p&gt;

&lt;p&gt;So I can read it from time to time and thereby strengthen my knowledge of React.&lt;/p&gt;

&lt;p&gt;It will take couples of days to put all that together so every day I will post an updated Cheat Sheet version until the final version.&lt;/p&gt;

&lt;p&gt;If you have ideas or recommendation do not hesitate and do so in the comments section.&lt;/p&gt;

&lt;h2&gt;React Cheat Sheet (draft day 2)&lt;/h2&gt;

&lt;p&gt;Â &lt;/p&gt;

&lt;h4&gt;Create a React App&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a new app&lt;/span&gt;
&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;

&lt;span class="c1"&gt;// Run the created app&lt;/span&gt;
&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;

&lt;span class="c1"&gt;// http://localhost:3000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;First React functional Component&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;No need to import React from 'react' (since React 17)&lt;/li&gt;
&lt;li&gt;Must have uppercase first letter&lt;/li&gt;
&lt;li&gt;Must return JSX&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(src/App.js)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// React component&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello World&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How this component get render to the browser? The main project file is src/index.js and in that file there are instruction to render the component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The App component will then be rendered inside public/index.html 'root' div&lt;/p&gt;

&lt;h3&gt;Import Component&lt;/h3&gt;

&lt;p&gt;Component will be created in separate files. Each component need to be export and then import&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Greeting&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Greeting&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This component can then be import&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Greeting&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Gretting&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Greeting&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or name export...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Greeting&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This component can then be import&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Greeting&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Gretting&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;JSX Rules&lt;/h3&gt;

&lt;p&gt;Return a single element (only one parent element)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// not valid&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello world&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hi!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// valid with fragment. &lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello World&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hi!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Noted the parenthesis for multi-line formatting&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use className instead of class&lt;br&gt;
Also all attribute name need to be camelCase&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// not valid&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Hello World
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// valid&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Close every element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"http:example.com/image.jpg"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"first_name"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Nested Components&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Arrow function shorthand component&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Mike Taylor&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// Arrow function component&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Function component&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;HelloWorld&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Message&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Component CSS&lt;/h3&gt;

&lt;p&gt;(src/App.css)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(src/App.js)&lt;br&gt;
Import the CSS file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello World&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Inline CSS&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello World&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Javascript in JSX&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Enclose between {}&lt;/li&gt;
&lt;li&gt;Must be an expression (return a value)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;(admin)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;(user)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Component Properties (Props)&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Mike'&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;, Age: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// or props object deconstructing&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; Age: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Children Props (slot)&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Mike'&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            Hi, this is a welcome message
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;, Age: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// or props object deconstructing&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; Age: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;List&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;people&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;people&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;, Age: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;List with key (for React internal reference)&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;people&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
     &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Props object deconstructing&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;people&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;, Age: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Click Event&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clickHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Welcome to my app&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;clickHandler&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Say Hi&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt; 
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or inline...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Welcome to my app&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Say Hi&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To pass arguments we need to use arrow function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clickHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Welcome to my app&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;clickHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Say Hi&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt; 
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;e for event arguments&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clickHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Welcome to my app&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;clickHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Say Hi&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt; 
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;useState Hook&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Hook always start with use prefix&lt;/li&gt;
&lt;li&gt;Must be invoke in the component/function body&lt;/li&gt;
&lt;li&gt;Declaration cannot be call conditionally&lt;/li&gt;
&lt;li&gt;useState return an array of 2 [state value, set state function]
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DisplayTitle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTitle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;This is the Title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;New Title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;btn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;Change&lt;/span&gt; &lt;span class="nx"&gt;Title&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;DisplayTitle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;useState with object&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DisplayTitle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setPerson&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setPerson&lt;/span&gt;&lt;span class="p"&gt;({...&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;btn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;Change&lt;/span&gt; &lt;span class="nx"&gt;Age&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;setState functional form&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;// Use a function to set State&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;increase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;increase&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;btn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;btn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;useEffect&lt;/h3&gt;

&lt;p&gt;By default useEffect run after every re-render&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;IncreaseValue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`New value: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt; 
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Increase&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Conditional useEffect&lt;/h3&gt;

&lt;p&gt;Conditional need to be place inside useEffect function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`New value: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;useEffect Dependency List&lt;/h3&gt;

&lt;p&gt;useEffect will run only if state is in the Dependency List.&lt;br&gt;
If the list is empty [] the useEffect will only run on initial render.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`New value: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt; 
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="c1"&gt;// Noted the empty array. useEffect will then only run once on initial render&lt;/span&gt;

&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`New value: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt; 
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="c1"&gt;// Will run each time 'value' state change.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;useEffect cleanup function&lt;/h3&gt;

&lt;p&gt;This useEffect return function is execute each time the component unmount. Think at this return function like a cleaning code when the component unmount.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;timer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Component multiple returns&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;DisplayGreeting&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;admin&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Form&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;UserForm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUserName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; 
          &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; 
          &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setUserName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; 
          &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userName&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
          &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userName&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Submit&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;UserForm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;That's it for today. We still have a lot to do, so see you tomorrow... If you want to be sure to miss nothing click follow me!&lt;/p&gt;

&lt;p&gt;I am new on twitter so if you want to make me happy&lt;br&gt;
Follow me!: &lt;a href="https://twitter.com/justericchapman?ref_src=twsrc%5Etfw"&gt;Follow @justericchapman&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 16 Apr 2021 15:21:05 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-53nb</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-53nb</guid>
      <description>&lt;p&gt;Hey there!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking back on your week â what was something you're proud of?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All wins count â big or small ğ&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Doing some mindfulness exercises ... or whatever else might spark joy â¤ï¸ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Happy Weekend!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/xUPN39xtlB15k469TW/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/xUPN39xtlB15k469TW/giphy.gif" alt="Friday Cat"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Design Social Media Buttons Using CSS!</title>
      <author>CristoferK</author>
      <pubDate>Fri, 16 Apr 2021 15:11:54 +0000</pubDate>
      <link>https://dev.to/cristoferk/design-social-media-buttons-using-css-37h8</link>
      <guid>https://dev.to/cristoferk/design-social-media-buttons-using-css-37h8</guid>
      <description>&lt;p&gt;Here is the tutorial&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/zbCRHsOlGVI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Don't know what code editor to use or you just want to move to another one? This video will help you to choose&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/eC8mO6iqUCk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Don't forget to like, share and subscribe!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>buttons</category>
      <category>design</category>
    </item>
    <item>
      <title>How to Redo or Undo in Adobe Photoshop- A Basic Guide
</title>
      <author>gelsmith</author>
      <pubDate>Fri, 16 Apr 2021 15:08:27 +0000</pubDate>
      <link>https://dev.to/gelsmith8/how-to-redo-or-undo-in-adobe-photoshop-a-basic-guide-4j68</link>
      <guid>https://dev.to/gelsmith8/how-to-redo-or-undo-in-adobe-photoshop-a-basic-guide-4j68</guid>
      <description>&lt;p&gt;Adobe Photoshop is another software that is used by millions of users every day after Adobe Premiere Pro. Adobe Photoshop is widely used for photo editing purposes. Adobe Photoshop has provided many editing features like Blur, Color, Paint, Undo, Redo, or many more.&lt;br&gt;
Go to original blog to read :-&lt;a href="https://searchreviewbusiness.com/blog/How-to-Redo-or-Undo-in-Adobe-Photoshop--A-Basic-Guide"&gt;https://searchreviewbusiness.com/blog/How-to-Redo-or-Undo-in-Adobe-Photoshop--A-Basic-Guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adobe Photoshop looks simple, but it is not. You have to play with tons of layers and many tools while editing a photo. People also make some mistakes during editing and these mistakes can be solved by just using some shortcut keys. Adobe Photoshop has Undo or Redo options that photo editors commonly use. But in this article, you will get some insights on how to undo or redo features in Adobe Photoshop.&lt;/p&gt;

&lt;p&gt;Steps on How to Undo in Adobe Photoshop&lt;br&gt;
If an amateur guy is using Adobe Photoshop, there will be high chances of making mistakes, and you would like to undo them. So, learn to undo them and get back to work again.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;On the Menu Bar, click on the Edit icon.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After clicking on the Edit, you will find the Undo option. Click on the Undo for change and it will reverse your work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Photo Editors can use Undo anytime to change.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Shortcut Keys&lt;br&gt;
Suppose you do not want to use icons for Undo. You can use CTRL+Z for Undo. This helps photo editors to work efficiently.&lt;/p&gt;

&lt;p&gt;Steps on How to Redo in Adobe Photoshop&lt;br&gt;
Like Undo, Adobe Photoshop also has a Redo option too. If you want to Redo, click on the Edit icon in the menu bar and select the Redo option.&lt;/p&gt;

&lt;p&gt;Shortcut Keys&lt;br&gt;
There is a shortcut key available for Redo as well. You can type Shift+Ctrl+Z on the keyboard for Redo.&lt;/p&gt;

&lt;p&gt;How to Undo/Redo using History Panel.&lt;br&gt;
Like Menu Bar or Shortcut Keys, History Panel also provides Undo or Redo changes in a design. Using a history panel, one can Undo or Redo their design according to their suitability.&lt;/p&gt;

&lt;p&gt;Apply Undo using History Panel&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Click on the Window icon on the menu bar.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A new box will open and you have to choose History.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After clicking on the History icon, another panel will open, and you have to select any of the options available. Like, if you want to undo any tool, you can select that particular tool from the History panel.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Apply Redo Using History Panel&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If you want to Redo, You need to select the change that you want to redo.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you want to use the Redo Rectangle tool, then click on it from the History icon.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;But, sometimes, Redo will not work accordingly. Then, the only solution you are left with is to delete the changes from the History.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To delete any history panel changes, click on the change and move it to the trash icon. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
    </item>
    <item>
      <title>Tech Talk: 'Debugging: Techniques for Uncertain Times' (RailsConf 2021)</title>
      <author>Sylwia Vargas</author>
      <pubDate>Fri, 16 Apr 2021 14:46:42 +0000</pubDate>
      <link>https://dev.to/sylwiavargas/tech-talk-debugging-techniques-for-uncertain-times-railsconf-2021-5c83</link>
      <guid>https://dev.to/sylwiavargas/tech-talk-debugging-techniques-for-uncertain-times-railsconf-2021-5c83</guid>
      <description>&lt;p&gt;â¨ &lt;strong&gt;What is this post about&lt;/strong&gt;: As a part of my professional growth, I make time to watch conference talks on Ruby, Rails, JS, React, tech writing, and tech trivia. Previously, I'd just watch them but now I will take and publish notes for future reference. This talk was a part of RailsConf 2021 that I'm participating in at the time of writing. &lt;/p&gt;

&lt;p&gt;â¨ &lt;strong&gt;Talk:&lt;/strong&gt; 'Debugging: Techniques for Uncertain Times' by &lt;a href="https://twitter.com/HeyChelseaTroy"&gt;Chelsea Troy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;â¨ &lt;strong&gt;One-paragraph summary&lt;/strong&gt;: When we learn to code, we focus on writing features while we understand what the code is doing. When we debug, we donât understand what our code is doing. The less we understand, the less likely it is that our usual programming mindsetâthe one we use for feature developmentâcan solve the problem. It turns out, the skills that make us calmer, more effective debuggers also equip us to deal with rapid, substantial changes to our lives.&lt;/p&gt;

&lt;p&gt;â¨ &lt;strong&gt;Impression&lt;/strong&gt;:  Chelsea is such a great speaker (charismatic, funny, eloquent, smart). This talk should be included in all bootcamp curricula. I loved it.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debugging-effectively"&gt;Debugging Effectively&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#read-more"&gt;Read more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Compelling argument: we don't teach debugging but instead, how to implement feature, how to build something in the software that we know when we understand what the code is doing&lt;/li&gt;
&lt;li&gt;The video tutorials and live-coding presentations focus on the working code and on the code a person have written already a number of times, avoiding all error messages and following the &lt;em&gt;happy path&lt;/em&gt; only&lt;/li&gt;
&lt;li&gt;"We know what we are writing and that's what gets modelled in programming education. But that's not the case when we're writing code on the job."&lt;/li&gt;
&lt;li&gt;"We spend a lion's share outside of the comfort zone of the code we understand"&lt;/li&gt;
&lt;li&gt;"Debugging feels hard in part because we take skills that we learned from feature buiding in the context of certainty and attempt to apply them in a new context, a context where we don't understand what our code is doing, where we are surrounded by uncertainty"&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#debugging-effectively"&gt;
  &lt;/a&gt;
  Debugging Effectively
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;We need to &lt;strong&gt;acknowledge that we do not already understand the behavior of our code&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;we think we are supposed to know how to write the solution because that's all we've seen&lt;/li&gt;
&lt;li&gt;"we better hurry up and figure it out!" &amp;lt;- speed is precisely the enemy of the insidious bugs&lt;/li&gt;
&lt;li&gt;"when my feelings of inadequacy screeched at me to speed up, that's when I most needed to slow down, to figure out why exactly I wasn't getting what I expected. I needed to get out of the progress mode and into the investigation mode."&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;We need to &lt;strong&gt;switch modes from focusing on progress to focusing on investigation&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;the standard debugging strategy&lt;/strong&gt;: we try the most probable solutions to our bug, one by one; it won't work if we don't understand the behavior our code so we circle around ideas &lt;/li&gt;
&lt;li&gt;instead of trying to fix the problem, we need to switch to finding the problem (specific invalid assumptions we're making about this code)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;binary search strategy&lt;/strong&gt;: run the code, choose a place more/less in the middle between where it still runs and where it bugs out, investigate the code (code flow) there; \&lt;/li&gt;
&lt;li&gt;insidious bugs come from inaccurate assumptions -- we are looking in our code but the problem is rooted in our understanding&lt;/li&gt;
&lt;li&gt;it's difficult for us to detect that our assumptions are wrong because it's difficult for us to detect that we are making assumptions at all&lt;/li&gt;
&lt;li&gt;stop, list our assumptions, use tools to test them (automated tests, manual run-throughs, breakpoints, print statements, logging, changing small things)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;We need to be able to identify &lt;strong&gt;what is the truth and what is our perspective&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;We need to be able to see &lt;strong&gt;how the things we're doing now serve longer-term goals&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;"Even if I fail, I have taken a step forward"&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#read-more"&gt;
  &lt;/a&gt;
  Read more
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://chelseatroy.com/"&gt;Chelsea's blog&lt;/a&gt;: I love it all.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>techtalks</category>
    </item>
    <item>
      <title>Aprender a usar Sass  (1 Parte: Descarga y InstalaciÃ³n)</title>
      <author>Arturo Gamboa</author>
      <pubDate>Fri, 16 Apr 2021 14:43:52 +0000</pubDate>
      <link>https://dev.to/theriusblackers/aprender-a-usar-sass-1-parte-descarga-y-instalacion-1ji3</link>
      <guid>https://dev.to/theriusblackers/aprender-a-usar-sass-1-parte-descarga-y-instalacion-1ji3</guid>
      <description>&lt;h1&gt;
  &lt;a href="#bienvenid"&gt;
  &lt;/a&gt;
  Bienvenid@
&lt;/h1&gt;

&lt;p&gt;Â¡Hi devs! Hoy les quiero traer un tutorial, sobre Sass, ya que es un preprocesador bastante bueno y recomendado por mÃ­ y muchos mÃ¡s devs. AdemÃ¡s de que un amigo necesitaba esto; espero que les guste, asÃ­ que, Â¡Vamos allÃ¡!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rese%C3%B1a-hist%C3%B3rica"&gt;
  &lt;/a&gt;
  ReseÃ±a histÃ³rica
&lt;/h1&gt;

&lt;p&gt;Sass (Syntactically Awesome Stylesheets) es un lenguaje de hoja de estilos en cascada inicialmente diseÃ±ado por Hampton Catlin y desarrollado por Natalie&lt;br&gt;
Weizenbaum.âDespuÃ©s de sus versiones iniciales,&lt;br&gt;
Nathan Weizenbaum y Chris Eppstein han continuado extendiendo Sass con SassScript, un lenguaje de script simple, usado en los ficheros Sass.&lt;br&gt;
Sass es un metalenguaje de Hojas de Estilo en Cascada (CSS). Es un&lt;br&gt;
lenguaje de script que es traducido a CSS, SassScript es el lenguaje de script en sÃ­ mismo.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#introducci%C3%B3n"&gt;
  &lt;/a&gt;
  introducciÃ³n
&lt;/h1&gt;

&lt;h6&gt;
  &lt;a href="#introducci%C3%B3n"&gt;
  &lt;/a&gt;
  introducciÃ³n
&lt;/h6&gt;

&lt;p&gt;Sass es un preprocesador css, pero, Â¿quÃ© es un preprocesador css? Es un programa que nos permite hacer css con la sintaxis Ãºnica del prepocesador. Es la forma mÃ¡s eficiente de escribir css.&lt;/p&gt;

&lt;p&gt;Sass sirve para mucho, desde declarar variables mÃ¡s ordenado y eficiente, hasta hacer el css de tu aplicaciÃ³n en pequeÃ±os archivos .sass de menos de 15 lÃ­neas de cÃ³digo,asÃ­ que si quieres aprender a usar este preprocesador tan Ãºtil y prÃ¡ctico, has venido al lugar correcto,Â¡Vamos allÃ¡!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#instalaci%C3%B3n-y-descargas"&gt;
  &lt;/a&gt;
  instalaciÃ³n y descargas
&lt;/h2&gt;

&lt;h5&gt;
  &lt;a href="#descargas"&gt;
  &lt;/a&gt;
  descargas
&lt;/h5&gt;

&lt;p&gt;Hay dos mÃ©todos de hacerlo, por aplicaciÃ³n, y lÃ­nea de comando, si quieres probar una aplicaciÃ³n, recomiendo &lt;a href="https://mhs.github.io/scout-app/"&gt;Scout&lt;/a&gt; es OpenSource y rÃ¡pidamente tienes un entorno de trabajo.&lt;/p&gt;

&lt;p&gt;Ahora, la lÃ­nea de Comandos es la mÃ¡s recomendable a mi parecer, pero tranquilo, no es nada difÃ­cil la instalaciÃ³n de sass.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#requisitos-indispensables"&gt;
  &lt;/a&gt;
  Requisitos indispensables
&lt;/h1&gt;

&lt;p&gt;Necesitas tener instalado  Ruby para poder instalar Sass, pero,  Â¿quÃ© es Ruby? Ruby es un lenguaje se programaciÃ³n y ademÃ¡s tiene un gestor de paquetes llamado Ruby.gems y Sass es un gems ( asÃ­ se llaman los paquetes de Ruby.gems); Ruby.gems permite distribuir tanto paquetes como librerÃ­as. Fue diseÃ±ado para que fÃ¡cilmente pudiera construir, instalar y distribuir librerÃ­as.  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nbWI6kgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc7dedjnnxz0ngen6k69.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nbWI6kgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc7dedjnnxz0ngen6k69.png" alt="image of ruby"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#instalaci%C3%B3n-de-ruby-en-windows"&gt;
  &lt;/a&gt;
  instalaciÃ³n de Ruby en Windows
&lt;/h1&gt;

&lt;p&gt;Los pasos son de verdad,muy fÃ¡ciles, lo que tienes que hacer es ir a la &lt;a href="http://rubyinstaller.org/"&gt; pÃ¡gina oficial de Ruby&lt;/a&gt;, y descargar segÃºn sus necesidades  (32 bits y 64 bits), es el tÃ­pico programa ejecutable, donde sÃ³lo le das siguiente y te muestra informaciÃ³n y opciones,vas leyendo hasta terminar la instalaciÃ³n,Â¡y eso es todo! Ya tenemos Ruby instalado en Windows.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#instalaci%C3%B3n-de-ruby-en-linux-y-mac"&gt;
  &lt;/a&gt;
  instalaciÃ³n de Ruby en Linux y Mac
&lt;/h1&gt;

&lt;p&gt;En Linux y en Mac, Ruby viene pre instalado en el sistema por defecto. La versiÃ³n no es la mÃ¡s actualizada, pero si lo que pretendes es usar Sass, sirve.&lt;/p&gt;

&lt;p&gt;Lo que necesita &lt;a href="https://rubygems.org/gems/sass"&gt;Sass&lt;/a&gt; es que la versiÃ³n de Ruby sea igual o mayor a la versiÃ³n  1.8.7 en la mayorÃ­a de casos la versiÃ³n que viene pre instalada es la 1.9.3 o superior.&lt;/p&gt;

&lt;p&gt;Si tu distribuciÃ³n de Linux no trae Ruby pre instalado, a continuaciÃ³n presento las otras dos de maneras de instalar Ruby:&lt;/p&gt;

&lt;p&gt;Usar el &lt;strong&gt;Sistema de gestiÃ³n de paquetes&lt;/strong&gt; di tienes una distribuciÃ³n basada en debian o la misma debian puedes usar el apt  (advanced packaging tool) de la siguiente manera&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;$ sudo apt install  (nombre-del-paquete)&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
 en caso de tener una distribuciÃ³n de Linux que no utilice &lt;strong&gt;apt&lt;/strong&gt; puedes ir a la pÃ¡gina oficial de Ruby y revisar los muchos y extensos  &lt;a href="https://www.ruby-lang.org/en/documentation/installation/"&gt;mÃ©todos de instalaciÃ³n&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Para finalizar con la parte de la instalaciÃ³n, les presento RVM  (Ruby Version Manager). Una muy buena herramienta para la lÃ­nea de Comandos, que te permite fÃ¡cilmente instalar, manejar y trabajar con varios entornos de Ruby.&lt;/p&gt;

&lt;p&gt;Cabe destacar que el proceso de &lt;a href="http://rvm.io/rvm/install"&gt;instalaciÃ³n&lt;/a&gt; es algo mÃ¡s largo y tedioso,pero nada del otro mundo. TambiÃ©n,pienso que vale la pena usar esta herramienta ya que permite tener varias versiones de Ruby y Sass sin desinstalar las que usamos diariamente,es Ãºtil cuando salen versiones nuevas pero quieres usar la anterior tambiÃ©n. Esta herramienta estÃ¡ disponible para todos los sistemas operativos,tanto Windows como Linux y Mac. Es totalmente compatible con los 3 sistemas operativos.&lt;/p&gt;

&lt;p&gt;Admito que Me he quedado mucho en la instalaciÃ³n de Ruby,pero era para que no se confundan y mostrarles todas las opciones posibles,ahora si toca la instalaciÃ³n de Sass.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#instalaci%C3%B3n-de-sass"&gt;
  &lt;/a&gt;
  instalaciÃ³n de Sass
&lt;/h2&gt;

&lt;p&gt;Antes de empezar a instalar Sass, les quiero decir que si tienen dudas con  gusto responderÃ© siempre y cuando estÃ© a mi alcance.&lt;/p&gt;

&lt;p&gt;La instalaciÃ³n de Sass es muy fÃ¡cil:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Abrir la terminal  ( en Windows cmd).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Usamos Ruby.gems para instalar Sass,recuerden que Ruby.gems es la que gestiona los paquetes&lt;br&gt;
&lt;br&gt;
&lt;code&gt;$ gem install sass&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
el comando instalarÃ¡ todas las dependencias requeridas. Si la consola marca error a lo mejor necesitaremos usar el sudo&lt;br&gt;
&lt;br&gt;
&lt;code&gt;$sudo gem install sass&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
para comprobar si se instalÃ³ correctamente, copiamos y pegamos en la consola o cmd este comando:&lt;br&gt;
&lt;br&gt;
&lt;code&gt;$sass -v&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
eso nos deberÃ­a devolver la versiÃ³n de Sass 3.4.7 (selective Steve).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Â¡Felicidades! Has completado la instalaciÃ³n de Ruby y Sass, son herramientas que todo dev deberÃ­a tener en su ordenador. Luego harÃ© posts de cÃ³mo usar Sass,su sintaxis y demÃ¡s. Hasta pronto devs! Recuerda que cualquier duda la puedes dejar en la bandeja de comentarios.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>The definition and path to becoming a freelancer</title>
      <author>Lesly Villalobos</author>
      <pubDate>Fri, 16 Apr 2021 14:39:16 +0000</pubDate>
      <link>https://dev.to/lvtdeveloper/the-definition-and-path-to-becoming-a-freelancer-3ndn</link>
      <guid>https://dev.to/lvtdeveloper/the-definition-and-path-to-becoming-a-freelancer-3ndn</guid>
      <description>&lt;p&gt;Hi everyone, today I would like to talk about a topic you can relate to, which is the freelancer's journey. Let's start with the following question&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Is being a freelancer a lifestyle and at what point do you stop being a freelancer? &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;If we look up the definition of freelancer, it tells us that it is a person who works on his or her own account to provide services and get paid for it. . Under that definition I have this couple of questions that come to my mind &lt;/p&gt;

&lt;p&gt;&lt;b&gt;How profitable is it to be a freelancer all your life?&lt;br&gt;
What is the motivation that drives you to become a freelancer?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Many colleagues have the vision of the freelancer as the person who travels the world programming, others simply donÂ´t want to have a boss who is giving them orders and others just want to earn more because they donÂ´t have a company that takes a percentage of their profit, the reasons can be endless.&lt;/p&gt;

&lt;p&gt;I personally know people who have high earnings as freelancers, but I also know others who earn on average, the same as they would earn in a company, being this group the largest.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;What is the biggest disadvantage of being a freelancer?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I think the main disadvantage of being a freelancer is that by depending on yourself, if something happens to you, you stop producing money, that is, you donÂ´t have a backup team to support you and that sometimes tends to become a burden especially when there are people who depend on you economically. That would explain why most freelancers (statistically) are young and single people. So the question is&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Is being a freelancer a lifestyle or is it just a stepping stone to building your own business? &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I think it depends a lot on the perspective, motivation, and situation of each programmer, maybe there are some who would not change their freelancer status for more money or who look for a way to produce a lot of money, and there are others who dare to take that step to the next level by forming a working group or company, which leads to more management responsibility and less code.&lt;/p&gt;

&lt;p&gt;In your case, &lt;b&gt;what is your experience?&lt;/b&gt; I read you.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;br&gt;
Have a nice day, codersğ&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>career</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Opting Out of Google's Federated Learning of Cohorts (FloC) with Traefik 2</title>
      <author>kolaente</author>
      <pubDate>Fri, 16 Apr 2021 14:21:29 +0000</pubDate>
      <link>https://dev.to/kolaente/opting-out-of-google-s-federated-learning-of-cohorts-floc-with-traefik-2-49ip</link>
      <guid>https://dev.to/kolaente/opting-out-of-google-s-federated-learning-of-cohorts-floc-with-traefik-2-49ip</guid>
      <description>&lt;p&gt;Google has recently announced it will start tracking the visitors of your website even if you're not using Google Analytics or Adsense.&lt;br&gt;
&lt;a href="https://plausible.io/blog/google-floc"&gt;Plausible&lt;/a&gt; sums it up pretty good, in short:&lt;/p&gt;

&lt;p&gt;They put all chrome users in so called "cohorts" which each represent some group of interest.&lt;br&gt;
Basically, they stop following individuals through the internet but instead just let the chrome browser do the profiling and targeting for them based on the sites they've viewed in the past.&lt;br&gt;
The browser then sends a "cohort" identifier to the websites it visits, telling the website (or rather, the ad network used on it) what group that user is part of to show them more relevant ads.&lt;/p&gt;

&lt;p&gt;While Google uses this move as a privacy friendly manner by banning third-party cookies (which in itself &lt;em&gt;is&lt;/em&gt; a good move) they're essentially abusing their monopoly power as the company building the biggest browser and the biggest ad network.&lt;br&gt;
I'll &lt;a href="https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea"&gt;leave it to the eff&lt;/a&gt; to explain in detail why this is such a bad idea.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#opting-out-of-floc-as-a-website-owner"&gt;
  &lt;/a&gt;
  Opting out of FloC as a website owner
&lt;/h2&gt;

&lt;p&gt;FloC is opt-out which means as a website owner, you will need to do something to avoid having your website and its visitors contribute to cohorts rather than opt-in where you would need to include a google script or something like that.&lt;br&gt;
You can do so by sending a &lt;code&gt;Permissions-Policy&lt;/code&gt; header:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Permissions-Policy: interest-cohort=()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Traefik has &lt;a href="https://doc.traefik.io/traefik/middlewares/headers/#adding-headers-to-the-request-and-the-response"&gt;a middleware&lt;/a&gt; to add custom headers which I'll use to send the &lt;code&gt;Permissions-Policy&lt;/code&gt; header to the visitors of my site.&lt;br&gt;
To do that, we'll have to create a middleware with the header first.&lt;br&gt;
Pretty straight forward with traefik, simply create a new config file with this content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;http&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;middlewares&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;nofloc&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;customResponseHeaders&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;Permissions-Policy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;interest-cohort=()"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(this is using yaml, but it will ofc work with toml just fine)&lt;/p&gt;

&lt;p&gt;I like adding these kind of general things to &lt;a href="https://doc.traefik.io/traefik/providers/file/"&gt;config files&lt;/a&gt; so I can use them globally and won't have to recreate them for each container configuration I use.&lt;/p&gt;

&lt;p&gt;Now we can add the &lt;code&gt;nofloc@file&lt;/code&gt; middleware to any traefik router.&lt;br&gt;
If you're using traefik to expose docker containers to the internet, it would look something like this in a docker-compose file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;whoami&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;traefik/whoami&lt;/span&gt;
  &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;traefik.http.routers.whoami.middlewares=nofloc@file"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#applying-it-to-all-services"&gt;
  &lt;/a&gt;
  Applying it to all services
&lt;/h2&gt;

&lt;p&gt;If you're like me, you're probably hosting quite a few services.&lt;br&gt;
While you could just add the middleware by hand to all of these it is a lot easier (and faster) to just add it globally.&lt;br&gt;
Traefik lets you &lt;a href="https://doc.traefik.io/traefik/routing/entrypoints/#middlewares"&gt;add middlewares to http entrypoints&lt;/a&gt; which will basically add them to all services on that entrypoint.&lt;br&gt;
The configuration for our &lt;code&gt;nofloc&lt;/code&gt; middleware is pretty straighforward:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;entryPoints&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;https&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:443&lt;/span&gt;
    &lt;span class="na"&gt;http&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;middlewares&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;nofloc@file&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While changes to files in middlewares are automatically picked up by traefik and don't require you to restart it you will need to restart traefik every time you change the configuration of the entrypoints.&lt;/p&gt;

&lt;p&gt;After doing that, all services using the &lt;code&gt;https&lt;/code&gt; entrypoint will send the &lt;code&gt;Permissions-Policy&lt;/code&gt; header (this blog being one of them).&lt;/p&gt;

&lt;p&gt;You can verify this with curl:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ curl -I https://blog.kolaente.de/2021/04/opting-out-of-googles-federated-learning-of-cohorts-floc-with-traefik-2/
HTTP/2 200 
accept-ranges: bytes
cache-control: no-cache
content-type: text/html; charset=utf-8
date: Fri, 16 Apr 2021 09:55:58 GMT
etag: "60795dff-26bb"
expires: Thu, 01 Jan 1970 00:00:01 GMT
last-modified: Fri, 16 Apr 2021 09:50:55 GMT
permissions-policy: interest-cohort=()
server: nginx/1.19.10
vary: Accept-Encoding
content-length: 9915
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A service &lt;a href="https://securityheaders.com/"&gt;like this one&lt;/a&gt; will also work just fine.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;While Killing third-party cookies is great (and browsers like Safari on MacOS have already started doing this) Google abusing its monopoly power to force FloC onto every website user and owner is not.&lt;br&gt;
As someone who does not use any Google services, not on my websites nor in my every day usage of the internet, I am not a fan of having to take action on my sites to opt out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vikunja.cloud/?utm_source=kolanete_blog&amp;amp;utm_medium=post&amp;amp;utm_campaign=floc_opt_out_traefik"&gt;Privacy matters&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Any questions or suggestions? &lt;a href="https://twitter.com/kolaente"&gt;Hit me up on twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-ressources"&gt;
  &lt;/a&gt;
  Other Ressources
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network"&gt;Paramdeo Singh&lt;/a&gt; has done a good way to explain how to opt out of FloC when you're using other setups like nginx, apache, netliy etc. over on his blog.&lt;/p&gt;

</description>
      <category>google</category>
      <category>traefik</category>
      <category>floc</category>
      <category>advertising</category>
    </item>
    <item>
      <title>Learn to configure ESLINT and PRETTIER in react</title>
      <author>Suprabha</author>
      <pubDate>Fri, 16 Apr 2021 14:20:17 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/learn-to-configure-eslint-and-prettier-in-react-4gp0</link>
      <guid>https://dev.to/suprabhasupi/learn-to-configure-eslint-and-prettier-in-react-4gp0</guid>
      <description>&lt;p&gt;&lt;span&gt;W&lt;/span&gt;hy linting your code is important?&lt;/p&gt;

&lt;p&gt;Linting will checks out the code without executing it. &lt;/p&gt;

&lt;p&gt;The best part of a linter is finding potential errors in your code that donât look like them. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#eslint"&gt;
  &lt;/a&gt;
  ESLint âï¸
&lt;/h2&gt;

&lt;p&gt;ESLint parses your code, analyses it, and runs linting rules. These rules may trigger warnings or errors to let you know if your code is right or wrong.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// â Oops, what is multiple?&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ESLint wouldnât know what add refers to and would throw an error at you. You need to explicitly declare add to correct it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// â Correct&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Install Eslint:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Globally&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;eslint &lt;span class="nt"&gt;-g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;eslint eslint-plugin-react lint-staged &lt;span class="nt"&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you are using VS code, then install the plugin: &lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;ESLint extension for VSCode&lt;/a&gt;. It will highlight errors and warnings directly in your code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-eslint-%E2%9A%99%EF%B8%8E"&gt;
  &lt;/a&gt;
  Configure ESLint âï¸
&lt;/h3&gt;

&lt;p&gt;ESLint is highly configurable. Just add &lt;code&gt;.eslintrc&lt;/code&gt; file at the root of your project, and then you can run ESLint on any files you want.&lt;/p&gt;

&lt;p&gt;If you want to skip eslint for some code then add the comment to your code: &lt;code&gt;// eslint-disable-next-line&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Exmaple: &lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// eslint-disable-next-line&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Use it with caution, Itâs very bad idea to disable ESLint every time it spots errors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eslint-cli-%E2%98%80%EF%B8%8E"&gt;
  &lt;/a&gt;
  ESLint CLI âï¸
&lt;/h3&gt;

&lt;p&gt;ESLint has a CLI to lint files. You can find all the options on &lt;a href="https://eslint.org/docs/user-guide/command-line-interface#options"&gt;ESLintâs docs&lt;/a&gt;. The one you will use the most is the &lt;code&gt;--fix&lt;/code&gt; option, which fixes the files when ESLint can.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;package.json:&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"pre-commit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lint-staged"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eslint ."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;lint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;codebase&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lint-staged"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"*.+(js|jsx)"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"eslint --fix"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;try&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;fix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;whatever&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;can&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;fix&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#eslint-configuration-%E2%9A%99%EF%B8%8E"&gt;
  &lt;/a&gt;
  ESLint Configuration âï¸
&lt;/h3&gt;

&lt;p&gt;&lt;u&gt;.eslintrc.js:&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// eslint-disable-next-line no-undef&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;es2021&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;extends&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eslint:recommended&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;plugin:react/recommended&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;parserOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;ecmaFeatures&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;jsx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;ecmaVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;sourceType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;no-console&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;warn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;import/first&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react/prop-types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linebreak-style&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;unix&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you add above snippet, you will get type error. To fix it add:&lt;br&gt;
&lt;u&gt;.eslintrc.js:&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// eslint-disable-next-line no-undef&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above ESLint config meets the following requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Includes the recommended ESLint rules&lt;/li&gt;
&lt;li&gt;IncludesÂ &lt;code&gt;es6&lt;/code&gt;âs andÂ &lt;code&gt;browser&lt;/code&gt;âs global variables&lt;/li&gt;
&lt;li&gt;Warns the user if it usesÂ &lt;code&gt;console.log&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Includes theÂ &lt;a href="https://github.com/benmosher/eslint-plugin-import"&gt;import&lt;/a&gt;Â plugin andÂ &lt;a href="https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/first.md"&gt;reports any imports that come after non-import statements&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Indicates the parser youâre using ES2020âs syntax&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Checkout &lt;a href="https://github.com/facebook/create-react-app/blob/master/packages/eslint-config-react-app/index.js"&gt;CRA&lt;/a&gt; for more interesting config.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prettier"&gt;
  &lt;/a&gt;
  Prettier ğ½
&lt;/h1&gt;

&lt;p&gt;It helps in formatting the codebase.&lt;/p&gt;

&lt;p&gt;Using Prettier, we can follow common code style.&lt;/p&gt;

&lt;p&gt;Install Prettier:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;prettier &lt;span class="nt"&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;If you are using VS code, then install the plugin: &lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;Prettier extension for VSCode&lt;/a&gt;. It will highlight errors and warnings directly in your code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-prettier-%E2%9A%99%EF%B8%8E"&gt;
  &lt;/a&gt;
  Configure Prettier âï¸
&lt;/h3&gt;

&lt;p&gt;It will format your code, but sometimes you won't like it. You can modify the prettier config via &lt;code&gt;.prettierrc&lt;/code&gt;  or via &lt;code&gt;prettier&lt;/code&gt; key in package.json.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;singleQuote&lt;/code&gt;:Â &lt;code&gt;true&lt;/code&gt;Â if you want to use single quotes,Â &lt;code&gt;false&lt;/code&gt;Â otherwise.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;printWidth&lt;/code&gt;: a number that specifies the line length that the printer will wrap on.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;semi&lt;/code&gt;:Â &lt;code&gt;true&lt;/code&gt;Â if you want to print semicolons at the end of every statement,Â &lt;code&gt;false&lt;/code&gt;Â otherwise.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check &lt;a href="https://prettier.io/docs/en/options.html"&gt;this&lt;/a&gt; out for prettier option.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;.eslintrc.js:&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;extends&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prettier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prettier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="nx"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prettier/prettier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linebreak-style&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;unix&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;arrow-body-style&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;off&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prefer-arrow-callback&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;off&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#prettier-cli-%E2%98%80%EF%B8%8E"&gt;
  &lt;/a&gt;
  Prettier CLI âï¸
&lt;/h3&gt;

&lt;p&gt;Using &lt;code&gt;--write&lt;/code&gt; option which is similar to &lt;code&gt;--fix&lt;/code&gt; in eslint. &lt;/p&gt;

&lt;p&gt;&lt;u&gt;package.json:&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"lint-staged"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"*.+(js|jsx)"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"prettier --write --ignore-unknown"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"*.+(json|css|md)"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"prettier --write"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Enable formatOnSave in Vscode&lt;/p&gt;

&lt;p&gt;Look for formatOnSave and check the checkbox, or add this line to &lt;code&gt;settings.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;editor.formatOnSave&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#integrate-prettier-with-eslint-%E2%9B%A9"&gt;
  &lt;/a&gt;
  Integrate Prettier with ESLint â©
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;ESLint&lt;/strong&gt; has formatting rules too like max-len (similar to printWidth) or quotes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prettier&lt;/strong&gt; replaces ESLintâs formatting rules but doesnât replace code-quality rules.&lt;/p&gt;

&lt;p&gt;Thus, you can integrate &lt;code&gt;Prettier&lt;/code&gt; in your &lt;code&gt;ESLint&lt;/code&gt; configuration by installing the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;eslint-config-prettier eslint-plugin-prettier &lt;span class="nt"&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;eslint-config-prettier&lt;/code&gt; disables rules that conflict with Prettier. At the same time &lt;code&gt;eslint-plugin-prettier&lt;/code&gt; adds the rule that format content using Prettier. You can enable this configuration by using the recommended one:&lt;/p&gt;

&lt;p&gt;&lt;u&gt;.eslintrc.js:&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;extends&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;plugin:prettier/recommended&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Prettier Configuration:&lt;/p&gt;

&lt;p&gt;&lt;u&gt;.prettierrc.json:&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;printWidth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;arrowParens&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;always&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;semi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tabWidth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Basically, it means that Prettier:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Will wrap on line that exceeds 85 characters.&lt;/li&gt;
&lt;li&gt;Will always use parenthesis around arrow functions, even if there is one argument.&lt;/li&gt;
&lt;li&gt;Wonât print semicolons at the end of every statement.&lt;/li&gt;
&lt;li&gt;Will use two spaces per indentation level.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Lint and format at each commit ğº&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can lint and run a codebase, great. But does it mean that now you should lint and format your code whenever you want? No!&lt;/p&gt;

&lt;p&gt;If you are using GIT, you can make use of &lt;a href="https://git-scm.com/docs/githooks"&gt;Git hooks&lt;/a&gt; to run ESLint and Prettier before each commit or each push.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#husky"&gt;
  &lt;/a&gt;
  husky ğ¶
&lt;/h1&gt;

&lt;p&gt;It's not dog. Weâre talking about the tool that allows you to set up Git hooks very easily&lt;/p&gt;

&lt;p&gt;Letâs say your package.json has the following scripts, and you want to run lint and format at each commit:&lt;/p&gt;

&lt;p&gt;&lt;u&gt;package.json:&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"postinstall"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"husky install &amp;amp;&amp;amp; cd app &amp;amp;&amp;amp; yarn install"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"husky"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^6.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install husky as a dev dependency:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, you can add Git hooks in two easy steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install husky &lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add pre commit&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install husky&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;husky &lt;span class="nt"&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Add pre commit
Adding pre-commit to your project by 2 approach:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Approach 1:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create .husky in root and pre-commit file:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.husky/pre-commit:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cp"&gt;#!/bin/sh
&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$(dirname &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="nx"&gt;$0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;)/_/husky.sh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="nx"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;commit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Approach 2:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Insert the following code in your package.json:&lt;br&gt;
&lt;u&gt;package.json&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"husky"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"hooks"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pre-commit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npm run lint &amp;amp;&amp;amp; npm run format"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thatâs all. At each commit, the command associated with pre-commit will be run. So your codebase will be linted and formatted.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pre-commit&lt;/code&gt; is the most used Git hook by far, but you can also use other hooks like &lt;code&gt;pre-push&lt;/code&gt; or &lt;code&gt;post-commit&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lintstaged"&gt;
  &lt;/a&gt;
  lint-staged ğ
&lt;/h3&gt;

&lt;p&gt;The more your codebase will grow, the more linting and formatting will be longer. Imagine you have more than 1000 components. You donât want to wait for ESLint to lint all your codebase, donât you? In the end, the only files that need to be linted are the ones that just have been modified. For that, you can use &lt;a href="https://github.com/okonet/lint-staged"&gt;lint-staged&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Install &lt;code&gt;lint-staged&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; lint-staged
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you have to add a &lt;code&gt;lint-staged&lt;/code&gt; key to your &lt;code&gt;package.json&lt;/code&gt; file for the configuration. According to &lt;a href="https://github.com/okonet/lint-staged"&gt;lint-staged docs&lt;/a&gt;, the configuration should be an object where each value is one or more commands to run, and its key is a glob pattern to use for these commands.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;package.json:&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"lint-staged"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"*.+(js|jsx)"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eslint --fix"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"*.+(json|css|md)"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prettier --write"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above configuration will allow you to run ESLint and fix both .js and .jsx files. In the same time, it will run Prettier on .json, .css and .md files.&lt;/p&gt;

&lt;p&gt;Then, letâs tell ESLint weâll use Prettier's configuration:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.eslintrc.js:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;extends&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prettier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prettier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once done, we need to specify the options to Prettier. For that, either create a &lt;code&gt;.prettierrc&lt;/code&gt; file or add a &lt;code&gt;prettier&lt;/code&gt; key to the &lt;code&gt;package.json&lt;/code&gt;. Weâll choose the first option:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.prettierrc.json:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"semi"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"singleQuote"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"tabWidth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"printWidth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Letâs add the pre-commit hook on staged files. We need to install both husky and &lt;code&gt;lint-staged&lt;/code&gt; in the devDependencies for that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; husky lint-staged
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, weâll add the &lt;code&gt;pre-commit&lt;/code&gt; hook itself by adding a &lt;code&gt;husky&lt;/code&gt; key to &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;u&gt;package.json&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"husky"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"hooks"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pre-commit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lint-staged"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we leave this as-is, it will fail because we havenât specified the configuration for lint-staged, so letâs do it right away:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lint-staged&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*.+(js|jsx)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eslint --fix&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prettier --write --ignore-unknown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*.+(json|css|md)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prettier --write&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we use ESLint to lint and format JS and JSX files. We also use Prettier to format json, css and markdown files. Youâre perfectly set up. &lt;/p&gt;

&lt;p&gt;Here is the full &lt;code&gt;package.json&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;u&gt;package.json&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"react-eslint-prettier-app"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"private"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"postinstall"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"husky install &amp;amp;&amp;amp; cd app &amp;amp;&amp;amp; yarn install"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cd app &amp;amp;&amp;amp; yarn test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"pre-commit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lint-staged"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"husky"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"hooks"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pre-commit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lint-staged"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"lint-staged"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"*.+(js|jsx)"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"eslint --fix"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"prettier --write --ignore-unknown"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"*.+(json|css|md)"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"prettier --write"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"eslint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^7.24.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint-config-prettier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^8.1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint-plugin-prettier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.3.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint-plugin-react"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^7.23.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"husky"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^6.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lint-staged"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^10.5.4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"prettier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2.2.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;u&gt;.eslintrc.js:&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// eslint-disable-next-line no-undef&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;es2021&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;extends&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eslint:recommended&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;plugin:react/recommended&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prettier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;parserOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;ecmaFeatures&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;jsx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;ecmaVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;sourceType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prettier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prettier/prettier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react/prop-types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linebreak-style&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;unix&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;arrow-body-style&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;off&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prefer-arrow-callback&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;off&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;NOTE:&lt;/p&gt;

&lt;p&gt;After making above changes, if the code doesn't work then restart your code editor.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        ğ &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        ğ©ğ»âğ» &lt;a href="https://www.suprabha.me/"&gt; suprabha.me&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        ğ &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>react</category>
    </item>
    <item>
      <title>Â¿CuÃ¡l es el Mejor Navegador?</title>
      <author>Francisco</author>
      <pubDate>Fri, 16 Apr 2021 13:55:40 +0000</pubDate>
      <link>https://dev.to/franciscode/cual-es-el-mejor-navegador-n94</link>
      <guid>https://dev.to/franciscode/cual-es-el-mejor-navegador-n94</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Antes de Comenzar, cabe aclarar que el titulo es muy pero que muy subjetivo, ya que a tÃ­ podrÃ­a gustarte otro navegador a diferencia de mÃ­, si es asÃ­, te invito a comentar el que mas te guste y porque, en los comentarios, una vez aclarado comenzemos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Entonces, Â¿CuÃ¡l es el mejor navegador?, primero debemos hacernos una idea de que significa "&lt;strong&gt;Navegador&lt;/strong&gt;".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#definici%C3%B3n-de-navegador"&gt;
  &lt;/a&gt;
  DefiniciÃ³n de Navegador
&lt;/h2&gt;

&lt;p&gt;Programa que permite navegar por internet u otra red informÃ¡tica de comunicaciones.&lt;/p&gt;

&lt;p&gt;Basado en el escrito anterior, podemos afirmar que un Navegador es una aplicaciÃ³n la cual nos ayuda a Navegar (valga la redundancia) a travÃ©s del internet.&lt;/p&gt;

&lt;p&gt;Ya sabemos entonces que es un navegador, pero, Â¿Cuales son los navegadores mas populares?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#navegadores-populares"&gt;
  &lt;/a&gt;
  Navegadores Populares
&lt;/h2&gt;

&lt;p&gt;Estos son algunos de los navegadores mas populares&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-chrome"&gt;
  &lt;/a&gt;
  Google Chrome
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p_6lo02y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9mh74ggd5yl8q4grfk9p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p_6lo02y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9mh74ggd5yl8q4grfk9p.png" alt="google-chrome"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Google Chrome es un navegador de cÃ³digo cerrado, lo que significa que no podemos editar su cÃ³digo fuente, aunque de igual manera es derivado de proyectos de cÃ³digo libre. Este navegador es desarrollado por Google (De ahÃ­ su nombre). &lt;/p&gt;

&lt;p&gt;EstÃ¡ desarrollado Gratuitamente y su nombre proviene ademÃ¡s del tÃ©rmino en inglÃ©s usado para el marco de la interfaz grÃ¡fica para el usuario.&lt;/p&gt;

&lt;p&gt;Para instalarlo, simplemente deberemos ir a su sitio oficial, descargarlo e instalarlo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fTpM73FU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a47tl5efs7y355hykrkp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fTpM73FU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a47tl5efs7y355hykrkp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Nota: Es muy posible que su logo lo hayas visto, ya que es el navegador mas usado, y por ende el mas popular.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#mozilla-firefox"&gt;
  &lt;/a&gt;
  Mozilla Firefox
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lWOKl8tB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ksvnwea9w9q6zfxy7hre.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lWOKl8tB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ksvnwea9w9q6zfxy7hre.jpg" alt="firefox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Es un navegador web de cÃ³digo libre, desarrollado para distintas plataformas. Usa el motor Gecko para renderizar pÃ¡ginas web, el cual implementa actuales y futuros estÃ¡ndares web.ââ &lt;/p&gt;

&lt;p&gt;Firefox estÃ¡ desarrollado para las plataformas Linux, Android, iOS, macOS y Microsoft Windows. Entre sus caracterÃ­sticas incluyen la tradicional navegaciÃ³n por pestaÃ±as,16â corrector ortogrÃ¡fico (que puede ser incluido vÃ­a Mozilla Addons - Complementos de Mozilla), bÃºsqueda progresiva, marcadores dinÃ¡micos, un administrador de descargas, lector RSS, navegaciÃ³n privada, navegaciÃ³n con georreferenciaciÃ³n, aceleraciÃ³n mediante GPU, e integraciÃ³n del motor de bÃºsqueda que desee el usuario. AdemÃ¡s, se puede instalar tanto sin conexiÃ³n como tambiÃ©n en lÃ­nea desde la pÃ¡gina web, este Ãºltimo es utilizado para descargar los componentes de segundo plano, ideal para equipos con conexiones mÃ­nimas.&lt;/p&gt;

&lt;p&gt;Podemos instalarlo desde su sitio oficial:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ntqRqHhA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j65kkrm61fbxlxzkmbcv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ntqRqHhA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j65kkrm61fbxlxzkmbcv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#opera"&gt;
  &lt;/a&gt;
  Opera
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---BDTKPL3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lffcu18ytza9u1c3qcl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---BDTKPL3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lffcu18ytza9u1c3qcl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Opera es un navegador web creado por la empresa noruega Opera Software. Usa el motor de renderizado Blink.â Tiene versiones para computadoras de escritorio, telÃ©fonos mÃ³viles y tabletas. Los sistemas operativos compatibles con Opera de escritorio son Microsoft Windows, macOS y GNU/Linux entre otros.â&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Como mencion honorÃ­fica quiero comentar acerca del navegador Opera GX, el cual esta optimizado para la experiencia de jugadores de videojuegos, lo usÃ© bastante tiempo, y se puso muy lento, ademÃ¡s tenÃ­a unos problemas con el desarrollo web responsive especificamente en ese navegador, les dejo su imagen igualmente.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Qawjith--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ajadcr59t3jgzf5s8l19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Qawjith--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ajadcr59t3jgzf5s8l19.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#safari"&gt;
  &lt;/a&gt;
  Safari
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sa_4fkTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mpr5vpaumjc3ehkg7tm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sa_4fkTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mpr5vpaumjc3ehkg7tm.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Safari es un navegador web de cÃ³digo cerrado desarrollado por Apple Inc. EstÃ¡ disponible para macOS, iPadOS e iOS, y de 2007 a 2012, estaba disponible para Windows&lt;/p&gt;

&lt;p&gt;Como bien dice su descripciÃ³n, este navegador es compatible solo con Mac, lo que le da un punto en contra.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brave"&gt;
  &lt;/a&gt;
  Brave
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SXECpxWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hl0qe87tbgglklk9n9ob.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SXECpxWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hl0qe87tbgglklk9n9ob.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Brave es un navegador web de cÃ³digo abierto basado en Chromium, creado por la compaÃ±Ã­a Brave Software en el aÃ±o 2016, fundada por el cofundador del Proyecto Mozilla y creador de JavaScript, Brendan Eich.âA partir de 2019, Brave ha sido lanzado para Windows, macOS, Linux, Android e iOS.&lt;/p&gt;

&lt;p&gt;Este navegador es con el que me he sentido mas comodo, no necesitas una extensiÃ³n para bloquear anuncios, a diferencias de otro navegadores, Â¡Brave trae su propio bloqueador de anuncios integrado!, AdemÃ¡s como incentivo para que mas personas usen este navegador brave regala criptomonedas por usarlo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusi%C3%B3n"&gt;
  &lt;/a&gt;
  ConclusiÃ³n
&lt;/h2&gt;

&lt;p&gt;Hay una alta gama de navegadores, por lo cual hay muchas elecciones para elegir tu navegador, en mi caso he probado todos los navegadores de esta guÃ­a exceptuando Safari, en mi opinion el que mas me ha gustado para trabajar y pasar el tiempo es Brave, ahora, te invito a comentar cual es tu favorito!!&lt;/p&gt;

&lt;p&gt;EstÃ©n pendientes que vendrÃ¡n muchos mas publicaciones!&lt;/p&gt;

</description>
      <category>browser</category>
      <category>web</category>
      <category>brave</category>
      <category>chrome</category>
    </item>
    <item>
      <title>ğ10 Trending projects on GitHub for web developers - 16th April 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 16 Apr 2021 13:54:14 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-16th-april-2021-k0k</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-16th-april-2021-k0k</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-utilitytypes"&gt;
  &lt;/a&gt;
  1. utility-types
&lt;/h3&gt;

&lt;p&gt;Collection of utility types, complementing TypeScript built-in mapped types and aliases (think "lodash" for static types).&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/piotrwitek"&gt;
        piotrwitek
      &lt;/a&gt; / &lt;a href="https://github.com/piotrwitek/utility-types"&gt;
        utility-types
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Collection of utility types, complementing TypeScript built-in mapped types and aliases (think "lodash" for static types).
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;h1&gt;
utility-types&lt;/h1&gt;
&lt;p&gt;Collection of utility types, complementing TypeScript built-in mapped types and aliases (think "lodash" for static types).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/utility-types" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3d584f03239c571ca0a89a73a8b5d87ca31aab7341871b11d8d5baf2e1a5fc6e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7574696c6974792d74797065732e737667" alt="Latest Stable Version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/utility-types" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/22e5a29671ee72c6715738812fd01a7fa161fc76cc31a29120e10deddef87e6a/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f7574696c6974792d74797065732e737667" alt="NPM Downloads"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/utility-types" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ba3686114d878b4c75cfffa880cf3873255abd90dad3d3a160da3acfb23ba09c/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f7574696c6974792d74797065732e737667" alt="NPM Downloads"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/utility-types" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/21821885d559666094218b55cbfd59823a71ada5fe80c6aae26fe222a34369ac/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f7574696c6974792d74797065732e737667" alt="Bundlephobia Size"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://semaphoreci.com/piotrekwitek/utility-types" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/707cf60e6a5987f8cc6f0afa46ea64a145e67105d863846d0efe9e75f721e589/68747470733a2f2f73656d6170686f726563692e636f6d2f6170692f76312f70696f7472656b776974656b2f7574696c6974792d74797065732f6272616e636865732f6d61737465722f736869656c64735f62616467652e737667" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/piotrwitek/utility-types" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fc45561783fdfb5c7df9b6c36c5f883cfbf42f13adb42de204092223c0920c4c/68747470733a2f2f696d672e736869656c64732e696f2f64617669642f70696f7472776974656b2f7574696c6974792d74797065732e737667" alt="Dependency Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/piotrwitek/utility-types?type=peer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ba093f02b95bd0c8d64094411ca13b080db4edf9d93c8da41a21e2645293dc29/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f7574696c6974792d74797065732e7376673f7374796c653d666c6174" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://spectrum.chat/utility-types" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3aaae7abc6655c1485b607bd83b732aec0d7316f84511c9c7471c4641d4679f2/68747470733a2f2f77697468737065637472756d2e6769746875622e696f2f62616467652f62616467652e737667" alt="Join the community on Spectrum"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Found it useful? Want more updates?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/piotrwitek/utility-types/stargazers"&gt;&lt;strong&gt;Show your support by giving a â­&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://www.buymeacoffee.com/piotrekwitek" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/c3f856bacd5b09669157ed4774f80fb9d8622dd45ce8fdf2990d3552db99bd27/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67" alt="Buy Me a Coffee"&gt;
&lt;/a&gt;
&lt;a href="https://www.patreon.com/piotrekwitek" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/ca317983c1ee436cd8c1157c5d2769c641372ee441af705dc0a32e3654fcbc9f/68747470733a2f2f63352e70617472656f6e2e636f6d2f65787465726e616c2f6c6f676f2f6265636f6d655f615f706174726f6e5f627574746f6e4032782e706e67" alt="Become a Patron" width="160"&gt;
&lt;/a&gt;


&lt;h3&gt;
&lt;strong&gt;What's new?&lt;/strong&gt;
&lt;/h3&gt;
&lt;p&gt;ğ &lt;em&gt;Now updated to support &lt;strong&gt;TypeScript v3.7&lt;/strong&gt;&lt;/em&gt; ğ&lt;/p&gt;

&lt;br&gt;
&lt;/div&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Providing a set of &lt;a href="https://raw.githubusercontent.com/piotrwitek/utility-types/master/#table-of-contents"&gt;Common Types&lt;/a&gt; for TypeScript projects that are idiomatic and complementary to existing &lt;a href="https://www.typescriptlang.org/docs/handbook/advanced-types.html" rel="nofollow"&gt;TypeScript Mapped Types&lt;/a&gt; so you don't need to copy them between the projects.&lt;/li&gt;
&lt;li&gt;Providing a set of &lt;a href="https://raw.githubusercontent.com/piotrwitek/utility-types/master/#"&gt;Additional Types&lt;/a&gt; compatible with &lt;a href="https://flow.org/en/docs/types/utilities/" rel="nofollow"&gt;Flow's Utility Types&lt;/a&gt; to allow much easier migration to &lt;code&gt;TypeScript&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Goals&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Quality - thoroughly tested for type correctness with type-testing library &lt;code&gt;dts-jest&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Secure and minimal - no third-party dependencies&lt;/li&gt;
&lt;li&gt;No runtime cost - it's type-level only&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; NPM&lt;/span&gt;
npm install utility-types
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; YARN&lt;/span&gt;
yarn add utility-types&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Compatibility Notes&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TypeScript support&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;v3.x.x&lt;/code&gt; - TypeScript v3.1+&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;v2.x.x&lt;/code&gt; - TypeScript v2.8.1+&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;v1.x.x&lt;/code&gt; - TypeScript v2.7.2+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Funding Issues&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Utility-Types&lt;/strong&gt; is an open-source project createdâ¦&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/piotrwitek/utility-types"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-activewin"&gt;
  &lt;/a&gt;
  2. active-win
&lt;/h3&gt;

&lt;p&gt;Get metadata about the active window - title, id, bounds, owner, etc&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sindresorhus"&gt;
        sindresorhus
      &lt;/a&gt; / &lt;a href="https://github.com/sindresorhus/active-win"&gt;
        active-win
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Get metadata about the active window (title, id, bounds, owner, etc)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
active-win&lt;/h1&gt;
&lt;p&gt;Get metadata about the &lt;a href="https://en.wikipedia.org/wiki/Active_window" rel="nofollow"&gt;active window&lt;/a&gt; (title, id, bounds, owner, URL, etc)&lt;/p&gt;
&lt;p&gt;Works on macOS, Linux, Windows.&lt;/p&gt;
&lt;p&gt;Users on macOS 10.13 or earlier needs to download the &lt;a href="https://support.apple.com/kb/DL1998" rel="nofollow"&gt;Swift runtime support libraries&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ npm install active-win
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;activeWindow&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'active-win'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-s1"&gt;activeWindow&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;options&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
    &lt;span class="pl-c"&gt;/*&lt;/span&gt;
&lt;span class="pl-c"&gt; {&lt;/span&gt;
&lt;span class="pl-c"&gt;     title: 'Unicorns - Google Search',&lt;/span&gt;
&lt;span class="pl-c"&gt;     id: 5762,&lt;/span&gt;
&lt;span class="pl-c"&gt;     bounds: {&lt;/span&gt;
&lt;span class="pl-c"&gt;         x: 0,&lt;/span&gt;
&lt;span class="pl-c"&gt;         y: 0,&lt;/span&gt;
&lt;span class="pl-c"&gt;         height: 900,&lt;/span&gt;
&lt;span class="pl-c"&gt;         width: 1440&lt;/span&gt;
&lt;span class="pl-c"&gt;     },&lt;/span&gt;
&lt;span class="pl-c"&gt;     owner: {&lt;/span&gt;
&lt;span class="pl-c"&gt;         name: 'Google Chrome',&lt;/span&gt;
&lt;span class="pl-c"&gt;         processId: 310,&lt;/span&gt;
&lt;span class="pl-c"&gt;         bundleId: 'com.google.Chrome',&lt;/span&gt;
&lt;span class="pl-c"&gt;         path: '/Applications/Google Chrome.app'&lt;/span&gt;
&lt;span class="pl-c"&gt;     },&lt;/span&gt;
&lt;span class="pl-c"&gt;     url: 'https://sindresorhus.com/unicorn',&lt;/span&gt;
&lt;span class="pl-c"&gt;     memoryUsage: 11015432&lt;/span&gt;
&lt;span class="pl-c"&gt; }&lt;/span&gt;
&lt;span class="pl-c"&gt; */&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
API&lt;/h2&gt;
&lt;h3&gt;
activeWindow(options?)&lt;/h3&gt;
&lt;h4&gt;
options&lt;/h4&gt;
&lt;p&gt;Type: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;
screenRecordingPermission &lt;strong&gt;(macOS only)&lt;/strong&gt;
&lt;/h5&gt;
&lt;p&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;br&gt;
Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable the screen recording permission check. Setting this to &lt;code&gt;false&lt;/code&gt; will prevent the screen recording permission prompt on macOS versions 10.15 and newer. The &lt;code&gt;title&lt;/code&gt; property in the result willâ¦&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sindresorhus/active-win"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-cheetah-grid"&gt;
  &lt;/a&gt;
  3. Cheetah Grid
&lt;/h3&gt;

&lt;p&gt;The fastest open-source data table for web.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/future-architect"&gt;
        future-architect
      &lt;/a&gt; / &lt;a href="https://github.com/future-architect/cheetah-grid"&gt;
        cheetah-grid
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The fastest open-source data table for web.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Cheetah Grid&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/future-architect/cheetah-grid"&gt;&lt;img src="https://camo.githubusercontent.com/a9c5912f8ba019f6d41388cb355e676ad29ae99d79b22a14fd5e0d6a20ad52b0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6675747572652d6172636869746563742f636865657461682d677269642e737667" alt="GitHub"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/cheetah-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4e9d0d27c5ff81905f29b0545b9ce7d9c16606ed4f072d9ab99ba3a6a461f6b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f636865657461682d677269642e737667" alt="npm"&gt;&lt;/a&gt;
&lt;a href="http://www.npmtrends.com/cheetah-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f08bcf772fb83f5332824ef49500fc1a32d33b24186cd4de8204cd21926682c/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f636865657461682d677269642e737667" alt="npm"&gt;&lt;/a&gt;
&lt;a href="http://www.npmtrends.com/cheetah-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fa0d755c13252a22b07484049f25b9bb7bb23bbe36f4ae19ce303729c0f3f46d/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f636865657461682d677269642e737667" alt="npm"&gt;&lt;/a&gt;
&lt;a href="http://www.npmtrends.com/cheetah-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f773c49904a458be93f50a12d4eeedbffac58afc35ac97e39d1cd34ac8e8a2e9/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64792f636865657461682d677269642e737667" alt="npm"&gt;&lt;/a&gt;
&lt;a href="http://www.npmtrends.com/cheetah-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/416190eee543f790002742a829fbd50e3307ddf6e02aab0ce77d5a6b93b2350c/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f636865657461682d677269642e737667" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://github.com/future-architect/cheetah-grid/actions?query=workflow%3ACI"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2tePCukK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/future-architect/cheetah-grid/workflows/CI/badge.svg%3Fbranch%3Dmaster" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://future-architect.github.io/cheetah-grid/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9127273333619590cf4338d4a51539b41d7c198ac0abd00fb597880f88ef505/68747470733a2f2f6675747572652d6172636869746563742e6769746875622e696f2f636865657461682d677269642f6c6f676f2e706e67" alt="Cheetah Grid"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The fastest open-source data table for web.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://future-architect.github.io/cheetah-grid/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---O_gk1jC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/future-architect/cheetah-grid/raw/master/images/capture.png" alt="capture.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://future-architect.github.io/cheetah-grid/" rel="nofollow"&gt;DEMO &amp;amp; Documents&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Downloading Cheetah Grid&lt;/h2&gt;
&lt;h3&gt;
Using Cheetah Grid with a CDN&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/cheetah-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4e9d0d27c5ff81905f29b0545b9ce7d9c16606ed4f072d9ab99ba3a6a461f6b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f636865657461682d677269642e737667" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://unpkg.com/cheetah-grid@1.0&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Downloading Cheetah Grid using npm&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/cheetah-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4e9d0d27c5ff81905f29b0545b9ce7d9c16606ed4f072d9ab99ba3a6a461f6b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f636865657461682d677269642e737667" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;npm install -S cheetah-grid&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-js js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-s1"&gt;cheetahGrid&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'cheetah-grid'&lt;/span&gt;
&lt;span class="pl-c"&gt;// or&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;cheetahGrid&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"cheetah-grid"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Downloading Cheetah Grid source code&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/cheetah-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4e9d0d27c5ff81905f29b0545b9ce7d9c16606ed4f072d9ab99ba3a6a461f6b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f636865657461682d677269642e737667" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://unpkg.com/cheetah-grid@1.0/dist/cheetahGrid.es5.min.js" rel="nofollow"&gt;cheetahGrid.es5.min.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SourceMap&lt;br&gt;
&lt;a href="https://unpkg.com/cheetah-grid@1.0/dist/cheetahGrid.es5.min.js.map" rel="nofollow"&gt;cheetahGrid.es5.min.js.map&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Downloading Cheetah Grid using GitHub&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/future-architect/cheetah-grid"&gt;&lt;img src="https://camo.githubusercontent.com/ee2e4fa55eec5930da06885a94832597ad0cb74a8cbbb031b27e01f106018234/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7061636b6167652d6a736f6e2f762f6675747572652d6172636869746563742f636865657461682d677269642e737667" alt="GitHub package version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
git clone&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;git clone https://github.com/future-architect/cheetah-grid.git&lt;/pre&gt;

&lt;/div&gt;
&lt;h4&gt;
npm install &amp;amp; build&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;npm install
npm run build&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;built file is created in the &lt;code&gt;./packages/cheetah-grid/dist&lt;/code&gt; directory&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;h3&gt;
Example for basic usage&lt;/h3&gt;
&lt;div class="highlight highlight-text-html-basic js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;="&lt;span class="pl-s"&gt;sample&lt;/span&gt;" &lt;span class="pl-c1"&gt;style&lt;/span&gt;="&lt;span class="pl-s"&gt;height: 300px; border: solid 1px #ddd;&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;// initialize&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;grid&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-s1"&gt;cheetahGrid&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;ListGrid&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c"&gt;// Parent element on which to place the grid&lt;/span&gt;
    &lt;span class="pl-c1"&gt;parentElement&lt;/span&gt;: &lt;span class="pl-smi"&gt;document&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;querySelector&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'#sample'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c"&gt;// Header definition&lt;/span&gt;
    &lt;span class="pl-c1"&gt;header&lt;/span&gt;&lt;/pre&gt;â¦
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/future-architect/cheetah-grid"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-superplate"&gt;
  &lt;/a&gt;
  4. Superplate
&lt;/h3&gt;

&lt;p&gt;A well-structured production-ready frontend boilerplate with Typescript, Jest, testing-library, styled-component, Sass, Css, .env, Fetch, Axios, Reverse Proxy, Bundle Analyzer and 30+ plugin. For now, only creates project for Next.js.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pankod"&gt;
        pankod
      &lt;/a&gt; / &lt;a href="https://github.com/pankod/superplate"&gt;
        superplate
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A well-structured production-ready frontend boilerplate with Typescript, Jest, testing-library, styled-component, Sass, Css, .env, Fetch, Axios, Reverse Proxy, Bundle Analyzer and 30+ plugin. For now, only creates project for Next.js. https://pankod.github.io/superplate/
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="MD"&gt;
&lt;div&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/pankod/superplate/master/README.MD/images/banner.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yG3iRalS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pankod/superplate/master/README.MD/images/banner.png"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div&gt;A well-structured production-ready frontend boilerplate with Typescript, Jest, testing-library, styled-component, Sass, Css, .env, Fetch, Axios, Reverse Proxy, Bundle Analyzer and 30+ plugin. For now, only creates project for Next.js.&lt;/div&gt;
&lt;br&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://meercode.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/af0757484aa29a61e5baf2c52a8c965e1c06dfb854bbdb836a14be028cb91e17/68747470733a2f2f6d656572636f64652e696f2f62616467652f70616e6b6f642f7375706572706c6174653f747970653d63692d73636f7265266272616e63683d6d617374657226746f6b656e3d325a69543859736f4a677435374a4232334e59775872465933724a485a626f54266c6173744461793d3331" alt="Meercode CI Score"&gt;&lt;/a&gt;
&lt;a href="https://meercode.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3117b4a8f473bbc9b3c42daa3585abc8a5f45c75a4d59af0e6e18bdc85513bc2/68747470733a2f2f6d656572636f64652e696f2f62616467652f70616e6b6f642f7375706572706c6174653f747970653d63692d737563636573732d72617465266272616e63683d6d617374657226746f6b656e3d325a69543859736f4a677435374a4232334e59775872465933724a485a626f54266c6173744461793d3331" alt="Meercode CI Success Rate"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/pankod/superplate/maintainability" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/397a8c15a88b08c680e67a1247b75454ee9d3989a3d0460b5cf67bcb0680bfdd/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f65623462356138663838623665353131653631642f6d61696e7461696e6162696c697479" alt="Maintainability"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/superplate-cli" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c5a41eda69df36ff916166326510a2fb310dab06bed49b76c4e74d5640bc8d41/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7375706572706c6174652d636c692e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/pankod/superplate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9be3afccfa280a35113b7422d75aaf9e2a1dc2e795c987a340f86006ce5c3117/68747470733a2f2f64617669642d646d2e6f72672f70616e6b6f642f7375706572706c6174652f7374617475732e737667" alt="dependencies Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/pankod/superplate?type=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f4ad0c12cb240d31f293d7d5809edd54b2f075e00e2d1eaf3024e8b02971dec1/68747470733a2f2f64617669642d646d2e6f72672f70616e6b6f642f7375706572706c6174652f6465762d7374617475732e737667" alt="dev-dependencies Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/superplate-cli" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/92ba0c087580697013aafa35f8f1fd9ff631b5bfb1f0cbec5ae6be7107654776/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f7375706572706c6174652d636c69" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div&gt;
  Created by &lt;a href="https://www.pankod.com" rel="nofollow"&gt;Pankod&lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;
About&lt;/h2&gt;
&lt;p&gt;superplate has been developed to create rock solid UI frameworks apps boilerplate with no build configurations in seconds.&lt;/p&gt;
&lt;p&gt;You can add usefull, highly-demands front-end development tools and libraries as a plugin by using superplate CLI during the project creation phase.&lt;/p&gt;
&lt;p&gt;To learn on how superplate and its plugins work, you can check out our &lt;a href="https://pankod.github.io/superplate/" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For now, superplate only creates project for Next.js apps as a default Framework option. Other frameworks will be added soon.&lt;/p&gt;
&lt;h2&gt;
Available Integrations&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/pankod/superplate/master/README.MD/images/available.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0f1aOHkx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pankod/superplate/master/README.MD/images/available.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Coming Soon&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/pankod/superplate/master/README.MD/images/integrations.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qGCGiecq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pankod/superplate/master/README.MD/images/integrations.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;For more detailed information and usage, refer to the &lt;a href="https://pankod.github.io/superplate/" rel="nofollow"&gt;superplate documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Quick Start&lt;/h2&gt;
&lt;p&gt;To create a new app run the command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;npx superplate-cli &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;my-project&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Make sure you have npx installed (npx is shippedâ¦&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pankod/superplate"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-react-cool-portal"&gt;
  &lt;/a&gt;
  5. React Cool Portal
&lt;/h3&gt;

&lt;p&gt;React hook for Portals, which renders modals, dropdowns, tooltips etc.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wellyshen"&gt;
        wellyshen
      &lt;/a&gt; / &lt;a href="https://github.com/wellyshen/react-cool-portal"&gt;
        react-cool-portal
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ğ ğ React hook for Portals, which renders modals, dropdowns, tooltips etc. to &amp;lt;body&amp;gt; or else.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;em&gt;&lt;b&gt;REACT COOL PORTAL&lt;/b&gt;&lt;/em&gt;
&lt;/h1&gt;
&lt;p&gt;This is a React &lt;a href="https://reactjs.org/docs/hooks-custom.html#using-a-custom-hook" rel="nofollow"&gt;hook&lt;/a&gt; for &lt;a href="https://reactjs.org/docs/portals.html" rel="nofollow"&gt;Portals&lt;/a&gt;. It helps you render children into a DOM node that exists outside the DOM hierarchy of the parent component. From now on you will never need to struggle with modals, dropdowns, tooltips etc. Check the &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-portal/master/#features"&gt;features&lt;/a&gt; section out to learn more. Hope you guys ğğ» it.&lt;/p&gt;
&lt;p&gt;â¤ï¸ it? â­ï¸ it on &lt;a href="https://github.com/wellyshen/react-cool-portal/stargazers"&gt;GitHub&lt;/a&gt; or &lt;a href="https://twitter.com/intent/tweet?text=With%20@react-cool-portal,%20I%20can%20build%20modals,%20dropdowns,%20tooltips%20etc.%20without%20struggle!%20Thanks,%20@Welly%20Shen%20%F0%9F%A4%A9" rel="nofollow"&gt;Tweet&lt;/a&gt; about it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ğ Looking for a form library? Give &lt;a href="https://react-cool-form.netlify.app" rel="nofollow"&gt;React Cool Form&lt;/a&gt; a try!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/wellyshen/react-cool-portal/actions?query=workflow%3ACI"&gt;&lt;img src="https://camo.githubusercontent.com/680dca5cf5a7394e2a0ecdab1905d075b846038fb59180728b2f24f94e81aae9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f77656c6c797368656e2f72656163742d636f6f6c2d706f7274616c2f43493f7374796c653d666c61742d737175617265" alt="build status"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/wellyshen/react-cool-portal?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/32c32156cf08de1cc897d2452043990770b70529c9335aea526be1cb58230570/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f77656c6c797368656e2f72656163742d636f6f6c2d706f7274616c3f7374796c653d666c61742d737175617265" alt="coverage status"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/react-cool-portal" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e2de1dc410c0aaaee582f2888c467988304ccad8c1d9454b037860fb38e42179/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d636f6f6c2d706f7274616c3f7374796c653d666c61742d737175617265" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmtrends.com/react-cool-portal" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/09f488b8ea0508bc7fbe8e285b01baf7349cbf1e0547bc02868058bdfe724caf/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f72656163742d636f6f6c2d706f7274616c3f7374796c653d666c61742d737175617265" alt="npm downloads"&gt;&lt;/a&gt;
&lt;a href="https://www.npmtrends.com/react-cool-portal" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2fa4a2f04eeb61c861947bb468d89aa8294ba08c5f14745d5be623041e25a986/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f72656163742d636f6f6c2d706f7274616c3f7374796c653d666c61742d737175617265" alt="npm downloads"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=react-cool-portal" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe1c1c511bf7565ecee1e90e48c7df7fcc68369a26a3a8f2fadf375640012075/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f72656163742d636f6f6c2d706f7274616c3f7374796c653d666c61742d737175617265" alt="npm bundle size"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-portal/master/LICENSE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0896cc02347a2a5478eb66d05391b7ff85f0c1ec5738804c9069f9aa28a16c08/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f77656c6c797368656e2f72656163742d636f6f6c2d706f7274616c3f7374796c653d666c61742d737175617265" alt="MIT licensed"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-portal/master/#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/9ca5427c9c82cefac507b98bf9b2ae9277e0b641835b5f1bce2a818690037cdc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d332d6f72616e67653f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;
&lt;a href="https://github.com/wellyshen/react-cool-portal/blob/master/CONTRIBUTING.md"&gt;&lt;img src="https://camo.githubusercontent.com/71e397063e80d7be259be6cffe71736bdd5ae6ebe31531f20b873b6883663e1d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e3f7374796c653d666c61742d737175617265" alt="PRs welcome"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/tweet?text=With%20@react-cool-portal,%20I%20can%20build%20modals,%20dropdowns,%20tooltips%20etc.%20without%20struggle!%20Thanks,%20@Welly%20Shen%20%F0%9F%A4%A9" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d1a691af54b21373115ab03f03178acbd6faeab7960acff72d95ff7b57ad399a/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f7374796c653d736f6369616c2675726c3d68747470732533412532462532466769746875622e636f6d25324677656c6c797368656e25324672656163742d636f6f6c2d706f7274616c" alt="Twitter URL"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Live Demo&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/21308003/91049364-b1eb1580-e64f-11ea-9776-4668551db40d.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uDavV6Ky--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/21308003/91049364-b1eb1580-e64f-11ea-9776-4668551db40d.gif" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;â¡ï¸ Try yourself: &lt;a href="https://react-cool-portal.netlify.app" rel="nofollow"&gt;https://react-cool-portal.netlify.app&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
ğ Renders an element or component to &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; or &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-portal/master/#basic-use-case"&gt;a specified DOM element&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
ğ£ React &lt;a href="https://reactjs.org/docs/portals.html" rel="nofollow"&gt;Portals&lt;/a&gt; feat. &lt;a href="https://reactjs.org/docs/hooks-custom.html#using-a-custom-hook" rel="nofollow"&gt;Hook&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
ğ¤ Built-in &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-portal/master/#use-with-state"&gt;state controllers&lt;/a&gt;, event listeners and many &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-portal/master/#api"&gt;useful features&lt;/a&gt; for a comprehensive DX.&lt;/li&gt;
&lt;li&gt;
ğ§± Used as a scaffold to &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-portal/master/#build-your-customized-hook"&gt;build your customized hook&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
ğ§¹ Auto removes the un-used portal container for you. Doesn't produce any DOM mess.&lt;/li&gt;
&lt;li&gt;
ğ Supports &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt; typeâ¦&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wellyshen/react-cool-portal"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-lazy-git"&gt;
  &lt;/a&gt;
  6. Lazy Git
&lt;/h3&gt;

&lt;p&gt;A simple terminal UI for git commands&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jesseduffield"&gt;
        jesseduffield
      &lt;/a&gt; / &lt;a href="https://github.com/jesseduffield/lazygit"&gt;
        lazygit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      simple terminal UI for git commands
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6b4cb2fb7e4224d7749b79549ee815392712334b8f873b32b8caeac141f29722/68747470733a2f2f692e696d6775722e636f6d2f6f594237436a382e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6b4cb2fb7e4224d7749b79549ee815392712334b8f873b32b8caeac141f29722/68747470733a2f2f692e696d6775722e636f6d2f6f594237436a382e706e67"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/jesseduffield/lazygit/workflows/Continuous%20Integration/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iKNL-jwS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/jesseduffield/lazygit/workflows/Continuous%2520Integration/badge.svg" alt="CI"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/jesseduffield/lazygit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/00f562a68cdebc361ec05dca6f136465e99f757ff436d32beb376fa9058c37ce/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f6a657373656475666669656c642f6c617a79676974" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://golangci.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c53961b05d5d98e1999f1caed7cf30cb21311ec3f499519c7b9d21f25eff9d66/68747470733a2f2f676f6c616e6763692e636f6d2f6261646765732f6769746875622e636f6d2f6a657373656475666669656c642f6c617a796769742e737667" alt="GolangCI"&gt;&lt;/a&gt; &lt;a href="http://godoc.org/github.com/jesseduffield/lazygit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ab5e05ff609c4a280640cef9c5beeb9bc1953881e9daba2d6235b5989381557/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f6a657373656475666669656c642f6c617a796769743f7374617475732e737667" alt="GoDoc"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/"&gt;&lt;img src="https://camo.githubusercontent.com/541733541b0edacdc920c9f16f0ccedf01bfec2688ffe56113712528d77a2592/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f6a657373656475666669656c642f6c617a796769742e737667" alt="GitHub tag"&gt;&lt;/a&gt; &lt;a href="https://www.tickgit.com/browse?repo=github.com/jesseduffield/lazygit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9d0fbac527d61160f589afcd05b8c0247c1eb70b95fa4bf485beb9298cb02668/68747470733a2f2f62616467656e2e6e65742f68747470732f6170692e7469636b6769742e636f6d2f62616467656e2f6769746875622e636f6d2f6a657373656475666669656c642f6c617a79676974" alt="TODOs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A simple terminal UI for git commands, written in Go with the &lt;a href="https://github.com/jroimartin/gocui" title="gocui"&gt;gocui&lt;/a&gt; library.&lt;/p&gt;

&lt;p&gt;Rant time: You've heard it before, git is &lt;em&gt;powerful&lt;/em&gt;, but what good is that power when everything is so damn hard to do? Interactive rebasing requires you to edit a goddamn TODO file in your editor? &lt;em&gt;Are you kidding me?&lt;/em&gt; To stage part of a file you need to use a command line program to step through each hunk and if a hunk can't be split down any further but contains code you don't want to stage, you have to edit an arcane patch file &lt;em&gt;by hand&lt;/em&gt;? &lt;em&gt;Are you KIDDING me?!&lt;/em&gt; Sometimes you get asked to stash your changes when switching branches only to realise that after you switch and unstash that there weren't even any conflicts and it would have been fine to just checkout the branch directly? &lt;em&gt;YOU HAVE GOT TO BE&lt;/em&gt;â¦&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jesseduffield/lazygit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#7-tsessentials"&gt;
  &lt;/a&gt;
  7. ts-essentials
&lt;/h3&gt;

&lt;p&gt;All basic TypeScript types in one place&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/krzkaczor"&gt;
        krzkaczor
      &lt;/a&gt; / &lt;a href="https://github.com/krzkaczor/ts-essentials"&gt;
        ts-essentials
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      All basic TypeScript types in one place ğ¤
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/12d99f98c84a91360ec2c2731231134dcc03f8e3c4393780524ea76de8642713/68747470733a2f2f656d6f6a6970656469612d75732e73332e6475616c737461636b2e75732d776573742d312e616d617a6f6e6177732e636f6d2f7468756d62732f3234302f676f6f676c652f3134362f746f6f6c626f785f31663966302e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/12d99f98c84a91360ec2c2731231134dcc03f8e3c4393780524ea76de8642713/68747470733a2f2f656d6f6a6970656469612d75732e73332e6475616c737461636b2e75732d776573742d312e616d617a6f6e6177732e636f6d2f7468756d62732f3234302f676f6f676c652f3134362f746f6f6c626f785f31663966302e706e67" width="120" alt="ts-essentials"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;h3&gt;
ts-essentials&lt;/h3&gt;
  &lt;p&gt;All essential TypeScript types in one place ğ¤&lt;/p&gt;
  &lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f1e9ebdefa6f3111f11b0d6904603082dfbc00e1543a739572ad0ebd94e9b06b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f74732d657373656e7469616c732e737667"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/f1e9ebdefa6f3111f11b0d6904603082dfbc00e1543a739572ad0ebd94e9b06b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f74732d657373656e7469616c732e737667"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/34e4b67261b4abdc3120bda3729e02429acf8900fb784ad390d64a1cfd2bf37e/68747470733a2f2f636972636c6563692e636f6d2f67682f6b727a6b61637a6f722f74732d657373656e7469616c732e7376673f7374796c653d737667"&gt;&lt;img alt="Build status" src="https://camo.githubusercontent.com/34e4b67261b4abdc3120bda3729e02429acf8900fb784ad390d64a1cfd2bf37e/68747470733a2f2f636972636c6563692e636f6d2f67682f6b727a6b61637a6f722f74732d657373656e7469616c732e7376673f7374796c653d737667"&gt;&lt;/a&gt;
    &lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master//package.json"&gt;&lt;img alt="Software License" src="https://camo.githubusercontent.com/ad8758fbaebbced78645b98e446c0bb5ec223676ed61700184320887cadbfb8e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/bad8998556f54a59d34844b56f2e0c5fec13fc531d231e15033ccc7c1a6637ef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d32362d6f72616e67652e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/bad8998556f54a59d34844b56f2e0c5fec13fc531d231e15033ccc7c1a6637ef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d32362d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;
    &lt;a href="https://codechecks.io" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9E5h0QCa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/codechecks/docs/master/images/badges/badge-default.svg%3Fsanitize%3Dtrue" alt="codechecks.io"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;npm install --save-dev ts-essentials&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;ğ We require &lt;code&gt;typescript&amp;gt;=3.7&lt;/code&gt;. If you're looking for support for older TS versions use &lt;code&gt;ts-essentials@3&lt;/code&gt; (for 3.6&amp;gt;=)
or &lt;code&gt;ts-essentials@2&lt;/code&gt; instead. If you use any &lt;a href="https://github.com/krzkaczor/ts-essentials/blob/master/lib/functions.ts"&gt;functions&lt;/a&gt; you should add &lt;code&gt;ts-essentials&lt;/code&gt; to your &lt;code&gt;dependencies&lt;/code&gt; (&lt;code&gt;npm install --save ts-essentials&lt;/code&gt;) to avoid runtime errors in production.&lt;/p&gt;
&lt;h2&gt;
What's inside?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Install"&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Whats-inside"&gt;What's inside?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Basic"&gt;Basic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Dictionaries"&gt;Dictionaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Deep-wrapper-types"&gt;Deep* wrapper types&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;DeepPartial&lt;/li&gt;
&lt;li&gt;DeepRequired&lt;/li&gt;
&lt;li&gt;DeepReadonly&lt;/li&gt;
&lt;li&gt;DeepNonNullable&lt;/li&gt;
&lt;li&gt;DeepNullable&lt;/li&gt;
&lt;li&gt;DeepUndefinable&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Writable"&gt;Writable &amp;amp; DeepWritable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Buildable"&gt;Buildable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Omit"&gt;Omit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#StrictOmit"&gt;StrictOmit&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Comparison-between-Omit-and-StrictOmit"&gt;Comparison between &lt;code&gt;Omit&lt;/code&gt; and &lt;code&gt;StrictOmit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#DeepOmit"&gt;DeepOmit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#OmitProperties"&gt;OmitProperties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#PickProperties"&gt;PickProperties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#NonNever"&gt;NonNever&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Merge"&gt;Merge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#MarkRequired"&gt;MarkRequired&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#MarkOptional"&gt;MarkOptional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#ReadonlyKeys"&gt;ReadonlyKeys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#WritableKeys"&gt;WritableKeys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#OptionalKeys"&gt;OptionalKeys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#RequiredKeys"&gt;RequiredKeys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#UnionToIntersection"&gt;UnionToIntersection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Opaque-types"&gt;Opaque types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Tuple-constraint"&gt;Tuple constraint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Exhaustive-switch-cases"&gt;Exhaustive switch cases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#ValueOf-type"&gt;ValueOf type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#ElementOf-type"&gt;ElementOf type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#AsyncOrSync-type"&gt;AsyncOrSync type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#awaited-type"&gt;Awaited type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#newable"&gt;Newable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Assertions"&gt;Assertions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Exact"&gt;Exact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#XOR"&gt;XOR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#functional-type-essentials"&gt;Functional type essentials&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Head&lt;/li&gt;
&lt;li&gt;Tail&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krzkaczor/ts-essentials/master/#Contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Basic&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Primitive&lt;/code&gt; type matching all primitive values.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;noop&lt;/code&gt; function that takes any arguments and returns nothing, as a placeholder for e.g. callbacks.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Dictionaries&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;keywords: map&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-ts js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;stringDict&lt;/span&gt;&lt;/pre&gt;â¦
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/krzkaczor/ts-essentials"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-awesome-captcha"&gt;
  &lt;/a&gt;
  8. Awesome Captcha
&lt;/h3&gt;

&lt;p&gt;Curated list of awesome captcha libraries and crack tools.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ZYSzys"&gt;
        ZYSzys
      &lt;/a&gt; / &lt;a href="https://github.com/ZYSzys/awesome-captcha"&gt;
        awesome-captcha
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ğ Curated list of awesome captcha libraries and crack tools.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Awesome Captcha &lt;a href="https://awesome.re" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64f8905651212a80869afbecbf0a9c52a5d1e70beab750dea40a994fa9a9f3c6/68747470733a2f2f617765736f6d652e72652f62616467652e737667" alt="Awesome"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Curated list of awesome captcha libraries and captcha crack tools.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/CAPTCHA" rel="nofollow"&gt;CAPTCHA&lt;/a&gt; is a type of challengeâresponse test used in computing to determine whether or not the user is human.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ZYSzys/awesome-captcha/master/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ZYSzys/awesome-captcha/master/README-zh.md"&gt;ä¸­æ&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ZYSzys/awesome-captcha/master/README-pl.md"&gt;Polish&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZYSzys/awesome-captcha/master/#libraries"&gt;Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZYSzys/awesome-captcha/master/#generation"&gt;Generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/ZYSzys/awesome-captcha/master/#crack"&gt;Crack&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZYSzys/awesome-captcha/master/#general"&gt;General&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZYSzys/awesome-captcha/master/#chinese"&gt;Chinese&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZYSzys/awesome-captcha/master/#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZYSzys/awesome-captcha/master/#other"&gt;Other&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZYSzys/awesome-captcha/master/#maintainers"&gt;Maintainers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Libraries&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/mewebstudio/captcha"&gt;mewebstudio/captcha&lt;/a&gt; - Captcha for Laravel 5.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Gregwar/Captcha"&gt;CGregwar/Captcha&lt;/a&gt; - PHP Captcha library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekjs/captcha"&gt;trekjs/captcha&lt;/a&gt; - A Lightweight Pure JavaScript Captcha for Node.js. No C/C++, No ImageMagick, No Canvas.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pusuo/patchca"&gt;pusuo/patchca&lt;/a&gt; - Simple yet powerful CAPTCHA library written in Java.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/google/recaptcha"&gt;google/recaptcha&lt;/a&gt; - PHP client library for reCAPTCHA, a free service to protect your website from spam and abuse.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ambethia/recaptcha"&gt;ambethia/recaptcha&lt;/a&gt; - ReCaptcha helpers for ruby apps.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/anhskohbo/no-captcha"&gt;anhskohbo/no-captcha&lt;/a&gt; - No CAPTCHA reCAPTCHA For Laravel.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lorien/captcha_solver"&gt;lorien/captcha_solver&lt;/a&gt; - Universal python API to different captcha solving services.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Generation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/dchest/captcha"&gt;dchest/captcha&lt;/a&gt; - Go package captcha implements generation and verification of image and audio CAPTCHAs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lepture/captcha"&gt;lepture/captcha&lt;/a&gt; - A captcha library that generates audio and image CAPTCHAs.&lt;/li&gt;
&lt;li&gt;â¦&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ZYSzys/awesome-captcha"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-bundless"&gt;
  &lt;/a&gt;
  9. bundless
&lt;/h3&gt;

&lt;p&gt;Dev server and bundler for esbuild&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/remorses"&gt;
        remorses
      &lt;/a&gt; / &lt;a href="https://github.com/remorses/bundless"&gt;
        bundless
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Dev server and bundler for esbuild
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;h3&gt;
bundless&lt;/h3&gt;
    &lt;p&gt;Next gen dev server and bundler&lt;/p&gt;
    &lt;p&gt;project under heavy development&lt;/p&gt;
    &lt;br&gt;
&lt;/div&gt;
&lt;h1&gt;
Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;10x faster than traditional bundlers&lt;/li&gt;
&lt;li&gt;Error panel with sourcemap support&lt;/li&gt;
&lt;li&gt;jsx, typescript out of the box&lt;/li&gt;
&lt;li&gt;import assets, import css&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
What's the difference with traditional tools like Webpack?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Faster dev server times and faster build speeds (thanks to &lt;a href="https://esbuild.github.io" rel="nofollow"&gt;esbuild&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Bundless serves native ES modules to the browser, removing the overhead of parsing each module before serving&lt;/li&gt;
&lt;li&gt;Bundless uses a superset of &lt;a href="https://esbuild.github.io/plugins/" rel="nofollow"&gt;esbuild plugin system&lt;/a&gt; to let users enrich its capabilities&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
What's the difference with tools like vite?&lt;/h3&gt;
&lt;p&gt;Bundless is very similar to vite, both serve native es modules to the browser and build a bundled version for production.&lt;/p&gt;
&lt;p&gt;Also both are based on a plugin system that can be shared between the dev server and the bundler.&lt;/p&gt;
&lt;p&gt;Some differences are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bundless uses the esbuild plugin system instead of rollup&lt;/li&gt;
&lt;li&gt;Bundless uses esbuild instead of rollup for theâ¦&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/remorses/bundless"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-css-layout"&gt;
  &lt;/a&gt;
  10. CSS Layout
&lt;/h3&gt;

&lt;p&gt;A collection of popular layouts and patterns made with CSS. Now it has 90+ patterns and continues growing!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/phuoc-ng"&gt;
        phuoc-ng
      &lt;/a&gt; / &lt;a href="https://github.com/phuoc-ng/csslayout"&gt;
        csslayout
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A collection of popular layouts and patterns made with CSS. Now it has 90+ patterns and continues growing!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
CSS Layout&lt;/h1&gt;
&lt;p&gt;A collection of popular layouts and patterns made with CSS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
ğZero dependencies&lt;/li&gt;
&lt;li&gt;
ğNo frameworks&lt;/li&gt;
&lt;li&gt;
ğNo CSS hacks&lt;/li&gt;
&lt;li&gt;
ğReal use cases&lt;/li&gt;
&lt;li&gt;Good practices (coming soon)&lt;/li&gt;
&lt;li&gt;Accessibility Support (coming soon)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://csslayout.io" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o3v1VBBg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/phuoc-ng/csslayout/master/public/assets/screenshot.png" alt="CSS Layout"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Why&lt;/h2&gt;
&lt;p&gt;Being a front-end engineer, I have to deal with a lot of layouts and components
There are a lot of CSS frameworks out there that provide popular layouts/components but
I usually don't want to include all of them in my project.&lt;/p&gt;
&lt;p&gt;So I collect most popular layouts and components that can be built with pure CSS
They are powered by modern CSS features such as flexbox and grid.&lt;/p&gt;
&lt;p&gt;They are great starting points to be picked and customized easily for each specific need
By composing them, you can have any possible layout that exists in the real life.&lt;/p&gt;
&lt;h2&gt;
Running it on local&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Clone the project:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-text-shell-session js-code-highlight"&gt;
&lt;pre&gt;$ &lt;span class="pl-s1"&gt;git clone https://github.com/phuoc-ng/csslayout&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Install the dependencies:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-text-shell-session js-code-highlight"&gt;
&lt;pre&gt;$ &lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; csslayout&lt;/span&gt;&lt;/pre&gt;â¦
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/phuoc-ng/csslayout"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing ğ
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/lydiahallie/javascript-questions"&gt;JavaScript Questions&lt;/a&gt;  +1,413 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tailwindlabs/headlessui"&gt;Headless UI&lt;/a&gt;    +1,206 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt;  +808 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;Clean Code JavaScript&lt;/a&gt;   +761 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bradtraversy/vanillawebprojects"&gt;Web Projects With Vanilla JavaScript&lt;/a&gt;  +739 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +6,163 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +4,540 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/GorvGoyl/Clone-Wars"&gt;Clone Wars&lt;/a&gt; +4,444 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +4,047 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web Dev For Beginners&lt;/a&gt; +3,926 stars&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>css</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Opt your Netlify, Vercel or Github Pages site out of Google's FLoC Network</title>
      <author>Sunny Golovine</author>
      <pubDate>Fri, 16 Apr 2021 13:52:19 +0000</pubDate>
      <link>https://dev.to/sgolovine/opt-your-netlify-vercel-or-github-pages-site-out-of-google-s-floc-network-3nhl</link>
      <guid>https://dev.to/sgolovine/opt-your-netlify-vercel-or-github-pages-site-out-of-google-s-floc-network-3nhl</guid>
      <description>&lt;p&gt;Federated Learning of Cohorts (or simply FLoC) has made quite a stir in tech circles in the past few days. While I'm by no means expert enough to explain to you how it works, long story short it's a new way for Google to track users now that cookies have become persona non grata in the tech world.&lt;/p&gt;

&lt;p&gt;No one in the privacy space is happy about this. The EFF &lt;a href="https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea"&gt;wrote a scathing article on it&lt;/a&gt; and companies like DuckDuckGo and Brave have already taken steps to block it on their search engines and browsers.&lt;/p&gt;

&lt;p&gt;Plausible Analytics &lt;a href="https://plausible.io/blog/google-floc"&gt;wrote up a report&lt;/a&gt; on what FLoC means for developers and, like all things from Google, it's "opt-out" rather than "opt-in", meaning if you do not take action on your site, Google will opt your site into FLoC. We should probably tell Google not to do that. &lt;/p&gt;

&lt;p&gt;At it's core all you need to do is add this header to your websites response headers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
Permissions-Policy: interest-cohort&lt;span class="o"&gt;=()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Like many of you here I run a number of sites through Netlify, Vercel and Github Pages. Here is a quick breakdown of how to opt-out of FLoC on all 3 platforms.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#netlify"&gt;
  &lt;/a&gt;
  Netlify
&lt;/h2&gt;

&lt;p&gt;Headers in Netlify can be added either via &lt;code&gt;netlify.toml&lt;/code&gt; or your &lt;code&gt;_headers&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;
&lt;span class="c"&gt;# netlify.toml&lt;/span&gt;

&lt;span class="nn"&gt;[[headers]]&lt;/span&gt;
  &lt;span class="py"&gt;for&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/*"&lt;/span&gt;
  &lt;span class="nn"&gt;[headers.values]&lt;/span&gt;
    &lt;span class="py"&gt;Permissions-Policy&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"interest-cohort=()"&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
&lt;span class="c"&gt;# _headers&lt;/span&gt;

/&lt;span class="k"&gt;*&lt;/span&gt;
  Permissions-Policy: interest-cohort&lt;span class="o"&gt;=()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#github-pages"&gt;
  &lt;/a&gt;
  Github Pages
&lt;/h2&gt;

&lt;p&gt;Unfortunately it seems that Github Pages &lt;a href="https://stackoverflow.com/questions/14798589/github-pages-http-headers"&gt;does not allow you to set your HTTP headers&lt;/a&gt;. Luckily we can implement a workaround by adding this to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your root HTML document.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"Permissions-Policy"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"interest-cohort=()"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#vercel"&gt;
  &lt;/a&gt;
  Vercel
&lt;/h2&gt;

&lt;p&gt;Like Netlify, Vercel lets you set response headers through a &lt;code&gt;vercel.json&lt;/code&gt; file. To do so add this to the &lt;code&gt;headers&lt;/code&gt; block in your &lt;code&gt;vercel.json&lt;/code&gt; file. You can read more about Vercel's configuration options &lt;a href="https://vercel.com/docs/configuration#project/headers"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"headers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"source"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/(.*)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"headers"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Permissions-Policy"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"interest-cohort=()"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Part of being a professional and responsible web developer is making sure you are good steward of your users' data, even if you don't directly ask them for it. While major browsers block FLoC already, adding these response headers to your site will ensure that users that aren't using those browsers are still safe from tracking.&lt;/p&gt;

&lt;p&gt;If you enjoyed this post check out some of my &lt;a href="https://sunnygolovine.com/blog"&gt;other writing&lt;/a&gt;&lt;/p&gt;

</description>
      <category>google</category>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
