<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Day 36 of 100 Days of Code &amp; Scrum: Fifth Week Retrospective - No Internet Edition</title>
      <author>Rammina</author>
      <pubDate>Sat, 13 Nov 2021 10:14:26 +0000</pubDate>
      <link>https://dev.to/rammina/day-36-of-100-days-of-code-scrum-fifth-week-retrospective-no-internet-edition-2592</link>
      <guid>https://dev.to/rammina/day-36-of-100-days-of-code-scrum-fifth-week-retrospective-no-internet-edition-2592</guid>
      <description>&lt;p&gt;Happy weekend, everyone!&lt;/p&gt;

&lt;p&gt;...Or at least I would have been if I had my Internet back. This objectively definitely has been the most unproductive week for me, because of things that were out of my control. Not having Internet is a &lt;em&gt;HUGE impediment&lt;/em&gt; for a modern developer who relies a lot on Google searches, Stack Overflow solutions, online resources, and anything else that has to do with data.&lt;/p&gt;

&lt;p&gt;I tried to do whatever I could to remain productive, but it's really hard to not lose my momentum when I'm thrown off by this. Typically, I navigate through my daily life expecting everything to be structured and routinized. I'm pretty bad at responding to unusual things that seem to come out of nowhere.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PIJpt2bp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnqxxsedgp7by1zn5x28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PIJpt2bp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnqxxsedgp7by1zn5x28.png" alt="No Internet Meme" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Either way, thank you all for the continued support and the encouraging words I received from some of you!&lt;/p&gt;

&lt;p&gt;Special thanks to my wife and editor, May for editing images and posting the blog on my behalf.&lt;/p&gt;

&lt;p&gt;Anyway, I'm not going to skip my retrospective, so let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-sprint-goals"&gt;
  &lt;/a&gt;
  Weekly Sprint Goals
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;build my company website.&lt;/li&gt;
&lt;li&gt;continued to learn Next.js.&lt;/li&gt;
&lt;li&gt;go through the Typescript documentation at least 30 minutes each day.&lt;/li&gt;
&lt;li&gt;continue studying for Professional Scrum Master I (PSM I) certification.&lt;/li&gt;
&lt;li&gt;continue networking, but allocate less time to this (coding is more important).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#weekly-review"&gt;
  &lt;/a&gt;
  Weekly Review
&lt;/h2&gt;

&lt;p&gt;Uh, oh... here are the things I've done this week:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;company homepage is not even halfway done.&lt;/li&gt;
&lt;li&gt;I did a small portion of the services page until I remembered that I should aim for a single page MVP first and foremost.&lt;/li&gt;
&lt;li&gt;I learned and reviewed Next.js a bit here and there (mostly about &lt;code&gt;react-css-modules&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;I read through the first four chapters of the Typescript Handbook (until &lt;strong&gt;Object Types&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;I started learning about how to use Amazon SES and Lambda to implement an e-mail contact form for my website.&lt;/li&gt;
&lt;li&gt;studied Scrum for Professional Scrum Master I (PSM I) certification.&lt;/li&gt;
&lt;li&gt;continue to network and expand my connections.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I still made some progress, but this is definitely unfocused.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-retrospective"&gt;
  &lt;/a&gt;
  Weekly Retrospective
&lt;/h2&gt;

&lt;p&gt;Moving on, let's tackle what I've managed to do well, what my shortcomings are, and what I could do better next time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-went-great"&gt;
  &lt;/a&gt;
  What Went Great
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I was consistent with studying Next.js and Typescript for the most part.&lt;/li&gt;
&lt;li&gt;continued to review Scrum, even if it wasn't the main focus for this week.&lt;/li&gt;
&lt;li&gt;I got some sections of the homepage have a finished skeleton.&lt;/li&gt;
&lt;li&gt;made some progress with learning how to implement an email contact form.&lt;/li&gt;
&lt;li&gt;reached out to multiple people on different platforms, but without getting too distracted by social media (finally, I can live without checking the bell icon too much).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#some-mistakes-ive-made"&gt;
  &lt;/a&gt;
  Some Mistakes I've Made
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I started a lot of things, but finished almost nothing.&lt;/li&gt;
&lt;li&gt;the lack of focus is really bad and goes against Scrum principles.&lt;/li&gt;
&lt;li&gt;because there is no such a thing as partially done, I may as well have done nothing. At least, Scrum says so.&lt;/li&gt;
&lt;li&gt;I also forgot about my "I blogged for 30 days straight" retrospective post.&lt;/li&gt;
&lt;li&gt;AGAIN, forgot to install a website blocker to stop myself from checking off-topic content (subconsciously, I could be avoiding this).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#things-i-could-improve-on"&gt;
  &lt;/a&gt;
  Things I Could Improve On
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;have some backup in case I have outage, that way I don't lose too much productivity.&lt;/li&gt;
&lt;li&gt;just focus on one thing at a time, and switching around too much.&lt;/li&gt;
&lt;li&gt;stop procrastinating writing literally anything I'm planning on writing.&lt;/li&gt;
&lt;li&gt;I should DEFINITELY install something that blocks me from checking certain sites at a specific time.&lt;/li&gt;
&lt;li&gt;prioritize tasks that are more likely to help me meet my weekly goals.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you once again, everyone! Have a great weekend!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/intro.html"&gt;The Typescript Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to check me in other media and reach out to me!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>40+ Nodejs Projects for Beginners – Easy Ideas to Get Started Coding Nodejs [Beginners - Advance]</title>
      <author>John</author>
      <pubDate>Sat, 13 Nov 2021 10:10:06 +0000</pubDate>
      <link>https://dev.to/jdksa/40-nodejs-projects-for-beginners-easy-ideas-to-get-started-coding-nodejs-beginners-advance-4375</link>
      <guid>https://dev.to/jdksa/40-nodejs-projects-for-beginners-easy-ideas-to-get-started-coding-nodejs-beginners-advance-4375</guid>
      <description>&lt;p&gt;If you have decided to build your career in &lt;span&gt;NodeJS &lt;/span&gt;development, we have gathered a list of &lt;span&gt;nodeJS projects for beginners&lt;/span&gt; for all node enthusiasts to build highly scalable &lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/nodejs-project-for-beginners/&amp;amp;ved=2ahUKEwiOlt_I6e7zAhXXb30KHRuwBEIQFnoECAUQAQ&amp;amp;usg=AOvVaw1LC_Y25wyupI6_tdH89kg1" rel="noreferrer noopener"&gt;web applications&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These best &lt;span&gt;nodeJS projects for beginners&lt;/span&gt; will help you gain knowledge about core node concepts, train your skill level, build a superb work portfolio, and get hired for your dream job.&lt;/p&gt;
&lt;p&gt;When you start building your first projects, it’s highly recommended for beginners in coding to create a repository for each of your projects so you will be able to learn &lt;em&gt;git&lt;/em&gt; and show your coding expertise to future employers. &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/nodejs-project-for-beginners/&amp;amp;ved=2ahUKEwiOlt_I6e7zAhXXb30KHRuwBEIQFnoECAUQAQ&amp;amp;usg=AOvVaw1LC_Y25wyupI6_tdH89kg1"&gt;40+ Nodejs Projects for Beginners – Easy Ideas to Get Started Coding Nodejs &lt;/a&gt;&lt;/b&gt; &lt;/p&gt;






</description>
    </item>
    <item>
      <title>Media query practice</title>
      <author>Dahye Ji</author>
      <pubDate>Sat, 13 Nov 2021 08:57:22 +0000</pubDate>
      <link>https://dev.to/daaahailey/media-query-practice-49lk</link>
      <guid>https://dev.to/daaahailey/media-query-practice-49lk</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzfSpHul--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5nxh548wdltb27xxchb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzfSpHul--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5nxh548wdltb27xxchb.png" alt="Image description" width="880" height="1110"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pixel-perfect"&gt;
  &lt;/a&gt;
  Pixel perfect
&lt;/h1&gt;

&lt;p&gt;I wrote my CSS through the guide on figma but still some of them didn't look exactly right. To make them pixel perfect (as mush as possible), I used this app. Check &lt;a href="https://chrome.google.com/webstore/detail/perfectpixel-by-welldonec/dkaagdgjmgdmbnecmcefdhjekcoceebi?hl=ko"&gt;pixel perfect&lt;/a&gt;.&lt;br&gt;
You can screen shot the figma page, put it as a layer on the page you are working and adjust your CSS code!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#validation"&gt;
  &lt;/a&gt;
  Validation
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://validator.w3.org/"&gt;Validator&lt;/a&gt;&lt;br&gt;
This was also new to me. I haven't checked if my code was written well without error or if it follows the web standard. I tried fix what's not suitable and make sure there's no error.&lt;br&gt;
 &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-tried"&gt;
  &lt;/a&gt;
  What I tried
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;I tried not to use &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; which I've been using way too much and also avoided using &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;for the images that don't have much meaning but there for design only, I made them as pseudo element.&lt;/li&gt;
&lt;li&gt;I also added headings which I didn't do it before either. I added them inside each sections / articles and made them to move outside of the screen so it's invisible to us but still readable through screen reader.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#things-id-like-to-do-better-amp-things-to-rememeber"&gt;
  &lt;/a&gt;
  Things I'd like to do better &amp;amp; Things to rememeber.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;As I learnt about some &lt;a href="https://dev.to/daaahailey/css-methodologies-oocss-smacss-bem-1e6k"&gt;CSS Methodologies&lt;/a&gt; that I posted before, I would like to write cleaner and more readable CSS next time.&lt;/li&gt;
&lt;li&gt;Try to avoid using uppercase when naming classes(to avoid mistyping). Instead, use kebab case(-/hyphen). e.g:content-title&lt;/li&gt;
&lt;li&gt;Try to make rules when naming classes. If there are rules, it will be more readable and logical. Think about the structure, common styles of each elements and what those contents are about.&lt;/li&gt;
&lt;li&gt;Think about margin collapsing when writing code.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>pixelperfect</category>
      <category>validation</category>
    </item>
    <item>
      <title>Come Join Git Commit Show #season03 be a part of this amazing adventure!</title>
      <author>Saurabh Rai</author>
      <pubDate>Sat, 13 Nov 2021 08:44:55 +0000</pubDate>
      <link>https://dev.to/srbhr/come-join-git-commit-show-season03-be-a-part-of-this-amazing-adventure-18hj</link>
      <guid>https://dev.to/srbhr/come-join-git-commit-show-season03-be-a-part-of-this-amazing-adventure-18hj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#join-us-for-the-3rd-season-of-git-commit-show-live-online-on-27th-amp-28th-november-2021"&gt;
  &lt;/a&gt;
  Join us for the 3rd Season of Git Commit Show LIVE, ONLINE on 27th &amp;amp; 28th November, 2021.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://gitcommit.show/"&gt;Git Commit Show&lt;/a&gt; is the leading online tech conference where &lt;strong&gt;senior engineers&lt;/strong&gt;, researchers, scientists and professors meet while &lt;strong&gt;being at home&lt;/strong&gt;. A 2-day long, online, 100% free meetup  where senior developers and researchers share their knowledge and breakthrough projects.&lt;br&gt;
Unlike other online conferences, it is fully &lt;strong&gt;interactive&lt;/strong&gt; with opportunities to connect with speakers and fellow attendees &lt;strong&gt;face to face&lt;/strong&gt;. The show &lt;strong&gt;started in 2019&lt;/strong&gt; to provide a better alternative to physical conferences by being open, free and inclusive of people who come from remote locations and modest backgrounds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-in-it-for-you"&gt;
  &lt;/a&gt;
  What's in it for you?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;GROW YOUR NETWORK&lt;/strong&gt; : Chance of meeting a lot of developers, enthusiasts, researchers. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;LEARN WHILE BEING AT HOME&lt;/strong&gt; : Always wanted to be at a conference, but having troubles while travelling? We've got that covered. 

&lt;ul&gt;
&lt;li&gt;Git Commit Show is purely virtual, and with our platform you can have a face to face meet-up. &lt;/li&gt;
&lt;li&gt;You can ask, cross question and get suggestions on your work from the industry professionals. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;60+ Years of Combined Work Experience&lt;/strong&gt; : The Talks are going to be given by industry professionals who are at the top of their game, working in silence and letting their work do the talking. Some of them include :

&lt;ul&gt;
&lt;li&gt;Kilian Valkhof : Founder of Polypane (Browser for building websites)&lt;/li&gt;
&lt;li&gt;Karan Singh :  Senior Principal Architect at Red Hat&lt;/li&gt;
&lt;li&gt;Ken Soh :  Doing amazing work with TagUI &amp;amp; Robotic Process Animation&lt;/li&gt;
&lt;li&gt;Pachi Parra : Developer Relations &amp;amp; Creator of an online community for Non-Binary &amp;amp; Brazilian Women. &lt;/li&gt;
&lt;li&gt;Hemant Rangan : Author of Indian Mind at Work&lt;/li&gt;
&lt;li&gt;And a lot more . . .  &lt;a href="https://gitcommit.show/"&gt;check out our website&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;EXPAND YOUR KNOWLEDGE in 2 Days&lt;/strong&gt; : Come and join us, learn within 2 Days, be a part of this community as an attendee, volunteer or if you want, you can be a speaker as well!
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#apply-here-link"&gt;
  &lt;/a&gt;
  Apply here &lt;a href="http://push.gitcommit.show/"&gt;LINK&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://push.gitcommit.show/"&gt;Apply&lt;/a&gt; as an Attendee or Volunteer with us for the event. There are a lot of opportunities. &lt;/li&gt;
&lt;li&gt;Join our Growing &lt;a href="https://discord.gg/JFWP8c2gPG"&gt;Discord&lt;/a&gt; and be a part of weekly events &amp;amp; many more. We also have plans for first time speakers to break their fear of public speaking. . . .coz fear is a mind-killer! &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>programming</category>
      <category>career</category>
    </item>
    <item>
      <title>discord-trolling, a simple discord.js wrapper</title>
      <author>ferretcode</author>
      <pubDate>Sat, 13 Nov 2021 08:44:03 +0000</pubDate>
      <link>https://dev.to/ferretcode/discord-trolling-a-simple-discordjs-wrapper-3li6</link>
      <guid>https://dev.to/ferretcode/discord-trolling-a-simple-discordjs-wrapper-3li6</guid>
      <description>&lt;p&gt;I recently upgraded to using discord.js V13 for making my Discord bots, but when I looked at their example code I decided I didn't want to have to write out the entire thing every time I wanted to make a new bot.&lt;/p&gt;

&lt;p&gt;So I decided to make my own wrapper so that anyone that felt the same way could have an easier and better time making Discord bots. It already has all of the same complex features that discord.js has because it's built on top of it, but I added an easy way to make slash commands, and just made the whole thing simpler. I also plan to add more features such as integrated pm2 hosting, a new voice wrapper and  http/webhook requests for logging. &lt;/p&gt;

&lt;p&gt;Here are the links to the project:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ferretcode/discord-trolling"&gt;https://github.com/ferretcode/discord-trolling&lt;/a&gt;&lt;br&gt;
&lt;a href="https://npmjs.com/discord-trolling"&gt;https://npmjs.com/discord-trolling&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I appreciate any feedback and I look forward to seeing what everyone thinks! &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>discord</category>
      <category>opensource</category>
    </item>
    <item>
      <title>40+ Vuejs Projects for Beginners – Easy Ideas to Get Started Coding Vuejs [Beginners - Advance]</title>
      <author>John</author>
      <pubDate>Sat, 13 Nov 2021 08:36:10 +0000</pubDate>
      <link>https://dev.to/jdksa/40-vuejs-projects-for-beginners-easy-ideas-to-get-started-coding-vuejs-beginners-advance-1j0j</link>
      <guid>https://dev.to/jdksa/40-vuejs-projects-for-beginners-easy-ideas-to-get-started-coding-vuejs-beginners-advance-1j0j</guid>
      <description>&lt;p&gt;In this article, I’m going to share another list of project ideas, today for the Vue.js apps.&lt;/p&gt;
&lt;p&gt;You could realize that we’re publishing articles with a list of project ideas for the particular front-end technology to provide you some apps ideas that you can create to practice coding and create an excellent portfolio. It’s also helpfull if you wonder how to practice Javascript. &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/vuejs-project-for-beginners/&amp;amp;ved=2ahUKEwjnzOvzuIf0AhWDj-YKHf8IATAQFnoECA8QAQ&amp;amp;usg=AOvVaw2n3XO5CZAnv9fpZ08vYyWu"&gt;40+ Vuejs Projects for Beginners – Easy Ideas to Get Started Coding Vuejs &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Build a Loan Calculator 
- PyQT5 [Python]
</title>
      <author>Bek Brace</author>
      <pubDate>Sat, 13 Nov 2021 08:30:44 +0000</pubDate>
      <link>https://dev.to/bekbrace/build-a-loan-calculator-pyqt5-python-2707</link>
      <guid>https://dev.to/bekbrace/build-a-loan-calculator-pyqt5-python-2707</guid>
      <description>&lt;p&gt;PyQt5 .. a comprehensive set of Python bindings for Qt v5. &lt;br&gt;
It is implemented as more than 35 extension modules and enables Python to be used as an alternative application development language to C++ on all supported platforms including iOS and Android.&lt;/p&gt;

&lt;p&gt;In this video tutorial, you will learn how to build a loan calculator using a this great GUI tool with PyQT5 &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/p2o_9lr8kfg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;PyQt5 may also be embedded in C++ based applications to allow users of those applications to configure or enhance the functionality of those applications.&lt;/p&gt;

&lt;p&gt;Qt is set of cross-platform C++ libraries that implement high-level APIs for accessing many aspects of modern desktop and mobile systems. These include location and positioning services, multimedia, NFC and Bluetooth connectivity, a Chromium based web browser, as well as traditional UI development.&lt;/p&gt;

&lt;p&gt;Seldom that you would find tutorials on PYQT5 .. and that's because Tkinter takes the lion share in Python GUI tools.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed reading the post and watching the video.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sources"&gt;
  &lt;/a&gt;
  Sources 🌐 
&lt;/h2&gt;

&lt;p&gt;PyQt5 PyPi: &lt;a href="https://pypi.org/project/PyQt5/%E2%80%8B"&gt;https://pypi.org/project/PyQt5/​&lt;/a&gt;&lt;br&gt;&lt;br&gt;
QT:&lt;a href="https://www.qt.io"&gt;https://www.qt.io&lt;/a&gt;&lt;br&gt;
Source Code                :&lt;a href="https://github.com/BekBrace/loan-calculator"&gt;https://github.com/BekBrace/loan-calculator&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Automation Script for the Flight Searching</title>
      <author>Dhruv Rajkotia</author>
      <pubDate>Sat, 13 Nov 2021 08:27:46 +0000</pubDate>
      <link>https://dev.to/dhruv_rajkotia/automation-script-for-the-flight-searching-36g1</link>
      <guid>https://dev.to/dhruv_rajkotia/automation-script-for-the-flight-searching-36g1</guid>
      <description>&lt;p&gt;How's it going guys😀, Today I wanted to share you how to write an automation script for any website. for this example I'm going to use the example of the Google Flight(&lt;a href="https://www.google.com/travel/flights"&gt;https://www.google.com/travel/flights&lt;/a&gt;). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-download-the-latest-chrome-driver"&gt;
  &lt;/a&gt;
  Step 1: Download the latest chrome driver
&lt;/h2&gt;

&lt;p&gt;Go to &lt;a href="https://chromedriver.storage.googleapis.com/index.html?path=95.0.4638.69/"&gt;https://chromedriver.storage.googleapis.com/index.html?path=95.0.4638.69/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download the chrome driver based on your OS(I'm using Windows💻)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-clone-repository-and-setup-virtual-env"&gt;
  &lt;/a&gt;
  Step 2: Clone repository and setup virtual env
&lt;/h2&gt;

&lt;p&gt;Clone repo: &lt;a href="https://github.com/dhruvrajkotia/automation_scripts"&gt;https://github.com/dhruvrajkotia/automation_scripts&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;git clone &lt;a href="mailto:git@github.com"&gt;git@github.com&lt;/a&gt;:dhruvrajkotia/automation_scripts.git&lt;/li&gt;
&lt;li&gt;cd automation_scripts&lt;/li&gt;
&lt;li&gt;python -m venv  (I'm using Python 3.9)&lt;/li&gt;
&lt;li&gt;pip install -r requirements.txt (Install all requirements)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Put your chrome driver in the chrome_driver directory in the project. &lt;/p&gt;

&lt;p&gt;Great👏, You have setup the Project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-run-python-script"&gt;
  &lt;/a&gt;
  Step 3: Run Python Script
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;python google_flights_automation_script.py&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can see that one new browser window will shown up and search for the flight based on the parameters that we have provided in the script. &lt;/p&gt;

&lt;p&gt;Now you have successfully configured the script in your local file. Now let's talk about the script logic and how it's working. Hope 🤞 you enjoyed to see the result of the Automation script.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-explanation"&gt;
  &lt;/a&gt;
  Code Explanation
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import time
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So here we are using the selenium library for automation script. Selenium is one of the best library available for the Python Automation script. for more information check it out the official documentation of the selenium: &lt;a href="https://selenium-python.readthedocs.io/"&gt;https://selenium-python.readthedocs.io/&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chromedriver_location = "chrome_driver/chromedriver.exe"  # Path of chrome driver script. OS: windows
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have provided the path to the chromium driver.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# test inputs
site = "https://www.google.com/flights?hl=en"
source_city = "Ahmeda"
destination_city = "Mumbai"
departure_date = "2021-11-21" # YYYY-MM-DD
return_date = "2022-02-27"


# XPATH List of the UI elements
source_city_XPATH = "//*[@id='i6']/div[1]/div/div/div[1]/div/div/input"
dropdown_selection_XPATH = "//*[@id='i6']/div[6]/div[2]/div[2]/div[1]/div/input"
destination_XPATH = "//*[@id='i6']/div[4]/div/div/div[1]/div/div/input"
departure_date_XPATH = '//*[@id="yDmH0d"]/c-wiz[2]/div/div[2]/div/c-wiz/div/c-wiz/div[2]/div[1]/div[1]/div[2]/div[2]/div/div/div[1]/div/div/div[1]/div/div[1]/div/input'
return_date_XPATH = '//*[@id="yDmH0d"]/c-wiz[2]/div/div[2]/div/c-wiz/div/c-wiz/div[2]/div[1]/div[1]/div[2]/div[2]/div/div/div[1]/div/div/div[1]/div/div[2]/div/input'
search_button_XPATH = '//*[@id="yDmH0d"]/c-wiz[2]/div/div[2]/div/c-wiz/div/c-wiz/div[2]/div[1]/div[2]/div/button'
calendar_date_XPATH = '//div[@data-iso = "{date}"]//div[@class="lkvzbb KQqAEc"]'
calendar_submit_button_XPATH = '//*[@id="ow59"]/div[2]/div/div[3]/div[3]/div/button'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have defined the static test input which will fill the values in the google flights website via script. &lt;/p&gt;

&lt;p&gt;we have defined the XPATH for the UI component which will help us to fill the test values using automation script.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    driver = webdriver.Chrome(chromedriver_location)
    driver.maximize_window()
    driver.get(site)  # Open Site in new chrome window
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So using above code new chrome window will open and then maximize the size of the chrome window to full size and open the site that we have configured in the test inputs. (&lt;a href="https://www.google.com/flights?hl=en"&gt;https://www.google.com/flights?hl=en&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   # source_city selection steps
    fly_from = driver.find_element(By.XPATH, source_city_XPATH)
    fly_from.click()
    fly_from_text = driver.find_element(By.XPATH, dropdown_selection_XPATH)
    fly_from_text.send_keys(source_city)
    fly_from_text.send_keys(Keys.ENTER)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So here we first find the source city element. For that you need to open the site and open the inspect window. Select the element and copy the XPATH for the element.(How to find XPATH: &lt;a href="https://www.browserstack.com/guide/find-element-by-xpath-in-selenium"&gt;https://www.browserstack.com/guide/find-element-by-xpath-in-selenium&lt;/a&gt;) After then we click on that div so the dropdown will be open where we can search for the city name. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_2VQBNxf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v2u84cm8z3a32zwigmik.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_2VQBNxf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v2u84cm8z3a32zwigmik.png" alt="Image description" width="880" height="450"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  # destination_city selection steps
    fly_to = driver.find_element(By.XPATH, destination_XPATH)
    fly_to.click()
    fly_to_text = driver.find_element(By.XPATH, dropdown_selection_XPATH)
    fly_to_text.send_keys(destination_city)
    fly_to_text.send_keys(Keys.ENTER)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the destination city, we are going to follow the same sequence.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# departure_date selection steps
    departure_date_element = driver.find_element(By.XPATH, departure_date_XPATH)
    departure_date_element.click()
    time.sleep(2)
    calendar_div = driver.find_element(By.XPATH, calendar_date_XPATH.format(date=departure_date))
    calendar_div.click() 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is for the calendar picker, to pick the calendar date. So here we first open the calendar by clicking on the div. and select the date. &lt;/p&gt;

&lt;p&gt;Here we are going to use the one of the element in div which is data-iso, which has the date in the format of YYYY-MM-DD . So based on that we can select the appropriate date. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;calendar_date_XPATH = '//div[@data-iso = "{date}"]//div[@class="lkvzbb KQqAEc"]'&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The same way we are going to perform for the return date.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; # return_date selection steps
    return_date_calendar_div = driver.find_element(By.XPATH, calendar_date_XPATH.format(date=return_date))
    return_date_calendar_div.click()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we added all the information we need to click on the Done button in the calendar picker. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--27iY2WP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qldtu2b952y03a8879wp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--27iY2WP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qldtu2b952y03a8879wp.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; # click on the Done button in calendar picker
    submit_button = driver.find_element(By.XPATH, calendar_submit_button_XPATH)
    submit_button.click()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, Yeah Congratulations, You probably understood all the concepts regarding automation script for flight search.&lt;/p&gt;

&lt;p&gt;Hope 🤞 you liked it, Feel free to reach out to me if you have any doubts. &lt;/p&gt;

&lt;p&gt;Please &lt;a href="https://twitter.com/dhruv_rajkotia"&gt;Follow&lt;/a&gt; me on twitter, I'm regularly posting some information regarding the ChatBot development, NLP, Python, NodeJS. Glad to connect with you. &lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>testing</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Launching my newsletter.</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Sat, 13 Nov 2021 08:05:38 +0000</pubDate>
      <link>https://dev.to/abhirajb/launching-my-newsletter-1k2o</link>
      <guid>https://dev.to/abhirajb/launching-my-newsletter-1k2o</guid>
      <description>&lt;p&gt;I just hit a 1000 followers on Dev.to last week and its been an awesome journey. &lt;/p&gt;

&lt;p&gt;So on this feat, I am launching Abhiraj's Dev-letter, a weekly digest of the top ProductHunt posts, my top blog posts, some tech news and tips &amp;amp; tricks about web development.&lt;/p&gt;

&lt;p&gt;Its going to be an all-in-one package.&lt;/p&gt;

&lt;p&gt;I will post one issue every Saturday. You can also signup on my Twitter account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.getrevue.co/profile/abhiraj"&gt;Sign up here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I would just like to thank everyone who has followed, liked and read my blog posts. It would never have been possible without you.&lt;/p&gt;




&lt;p&gt;Until next time&lt;br&gt;
&lt;a href="https://abhiraj.glitch.me"&gt;Abhiraj&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Realworld Redwood Firebase PostgreSQL Example</title>
      <author>Natserract</author>
      <pubDate>Sat, 13 Nov 2021 08:03:36 +0000</pubDate>
      <link>https://dev.to/natserract/realworld-redwood-firebase-postgresql-example-1j9c</link>
      <guid>https://dev.to/natserract/realworld-redwood-firebase-postgresql-example-1j9c</guid>
      <description>&lt;p&gt;Zero config fullstack apps with Redwood.js. In this project, show how to build fullstack apps with Redwood.js combined with Firebase for authentication and PostgreSQL DB. Check this source &lt;a href="https://github.com/natserract/postfirewood"&gt;https://github.com/natserract/postfirewood&lt;/a&gt;&lt;/p&gt;

</description>
      <category>fullstack</category>
      <category>redwoodjs</category>
      <category>firebase</category>
      <category>postgres</category>
    </item>
    <item>
      <title>What is PostCSS &amp; Why should we care?</title>
      <author>Mainak Das</author>
      <pubDate>Sat, 13 Nov 2021 07:57:24 +0000</pubDate>
      <link>https://dev.to/dawnind/what-is-postcss-why-should-we-care-45fj</link>
      <guid>https://dev.to/dawnind/what-is-postcss-why-should-we-care-45fj</guid>
      <description>&lt;p&gt;If we visit the official website for &lt;strong&gt;&lt;em&gt;PostCSS&lt;/em&gt;&lt;/strong&gt; we can get an idea about why we might want to use &lt;strong&gt;&lt;em&gt;PostCSS&lt;/em&gt;&lt;/strong&gt; in our next project.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A tool for transforming CSS with JavaScript&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It also comes with plugins that will enable some unreleased features, minify, etc, and makes our life much easier.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#increase-code-readability"&gt;
  &lt;/a&gt;
  Increase code readability
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Add vendor prefixes to CSS rules using values from Can I Use. Autoprefixer will use the data based on current browser popularity and property support to apply prefixes for you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This means that we don't have to apply specific prefixes for supporting Firefox, Chrome, and/ or Safari, PostCSS will do that for us.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#use-tomorrows-css-today"&gt;
  &lt;/a&gt;
  Use tomorrow’s CSS today
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;PostCSS Preset Env&lt;/em&gt;, lets you convert modern CSS into something most browsers can understand, determining the polyfills you need based on your targeted browsers or runtime environments, using &lt;em&gt;cssdb&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can use the future release version of CSS which PostCSS will convert to current CSS syntax so that it can be supported by the browser.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-end-of-global-css"&gt;
  &lt;/a&gt;
  The end of global CSS
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;CSS Modules means you never need to worry about your names being too generic, just use whatever makes the most sense.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It will generate a class appending a unique serial at the end so that it doesn't collide with other classes, just like &lt;code&gt;styled components&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#avoid-errors-in-your-css"&gt;
  &lt;/a&gt;
  Avoid errors in your CSS
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Enforce consistent conventions and avoid errors in your stylesheets with stylelint, a modern CSS linter. It supports the latest CSS syntax, as well as CSS-like syntaxes, such as SCSS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#get-started-with-postcss"&gt;
  &lt;/a&gt;
  Get started with PostCSS
&lt;/h2&gt;

&lt;p&gt;Let us start with setting up the &lt;code&gt;package.json&lt;/code&gt; along with all the dependencies.&lt;/p&gt;

&lt;p&gt;To generate a &lt;code&gt;package.json&lt;/code&gt; all we need to do is run the command in the terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will add the PostCSS dependencies. We need &lt;code&gt;postcss&lt;/code&gt; and  &lt;code&gt;postcss-cli&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i postcss postcss-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For PostCSS to actually run and also to watch the changes we need to add the scripts to the &lt;code&gt;package.json&lt;/code&gt; file&lt;/p&gt;

&lt;p&gt;Folder structure&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oHpcNYw9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vpozsnaqyd70351g7iy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oHpcNYw9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vpozsnaqyd70351g7iy.png" alt="Folder structure" width="257" height="204"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dev:watch"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"postcss src/style.css --dir public --watch"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#using-the-first-plugin"&gt;
  &lt;/a&gt;
  Using the first plugin
&lt;/h3&gt;

&lt;p&gt;The first plugin that we will be using is &lt;code&gt;postcss-import&lt;/code&gt; and if you're familiar with &lt;code&gt;SASS particles&lt;/code&gt; then it will make sense as it's the same thing but for CSS.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This plugin can consume local files, node modules, or web_modules.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To install&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i postcss-import
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To use the plugin we need to add a postcss config file at the root of our project&lt;/p&gt;

&lt;p&gt;&lt;code&gt;postcss.config.js&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V-N4j3iZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9g8p6ymm04q7gf9v3co.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V-N4j3iZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9g8p6ymm04q7gf9v3co.png" alt="config" width="880" height="302"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can import other CSS files into the &lt;code&gt;styles.css&lt;/code&gt; file which then PostCSS will parse and make the styles available in the single output file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/styles.css&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eMD3jXd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyck2byqaxceqfbqe9yr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eMD3jXd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyck2byqaxceqfbqe9yr.png" alt="input" width="880" height="254"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;public/styles.css&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K2NIxTmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqwzigvo84c3c1pnqx55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K2NIxTmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqwzigvo84c3c1pnqx55.png" alt="output" width="880" height="564"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can also minify the CSS to reduce the size of the .css file. For that, we need &lt;code&gt;cssnano&lt;/code&gt; plugin&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i cssnano
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then add the plugin to &lt;code&gt;postcss.config.js&lt;/code&gt; file&lt;/p&gt;

&lt;p&gt;&lt;code&gt;postcss.config.js&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MqpnH_JT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ig2o84vf6c8k3kwksrpv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqpnH_JT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ig2o84vf6c8k3kwksrpv.png" alt="nano" width="880" height="326"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pretty neat, right?&lt;/p&gt;

&lt;p&gt;To enable the future CSS there is also a plugin called &lt;code&gt;PostCSS Preset Env&lt;/code&gt;. This plugin will take the unreleased CSS selectors and change it to the present usable CSS. More info at &lt;a href="https://github.com/csstools/postcss-preset-env"&gt;PostCSS Preset Env&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Setting up this plugin is a little more work as we need to specify the stage of CSS we want to use. We will use the &lt;code&gt;stage 1&lt;/code&gt; to enable the &lt;code&gt;&amp;amp; selector&lt;/code&gt; inside of a class just like &lt;code&gt;SASS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To install the plugin&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i postcss-preset-env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create a future CSS:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iz1SGFyY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opglkhexlto3u8ts5t8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iz1SGFyY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opglkhexlto3u8ts5t8u.png" alt="future" width="880" height="421"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we look closely, this is not a valid CSS &lt;strong&gt;as of now&lt;/strong&gt; for the current specs. But if we see the output from PostCSS we can see it is changed to the CSS of the current specs:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ntuqekiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4npx0dnaaqwe2kiscx2l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ntuqekiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4npx0dnaaqwe2kiscx2l.png" alt="CSS specs" width="880" height="791"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostCSS&lt;/strong&gt; has numerous plugins that you can explore at their &lt;a href="https://www.postcss.parts/"&gt;plugins website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even &lt;strong&gt;&lt;em&gt;TailwindCSS&lt;/em&gt;&lt;/strong&gt; uses PostCSS under the hood. PostCSS is a very powerful tool and can be a game-changer if it can be used correctly.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Image To Text Conversion By Using Google Drive</title>
      <author>Imam Uddin</author>
      <pubDate>Sat, 13 Nov 2021 07:54:24 +0000</pubDate>
      <link>https://dev.to/imamuddinwp/image-to-text-conversion-by-using-google-drive-o8l</link>
      <guid>https://dev.to/imamuddinwp/image-to-text-conversion-by-using-google-drive-o8l</guid>
      <description>&lt;p&gt;Most of the time we need to&lt;b&gt; &lt;a href="https://brandfolder.com/workbench/extract-text-from-image"&gt;copy text from an image&lt;/a&gt;&lt;/b&gt;. Then we usually search this topic on Google or YouTube. But today I will show a very easy and simple way to get text from images like &lt;b&gt;&lt;a href="https://www.afb.org/node/16207/optical-character-recognition-systems"&gt;OCR (Optical Character Recognition)&lt;/a&gt;&lt;/b&gt;, jpg, png, and many more. So Let's start with '&lt;b&gt;&lt;a href="https://pdf.wondershare.com/pdf-software-comparison/google-docs-convert-scanned-pdf-text.html"&gt;image editable text with google drive&lt;/a&gt;&lt;/b&gt;'.   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f-BXRos9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEhRUGykPApeyx5KJXrvoPJ_RlHUg9Jd3CGse3q0JcbPp3Vj6NqlSEG4nhKEej77xo5O36VUJsYJXPn_-QRmrc_ycxlbvQ0iapiaThIj_EysctMXuXSDbPY2keF9_GRnVIBy-_ubKrsrlsbD2fqz0_b_PdnA32c56nksTl8B9xBBWP9ZGpfJmZz9eoThUg" class="article-body-image-wrapper"&gt;&lt;img alt="image-to-text-by-using-google-drive-imamuddinwp" src="https://res.cloudinary.com/practicaldev/image/fetch/s--f-BXRos9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEhRUGykPApeyx5KJXrvoPJ_RlHUg9Jd3CGse3q0JcbPp3Vj6NqlSEG4nhKEej77xo5O36VUJsYJXPn_-QRmrc_ycxlbvQ0iapiaThIj_EysctMXuXSDbPY2keF9_GRnVIBy-_ubKrsrlsbD2fqz0_b_PdnA32c56nksTl8B9xBBWP9ZGpfJmZz9eoThUg" width="859" height="483"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;How can I convert image to text?&lt;/h2&gt;

&lt;p&gt;There are a lot of online tools to convert images to text. Just go to google or any other &lt;b&gt;&lt;a href="https://www.oberlo.com/blog/top-search-engines-world"&gt;popular search engine&lt;/a&gt;&lt;/b&gt; and type '&lt;b&gt;&lt;a href="https://www.google.com/search?q=image+to+text"&gt;image to text&lt;/a&gt;&lt;/b&gt;', You will definitely find many more free and premium / paid tools to &lt;b&gt;&lt;a href="https://www.oberlo.com/blog/top-search-engines-world"&gt;convert images to text&lt;/a&gt;&lt;/b&gt;. Choose your favorite one from your search list.  &lt;/p&gt;

&lt;p&gt;Know from Google Support page: &lt;a href="https://support.google.com/drive/answer/176692?hl=en&amp;amp;co=GENIE.Platform%3DDesktop"&gt;&lt;b&gt;Convert PDF and photo files to text&lt;/b&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;How can I convert picture to text free?&lt;/h3&gt;

&lt;p&gt;To covert picture to text for free, please follow the below steps;&lt;/p&gt; 

&lt;h3&gt;5 Easy Steps Of Convert Image To Editable Text By Using Google Drive&lt;/h3&gt;

&lt;p&gt; &lt;a href="https://www.thewindowsclub.com/google-drive-convert-image-to-text"&gt;Image editable text with google drive&lt;/a&gt;; Let us follow the below 5 easy and simple steps to get editable text from an image, screenshot, picture, photo, or etc. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Step #01:&lt;/b&gt; &lt;br&gt;
    Simply log in to your google drive by using your email account.
    &lt;b&gt;Step #02:&lt;/b&gt; &lt;br&gt;
    Then Upload your desired image from a directory. &lt;br&gt;
    &lt;b&gt;Step #03: &lt;/b&gt; &lt;br&gt;
    After completing the upload, Right Click on the uploaded image in google drive. &lt;br&gt;
    
    &lt;b&gt;Step #04:&lt;/b&gt;  &lt;br&gt;
    Then go to the option '&lt;b&gt;Open With&lt;/b&gt;' and then select '&lt;b&gt;Google Docs&lt;/b&gt;'. It will open in a new tab in your browser. Please see the below image for a better understanding: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LrYhc1rp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEhCPGv2LR-h1F-9FJJXiUSLFqDkeIvuAP6dTj8LX354ofvabfxrr2za-1zlyP2t6EMi_IZvoO63Uxbgh9WXJjrdxVrCKpJRbalBm-ge4bCYRn9u97DSJO2Va1E4UFO3y_lrLoMmpNtnS2HAYKcrOwZxMf3ez7Ro-qKrn5UyBKjVv52O0yXbYIhM5Eg4XA" class="article-body-image-wrapper"&gt;&lt;img alt="image-to-text-google-drive-google-docs" src="https://res.cloudinary.com/practicaldev/image/fetch/s--LrYhc1rp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEhCPGv2LR-h1F-9FJJXiUSLFqDkeIvuAP6dTj8LX354ofvabfxrr2za-1zlyP2t6EMi_IZvoO63Uxbgh9WXJjrdxVrCKpJRbalBm-ge4bCYRn9u97DSJO2Va1E4UFO3y_lrLoMmpNtnS2HAYKcrOwZxMf3ez7Ro-qKrn5UyBKjVv52O0yXbYIhM5Eg4XA" width="880" height="578"&gt;&lt;/a&gt;
    
    &lt;b&gt;Step #5:&lt;/b&gt; &lt;br&gt;
    All Done! This is the Final Step; Wait a little moment to &lt;b&gt;&lt;a href="https://smallseotools.com/image-to-text-converter/"&gt;convert your image into a text or word document&lt;/a&gt;&lt;/b&gt;. Here is the screenshot for downloadable file types:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---CO4JXKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEgADcqiGxcrdug6KXHk2945zDAJsAn_SeleHNMAGyZTCuSbj5-ev_spoSmv5GwgOQNvPqI1_biH5xdRsXNpr21i3T5sQKv8YYT25-tfmpI_8-XdEN6xfouvqikfGnvktrxo55PJuw4HGSuXz-rjRB8XETz11w_kyCTaxzJtmS5vUJz8gECcIKcMPW0vZg" class="article-body-image-wrapper"&gt;&lt;img alt="editable-downloadable-text-image-to-text-by-using-google-drive" src="https://res.cloudinary.com/practicaldev/image/fetch/s---CO4JXKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEgADcqiGxcrdug6KXHk2945zDAJsAn_SeleHNMAGyZTCuSbj5-ev_spoSmv5GwgOQNvPqI1_biH5xdRsXNpr21i3T5sQKv8YYT25-tfmpI_8-XdEN6xfouvqikfGnvktrxo55PJuw4HGSuXz-rjRB8XETz11w_kyCTaxzJtmS5vUJz8gECcIKcMPW0vZg" width="880" height="522"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;Now your image containing text is editable and copy able. And also it is downloadable in MS Word Format. You can simply copy the text and paste it into your desired location. &lt;/blockquote&gt;
 

&lt;h3&gt;How do I convert a picture to text in Word?&lt;/h3&gt;

&lt;p&gt;There is two easy and very simple way to get a text or copy text from an image or picture. &lt;b&gt;The First One&lt;/b&gt; is by online free tools and &lt;b&gt;The Second One&lt;/b&gt; is Google Drive. I  suggest my friends &lt;a href="https://www.wikihow.com/Convert-a-JPEG-Image-Into-an-Editable-Word-Document"&gt;use google drive to get editable text from a picture&lt;/a&gt; or image. Because it is very much easy way. In this way no need for any other software to convert images into words or text. &lt;/p&gt;

&lt;h3&gt;How Can I Convert An Image To Editable Text Without Any software?&lt;/h3&gt;

&lt;p&gt;You can easily convert an image of OCR, png, jpg, or any other format without any software. &lt;a href="https://www.google.com/drive/"&gt;Google Drive&lt;/a&gt; is a very interesting and amazing way to get a text from pictures. Here I have also attached a YouTube video. This video I have shown to get an editable and downloadable text from images by using google drive.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/embed/46L7dtVrk1M"&gt;https://www.youtube.com/embed/46L7dtVrk1M&lt;/a&gt; &lt;/p&gt;

&lt;h4&gt;Conclusion:&lt;/h4&gt;

&lt;p&gt;Thank you for reading this post. If you have more questions on &lt;b&gt;&lt;a href="https://imamuddinwp.blogspot.com/2021/11/image-to-text-conversion-by-using-google-drive.html"&gt;Image To Text By Using Google Drive&lt;/a&gt;&lt;/b&gt;, simply comment here. I'll try my best to reply.  &lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>opensource</category>
    </item>
  </channel>
</rss>
