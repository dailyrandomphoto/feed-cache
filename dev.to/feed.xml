<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Vertical teams at scale a.k.a how to scale frontend work in growing organisation</title>
      <author>Patryk Staniewski</author>
      <pubDate>Wed, 22 Sep 2021 08:59:03 +0000</pubDate>
      <link>https://dev.to/exihuatl/vertical-teams-at-scale-a-k-a-how-to-scale-frontend-work-in-growing-organisation-4lef</link>
      <guid>https://dev.to/exihuatl/vertical-teams-at-scale-a-k-a-how-to-scale-frontend-work-in-growing-organisation-4lef</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-we-were-trying-to-achieve"&gt;
  &lt;/a&gt;
  What we were trying to achieve?
&lt;/h2&gt;

&lt;p&gt;We want to scale our work between multiple independent teams each with its product owner, designer, and multiple engineers. To do that we have a few solutions that we’ll discuss and I’ll try to explain our logic behind making our final decision.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-our-options"&gt;
  &lt;/a&gt;
  What are our options?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#separate-applications-with-a-host"&gt;
  &lt;/a&gt;
  Separate applications with a host.
&lt;/h3&gt;

&lt;p&gt;Creating independent applications that would live in separate repositories is one of the most popular way of building frontend. Each team has its own technologies, tools, and buildchain which some of them really value. There is unfortunately one hefty problem - versioning. In this setup, after making a change in our application we would have to update version in package registry and then bump version inside our “host application”. And then there is our UI library that each app is using.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monorepo-to-the-rescue"&gt;
  &lt;/a&gt;
  Monorepo to the rescue?
&lt;/h3&gt;

&lt;p&gt;Our current application is a monorepo, rather large monorepo.&lt;br&gt;
At the time of writing this article, we have 19290 files with 3580303 lines of code with 89 authors in the last few months.&lt;br&gt;
To create new applications we don’t have to think about build configurations. Linters, unit tests, e2e tests are all already set up and ready for development. It’s as simple as adding a new directory and path to our app routing. It comes at a cost of being forced to use specific technologies and tools. Changing them would need to be approved and developed by each individual team and it’s a nightmare to coordinate.&lt;br&gt;
Additionally, our pipeline’s duration is already ranging between tiresome and infinite (our last worked for 52 minutes). Merge requests are happening on average every hour so we have a constant stream of workers…ehm…working.&lt;br&gt;
Unfortunately, deployment is shared across all teams so even the smallest of changes needs to be verified through multiple people in code review and needs to pass our pipelines two times (one before making a merge and one after on master branch).&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#microfrontend-to-the-rescue"&gt;
  &lt;/a&gt;
  Microfrontend to the rescue?
&lt;/h3&gt;

&lt;p&gt;A microfrontend is a microservice that exists within a browser. Each microfrontend has its own repository, its own build configuration and process, and is being able to be deployed individually. There is a lot of implementation of this concept. One of the most popular tool that helps is &lt;a href="https://single-spa.js.org/"&gt;single-spa&lt;/a&gt; - a framework for bringing together multiple JavaScript microfrontends in a frontend application. It is an incredible tool and should be considered for greenfield projects. It gives a lot of tools and features, such as being able to use different frameworks in the same application.&lt;/p&gt;

&lt;p&gt;These additional features however would mean increased initial payload and memory allocation. Although performance overhead is minor, when we don’t use these additional functionalities it’s a waste of resources, especially when setting up &lt;code&gt;single-spa&lt;/code&gt; would be costly to implement in our existing setup.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#module-federation-to-the-rescue"&gt;
  &lt;/a&gt;
  Module federation to the rescue?
&lt;/h3&gt;

&lt;p&gt;Finally, we decided to integrate new applications using Webpack’s latest feature - module federation. It integrates nicely with our webpack configuration, has a tiny boilerplate, and is straightforward to read (after understanding the complexity of webpack itself).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Multiple separate builds should form a single application. These separate builds should not have dependencies between each other, so they can be developed and deployed individually. - Webpack team  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We distinguish between local and remote modules. Local modules are normal modules that are part of the current application. Remote modules are modules that are being loaded at the runtime.&lt;/p&gt;

&lt;p&gt;The idea is simple. An application references a remote using a configured name that is not known at compile time. That reference is only resolved at runtime by the so-called remote entry point. It’s a minimal script that provides actual external.&lt;/p&gt;

&lt;p&gt;In its simplest form, the code looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// webpack.config.js&lt;/span&gt;
&lt;span class="kr"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ModuleFederationPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mother&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;remotes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;remote&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;remote@http://localhost:3001/remoteEntry.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;RemoteApp&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;remote/App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our remote application will be imported from an external URL instead of our local repository and loaded at runtime.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-we-gained-by-adopting-microservice-architecture"&gt;
  &lt;/a&gt;
  What we gained by adopting microservice architecture?
&lt;/h2&gt;

&lt;p&gt;Microfrontend gave us a lot of benefits and resolved a lot of issues we had. We’ll walk through in a bit more details.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#independent-teams-independent-applications"&gt;
  &lt;/a&gt;
  Independent teams - independent applications
&lt;/h5&gt;

&lt;p&gt;Our vertical teams can work on their own in separate repositories and are free to choose the technologies they need to create the best user experience.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#autonomous-deployments"&gt;
  &lt;/a&gt;
  Autonomous deployments
&lt;/h5&gt;

&lt;p&gt;Our team can now deploy features without being dependent on the mother app. We were able to set up our pipelines that on average last about 8 minutes. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DGhFLduB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sc8gxtjspgjyryuuhub4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DGhFLduB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sc8gxtjspgjyryuuhub4.png" alt="pipeline preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#code-trimming"&gt;
  &lt;/a&gt;
  Code trimming
&lt;/h5&gt;

&lt;p&gt;We are not adding additional code to the already humongous codebase of our monorepo.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#onboarding-new-people"&gt;
  &lt;/a&gt;
  Onboarding new people
&lt;/h5&gt;

&lt;p&gt;Onboarding can be overwhelming for new developers, especially juniors that join our teams. We eased the process and new friends were able to contribute even on their first day with confidence.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#developer-experience"&gt;
  &lt;/a&gt;
  Developer experience
&lt;/h5&gt;

&lt;p&gt;It’s often overlooked, but developer experience is crucial for every successful project. Because we created a new project and were independent of our monorepo application, we were able to integrate Snowpack into our day-to-day work. It gave us instant startup time with a fast refresh and cleaner configuration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-problems-weve-encountered"&gt;
  &lt;/a&gt;
  What problems we've encountered?
&lt;/h2&gt;

&lt;p&gt;On a road to production, we had a few blockades that none of us had met before. We had to be a little bit more creative.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#singleton-libraries"&gt;
  &lt;/a&gt;
  Singleton libraries
&lt;/h3&gt;

&lt;p&gt;In libraries such as React, we cannot run multiple versions of the same library at once if they don’t share the same version. We updated to the latest version in both applications which was a lengthy process. After that, we added our react library to shared dependencies in Wepback configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ModuleFederationPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;shared&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;singleton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#preview-environment"&gt;
  &lt;/a&gt;
  Preview environment
&lt;/h3&gt;

&lt;p&gt;Our monorepo is using preview deployments to be able to test changes both manually and using e2e tests. By using module federation, we are not creating branches in our mother app - code is dynamically run directly on the client and server-side.&lt;br&gt;
The way we were able to get around that was by dynamically injecting the correct remote based on the parameter in the URL. It was not as easy as we thought. To achieve that we had to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Deploy our remote application to be available through some dynamic URL on each pull request. We created a deploy preview step in our CI that created dynamic storage using Amazon’s Simple Storage Service.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;https://&lt;span class="nv"&gt;$bucketName&lt;/span&gt;.s3.eu-central-1.amazonaws.com/federated/remoteEntry.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Inject this dynamic remote into our living staging environment.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// https://website.com?remoteApp1=https://$bucketName.s3.eu-central-1.amazonaws.com/federated/remoteEntry.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;remote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;URLSearchParams&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;remoteApp1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Insert script tag with this remote.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;script&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;remote&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Load actual component to be used in our code.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lazy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loadComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;remote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;module&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#learning-curve"&gt;
  &lt;/a&gt;
  Learning curve
&lt;/h3&gt;

&lt;p&gt;Our setup has a steep learning curve. There is a lot to learn and understand to get a grasp for some of the low-level concepts and webpack documentation isn’t much easier to read with its building blocks defined as &lt;code&gt;ContainerPlugin&lt;/code&gt;, &lt;code&gt;ContainerReferencePlugin&lt;/code&gt;, and &lt;code&gt;ModuleFederationPlugin&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Module federation filled an enormous gap in the frontend world. Lessons learned can help us extract some of the self-contained applications currently living inside monorepo to speed our development and give a lot of freedom to autonomous teams. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What’s next?
&lt;/h2&gt;

&lt;p&gt;Our current setup is impressive for us. With our fast pipelines, separate deployments, and independent teams we are more agile than ever.&lt;br&gt;
But we must not rest on our laurels. There is a new version of React coming and we need to figure out a way of introducing backward-incompatible changes such as this. And we have our eyes on the new cool kids on the block - Javascript’s native module system (ESM) and non-JS bundlers such as esbuild written in Go.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>architecture</category>
      <category>microfrontend</category>
    </item>
    <item>
      <title>First thing to do when joining or building a team</title>
      <author>Raffaele Pizzari</author>
      <pubDate>Wed, 22 Sep 2021 08:12:14 +0000</pubDate>
      <link>https://dev.to/s2engineers/first-thing-to-do-when-joining-or-building-a-team-31bg</link>
      <guid>https://dev.to/s2engineers/first-thing-to-do-when-joining-or-building-a-team-31bg</guid>
      <description>&lt;p&gt;&lt;strong&gt;Building a team or joining an established team&lt;/strong&gt; is certainly hard.&lt;br&gt;
Every transitions leads to new challenges and we have to be as prepared as possible.&lt;/p&gt;

&lt;p&gt;Multiple people means multiple personalities, habits, languages, points of view, opinions, conflicts to deal with.&lt;br&gt;
However, &lt;strong&gt;plurality also represents the strength of a team&lt;/strong&gt;. It is up to us to turn challenges into opportunities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It is essential to make rules, expectations and goals explicit&lt;/strong&gt;.&lt;br&gt;
The sooner the team is on the same page and makes "visible" what is "invisible", the sooner it can define the boundaries, start a self-improvement process and become extremely productive. &lt;/p&gt;

&lt;p&gt;Obviously it is a very complex process and cannot be summarised in an article. However, I'd like to share with you &lt;strong&gt;my very first step&lt;/strong&gt;, what I always do when I need to build or join a team: my "&lt;strong&gt;User Manual&lt;/strong&gt;" &lt;em&gt;(I've been calling it this way since I discovered the &lt;a href="https://www.atlassian.com/team-playbook/plays/my-user-manual"&gt;Atlassian Playbook&lt;/a&gt; - thank you, &lt;a href="https://www.linkedin.com/in/dkagerer/"&gt;David&lt;/a&gt;!)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.atlassian.com/team-playbook/plays/my-user-manual"&gt;&lt;img alt="Screenshot from the Atlassian's Playbook User Manual page, showing the title and the description of the workshop" src="https://res.cloudinary.com/practicaldev/image/fetch/s--UWhY5wPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ts86wralb2zzr8pkrqq1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get to know your teammates and how to effectively work with them by sharing user manuals, which include communication preferences and more.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#what-is-the-user-manual"&gt;
  &lt;/a&gt;
  What is the "User manual"?
&lt;/h2&gt;

&lt;p&gt;It's a way to &lt;em&gt;get to know your teammates and how to effectively work with them&lt;/em&gt; and of course &lt;em&gt;to let your teammates get to know you and how to effectively work with you&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;You can either do it on your own or &lt;a href="https://www.atlassian.com/team-playbook/plays/my-user-manual"&gt;follow these instructions&lt;/a&gt;. It's just very important that you keep it honest.&lt;br&gt;
At the end it's nothing more than your own list of questions and answers, an "interview" with yourself.&lt;/p&gt;

&lt;p&gt;Those are &lt;strong&gt;my questions&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are the &lt;strong&gt;environments I like to work in&lt;/strong&gt;?&lt;/li&gt;
&lt;li&gt;What are my preferred working hours?&lt;/li&gt;
&lt;li&gt;What are my &lt;strong&gt;communication preferences&lt;/strong&gt;?&lt;/li&gt;
&lt;li&gt;What are my preferred ways to &lt;strong&gt;receive feedback&lt;/strong&gt;?&lt;/li&gt;
&lt;li&gt;What are the things I need?&lt;/li&gt;
&lt;li&gt;What are the &lt;strong&gt;things I struggle with&lt;/strong&gt;?&lt;/li&gt;
&lt;li&gt;What are the &lt;strong&gt;things I love&lt;/strong&gt;?&lt;/li&gt;
&lt;li&gt;If I were a meme, I would be...?&lt;/li&gt;
&lt;li&gt;What is my favourite saying?&lt;/li&gt;
&lt;li&gt;What are other things I want you to know about me?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's my list, but as I said, everyone can choose the questions and answers, make it more or less personal, more or less fun, more or less detailed. &lt;/p&gt;

&lt;p&gt;When the "User Manuals" are ready, it is very important to organise a meeting with the team and present the documents.&lt;br&gt;
Please, consider to let your team know the following at the start of the meeting (quoting Atlassian's Playbook):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  This activity is designed for team members to understand how to &lt;strong&gt;support each other’s ideal conditions for getting their best work done&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;  No one will be pressured to share anything they’re not comfortable sharing.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;This meeting is a safe space&lt;/strong&gt;. Nothing they share will be used against them.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#my-user-manual"&gt;
  &lt;/a&gt;
  My "User manual"?
&lt;/h2&gt;

&lt;p&gt;I keep my "User Manual" always public and accessible to everyone.&lt;br&gt;
Actually I'm thinking about sharing it on my &lt;a href="https://raffaelepizzari.com/"&gt;personal website&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;/small&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;colgroup&gt;
    &lt;col&gt;
    &lt;col&gt;
  &lt;/colgroup&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;
        &lt;p&gt;
          &lt;strong&gt;Environments I like to work in&lt;/strong&gt;
        &lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Inclusive&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;Diverse&lt;/li&gt;
          &lt;li&gt;Positive&lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Supportive&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Proactive&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Happy&lt;/span&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;
        &lt;p&gt;
          &lt;strong&gt;Preferred working hours&lt;/strong&gt;
        &lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
        &lt;p&gt;6:30 - 15:00&lt;/p&gt;
        &lt;p&gt;But I'll be of course available 9:00-17:00. 
          &lt;br&gt;
          &lt;br&gt;
        &lt;/p&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;
        &lt;p&gt;
          &lt;strong&gt;Communication preferences&lt;/strong&gt;
        &lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
        
          &lt;p&gt;Feel free to contact me any time. I'll get back to you as soon as I can.&lt;/p&gt;
          &lt;p&gt;However, I do have some communication preferences I would share with you:&lt;/p&gt;
          &lt;ul&gt;
            &lt;li&gt;Slack is the best way to communicate with me&lt;/li&gt;
            &lt;li&gt;Write longer messages that scan quickly&lt;/li&gt;
            &lt;li&gt;Use threads&lt;/li&gt;
            &lt;li&gt;Replace short follow-up messages with emoji reactions&lt;/li&gt;
          &lt;/ul&gt;
          &lt;p&gt;
            &lt;em&gt;If you contact me via e-mail:&lt;/em&gt;
          &lt;/p&gt;
          &lt;ul&gt;
            &lt;li&gt;Start with the main point, conclude with the context&lt;/li&gt;
            &lt;li&gt;One email thread per topic&lt;/li&gt;
            &lt;li&gt;Summarise complex email threads upon including new recipients&lt;/li&gt;
            &lt;li&gt;Manage recipients (++Hans, --Lara, explain why in 2 words at email start) 
                
              
            &lt;/li&gt;
            &lt;li&gt;Describe the topic in the subject line&lt;/li&gt;
            &lt;li&gt;Hyperlink whenever possible&lt;/li&gt;
          &lt;/ul&gt;
        
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;
        &lt;p&gt;
          &lt;strong&gt;Preferred ways to receive feedback&lt;/strong&gt;
        &lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
        &lt;p&gt;I would be very happy to receive constructive feedback. I truly believe in a positive feedback culture and I can't stress enough the importance of it.&lt;/p&gt;
        &lt;p&gt;I am sharing here some of my wishes for our feedback sessions:&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;1-on-1 meeting&lt;/li&gt;
          &lt;li&gt;Share with me the purpose of the feedback&lt;/li&gt;
          &lt;li&gt;Focus on performance and facts, not personal traits&lt;/li&gt;
          &lt;li&gt;Ensure a neutral environment&lt;/li&gt;
          &lt;li&gt;Set up a meeting&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;
        &lt;p&gt;
          &lt;strong&gt;Things I need&lt;/strong&gt;
        &lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;span&gt;Openness&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Transparency&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Respect&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Empathy&lt;/span&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;
        &lt;p&gt;
          &lt;strong&gt;How I learn best&lt;/strong&gt;
        &lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;span&gt;Doing pair programming / working&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Focusing on a topic and avoid multitasking&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;Making my health your No. 1 priority&lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Getting constructive Feedback&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Reading books&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Doing retrospectives&lt;/span&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;
        &lt;p&gt;
          &lt;strong&gt;Things I struggle with&lt;/strong&gt;
        &lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;span&gt;I don't like wasting time&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;I am impatient when I attend a not well-structured meeting&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;
              &lt;span&gt;I don't like pep talks&lt;/span&gt;
            &lt;/span&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;
        &lt;p&gt;
          &lt;strong&gt;Things I love&lt;/strong&gt;
        &lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;span&gt;Achieve goals&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Have fun while reaching goals&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Work in a happy environment and connect with colleagues&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span&gt;Support other developers&lt;/span&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
      &lt;td&gt;
        
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;
        &lt;p&gt;
          &lt;strong&gt;If I were a meme, I would be...&lt;/strong&gt;
        &lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
        &lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NrvKPZ0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkn8z9pc7y648efjkts8.jpg" class="article-body-image-wrapper"&gt;&lt;img alt="'This is fine' meme. A dog is drinking a coffee in a room full of flames and he is reassuring itself that everything is fine." src="https://res.cloudinary.com/practicaldev/image/fetch/s--NrvKPZ0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkn8z9pc7y648efjkts8.jpg"&gt;&lt;/a&gt;
        &lt;/p&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;
        &lt;p&gt;
          &lt;strong&gt;My favorite saying&lt;/strong&gt;
        &lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
        &lt;p&gt;I really like the "Retrospective Prime Directive":&lt;/p&gt;
        &lt;p&gt;"Regardless of what we discover, we understand and truly believe that everyone did the best job they could, given what they knew at the time, their skills and abilities, the resources available, and the situation at hand."&lt;/p&gt;
        &lt;p&gt;
          &lt;em&gt;
            &lt;span&gt;Norm Kerth&lt;/span&gt;
          &lt;/em&gt;
          &lt;br&gt;
          &lt;em&gt;Project Retrospectives: A Handbook for Team Review&lt;/em&gt;
        &lt;/p&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;
        &lt;p&gt;
          &lt;strong&gt;Other things I want you to know about me&lt;/strong&gt;
        &lt;/p&gt;
      &lt;/th&gt;
      &lt;td&gt;
        &lt;p&gt;I run a &lt;a href="https://www.codejourneys.org"&gt;free learning community for developers&lt;/a&gt;.&lt;/p&gt;
        &lt;p&gt;I am volunteering as a mentor.&lt;/p&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#what-about-your-user-manual"&gt;
  &lt;/a&gt;
  What about your "User Manual"?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Do you have one?&lt;/li&gt;
&lt;li&gt;Would you like to have one?&lt;/li&gt;
&lt;li&gt;Would you like to share your User Manual here?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you need support to create one, feel free to write me.&lt;/p&gt;

&lt;p&gt;I'd love to hear your feedback!&lt;/p&gt;




&lt;p&gt;(Cover foto credits: &lt;a href="https://pixabay.com/"&gt;https://pixabay.com/&lt;/a&gt;)&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>productivity</category>
      <category>discuss</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What's the revenue of your most successful project?</title>
      <author>Madza</author>
      <pubDate>Wed, 22 Sep 2021 07:32:05 +0000</pubDate>
      <link>https://dev.to/madza/what-s-the-revenue-of-your-most-successful-project-36fl</link>
      <guid>https://dev.to/madza/what-s-the-revenue-of-your-most-successful-project-36fl</guid>
      <description>&lt;p&gt;Creating you own own product can be an exciting journey. It's awesome to see your business ideas coming to life and develop a successful career.&lt;/p&gt;

&lt;p&gt;Indie hackers, entrepreneurs and builders in public, could you share your most successful project and it's approx. *MRR?  &lt;/p&gt;

&lt;p&gt;*&lt;em&gt;MRR (Monthly recurring revenue) is a metric that shows the total revenue generated per month.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>business</category>
    </item>
    <item>
      <title>Git Commits and Commit Messages : The Final Guide</title>
      <author>ZigRazor</author>
      <pubDate>Wed, 22 Sep 2021 07:24:42 +0000</pubDate>
      <link>https://dev.to/zigrazor/git-commits-and-commit-messages-the-final-guide-2g6f</link>
      <guid>https://dev.to/zigrazor/git-commits-and-commit-messages-the-final-guide-2g6f</guid>
      <description>&lt;p&gt;&lt;strong&gt;A commit should be a self-contained update to the code tree.&lt;/strong&gt; Despite bug fixes that could be introduced later in the development, a commit should be never considered as &lt;em&gt;"I’m saving my work now, I’ll continue later"&lt;/em&gt;, especially if the commit is pushed to a remote repository.&lt;br&gt;
On the other hand, a commit should not contain multiple changes to the code base. &lt;br&gt;
If, during development, I have to change something in two different modules, and the changes are unrelated, then the changes should be placed in two different commits.&lt;br&gt;
That is: &lt;strong&gt;make separate commits for logically separate changes.&lt;/strong&gt;&lt;br&gt;
Making good commits is a form of art. A good way to decide whether a commit is self contained, developers should answer themselves he question: "will I be able to cherry pick this commit in the future, shall I need it?". If the answer is yes, then most&lt;br&gt;
likely it is a good commit.&lt;br&gt;
&lt;strong&gt;Commit messages should be meaningful&lt;/strong&gt;. A one-line commit message like &lt;em&gt;"I’m developing foo"&lt;/em&gt; will not allow other developers to understand what that commit is for. A minimal&lt;br&gt;
commit message would be of the format:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Short log
(Optional pointers to external resources, such as defect tracking)
The intent of your change.
(Optional, if it's not clear from above) how your change resolves the
issues in the first part.
Tag line(s) at the end.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is an example of a good commit message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;foobar: Adjusted the foo setting in bar When using foobar on systems with less than a gigabyte of RAM common usage patterns often result in an Out-of-memory condition causing slowdowns and unexpected application termination.

Low-memory systems should continue to function without running into memory-starvation conditions with minimal cost to systems with more available memory. High-memory systems will be less able to use the full extent of the system, a dynamically tunable option may be best, long-term.

The foo setting in bar was decreased from X to X-50% in order to
ensure we don't exhaust all system memory with foobar threads.

Signed-off-by: Joe Developer &amp;lt;joe.developer@example.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Several things should be noted here. The minimal commit message is good for new code development and simple changes. An empty line must always come after it, otherwise post processing software might not be able to distinguish it from the rest of the&lt;br&gt;
commit text.&lt;br&gt;
The single short log message indicates what needed to be changed. It should begin with an indicator as to the primary item changed by this work, followed by a short summary of the change. In the above case we're indicating that we've changed the "foobar" item, by "adjusting the foo setting in bar".&lt;br&gt;
The single short log message is analogous to the git "commit summary". While no maximum line length is specified by this policy, it is suggested that it remains under&lt;br&gt;
50 characters wherever possible. Think of it as the subject of an email: you should never write too much text in it, otherwise receivers will not understand easily what the email is about.&lt;br&gt;
Optionally, you may include pointers to defects this change &lt;br&gt;
corrects. Unless the defect format is specified by the component you are modifying, it is suggested that you use a full URL to specify the reference to the defect information. Generally, these pointers will precede any long description, but as an optional item it may be after the long description. This could be a good way, for example, to refer to open issues in a bug tracker. You must then have a full description of the change. &lt;br&gt;
Specifying the intent of your change and if necessary how the change resolves the issue.&lt;br&gt;
Finally, one or more tag lines should exist. Each developer responsible for working on the patch is responsible for adding a Signed-off-by: tag line. This tag line should be added by people writing the patch, and additional tag lines should be added by&lt;br&gt;
people, for example, merging the patch into different branches. This allows to easily track the updates to the code base, and determine who did what.&lt;br&gt;
It is not acceptable to have an empty or non-existent header, or just a single line message. The summary and description is required for all changes. The commit messages should be manually indented. Usually, each line of the message, should not be longer than 78 characters. Note that in order to do this easily, is&lt;br&gt;
always better to avoid using the &lt;code&gt;-m&lt;/code&gt; switch when committing: in fact, simply issuing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git commit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;will fire up the text editor specified in the EDITOR environment variable (you can set it to your preferred editor), so that you can freely write your commit message respecting the adopted layout. Note that if you set your favorite editor to vim, you can add the following lines to &lt;code&gt;~/.vimrc&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;filetype plugin indent on
au FileType gitcommit set tw=72
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which automatically wraps the text to the specified 72 characters for git commit messages. To check whether vim is correctly identifying the commit message as gitcommit, the following command can be used within vi:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:set filetype?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or to save a few keystrokes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:se ft?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If, for any reason, you have pushed commits with non-meaningful descriptions (due to hurry, pressure, git fire , etc.), these should never end up in the master branch.&lt;br&gt;
Here, interactively rebasing you local branch (and issuing a force push if possible) is a good practice.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;For More "The Final Guide" see the &lt;a href="https://dev.to/zigrazor/the-final-guide-index-4954"&gt;Index Page&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Electron Adventures: Episode 59: Notebook Python Engine</title>
      <author>Tomasz Wegrzanowski</author>
      <pubDate>Wed, 22 Sep 2021 07:12:08 +0000</pubDate>
      <link>https://dev.to/taw/electron-adventures-episode-59-notebook-python-engine-1e79</link>
      <guid>https://dev.to/taw/electron-adventures-episode-59-notebook-python-engine-1e79</guid>
      <description>&lt;p&gt;In previous episodes we created:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTTP-based Ruby language server&lt;/li&gt;
&lt;li&gt;HTTP-based Python language server&lt;/li&gt;
&lt;li&gt;process-based Ruby language server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So now it's time to create a process-based Python language server as well.&lt;/p&gt;

&lt;p&gt;We'll be reusing the whole frontend from the previous episode - other than changing name of the script we run from &lt;code&gt;ruby_language_server&lt;/code&gt; to &lt;code&gt;python_language_server&lt;/code&gt;, and replacing Ruby code examples by Python examples.&lt;/p&gt;

&lt;p&gt;All the new code will be Python.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-pythonlanguageserver-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;python_language_server&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#!/usr/bin/env python3
&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Capturing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__enter__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stdout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stringio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stringio&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stringio&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__exit__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stringio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getvalue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stdout&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;

&lt;span class="n"&gt;sessions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;session_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"session_id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"code"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
    &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Capturing&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"output"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's very little new. We already had all the code for executing code and capturing the output in the Flask version.&lt;/p&gt;

&lt;p&gt;We just need to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;read the input with &lt;code&gt;for line in sys.stdin&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;parse it with &lt;code&gt;body = json.loads(line)&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;print the result with &lt;code&gt;print(json.dumps(result), flush=True)&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;flush=True&lt;/code&gt; is important, as communication between processes is normally buffered, so it won't actually be sent until the 4kB buffer is full. This buffering does not happen if you print to the terminal, and normally if you send things to files, you don't care about exact timing of when each line gets there. But when talking to processes, we need to do this.&lt;/p&gt;

&lt;p&gt;We don't need to do any tricks on input, as only the sending process can potentially have such a buffer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h3&gt;

&lt;p&gt;Here's the result if we press "Run All" button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kc49IZq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/your5blj71thaohst65z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc49IZq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/your5blj71thaohst65z.png" alt="Electron Adventures"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It was all very easy as we basically just merged what we did in previous two episodes.&lt;/p&gt;

&lt;p&gt;In the next episode we'll do something a little more complicated and try to do the same for a language you might not have heard of in a while. And we'll also move session control into Electron side.&lt;/p&gt;

&lt;p&gt;As usual, &lt;a href="https://github.com/taw/electron-adventures/tree/master/episode-59-notebook-python-engine"&gt;all the code for the episode is here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>electron</category>
      <category>react</category>
      <category>python</category>
    </item>
    <item>
      <title>New Information Images</title>
      <author>Blog triggers</author>
      <pubDate>Wed, 22 Sep 2021 07:05:47 +0000</pubDate>
      <link>https://dev.to/blogtriggers/new-information-images-2fa6</link>
      <guid>https://dev.to/blogtriggers/new-information-images-2fa6</guid>
      <description>&lt;p&gt;If you want to Know Something Interested Images related to Knowledge then Our Pinterest Official Site.&lt;br&gt;
Pinterest Blog Triggers Link: &lt;a href="https://in.pinterest.com/blogtriggers/_created/"&gt;Information Tips Regarding knowledge&lt;/a&gt;&lt;/p&gt;

</description>
      <category>image</category>
      <category>blogging</category>
      <category>knowledge</category>
      <category>pinterest</category>
    </item>
    <item>
      <title>Showcase Your Blog Posts with Web Components: Part 1 — Basics</title>
      <author>Marius Bongarts</author>
      <pubDate>Wed, 22 Sep 2021 07:02:05 +0000</pubDate>
      <link>https://dev.to/mariusbongarts/showcase-your-blog-posts-with-web-components-part-1-basics-5df8</link>
      <guid>https://dev.to/mariusbongarts/showcase-your-blog-posts-with-web-components-part-1-basics-5df8</guid>
      <description>&lt;p&gt;Learn the fundamentals of Web Components&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="https://javascript.plainenglish.io/showcase-your-medium-articles-with-web-components-part-1-basics-d2c6618e9482" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e2_KEboz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/fit/c/96/96/1%2AtHDAGXmHWPWPSCMJyPPvQg.png" alt="Marius Bongarts"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://javascript.plainenglish.io/showcase-your-medium-articles-with-web-components-part-1-basics-d2c6618e9482" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build Your Own Blog Portfolio with Web Components: The Basics | by Marius Bongarts | Sep, 2021 | JavaScript in Plain English&lt;/h2&gt;
      &lt;h3&gt;Marius Bongarts ・ &lt;time&gt;Sep 22, 2021&lt;/time&gt; ・ 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ze5yh_2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium_icon-90d5232a5da2369849f285fa499c8005e750a788fdbf34f5844d5f2201aae736.svg" alt="Medium Logo"&gt;
        javascript.plainenglish.io
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>programming</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>5 Additional Skills You Should Learn Right Away as a Full-Stack Developer</title>
      <author>Marius Bongarts</author>
      <pubDate>Wed, 22 Sep 2021 06:59:22 +0000</pubDate>
      <link>https://dev.to/mariusbongarts/5-additional-skills-you-should-learn-right-away-as-a-full-stack-developer-3f2a</link>
      <guid>https://dev.to/mariusbongarts/5-additional-skills-you-should-learn-right-away-as-a-full-stack-developer-3f2a</guid>
      <description>&lt;p&gt;Learn them now, you will regret delaying it&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="https://javascript.plainenglish.io/5-more-skills-you-should-learn-right-away-as-a-full-stack-developer-4cb6f935671?source=your_stories_page-------------------------------------" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e2_KEboz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/fit/c/96/96/1%2AtHDAGXmHWPWPSCMJyPPvQg.png" alt="Marius Bongarts"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://javascript.plainenglish.io/5-more-skills-you-should-learn-right-away-as-a-full-stack-developer-4cb6f935671?source=your_stories_page-------------------------------------" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;5 Additional Skills You Should Learn Right Away as a Full-Stack Developer | by Marius Bongarts | Sep, 2021 | JavaScript in Plain English&lt;/h2&gt;
      &lt;h3&gt;Marius Bongarts ・ &lt;time&gt;Sep 20, 2021&lt;/time&gt; ・ 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ze5yh_2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium_icon-90d5232a5da2369849f285fa499c8005e750a788fdbf34f5844d5f2201aae736.svg" alt="Medium Logo"&gt;
        javascript.plainenglish.io
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>programming</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>vscode</category>
    </item>
    <item>
      <title>How do you get new clients?</title>
      <author>Madza</author>
      <pubDate>Wed, 22 Sep 2021 06:52:19 +0000</pubDate>
      <link>https://dev.to/madza/how-do-you-get-new-business-clients-1cp2</link>
      <guid>https://dev.to/madza/how-do-you-get-new-business-clients-1cp2</guid>
      <description>&lt;p&gt;The success of any business depends on the substantive clientele. Some of the most common ways to get new clients include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Social media like &lt;a href="https://linkedin.com"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://twitter.com"&gt;Twitter&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Freelance sites like &lt;a href="(https://upwork.com)"&gt;UpWork&lt;/a&gt;, &lt;a href="(https://freelancern.com)"&gt;Freelancer&lt;/a&gt;, etc.&lt;/li&gt;
&lt;li&gt;Job listing sites like &lt;a href="https://weworkremotely.com"&gt;WeWorkRemotely&lt;/a&gt;, &lt;a href="https://remoteok.io"&gt;RemoteOk&lt;/a&gt;, etc.&lt;/li&gt;
&lt;li&gt;References from existing clients&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What has been the most effective strategy for you and why?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>business</category>
    </item>
    <item>
      <title>Why not TOML?</title>
      <author>Siddharth</author>
      <pubDate>Wed, 22 Sep 2021 06:13:40 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/why-not-toml-1fj9</link>
      <guid>https://dev.to/siddharthshyniben/why-not-toml-1fj9</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="c"&gt;# this is some TOML&lt;/span&gt;

&lt;span class="py"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'TOML'&lt;/span&gt;

&lt;span class="nn"&gt;[created-by]&lt;/span&gt;
&lt;span class="py"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Tom Preston-Werner'&lt;/span&gt;
&lt;span class="py"&gt;dob&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1979-05-27&lt;/span&gt;&lt;span class="err"&gt;T&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00-08&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://toml.io/"&gt;TOML&lt;/a&gt; is a configuration file format designed like an "improved" &lt;a href="https://en.wikipedia.org/wiki/INI_file"&gt;INI file&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At first, TOML looks like a simple, readable file format. If you use it infrequently on small, simple files, it's fine.&lt;/p&gt;

&lt;p&gt;But as you use it more, you will start seeing the flaws of TOML.&lt;/p&gt;

&lt;p&gt;Martin Vejnar, the creator of &lt;a href="https://github.com/avakar/pytoml/issues/15#issuecomment-217739462"&gt;PyTOML&lt;/a&gt;, said the exact same thing. He initially built the parser out of enthusiasm for TOML, but eventually abandoned it:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TOML is a bad file format. It looks good at first glance, and for really really trivial things it is probably good. But once I started using it and the configuration schema became more complex, I found the syntax ugly and hard to read.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, what's the problem with TOML?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-its-verbose"&gt;
  &lt;/a&gt;
  1. It's verbose
&lt;/h2&gt;

&lt;p&gt;This is a yaml document:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;json&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rigid&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;better for data interchange&lt;/span&gt;
&lt;span class="na"&gt;yaml&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;slim and flexible&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;better for configuration&lt;/span&gt;
&lt;span class="na"&gt;object&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;value&lt;/span&gt;
  &lt;span class="na"&gt;array&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;null_value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;boolean&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;integer&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;alias&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;&amp;amp;example&lt;/span&gt; &lt;span class="s"&gt;aliases are like variables&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;alias&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*example&lt;/span&gt;
&lt;span class="na"&gt;paragraph&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="s"&gt;Blank lines denote&lt;/span&gt;

   &lt;span class="s"&gt;paragraph breaks&lt;/span&gt;
&lt;span class="na"&gt;alias&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;&amp;amp;foo&lt;/span&gt;
  &lt;span class="na"&gt;bar&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;baz&lt;/span&gt;
&lt;span class="na"&gt;alias_reuse&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*foo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here's the same thing in TOML:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="py"&gt;json&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="s"&gt;"rigid"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"better for data interchange"&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="py"&gt;yaml&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="s"&gt;"slim and flexible"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"better for configuration"&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="py"&gt;paragraph&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"""
Blank lines denote
paragraph breaks
"""&lt;/span&gt;

&lt;span class="nn"&gt;[object]&lt;/span&gt;
&lt;span class="py"&gt;key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt;

  &lt;span class="nn"&gt;[[object.array]]&lt;/span&gt;

  &lt;span class="nn"&gt;[[object.array]]&lt;/span&gt;
  &lt;span class="py"&gt;boolean&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

  &lt;span class="nn"&gt;[[object.array]]&lt;/span&gt;
  &lt;span class="py"&gt;integer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

  &lt;span class="nn"&gt;[[object.array]]&lt;/span&gt;
  &lt;span class="py"&gt;alias&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"aliases are like variables"&lt;/span&gt;

  &lt;span class="nn"&gt;[[object.array]]&lt;/span&gt;
  &lt;span class="py"&gt;alias&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"aliases are like variables"&lt;/span&gt;

&lt;span class="nn"&gt;[alias]&lt;/span&gt;
&lt;span class="py"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"baz"&lt;/span&gt;

&lt;span class="nn"&gt;[alias_reuse]&lt;/span&gt;
&lt;span class="py"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"baz"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first YAML examples is 368 characters. The second is 455 characters. That's about 100 more characters you need to type. TOML re-introduces what human friendly languages are trying to get rid of: verbose syntax, the necessity to quote strings, and more.&lt;/p&gt;

&lt;p&gt;The reasons are obvious:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you have an array, you need to repeat the key again and again (&lt;code&gt;[[object.array]]&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;There's a lot of syntactic extras like square brackets and quotes which dominate TOML.&lt;/li&gt;
&lt;li&gt;There is no alias system.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Making programs smaller and DRYer significantly reduces the number of bugs. The same can apply for configuration files. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-toml-looks-like-it-was-designed-for-parsers"&gt;
  &lt;/a&gt;
  2. TOML looks like it was designed for parsers.
&lt;/h2&gt;

&lt;p&gt;Hierarchy in TOML is determined by &lt;code&gt;.&lt;/code&gt;s. This is simple enough for parsers to understand, but this makes it difficult for us.&lt;/p&gt;

&lt;p&gt;That's why many people have adopted this style:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="nn"&gt;[markup]&lt;/span&gt;
  &lt;span class="nn"&gt;[markup.tableOfContents]&lt;/span&gt;
    &lt;span class="py"&gt;endLevel&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
    &lt;span class="py"&gt;startLevel&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nn"&gt;[markup.highlight]&lt;/span&gt;
    &lt;span class="py"&gt;style&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"solarized-dark"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While this makes it easier to understand, &lt;strong&gt;it would be much better if we could get rid of the dots (and brackets) and just use indent alone&lt;/strong&gt;. This is why I love the Python syntax.&lt;/p&gt;

&lt;p&gt;There are still debates about whether using indentation alone was a good idea, but it generally is, as discussed in this &lt;a href="https://softwareengineering.stackexchange.com/questions/313034/why-should-a-language-prefer-indentation-over-explicit-markers-for-blocks"&gt;StackExchange question&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-toml-has-too-many-features"&gt;
  &lt;/a&gt;
  3. TOML has too many features.
&lt;/h2&gt;

&lt;p&gt;TOML's creator &lt;a href="https://github.com/toml-lang/toml#comparison-with-other-formats"&gt;criticizes&lt;/a&gt; YAML for having too many features and then does the same thing. Ironic.&lt;/p&gt;

&lt;p&gt;For example, TOML has first class dates. If you have been programming for any amount of time, you know the problems associated with date and time (&lt;em&gt;cough&lt;/em&gt; momentjs &lt;em&gt;cough&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;In my opinion there should only be 5 types: string, number, boolean, array, object. This is the approach JSON took, and it's a good decision.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-syntax-typing"&gt;
  &lt;/a&gt;
  4. Syntax typing
&lt;/h2&gt;

&lt;p&gt;Take a look at this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="py"&gt;str&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"string"&lt;/span&gt;
&lt;span class="py"&gt;num&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;TOML lets the users decide what type a thing is. But in most cases, this is not correct as the client should decide what type a thing should have. If the types are incorrect they should be coerced or an error should be thrown.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-tomls-rules-arent-that-obvious"&gt;
  &lt;/a&gt;
  4. TOML's rules aren't &lt;em&gt;that&lt;/em&gt; obvious
&lt;/h3&gt;

&lt;p&gt;Most of TOML is obvious, but not all.&lt;/p&gt;

&lt;p&gt;For example, the &lt;code&gt;[[syntax]]&lt;/code&gt; is confusing. It looks like a &lt;code&gt;[object]&lt;/code&gt; with an extra &lt;code&gt;[]&lt;/code&gt; pair around it, but it's used to signify an array.&lt;/p&gt;




&lt;p&gt;If you think I've missed any points (a lot!), or if you disagree with any points I've made, please leave a comment!&lt;/p&gt;

&lt;p&gt;I actually have a lot more points to tell, and I'll write a longer article another day. Stay tuned!&lt;/p&gt;

&lt;p&gt;If you like the post, follow &lt;a href="https://twitter.com/SiddharthShyn"&gt;me on Twitter&lt;/a&gt; or &lt;a href="https://dev.to/SiddharthShyniben"&gt;here on DEV&lt;/a&gt; for more awesome posts and tips!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>toml</category>
    </item>
    <item>
      <title>cryptocurrency exchange development company-factors you should know to choose</title>
      <author>vladimir sahin</author>
      <pubDate>Wed, 22 Sep 2021 06:09:59 +0000</pubDate>
      <link>https://dev.to/sahinvladimir/cryptocurrency-exchange-development-company-factors-you-should-know-to-choose-54kf</link>
      <guid>https://dev.to/sahinvladimir/cryptocurrency-exchange-development-company-factors-you-should-know-to-choose-54kf</guid>
      <description>&lt;p&gt;If you want to have your own crypto exchange, this article can help you a lot because this article introduces the top 5 &lt;strong&gt;&lt;a href="https://radindev.com/cryptocurrency-exchange-development/"&gt;cryptocurrency exchange development company&lt;/a&gt;&lt;/strong&gt; and also provides additional information. We hope you have been helpful.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  What is Cryptocurrency Exchange?
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency exchange or Digital currency exchange (DCE) is websites where traders can buy and sell or exchange one Cryptocurrency to another digital-currency or fiat currency. On cryptocurrency exchanges, Users can make instant transactions with Cryptocurrencies in a highly secured manner. A typical cryptocurrency exchange works 24/7, that is, it never closes. One of the main reasons traders like them is their anonymity feature. Nobody knows who are the buyers and sellers.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iSN7ECmG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft7j0k6d4ul4nry8wq67.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iSN7ECmG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft7j0k6d4ul4nry8wq67.png" alt="cryptocurrency exchange development"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-benefits-of-developing-a-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  The benefits of developing a cryptocurrency exchange
&lt;/h3&gt;

&lt;p&gt;There are many other benefits in crypto exchange and that’s why it is growing day by day. So as more people get interested in this market the demand for exchange platforms increase. Therefore, as a business owner, you have to see the factors and come to a conclusion that developing a digital currency exchange site is an important step to expand your business. &lt;br&gt;
The fact that the cryptocurrency market is usually available for trading 24/7 because there is no centralized monitor of the market is one of the reasons that make this industry grow faster. The cryptocurrency transactions take place directly between individuals and it helps traders to trade with other people all over the globe. This gives them the opportunity of trading with a wide range of people and traders.&lt;br&gt;
The factor that measures the speed and Ease of converting a cryptocurrency into cash without impacting the market price is called liquidity. Liquidity is an important factor because it brings faster transactions (actually it reduces the time of the transactions), better prices, and accuracy for technical analysis.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-cryptocurrency-exchange-work"&gt;
  &lt;/a&gt;
  How Does a Cryptocurrency Exchange Work?
&lt;/h2&gt;

&lt;p&gt;The word cryptocurrency has been derived from the term Cryptography that means to encrypt transactions and regulate the assembly of the currency. Bitcoin is a world’s first decentralized peer-to-peer digital currency. The success of Bitcoin has paved ways for the new cryptocurrencies to arise. The open-source nature of Bitcoin has led to the development of hundreds of new digital tokens also known as Altcoins or Bitcoin clones. There are some of the most-sought after cryptocurrencies like Ripple, Litecoin, Dash, Ether, and Monero. In the present era, cryptocurrency has become a preferred choice for online users who are willingly ready to invest online. Excepting few constraints there are not much that could demotivate the virtual currency enthusiasts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#all-types-of-cryptocurrency-exchanges"&gt;
  &lt;/a&gt;
  All types of cryptocurrency exchanges
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#centralized-exchange"&gt;
  &lt;/a&gt;
  Centralized Exchange
&lt;/h3&gt;

&lt;p&gt;This is the most common type of exchange. Such exchanges have a centralized operator who is responsible for security, updates, and functionality. Centralized exchanges manage order books, which record all buy and sell orders. The weak point of this type is that coins are stored in the services themselves, which increases the likelihood of losing your funds due to hacker attacks. Therefore, centralized exchanges work hard to ensure the proper level of security.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#decentralized-exchange"&gt;
  &lt;/a&gt;
  Decentralized Exchange
&lt;/h3&gt;

&lt;p&gt;Decentralized exchanges provide transfers of funds directly between users' wallets. This reduces the potential for theft from exchange hacking since the exchange never actually stores cryptocurrency. However, you should keep in mind that in such exchanges, the lack of moderating third-party shifts all responsibility for errors and security to the users themselves&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hybrid-exchange"&gt;
  &lt;/a&gt;
  Hybrid Exchange
&lt;/h3&gt;

&lt;p&gt;It incorporates both the exchange systems' features and provides an upgraded solution to users' shortcomings in these systems. Here users have full control over their funds, and their privacy and security are highly maintained. The transactions taking place in the system are monitored and updated in real-time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-much-does-it-cost-to-build-a-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  How much does it cost to build a cryptocurrency exchange?
&lt;/h2&gt;

&lt;p&gt;The cost of cryptocurrency exchange development depends on the list of features to include, the number of coins and tokens to be integrated, the level of security, and so on. Therefore, you will be able to calculate the estimated cost after sharing your idea and vision with experts.&lt;br&gt;
Regarding various challenges that you need to overcome while building your own cryptocurrency exchange facilities, it cannot but be a costly process. However, with a smart attitude and much of entrepreneurial spirit, you will be able to launch your startup with a very reasonable pricing policy.&lt;br&gt;
Regardless of your choice of software, your perfect team should include project manager (unless you don’t want to take this position by your own), platform developer, QA engineer, experienced web designer, and a UI developer. The cost of their services will vary significantly depending on several factors. The most important here is probably your team’s country of location.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-i-create-a-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  How do I create a Cryptocurrency exchange?
&lt;/h3&gt;

&lt;p&gt;Starting a Bitcoin exchange involves six basic steps:&lt;br&gt;
• Decide where you want to do business.&lt;br&gt;
• Learn about relevant regulations in that area.&lt;br&gt;
• Partner with a bank or payment processor.&lt;br&gt;
• Establish a transaction history and liquidity on the exchange.&lt;br&gt;
• Implement best security practices.&lt;br&gt;
• Offer customer support.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-cryptocurrency-exchange-development"&gt;
  &lt;/a&gt;
  What is Cryptocurrency exchange development?
&lt;/h2&gt;

&lt;p&gt;Crypto currency transactions are recorded on the Blockchain, paving way for a decentralized value exchange. A Cryptocurrency Exchange development enables buyers and sellers to exchange their coins with other coins or to further sell or buy the crypto currency with the market trends.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--erKMyMRH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cox7dolu4di2ddnckoji.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--erKMyMRH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cox7dolu4di2ddnckoji.jpg" alt="Cryptocurrency Exchange Development Company"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cryptocurrency-exchange-development-company"&gt;
  &lt;/a&gt;
  Cryptocurrency Exchange Development Company
&lt;/h2&gt;

&lt;p&gt;Blockchain advocates a ledger system that facilitates the recording of every cryptocurrency transaction which in turn paves way for a value exchange on a decentralized basis. With a customizable crypto exchange script, you shall be a vital part of the digital revolution coming your way.&lt;br&gt;
In the world of digitalization, the online transactions, and the utilization of virtual currency is gradually increasing day by day. Since the origination of the world’s first virtual currency, i.e., Bitcoin in the year 2009, most of the countries are choosing virtual currency over real currency for making their financial transactions. A secured and bug-free exchange development is much needed for the virtual transactions to stop the fraudulent activities across the globe. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-features-of-cryptocurrency-exchange-development"&gt;
  &lt;/a&gt;
  Key features of cryptocurrency exchange development
&lt;/h2&gt;

&lt;p&gt;When you create a cryptocurrency exchange development, you need to carefully consider its intended functionality. While the number and the list of features vary according to the type of exchange you build, several core features form the basis of all cryptocurrency exchanges. &lt;br&gt;
By way of an example, let’s take a closer look at the standard user flow and the features needed: &lt;br&gt;
User:&lt;br&gt;
• Registers in the crypto exchange system and indicates their cryptocurrencies of choice&lt;br&gt;
• Verifies account according to Anti-Money Laundering (AML) and Know Your Customer (KYC) standards&lt;br&gt;
• Funds the account&lt;br&gt;
• Enters the value and volume of a cryptocurrency to be exchanged&lt;br&gt;
• Concludes a deal if there is already a counter-offer available on the site&lt;br&gt;
• Withdraws the funds to their credit card or to an in-app cryptocurrency wallet&lt;/p&gt;

&lt;p&gt;By looking at the user flow, it’s clear that a cryptocurrency exchange development’s features should cover: &lt;br&gt;
&lt;strong&gt;User authorization and verification&lt;/strong&gt; – User authorization is the first step in onboarding, so provide a simple and easy process. Users do, however, expect other trading participants to be trustworthy and have good intentions, meaning verification is very important at this stage. Proper verification enables transactional transparency, reduces the risk of fraud, and shows that your cryptocurrency exchange adheres to international standards. &lt;br&gt;
&lt;strong&gt;User interface&lt;/strong&gt; – It's the face of your exchange platform, so make sure its design is simple, clear, and user-friendly. An intuitive interface ensures that transactions are executed efficiently, reducing trading time. The dashboard should provide quick access to features such as order management, order history, fund withdrawals and deposits, statistics, and so on.&lt;br&gt;
&lt;strong&gt;Trade engine&lt;/strong&gt; – The trade engine finds and connects traders. In addition, the trade engine’s quality greatly influences the speed and performance of the crypto exchange. The faster it is; the better service you provide to customers. Remember that users need real-time access to their trading data to effectively manage their investments. &lt;br&gt;
So, place a special focus on developing your trading engine. The integration of blockchain technology can be a solution here, not only is it a guarantee of total security and transparency but it also offers a way of speeding up your trading engine. &lt;br&gt;
&lt;strong&gt;Wallet&lt;/strong&gt; – Provide your users with e-wallets to store and transfer digital money. Providing two types of wallets (cold and hot) is a good idea. Hot wallets allow users to transfer money into their balance and withdraw it. Cold ones serve as a backup since they're not connected to the internet and are therefore protected from fraud.&lt;br&gt;
&lt;strong&gt;Transaction history and order book&lt;/strong&gt; – An order book is a list of open orders that allows users to navigate the current bids. Transaction history enables users to track their activities. It's an overview of completed trades with transaction information such as the trade rate and time of the operation.&lt;br&gt;
&lt;strong&gt;Analytical tools&lt;/strong&gt; – A must if you want to build an advanced cryptocurrency app or website. Provide users with real-time data and additional information about market trends.  There is a whole list of indicators that help traders develop their game strategies: Moving Average Convergence Divergence (MACD), Relative Strength Index (RSI), Bollinger Bands (BB), and more.&lt;br&gt;
&lt;strong&gt;Push notifications&lt;/strong&gt; – The best way to keep users updated on price changes, volatility, trends, news, and platform updates. Notifications can also help users track exchange listings. Just remember that users should be able to choose what notifications they wish to receive. Push notifications are easy, fast, and affordable to set up. Costs vary, but push notifications are cheaper than other automated marketing tools.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3LQoUSjN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlu3scnwapqz7gobtmjp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3LQoUSjN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlu3scnwapqz7gobtmjp.png" alt="Best Cryptocurrency Exchange Development Companies"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-cryptocurrency-exchange-development-companies"&gt;
  &lt;/a&gt;
  Best Cryptocurrency Exchange Development Companies
&lt;/h2&gt;

&lt;p&gt;Are you in search of the Best Cryptocurrency Exchange Development Companies? You have reached the right place where you can be able to choose the best one form the list concerning the ratings and reviews. The bitcoin exchange websites are completely based on decentralized servers that are spread around the world. It is also not restricted to one particular location, which becomes a drawback for the hackers. Also, the platforms offer the ownership of cryptocurrency in the user’s hands just by serving as the bridge between the traders.&lt;br&gt;
Cryptocurrency exchange enables clients to trade cryptocurrency for other digital currencies or cryptocurrencies 365 days a year empowering traders to use cryptocurrency pairs to profit from highly volatile currency rates.&lt;br&gt;
The cryptocurrency market is forecasted to grow at a CAGR of 56.4% from 2019 to 2025.&lt;br&gt;
Want to benefit from cryptocurrency exchange technology? Select RightFirms list of top crypto exchange development companies for your project on the basis of trusted customer reviews and ratings.&lt;br&gt;
Looking for crypto exchange development companies?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#list-of-topmost-5-cryptocurrency-exchange-development-companies-in-2021-exclusive-list"&gt;
  &lt;/a&gt;
  List of Top-most 5 Cryptocurrency Exchange Development Companies in 2021 (Exclusive List)
&lt;/h3&gt;

&lt;p&gt;What is crypto exchange? A crypto exchange is a crypto trading website where one can buy, sell, or trade popular digital currencies and other digital assets. Such as bitcoin, ethereum, ripple, bitcoin cash, and other reliable cryptos. It is also a great online business for young startups and entrepreneurs. Already many people started to build their own crypto exchange with the help of a cryptocurrency exchange development company. &lt;br&gt;
Every person cannot shine in the cryptocurrency exchange business. Only with a good strategy and mind-blowing ideas in designing your exchange platform can make you succeed. Now you have a doubt where can I find a top-rated cryptocurrency exchange development company. Here I have listed some leading cryptocurrency exchange development companies. Which might help you to launch your own crypto trading platform in a perfect way.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---DGtmlyv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8uh6bfxhdiez7g3bo6ap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---DGtmlyv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8uh6bfxhdiez7g3bo6ap.png" alt="crypto exchange development companies"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ulam-labs"&gt;
  &lt;/a&gt;
  Ulam Labs
&lt;/h3&gt;

&lt;p&gt;Ulam Labs is a development company made of Python and blockchain experts. they focus on custom development, DevOps, consulting and outsourcing to ensure the best service and support for clients. They deliver software to startups and SMBs from various industries: FinTech, Telecommunication, E-commerce, Banking, Supply chain, Production and Manufacturing, and many more. They have experience in analyzing complicated business processes and turning them into simple software applications. their team works in an agile manner and provides exceptional value for money. The number of employees is 50+ and founded in 2012 and based on Poland. &lt;br&gt;
&lt;strong&gt;Vision&lt;/strong&gt;&lt;br&gt;
they aim to be the go-to partner for the best global tech-based companies. they’re getting there by the best in class software engineering and strategic technological management.&lt;br&gt;
&lt;strong&gt;Team&lt;/strong&gt;&lt;br&gt;
Ulam Labs is a team of over 30 IT professionals that keeps growing fast. they may come from various backgrounds, but that lets them look at your projects from many perspectives. The best products come from the best people, and in Ulam Labs this is not only an empty claim.&lt;br&gt;
&lt;strong&gt;Services&lt;/strong&gt;:&lt;br&gt;
• MVP development&lt;br&gt;
• Bespoke web development&lt;br&gt;
• Mobile app development&lt;br&gt;
• Web applications&lt;br&gt;
• Dedicated development team&lt;br&gt;
• Testing &amp;amp; quality assurance &lt;br&gt;
• Blockchain app development&lt;br&gt;
• Cryptocurrency exchange and trading platforms&lt;br&gt;
• Digital wallet development&lt;br&gt;
• Smart contract development&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Service Focus&lt;/strong&gt;&lt;br&gt;
• Mobile app development- 10%&lt;br&gt;
• Software development- 50%&lt;br&gt;
• Cloud computing services- 10%&lt;br&gt;
• Blockchain technology- 20%&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#radindev"&gt;
  &lt;/a&gt;
  Radindev
&lt;/h3&gt;

&lt;p&gt;Being a cryptocurrency exchange development company, they offer services like cryptocurrency wallet development, crypto coin creation and mining and cryptocurrency exchange development services. Their crypto software allows users to process unlimited transactions online. They are known for developing high-tech crypto wallet web and mobile apps for secure and easy transactions of cryptocurrency. Besides this, they also offer crypto paper wallet and Bitcoin Wallet solutions. Their exchange platform allows smooth transactions over normal communication channel by converting mobile handsets into crypto wallets. &lt;br&gt;
The number of employees is 100+ and founded in 2016.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Services&lt;/strong&gt;:&lt;br&gt;
• Mobile app development&lt;br&gt;
• Web applications&lt;br&gt;
• Dedicated development team&lt;br&gt;
• Testing &amp;amp; quality assurance &lt;br&gt;
• Blockchain web development&lt;br&gt;
• Cryptocurrency exchange and trading platforms&lt;br&gt;
• Digital wallet development&lt;br&gt;
• Defi Development&lt;br&gt;
• Decentralized Applications Development&lt;br&gt;
• White Label Crypto Exchange &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Service Focus&lt;/strong&gt;&lt;br&gt;
• Mobile app development- 20%&lt;br&gt;
• Web development- 50 %&lt;br&gt;
• Software development- 15%&lt;br&gt;
• Web designing(UI/UX)- 10%&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#maticz"&gt;
  &lt;/a&gt;
  Maticz
&lt;/h3&gt;

&lt;p&gt;Maticz is the proven Blockchain Development Company in India that provides an end-to-end business solution to climb your business on the success ladder. As an experienced blockchain development company, they have in-depth knowledge of AI, IoT, Blockchain, and cloud services. Experienced in developing multiple business solutions like Blockchain, fintech, Internet of Things, Artificial Intelligence, Machine learning, AR/VR, Big Data, BI, and cloud computing. &lt;br&gt;
They have well trained Software Professionals to Deliver High-Quality software solutions that add value to your business. The number of employees is 50+ and founded in 2020 and based on India. They have a good team from the project manager to the programming team. &lt;br&gt;
&lt;strong&gt;Key Clients&lt;/strong&gt;&lt;br&gt;
Their products and services cater to significant corporations and startups like CoinMumy, NEON, BitBaazi, Swap Node, Aya, FilipCoin, DigiTron, Bitendex, IOTU, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Services&lt;/strong&gt; :&lt;br&gt;
• Blockchain Development Services&lt;br&gt;
• Cryptocurrency Exchange Development&lt;br&gt;
• Crypto Exchange App Development&lt;br&gt;
• NFT Marketplace Development&lt;br&gt;
• White Label Crypto Exchange &lt;br&gt;
• White Label NFT Marketplace&lt;br&gt;
• DeFi Development Sevices&lt;br&gt;
• Token Development Services&lt;br&gt;
• NFT Development Services&lt;br&gt;
• Solana NFT MarketPlace Development&lt;br&gt;
• NFT Music MarketPlace Development&lt;br&gt;
• Binance Smart Chain Development&lt;br&gt;
• BEP20 Token Development&lt;br&gt;
• DeFi Yield Farming Development&lt;br&gt;
• Erc20 Token Development&lt;br&gt;
• Trc20 Token Development&lt;br&gt;
• Launchpad Development&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Service Focus&lt;/strong&gt;&lt;br&gt;
• Mobile app development- 10%&lt;br&gt;
• Web development- 10 %&lt;br&gt;
• Software development- 10%&lt;br&gt;
• App designing(UI/UX)- 5%&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#techugo"&gt;
  &lt;/a&gt;
  Techugo
&lt;/h3&gt;

&lt;p&gt;Techugo Inc is a leading Mobile and Web Application Development Firm based in Toronto with offices in the US, India, Saudi Arabia and Dubai.&lt;br&gt;
Their brood of 150+ experienced and enthusiastic professionals have delivered 475+ successful applications and websites for their clients ranging from Global 2000, Fortune 500 and emerging startups hailing from 43+ nations all across the world. (22 +NATIONS SERVED)- (150 +BRANDS ASSISTED)- ($64 M +FUNDING RAISED).&lt;br&gt;
They have conceptualized enterprise apps that are hailed amongst the best enterprise apps serving over 50 mn people. From the conceptualization of the project to technical assistance, and raising funds,their commitment to their clients is based on their foundational work ethics.&lt;br&gt;
The number of employees is 50-249 and founded in 2015 and based on Canada, United States.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Services&lt;/strong&gt;&lt;br&gt;
• iPhone App Development&lt;br&gt;
• Android App Development&lt;br&gt;
• Web Design &amp;amp; Development&lt;br&gt;
• Blockchain&lt;br&gt;
• AR &amp;amp; VR&lt;br&gt;
• IoT (Smart Devices/Homes/ Connected Cars) Application Development.&lt;br&gt;
• QA/Testing Services&lt;br&gt;
• Software Maintenance Services&lt;br&gt;
&lt;strong&gt;Service Focus&lt;/strong&gt;&lt;br&gt;
• Mobile app development- 49%&lt;br&gt;
• Web development- 3 %&lt;br&gt;
• App designing(UI/UX)- 15%&lt;br&gt;
• Blockchain technology- 8%&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#technoloader"&gt;
  &lt;/a&gt;
  Technoloader
&lt;/h3&gt;

&lt;p&gt;Technoloader (P) LTD. is a Blockchain development company which provides a wide array of services based on Blockchain such as Blockchain development, supply chain development, cryptocurrency exchange development, cryptocurrency MLM development, DAPP development, smart contract development, private Blockchain development, multi-currency wallet development and Hyper ledger Blockchain development.&lt;br&gt;
Besides being an expert on Blockchain and cryptocurrency, Technoloader is a leader for various other IT solutions including Website Design and Development, Ecommerce Website Development, Mobile Application Development, Internet Marketing (SEO, SMO, PPC, ASO, ICO, Cryptocurrency Marketing), Hired Dedicated Resources (Blockchain, ReactJS, NodeJS) etc.&lt;br&gt;
The number of employees is 10-49 and founded in 2016 and based on India.&lt;br&gt;
&lt;strong&gt;Services&lt;/strong&gt;&lt;br&gt;
• Blockchain Development&lt;br&gt;
• Cryptocurrency Development&lt;br&gt;
• Cryptocurrency Exchange Development&lt;br&gt;
• Coin/Token Development&lt;br&gt;
• STO Development&lt;br&gt;
• Tron dAPP Development&lt;br&gt;
• Defi Development&lt;br&gt;
• Smart Contract Based MLM web Development&lt;br&gt;
• Website Design and Development&lt;br&gt;
• Ecommerce Website Development&lt;br&gt;
• Mobile Application Development&lt;br&gt;
• Fantasy Sports App and Website Development&lt;br&gt;
• Hire Dedicated Blockchain, React JS, NodeJs Developers&lt;br&gt;
• Internet Marketing (SEO, SMO, PPC, ASO, ICO and Exchange Marketing)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Service Focus&lt;/strong&gt;&lt;br&gt;
• Mobile app development- 5%&lt;br&gt;
• Web development- 10 %&lt;br&gt;
• Software development- 5%&lt;br&gt;
• Web designing(UI/UX)- 10%&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>company</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to extract email-address from a string?</title>
      <author>101samovar</author>
      <pubDate>Wed, 22 Sep 2021 06:05:22 +0000</pubDate>
      <link>https://dev.to/101samovar/how-to-extract-email-address-from-a-string-2h7e</link>
      <guid>https://dev.to/101samovar/how-to-extract-email-address-from-a-string-2h7e</guid>
      <description>&lt;p&gt;There is a string that contains email addresses. &lt;br&gt;
To get the email addresses we need the match method.&lt;br&gt;
The match method with a regular expression pattern for email addresses.&lt;br&gt;
This pattern suppose that the email address consists of login name, at-symbol and domain name.&lt;br&gt;
Login name can be combined from letters in lower and upper case, digits and underscore symbol.&lt;br&gt;
Domain name should consist of two parts separated with a dot symbol.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;manager: Smith@sm-domain.net; sales: Mak@sm-domain.net&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;emailList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[\w]&lt;/span&gt;&lt;span class="sr"&gt;+@&lt;/span&gt;&lt;span class="se"&gt;[\w\-]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;\.[\w]{2,}&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;emailList&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we have got an array with email addresses from the string.&lt;/p&gt;




&lt;p&gt;I hope you found this article useful, if you need any help please let me know in the comment section.&lt;/p&gt;

&lt;p&gt;👋 See you next time. Have a nice day!&lt;/p&gt;

&lt;p&gt;Subscribe to our channel:&lt;br&gt;
&lt;a href="https://www.youtube.com/c/Samovar101"&gt;https://www.youtube.com/c/Samovar101&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
