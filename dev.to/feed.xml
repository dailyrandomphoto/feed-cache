<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Less Than &amp; Less Than or Equal To ( $lt &amp; $lte ) Operators in MongoDB | Theory with Hands-on</title>
      <author>Srajan Gupta</author>
      <pubDate>Mon, 25 Oct 2021 14:00:10 +0000</pubDate>
      <link>https://dev.to/srajangupta__/less-than-less-than-or-equal-to-lt-lte-operators-in-mongodb-theory-with-hands-on-k9d</link>
      <guid>https://dev.to/srajangupta__/less-than-less-than-or-equal-to-lt-lte-operators-in-mongodb-theory-with-hands-on-k9d</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MlnmYl5GX18"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This tutorial is all about the Less Than &amp;amp; Less Than or Equal To Operators in MongoDB.&lt;br&gt;
This tutorial includes both theoretical and hands-on explanation.&lt;/p&gt;

&lt;p&gt;Project Enquiries: &lt;a href="https://www.srajangupta.com/"&gt;https://www.srajangupta.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>mongoose</category>
      <category>nosql</category>
      <category>node</category>
    </item>
    <item>
      <title>Partial Response Feature in Dialogflow CX</title>
      <author>Dhruv Rajkotia</author>
      <pubDate>Mon, 25 Oct 2021 13:47:29 +0000</pubDate>
      <link>https://dev.to/dhruv_rajkotia/partial-response-feature-in-dialogflow-cx-39bi</link>
      <guid>https://dev.to/dhruv_rajkotia/partial-response-feature-in-dialogflow-cx-39bi</guid>
      <description>&lt;p&gt;Dialogflow CX short for Dialogflow Customer Experience is a recent launch from Google in December 2020. It provides a new way for designing agents, taking a state machine approach to agent design. This gives you a clear and explicit control over a conversation, a better end-user experience, and a better development workflow. The older version of Dialogflow which is Dialogflow ES short for Dialogflow Essentials is still supported but the Dialogflow CX should allow chatbots with higher complexity to be built more seamlessly using a visual editor and not require one to write complex code.&lt;/p&gt;

&lt;p&gt;With Dialogflow CX, Google has come up with a lots of new features and overcomes some of the limitation of the Dialogflow ES. Today we are going to discuss about the one of the feature of Dialogflow CX which is the partial response. You probably have seen that option when setuping webhook in Dialogflow CX. Let's have a deeper discussion on that. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-partial-response-why-we-need-it"&gt;
  &lt;/a&gt;
  What is Partial Response? Why we need it?
&lt;/h2&gt;

&lt;p&gt;Sometimes we got into a problem where API takes more time to respond back to the end users and if we need to integrate those API in our bot then probably it's not a good experience to the end users as they need to wait until the API response. Let's understand this issue with some practical example. &lt;/p&gt;

&lt;p&gt;Like, If we have food ordering bot and user has reached to payment flow. User has asked "what is my bill amount?". So here we need to go back to our system and generate bill for the user. So let's assume that our generate bill API takes more than 5s(Dialogflow CX support the webhook timeout till 30s). So here user needs to wait until the API response which may feels user like Is he/she disconnected? or what happened to bot? which leads to a very bad user experience. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vVEpCUch--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcdh65bf4a73fwnlbwdk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vVEpCUch--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcdh65bf4a73fwnlbwdk.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To overcome this problem Dialogflow CX comes up with partial Response feature which has ability to notify users while we are fetching details through webhook. notify users and fetching details from webhook will perform parallel. So here we can notify users with some text like "One moment please while I look that up." So using end user will notified while we are fetching details in backend. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JELMzAJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl68tsk4fzi867oyxucb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JELMzAJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl68tsk4fzi867oyxucb.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-add-partial-response-in-dialogflow-cx"&gt;
  &lt;/a&gt;
  How to add partial response in Dialogflow CX
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h4&gt;

&lt;p&gt;Go to the Route which has the webhook integrated. like from which route you are going to call your webhook. For reference I have attached a screenshot below. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-JZBZZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mipzjla3z3qnq5u81qyu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-JZBZZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mipzjla3z3qnq5u81qyu.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h4&gt;

&lt;p&gt;Add the fulfillment message for that route as per the screenshot. (One moment please while I look that up.)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--52f4RitQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8mdw8vdlcv164k3xl24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--52f4RitQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8mdw8vdlcv164k3xl24.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h4&gt;

&lt;p&gt;Enabled Return Partial Response option. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lqht4oB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hh82xmfe8osng8cbpnpf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lqht4oB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hh82xmfe8osng8cbpnpf.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it, you have configured the partial response successfully. &lt;/p&gt;

&lt;p&gt;Now let's have a quick test. &lt;/p&gt;

&lt;p&gt;Go to your Simulator and click on the 3 dots setting and enabled the partial response option. please take reference from screenshot. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WklYGM8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5waj2d86bbkeaznm5y0w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WklYGM8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5waj2d86bbkeaznm5y0w.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now try with your query which execute the route and call the webhook. After some time you'll received the defined message from bot site before your webhook success message. &lt;/p&gt;

&lt;p&gt;Hope you liked this blog. Please &lt;a href="https://twitter.com/dhruv_rajkotia"&gt;FOLLOW&lt;/a&gt; me on Twitter to get notified regarding my upcoming blogs. Have a nice day..!!&lt;/p&gt;

</description>
      <category>dialogflowcx</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>nlp</category>
    </item>
    <item>
      <title>Event bubbling, capturing and how to prevent them</title>
      <author>Shuvo</author>
      <pubDate>Mon, 25 Oct 2021 13:34:24 +0000</pubDate>
      <link>https://dev.to/0shuvo0/event-bubbling-capturing-and-how-to-prevent-them-9n5</link>
      <guid>https://dev.to/0shuvo0/event-bubbling-capturing-and-how-to-prevent-them-9n5</guid>
      <description>&lt;p&gt;Lets say you have a parent container that also has a child element inside it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"child"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;hello&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And you have added a event listener to them.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.parent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.child&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Parent clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;child clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now try to click on just the parent. You should see &lt;strong&gt;Parent clicked!&lt;/strong&gt;&lt;br&gt;
But now if you try to click on the child element in the console you will see not only &lt;strong&gt;child clicked!&lt;/strong&gt; was printed but &lt;strong&gt;Parent clicked!&lt;/strong&gt; was also printed.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ejLWLaPD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k32skzzkacpzikjekwlf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ejLWLaPD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k32skzzkacpzikjekwlf.png" alt="js event bubbling demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why is that? That is due do something called event bubbling. So when a event is emitted on the child it will bubble up to its parent.&lt;br&gt;
And it makes sense if you think about it, the child element was sitting inside its parent. So we wanted to click on just the child but in reality we clicked on both the parent and the child. So both events were fired. Now notice that first &lt;strong&gt;child clicked!&lt;/strong&gt; was printed and then &lt;strong&gt;Parent clicked!&lt;/strong&gt; was printed. That means the even is first fired on the child then its bubbling up to its parent. But if we want we can make it do the opposite as well.&lt;br&gt;
So to do that as the third argument of our &lt;code&gt;addEventListener&lt;/code&gt; we can pass &lt;code&gt;true&lt;/code&gt;. So if we do that you will see first &lt;strong&gt;Parent clicked!&lt;/strong&gt; will be printed then &lt;strong&gt;child clicked!&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Parent clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;child clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zQN1IAqx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crp0ioe0zmyql73foq5s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQN1IAqx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crp0ioe0zmyql73foq5s.png" alt="JavaScript event capturing demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So basically passing &lt;code&gt;true&lt;/code&gt; as the third argument of &lt;code&gt;addEventListener&lt;/code&gt; tells JavaScript to use capturing mode instead of bubbling mode. And in capturing mode event is fired to the parent then goes down to its child which is the opposite of event bubbling.&lt;/p&gt;

&lt;p&gt;Also if we want we can prevent event bubbling and event capturing by calling &lt;code&gt;stopPropagation&lt;/code&gt; on the event. So if we click on child only the event listener set on child will be fired and if we click on parent only the event listener set on parent will be fired.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stopPropagation&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Parent clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stopPropagation&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;child clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--weNYWCaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/saxmpn0az66xmumpvf9c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--weNYWCaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/saxmpn0az66xmumpvf9c.png" alt="preventing event bubbling"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alight that's all for now. Make sure you check out my other articles and &lt;a href="https://www.youtube.com/c/AngleBrace"&gt;YouTube Channel&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/0shuvo0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/0shuvo0/i-made-squid-game-with-javascript-10j9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I made Squid Game with JavaScript&lt;/h2&gt;
      &lt;h3&gt;Shuvo ・ Oct 24 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Local Kubernetes development made easy with Minikube - Devtron</title>
      <author>Arushi shukla</author>
      <pubDate>Mon, 25 Oct 2021 13:33:33 +0000</pubDate>
      <link>https://dev.to/arushi09/local-kubernetes-development-made-easy-with-minikube-devtron-17hf</link>
      <guid>https://dev.to/arushi09/local-kubernetes-development-made-easy-with-minikube-devtron-17hf</guid>
      <description>&lt;p&gt;Devtron being an open source platform appreciates the contributions coming from the community all across the globe. Everyday, the team of Devtron is leveraging the idea of building the platform more developer-friendly. To contribute and provide your ideas we came up with a solution to let our contributors know how the process will work.&lt;br&gt;
Frequently installing devtron to check your applied changes can be a tedious task and will not give a speedy development. Try out this hassle-free setup to locally set up devtron.&lt;/p&gt;

&lt;p&gt;Before starting up with the setup lets first understand, &lt;strong&gt;What Devtron is?&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/devtron-labs"&gt;
        devtron-labs
      &lt;/a&gt; / &lt;a href="https://github.com/devtron-labs/devtron"&gt;
        devtron
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Software Delivery Workflow For Kubernetes
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Devtron is an open source software delivery workflow for Kubernetes written in Go. It is known for its slick user interface which allows developers to deploy their Microservices over Kubernetes in no-time. Not only application deployment, but also it helps in monitoring and logging just through the Devtron dashboard itself. Moreover it allows developers to integrate their existing open-source systems like ArgoCD, Jenkins, Clair, and others.&lt;/p&gt;

&lt;p&gt;Starting with the setup few prerequisites are to be taken into consideration which are listed below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites-"&gt;
  &lt;/a&gt;
  Prerequisites -
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Docker installed&lt;/li&gt;
&lt;li&gt;Kubernetes installed&lt;/li&gt;
&lt;li&gt;Having a basic architectural knowledge about devtron and a local Kubernetes cluster is a prerequisite for this setup.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my case, I took a single node Minikube cluster. You can  choose any as per your requirement.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#minikube-setup"&gt;
  &lt;/a&gt;
  Minikube Setup
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-minikube"&gt;
  &lt;/a&gt;
  What is minikube?
&lt;/h3&gt;

&lt;p&gt;Minikube is a utility to run Kubernetes on your local machine. It creates a VM on your local machine and deploys a simple cluster containing only one node.&lt;br&gt;
To set up a Minikube cluster , you first need to install Minikube using this &lt;a href="https://minikube.sigs.k8s.io/docs/start/?ref=hackernoon.com"&gt;documentation&lt;/a&gt;. After the successful installation of Minikube , now it’s time to create a cluster.&lt;br&gt;
Cluster creation in Minikube is quite simple using a single command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;minikube start --cpus 3 --memory 7168
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let the command completely run, and create a cluster. The CPU and memory requirements are given explicitly because by only running &lt;code&gt;minikube start&lt;/code&gt; a cluster is created with the default configurations of 2 CPUs and 2048 memory which is insufficient for devtron installation.&lt;br&gt;
Afterwards, run the below command to check the health of the nodes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get nodes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Now, let's start installing Devtron!!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#devtron-installation"&gt;
  &lt;/a&gt;
  Devtron Installation
&lt;/h2&gt;

&lt;p&gt;Installation of Devtron can be done using multiple command line programs. Eg - helm3, helm2 and kubectl. Among these, helm3 is the recommended one. Before that, refer to the following &lt;a href="https://helm.sh/docs/intro/install/"&gt;documentation&lt;/a&gt; to install helm.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1:&lt;/strong&gt; To install devtron using helm3 run the following commands -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm repo add devtron https://helm.devtron.ai
helm install devtron devtron/devtron-operator --create-namespace --namespace devtroncd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The installation time will be dependent on the internet speed on your local machine. Generally the installation takes upto 20-25 mins.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt; Keep on executing the command below to check the status of the installation. If it is still in progress it will show &lt;strong&gt;Downloaded&lt;/strong&gt;  and once finished it will show  &lt;strong&gt;Applied&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl -n devtroncd get installers installer-devtron -o jsonpath='{.status.sync.status}'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also run the following command to keep track of your pods.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl -n devtroncd get pods - w 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;STEP 3:&lt;/strong&gt; After the successful installation of devtron, now we are ready to access the dashboard. As the cluster is locally created  it will accessible on localhost or localhost IP - 127.0.0.1&lt;br&gt;
Use the below command to access the dashboard locally&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;minikube -n devtroncd svc/devtron-service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also use minikube tunnel  to create an EXTERNAL IP to access the dashboard, or port-forwarding the devtron-service will also work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 4:&lt;/strong&gt; Logging into the dashboard using admin access will require a password which will be generated from the below command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl -n devtroncd get secret devtron-secret -o jsonpath='{.data.ACD_PASSWORD}' | base64 -d
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Hurray..! Your devtron installation is successfully done.To know more about installation refer to official site of &lt;a href="https://docs.devtron.ai/"&gt;Devtron&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#starting-the-local-setup"&gt;
  &lt;/a&gt;
  Starting the Local Setup
&lt;/h2&gt;

&lt;p&gt;As we move forward, devtron installation was the first step we successfully completed. We are ready to set up our local development environment for Devtron and play around with it. For building any features or fixing bugs, we need to have the source code of the project at the very first place.&lt;br&gt;
&lt;code&gt;[Note: Please make sure that the wire module is installed in your system]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow the steps below for the setup -&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1:&lt;/strong&gt; Clone the project&lt;br&gt;
The below command will clone the devtron repo in your system. If you haven’t installed git,  install it from here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/devtron-labs/devtron.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt; Build the project. &lt;br&gt;
Go to the devtron directory which you cloned, using the command  &lt;code&gt;cd devtron&lt;/code&gt; and build the devtron source code by the following command.&lt;br&gt;
&lt;code&gt;make build&lt;/code&gt;  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 3:&lt;/strong&gt; Port Forwarding the Services&lt;br&gt;
Now we need to port forward a few services to establish a connection between Devtron running with the binary we will execute in the next step. Execute the following commands in different terminals which can help you to check the logs and debug if any connection issues occur and also do not close the terminal or stop these commands until the work is done. If any commands are stopped, then please execute it again to maintain the connection with local setup.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl -n devtroncd port-forward svc/argocd-server 8000:80

kubectl -n devtroncd port-forward svc/argocd-dex-server 5556:5556

kubectl -n devtroncd port-forward svc/postgresql-postgresql 5432:5432

kubectl -n devtroncd port-forward svc/devtron-nats 4222:4222
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;STEP 4:&lt;/strong&gt; Setting up Environment Variables and executing Binary&lt;/p&gt;

&lt;p&gt;Now we need to set up a few environment variables to connect the source code with the Devtron which we installed initially. Please run the following commands from the root directory where you build the project. It will setup the environment variable and execute the binary as well. Do not stop the command until the work is not done.&lt;br&gt;
&lt;code&gt;[Note: python3 must be installed in the system]&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget https://raw.githubusercontent.com/devtron-labs/devtron/main/developers-guide/scripts/exporter.py
python3 exporter.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Yayy! We have successfully set up devtron locally in our system and now we can start building features, fixing bugs, etc and start contributing to the project.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>kubernetes</category>
    </item>
    <item>
      <title>How to upload a file in Cypress?</title>
      <author>Dilpreet Johal</author>
      <pubDate>Mon, 25 Oct 2021 12:34:02 +0000</pubDate>
      <link>https://dev.to/automationbro/how-to-upload-a-file-in-cypress-1iak</link>
      <guid>https://dev.to/automationbro/how-to-upload-a-file-in-cypress-1iak</guid>
      <description>&lt;p&gt;In this tutorial, we will learn how to upload a file in Cypress using the &lt;a href="https://www.npmjs.com/package/cypress-file-upload"&gt;cypress-file-upload&lt;/a&gt; NPM package. Cypress does not have a native support to do file uploads at the moment, however, this is something they plan to add in the future.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;Since, we need to use a third-party library to do file upload, we will need to get that installed and setup to make it work with Cypress. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#install-npm%C2%A0package"&gt;
  &lt;/a&gt;
  Install NPM Package
&lt;/h4&gt;

&lt;p&gt;First thing you need to do is install the package - &lt;br&gt;
&lt;code&gt;npm install --save-dev cypress-file-upload&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#setup-custom%C2%A0command"&gt;
  &lt;/a&gt;
  Setup Custom Command
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;cypress-file-upload&lt;/code&gt; library provides a custom command which we can use once we set it up. To do that, we need to import the library in the custom command file (cypress/support/commands.js) like this -&lt;/p&gt;

&lt;p&gt;&lt;code&gt;import 'cypress-file-upload';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then, make sure this commands.js is imported in &lt;code&gt;cypress/support/index.js&lt;/code&gt; (it might be commented):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;import './commands';&lt;/code&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#upload-file%C2%A0test"&gt;
  &lt;/a&gt;
  Upload File Test
&lt;/h3&gt;

&lt;p&gt;Now, that we have installed the package, we can go ahead and start using the custom command. In the example below, I will be uploading a file on my test website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qTolBbIY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2sgg8ynmlvbclm7xtcq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qTolBbIY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2sgg8ynmlvbclm7xtcq.png" alt="cypress file upload example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The key thing to focus on the example above is the &lt;code&gt;.attachFile()&lt;/code&gt; command which is added by the helper library that we installed. It takes in a parameter i.e. the file name which should be included inside the fixtures folder as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FCWcTd5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lreut3a9q3ehjh9qstu3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FCWcTd5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lreut3a9q3ehjh9qstu3.png" alt="cypress fixtures folder"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#working-with-hidden-input%C2%A0fields"&gt;
  &lt;/a&gt;
  Working with hidden input fields
&lt;/h3&gt;

&lt;p&gt;Typically, the &lt;code&gt;.attachFile()&lt;/code&gt; command would work if the &lt;code&gt;input[type=file]&lt;/code&gt; element is intractable. However, if the element is hidden then you will need to make necessary changes to make the element visible and intractable again. You can do that using the help of the Cypress &lt;code&gt;.invoke()&lt;/code&gt; function as seen below - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2wD9Kveo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qn130b2of078njiohu05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2wD9Kveo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qn130b2of078njiohu05.png" alt="Cypress .invoke function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this example, I am removing the hidden class using the jquery removeClass function which is making my element intractable again.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#to-learn-more-about-how-to-upload-a-file-in-cypress-checkout-the-video-below%E2%80%8A%E2%80%8A"&gt;
  &lt;/a&gt;
  To learn more about how to upload a file in Cypress, checkout the video below - 
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/2jVf6u0yKeY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;📧 Subscribe to my &lt;a href="https://automationbro.com/mailing-list"&gt;mailing list&lt;/a&gt; to get access to more content like this as well as be part of amazing free giveaways.&lt;/p&gt;

&lt;p&gt;👍 You can follow my content here as well - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/automationbro"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/company/automation-bro"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;I love coffees! And, if this post helped you out and you would like to support my work, you can do that by clicking on the button below and buying me a cup of coffee -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/automationbro"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUHFj71T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4aw2ub3f4qkyjk0ivwt4.png" alt="Buy me a coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also support me by liking and sharing this content.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>testing</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Mine CAKE with Your Computer in Under 5 Minutes in 2021</title>
      <author>Course Probe</author>
      <pubDate>Mon, 25 Oct 2021 12:19:58 +0000</pubDate>
      <link>https://dev.to/courseprobe/how-to-mine-cake-with-your-computer-in-under-5-minutes-in-2021-3ddo</link>
      <guid>https://dev.to/courseprobe/how-to-mine-cake-with-your-computer-in-under-5-minutes-in-2021-3ddo</guid>
      <description>&lt;p&gt;A Step by Step Guide to Pool Mining Pancakeswap CAKE in 2021 with a CPU or GPUs!&lt;/p&gt;

&lt;p&gt;Sometimes mining can seem to be too complex for the average computer user, so I thought about putting together a quick guide to get you excited about mining cryptocurrency and CAKE token in particular.&lt;/p&gt;

&lt;p&gt;Anyone can start mining CAKE with any computer in under 5 minutes using this guide, regardless of your technical skill level you will be able to increase your crypto knowledge and start mining CAKE with your CPU and GPU today!!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pancakeswap is a descentralizaed DEX where you can Trade, earn, and win crypto on the most popular decentralized platform in the galaxy, you can Trade any token on Binance Smart Chain in seconds and you can earn passive income with your CAKE tokens.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What I like the most about &lt;a href="https://pancakeswap.finance/"&gt;Pancakeswap&lt;/a&gt; Is that it allows you to exchange your coins for many different coins and tokes almost free, for those of you who like to participate in Decentralized Finance then you can for example be a Liquidity provider to earn some Cake tokens.&lt;/p&gt;

&lt;p&gt;You will earn rewards when you earn and then stake your Cake tokens, the site is very easy to use and you can make some passive income with the APR you get on the Syrup pools (Yield Farming).&lt;/p&gt;

&lt;p&gt;Pancakeswap runs on the Binance Smart Chain and is super fast, I recommend using Metamask as the wallet to interact with the site. &lt;/p&gt;




&lt;p&gt;Now let's get you started !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1:&lt;/strong&gt; Get yourself a Wallet.&lt;/p&gt;

&lt;p&gt;I recommend installing Metamask as a Chrome extension, you can get it at metamask.io&lt;/p&gt;

&lt;p&gt;Make sure you connect the Binance Smart Chain network to metamask (Google the instructions...) or get them from this link: &lt;a href="https://academy.binance.com/en/articles/connecting-metamask-to-binance-smart-chain"&gt;Binance Academy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select the Binance Smart Chain in Metamask and copy your address. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt; Download the Unmineable Miner Software&lt;/p&gt;

&lt;p&gt;Before downloading the file, set some folder exclusions on Windows Defender, in your antivirus and also in your browser so you can download the file without being bothered with notifications of dangerous files.&lt;/p&gt;

&lt;p&gt;Official Unmineable software can be downloaded from this site: &lt;a href="https://www.unmineable.com/miner"&gt;Unmineable Download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download the MFI version (Miners files included).&lt;/p&gt;

&lt;p&gt;The unmineable software is just one executable file, it already contains all the configurations so it is the best and easiest way to mine CAKE.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run the file as an Administrator in windows.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It looks exactly like this when you run it: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" alt="Unmineable Start Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can select GPU cards or CPU.&lt;/p&gt;

&lt;p&gt;It will take you to the second screen where you will enter your Binance Smart Chain Address and also &lt;strong&gt;the code which will allow you to drop your Dev Fee from 1% to 0.75%&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Use the code: &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; to drop your Dev Fee from 1% to 0.75% (it makes a difference).&lt;/p&gt;

&lt;p&gt;Your screen should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ALTH5kdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oesrm1ci4xgjpo7n36bq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ALTH5kdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oesrm1ci4xgjpo7n36bq.png" alt="Cake Mining Unmineable 2021"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you click on the Start button, you should see a similar screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" alt="Unmineable Mining Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point I would recommend you to click the option at the bottom to display the logs (Looks like a sheet of paper), here click Force Stop. &lt;/p&gt;

&lt;p&gt;Then click the Settings Icon (Looks like a cog wheel), in the screen that pops up you want to double check a few things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make sure the algorithm selected is ETCHASH if you are mining with 4GB cards, use ETHASH for cards with 6GB or more, if you selected CPU everything is ready to start mining no need to select anything.&lt;/li&gt;
&lt;li&gt;Make sure the Code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; is showing in the referral box.&lt;/li&gt;
&lt;li&gt;Set a name for your worker (The computer you are mining from).&lt;/li&gt;
&lt;li&gt;Set your mining Intensity at the top, I would recommend High for those periods when you are not using the computer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It looks similar to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" alt="Unmineable Settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the Save &amp;amp; Restart button to start mining !!&lt;/p&gt;

&lt;p&gt;Once it starts you can check the speed of your Graphic card which shows as the Current Hashrate.&lt;/p&gt;

&lt;p&gt;Also you can click on the stats button on the top right to go directly to the Unmineable website where you can check your balance and request a manual payment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; it is recommended you change a few settings in Windows, there's people that disable the Updates and also disable sleeping mode, hibernation or anything that could turn off the computer while it is not in use.&lt;/p&gt;

&lt;p&gt;If you are using a Laptop, make sure it has some battery or is plugged so it won't shut down.&lt;/p&gt;

&lt;p&gt;Congrats, if you are using Unmineable you are now a miner !!&lt;/p&gt;




&lt;p&gt;If you want a bit more of control over the mining software and configurations then you can download the miners and manually set them up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with CPU then you could follow below:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Go to the xmrig site to download the latest version (MSVC) or from the oficial github repository: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;https://github.com/xmrig/xmrig/releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you download the latest version you would have to edit a file named "pool_mine_example.bat" or "start.com" or "start.bat" Inside this file you need to modify 2 lines.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;if the file doesn't exists you would have to create it&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It could look similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd %~dp0
xmrig.exe -o rx.unmineable.com:3333 -u CAKE:0xe1b2456a2Ad227b93D7a7421f1E9Cc57908cC37c.wrkID#e4xd-wmzl -p x
pause
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the second line after the -o you can see the Pool URL, in this case all you have to do depending on your location is to use one of the following URLs (select the one closer to your location).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;USA:&lt;/strong&gt; rx-us.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Europe:&lt;/strong&gt; rx-eu.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Asia:&lt;/strong&gt; rx-asia.unmineable.com:3333&lt;/p&gt;

&lt;p&gt;Then, the third line is where you will enter your wallet's public address (copied in STEP 1), place it after the CAKE: and before the first dot "." .&lt;/p&gt;

&lt;p&gt;The general structure of the address needs to be:&lt;/p&gt;

&lt;p&gt;[COIN]:[Wallet address].[workerID]#[Code to lower mining fee]&lt;/p&gt;

&lt;p&gt;The workerID is any name you want to give to each computer where you are running the miner so it can easily be identified later on under the pool stats.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The code after the # is important&lt;/strong&gt; because mining with that code will drop the Mining Fee from 1% to 0.75% (it makes a difference). You can start mining using that code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Run the file as an administrator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" alt="XMRig Mining"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If everything goes well, you are now running XMRig and are mining. Congrats !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with GPU:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I would recommend you to get: Teamredminer (AMD cards), Phoenixminer (AMD/NVIDIA) or Trex (Nvidia).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download these miner from the oficial sites:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Phoenix miner: &lt;a href="https://bitcointalk.org/index.php?topic=2647654.0"&gt;Bitcoin Talk forum&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Teamred miner: &lt;a href="https://github.com/todxx/teamredminer/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Trex: &lt;a href="https://github.com/trexminer/T-Rex/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then set them up with a smilar Start.bat file as mentioned in the CPU section above. &lt;/p&gt;

&lt;p&gt;Pay attention to some changes you would need to implement: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 4gb cards you need to set the algo on the miner to ETCHASH and the coin to ETC. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 6gb cards or more then you need to set the algo on the miner to ETHAS and the coin to ETH. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to also set the pool url accordingly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ETCHASH: etchash.unmineable.com:3333&lt;/li&gt;
&lt;li&gt;ETHASH:  ethash.unmineable.com:3333&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once done, run the file as administrator.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now you can Log into Unmineable to check your stats:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unmineable.com is a mining Pool which allows you to mine with your CPU using RandomX or GPUS using Etchash or Ethash and pay you in any coin you select. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" alt="Unmineable Site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember when you set up the address inside the Miner starter file ? &lt;/p&gt;

&lt;p&gt;Well, there you just let Unmineable know the coin you want to be paid in, in this example CAKE and then the address where they will transfer the mined coins.&lt;/p&gt;

&lt;p&gt;In order to check your balance, log into &lt;a href="https://unmineable.com"&gt;Unmineable&lt;/a&gt; and then select the coin you want to mine. In this example, CAKE.&lt;/p&gt;

&lt;p&gt;Then you can select the Tab that reads RandomX or ETCHAS or ETHASH depending on your algo, and enter your address in the box that reads "Enter your address to check your stats:". &lt;/p&gt;

&lt;p&gt;After doing this you will see the balance on your account and you will even be able to request a payment.&lt;/p&gt;




&lt;p&gt;Congrats, you are a miner now! &lt;/p&gt;

&lt;p&gt;I recommend downloading some software to monitor the running temperature of your CPU and GPU, a good and free one is Hardware Monitor.&lt;/p&gt;

&lt;p&gt;Try not to exceed the temperature more than 90 degrees celsius. In case you are mining with a laptop, change the thermal paste of your CPU, get it cleaned inside, and get some heat extractors for laptops.&lt;/p&gt;

&lt;p&gt;If you take care of the temperature your computer should work very well, the amount of coins you can mine will depend on the hashrate of your CPU and GPUs. &lt;/p&gt;

&lt;p&gt;For GPUS download MSI Afterburner and set the appropriate Overclocking profile so you can get higher hashrates.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Remember to use a valid address for each coin, for example if you want to be paid in ADA then you need a valid Cardano blockchain address. In this example Binance Smart Chain is used and you would receive a CAKE token on the BSC blockchain.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;If you are looking for more information into CPU mining, there's a good guide in a PDF ebook and is Free, get it at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" alt="Mining with CPU"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>crypto</category>
      <category>pancakeswap</category>
      <category>mining</category>
    </item>
    <item>
      <title>Bite-size dev tip #1</title>
      <author>DevSimplicity|Simple, Not Easy</author>
      <pubDate>Mon, 25 Oct 2021 12:19:42 +0000</pubDate>
      <link>https://dev.to/devsimplicity/bite-size-dev-tip-1-1jan</link>
      <guid>https://dev.to/devsimplicity/bite-size-dev-tip-1-1jan</guid>
      <description>&lt;p&gt;Bite-size dev tip #1:&lt;/p&gt;

&lt;p&gt;Good programming is much more about understanding what you can remove than adding.&lt;/p&gt;

&lt;p&gt;How many lines of code did you remove today?&lt;/p&gt;




&lt;p&gt;&lt;small&gt;"Bite-size dev tip" series is my attempt at trying to convey as much important dev-related meaning as possible, in as few words as possible. If you think I should continue, let me know with reactions/comments.&lt;/small&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>codequality</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Como sobrescrever arquivos no Magento 2 através de preferences</title>
      <author>Lucas Teixeira dos Santos Santana</author>
      <pubDate>Mon, 25 Oct 2021 12:18:37 +0000</pubDate>
      <link>https://dev.to/santanaluc94/como-sobrescrever-arquivos-no-magento-2-atraves-de-preferences-384g</link>
      <guid>https://dev.to/santanaluc94/como-sobrescrever-arquivos-no-magento-2-atraves-de-preferences-384g</guid>
      <description>&lt;h1&gt;
  &lt;a href="#contextualizando"&gt;
  &lt;/a&gt;
  Contextualizando
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#magento-2-e-a-inje%C3%A7%C3%A3o-de-depend%C3%AAncia"&gt;
  &lt;/a&gt;
  Magento 2 e a injeção de dependência
&lt;/h3&gt;

&lt;p&gt;Para entender melhor a injeção de dependência é importante o conhecimento do 5º princípio do &lt;strong&gt;SOLID&lt;/strong&gt;, a Inversão de Dependência (&lt;em&gt;Dependency Inversion Principle&lt;/em&gt;). &lt;/p&gt;

&lt;p&gt;É chamada de dependência cada instância de objeto dentro de uma determinada classe, porque a classe fica dependente da instância do objeto para ser executada. Para a injeção desta instância, é recomendado, que seja realizado através do DIP (Inversão de dependência).&lt;/p&gt;

&lt;p&gt;A Injeção de dependência é um padrão de projeto (&lt;em&gt;design pattern&lt;/em&gt;) que permite uma classe mantenha um baixo nível de acoplamento entre diferentes módulos do sistema, ou seja, permite que uma classe não seja responsável por criar os objetos dos quais depende.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#object-manager"&gt;
  &lt;/a&gt;
  Object Manager
&lt;/h3&gt;

&lt;p&gt;O &lt;em&gt;Object Manager&lt;/em&gt; é uma classe de serviço do Magento que instancia objetos no início do processo de &lt;em&gt;bootstrap&lt;/em&gt;, gerando e injetando as classes declaradas no arquivo &lt;code&gt;di.xml&lt;/code&gt; como dependências nos construtores das classes instanciadas.&lt;/p&gt;

&lt;p&gt;Como o &lt;em&gt;Object Manager&lt;/em&gt; fornece seu serviço indiretamente, a classe não deve depender do próprio &lt;em&gt;Object Manager&lt;/em&gt;. As únicas exceções são &lt;em&gt;factories&lt;/em&gt; personalizadas com lógica complexa e integrações de testes que necessitam das configurações de ambiente.&lt;/p&gt;

&lt;p&gt;O Magento utiliza sua ferramenta de compilação de código para coletar todas as informações das dependências das classes e as armazena em arquivos. Durante o processo de criação das classes, o &lt;em&gt;Object Manager&lt;/em&gt; utiliza essas informações de criação para criar objetos concretos na aplicação.&lt;/p&gt;

&lt;p&gt;Classes de serviço que não existem no código base, como &lt;em&gt;proxies&lt;/em&gt;, &lt;em&gt;factories&lt;/em&gt; e &lt;em&gt;interceptors&lt;/em&gt; que são declarados no código ou nas configurações, são gerados com a ajuda do compilador.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#o-que-s%C3%A3o-as-prefer%C3%AAncias"&gt;
  &lt;/a&gt;
  O que são as preferências?
&lt;/h3&gt;

&lt;p&gt;As preferências (&lt;em&gt;preferences&lt;/em&gt;) &lt;em&gt;são&lt;/em&gt; utilizadas para indicar a implementação padrão das interfaces através do &lt;em&gt;Object Manager&lt;/em&gt;, caso a interface injetada no construtor de uma classe não tenha sido mapeada com um &lt;em&gt;preference,&lt;/em&gt; ao instanciar a classe será exibido um erro. Para a que o &lt;em&gt;Object Manager&lt;/em&gt; faça o mapeamento da interface para a classe, deve-se utilizar o nó &lt;code&gt;&amp;lt;preference&amp;gt;&lt;/code&gt; no arquivo &lt;code&gt;di.xml&lt;/code&gt;, indicando no atributo &lt;code&gt;for&lt;/code&gt; qual a interface e no atributo &lt;code&gt;type&lt;/code&gt; qual a classe que deverá ser sobrescrita e implementar os métodos determinados pela interface.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;preference&lt;/em&gt; não precisa ser utilizada apenas com interfaces, é possível sobrescrever uma classe de outro módulo, definindo a nova classe globalmente. Para que o &lt;em&gt;Object Manager&lt;/em&gt; faça o mapeamento da classe que deve ser sobrescrita, deve-se utilizar o nó &lt;code&gt;&amp;lt;preference&amp;gt;&lt;/code&gt; no arquivo &lt;code&gt;di.xml&lt;/code&gt;, indicando no atributo &lt;code&gt;for&lt;/code&gt; qual a classe que será sobrescrita e no atributo &lt;code&gt;type&lt;/code&gt; qual a classe que deverá ser sobrescrever, e nesta sobrepor o método com a mesma assinatura (desde que ele seja do publico ou protegido).&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#c%C3%B3digo-para-sobrescrever-arquivos"&gt;
  &lt;/a&gt;
  Código para sobrescrever arquivos
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#dixml"&gt;
  &lt;/a&gt;
  di.xml
&lt;/h3&gt;

&lt;p&gt;O &lt;em&gt;Object Manager&lt;/em&gt; usa a implementação através da abstração mapeando quando a assinatura do construtor de uma classe solicita um objeto por sua interface. O &lt;em&gt;Object Manager&lt;/em&gt; utiliza esse mapeamento para determinar qual é a implementação padrão para a classe de um escopo específico. Estes tipo de funcionalidade deve ser implementada dentro do arquivo &lt;code&gt;di.xml&lt;/code&gt;, seguindo a estruturas de pastas &lt;code&gt;\{Vendor}\{Module}\etc\{area}\di.xml&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;config&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsi=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2001/XMLSchema-instance"&lt;/span&gt; &lt;span class="na"&gt;xsi:noNamespaceSchemaLocation=&lt;/span&gt;&lt;span class="s"&gt;"urn:magento:framework:ObjectManager/etc/config.xsd"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Override a custom Interface --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;preference&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"{Vendor}\{Module}\Api\Data\{EntityName}Interface"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"{Vendor}\{Module}\Model\{EntityName}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- Override a Magento Class --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;preference&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"{Vendor}\{Module}\{Directory}\{ClassToReplace}"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"{Vendor}\{Module}\{Directory}\{ClassReplaced}"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#interface"&gt;
  &lt;/a&gt;
  Interface
&lt;/h3&gt;

&lt;p&gt;O código a seguir se refere a interface de uma entidade que deverá receber uma sobrescrição.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Api\Data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;interface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;EntityName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nc"&gt;Interface&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="no"&gt;ATTR_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'{attribute_name}'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;setMethod&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;self&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#model-da-interface"&gt;
  &lt;/a&gt;
  Model da Interface
&lt;/h3&gt;

&lt;p&gt;O código a seguir se refere a implementação dos métodos de uma interface.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Api\Data&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;EntityName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nc"&gt;Interface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Model\ResourceModel&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ResourceModelName&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;EntityName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;EntityName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nc"&gt;Interface&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ATTR_NAME&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;setMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$attrName&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;self&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ATTR_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$attrName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#classe-a-substituir"&gt;
  &lt;/a&gt;
  Classe a substituir
&lt;/h3&gt;

&lt;p&gt;O código a seguir se refere a sobrescrição do método de uma classe, podendo ser uma classe de qualquer tipo (&lt;em&gt;Block&lt;/em&gt;, &lt;em&gt;Controller&lt;/em&gt;, &lt;em&gt;Data Provider&lt;/em&gt;, &lt;em&gt;Model&lt;/em&gt;, &lt;em&gt;Ui Component&lt;/em&gt;, &lt;em&gt;Service&lt;/em&gt;, etc).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Directory&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ClassToReplace&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;methodName&lt;/span&gt;&lt;span class="p"&gt;}()&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Old code here&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#classe-substitu%C3%ADda"&gt;
  &lt;/a&gt;
  Classe substituída
&lt;/h3&gt;

&lt;p&gt;O código a seguir se refere a extensão do(s) método(s) de uma classe.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Directory&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Directory&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ClassToReplace&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ClassReplaced&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ClassToReplace&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;methodName&lt;/span&gt;&lt;span class="p"&gt;}()&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// New code here&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#finalizando"&gt;
  &lt;/a&gt;
  Finalizando
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Valores entre chaves (&lt;code&gt;{test}&lt;/code&gt;) devem ser alterados na implementação do código.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#habilitando-as-altera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Habilitando as alterações
&lt;/h2&gt;

&lt;p&gt;Comando para gerar a configuração das injeções de dependência e todas as classes ausentes que precisam ser geradas (proxys, interceptors, etc).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php bin/magento setup:di:compile
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#diret%C3%B3rios-e-arquivos"&gt;
  &lt;/a&gt;
  Diretórios e Arquivos
&lt;/h2&gt;

&lt;p&gt;Segue a a lista de diretórios e arquivos que devem ser criados.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- app/
  - code/
    - {Vendor}/
        - {Module}/
          - Api/
            - Data/
              - {EntityName}Interface.php
          - etc/
            - di.xml
            - module.xml
          - {Directory}/
            - {ClassReplaced}.php
          - Model/
            - {EntityName}.php
          - registration.php
          - composer.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>php</category>
      <category>magento2</category>
      <category>programming</category>
      <category>braziliandevs</category>
    </item>
    <item>
      <title>How To Build A Successful Cybersecurity Program For Your Business?</title>
      <author>Michael James</author>
      <pubDate>Mon, 25 Oct 2021 12:14:33 +0000</pubDate>
      <link>https://dev.to/michael56812375/how-to-build-a-successful-cybersecurity-program-for-your-business-1dn4</link>
      <guid>https://dev.to/michael56812375/how-to-build-a-successful-cybersecurity-program-for-your-business-1dn4</guid>
      <description>&lt;p&gt;According to the Verizon Data Breach Investigation report, there were more than 53000 cybersecurity incidents and 2200 data breaches. This trend is not going to subside and will continue. This clearly indicates that cybersecurity attacks will increase in number and grow in complexity.&lt;br&gt;
If you are a small business thinking that these cyber-attacks only target large-scale enterprises, then you are wrong. We have seen instances where cybercriminals have attacked small businesses as well. Small businesses are more vulnerable as they serve as a soft target for attackers due to a lack of resources and cybersecurity policies.&lt;br&gt;
Whether you have a small business or a large one, having a robust cybersecurity program at your disposal helps protect against modern-day cybersecurity threats. How can I create a cybersecurity program for my business? Is that what you are thinking? If yes, then you are at the right place. &lt;br&gt;
In this article, you will learn about a step-by-step process of creating a cybersecurity program for your business.&lt;br&gt;
Lay The Foundation&lt;/p&gt;

&lt;p&gt;The first step of creating a winning cybersecurity program is to lay the groundwork. Establish the foundation of your cybersecurity program, which you can use to expand upon later on. Thankfully, you don’t have to create everything from scratch as there are many frameworks you can use for this purpose. You can either opt for the NIST framework or choose COBIT5.&lt;/p&gt;

&lt;p&gt;As soon as you start working with the framework, you will realize that many functions, categories and subcategories are not relevant to your business. Now, you will have to align your operational needs with the framework. Use standards of good practice for information security laid out by Information Security Forum and identify which operational services align with cybersecurity definitions of a particular framework.&lt;/p&gt;

&lt;p&gt;Perform Audit of Assets And Policies&lt;br&gt;
After you have laid a solid foundation, it is time to perform a detailed audit of your current assets and cybersecurity policies. Ask yourself questions like, “Which IT assets are critical for your business and need more protection?” Take some time to develop a better understanding of how and where your sensitive data is stored and how it is being accessed.&lt;br&gt;
Instead of solely focusing on your hardware such as devices and &lt;a href="https://hostnoc.com/los-angeles-dedicated-servers/"&gt;Los Angeles dedicated servers&lt;/a&gt;, you should also consider software running on your IT assets as you might need to keep the software and patch updated. Next, critically analyze your current cybersecurity policies. If you identify some loopholes and outdated stuff that needs to be updated, you should go ahead and do it as soon as possible.&lt;br&gt;
This analysis should include everything from access rights of employees to authentication systems to password policies. The stringent your cybersecurity policies might be, the harder it is for cybercriminals to break into your network and wreak havoc on your critical business infrastructure.&lt;br&gt;
Control Access To Your Data&lt;br&gt;
Once you have a clear understanding of your data and where it resides, it is time to manage access to that data in an efficient and secure manner. The easiest way to do that is to adopt the least privilege method. Offer employees access to only that information that they need to perform their tasks. For instance, the sales team should not have access to your HR data or your marketing should not have access to your financial transactions.&lt;br&gt;&lt;br&gt;
You cannot afford to give access to all your data to all your employees. That is where controlling access to data comes into play. Assign role-based access and monitor access constantly to prevent any hiccup. Force employees who have resigned to hand over their login credentials to you before leaving your organization. Most businesses tend to ignore this and end up paying a hefty price for it. Restrict removable storage usage and constantly monitor employee activities online to protect your sensitive data.&lt;br&gt;
Build an IT Security Team&lt;br&gt;
Creating a cybersecurity program is useless if you don’t have the right team to implement it. Hire IT professionals and industry experts and form a dedicated team that will be responsible for overseeing program implementation. Your IT team would be responsible for enforcing the company’s cybersecurity policies. Moreover, this team can also identify and tackle intrusion attempts and cybersecurity attacks to prevent any damage.&lt;br&gt;
Before building a team, you should ask yourself questions like, “How many people do you need in your team?” or “What skills your IT security team should have?” This will simplify the process of building your IT security team. Small businesses that do not have the resources to build their team internally can take the services of managed security providers. This way, they can get the full services of an IT security team at a fraction of the cost.&lt;br&gt;
Another advantage of hiring an IT security provider for &lt;a href="https://www.engati.com/shopify-chatbot"&gt;Increasing conversions on Shopify&lt;/a&gt; is that they are quick to identify shortcomings of your cybersecurity program and offer suggestions and recommendations on correcting it. This can come in handy as you can enhance your cybersecurity program and fill in those gaps to ensure smoother sailing for your business.&lt;br&gt;
Invest In Training and Education&lt;br&gt;
You created one of the best cybersecurity programs, got the services of IT experts but all that won’t help your cause if you don’t educate and train your employees. Invest in employee education and training and it will do a world of good to employee education and training and it will do a world of good to keeping your business asset safe. By spending money on employee’s cybersecurity education and training, you can significantly reduce the risk of cybersecurity attacks such as social engineering. The more aware your staff is cybersecurity, it will be much harder for hackers to trick them into taking an action of their choice.&lt;br&gt;
How do you create a cybersecurity program for your business? Feel free to share it with us in the comments section below.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>TOP 100+ DoFollow Backlink Sites | High PR Free Backlink Sites 2021</title>
      <author>Jameer Khan</author>
      <pubDate>Mon, 25 Oct 2021 12:07:29 +0000</pubDate>
      <link>https://dev.to/stackblogger/top-100-dofollow-backlink-sites-high-pr-free-backlink-sites-2021-359c</link>
      <guid>https://dev.to/stackblogger/top-100-dofollow-backlink-sites-high-pr-free-backlink-sites-2021-359c</guid>
      <description>&lt;h2&gt;
  &lt;a href="#list-of-dofollow-high-pr-free-social-bookmarking-sites"&gt;
  &lt;/a&gt;
  List of DoFollow High PR Free Social Bookmarking Sites
&lt;/h2&gt;

&lt;p&gt;Serial  Website Link Type&lt;br&gt;
1   &lt;a href="https://bookmymark.com/"&gt;https://bookmymark.com/&lt;/a&gt; DoFollow&lt;br&gt;
2   &lt;a href="https://www.digg.com/"&gt;https://www.digg.com/&lt;/a&gt;   DoFollow&lt;br&gt;
3   &lt;a href="https://www.soup.io/"&gt;https://www.soup.io/&lt;/a&gt;    DoFollow&lt;br&gt;
4   &lt;a href="https://www.pearltrees.com/"&gt;https://www.pearltrees.com/&lt;/a&gt; DoFollow&lt;br&gt;
5   &lt;a href="https://backlinks.stackblogger.com/"&gt;https://backlinks.stackblogger.com/&lt;/a&gt; DoFollow&lt;br&gt;
6   &lt;a href="http://www.n4g.com/"&gt;http://www.n4g.com/&lt;/a&gt; DoFollow&lt;br&gt;
7   &lt;a href="http://www.storeboard.com/"&gt;http://www.storeboard.com/&lt;/a&gt;  DoFollow&lt;br&gt;
8   &lt;a href="http://www.bookmarkingbase.com/"&gt;http://www.bookmarkingbase.com/&lt;/a&gt; DoFollow&lt;br&gt;
9   &lt;a href="http://www.bookmarkmaps.com/"&gt;http://www.bookmarkmaps.com/&lt;/a&gt;    DoFollow&lt;br&gt;
10  &lt;a href="http://www.video-bookmark.com/"&gt;http://www.video-bookmark.com/&lt;/a&gt;  DoFollow&lt;br&gt;
11  &lt;a href="https://www.bookmarkmonk.com/"&gt;https://www.bookmarkmonk.com/&lt;/a&gt;   DoFollow&lt;br&gt;
12  &lt;a href="http://www.votetags.info/"&gt;http://www.votetags.info/&lt;/a&gt;   DoFollow&lt;br&gt;
13  &lt;a href="http://www.zypid.com/"&gt;http://www.zypid.com/&lt;/a&gt;   DoFollow&lt;br&gt;
14  &lt;a href="http://www.highprbookmarking.com/"&gt;http://www.highprbookmarking.com/&lt;/a&gt;   DoFollow&lt;br&gt;
15  &lt;a href="https://story.wallclassifieds.com/"&gt;https://story.wallclassifieds.com/&lt;/a&gt;  DoFollow&lt;br&gt;
 List of DoFollow High PR Free Social Bookmarking Sites&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#high-pr-profile-submission-sites-list"&gt;
  &lt;/a&gt;
  High PR Profile Submission Sites List
&lt;/h2&gt;

&lt;p&gt;Serial  Website Domain Authority (DA)&lt;br&gt;
1   &lt;a href="https://www.medium.com/"&gt;https://www.medium.com/&lt;/a&gt; 94&lt;br&gt;
2   &lt;a href="https://www.slideshare.net/"&gt;https://www.slideshare.net/&lt;/a&gt; 92&lt;br&gt;
3   &lt;a href="https://scoop.it/"&gt;https://scoop.it/&lt;/a&gt;   86&lt;br&gt;
4   &lt;a href="https://www.last.fm/"&gt;https://www.last.fm/&lt;/a&gt;    90&lt;br&gt;
5   &lt;a href="https://www.github.com/"&gt;https://www.github.com/&lt;/a&gt; 96&lt;br&gt;
6   &lt;a href="https://www.quora.com/"&gt;https://www.quora.com/&lt;/a&gt;  91&lt;br&gt;
7   &lt;a href="https://www.about.me/"&gt;https://www.about.me/&lt;/a&gt;   91&lt;br&gt;
8   &lt;a href="https://www.crunchbase.com/"&gt;https://www.crunchbase.com/&lt;/a&gt; 90&lt;br&gt;
9   &lt;a href="https://www.disqus.com/"&gt;https://www.disqus.com/&lt;/a&gt; 92&lt;br&gt;
10  &lt;a href="https://www.instructables.com/"&gt;https://www.instructables.com/&lt;/a&gt;  89&lt;br&gt;
 High PR Profile Submission Sites List&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#high-da-dofollow-backlink-sites-list"&gt;
  &lt;/a&gt;
  High DA DoFollow Backlink Sites List
&lt;/h2&gt;

&lt;p&gt;Serial  Website Domain Authority (DA)&lt;br&gt;
1   &lt;a href="https://wordpress.com"&gt;https://wordpress.com&lt;/a&gt;   93&lt;br&gt;
2   &lt;a href="https://blogspot.com"&gt;https://blogspot.com&lt;/a&gt;    80&lt;br&gt;
3   &lt;a href="https://tumblr.com"&gt;https://tumblr.com&lt;/a&gt;  94&lt;br&gt;
4   &lt;a href="https://storeboard.com"&gt;https://storeboard.com&lt;/a&gt;  75&lt;br&gt;
5   &lt;a href="https://flipboard.com"&gt;https://flipboard.com&lt;/a&gt;   88&lt;br&gt;
6   &lt;a href="https://shutterstock.com"&gt;https://shutterstock.com&lt;/a&gt;    91&lt;br&gt;
7   ecommerce.shopify.com   95&lt;br&gt;
8   &lt;a href="https://steemit.com"&gt;https://steemit.com&lt;/a&gt; 84&lt;br&gt;
9   &lt;a href="http://www.moz.com"&gt;www.moz.com&lt;/a&gt; 91&lt;br&gt;
10  &lt;a href="http://www.evernote.com"&gt;www.evernote.com&lt;/a&gt;    91&lt;br&gt;
 High DA DoFollow Backlink Sites List&lt;/p&gt;

</description>
      <category>backlinks</category>
      <category>socialbookmarking</category>
      <category>profilesubmission</category>
      <category>stackblogger</category>
    </item>
    <item>
      <title>Use Google Optimize in React web for A/B Testing</title>
      <author>Axel Navarro</author>
      <pubDate>Mon, 25 Oct 2021 11:55:57 +0000</pubDate>
      <link>https://dev.to/cloudx/use-google-optimize-in-react-web-for-ab-testing-45ok</link>
      <guid>https://dev.to/cloudx/use-google-optimize-in-react-web-for-ab-testing-45ok</guid>
      <description>&lt;p&gt;I'll explain how to create an experiment in the Google Optimize (GO) panel to get a simple boolean flag in our JavaScript code, specifically using Reactjs, to display the original version of our web, or the experiment.&lt;/p&gt;

&lt;p&gt;I won't focus on the creation of  experiments or specific configurations. This post will be centered on how to connect GO with JavaScript code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I needed to integrate Google Optimize to do an &lt;a href="https://en.wikipedia.org/wiki/A/B_testing"&gt;A/B testing&lt;/a&gt; in a project I'm working on. I've found that GO was made for end users so that they can make little changes (text, CSS styles, etc.) in the website without needing a developer.&lt;/p&gt;

&lt;p&gt;But I couldn't find a good guide about how to receive a &lt;code&gt;bool&lt;/code&gt; flag in the frontend to develop a basic &lt;code&gt;if&lt;/code&gt; in JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-optimize-panel"&gt;
  &lt;/a&gt;
  The Optimize panel
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#creating-an-experiment"&gt;
  &lt;/a&gt;
  Creating an experiment
&lt;/h3&gt;

&lt;p&gt;First, we should create an A/B test experiment using the Google Optimize panel. Make a click to the &lt;code&gt;Create experiment&lt;/code&gt; button. 🧪&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y0w5T9Rx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqz1sgaks59l9tg4g9xl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y0w5T9Rx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqz1sgaks59l9tg4g9xl.png" alt="The create experience button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give a name to the experiment and select the &lt;code&gt;A/B test&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dOr0KIMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrdrk8y301q6yt323fsp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dOr0KIMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrdrk8y301q6yt323fsp.png" alt="Select the experiment type"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you link the experiment to a Google Analytics (GA) account the experiment receives an &lt;code&gt;Experiment ID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c3b1ScOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uy5dttr74o384o7fy2ve.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c3b1ScOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uy5dttr74o384o7fy2ve.png" alt="The experiment ID"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🧠 The developer will use this &lt;code&gt;ID&lt;/code&gt; to read the flag in the JavaScript code. The experiment name is not used in the JavaScript side.&lt;/p&gt;

&lt;p&gt;Make sure you assign an objective to the experiment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UK_I79Mn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2r477svv7i9f24c16yy9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UK_I79Mn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2r477svv7i9f24c16yy9.png" alt="The objectives of the given experiment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you can &lt;code&gt;start&lt;/code&gt; the experiment. 🧫&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#assigning-an-activation-event"&gt;
  &lt;/a&gt;
  Assigning an activation event
&lt;/h3&gt;

&lt;p&gt;Review the &lt;code&gt;Activation event&lt;/code&gt; setting, because you can't use the experiment as a flag in the JavaScript code until that event is fired.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ndVyBFGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrkvk15eo2791g6rmghy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ndVyBFGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrkvk15eo2791g6rmghy.png" alt="Experiment settings section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can leave the activation event as &lt;code&gt;page load&lt;/code&gt; to let the experiment ready when the page loads.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8MsPRjTh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llt5a3jht3nj6956ltp1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8MsPRjTh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llt5a3jht3nj6956ltp1.png" alt="Evaluate experiment on page load event"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or, you can use a custom event that will activate the experiment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NQOA4Qe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qih1xh1pj2mf7a6dwjw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NQOA4Qe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qih1xh1pj2mf7a6dwjw.png" alt="Evaluate experiment on custom event"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-in-javascript"&gt;
  &lt;/a&gt;
  Using in JavaScript
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;Setup the GO SDK via &lt;a href="https://support.google.com/optimize/answer/6314801"&gt;Google Tag Manager (GTM)&lt;/a&gt; or adding &lt;a href="https://support.google.com/optimize/answer/10106536"&gt;the script tag&lt;/a&gt; to download it directly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reading-the-flag-value"&gt;
  &lt;/a&gt;
  Reading the flag value
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;google_optimize&lt;/code&gt; object will be available as a global variable at the &lt;code&gt;window&lt;/code&gt; level:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;variant&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;google_optimize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;experiment_id&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the &lt;code&gt;get&lt;/code&gt; function returns &lt;code&gt;undefined&lt;/code&gt; that means the experiment is not available for this page. Maybe it is misconfigured, or it doesn't apply for this page, or the experiment ID is not correct.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// Code for visitors in the original.&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// Code for visitors in the first variant.&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// Code for visitors in another variant.&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// Code when the experiment has finished or misconfigured.&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#dispatching-the-activation-event"&gt;
  &lt;/a&gt;
  Dispatching the activation event
&lt;/h3&gt;

&lt;p&gt;If the experiment requires a custom event to activate you should dispatch it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;variant&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;optimize.activate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;intervalId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;google_optimize&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;variant&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;google_optimize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;experiment_id&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;intervalId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We don't know when &lt;code&gt;google_optimize&lt;/code&gt; is going to be be available on the &lt;code&gt;window&lt;/code&gt;, we should use &lt;code&gt;setInterval&lt;/code&gt; to read the variant when the experiment it's available.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-integration"&gt;
  &lt;/a&gt;
  React integration
&lt;/h3&gt;

&lt;p&gt;Now we can preset a useful hook for React:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useExperiment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;experimentId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;variant&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setVariant&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;optimize.activate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;intervalId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;google_optimize&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// Set the variant to the state.&lt;/span&gt;
          &lt;span class="nx"&gt;setVariant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;google_optimize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;experimentId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nx"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;intervalId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;})();&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;variant&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;variant&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useExperiment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;YOUR_EXPERIMENT_ID_GOES_HERE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// here you can apply your conditional.&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Now, you know how to build experiments that send the name of the variant to the frontend and how to read that value in JavaScript code using the &lt;code&gt;Experiment ID&lt;/code&gt; to apply the required conditionals to display the correct variant in our web sites.&lt;/p&gt;

&lt;p&gt;Additionally, we have a simple React hook to plug in to the React components and build your own &lt;em&gt;variant-verse&lt;/em&gt;. 🦸&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>ux</category>
      <category>html</category>
    </item>
    <item>
      <title>CSS Flexbox KILLER Responsive Registration Form With Source Code</title>
      <author>Raja Tamil</author>
      <pubDate>Mon, 25 Oct 2021 11:51:54 +0000</pubDate>
      <link>https://dev.to/hirajatamil/css-flexbox-killer-responsive-registration-form-with-source-code-2jpj</link>
      <guid>https://dev.to/hirajatamil/css-flexbox-killer-responsive-registration-form-with-source-code-2jpj</guid>
      <description>&lt;p&gt;By the end of this tutorial, you’re going to design this cool registration form very quickly using CSS Flexbox with step-by-step instructions from scratch. As you can see, it’s also responsive and will look nice on any screen. Finally, I’ll be using a bit of javascript for the slider functionality.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TAHR-K3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/CSS-Flexbox-Responsive-Registration-Form-Final.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TAHR-K3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/CSS-Flexbox-Responsive-Registration-Form-Final.gif" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-background-colour-full-screen"&gt;
  &lt;/a&gt;
  Set Background Colour Full Screen
&lt;/h3&gt;

&lt;p&gt;As you can see from the final output, the registration form is nicely centered horizontally and vertically on the viewport of the browser.&lt;/p&gt;

&lt;p&gt;To do that, create a &lt;strong&gt;section&lt;/strong&gt; element with an id called &lt;strong&gt;registration-page&lt;/strong&gt; inside the &lt;strong&gt;body&lt;/strong&gt; tag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"registration-page"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, make the section HTML element to fit the viewport of the browser. There are a few CSS techniques to achieve this. I’m going to use &lt;strong&gt;height:100%&lt;/strong&gt; property in this tutorial. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Recommended&lt;/em&gt;&lt;br&gt;
&lt;a href="https://softauthor.com/css-make-a-div-height-full-screen/"&gt;&lt;em&gt;CSS Make A Div Full Screen&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you know, the &lt;strong&gt;section&lt;/strong&gt; is a block-level element that will stretch the width to match its parent width, which is the &lt;strong&gt;body&lt;/strong&gt; element in this case, and its width is 100% by default, so I do not have to be explicit about it inside the &lt;strong&gt;#registration-page&lt;/strong&gt; CSS rule.&lt;/p&gt;

&lt;p&gt;To stretch the height of the section HTML element to fit the screen, add &lt;strong&gt;height:100%&lt;/strong&gt; to it as well as inside the &lt;strong&gt;html&lt;/strong&gt; and &lt;strong&gt;body&lt;/strong&gt; CSS rules.&lt;/p&gt;

&lt;p&gt;Finally, add the background colour to match the final output.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#registration-page&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#78a7ba&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uwuM87-s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/1-CSS-flexbox-responsive-registration-form-background-full-screen-2-2048x1280.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uwuM87-s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/1-CSS-flexbox-responsive-registration-form-background-full-screen-2-2048x1280.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see from the above screenshot, the background color of the &lt;strong&gt;#registration-page&lt;/strong&gt; did not fill the whole screen, because the &lt;strong&gt;body&lt;/strong&gt; tag has some default margin which also triggers the scroll bar to appear.&lt;/p&gt;

&lt;p&gt;Instead of getting rid of the default margin of the body tag, get rid of all default margins of the HTML elements.&lt;/p&gt;

&lt;p&gt;To do this, create a wildcard CSS rule using asterisks (*) and set the margin to 0 like below. This doesn’t only get rid of the default margin of the body tag, but also the scroll bar.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rRFGPOMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/2-CSS-flexbox-responsive-registration-form-background-colour-without-margin-2048x1280.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rRFGPOMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/2-CSS-flexbox-responsive-registration-form-background-colour-without-margin-2048x1280.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-the-registration-form-center-to-the-screen"&gt;
  &lt;/a&gt;
  Make The Registration Form Center To The Screen
&lt;/h3&gt;

&lt;p&gt;Now, let’s create a &lt;strong&gt;form&lt;/strong&gt; HTML element with a class name &lt;strong&gt;.signup-form&lt;/strong&gt; inside the &lt;strong&gt;#registration-page&lt;/strong&gt; and add the text “Registration Form” inside so that I know where exactly the position of the &lt;strong&gt;form&lt;/strong&gt; element is in the viewport of the browser.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"registration-page"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"signup-form"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            Registration Form
        &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: As you can see, I haven’t added any of the form attributes in the starting form tag because this tutorial is purely for the design of the registration form.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PgVPQ21A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/3-CSS-flexbox-responsive-registration-form-registration-form-tag-2048x1280.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PgVPQ21A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/3-CSS-flexbox-responsive-registration-form-registration-form-tag-2048x1280.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding just 3 properties of CSS Flexbox to a &lt;strong&gt;#registration-page&lt;/strong&gt; will make its child &lt;a href="https://softauthor.com/css-how-to-center-a-div-horizontally-vertically/"&gt;center horizontally and vertically&lt;/a&gt; on the viewport, in this case, the child is the &lt;strong&gt;form&lt;/strong&gt; element.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;display:flex&lt;/strong&gt; will covert an HTML element to a flexbox.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;justify-content: center&lt;/strong&gt; will make the child element center horizontally on the screen.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;align-items:center&lt;/strong&gt; will make the child element center vertically on the screen.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#registration-page&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#78a7ba&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;scroll&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KwbifvrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/4-CSS-flexbox-responsive-registration-form-registration-form-tag-2048x1280.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KwbifvrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/4-CSS-flexbox-responsive-registration-form-registration-form-tag-2048x1280.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#registration-form-responsive-width"&gt;
  &lt;/a&gt;
  Registration Form Responsive Width
&lt;/h3&gt;

&lt;p&gt;Now, I want the form to take the full width of the screen in the small screen as well as give the maximum width so that it will not exceed when the screen is bigger.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.signup-form&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#EFF0F1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setting flex:1 to the .signup-form will stretch the width of the signup-form to fit the screen and that’s what I want for the small screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6SYcdMbp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/5-CSS-flexbox-responsive-registration-form-signup-form-width-2048x1280.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6SYcdMbp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/5-CSS-flexbox-responsive-registration-form-signup-form-width-2048x1280.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But not for the bigger screen.&lt;/p&gt;

&lt;p&gt;For that, set the max-width to 600px.&lt;/p&gt;

&lt;p&gt;Also, add the border radius and border to match the final design.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.signup-form&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#EFF0F1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SgKmAQRq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/6-CSS-flexbox-responsive-registration-form-signup-form-max-width-2048x1280.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SgKmAQRq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/6-CSS-flexbox-responsive-registration-form-signup-form-max-width-2048x1280.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Recommended&lt;/em&gt;&lt;br&gt;
&lt;a href="https://softauthor.com/css-flexbox-responsive-multi-column-layout/"&gt;&lt;em&gt;Must-Know CSS Flexbox Responsive Multi-Column Layout Explained&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#registration-form-header"&gt;
  &lt;/a&gt;
  Registration Form Header
&lt;/h3&gt;

&lt;p&gt;First, replace the text “Registration Form” with a div with the class name .form-header inside the .signup-form and add an h1 tag with the text “Create Account” inside.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"signup-form"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"form-header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Create Account&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, add padding to the top and bottom of the form-header as well as to the border at the bottom.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.form-header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#cccccc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, change the font size, text align and color of the h1 element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.form-header&lt;/span&gt; &lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;28px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#666&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XfImTf-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/7-CSS-flexbox-responsive-registration-form-header-2048x1280.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XfImTf-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/7-CSS-flexbox-responsive-registration-form-header-2048x1280.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-custom-font-to-the-form"&gt;
  &lt;/a&gt;
  Add Custom Font To The Form
&lt;/h3&gt;

&lt;p&gt;The first step is to import the desired font at the top of the style.css file, in this case, Roboto.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css?family=Roboto')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: Feel free to choose your favourite font from the &lt;a href="https://fonts.google.com"&gt;Google Font Collection&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The second step is to set the font-family property inside the wildcard CSS rule (*) so that the font will be applied to all the text in the registration form.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Roboto"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HsFRl46Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/8-CSS-flexbox-responsive-registration-form-header-custom-font-2048x1280.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HsFRl46Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softauthor.com/wp-content/uploads/2021/10/8-CSS-flexbox-responsive-registration-form-header-custom-font-2048x1280.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Recommended&lt;/em&gt;&lt;br&gt;
&lt;a href="https://softauthor.com/css-make-background-image-full-screen/"&gt;&lt;em&gt;CSS Make Background Image Full Screen&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#registration-form-body-name"&gt;
  &lt;/a&gt;
  Registration Form Body (Name)
&lt;/h3&gt;

&lt;p&gt;As you can see from the final output, the form body has a two-column layout and is responsive as it becomes a one-column layout when on the small screen.&lt;/p&gt;

&lt;p&gt;The good news is making a two-column layout is so easy with CSS flexbox.&lt;/p&gt;

&lt;p&gt;After the form-header end tag, define div with a class name form-body which is where all of the input elements would go in.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://softauthor.com/css-flexbox-responsive-registration-form-with-source-code/"&gt;Continue Reading...&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
