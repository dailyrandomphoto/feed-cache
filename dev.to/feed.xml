<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Open Source Backend Server - AppWrite 🔥</title>
      <author>Hardik Chopra</author>
      <pubDate>Sun, 24 Oct 2021 06:03:39 +0000</pubDate>
      <link>https://dev.to/hardikchopra242/open-source-backend-server-appwrite-48b9</link>
      <guid>https://dev.to/hardikchopra242/open-source-backend-server-appwrite-48b9</guid>
      <description>&lt;h3&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#what-is-appwrite"&gt;What is Appwrite?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#amazing-features"&gt;Amazing Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-appwrite-is-better"&gt;Why Appwrite is better?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lets-try-it-out"&gt;Hands On&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#bonus"&gt;Bonus&lt;/a&gt;🔥&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#what-is-appwrite"&gt;
  &lt;/a&gt;
  &lt;strong&gt;💡 What is Appwrite?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://appwrite.io/"&gt;Appwrite&lt;/a&gt; is an open-source backend server for web and mobile applications. It is similar to Firebase, AWS Amplify, and Supabase in terms of features and APIs, including Authentication (User management), Database Management, Storage, and Cloud Functions.&lt;br&gt;
It is a self-hosted solution that provides developers with a set of easy-to-use and integrate REST APIs to manage their core backend needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N7-UFhMG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2o26mk4wwj2nv6otu4f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N7-UFhMG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2o26mk4wwj2nv6otu4f.png" alt="Home Page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="#contents"&gt;Back to Contents&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#amazing-features"&gt;
  &lt;/a&gt;
  &lt;strong&gt;✨ Amazing Features!&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;It can run on any operating system and the Console User Interface provides you with a great variety of services you can use with your project!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Database&lt;/strong&gt; -Store, query and manage access control to your app documents&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Storage&lt;/strong&gt; - Upload, download and preview your app and users files and media&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Users&lt;/strong&gt; - Authenticate, confirm and manage your users using multiple signin methods&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GEO &amp;amp; Localization&lt;/strong&gt; - Detect your users location, locale and fetch GEO related data&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Functions&lt;/strong&gt; - Run your backend code in a secure and isolated environment to customize your app&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Console&lt;/strong&gt; - Track your backend API usage and manage your project resources from a modern UI&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;..... and others including &lt;strong&gt;privacy&lt;/strong&gt;, &lt;strong&gt;security&lt;/strong&gt; and many more.&lt;/p&gt;

&lt;p&gt;&lt;a href="#contents"&gt;Back to Contents&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#why-appwrite-is-better"&gt;
  &lt;/a&gt;
  &lt;strong&gt;🤔 Why Appwrite is better?&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;No Cost&lt;/strong&gt;&lt;br&gt;
Appwrite is open-source, so we can expect everything for free here. Others options by companies like Microsoft, Amazon etc. can get expensive as you scale your product up. Appwrite has an upper edge here.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Usage Statistics&lt;/strong&gt;&lt;br&gt;
Using the usage statistics provided by AppWrite, you can easily get to know which projects -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;take up the most space&lt;/li&gt;
&lt;li&gt;use more CPU time,  You can even see &lt;/li&gt;
&lt;li&gt;the bandwidth usage on each project separately
..... and many more stats.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;API support&lt;/strong&gt;&lt;br&gt;
Due to the amount of APIs that Appwrite provides to a user, building projects is much easier with having to do difficult task of bundling API servers together.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Task Manager&lt;/strong&gt;&lt;br&gt;
Using Appwrite, you can schedule an automatic function execution using cron syntax. This function can do anything from sending newsletter emails to buying you a pizza. No limitations at all.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Community Support&lt;/strong&gt;&lt;br&gt;
AppWrite has a great community support that is ready to help you all the time. If you have any doubt or query, you can have a chat in their &lt;a href="https://appwrite.io/discord"&gt;discord server&lt;/a&gt;, and you will get your query resolved faster than any other forums.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#contents"&gt;Back to Contents&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  📩 Installation
&lt;/h3&gt;

&lt;p&gt;The easiest way to start running your Appwrite server is by running our &lt;strong&gt;Docker&lt;/strong&gt; installer tool from your terminal. &lt;br&gt;
Before running the installation command, make sure you have &lt;a href="https://www.docker.com/products/docker-desktop"&gt;Docker CLI&lt;/a&gt; installed on your host machine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For Unix&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--volume&lt;/span&gt; /var/run/docker.sock:/var/run/docker.sock &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--volume&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;/appwrite:/usr/src/code/appwrite:rw &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--entrypoint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"install"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    appwrite/appwrite:0.11.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;For Windows&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;--rm&lt;/span&gt; ^
    &lt;span class="nt"&gt;--volume&lt;/span&gt; //var/run/docker.sock:/var/run/docker.sock ^
    &lt;span class="nt"&gt;--volume&lt;/span&gt; &lt;span class="s2"&gt;"%cd%"&lt;/span&gt;/appwrite:/usr/src/code/appwrite:rw ^
    &lt;span class="nt"&gt;--entrypoint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"install"&lt;/span&gt; ^
    appwrite/appwrite:0.11.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hyper-V and Containers Windows features must be enabled to run Appwrite on Windows with Docker. &lt;/li&gt;
&lt;li&gt;If you don't have these features available, you can install &lt;a href="https://docs.docker.com/toolbox/toolbox_install_windows/"&gt;Docker Toolbox&lt;/a&gt; that uses Virtualbox to run Appwrite on a Virtual Machine.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#contents"&gt;Back to Contents&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#lets-try-it-out"&gt;
  &lt;/a&gt;
  💥 Lets Try it Out
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Appwrite&lt;/strong&gt; can be used for Web, Apple, Flutter, Android etc. Here we will try to understand how to use it for Web.&lt;/p&gt;

&lt;p&gt;Appwrite is a development platform providing you easy yet powerful API and management console to get your next project up and running quickly.&lt;/p&gt;

&lt;p&gt;We will learn how ca you start using Appwrite products and build your next project. Before starting, make sure you have followed the Appwrite &lt;a href="#installation"&gt;installation&lt;/a&gt;, and you have an Appwrite server instance up and running on your host machine or server.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#step-1-create-your-first-appwrite-project"&gt;
  &lt;/a&gt;
  Step 1 : Create Your First Appwrite Project
&lt;/h4&gt;

&lt;p&gt;Go to your new Appwrite console and once inside click the&lt;br&gt;
'Create Project' button on your console homepage. Choose a name for your project and click create to get started.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yWIH-_85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/plzm143vz4nib23lmb2h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yWIH-_85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/plzm143vz4nib23lmb2h.png" alt="Home Page"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#step-2-add-your-web-platform"&gt;
  &lt;/a&gt;
  Step 2 : Add Your Web Platform
&lt;/h4&gt;

&lt;p&gt;For you to init your SDK and interact with Appwrite services you need to add a web platform to your project. To add a new platform, go to your Appwrite console, choose the project you created in the step before and click the 'Add Platform' button.&lt;/p&gt;

&lt;p&gt;From the options, choose to add a web platform and add your client app hostname. By adding your hostname to your project platform you are allowing cross-domain communication between your project and the Appwrite API.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#step-3-get-appwrite-web-sdk"&gt;
  &lt;/a&gt;
  Step 3 : Get Appwrite Web SDK
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;NPM&lt;/strong&gt;&lt;br&gt;
Use NPM (node package manager) from your command line to add Appwrite SDK to your project.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;appwrite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If you're using a bundler (like Browserify or webpack), you can import the Appwrite module when you need it:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;CDN&lt;/strong&gt;&lt;br&gt;
To install with a CDN (content delivery network) add the following scripts to the bottom of your tag, but before you use any Appwrite services:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/appwrite@4.0.4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Init your SDK&lt;/strong&gt;&lt;br&gt;
Initialize your SDK code with your project ID which can be found in your project settings page.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Init your Web SDK&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;appwrite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;appwrite&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost/v1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your Appwrite Endpoint&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;455x34dfkj&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your project ID&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#step-4-make-your-first-request"&gt;
  &lt;/a&gt;
  Step 4 : Make Your First Request
&lt;/h4&gt;

&lt;p&gt;Once your SDK object is set, access any of the Appwrite services and choose any request to send. Full documentation for any service method you would like to use can be found in your SDK documentation or in the API References section.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Register User&lt;/span&gt;
&lt;span class="nx"&gt;appwrite&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;me@example.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jane Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#step-5-listen-to-changes"&gt;
  &lt;/a&gt;
  Step 5 : Listen to Changes
&lt;/h4&gt;

&lt;p&gt;If you want to listen to changes in realtime from Appwrite, you can subscribe to a variety of channels and receive updates within milliseconds. Full documentation for Realtime can be found here.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Subscribe to files channel&lt;/span&gt;
&lt;span class="nx"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;files&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;storage.files.create&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Log when a new file is uploaded&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#lets-put-everything-together"&gt;
  &lt;/a&gt;
  Lets put everything together
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Init your Web SDK&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;appwrite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;appwrite&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost/v1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your Appwrite Endpoint&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;455x34dfkj&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your project ID&lt;/span&gt;

&lt;span class="c1"&gt;// Register User&lt;/span&gt;
&lt;span class="nx"&gt;appwrite&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;me@example.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jane Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Subscribe to files channel&lt;/span&gt;
&lt;span class="nx"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;files&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;storage.files.create&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Log when a new file is uploaded&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Back to Contents&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus 🔥
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Appwrite&lt;/th&gt;
&lt;th&gt;🔗&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Github Repo&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/appwrite/appwrite"&gt;Visit Repo&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Documentation&lt;/td&gt;
&lt;td&gt;&lt;a href="https://appwrite.io/docs"&gt;Visit Docs&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Discord&lt;/td&gt;
&lt;td&gt;&lt;a href="https://appwrite.io/discord"&gt;Join Sever&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30 Days of Appwrite&lt;/td&gt;
&lt;td&gt;&lt;a href="https://30days.appwrite.io/"&gt;Lets Start&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Demos&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Demo&lt;/th&gt;
&lt;th&gt;🔗&lt;/th&gt;
&lt;th&gt;🔗&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Todo App with React JS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/appwrite/todo-with-react"&gt;Visit Repo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://appwrite-todo-with-react.vercel.app/"&gt;See Live&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Todo App with Vue JS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/appwrite/todo-with-vue"&gt;Visit Repo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://appwrite-todo-with-vue.vercel.app/"&gt;See Live&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Todo App with Angular&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/appwrite/todo-with-angular"&gt;Visit Repo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://appwrite-todo-with-angular.vercel.app/"&gt;See Live&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Todo App with Svelte&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/appwrite/todo-with-svelte"&gt;Visit Repo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://appwrite-todo-with-svelte.vercel.app/"&gt;See Live&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/appwrite" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4bSIRV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7eMrR0VE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2225/eb541cf9-84f4-4101-987c-c219cd4b34fc.png" alt="Appwrite"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TRLcIz2t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XAe6V72F--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/119691/5be2bcad-e1ee-4ef8-928b-d71f4e355af6.png" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/appwrite/announcing-appwrite-0-9-the-open-source-firebase-alternative-53ho" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Announcing Appwrite 0.9: The open source Firebase alternative &lt;/h2&gt;
      &lt;h3&gt;Christy Jacob for Appwrite ・ Jul 7 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#flutter&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#android&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#kotlin&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;




&lt;div class="ltag__link"&gt;
  &lt;a href="/daryllukas" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bpJlg0Z9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--jMwn6g8_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/228745/62b70520-19aa-48f0-a6bb-2bc1a981bafc.jpg" alt="daryllukas"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/daryllukas/authentication-exploring-appwrite-io-with-react-series-1iec" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Authentication - Exploring Appwrite.io with React Series&lt;/h2&gt;
      &lt;h3&gt;Daryl Lukas ・ Jun 26 ・ 17 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#100daysofcode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#appwrite&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/appwrite" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4bSIRV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7eMrR0VE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2225/eb541cf9-84f4-4101-987c-c219cd4b34fc.png" alt="Appwrite"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XPgTEsEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ZtHtZf1V--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551623/d6834701-4563-4984-8f1d-7c6735acd3b6.jpg" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/appwrite/magic-url-authentication-with-flutter-appwrite-349g" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Magic URL authentication with Flutter + Appwrite &lt;/h2&gt;
      &lt;h3&gt;Damodar Lohani for Appwrite ・ Sep 8 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#flutter&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#news&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#serverless&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;&lt;em&gt;If you got to learn something new and useful show some love by giving this post a ❤️&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you find it useful for you, &lt;strong&gt;save this post&lt;/strong&gt; and share it with your programming buddies 😃&lt;/p&gt;

&lt;p&gt;Have you tried Appwrite? Share your experience in the comment section! 💬&lt;/p&gt;

</description>
      <category>appwrite</category>
      <category>webdev</category>
      <category>backend</category>
      <category>server</category>
    </item>
    <item>
      <title>3 ways to import node modules in deno</title>
      <author>Siddharth</author>
      <pubDate>Sun, 24 Oct 2021 05:54:33 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/3-ways-to-import-node-modules-in-deno-3fo4</link>
      <guid>https://dev.to/siddharthshyniben/3-ways-to-import-node-modules-in-deno-3fo4</guid>
      <description>&lt;p&gt;Migrating to Deno can be hard when you depend on Node modules. Until those Node modules get ported to Deno, you can use these three methods to import Node modules in Deno.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#method-1-using-the-compatibility-layer"&gt;
  &lt;/a&gt;
  Method 1: Using the &lt;a href="https://deno.land/std/node"&gt;compatibility layer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;There is a Node compatibility layer in Deno standard library, which allows you to &lt;code&gt;require()&lt;/code&gt; anything which is in &lt;code&gt;node_modules&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createRequire&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://deno.land/std/node/module.ts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createRequire&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cjsModule&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./my_mod&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;leftPad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;left-pad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It was buggy for me as I wasn't able to import every module, and the need to have &lt;code&gt;node_modules&lt;/code&gt; is also a downside, which brings me to...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#method-2-import-the-source-code"&gt;
  &lt;/a&gt;
  Method 2: Import the source code
&lt;/h2&gt;

&lt;p&gt;If you are lucky, the authors of the library may have the source code using ES6 imports (and doesn't import any node builtins) and you can import the source code directly from the URL (remember, you can import any URLs!)&lt;/p&gt;

&lt;p&gt;For example, you could import lodash like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;cloneDeep&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://raw.githubusercontent.com/lodash/lodash/master/cloneDeep.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I got that URL by going to the &lt;a href="https://github.com/lodash/lodash/blob/master/cloneDeep.js"&gt;file on GitHub&lt;/a&gt; and then clicking the raw button.&lt;/p&gt;

&lt;p&gt;But sometimes, you also need to support all those node builtins. That brings me to...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#method-3-jspmio"&gt;
  &lt;/a&gt;
  Method 3: jspm.io
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//jspm.io"&gt;JSPM&lt;/a&gt; is a module CDN which allows you to &lt;code&gt;import&lt;/code&gt; any node module in the browser, and by extension that means that you can use it to import to deno too! &lt;/p&gt;

&lt;p&gt;JSPM is the most reliable method so far, it is used in my Web Framework &lt;a href="https://github.com/sleekjs/sleek"&gt;Sleek&lt;/a&gt; too!&lt;/p&gt;

&lt;p&gt;So if you want to import the wonderful &lt;a href="https://npmjs.com/package/recast"&gt;recast&lt;/a&gt; library, you can do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;recast&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jspm.dev/recast&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it, you can now use recast!&lt;/p&gt;




&lt;p&gt;If you found this post helpful, &lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fdev.to%2Fsiddharthshyniben%2F3-ways-to-import-node-modules-in-deno-3fo4&amp;amp;text=One%20of%20the%20reasons%20many%20people%20don%27t%20use%20Deno%20is%20because%20they%20depend%20on%20node%20packages.%20Here%20are%203%20ways%20to%20bypass%20that%20and%20import%20Node%20modules%20in%20Deno%20by%20@SiddharthShyn%20%21&amp;amp;hashtags=javascript%2Cnode%2Cdeno"&gt;spread the word!&lt;/a&gt; or &lt;a href="//twitter.com/intent/follow?screen_name=SiddharthShyn"&gt;follow me on twitter&lt;/a&gt; or over here to stay updated on my blog posts!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>deno</category>
      <category>node</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Decode Factory Pattern</title>
      <author>Terminator</author>
      <pubDate>Sun, 24 Oct 2021 05:40:41 +0000</pubDate>
      <link>https://dev.to/gauravratnawat/decode-factory-pattern-245m</link>
      <guid>https://dev.to/gauravratnawat/decode-factory-pattern-245m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#creational-design-pattern"&gt;
  &lt;/a&gt;
  Creational Design Pattern
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/gauravratnawat/abstract-factory-haf"&gt;Abstract Factory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/gauravratnawat/builder-pattern-2pk2"&gt;Builder Pattern&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use"&gt;
  &lt;/a&gt;
  When to use
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;To avoid dealing with inconsistent object when the object needs to be created over several steps.&lt;/li&gt;
&lt;li&gt;To avoid too many constructor arguments.&lt;/li&gt;
&lt;li&gt;To construct an object that should be immutable.&lt;/li&gt;
&lt;li&gt;To encapsulate the complete creation logic.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#intent"&gt;
  &lt;/a&gt;
  Intent
&lt;/h3&gt;

&lt;p&gt;Define an interface for creating an object, but let subclasses decide which class to instantiate. Factory Method lets a class defer instantiation to subclasses.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#components"&gt;
  &lt;/a&gt;
  Components
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;An Interface (or) Abstract class (public)&lt;/li&gt;
&lt;li&gt;Set of implementation subclasses (private)&lt;/li&gt;
&lt;li&gt;A Factory Method (public)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#structure"&gt;
  &lt;/a&gt;
  Structure
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0D6hjaRQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ukqhsifi4sxhobbiouq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0D6hjaRQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ukqhsifi4sxhobbiouq.png" alt="Factory Method Pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h3&gt;

&lt;p&gt;1 Create an interface. Clients can code for this interface without worrying about the internal implementation..&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.gaurav.factorymethod;

public interface Vehicle {
  void design();
  void manufacture();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2 Create a set of implementation subclasses. Constructors are protected to prohibit instantiations in clients modules using the 'new' operator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.gaurav.factorymethod;

public class Car implements Vehicle {

  Car() {
    /* constructor is protected.
       clients need to use the factory method */
  }

  @Override
  public void design() {
    System.out.println("Designing Car");
  }

  @Override
  public void manufacture() {
    System.out.println("Manufacturing Car");
  }

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.gaurav.factorymethod;

public class Truck implements Vehicle {

  Truck() {
    /* constructor is protected.
       clients need to use the factory method */
  }

  @Override
  public void design() {
    System.out.println("Designing Truck");
  }

  @Override
  public void manufacture() {
    System.out.println("Manufacturing Truck");
  }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.gaurav.factorymethod;

public class Motorcycle implements Vehicle {

  Motorcycle() {
    /* constructor is protected.
       clients need to use the factory method */
  }

  @Override
  public void design() {
    System.out.println("Designing Motorcycle");
  }

  @Override
  public void manufacture() {
    System.out.println("Manufacturing Motorcycle");
  }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3 Create a class with method 'getVehicle()'. Clients can use this method to create an object instead of using 'new' operator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.gaurav.factorymethod;

public class VehicleFactory {

  /* This is the factory method exposed to the client.
     Client requests for an object by passing the type.
     Client does not need to know about which &amp;amp; how object
     is created internally.
     */
  public Vehicle getVehicle(String vehicleType)
      throws VehicleTypeNotFoundException {

    if (vehicleType == null) {
      return null;
    }

    Vehicle vehicle = null;

    switch (vehicleType) {
      case "car":
        vehicle = new Car();
        break;
      case "truck":
        vehicle = new Truck();
        break;
      case "motorcycle":
        vehicle = new Motorcycle();
        break;
      default:
        throw new VehicleTypeNotFoundException();
    }

    return vehicle;
  }

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4 The client code. Client knows only the factory method and the interface. Client code does not use 'new' hence decoupled from implementation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.gaurav.client;

import java.util.Scanner;

import com.gaurav.factorymethod.Vehicle;
import com.gaurav.factorymethod.VehicleFactory;
import com.gaurav.factorymethod.VehicleTypeNotFoundException;

public class FactoryMethodClient {

  public static void main(String[] args) {

    Scanner in = new Scanner(System.in);
    String vehicleType = in.nextLine().toLowerCase();

    /* Create a factory instance */
    VehicleFactory factory = new VehicleFactory();

    try {

      /* Create an appropriate vehicle based on the input */
      Vehicle vehicle = factory.getVehicle(vehicleType);

      /* Design and manufacture the vehicle */
      vehicle.design();
      vehicle.manufacture();

    } catch (VehicleTypeNotFoundException e) {
      System.out.println("Invalid vehicle type entered!");
    }

    in.close();
  }

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[input1]
    MotorCycle
[output1]
    Designing Motorcycle
    Manufacturing Motorcycle

[input2]
    Car
[output2]
    Designing Car
    Manufacturing Car

[input3]
    Bus
[output3]
    Invalid vehicle type entered!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Loose coupling allows changing the internals without impacting the customer code&lt;/li&gt;
&lt;li&gt;Factory method provides a single point of control for multiple products&lt;/li&gt;
&lt;li&gt;Number of instances and their reusability can be controlled with Singleton or Multiton&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#drawbacks"&gt;
  &lt;/a&gt;
  Drawbacks
&lt;/h3&gt;

&lt;p&gt;An extra level of abstraction makes the code more difficult to read.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#real-world-examples"&gt;
  &lt;/a&gt;
  Real World Examples
&lt;/h3&gt;

&lt;p&gt;Renting Vehicles. Customer needs to specify only the type of vehicle (car, truck, etc.) that is needed. Customer need not know about the internal details of the vehicle.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#software-example"&gt;
  &lt;/a&gt;
  Software Example
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Memcache&lt;/li&gt;
&lt;li&gt;Filecache&lt;/li&gt;
&lt;li&gt;Code for SQL standard without worrying about the underlying DB&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#java-sdk-examples"&gt;
  &lt;/a&gt;
  Java SDK Examples
&lt;/h4&gt;

&lt;p&gt;java.util.Calendar.getInstance()&lt;br&gt;
java.util.ResourceBundle.getBundle()&lt;br&gt;
java.text.NumberFormat.getInstance()&lt;br&gt;
java.nio.charset.Charset.forName()&lt;br&gt;
java.util.EnumSet.of()&lt;br&gt;
javax.xml.bind.JAXBContext.createMarshaller()&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#difference-between-abstract-factory-and-factory-pattern"&gt;
  &lt;/a&gt;
  &lt;a href="https://stackoverflow.com/questions/1001767/what-is-the-basic-difference-between-the-factory-and-abstract-factory-design-pat"&gt;Difference between Abstract factory and Factory pattern?&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;TS;MR:&lt;br&gt;
The Abstract Factory is a set of Factory Methods.&lt;/p&gt;

&lt;p&gt;TL;DR:&lt;br&gt;
With the Factory pattern, you produce instances of implementations (Apple, Banana, Cherry, etc.) of a particular interface -- say, IFruit.&lt;/p&gt;

&lt;p&gt;With the Abstract Factory pattern, you provide a way for anyone to provide their own factory. This allows your warehouse to be either an IFruitFactory or an IJuiceFactory, without requiring your warehouse to know anything about fruits or juices. &lt;/p&gt;

&lt;p&gt;Want to discuss more &lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/gauravratnawat"&gt;Lets have a Coffee&lt;/a&gt;&lt;/p&gt;

</description>
      <category>design</category>
      <category>architecture</category>
      <category>java</category>
      <category>designpattern</category>
    </item>
    <item>
      <title>Recovering a Broken Linux Installation With Chroot</title>
      <author>Dhananjay Tanpure</author>
      <pubDate>Sun, 24 Oct 2021 04:15:52 +0000</pubDate>
      <link>https://dev.to/dtan13/recovering-a-broken-linux-installation-with-chroot-4lb3</link>
      <guid>https://dev.to/dtan13/recovering-a-broken-linux-installation-with-chroot-4lb3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Chroot&lt;/strong&gt; is a method of focusing on a part of your filesystem. This changes apparent root directory. Which gives asscess to root filesystem and root access in order to perform various operations on the system.&lt;br&gt;
Some of which include&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Recovering a broken install (Reinstalling the bootloader)&lt;/li&gt;
&lt;li&gt;Upgrading and Downgrading packages&lt;/li&gt;
&lt;li&gt;Resetting a forgotten passsword&lt;/li&gt;
&lt;li&gt;Fix your /etc/fstab&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#problem"&gt;
  &lt;/a&gt;
  Problem
&lt;/h3&gt;

&lt;p&gt;Sometimes in case dual boot, due to a &lt;strong&gt;Windows Update&lt;/strong&gt; or a &lt;strong&gt;BIOS Update&lt;/strong&gt;, It may happen that you are left with the default bios options which has &lt;strong&gt;Legacy Boot&lt;/strong&gt; mode and you only have windows as a option to boot. Or maybe you just deleted your EFI partition somehow!&lt;/p&gt;

&lt;p&gt;In this case the data in our linux partitions is safe but you cant access it directly. In order to gain access to the system you need to resintall GRUB (or more specifically MBR).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#procedure"&gt;
  &lt;/a&gt;
  Procedure
&lt;/h2&gt;

&lt;p&gt;You need to access your broken installation in order to fix it.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#boot"&gt;
  &lt;/a&gt;
  Boot
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;You need to grab the &lt;strong&gt;Arch Linux ISO&lt;/strong&gt; from &lt;a href="https://archlinux.org/download/"&gt;Website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Make a bootable USB Drive.&lt;/li&gt;
&lt;li&gt;Make sure to boot into UEFI mode.&lt;/li&gt;
&lt;li&gt;Boot into archlinux.&lt;/li&gt;
&lt;li&gt;Match the architecture of the system you are booted in with the system you wish to enter.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;uname -r&lt;/code&gt; Most probably this will be&lt;code&gt;x86_64&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;Enable Swap if needed.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;swapon /path/to/swapfile&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#mount"&gt;
  &lt;/a&gt;
  Mount
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;chroot&lt;/strong&gt; is all about the root file filesystem &lt;code&gt;/&lt;/code&gt;. You need to mount the partition before performing &lt;code&gt;chroot&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check the location and filetype of the your disk.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fdisk &lt;span class="nt"&gt;-l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output in my case is :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Disk /dev/sda: 1.82 TiB, 2000398934016 bytes, 3907029168 sectors
Disk model: ST2000LM007-1R81
Units: sectors of 1 &lt;span class="k"&gt;*&lt;/span&gt; 512 &lt;span class="o"&gt;=&lt;/span&gt; 512 bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: 512 bytes / 4096 bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: 4096 bytes / 4096 bytes
Disklabel &lt;span class="nb"&gt;type&lt;/span&gt;: gpt

Device          Start        End    Sectors   Size Type
/dev/sda1        2048     526335     524288   256M Linux filesystem
/dev/sda2      526336  419956735  419430400   200G Linux filesystem
/dev/sda3   419956736 3277883391 2857926656   1.3T Linux filesystem
/dev/sda4  3277883392 3278088191     204800   100M EFI System
/dev/sda5  3278088192 3278120959      32768    16M Microsoft reserved
/dev/sda6  3278120960 3905969269  627848310 299.4G Microsoft basic data
/dev/sda7  3905970176 3907026943    1056768   516M Windows recovery environment
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In above output :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/dev/sda2 &lt;span class="c"&gt;#root filesystem(/)&lt;/span&gt;
/dev/sda3 &lt;span class="c"&gt;#home (/home)&lt;/span&gt;
/dev/sda1 &lt;span class="c"&gt;#EFI partition&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To properly mounting these partitions you need to know the type of partition, You can get this using &lt;code&gt;blkid&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;blkid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/dev/sda4: &lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"BEBE-377F"&lt;/span&gt; &lt;span class="nv"&gt;BLOCK_SIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"512"&lt;/span&gt; &lt;span class="nv"&gt;TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"vfat"&lt;/span&gt; &lt;span class="nv"&gt;PARTLABEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"EFI system partition"&lt;/span&gt; &lt;span class="nv"&gt;PARTUUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"b0ce5bc5-5767-4138-ba63-209fd95abbc7"&lt;/span&gt;
/dev/sda2: &lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"cb2baa0a-3a81-42a1-9670-6060fabaa27f"&lt;/span&gt; &lt;span class="nv"&gt;BLOCK_SIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"4096"&lt;/span&gt; &lt;span class="nv"&gt;TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ext4"&lt;/span&gt; &lt;span class="nv"&gt;PARTUUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"8b7aaeab-1bcb-cf43-8b5d-785fbc5c63a1"&lt;/span&gt;
/dev/sda7: &lt;span class="nv"&gt;BLOCK_SIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"512"&lt;/span&gt; &lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"CAAEBF45AEBF2939"&lt;/span&gt; &lt;span class="nv"&gt;TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ntfs"&lt;/span&gt; &lt;span class="nv"&gt;PARTUUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ecd471f6-cbd4-4a8a-b70c-54070669939c"&lt;/span&gt;
/dev/sda5: &lt;span class="nv"&gt;PARTLABEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Microsoft reserved partition"&lt;/span&gt; &lt;span class="nv"&gt;PARTUUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"75d5ffda-1051-47cc-8cba-ae187d2d35d7"&lt;/span&gt;
/dev/sda3: &lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"1fe29b19-feb2-4924-b8ac-91a7e4785e98"&lt;/span&gt; &lt;span class="nv"&gt;BLOCK_SIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"4096"&lt;/span&gt; &lt;span class="nv"&gt;TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ext4"&lt;/span&gt; &lt;span class="nv"&gt;PARTUUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"f15d44bb-96f9-0d42-a0f8-4109dd5959b0"&lt;/span&gt;
/dev/sda1: &lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"D939-5AD9"&lt;/span&gt; &lt;span class="nv"&gt;BLOCK_SIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"512"&lt;/span&gt; &lt;span class="nv"&gt;TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"vfat"&lt;/span&gt; &lt;span class="nv"&gt;PARTUUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"242f0c5c-5a6c-554c-a2c3-70d6268b835a"&lt;/span&gt;
/dev/sda6: &lt;span class="nv"&gt;BLOCK_SIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"512"&lt;/span&gt; &lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"3AAAC0ADAAC066CB"&lt;/span&gt; &lt;span class="nv"&gt;TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ntfs"&lt;/span&gt; &lt;span class="nv"&gt;PARTLABEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Basic data partition"&lt;/span&gt; &lt;span class="nv"&gt;PARTUUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"6cfc75a8-c9ee-4239-8cec-2394c0ec5037"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can get type of partition in &lt;code&gt;TYPE&lt;/code&gt; field.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now mount your partition accordingly on &lt;code&gt;/mnt&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Most important partition is root &lt;code&gt;/&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Here &lt;code&gt;-t&lt;/code&gt; is the type of filesystem.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mount &lt;span class="nt"&gt;-t&lt;/span&gt; ext4 /dev/sda2 /mnt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  Mount &lt;code&gt;/home&lt;/code&gt; if necessary
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mount &lt;span class="nt"&gt;-t&lt;/span&gt; ext4 /dev/sda3 /mnt/home
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  Mount other required partitions.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;These include virtual filesystems required for chroot to run&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;for &lt;/span&gt;i &lt;span class="k"&gt;in&lt;/span&gt; /dev /dev/pts /proc /sys /run&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do &lt;/span&gt;mount &lt;span class="nt"&gt;-B&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; /mnt&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  If you want to update the GRUB, mount &lt;code&gt;/sys/firmware/efi/efivars&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mount -B /sys/firmware/efi/efivars /mnt/sys/firmware/efi/efivars
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  If you've setup your network and want to use it in the chrooted system, copy over &lt;code&gt;/etc/resolv.conf&lt;/code&gt; so that you'll be able to resolve domain names :&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;cp -L /etc/resolv.conf /mnt/etc/resolv.conf&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After all required partitions are mounted you are free to chroot into your &lt;code&gt;/mnt&lt;/code&gt; directory.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chroot"&gt;
  &lt;/a&gt;
  Chroot
&lt;/h3&gt;

&lt;p&gt;Use &lt;code&gt;chroot&lt;/code&gt; command to move into mounted filesystem.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;chroot&lt;/span&gt; /mnt /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  If you'll be doing anything with GRUB, you'll need to be sure your &lt;code&gt;/etc/mtab&lt;/code&gt; file is up-to-date :&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;grep -v rootfs /proc/mounts &amp;gt; /etc/mtab&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#work"&gt;
  &lt;/a&gt;
  Work
&lt;/h3&gt;

&lt;p&gt;After a successful &lt;code&gt;chroot&lt;/code&gt;, You get root access on mounted root(&lt;code&gt;/&lt;/code&gt;) filesystem. You are free to do anything you want. Like :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Upgrade and Downgrade packages.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Use your package manager to upgrade or downgrade broken packages.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  Change a forgotten password.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You can use &lt;code&gt;passwd &amp;lt;username&amp;gt;&lt;/code&gt; to change the password.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  Fix your &lt;code&gt;/etc/fstab&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  Upgrade or Downgrade kernel.&lt;/li&gt;
&lt;li&gt;  Anything you want to do.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#recovering-broken-installation"&gt;
  &lt;/a&gt;
  Recovering broken installation
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#mount"&gt;
  &lt;/a&gt;
  Mount
&lt;/h3&gt;

&lt;p&gt;In order to Reinstall the GRUB you need to mount your EFI partition.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mount &lt;span class="nt"&gt;-t&lt;/span&gt; vfat /dev/sda1 /boot/efi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#run-grubinstall"&gt;
  &lt;/a&gt;
  Run &lt;strong&gt;grub-install&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;grub-install &lt;span class="nt"&gt;--target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;x86_64-efi &lt;span class="nt"&gt;--efi-directory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/boot/efi &lt;span class="nt"&gt;--bootloader-id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;arch_grub &lt;span class="nt"&gt;--recheck&lt;/span&gt; &lt;span class="nt"&gt;--force&lt;/span&gt; &lt;span class="nt"&gt;--debug&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After this make sure to unmount your EFI partition.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;umount /boot/efi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finally"&gt;
  &lt;/a&gt;
  Finally
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#unmount"&gt;
  &lt;/a&gt;
  Unmount
&lt;/h3&gt;

&lt;p&gt;When you are done with your work you can exit &lt;code&gt;chroot&lt;/code&gt; by typing &lt;code&gt;exit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now unmount all the partitions you mounted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;umount &lt;span class="nt"&gt;-R&lt;/span&gt; /mnt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If any error occurs, you can use &lt;code&gt;umount -l&lt;/code&gt; to list all the mounted partitions and unmount remaining partitions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reboot"&gt;
  &lt;/a&gt;
  Reboot
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>archlinux</category>
      <category>linux</category>
    </item>
    <item>
      <title>Creating a simple app using Minicli</title>
      <author>Simonarde Lima</author>
      <pubDate>Sun, 24 Oct 2021 03:25:17 +0000</pubDate>
      <link>https://dev.to/simonardelima/creating-a-simple-app-using-minicli-5g3n</link>
      <guid>https://dev.to/simonardelima/creating-a-simple-app-using-minicli-5g3n</guid>
      <description>&lt;p&gt;&lt;a href="https://docs.minicli.dev/en/latest/"&gt;Minicli&lt;/a&gt; is an experimental dependency-free toolkit for building CLI-only applications in PHP created by &lt;a href="https://github.com/erikaheidi"&gt;@erikaheidi&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this example, we are going to build a simple app to show some info about a chosen Pokemon.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-simple-app"&gt;
  &lt;/a&gt;
  Creating a Simple App
&lt;/h2&gt;

&lt;p&gt;First, we need to create a new project using &lt;a href="https://docs.minicli.dev/en/latest/01-getting_started/#creating-a-structured-app-using-the-application-template"&gt;Minicli template app&lt;/a&gt;, using your terminal of choice, enter the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;composer create-project --prefer-dist minicli/application pokemonApiConsumer&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will give us a starting point to build our app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-command"&gt;
  &lt;/a&gt;
  Creating a command
&lt;/h2&gt;

&lt;p&gt;Minicli will register all commands inside the directory &lt;code&gt;app/Command&lt;/code&gt;. &lt;br&gt;
The name you give to a folder inside &lt;code&gt;Command&lt;/code&gt; is the name of your &lt;a href="https://docs.minicli.dev/en/latest/02-command_namespaces/"&gt;Command Namespace&lt;/a&gt;, so, in this example, we will create a folder called &lt;code&gt;Pokemon&lt;/code&gt;. Cd to our app root folder and type the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;pokemonApiConsumer
&lt;span class="nb"&gt;mkdir &lt;/span&gt;app/Command/Pokemon
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we have to create our Controller file, this is the actual name of the command you want to execute, so, in this example, we will create a command called &lt;code&gt;fetchinfo&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;app/Command/Pokemon
&lt;span class="nb"&gt;touch &lt;/span&gt;FetchInfoController.php
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Put the following code inside &lt;code&gt;FetchInfoController&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Command\Pokemon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Minicli\Command\CommandController&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Minicli\Output\Filter\ColorOutputFilter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Minicli\Output\Helper\TableHelper&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FetchInfoController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;CommandController&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$baseApi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'https://pokeapi.co/api/v2'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;hasParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPrinter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Please, inform the name of Pokemon you want to fetch info."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPrinter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Usage: ./minicli pokemon fetchinfo name=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;bulbasaur&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPrinter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Showing info about '&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;fetchPokemonInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;fetchPokemonInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// code&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;printPokemonTableInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// code&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$ch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;curl_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;CURLOPT_RETURNTRANSFER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;curl_setopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;CURLOPT_CONNECTTIMEOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;curl_exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;curl_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will implement &lt;code&gt;fetchPokemonInfo&lt;/code&gt; and &lt;code&gt;printPokemonInfo&lt;/code&gt; in a minute, but, right now, you can call your command to see if works using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./minicli pokemon fetchinfo &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"bulbasaur"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;* remember, you have to execute this command from the root of your app.&lt;/p&gt;

&lt;p&gt;You should see something like:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Showing info about bulbasaur&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-fetchpokemoninfo"&gt;
  &lt;/a&gt;
  Implementing fetchPokemonInfo
&lt;/h2&gt;

&lt;p&gt;In this example, we are using &lt;a href="https://pokeapi.co/"&gt;PokeAPI&lt;/a&gt;. To pull the info about our chosen pokemon, we are going to use the folowing endpoint &lt;code&gt;https://pokeapi.co/api/v2/pokemon/&amp;lt;name&amp;gt;&lt;/code&gt;, and, if you see the code we have putted inside &lt;code&gt;FetchInfoController.php&lt;/code&gt;, we have a method called &lt;code&gt;get&lt;/code&gt;, which uses curl to make a request to a given url. Let's use it then, inside &lt;code&gt;FetchInfoController.php&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;fetchPokemonInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$pokemonInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;baseApi&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/pokemon/'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you run fetchinfo command again, you will not see any new output, that's because we are making the request to PokeAPI, but not showing anywhere. Let's fix this!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-printpokemontableinfo"&gt;
  &lt;/a&gt;
  Implementing printPokemonTableInfo
&lt;/h2&gt;

&lt;p&gt;Now we will display the info PokeAPI has returned in your last request. Open &lt;code&gt;FetchInfoController.php&lt;/code&gt; and replace &lt;code&gt;printPokemonTableInfo&lt;/code&gt; content with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;printPokemonTableInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$info&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TableHelper&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addHeader&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'Name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Height'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Weight'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addRow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nb"&gt;ucfirst&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="nv"&gt;$info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'height'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'weight'&lt;/span&gt;&lt;span class="p"&gt;]]);&lt;/span&gt;
    &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addHeader&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'Type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="nb"&gt;array_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addRow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'type'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]]);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nv"&gt;$info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'types'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addHeader&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'Moves'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="nb"&gt;array_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addRow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'move'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;])]);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nv"&gt;$info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'moves'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPrinter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;rawOutput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getFormattedTable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ColorOutputFilter&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
    &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPrinter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;newline&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you run &lt;code&gt;fetchinfo&lt;/code&gt; command again, you will notice that the info will not be shown to us. That's because we have implemented the &lt;code&gt;printPokemonTableInfo&lt;/code&gt;, but we are not calling it. Let's call it then:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;fetchPokemonInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$pokemonInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;baseApi&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/pokemon/'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;printPokemonTableInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pokemonInfo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, run &lt;code&gt;fetchinfo&lt;/code&gt; again:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./minicli pokemon fetchinfo &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"bulbasaur"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see some info now! Have fun!&lt;/p&gt;

&lt;p&gt;You can see the complete code &lt;a href="https://github.com/simonardejr/pokecli"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;* disclaimer: this is a very basic piece of code, and it is, by no means, the best and the cleanest way to implement a command using Minicli. &lt;/p&gt;

</description>
      <category>php</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>10 CSS Resources that you should bookmark</title>
      <author>Jatin Sharma</author>
      <pubDate>Sun, 24 Oct 2021 02:53:51 +0000</pubDate>
      <link>https://dev.to/j471n/10-css-resources-that-you-should-bookmark-46l6</link>
      <guid>https://dev.to/j471n/10-css-resources-that-you-should-bookmark-46l6</guid>
      <description>&lt;p&gt;In this article we are going to look at some awesome resource for you that can improve your productivity, I can assure you that you will not regret on clicking this article, so Let's see what I have got for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-neumorphism"&gt;
  &lt;/a&gt;
  &lt;a href="https://neumorphism.io/"&gt;1. Neumorphism&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This website generates the soft UI for your &lt;code&gt;section&lt;/code&gt; or &lt;code&gt;div&lt;/code&gt; and it can also customize &lt;code&gt;border-radius&lt;/code&gt;, &lt;code&gt;box-shadow&lt;/code&gt; and etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U48p6dTM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9Azvowr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U48p6dTM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9Azvowr.png" alt="neumorphism"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-shadows-brumm"&gt;
  &lt;/a&gt;
  &lt;a href="https://shadows.brumm.af/"&gt;2. Shadows Brumm&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It can generate multiple Layered shadow for you which gives very cool effect and you can customize the color from the curve.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JZOXS4nw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/2wiFPyS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JZOXS4nw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/2wiFPyS.png" alt="shadows brumm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-css-clippath-maker"&gt;
  &lt;/a&gt;
  &lt;a href="https://bennettfeely.com/clippy/"&gt;3. CSS Clip-path Maker&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It can generate beautiful clip-path with various different shapes it can be very handy if you use these king of shapes and properties.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WsYjLvSl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/RHi4NE3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WsYjLvSl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/RHi4NE3.png" alt="clip-path"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-fancy-border-shape-generator"&gt;
  &lt;/a&gt;
  &lt;a href="https://9elements.github.io/fancy-border-radius/"&gt;4. Fancy Border Shape Generator&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It generates most awesome shapes by manipulating &lt;code&gt;border-radius&lt;/code&gt; and you can use it anywhere in you project. You can also change the size of shape to check how it'll look with your project preference.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AJOhf2TG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Mi3hNOb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AJOhf2TG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Mi3hNOb.png" alt="border-shape"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-cubic-curve"&gt;
  &lt;/a&gt;
  &lt;a href="https://cubic-bezier.com/"&gt;5. Cubic Curve&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It basically generates the &lt;code&gt;cubic-bezier&lt;/code&gt; for you animation in css. As we know we use &lt;code&gt;ease-in&lt;/code&gt;, &lt;code&gt;ease-out&lt;/code&gt; etc property for the animation to tell the browser what is the animation's flow. you can customize those properties here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pk7cQb2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/RdpTDJl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pk7cQb2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/RdpTDJl.png" alt="cubic-curve"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-css-gradient"&gt;
  &lt;/a&gt;
  &lt;a href="https://cssgradient.io/"&gt;6. CSS Gradient&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you work with gradient then you will love it. because I am using this for a long time and it's just perfect. and also here you can also get some tools like &lt;em&gt;Gradient Button&lt;/em&gt; and many more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KxmsZ7eX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/GXQ30rQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KxmsZ7eX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/GXQ30rQ.png" alt="gradient"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-css-waves-generator"&gt;
  &lt;/a&gt;
  7. CSS Waves Generator
&lt;/h3&gt;

&lt;p&gt;According to me these three waves generators that are awesome to generate any kind of waves it could be for you footer or divider section etc.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#css-waves"&gt;
  &lt;/a&gt;
  &lt;a href="https://getwaves.io/"&gt;CSS Waves&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;It generates simple waves with some customization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ivv1Bsku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/SIACH2I.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ivv1Bsku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/SIACH2I.png" alt="css-waves-1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#gradient-multiple-waves"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.softr.io/tools/svg-wave-generator"&gt;Gradient Multiple Waves&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;It can generate multiple gradient waves which is awesome.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wd2Qdjrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BKLsLsw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wd2Qdjrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BKLsLsw.png" alt="css-waves-2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#multiple-animated-waves"&gt;
  &lt;/a&gt;
  &lt;a href="https://svgwave.in/"&gt;Multiple Animated Waves&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;It can generate multiple gradients waves but the main feature is that it can also generate Live animation for that.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5KjHsh_5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Qj9Fcft.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5KjHsh_5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Qj9Fcft.png" alt="css-waves-3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-css-grid-generator"&gt;
  &lt;/a&gt;
  8. CSS Grid Generator
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#css-grid"&gt;
  &lt;/a&gt;
  &lt;a href="https://cssgrid-generator.netlify.app/"&gt;CSS grid &lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;It generates the awesome css For Grid and you can customize it with &lt;code&gt;div&lt;/code&gt; and it will also create the child element for that&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QQ6LwiHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/SkTnHrb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QQ6LwiHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/SkTnHrb.png" alt="css-grid"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#css-grid-area"&gt;
  &lt;/a&gt;
  &lt;a href="https://grid.layoutit.com/"&gt;CSS Grid Area&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;It generates the &lt;code&gt;grid-area&lt;/code&gt; for you. and you can name that and customize the area according to your need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2u1KjDtn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Bl6WXfY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2u1KjDtn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Bl6WXfY.png" alt="css-grid-area"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-loading-animated-gifssvgs"&gt;
  &lt;/a&gt;
  &lt;a href="https://loading.io/"&gt;9. Loading Animated GIFs/SVGs&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Here you can generate multiple loading animation and download that as SVG, GIFs, PNG and other formats but the best feature of it is that you can customize these animation to the next level. You should try this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iLRnmOOi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/qApN28O.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iLRnmOOi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/qApN28O.png" alt="loading"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-free-icon-library"&gt;
  &lt;/a&gt;
  10. Free Icon Library
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#flaticons"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.flaticon.com/"&gt;Flaticons&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This Library have 5.7M+ vector icons. So you can find any possible icons here and you can use it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EVVlTVdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/lm8Tz78.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EVVlTVdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/lm8Tz78.png" alt="flaticons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#icons8"&gt;
  &lt;/a&gt;
  &lt;a href="https://icons8.com/"&gt;icons8&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This library also has the vast collection of icons and you can customize them as well, also you can directly use that icon without downloading it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PJE1KZS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/8gyhKQb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PJE1KZS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/8gyhKQb.png" alt="icons8"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;I hope you learned something from this article, if yes them thumbs up. There are unlimited resources but I've covered only ten in this article. I'll cover them in the future articles. So consider to Follow.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#also-read"&gt;
  &lt;/a&gt;
  Also Read
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/css-gradient-loading-animation-2695"&gt;CSS Gradient Loading Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/some-javascript-methods-you-should-know-i15"&gt;Some Javascript Methods you should know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/10-git-commands-everybody-should-know-3322"&gt;10 Git Commands everybody should know&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to Emulate Firebase Auth</title>
      <author>Harvtronix</author>
      <pubDate>Sun, 24 Oct 2021 01:26:27 +0000</pubDate>
      <link>https://dev.to/harvtronix/how-to-emulate-firebase-auth-5ah7</link>
      <guid>https://dev.to/harvtronix/how-to-emulate-firebase-auth-5ah7</guid>
      <description>&lt;p&gt;I was recently building an app in which I was trying to integrate Firebase Authentication and Firebase Realtime Database. But I ran into a problem pretty quickly while I was testing things locally.&lt;/p&gt;

&lt;p&gt;Even though Firebase has a super amazing Emulator Suite for local testing, authentication is not included. To me, this meant that the lovely auth-based Realtime DB rules I'd crafted were impossible to test locally unless I modified my DB rules beforehand. But that doesn't make for a very good permissions test, does it? There is an open issue on &lt;a href="https://github.com/firebase/firebase-tools/issues/1677"&gt;GitHub&lt;/a&gt; for addressing this, but at the time of writing, no solution has yet been included in the emulator suite.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Update 2020-10-27:&lt;/strong&gt; Firebase Auth is now part of the Emulator Suite! Upgrade the Firebase CLI to version 8.14.0 or greater to use it. If that's all you were looking for, the rest of this post might not be useful to you, but feel free to keep reading for a more detailed look at Firebase Auth and my general philosophy towards testing and modularization.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I spent a bunch of hours trying to figure out how to string things together with Band-Aids and glue to do something that honestly seems like a pretty basic requirement for DB testing: Test my auth rules in both development and production without modifying the very security model I'm trying to test. After all, who would want to do "real" permissions testing for the first time in a production environment??&lt;/p&gt;

&lt;p&gt;Nothing was working. I was stuck. I missed. &lt;a href="https://youtu.be/02WuLTpe3sI?t=355"&gt;Then I missed again. Then I got sad. I had a popsicle. And then I passed out in the snow.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just kidding on the last few, but what I &lt;em&gt;did&lt;/em&gt; do what have an epiphany in the shower. I do some of my best thinking there. &lt;em&gt;Anyone else? No? Okay. Moving on.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The Solution
&lt;/h2&gt;

&lt;p&gt;My app in particular is using Google Login and the Google auth provider, so that's what I'm going to focus on here, but I believe this approach would translate to other auth providers as well.&lt;/p&gt;

&lt;p&gt;The key to making this work is abstraction. Take any Firebase call that you'd normally make and hide it behind a function that may or may not do the same thing. Usually, it's the same sort of thing with some extras sprinkled in.&lt;/p&gt;

&lt;p&gt;In this case, we'll be looking at the &lt;code&gt;firebase.initializeApp&lt;/code&gt; function. In the normal production environment, this is super simple. We pass in a &lt;code&gt;siteConfig&lt;/code&gt; object and we're on our merry way. However, when working locally and/or with Firebase Emulators, this doesn't work one-for-one. In &lt;a href="https://firebase.google.com/docs/rules/unit-tests"&gt;the docs&lt;/a&gt;, they indicate that we should use &lt;code&gt;initializeTestApp&lt;/code&gt; instead to perform our initialization. This comes from the &lt;code&gt;@firebase/testing&lt;/code&gt; module as opposed to the &lt;code&gt;firebase/app&lt;/code&gt; module. This might seem perfect on the surface, but the issue is that anywhere we might normally use &lt;code&gt;firebase.&amp;lt;sometThing&amp;gt;&lt;/code&gt; to interact with the default firebase app, we can't. We instead need to work with the app instance returned from the call to &lt;code&gt;firebase.initializeTestApp()&lt;/code&gt;. By extension, this means we should structure our code so that we're &lt;em&gt;always&lt;/em&gt; using &lt;code&gt;app.&amp;lt;someThing&amp;gt;&lt;/code&gt; in favor of &lt;code&gt;firebase.&amp;lt;someThing&amp;gt;&lt;/code&gt;, regardless of whether we're using &lt;code&gt;initializeApp&lt;/code&gt; or &lt;code&gt;initializeTestApp&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Again, this doesn't seem too bad on the surface, but there's one more catch: In each case, the app instance (as provided by &lt;code&gt;initialize*App(siteConfig)&lt;/code&gt;) is slightly different. Namely, &lt;code&gt;app.auth()&lt;/code&gt; is not a thing for apps initialized via &lt;code&gt;initializeTestApp()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is the crux of the auth emulation problem. And this is what we are going to solve. Let's take a look at some code.&lt;/p&gt;

&lt;p&gt;Here is a utility function to initialize either a test or production app and return it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firebase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;importFirebase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDevelopment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;firebase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initializeTestApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;siteConfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;// set up custom hooks for auth mocking&lt;/span&gt;
        &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__internal__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;firebase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initializeApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;siteConfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;// Set up the auth observer&lt;/span&gt;
        &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's a lot going on here, so let's break it down line by line.&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I went with &lt;code&gt;async&lt;/code&gt; here because, in a couple lines, you'll see some dynamic imports. More on that in a sec. The other important piece here is that this &lt;code&gt;createApp&lt;/code&gt; function takes an &lt;code&gt;onAuthStateChanged&lt;/code&gt; callback and not a &lt;code&gt;siteConfig&lt;/code&gt; object like &lt;code&gt;initializeApp&lt;/code&gt;. Since we control the module containing this abstraction function, we can put our &lt;code&gt;siteConfig&lt;/code&gt; object here too for easy access. I mean, you can put the &lt;code&gt;siteConfig&lt;/code&gt; wherever you want, but to me, it makes sense to have the same module own the config block and the utility functions since the goal is to drive all Firebase-related functions through this abstraction module.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;onAuthStateChanged&lt;/code&gt; callback will be called when—&lt;em&gt;you guessed it&lt;/em&gt;—the auth state changes. In the production case, we can simply set up an auth observer in the usual manner, but in the development case, it's a bit more interesting. More on that in a sec.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firebase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;importFirebase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's another layer of abstraction. We want a reference to Firebase as a module, and more specifically we might want a reference to the "testing" version of Firebase, but we don't actually care how it is obtained. Dynamic imports are a huge help here. This is what the definition of &lt;code&gt;importFirebase&lt;/code&gt; looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;importFirebase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDevelopment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@firebase/testing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firebase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;firebase/app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;firebase/auth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;firebase/database&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;firebase&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's nothing too surprising here. We are either importing "test" Firebase from &lt;code&gt;@firebase/testing&lt;/code&gt; or we are importing "real" Firebase from &lt;code&gt;firebase/app&lt;/code&gt; along with our other Firebase dependencies. Dynamically importing "real" Firebase is a little more involved, but it's basically the traditional way of doing it converted to dynamic import-form.&lt;/p&gt;

&lt;p&gt;I feel like this is a good time to mention that the reason for using dynamic imports here is so that you only ever end up importing &lt;em&gt;either&lt;/em&gt; the test Firebase &lt;em&gt;or&lt;/em&gt; the production one, but never both. Dynamic imports give us that flexibility.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The astute reader might realize that even with dynamic imports, Webpack will still bundle both modules into the output since we don't know until runtime which type of environment we'll be in. While this is true, it can be avoided by splitting the vendor modules out as part of the build and filtering out one of the two Firebase chunks, depending on the build type.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#development-mode"&gt;
  &lt;/a&gt;
  Development Mode
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDevelopment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Assuming this is a React app created via &lt;code&gt;create-react-app&lt;/code&gt;, we can calculate whether or not this is a development build by looking for &lt;code&gt;process.env.NODE_ENV === 'development'&lt;/code&gt;&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;firebase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initializeTestApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;siteConfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we need to initialize the test app using the now-obtained Firebase module, providing it our &lt;code&gt;siteConfig&lt;/code&gt; as usual. There's a key piece that needs to exist in the &lt;code&gt;siteConfig&lt;/code&gt; for this to work though: An &lt;code&gt;auth&lt;/code&gt; block. Here's an example config:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;siteConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;authDomain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;databaseURL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;isDevelopment&lt;/span&gt;
        &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:9000?ns=...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://....firebaseio.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;databaseName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;storageBucket&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;....appspot.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;messagingSenderId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;appId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;measurementId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;u111111&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;u111111@example.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That auth block is the key because that means that we can "inject" a user/email into the app manually as we see fit. There's a caveat though... Since this isn't &lt;em&gt;real&lt;/em&gt; auth, we'll never get &lt;code&gt;onAuthStateChanged&lt;/code&gt; callbacks fired. We're going to need to do that ourselves. And the first step towards doing that is to store a reference to the provided callback in our test app for later:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// set up custom hooks for auth mocking&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__internal__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Here I chose &lt;code&gt;__internal__&lt;/code&gt; as a namespace that I figured nobody would collide with, but this could just as easily have been any other unique key on the app object.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#production-mode"&gt;
  &lt;/a&gt;
  Production Mode
&lt;/h2&gt;

&lt;p&gt;The other case to consider here is the production case. Let's take a look at the &lt;code&gt;else&lt;/code&gt; block:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;firebase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initializeApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;siteConfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// Set up the auth observer&lt;/span&gt;
    &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is very similar to what happens in development except we end up importing "real" Firebase and setting up an actual auth observer with that callback we took in as an argument.&lt;/p&gt;

&lt;p&gt;All of this is to say that we can now call&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;MyFirebaseUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;to get back a firebase app that's ready to go with either emulated auth in development or real auth in production.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I recommend holding onto this app instance in your application state so that it can be provided to any abstraction functions that may depend on it, such as simulating a login in development mode.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#simulating-onauthstatechanged"&gt;
  &lt;/a&gt;
  Simulating onAuthStateChanged
&lt;/h2&gt;

&lt;p&gt;For any function we have that would trigger a login (or logout), we can add in a separate development-only flow in which we manually fire an &lt;code&gt;onAuthStateChanged&lt;/code&gt; event. Looking at the &lt;a href="https://firebase.google.com/docs/reference/js/firebase.auth.Auth#onauthstatechanged"&gt;docs&lt;/a&gt;, those events are either passed a user or &lt;code&gt;null&lt;/code&gt; depending on whether the user is logged in or not.&lt;/p&gt;

&lt;p&gt;If our production flow for logging in a user looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doGoogleLogin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onSuccess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onFailure&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firebase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;importFirebase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;firebase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GoogleAuthProvider&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;// Show the actual login popup. Succeeding here will update the internally managed uid and&lt;/span&gt;
    &lt;span class="c1"&gt;// auth of the app, which allows subsequent database calls (and other stuff) to work.&lt;/span&gt;
    &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;signInWithPopup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onSuccess&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onFailure&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can add in a development flow, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doGoogleLogin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onSuccess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onFailure&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDevelopment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// https://firebase.google.com/docs/reference/js/firebase.auth#usercredential&lt;/span&gt;
        &lt;span class="nx"&gt;onSuccess&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;credential&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TEST_ID_AUTH_TOKEN&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;siteConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uid&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;

        &lt;span class="c1"&gt;// Fire a simulated onAuthStateChanged event, passing it the user from our siteConfig.auth block&lt;/span&gt;
        &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__internal__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;siteConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;getIdToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;TEST_ID_AUTH_TOKEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// production flow&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And there you have it! A sorta-kinda way to emulate auth from within a Firebase-enabled app. Hopefully you find this useful. I've been successfully using this approach in my project to help with offline testing using Firebase emulators.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>firebase</category>
      <category>testing</category>
    </item>
    <item>
      <title>Dual booting Ubuntu and windows 10</title>
      <author>Ganesh K</author>
      <pubDate>Sun, 24 Oct 2021 01:18:21 +0000</pubDate>
      <link>https://dev.to/ganeshcs316/dual-booting-ubuntu-and-windows-10-3e9i</link>
      <guid>https://dev.to/ganeshcs316/dual-booting-ubuntu-and-windows-10-3e9i</guid>
      <description>&lt;p&gt;First, download the latest version of Ubuntu from their website &lt;a href="https://ubuntu.com/#download,then"&gt;https://ubuntu.com/#download,then&lt;/a&gt; inject your SanDisk Pendrive with more than 8Gb (I used 16Gb) to your pc. After downloading Ubuntu we need Rufus (The Reliable USB Formatting Utility, with Source) is a free and open-source portable application for Microsoft Windows that can be used to format and create bootable USB flash drives or Live USBs.&lt;/p&gt;

&lt;p&gt;Open the Rufus, there we can see the SanDisk Pendrive, also we can see the partition scheme I choose GPT and my target system is UEFI&lt;/p&gt;

&lt;p&gt;After that on the status section click on start to begin the process&lt;/p&gt;

&lt;p&gt;Then restart your computer and open the boot menu option using the shortcut f9 in case if it didn't work (for me it was pretty daunting but after a couple of google searches I found the solution) go to the settings--&amp;gt;update and security--&amp;gt;recovery--&amp;gt; on the recovery choose to restart on advanced setup&lt;/p&gt;

&lt;p&gt;After a couple of seconds there will be three options go for the Troubleshoot --&amp;gt;Advanced options--&amp;gt;UEFI firmware settings and last choose restart now&lt;/p&gt;

&lt;p&gt;That's all you will see the boot menu options then you have to choose the one with Sandisk&lt;/p&gt;

&lt;p&gt;After that, you will be redirected to the ubuntu installation&lt;/p&gt;

&lt;p&gt;Now enter all the user credentials, setting up the accounts, etc after that, you will be asked to restart when you go for it you can safely eject your Pendrive&lt;/p&gt;

&lt;p&gt;Now you can dual boot Ubuntu and windows :)&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Cybercrime: Devs against the Dark side</title>
      <author>ritaCosta93</author>
      <pubDate>Sun, 24 Oct 2021 00:17:06 +0000</pubDate>
      <link>https://dev.to/ritacosta/cybercrime-devs-against-the-dark-side-15hn</link>
      <guid>https://dev.to/ritacosta/cybercrime-devs-against-the-dark-side-15hn</guid>
      <description>&lt;p&gt;Conference: &lt;a href="http://Future.Works"&gt;Future.Works&lt;/a&gt; Tech Conference&lt;/p&gt;

&lt;p&gt;Speaker: Steve Poole&lt;/p&gt;

&lt;p&gt;Position: Developer Advocate at SonaType&lt;/p&gt;

&lt;p&gt;Conference Teaser: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=s02R4bj5PfA"&gt;https://www.youtube.com/watch?v=s02R4bj5PfA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is my "review" and notes from the conference, not exactly what the speaker said, word by word, this is what I got from what was said.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#main-topics"&gt;
  &lt;/a&gt;
  Main topics
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cyber security

&lt;ul&gt;
&lt;li&gt;Developers point of view&lt;/li&gt;
&lt;li&gt;How to make it better&lt;/li&gt;
&lt;li&gt;As a developer, security is your problem. It's your responsability to produce secure software&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cybercrime</category>
      <category>hacking</category>
      <category>software</category>
      <category>developers</category>
    </item>
    <item>
      <title>Introduction</title>
      <author>Mahamud Arteh</author>
      <pubDate>Sat, 23 Oct 2021 23:32:32 +0000</pubDate>
      <link>https://dev.to/arteh97/introduction-5adc</link>
      <guid>https://dev.to/arteh97/introduction-5adc</guid>
      <description>&lt;p&gt;For those of you who don’t know me, hello, my name is Mahamud. I’m a freelance developer, solo entrepreneur, and blogger, based in Manchester, England. I would like to start sharing my experiences as a freelance developer, here on this website. This post will summarise my decision to change my career path, and how I was able to do so.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9uwNJOhA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9knzu70on25f651op4cl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9uwNJOhA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9knzu70on25f651op4cl.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Earlier this year, a friend of mine suggested that I enrol in a coding bootcamp. after some research, I decided to take the leap of faith. since then, I have graduated from the northcoders bootcamp and completed several projects.  eventually, I would like to sell my own products online (physical &amp;amp; digital), so that i do not have to rely on clients. I will continue to build an online presence for myself, and complete freelance projects, so that i can work towards my goals.&lt;/p&gt;

&lt;p&gt;As part of the onboarding process, I had to complete a 7 question entry exam. I dedicated all of my free time to prepare, as the revision materials were extensive (150+ freecodecamp lessons &amp;amp; 25+ codewars katas). the course costs £7200, so the onboarding process is designed to ensure applicants have the drive to learn to code. not long before I began the bootcamp, I got a job working for the NHS, from home. I decided to take the bootcamp as a remote student, whilst continuing to work full-time. whilst it made my life very difficult and boring at the time, I do not regret the decision. financial problems can have an adverse effect on a person’s development, and I couldn’t afford to be in that predicament at the time. I would never do it again, but with the strong resolve I have gained, it was worth the struggle. &lt;/p&gt;

&lt;p&gt;My persistence allowed me to transform my difficult experience into something teachable. in the few weeks since I have graduated, I have established a personal brand, a freelance business, and started taking on client work. &lt;/p&gt;

&lt;p&gt;The structure of the course is as follows:&lt;/p&gt;

&lt;p&gt;The fundamentals of javascript were taught to us over the 1st three weeks. Learning version control, and how to manipulate data, laid the foundations for us to create interactivity on websites/apps. &lt;/p&gt;

&lt;p&gt;We then moved on to learning about back-end development. To complete the back-end segment of the course, we were challenged to build a postgresql database. The database would serve as the back-end infrastructure of a review website.&lt;/p&gt;

&lt;p&gt;Career week couldn’t have came at a better time, as i was starting to feel a little fatigued. We attended hiring partner presentations, in which company representatives expressed their interest in hiring northcoders graduates. They understood the value of the education we were receiving. it was a great experience overall, as we learned a lot about how we could move forward after our graduation.&lt;/p&gt;

&lt;p&gt;To complete the front-end segment of the course, i created an interactive web app, using react. The pages displayed the information held in a database, that i had previously created, allowing the user to interact with it.&lt;/p&gt;

&lt;p&gt;We were split into groups of 5, for the project phase. we were then challenged to create a mobile app, that we were to conceptualise and design as a team. We decided to build an app that informed travellers about the restrictions in place. We went with mongo, typescript, and react-native, which none of us had used before. The previous weeks of intense learning made it a lot easier for us to write the code in another language. &lt;/p&gt;

&lt;p&gt;I worked on the server-side logic of the app, and the map renders (native). This project has given me confidence and showed me that I am more than able to pick up new concepts. on graduation day, I and my team presented our project, at the bootcamp site. I felt nervous about my speech, but i feel it turned out well after all.&lt;/p&gt;

&lt;p&gt;It’s been 3 weeks since i graduated, and my job search is going very well. I have connected with fellow developers online and started completing projects for commercial clients. I am aware that my lack of experience will cause me to miss opportunities, so that is another reason I have started working for myself.&lt;/p&gt;

&lt;p&gt;Working for yourself is possibly the most rewarding decision you can ever make. web development is just about the perfect discipline to pair with entrepreneurship because there are a lot of problems out there just waiting to be solved. &lt;/p&gt;

&lt;p&gt;Once i have completed my started client projects, i will have commercial experience. I would like to thank you for reading my first blog post, it really means a lot to me. I will be posting weekly reviews about my experiences as a freelance developer. feel free to leave a comment, if you have any thoughts/criticisms on my decisions, and see you next Sunday!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>fullstack</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Useful Websites Every Web developer Should Know About.</title>
      <author>Cess</author>
      <pubDate>Sat, 23 Oct 2021 22:37:21 +0000</pubDate>
      <link>https://dev.to/cesscode/useful-websites-every-web-developer-should-know-about-3n4n</link>
      <guid>https://dev.to/cesscode/useful-websites-every-web-developer-should-know-about-3n4n</guid>
      <description>&lt;p&gt;Hello everyone! 💙&lt;/p&gt;

&lt;p&gt;In this article, I will write about websites that will help you improve your productivity and manage some of the challenges we face in web development.&lt;/p&gt;

&lt;p&gt;let's get started 💃&lt;/p&gt;


&lt;p&gt;&lt;a href="https://giphy.com/gifs/redbull-happy-smile-l4FGnDqTrkewTIuRy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1.&lt;br&gt;
*&lt;em&gt;Animista *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yw-HYjMo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632349342155/-EOlhbw7C.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yw-HYjMo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632349342155/-EOlhbw7C.png" alt="frame_generic_light (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Animista&lt;/strong&gt; is a CSS animation library and a place where you can play with a collection of pre-made CSS animations, tweak them and you will be able to copy and paste the code into your website.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to Animista website [&lt;a href="https://animista.net/"&gt;https://animista.net/&lt;/a&gt;]&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;2.&lt;br&gt;
&lt;strong&gt;Ray&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CEr3cmIH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632350178684/WfhfRXfAZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CEr3cmIH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632350178684/WfhfRXfAZ.png" alt="frame_generic_light (2).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ray's website&lt;/strong&gt; helps you turn your codes into beautiful images.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kdOClMkM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632350267122/JTdkDEw3M.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kdOClMkM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632350267122/JTdkDEw3M.png" alt="raycast-untitled.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to Ray website [&lt;a href="https://ray.so/"&gt;https://ray.so/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A similar website to the ray website is &lt;strong&gt;Carbon&lt;/strong&gt;, it also helps in sharing beautiful images of your source code&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to carbon website [&lt;a href="https://carbon.now.sh/"&gt;https://carbon.now.sh/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;3.&lt;br&gt;
&lt;strong&gt;BGjar&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hYv7nVii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632350675534/fr1_UBPvD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hYv7nVii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632350675534/fr1_UBPvD.png" alt="frame_generic_light (3).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BGjar&lt;/strong&gt; is a free SVG background generator for websites, blogs, and apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to BGjar website [&lt;a href="https://bgjar.com"&gt;https://bgjar.com&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;4.&lt;br&gt;
&lt;strong&gt;Neumorphism&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bELGyt1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632351047960/5F8Y8da27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bELGyt1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632351047960/5F8Y8da27.png" alt="frame_generic_light (4).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Neumorphism&lt;/strong&gt; is a CSS code generator that will help you with colors, gradients, and shadows to your design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to Neumorphism website [neumorphism.io]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;5.&lt;br&gt;
&lt;strong&gt;CSS Button Generator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i5n8jfyT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632351798700/Qc4dzNiIy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i5n8jfyT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632351798700/Qc4dzNiIy.png" alt="frame_generic_light (5).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CSS Button Generator&lt;/strong&gt; is a free online tool that helps you to create beautiful CSS button styles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to CSS Button Generator website [&lt;a href="https://css3buttongenerator.com/"&gt;https://css3buttongenerator.com/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;6.&lt;br&gt;
&lt;strong&gt;DevSamples&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XTYT8jQU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632352751692/Fsfw2cHzL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XTYT8jQU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632352751692/Fsfw2cHzL.png" alt="frame_generic_light (6).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DevSamples&lt;/strong&gt; helps developers of all types find easy-to-use code samples for common use cases. It's a list of code samples for you to copy and paste into your work projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to DevSamples website [&lt;a href="http://www.devsamples.com"&gt;www.devsamples.com&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;7.&lt;br&gt;
&lt;strong&gt;ReadMe&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hjrcI9xi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632353295859/7Lvg2hP0j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hjrcI9xi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632353295859/7Lvg2hP0j.png" alt="frame_generic_light (7).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Readme.so&lt;/strong&gt; is the easiest way to create a README file. This simple editor allows you to add and customize all the sections you need for your project's readme.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to Readme website [&lt;a href="https://readme.so/"&gt;https://readme.so/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A similar website to the above website is &lt;strong&gt;Readme Gen.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to readme gen website [&lt;a href="https://readme-gen.vercel.app/app"&gt;https://readme-gen.vercel.app/app&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;8.&lt;br&gt;
&lt;strong&gt;Coolors&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FxQD5cNu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632354941779/LWkCBoAgI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FxQD5cNu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632354941779/LWkCBoAgI.png" alt="frame_generic_light (9).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This website will help you with color selections when designing your website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to colors website [&lt;a href="https://coolors.co/"&gt;https://coolors.co/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;9.&lt;br&gt;
&lt;strong&gt;Remove Background From Image&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P00lDw_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632353719691/qZVvVVDnu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P00lDw_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632353719691/qZVvVVDnu.png" alt="frame_generic_light (8).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This website helps you remove backgrounds from images in 5 seconds with zero clicks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to Remove background from Image website [&lt;a href="https://www.remove.bg/"&gt;https://www.remove.bg/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;10.&lt;br&gt;
Poet.so&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MF7q5IJ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632355577427/D5kuE0mar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MF7q5IJ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632355577427/D5kuE0mar.png" alt="frame_generic_light (10).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This website will help you create beautiful images of your Twitter posts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link [&lt;a href="https://poet.so/"&gt;https://poet.so/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;11.&lt;br&gt;
&lt;strong&gt;Meta Tags&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kFyFwzYY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632439504797/iPlIVFBFu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kFyFwzYY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632439504797/iPlIVFBFu.png" alt="frame_generic_light (11).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meta Tag is a tool used for debugging and generating meta tags for any website. It allows you to edit and experiment with your content, then previews how your webpage will look on Google, Facebook, Twitter, and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to metatag website [&lt;a href="https://metatags.io/"&gt;https://metatags.io/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;12.&lt;br&gt;
&lt;strong&gt;Browser frame&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WOAbtdgd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632440673077/l7jNEZHR5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WOAbtdgd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632440673077/l7jNEZHR5.png" alt="frame_chrome_mac_dark.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Browser Frame allows you to wrap screenshots in browser frames. Supports multiple browsers, operating systems, and themes.&lt;/p&gt;

&lt;p&gt;Before Browser frame:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gWizF3CG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632440706101/Ci2jlW5pI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gWizF3CG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632440706101/Ci2jlW5pI.png" alt="screenbud-c4e26130-9db0-491b-a2af-93c5a9c50d69.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After browser Frame:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PxVhHnbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632440748569/dY6ezldwX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PxVhHnbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632440748569/dY6ezldwX.png" alt="frame_generic_light (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to browser frame website [&lt;a href="https://browserframe.com/"&gt;https://browserframe.com/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A similar website to the browser frame website is &lt;strong&gt;Screely&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to  Screely website [&lt;a href="https://www.screely.com/"&gt;https://www.screely.com/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;13.&lt;br&gt;
&lt;strong&gt;DevDocs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hjOQfI7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633045578615/7ArybYO7B.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hjOQfI7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633045578615/7ArybYO7B.png" alt="frame_chrome_mac_dark.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DevDocs&lt;/strong&gt; is free and Open-source. It contains documentation for almost every technology used in web development. You can download documentation of any of your favorite technology for offline reading. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to Devdocs website [&lt;a href="https://devdocs.io/"&gt;https://devdocs.io/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;14.&lt;br&gt;
&lt;strong&gt;Undesign&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D-qtaGw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633046418288/rGVGgEN_n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D-qtaGw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633046418288/rGVGgEN_n.png" alt="frame_chrome_mac_dark (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;undesign&lt;/strong&gt; is a collection of free resources for developers and designers. it contains code snippets, colors, gradients, templates, icons, animations, etc. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to undesign website [&lt;a href="https://undesign.learn.uno/"&gt;https://undesign.learn.uno/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;15.&lt;br&gt;
&lt;strong&gt;The Frontend Checklist&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JHcEVBcn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632523736982/wzLGHvTtz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JHcEVBcn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632523736982/wzLGHvTtz.png" alt="frame_chrome_mac_dark (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The frontend checklist website&lt;/strong&gt; tells you the best frontend practices you should use for building a website. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to Frontend checklist website [&lt;a href="https://frontendchecklist.io/"&gt;https://frontendchecklist.io/&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;16.&lt;br&gt;
&lt;strong&gt;Unscreen&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F2vZQ6PI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635030657335/yT3T6N_wh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F2vZQ6PI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635030657335/yT3T6N_wh.png" alt="frame_chrome_mac_dark (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Unscreen&lt;/strong&gt; helps you remove the background of any video online for free.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;link to Unscreen website [&lt;a href="http://www.unscreen.com"&gt;www.unscreen.com&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CONCLUSION&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The above-mentioned websites will make your life easier as a web developer. If you have any questions or there are any other websites that help you a lot more than this, Post about it in the comment section below and I'll be happy to answer every single one.&lt;/p&gt;

&lt;p&gt;If you found this article helpful, please like and share it 💙.&lt;/p&gt;

&lt;p&gt;That's all for today! 😁 You reached the end of the article 😍.&lt;/p&gt;


&lt;p&gt;&lt;a href="https://giphy.com/gifs/snl-saturday-night-live-season-44-f9RzoxHizH72k15FKS"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>What is CSS Variable - in simple terms</title>
      <author>Cess</author>
      <pubDate>Sat, 23 Oct 2021 22:30:43 +0000</pubDate>
      <link>https://dev.to/cesscode/what-is-css-variable-in-simple-terms-26c7</link>
      <guid>https://dev.to/cesscode/what-is-css-variable-in-simple-terms-26c7</guid>
      <description>&lt;p&gt;Hello everyone! 💙&lt;/p&gt;

&lt;p&gt;In this article, I will write about CSS Variables, scoping CSS Variables, and how they can help you to create better, and more maintainable CSS. &lt;/p&gt;

&lt;p&gt;let's get started 💃&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;CSS Variables&lt;/strong&gt; are sometimes referred to as &lt;strong&gt;CSS Custom properties&lt;/strong&gt; or &lt;strong&gt;Cascading Variables.&lt;/strong&gt; They allow information to be maintained and referenced in many locations. They make it easy to read and understand code especially when the code was done by someone else. &lt;/p&gt;

&lt;p&gt;A good way to use CSS variables is when it comes to the colors of your design. Instead of copy and paste the same colors over and over again, you can place them in variables. &lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#defining-variables"&gt;
  &lt;/a&gt;
  &lt;strong&gt;DEFINING VARIABLES&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Declaring a Variable is done using a Variable name that begins with a double hyphen (--), and a property value that can be any valid CSS value.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;h1 {
--main-bg-color: #358597;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;CSS variables are case-sensitive: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;--Main-Bg-Color&lt;/code&gt; and &lt;code&gt;--main-bg-color&lt;/code&gt; are not the same. To prevent this confusion, avoid using capital letters in variable names.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use hyphen delimited strings like this:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;--main-text-color&lt;/code&gt; instead of &lt;code&gt;--maintextcolor&lt;/code&gt; when defining a string.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-css-variables"&gt;
  &lt;/a&gt;
  &lt;strong&gt;USING CSS VARIABLES&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;To use the CSS variables you must specify your CSS Variable name inside the &lt;code&gt;var()&lt;/code&gt; function, in place of a regular property value. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;var()&lt;/code&gt; function is used to insert the value of a CSS variable. &lt;/p&gt;

&lt;p&gt;The syntax of the var() function is as follows: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;var(--name, value)&lt;/code&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The variable name (must start with two dashes)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Value is Optional: The fallback value (used if the variable is not found) &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;h1 {

--main-text-color: white;

color: var( --main-text-color);

} 


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 1&lt;/strong&gt; contains the variable name alone.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;h1 {

--main-text-color: white;

color: var( --main-text-color, red);

} 


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 2&lt;/strong&gt; contains the variable name and the fallback value(red). &lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#scooping-variables"&gt;
  &lt;/a&gt;
  &lt;strong&gt;SCOOPING VARIABLES&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Scope determines the range of the accessibility of the variable. Scope helps to store separate values, which come into play only when they are necessary. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Variables have two types of scope:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Global Scope&lt;/li&gt;
&lt;li&gt;local Scope&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#global-scope"&gt;
  &lt;/a&gt;
  &lt;strong&gt;GLOBAL SCOPE&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Global scope is declared in &lt;code&gt;:root&lt;/code&gt; pseudo-class. Declaring the variable in &lt;code&gt;:root&lt;/code&gt; enables the variable to be accessed/used through out the entire document or globally across the entire HTML document. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To declare a variable in the global scope, you:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Define the variable in a &lt;code&gt;:root{}&lt;/code&gt; pseudo class
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:root { 
--primary-color: #000;
--text-shadow: 2px 2px 1px white;
 }  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Assign the variables to different child elements in your document
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;h1,h2 { 
color: var(--primary-color); 
text-shadow: var(--text-shadow);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Declaring a CSS variable on the &lt;code&gt;:root&lt;/code&gt; pseudo-class and using it where needed throughout the document, will help you avoid repetition and it will be easier if you want to change the value across the entire page later.&lt;/p&gt;

&lt;p&gt;It is common practice to define variables inside the &lt;code&gt;:root&lt;/code&gt; but not mandatory &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#local-scope"&gt;
  &lt;/a&gt;
  &lt;strong&gt;LOCAL SCOPE&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;The local scope&lt;/strong&gt; would only affect the specific HTML element that it is declared in along with any children that the element may contain. &lt;/p&gt;

&lt;p&gt;To create a variable with local scope, declare it inside the selector that is going to use it.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;h1 {
  --font-size: 18px;
  --line-height-h1: 1.6;
  font-size: var(--font-size);
  line-height: var(--line-height-h1);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember that &lt;strong&gt;Global variables&lt;/strong&gt; can be accessed/used throughout the entire document, while &lt;strong&gt;local variables&lt;/strong&gt; can be used only inside the selector where it is declared.&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#hoisting-css-variables"&gt;
  &lt;/a&gt;
  &lt;strong&gt;HOISTING CSS VARIABLES&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Like in JavaScript, &lt;strong&gt;CSS variables&lt;/strong&gt; can be hoisted. This means that CSS variables can be used before they are declared. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body {
color: var(--font-color);
}

:root {
--font-color: orange;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in the above example, CSS variable &lt;code&gt;--font-color&lt;/code&gt; was used before it was declared in the &lt;code&gt;:root&lt;/code&gt; pseudo-selector, and the code works fine.&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#overriding-css-variables"&gt;
  &lt;/a&gt;
  &lt;strong&gt;OVERRIDING CSS VARIABLES&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You can override &lt;strong&gt;CSS Variables&lt;/strong&gt; like every other CSS property. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:root {
--btn-color: red;
}

button {
--btn-color: white;
color: var(--btn-color);
padding: 2em;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, the button text color will be white.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I set the &lt;code&gt;--btn-color: red;&lt;/code&gt; on the &lt;code&gt;:root&lt;/code&gt; pseudo-class meaning I want my button text color to be red&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I wasn't okay with the red color for my button so I changed: &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;--btn-color: red;&lt;/code&gt; to &lt;code&gt;--btn-color: white;&lt;/code&gt; on the button selector meaning my button text color will be white instead of the red color I set on the &lt;code&gt;:root{}&lt;/code&gt; pseudo class.&lt;/p&gt;

&lt;p&gt;Overriding the CSS variable is cool, yeah? be careful not to overuse this as you are defeating the main purpose of CSS variables if you are going to be overriding them.&lt;/p&gt;

&lt;p&gt;I will tell you to change the value from the &lt;code&gt;:root&lt;/code&gt; pseudo-class or assign a different variable.&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#use-of-multiple-variables"&gt;
  &lt;/a&gt;
  USE OF MULTIPLE VARIABLES
&lt;/h3&gt;

&lt;p&gt;You are not limited to use a single var() in your declarations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:root {
--padding: 10px 20px;
}

div {
padding: var(--padding);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#declaring-a-variable-within-a-variable"&gt;
  &lt;/a&gt;
  &lt;strong&gt;DECLARING A VARIABLE WITHIN A VARIABLE&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You can also declare a variable within another variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:root {
--background-color: orange;
--border: 1px solid var(--background-color);
}

button {
border: var(--border);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#fallback-values"&gt;
  &lt;/a&gt;
  &lt;strong&gt;FALLBACK VALUES&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Fallback values&lt;/strong&gt; are used if the variable value given as the first argument isn't defined or has an invalid value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body {
background-color: var(--main-background-color, green);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If &lt;code&gt;--main--background-color&lt;/code&gt; is not defined or declared, the color of the background will be green. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;h1 {
color: var(--main-text-color, var(--text-color, green));
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Notice any difference between **Example 1&lt;/strong&gt; and &lt;strong&gt;Example 2&lt;/strong&gt;?** &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2&lt;/strong&gt; have more than one fallback value. In &lt;strong&gt;Example 2:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;--text-color&lt;/code&gt; is the fallback value for &lt;code&gt;--main-text-color&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt; is the fallback value for &lt;code&gt;--text-color&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Color will be green  if ~--main-text-color~ and ~--text-color~ are not defined &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope you understand?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fallback values&lt;/strong&gt; only accept two parameters, everything following the first comma is the second parameter. If the first parameter is provided the fallback will fail.&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#advantages-of-using-css-variables"&gt;
  &lt;/a&gt;
  &lt;strong&gt;ADVANTAGES OF USING CSS VARIABLES&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Makes the code easier to read(understandable).&lt;/li&gt;
&lt;li&gt;Makes it much easier to change the color values.&lt;/li&gt;
&lt;li&gt;CSS variables can be declared anywhere, it is flexible.&lt;/li&gt;
&lt;li&gt;CSS variables help remove redundancy In code.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CONCLUSION&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The ability to maintain and reference information in more than one location is a huge benefit of CSS variables. This allows us to easily update information and not have to go into every place we used that information. They also make it easier to read and understand code and they make it easier to work with other developers on a project.&lt;/p&gt;

&lt;p&gt;If you have any questions about &lt;strong&gt;CSS variables&lt;/strong&gt;, you can leave them in the comment section below and I'll be happy to answer every single one.&lt;/p&gt;

&lt;p&gt;If you found this article helpful, please like and share it 💙.&lt;/p&gt;

&lt;p&gt;That's all for today! 😁 You reached the end of the article 😍.&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
