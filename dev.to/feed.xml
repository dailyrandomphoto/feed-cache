<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Class Inheritance In Python</title>
      <author>Alvison Hunter Arnuero | Front-End Web Developer</author>
      <pubDate>Thu, 25 Nov 2021 04:59:03 +0000</pubDate>
      <link>https://dev.to/allwissendjager/class-inheritance-in-python-4koa</link>
      <guid>https://dev.to/allwissendjager/class-inheritance-in-python-4koa</guid>
      <description>&lt;p&gt;&lt;strong&gt;Howdie, folks!&lt;/strong&gt; Today we are going to learn a bit about the vast world of &lt;em&gt;**inheritance&lt;/em&gt;* from the realms of the OOP, or Object Oriented Programming: Are you guys ready for this amazing adventure? If so, let's go, pals!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-inheritance"&gt;
  &lt;/a&gt;
  What is inheritance?
&lt;/h2&gt;

&lt;p&gt;Perhaps you are now thinking in that old grumpy auntie of yours that always pulled your cheeks when you were little and that recently passed away and left a fortune for some of her relatives. If that was your case, then let me tell you that we are going to talk about a different type of inheritance.&lt;/p&gt;

&lt;p&gt;In the programming world, inheritance allows us to define a class that could possibly and positively inherit all of the methods and properties from another class, usually called the parent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Parent class&lt;/strong&gt; is the class being inherited from, also known as base class. We usually call it &lt;strong&gt;Padre&lt;/strong&gt; in Spanish.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Child class&lt;/strong&gt; this one inherits properties and methods from another class, also known as derived class. This is &lt;strong&gt;Hija&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#parent-class-creation"&gt;
  &lt;/a&gt;
  Parent Class Creation
&lt;/h3&gt;

&lt;p&gt;We will start building the parent class first. Any class can be a parent, hence, we will proceed to write the code using the regular classes syntax and structure, as any other class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Represents any school member.
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Initialized SchoolMember for: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Tell my details.
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Name: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; Age: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You see? it was not that hard, pal! Now we have this blueprint of a school member that we could use as much as we want. But what happens if I just want to create another class and keep the parent structure plus some other features I might want to have in it? Well, that is where the Child class takes place to save the day.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#child-class-creation"&gt;
  &lt;/a&gt;
  Child Class Creation
&lt;/h3&gt;

&lt;p&gt;If we would like to integrate the functionality and characteristics from another class in our own class, we need to pass the &lt;strong&gt;Parent class or Clase Padre&lt;/strong&gt; as a parameter when creating this class that we will call the Child class, or better yet, &lt;strong&gt;La Clase Hija&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In the example below, we will create two new classes called Teacher and Student, both with the existing Parent properties from the initial &lt;strong&gt;SchoolMember Class&lt;/strong&gt;, but also creating some additional features of their own.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Represents a teacher.
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Teacher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;salary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salary&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Initialized Teacher: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Salary: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# Represents a student.
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Student&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;marks&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Initialized Student: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Marks: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this stage of the article, You might be wondering how to do when we already had a class and we would've liked to add additional properties and methods from another one, without losing its own independence as a class. &lt;/p&gt;

&lt;p&gt;Well, this can be done by overriding the inheritance from a parent class using for this the &lt;strong&gt;&lt;strong&gt;init&lt;/strong&gt;() function&lt;/strong&gt;. This function is automatically invoked every time the class is being used to create a new object. Let's take a look at this in the following example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Counselor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have successfully added the &lt;strong&gt;&lt;strong&gt;init&lt;/strong&gt;() function&lt;/strong&gt;, keeping the inheritance of the parent class, we are now ready to add functionality inside this function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-super-function"&gt;
  &lt;/a&gt;
  The Super Function
&lt;/h2&gt;

&lt;p&gt;The time has come for us to use some of the magic of the Object Oriented Programming and unleash one of its secret powers: There is a fantastic function called &lt;strong&gt;super()&lt;/strong&gt; that allows the child class to inherit all the methods and properties from its parent. &lt;/p&gt;

&lt;p&gt;If it happens in real life with our kids with the parent characteristics and abilities, why not in programming with OOP classes as well, right folks?&lt;/p&gt;

&lt;p&gt;Keep in mind that when using this function, you do not have to use the name of the parent element, it will automatically inherit the methods and properties from its parent.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Principal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#additional-properties-and-methods"&gt;
  &lt;/a&gt;
  Additional Properties and Methods
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Wait a minute:&lt;/strong&gt; All of this sounded great and stuff but, how do we go about adding our own methods and properties after this step? Do we still have a chance to do that or not?&lt;/p&gt;

&lt;p&gt;Well, pals, we actually can! let's learn about it in the following example where we will add the phone property to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Nurse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;phone&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you might've noticed, the phone property cannot be fixed, and passed into the Nurse class when creating SchoolMembers objects. So, the question arises: how do we pass the non-fixed value to it? Well, we simply add another argument in the &lt;strong&gt;init&lt;/strong&gt;() function as the example shows.&lt;/p&gt;

&lt;p&gt;Whenever feasible, We can definitively add methods to this class. Let's take a look at the updated example below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Nurse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;phone&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;"Hello, "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;".&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Your Age is "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;" years old and your Phone is: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok, enough technicality already: let's test this bad boys out by creating several instances of these classes and adding their respective parameters as needed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Let us put these babies in action by creating instances, shall we?
&lt;/span&gt;&lt;span class="n"&gt;sm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Bill Gates"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Teacher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Guido Van Rossum"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;95000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Student&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Alvison Hunter"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;900&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counselor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Mark Zuckerberg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Principal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Evan You"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Nurse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Sarah Drasner"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;99887766&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we need to create a list with all these instances to iterate over each of them afterwards, just as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Declare an list containing all these instances
&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;member&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# Let's print each of their details
&lt;/span&gt;    &lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-source-code"&gt;
  &lt;/a&gt;
  Final Source Code:
&lt;/h2&gt;

&lt;p&gt;All right, folks, we have come to the end of this article. Your adventure started with a quick look at single inheritance and then we learned how to call superclass methods and properties easily with super() function. &lt;/p&gt;

&lt;p&gt;This is only the beginning of a very deep topic, full of more interesting features, however, we have tried to put together enough information to at least cover the basic starting point of this.&lt;/p&gt;

&lt;p&gt;Please find below the final source code for you guys to test it out and play with it. Please leave your comments with some other approaches or better solutions, to update the post if needed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Last&lt;/strong&gt; but not least, If you are a &lt;strong&gt;Python enthusiast&lt;/strong&gt;, I kindly invite you to take a look at my &lt;a href="https://bit.ly/3p9hpqj"&gt;Python and JavaScript&lt;/a&gt; YouTube Channel tutorials and subscribe whenever possible to help our community grow.&lt;/p&gt;

&lt;p&gt;I'd like to give a special shout-out to my sister &lt;strong&gt;Kathya&lt;/strong&gt; for bringing Python to my head today. This event got me inspired to write this article after I spoke to hear about the beauty of this fantastic programming language.&lt;/p&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Represents any school member.
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Initialized SchoolMember for: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Tell my details.
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Name: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; Age: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# Represents a teacher.
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Teacher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;salary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salary&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Initialized Teacher: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Salary: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# Represents a student.
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Student&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;marks&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Initialized Student: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Marks: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Counselor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Principal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Nurse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;phone&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;"Hello, "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;".&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Your Age is "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;" years old and your Phone is: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# Let us put all of these babies in action by creating instances, shall we?
&lt;/span&gt;&lt;span class="n"&gt;sm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SchoolMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Bill Gates"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Teacher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Guido Van Rossum"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;95000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Student&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Alvison Hunter"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;900&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counselor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Mark Zuckerberg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Principal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Evan You"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Nurse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Sarah Drasner"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;99887766&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Declare an list containing all these instances
&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;member&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# Let's print each of their details
&lt;/span&gt;    &lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tell&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;❤️ If you've enjoyed this article, that motivates to write more!&lt;br&gt;
🦄 If you truly consider this article helped you wholly!&lt;br&gt;
🔖 If you need to check back on this article later on.&lt;br&gt;
🤔 Please leave your comment, your opinion very important.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>oop</category>
      <category>beginners</category>
    </item>
    <item>
      <title>300+ Nodejs Projects for Beginners – Easy Ideas to Get Started Coding Nodejs [Beginners - Advance]</title>
      <author>GCode</author>
      <pubDate>Thu, 25 Nov 2021 04:22:22 +0000</pubDate>
      <link>https://dev.to/gzcode/300-nodejs-projects-for-beginners-easy-ideas-to-get-started-coding-nodejs-beginners-advance-4p91</link>
      <guid>https://dev.to/gzcode/300-nodejs-projects-for-beginners-easy-ideas-to-get-started-coding-nodejs-beginners-advance-4p91</guid>
      <description>&lt;p&gt;If you have decided to build your career in &lt;span&gt;NodeJS &lt;/span&gt;development, we have gathered a list of &lt;span&gt;nodeJS projects for beginners&lt;/span&gt; for all node enthusiasts to build highly scalable &lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/nodejs-project-for-beginners/&amp;amp;ved=2ahUKEwiOlt_I6e7zAhXXb30KHRuwBEIQFnoECAUQAQ&amp;amp;usg=AOvVaw1LC_Y25wyupI6_tdH89kg1" rel="noreferrer noopener"&gt;web applications&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These best &lt;span&gt;nodeJS projects for beginners&lt;/span&gt; will help you gain knowledge about core node concepts, train your skill level, build a superb work portfolio, and get hired for your dream job.&lt;/p&gt;
&lt;p&gt;When you start building your first projects, it’s highly recommended for beginners in coding to create a repository for each of your projects so you will be able to learn &lt;em&gt;git&lt;/em&gt; and show your coding expertise to future employers. &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/nodejs-project-for-beginners/&amp;amp;ved=2ahUKEwiOlt_I6e7zAhXXb30KHRuwBEIQFnoECAUQAQ&amp;amp;usg=AOvVaw1LC_Y25wyupI6_tdH89kg1"&gt;300+ Nodejs Projects for Beginners – Easy Ideas to Get Started Coding Nodejs &lt;/a&gt;&lt;/b&gt; &lt;/p&gt;






</description>
    </item>
    <item>
      <title>Black Friday Lifetime Deal 90% Off Offer🎁🎁</title>
      <author>Mahfuzul Islam Nabil</author>
      <pubDate>Thu, 25 Nov 2021 04:12:57 +0000</pubDate>
      <link>https://dev.to/mahfuzulnabil/black-friday-lifetime-deal-90-off-offer-1ee5</link>
      <guid>https://dev.to/mahfuzulnabil/black-friday-lifetime-deal-90-off-offer-1ee5</guid>
      <description>&lt;p&gt;💥Black Friday Lifetime Deal Going on &lt;a href="http://www.uihut.com"&gt;www.uihut.com&lt;/a&gt;&lt;br&gt;
🔥🔥Get Lifetime Access for only $99. For Discount, Use the "nab10" Coupon and get a 10% Extra Discount.🤑🤑 5 Days Left🔥&lt;br&gt;
Download 15,000+ Design Resources&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d9-t5fqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfg2sgxcm4lqyam4cy4d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d9-t5fqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfg2sgxcm4lqyam4cy4d.jpg" alt="Image description" width="880" height="667"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blackfriday</category>
      <category>blackfridaydeal</category>
      <category>blackfridayuihutdeal</category>
      <category>webdev</category>
    </item>
    <item>
      <title>VS Code extension improve your project version management</title>
      <author>Joe</author>
      <pubDate>Thu, 25 Nov 2021 04:03:58 +0000</pubDate>
      <link>https://dev.to/joejo/how-to-developing-in-a-multi-version-tob-web-project-21l0</link>
      <guid>https://dev.to/joejo/how-to-developing-in-a-multi-version-tob-web-project-21l0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;Our team mainly maintains Tob web projects, and each project has multiple versions that are maintained concurrently. For example, after project A is deloyed to different customers for use, subsequent iterations are upgraded in the form of versions for customers to pay for, and customers can also purchase different versions , After a long time, V1.0, V2.0, V3.0 will appear... This kind of situation where multiple versions are used by different customer groups, in the normal development process, a certain feature or bugfix is in V1.0 After the above development is completed, if you want to apply to other versions such as 2.0, 3.0..., you have to submit one by one and then check out to switch between different versions for development and maintenance. The code with similar versions is okay. Cherry-pick can directly apply this commit, and When the version span is large and the business code gap is large, this action of switching the checkout branch is indispensable. Even if you clone multiple codes by creating a new folder, you need to open a lot of vscodes to switch back and forth. What's more troublesome is that if you want to run a project self-test or development preview, you also face tedious and time-consuming operations such as frequent modules-reinstallation of dependencies, which wilfully consumes our development time cost.&lt;/p&gt;

&lt;p&gt;How to improve this situation through technical means? Or if there is a tool or plug-in that can list all versions of files, so that files between different versions can be easily modified or run services back and forth in the current editor panel.&lt;/p&gt;

&lt;p&gt;Based on this idea, i decided to develop a vscode plug-in to implement a tool for checking out multiple versions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;p&gt;The development tool used in our team is vscode, so we can solve the above problems by developing a plug-in. The main functions of the plug-in should have:&lt;br&gt;
     · List all branches (ie versions) for checkout;&lt;br&gt;
     · The checked out branch and the current project are listed side by side in the same editor panel, which is convenient for real-time development;&lt;br&gt;
     · Add terminal opening support;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h2&gt;

&lt;p&gt;Use git for project version or branch management.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#implementation-analysis"&gt;
  &lt;/a&gt;
  Implementation analysis:
&lt;/h4&gt;

&lt;p&gt;​     · List branches: All major versions can be easily identified with incremental branch names, for example: v1.0.0, v2.0.0&lt;br&gt;
​     · Version check out: use git worktree&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#list-branches"&gt;
  &lt;/a&gt;
  List branches
&lt;/h4&gt;

&lt;p&gt;Use the third-party library simple-git to call the git command to find out all branches:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hvqsvRC7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuzjk5144yxeg9a969kf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hvqsvRC7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuzjk5144yxeg9a969kf.png" alt="Image description" width="740" height="144"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#version-checkout"&gt;
  &lt;/a&gt;
  Version checkout
&lt;/h4&gt;

&lt;p&gt;Using git-worktree: Git worktree is a multi-repository and multi-work area management model launched by git in 15 years: a git repository can support multiple work trees, corresponding to different branches. We create a (main) working area (tree) (main working tree) in git through "git init" or "git clone".&lt;br&gt;
Specific information: &lt;a href="https://git-scm.com/docs/git-worktree"&gt;https://git-scm.com/docs/git-worktree&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MZBgIaSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw4ho5wgy3uaa06jicqi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZBgIaSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw4ho5wgy3uaa06jicqi.png" alt="Image description" width="737" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#plugin"&gt;
  &lt;/a&gt;
  Plug-in
&lt;/h2&gt;

&lt;p&gt;According to the above implementation scheme, the implemented vscode plugin has been released (based on vscode 1.62+): version shuttle &lt;br&gt;
Plug-in Link:&lt;a href="https://marketplace.visualstudio.com/items?itemName=liquidityVision.version-shuttle"&gt;https://marketplace.visualstudio.com/items?itemName=liquidityVision.version-shuttle&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#instructions"&gt;
  &lt;/a&gt;
  Instructions
&lt;/h2&gt;

&lt;p&gt;Lists all branches (ie versions):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Cm2NFK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0989e4ba3c6649a3af3db7a03c52e893%257Etplv-k3u1fbpfcp-watermark.image" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Cm2NFK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0989e4ba3c6649a3af3db7a03c52e893%257Etplv-k3u1fbpfcp-watermark.image" alt="Image description" width="678" height="616"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Checkout branch (ie version):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D7qezDzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/45721313966b436a8c932a9d892182d6%257Etplv-k3u1fbpfcp-watermark.image" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D7qezDzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/45721313966b436a8c932a9d892182d6%257Etplv-k3u1fbpfcp-watermark.image" alt="Image description" width="678" height="616"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope it may be handy for you, thanks !&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vscode</category>
      <category>react</category>
      <category>github</category>
    </item>
    <item>
      <title>100+ amazing 🤩 GitHub repositories that will help you 🪄 make a Beautiful Project</title>
      <author>GCode</author>
      <pubDate>Thu, 25 Nov 2021 03:37:32 +0000</pubDate>
      <link>https://dev.to/gzcode/100-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-21m2</link>
      <guid>https://dev.to/gzcode/100-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-21m2</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Today I would like to give examples of good GitHub repositories that will help you implement complex animations, as well as useful functions in your projects.&lt;/p&gt;
&lt;p&gt;So let's get started &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/10-awesome-github-repos-every-web-developer-should-know/&amp;amp;ved=2ahUKEwiw1e_qpqbzAhU78HMBHVvBAWkQFnoECBAQAQ&amp;amp;usg=AOvVaw1YdY91hlP3suK6HGMF0MXW"&gt;100+ amazing 🤩 GitHub repositories that will help you 🪄 make a Beautiful Project&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Dev Profile with GitHub Apis</title>
      <author>Mukul Rajpoot</author>
      <pubDate>Thu, 25 Nov 2021 02:57:13 +0000</pubDate>
      <link>https://dev.to/mukulrajpoot262610/dev-profile-with-github-apis-2bg6</link>
      <guid>https://dev.to/mukulrajpoot262610/dev-profile-with-github-apis-2bg6</guid>
      <description>&lt;p&gt;Hey guys, Here is an GitHub Profiler. It is built using nextjs, tailwind, GitHub Rest apis and deployed on Vercel. &lt;/p&gt;

&lt;p&gt;Let me know what do you think guys.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screenshot"&gt;
  &lt;/a&gt;
  ScreenShot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KXVc5qke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d7mgykk2oecz0iymz7ko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KXVc5qke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d7mgykk2oecz0iymz7ko.png" alt="Image description" width="880" height="875"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github-repo"&gt;
  &lt;/a&gt;
  GitHub Repo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/mukulrajpoot262610/github_profiler"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#live-link"&gt;
  &lt;/a&gt;
  Live Link
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://dev-profiler.vercel.app/"&gt;Dev Profiler&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>nextjs</category>
      <category>tailwindcss</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Dynamic Pipeline Orchestration using CodePipeline, CodeBuild and Step Functions</title>
      <author>omuthu</author>
      <pubDate>Thu, 25 Nov 2021 01:31:38 +0000</pubDate>
      <link>https://dev.to/aws-builders/dynamic-build-orchestration-using-codepipeline-codebuild-and-step-functions-2kpa</link>
      <guid>https://dev.to/aws-builders/dynamic-build-orchestration-using-codepipeline-codebuild-and-step-functions-2kpa</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;AWS CodePipeline helps in orchestrating CI/CD pipeline all the way from building and testing to deploying applications, from development to production environments.&lt;/p&gt;

&lt;p&gt;However, one of the limitations of AWS CodePipeline is its inability to dynamically execute or skip any pipeline action.&lt;/p&gt;

&lt;p&gt;This post demonstrates how to setup a CI/CD pipeline to dynamically orchestrate and execute actions based on inputs&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-services"&gt;
  &lt;/a&gt;
  AWS Services
&lt;/h2&gt;

&lt;p&gt;This solution uses the following AWS services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS CodeCommit – Source Control&lt;/li&gt;
&lt;li&gt;AWS CodeBuild – Build System&lt;/li&gt;
&lt;li&gt;AWS CodePipeline – Continuous Delivery&lt;/li&gt;
&lt;li&gt;AWS Step Functions - Workflow automation using state machines&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#solution-overview"&gt;
  &lt;/a&gt;
  Solution Overview
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;A change or commit to the code in the CodeCommit application repository triggers CodePipeline with the help of a CloudWatch event.&lt;/li&gt;
&lt;li&gt;The pipeline downloads the code from the CodeCommit repository, initiates the first build using CodeBuild and securely saves the built artifact to an S3 bucket.&lt;/li&gt;
&lt;li&gt;Once build succeeds, pipeline triggers a Step Function Workflow&lt;/li&gt;
&lt;li&gt;Step Function workflow uses artifact from previous build as input and iterates for each item in the input&lt;/li&gt;
&lt;li&gt;For each input, it triggers respective CodeBuild or Pass state using Choice state &lt;/li&gt;
&lt;li&gt;Step Functions will succeed once all invoked builds suceed&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#architecure"&gt;
  &lt;/a&gt;
  Architecure
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5eCu4suN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wai5c6w2hit0peiil8sp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5eCu4suN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wai5c6w2hit0peiil8sp.png" alt="CodePipeline CodeBuild StepFunctions Orchestration" width="880" height="598"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#codecommit"&gt;
  &lt;/a&gt;
  CodeCommit
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Created a repo and have a file "sample_source.json" with below content &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;{"services":["service_A", "service_B"]}&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#codebuild"&gt;
  &lt;/a&gt;
  CodeBuild
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#first-codebuild"&gt;
  &lt;/a&gt;
  First CodeBuild
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;It copies &lt;a href="https://github.com/omuthu-personal/codepipeline-stepfunction-integrations/blob/master/source/sample_source.json"&gt;source file&lt;/a&gt; and generates ABC.json which is passed as output artifact and consumed by next Step Function&lt;/li&gt;
&lt;li&gt;This is optional when codebuild can generate a similar json file with list of services to be passed as input to step functions&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/omuthu-personal/codepipeline-stepfunction-integrations/blob/master/codebuild/first-codebuild-buildspec.yaml"&gt;BuildSpec&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#servicea-and-serviceb-codebuild"&gt;
  &lt;/a&gt;
  ServiceA and ServiceB CodeBuild
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;These are the actual builds invoked by step functions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/omuthu-personal/codepipeline-stepfunction-integrations/blob/master/codebuild/serviceA-buildspec.yaml"&gt;ServiceA BuildSpec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/omuthu-personal/codepipeline-stepfunction-integrations/blob/master/codebuild/serviceB-buildspec.yaml"&gt;ServiceB BuildSpec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-functions"&gt;
  &lt;/a&gt;
  Step Functions
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Y96_I7J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccdl114nf8ae4paydohx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Y96_I7J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccdl114nf8ae4paydohx.png" alt="State Machine" width="491" height="299"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/omuthu-personal/codepipeline-stepfunction-integrations/blob/master/stepfunctions/state-machine.json"&gt;State Machine json&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The artifact passed as json file will be received as json input by step functions state machine&lt;/li&gt;
&lt;li&gt;It receives the input using a "Map" state which supprts iteration&lt;/li&gt;
&lt;li&gt;Within iterator, "Choice" state is used to validate the values and invoke respective "Task" or "Pass" state &lt;/li&gt;
&lt;li&gt;The "Task" state in our scenario will invoke a CodeBuild task using "Optimized Integrations"&lt;/li&gt;
&lt;li&gt;CodeBuild task supports only sync invocation which means the next state following CodeBuild execution has to wait until it finishes.&lt;/li&gt;
&lt;li&gt;However, since the iterator uses a "Choice" state, each iteration is independent and happens in parallel&lt;/li&gt;
&lt;li&gt;In this example, for "ServiceA" and "ServiceB", CodeBuild is executed and "ServiceC" is set as a "pass" state&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#note-ensure-enough-permissions-are-granted-for-stepfunctions-iam-role-to-make-relevant-service-invocations"&gt;
  &lt;/a&gt;
  Note: Ensure enough permissions are granted for StepFunctions IAM role to make relevant service invocations
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/codebuild-iam.html"&gt;StepFunction IAM permissions for CodeBuild&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#codepipeline"&gt;
  &lt;/a&gt;
  CodePipeline
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m8s9boDv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r44f3ly3b1wjzn4uz687.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m8s9boDv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r44f3ly3b1wjzn4uz687.png" alt="CodePipeline Definition" width="880" height="826"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/omuthu-personal/codepipeline-stepfunction-integrations/blob/master/codepipeline/codepipeline-definition.json"&gt;CodePipeline Definition&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once all the above steps are done, all we need to do is to create pipeline in CodePipeline&lt;/li&gt;
&lt;li&gt;Create Source stage using any SCM, I used CodeCommit&lt;/li&gt;
&lt;li&gt;Create a Build stage using existing "First Codebuild" build project&lt;/li&gt;
&lt;li&gt;Create next "Step Sunctions" stage with following params

&lt;ul&gt;
&lt;li&gt;Action Provider: Step Functions&lt;/li&gt;
&lt;li&gt;Input artifacts: Output Artifact from previous "First CodeBuild"&lt;/li&gt;
&lt;li&gt;State machine ARN: Choose the recently created stateMachine ARN&lt;/li&gt;
&lt;li&gt;Input type: File Path&lt;/li&gt;
&lt;li&gt;Input: ABC.json (use whatever file is sent in output artifact from previous build)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#execution"&gt;
  &lt;/a&gt;
  Execution
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Release a change to test the pipeline&lt;/li&gt;
&lt;li&gt;In this example, if services list changes in "sample_source.json", step functions will execute only those states&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This solution demonstrated the invocation of Step Functions from CodePipeline and Step Functions execution executing builds in CodeBuild dynamically based upon the received input&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/omuthu-personal/codepipeline-stepfunction-integrations"&gt;Code Repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/omuthu/"&gt;My LinkedIn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>stepfunctions</category>
      <category>codebuild</category>
    </item>
    <item>
      <title>A quick guide for package.json dependencies management</title>
      <author>Gabriel José Oliveira</author>
      <pubDate>Thu, 25 Nov 2021 00:49:06 +0000</pubDate>
      <link>https://dev.to/gjoliveira/a-quick-guide-for-packagejson-dependencies-management-ada</link>
      <guid>https://dev.to/gjoliveira/a-quick-guide-for-packagejson-dependencies-management-ada</guid>
      <description>&lt;p&gt;If you've just studied html, css and basic javascript and are starting with some framework that uses node, like react, you may have some doubts about managing dependencies. &lt;/p&gt;

&lt;p&gt;So let's take a look at some useful commands and get rid of the fear of play with package.json!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-start"&gt;
  &lt;/a&gt;
  let's start
&lt;/h2&gt;

&lt;p&gt;First, let's create the package.json file using the following command in the terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm init -y&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;With this command, we generate a standard package.json file like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "name": "project-name",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;amp;&amp;amp; exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When working with node, some dependencies are used for development purposes and others will remain until the end. So we will have two fields:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"dependencies": {},
"devDependencies: {}"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's start by installing a normal dependency and then we'll pass it on to the development dependencies and understand how to manipulate their versions. Let's use express as example:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install express&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"dependencies": {
    "express": "^4.17.1"
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's understand what this symbol and numbers represent:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"dependencies": {
    //          prefix
    "express": "^    4.     17.    1",
    //               major  minor  patch
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Patch: normally, when a bug is fixed, the patch value is updated.&lt;/p&gt;

&lt;p&gt;Minor: when new features are added but compatibility is not broken, the minor value is updated.&lt;/p&gt;

&lt;p&gt;Major: when new features are added and there is a break in compatibility with previous features, the major value is updated.&lt;/p&gt;

&lt;p&gt;Prefix: some symbols used by the node to update dependencies using the &lt;code&gt;npm update&lt;/code&gt; command, such as ^ or ~. &lt;/p&gt;

&lt;p&gt;We can use them to install a dependency like: &lt;code&gt;npm install express@~2.0.0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When we use the "^", we are saying that we only want to keep the "patch" and "minor" up to date.&lt;/p&gt;

&lt;p&gt;When we use the "~", we are saying that we only want to keep the "minor" up to date.&lt;/p&gt;

&lt;p&gt;Without the prefix we are looking for an exact version. &lt;/p&gt;

&lt;p&gt;If we use "-E" like &lt;code&gt;npm install express -E&lt;/code&gt;, there will be no prefix and the dependency will never be updated.&lt;/p&gt;

&lt;p&gt;Now, what if we want to move express into the &lt;code&gt;"devDependencies: {}"&lt;/code&gt;? For that we use the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install express --save-dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And with that our express will be inside &lt;code&gt;"devDependencies: {}"&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"devDependencies": {
    "express": "^4.17.1"
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get our express back to production dependencies, we use the following command: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install express --save-prod&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Finally, we can use &lt;code&gt;npm install express@latest&lt;/code&gt; to get the latest version (may not be stable) and &lt;code&gt;npm uninstall express&lt;/code&gt; to uninstall the dependency.&lt;/p&gt;

&lt;p&gt;To list all our dependencies, we can use &lt;code&gt;npm ls&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;But sometimes our projects have a lot of dependencies, so if we just want to see the main ones we've installed, we can use a depth control like: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm ls --depth=0&lt;/code&gt; and keep increasing.&lt;/p&gt;

&lt;p&gt;To check if any dependencies are out of date we can use &lt;code&gt;npm outdated&lt;/code&gt; and we will be informed of updates according to the prefixes used.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-hope-you-have-enjoyed"&gt;
  &lt;/a&gt;
  I hope you have enjoyed!
&lt;/h3&gt;

&lt;p&gt;And if you have any other command tips, leave it in the comments.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>npm</category>
    </item>
    <item>
      <title>How is AI used for hiring?</title>
      <author>Mage</author>
      <pubDate>Thu, 25 Nov 2021 00:36:54 +0000</pubDate>
      <link>https://dev.to/mage_ai/how-is-ai-used-for-hiring-22mb</link>
      <guid>https://dev.to/mage_ai/how-is-ai-used-for-hiring-22mb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;Artificial Intelligence (AI) is shifting recruiting from a human to largely computer-based process. AI is being used to assist HR in the entire process of candidate selection — from curating job descriptions to conducting early-stage interviews. While this can greatly reduce the number of applications that employers shift through, some have voiced legal and ethical concerns when it comes to AI-based recruiting. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Job description&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Candidate selection &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Video interviews &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Legal &amp;amp; ethical implications&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Conclusion&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#job-descriptions"&gt;
  &lt;/a&gt;
  Job descriptions
&lt;/h2&gt;

&lt;p&gt;AI is assisting HR write job descriptions that attract a diverse and qualified candidate pool. The job description is one of the most important steps in the hiring process, as it's a potential candidate’s first interaction with the company and role. Using proper language when writing these descriptions can increase the chances that the right candidates apply, and no group feels ostracized from the role. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://textio.com/"&gt;Textio&lt;/a&gt; is one company using augmented writing to create more inclusive job descriptions. Their algorithm takes in millions of job postings and uses natural language processing to highlight common phrases, trends, and ways to be more inclusive.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dSBcYmRv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bvwc9drzdsn0gsszcwt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSBcYmRv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bvwc9drzdsn0gsszcwt.png" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#candidate-selection"&gt;
  &lt;/a&gt;
  Candidate selection
&lt;/h2&gt;

&lt;p&gt;When looking at job postings on LinkedIn, it’s not uncommon to see thousands of applicants who have applied for a role. Despite the size of the recruiting team, it becomes impossible to properly go through the abundance of applications. AI is being used to assist in filtering through applications and candidates. Work experience, skills, and location can all be used to sort applications. &lt;/p&gt;

&lt;p&gt;LinkedIn is using AI to improve user experience by showing relevant postings within their feed, boosting useful content, and showing the right candidates to recruiters. Its AI is also helping to connect a more diverse talent pool with recruiters, showing them a much wider selection of candidates than they might have sought out on their own. Companies are also given data on gender breakdowns of other companies, which they can use to gain better insight on increasing more inclusive hiring practices. &lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HKqbwjH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ey15ei4zyih712yuesgz.png" alt="Image description" width="587" height="357"&gt;&lt;em&gt;From a &lt;a href="https://blog.linkedin.com/2014/06/12/linkedins-workforce-diversity"&gt;survey&lt;/a&gt; by LinkedIn&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#video-interviews"&gt;
  &lt;/a&gt;
  Video interviews
&lt;/h2&gt;

&lt;p&gt;More companies have begun using AI to conduct the first stage interview processes. Doing so in pursuit of adding more fairness in recruiting, increasing the number of applicants interviewed, or getting more data-driven results from interviewers. &lt;a href="http://hirevue/"&gt;Hirevue&lt;/a&gt; is a company pioneering the jump to AI conducted interviews. &lt;/p&gt;

&lt;p&gt;Hirevue uses video analysis to analyze a candidate's facial movements, body language, word choice, and tone of voice. After the interview is conducted, it ranks each candidate and gives them a score which is then passed off to a hiring manager. This type of interview method allows more candidates the chance to interview as a human can assess the top performers instead of conducting each first stage interview.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ost4b6t5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cx3nq0z88vh5aonncr66.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ost4b6t5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cx3nq0z88vh5aonncr66.png" alt="Image description" width="763" height="526"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#legal-amp-ethical-implications"&gt;
  &lt;/a&gt;
  Legal &amp;amp; ethical implications
&lt;/h2&gt;

&lt;p&gt;With more companies implementing AI software into the hiring process, applicants and lawmakers alike have begun to question the ethics of having machines vet candidates. When using AI to scrape through hundreds of resumes and candidate profiles, there is concern that the AI is only picking out candidates with certain keywords on their resume instead of looking at the resume as a whole. Moreover, while AI is being used to increase inclusivity and diversity in roles, AI software can still be biased. The input data entered into the algorithm is what the machine will look for and run on when picking out qualified candidates.&lt;/p&gt;

&lt;p&gt;If that input data is from an industry that has historically had a lack of diversity, the AI could fail to pick out diverse candidates. These concerns are amplified when it comes to AI conducted video interviews. Some see these interviews as assessing candidates by superficial measurements that can disadvantage non-native English speakers, women, and people of color. Hirevue has claimed that these statements aren’t showing the full picture, that algorithms are much more unbiased than humans.&lt;/p&gt;

&lt;p&gt;While the law has historically failed to keep up with AI, Illinois enacted the first &lt;a href="https://www.ilga.gov/legislation/ilcs/ilcs3.asp?ActID=4015&amp;amp;ChapterID=68"&gt;Artificial Intelligence Video Interview Act&lt;/a&gt;. The law has two components: notice and consent for video protection rights. Under these guidelines, the company using AI must notify candidates that AI is being used, what characteristics they will be evaluated for, and consent from the candidate to use the AI system. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;AI is changing the recruiting process from every stage of recruitment: writing job descriptions, screening applications, and conducting interviews. While it’s integration shows promising results of generating an unbiased way of recruiting, there are many legitimate concerns regarding the ethics of computerized recruitment. While AI technology still has some room to grow and better itself, the prospect of gathering data from every stage of the hiring process is exciting as it can result in much better data-driven decisions.  &lt;/p&gt;

</description>
      <category>career</category>
      <category>technology</category>
      <category>questions</category>
    </item>
    <item>
      <title>Reminder — Join the GitHub Actions Hackathon 2021 on DEV ⏰ </title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 25 Nov 2021 00:11:29 +0000</pubDate>
      <link>https://dev.to/devteam/reminder-join-the-github-actions-hackathon-2021-on-dev-6h2</link>
      <guid>https://dev.to/devteam/reminder-join-the-github-actions-hackathon-2021-on-dev-6h2</guid>
      <description>&lt;h4&gt;
  &lt;a href="#this-years-github-actions-hackathon-on-dev-closes-on-december-8th-2021-midnight-pst-ie-8-am-utc-the-following-day"&gt;
  &lt;/a&gt;
  &lt;strong&gt;This year's GitHub Actions Hackathon on DEV closes on December 8th, 2021 @ midnight PST&lt;/strong&gt; &lt;em&gt;(i.e. 8 AM UTC the following day)&lt;/em&gt;
&lt;/h4&gt;




&lt;p&gt;It's been so much fun watching submissions come in for the &lt;strong&gt;&lt;a href="https://dev.to/devteam/join-us-for-the-2021-github-actions-hackathon-on-dev-4hn4"&gt;2021 GitHub Actions Hackathon on DEV&lt;/a&gt;&lt;/strong&gt;. I highly encourage all of you to check out all the submissions so far — impressive stuff!&lt;/p&gt;

&lt;p&gt;As a reminder, this contest challenges you to utilize GitHub Actions (either new or existing) to create a customized and &lt;em&gt;usable&lt;/em&gt; workflow across five categories (Maintainer Must-Haves, DIY Deployments, Interesting IoT, Phone Friendly, &amp;amp; Wacky Wildcards). The reward? DEV Community glory (signaled with a limited-edition badge) — oh, and a chunk of the $10,000 cash prize pool plus additional swag 🤑 &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gtgt-full-details-and-participation-rules-here"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://dev.to/devteam/join-us-for-the-2021-github-actions-hackathon-on-dev-4hn4"&gt;&amp;gt;&amp;gt; Full details and participation rules here&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;




&lt;h3&gt;
  &lt;a href="#additional-resources"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Additional resources&lt;/strong&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;If you have any questions about Actions, GitHub, or the hackathon in general, please refer to this help thread, which is being monitored by the GitHub and DEV teams&lt;/em&gt;:&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/devteam" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTihtlIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nJ87SGF6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1/0213bbaa-d5a1-4d25-9e7a-10c30b455af0.png" alt="The DEV Team" width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zg3sT9Js--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vHKcEiTe--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/3/13d3b32a-d381-4549-b95e-ec665768ce8f.png" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devteam/github-actions-hackathon-2021-help-thread-1lk0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;GitHub Actions Hackathon 2021 Help Thread&lt;/h2&gt;
      &lt;h3&gt;dev.to staff for The DEV Team ・ Nov 8 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#githubactions&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#help&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;If all you need is some positive encouragement or if you want to connect with other participants, leave a comment in this thread&lt;/em&gt;:&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/devteam" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTihtlIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nJ87SGF6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1/0213bbaa-d5a1-4d25-9e7a-10c30b455af0.png" alt="The DEV Team" width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zg3sT9Js--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vHKcEiTe--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/3/13d3b32a-d381-4549-b95e-ec665768ce8f.png" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devteam/share-your-github-actions-hackathon-2021-updates-57k" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Share your GitHub Actions Hackathon 2021 Updates!&lt;/h2&gt;
      &lt;h3&gt;dev.to staff for The DEV Team ・ Nov 8 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#githubactions&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#happy-coding-and-enjoy-this-challenge-two-weeks-remain"&gt;
  &lt;/a&gt;
  Happy coding and enjoy this challenge! Two weeks remain!
&lt;/h2&gt;

</description>
      <category>meta</category>
      <category>actionshackathon21</category>
    </item>
    <item>
      <title>Manually Removing .NET SDKs from MacOS</title>
      <author>Justin Yoo</author>
      <pubDate>Thu, 25 Nov 2021 00:00:25 +0000</pubDate>
      <link>https://dev.to/justinyoo/manually-removing-net-sdks-from-macos-4jce</link>
      <guid>https://dev.to/justinyoo/manually-removing-net-sdks-from-macos-4jce</guid>
      <description>&lt;p&gt;.NET SDKs including .NET Core, .NET 5 and .NET 6 support cross-platform. For some reason, you might feel like removing the latest preview version of SDK or a certain version of SDK. You can then use many different methods to delete the SDK and runtime. In this post, I'm going to discuss the &lt;strong&gt;manual&lt;/strong&gt; way of removing a specific version of the .NET SDK and runtime from MacOS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation-paths-for-net-sdks-amp-runtimes"&gt;
  &lt;/a&gt;
  Installation Paths for .NET SDKs &amp;amp; Runtimes
&lt;/h2&gt;

&lt;p&gt;In your terminal in Mac OS, type the command, &lt;code&gt;dotnet --list-sdks&lt;/code&gt;, and you will see the whole list of .NET SDKs you've installed so far, including the full path.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4caJ9UZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sa0blogs.blob.core.windows.net/devkimchi/2021/11/removing-dotnet-sdks-from-macos-manually-01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4caJ9UZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sa0blogs.blob.core.windows.net/devkimchi/2021/11/removing-dotnet-sdks-from-macos-manually-01.png" alt="Installed .NET SDKs" width="880" height="689"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This time, run the command, &lt;code&gt;dotnet --list-runtimes&lt;/code&gt;, to get the whole list of the installed .NET runtimes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NiqWQBE7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sa0blogs.blob.core.windows.net/devkimchi/2021/11/removing-dotnet-sdks-from-macos-manually-02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NiqWQBE7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sa0blogs.blob.core.windows.net/devkimchi/2021/11/removing-dotnet-sdks-from-macos-manually-02.png" alt="Installed .NET Runtimes" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Did you find some differences between SDKs and runtimes, other than the paths? That's right. Although you say .NET 6, the SDK and the runtime versions are slightly different. The same goes to .NET 5, .NET Core 3.1 and .NET Core 2.1, etc. Therefore, you need to be careful when the time comes to delete both SDK and runtime manually.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you want to know more about the .NET SDK and runtime versions, visit this page, &lt;a href="https://docs.microsoft.com/dotnet/core/install/how-to-detect-installed-versions?pivots=os-macos&amp;amp;WT.mc_id=dotnet-50035-juyoo&amp;amp;ocid=AID3035186"&gt;How to check that .NET is already installed&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#deleting-net-sdk-and-runtime"&gt;
  &lt;/a&gt;
  Deleting .NET SDK and Runtime
&lt;/h2&gt;

&lt;p&gt;First of all, you can use the &lt;a href="https://docs.microsoft.com/dotnet/core/additional-tools/uninstall-tool?tabs=macos&amp;amp;WT.mc_id=dotnet-50035-juyoo&amp;amp;ocid=AID3035186"&gt;.NET Uninstall Tool&lt;/a&gt; to automatically delete the SDK and runtime you want. But as the doc says, sometimes it's not perfect deleting. Therefore, at the end of the day, you might want to delete each directory manually.&lt;/p&gt;

&lt;p&gt;As mentioned above, you should be aware that both the SDK and runtime versions of the same release are different. For example, at the time of this writing, the latest release of .NET 6 has the SDK version of &lt;code&gt;6.0.100&lt;/code&gt; and runtime version of &lt;code&gt;6.0.0&lt;/code&gt;. On the other hand, in case of .NET 5, the SDK version is &lt;code&gt;5.0.403&lt;/code&gt;, and the runtime version is &lt;code&gt;5.0.12&lt;/code&gt;. Therefore, to manually delete all the related directories, it is best to refer to this page, &lt;a href="https://docs.microsoft.com/dotnet/core/install/remove-runtime-sdk-versions?pivots=os-macos&amp;amp;WT.mc_id=dotnet-50035-juyoo&amp;amp;ocid=AID3035186"&gt;How to remove the .NET Runtime and SDK&lt;/a&gt;. But let's dive a little deep here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#manually-deleting-net-sdk"&gt;
  &lt;/a&gt;
  Manually Deleting .NET SDK
&lt;/h3&gt;

&lt;p&gt;Assuming you're deleting .NET 6 SDK. The latest version of the .NET 6 SDK is &lt;code&gt;6.0.100&lt;/code&gt; at the time of this writing. As there are only two relevant directories to SDK, run the following bash command:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The .NET SDKs have been completely removed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#manually-deleting-net-runtime"&gt;
  &lt;/a&gt;
  Manually Deleting .NET Runtime
&lt;/h3&gt;

&lt;p&gt;This time, let's delete the .NET 6 runtime directories. Then, run the following bash command. Beware that number of directories varies, depending on the version of the runtime. But, since this is the whole list of the runtime directories, there's no harm to run the command anyway.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The specified .NET runtime directories have all been removed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#manually-deleting-both-sdk-and-runtime-at-once-via-powershell"&gt;
  &lt;/a&gt;
  Manually Deleting Both SDK and Runtime at Once via PowerShell
&lt;/h2&gt;

&lt;p&gt;If you're familiar with bash shell scripting, you can create a more sophisticated one to do the job. Instead, let's use &lt;a href="https://docs.microsoft.com/powershell/scripting/overview?view=powershell-7.2&amp;amp;WT.mc_id=dotnet-50035-juyoo&amp;amp;ocid=AID3035186"&gt;PowerShell&lt;/a&gt; to delete both specified SDK and runtime at once. PowerShell also supports cross-platform, meaning you can use PowerShell on your MacOS. Here's the sample script.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;By running this PowerShell script above, you can delete both the SDK and runtime of a specific version at once.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reinstalling-net-sdk-amp-runtime-of-previous-versions"&gt;
  &lt;/a&gt;
  Reinstalling .NET SDK &amp;amp; Runtime of Previous Versions
&lt;/h2&gt;

&lt;p&gt;I guess this is the most crucial part. From time to time, after the manual SDK/runtime deleting is done, the remaining .NET SDKs and runtimes won't work. If it happens to you, then you should reinstall the existing .NET SDKs and runtimes. For example, if you delete .NET 6 SDK and runtime, then suddenly .NET Core 2.1 and 3.1, and .NET 5 start complaining, you should reinstall the latest release of each .NET SDKs and runtimes. To get the old release, visit this &lt;a href="https://dotnet.microsoft.com/download/dotnet?WT.mc_id=dotnet-50035-juyoo&amp;amp;ocid=AID3035186"&gt;download&lt;/a&gt; page, download the corresponding version of your choice and install them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X9vvXro9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sa0blogs.blob.core.windows.net/devkimchi/2021/11/removing-dotnet-sdks-from-macos-manually-03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X9vvXro9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sa0blogs.blob.core.windows.net/devkimchi/2021/11/removing-dotnet-sdks-from-macos-manually-03.png" alt=".NET SDK Download Page" width="880" height="470"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;So far, I've walked through how to delete a specific .NET SDK and runtime from MacOS manually. In most cases, you won't need this approach, but I hope this walkthrough will be helpful if you do.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>dotnetsdk</category>
      <category>macos</category>
      <category>installation</category>
    </item>
    <item>
      <title>Quitting At Work, and Normalizing Burnout Conversations</title>
      <author>Arit Amana</author>
      <pubDate>Wed, 24 Nov 2021 23:52:25 +0000</pubDate>
      <link>https://dev.to/aritdeveloper/quitting-at-work-and-normalizing-burnout-conversations-c6g</link>
      <guid>https://dev.to/aritdeveloper/quitting-at-work-and-normalizing-burnout-conversations-c6g</guid>
      <description>&lt;p&gt;Well, well! This piece reads like a bit of a downer doesn’t it? 😅&lt;/p&gt;

&lt;p&gt;Still, I wanted to share some not-so-glamorous sides of the developer experience (mine included). I believe that being able to feel, accept, process and channel negative experiences, is a vital skill. I hope you enjoy. 🤎&lt;/p&gt;

&lt;p&gt;PS &lt;a href="https://calendly.com/arit/"&gt;My Calendly&lt;/a&gt; is open again for anyone needing tech career guidance. 🎉&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;To enjoy content like this in your inbox, subscribe to the &lt;strong&gt;Arit Developer&lt;/strong&gt; newsletter &lt;a href="https://news.arit.dev"&gt;HERE&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#i-quit-a-work-project-and-i-felt-like-sht"&gt;
  &lt;/a&gt;
  I Quit A Work Project... And I Felt like Sh*t
&lt;/h3&gt;

&lt;p&gt;Several months ago, I took on a large project &lt;a href="https://forem.com/"&gt;at work&lt;/a&gt;. In summary, my task was to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Migrate the data within ~25 columns from one table, and split them between 2 new tables. There were over 650,000 discrete records that would be affected.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update all related business logic within dozens of files in the backend, so that they read from the 2 new tables, no longer the old.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update all related tests.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Huge task. But I was excited; I had several team members available to help if I got stuck, so I believed I would just advance systematically through each part of the project.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#things-get-messy"&gt;
  &lt;/a&gt;
  Things Get Messy
&lt;/h4&gt;

&lt;p&gt;I was wrong. Even though I divided the work into parts and sections that made sense implementation-wise, I ended up with an &lt;a href="https://github.com/forem/forem/pull/13904"&gt;enormous pull-request&lt;/a&gt; that had over 100 commits, 77 changed files and 60+ comments.&lt;/p&gt;

&lt;p&gt;So many parts of the app were broken. So I put my head down and fixed each break, only to have other parts break in turn. I kept going, but by this time, I was not enjoying the process anymore. I ran out of bandwidth for my other responsibilities (like reviewing my teammates’ work, or fulfilling opensource duty). This one project consumed me.&lt;/p&gt;

&lt;p&gt;The teammates designated to help me were indeed helpful. However, because they weren’t working with me on the project, catching them up with my recent changes became tedious, and they had to do significant amounts of context-switching each time.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#my-breaking-point"&gt;
  &lt;/a&gt;
  My Breaking Point
&lt;/h4&gt;

&lt;p&gt;Eventually I fixed all the broken code. Then came the task of fixing the tests. In hindsight, leaving the tests until the end of implementation was my biggest mistake, because I had lost track of the sources of the breaks in each test. One day, as dozens of tests kept failing despite my best efforts to remedy them, I reached my breaking point, called my manager and said:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I’m done. I have nothing left.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My supportive manager agreed to pass the project onto a more senior developer for completion. I remained engaged by reviewing their work, which allowed me to understand what still needed to be done. When the pull request was finally merged, I was palpably relieved.&lt;/p&gt;

&lt;p&gt;Then the fallout began. I was physically tired; experiencing aches and spasms in my shoulders and back. I was mentally tired; for the first time since I wrote my first line of Ruby, I woke up NOT looking forward to coding.&lt;/p&gt;

&lt;p&gt;I felt like such a failure.&lt;/p&gt;

&lt;p&gt;Why couldn’t I just keep pushing through to the end?&lt;/p&gt;

&lt;p&gt;Why did I grow so tired? Why did I miss all these small mistakes?&lt;/p&gt;

&lt;p&gt;Will I ever become a senior developer?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#rest-amp-recovery"&gt;
  &lt;/a&gt;
  Rest &amp;amp; Recovery
&lt;/h4&gt;

&lt;p&gt;Speaking with my manager and mentors helped me start processing what really happened, not just how I felt about what happened:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Arit, you took that project 90% of the way - that is a victory!&lt;/p&gt;

&lt;p&gt;What you needed was more dedicated support, which was on leadership, not on you.&lt;/p&gt;

&lt;p&gt;This one project is NOT an indicator of your ability; the scope was huge, the finish-line kept extending and you were exhausted.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now a week or two out from the experience, I’m feeling better.&lt;/p&gt;

&lt;p&gt;I’ve taken smaller-scoped tasks with clearly-defined technical implementation steps. I’m working … no, breezing through them now, applying the competencies I gained from my last project.&lt;/p&gt;

&lt;p&gt;I’m remembering that, yes, I can code and I love coding.&lt;/p&gt;

&lt;p&gt;Eventually I will achieve the technical proficiency &amp;amp; staying power necessary for complex, multi-month projects.&lt;/p&gt;

&lt;p&gt;One line at a time, yeah? 🥰&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#breaking-burnout-down"&gt;
  &lt;/a&gt;
  Breaking Burnout Down
&lt;/h3&gt;

&lt;p&gt;My mentor &lt;a href="https://twitter.com/vaidehijoshi"&gt;Vaidehi Joshi&lt;/a&gt; wrote a thought-provoking thread about burnout in a professional setting. Here is her thread’s first tweet:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Tgg9RZ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/715764739373207552/K2evUksb_normal.jpg" alt="Vaidehi Joshi profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vaidehi Joshi
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/vaidehijoshi"&gt;@vaidehijoshi&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      so much of the time, the discussion around burnout comes back to the reductive solution of “giving people more time off”.&lt;br&gt;&lt;br&gt;but long weekends or more time off doesn’t change the fact that you still have to come back to work at an environment that burned you out in the first place?
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:27 PM - 12 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1414652532014522373" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1414652532014522373" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1414652532014522373" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;After the project I wrote about above, taking some time off was presented as a way to help recover from my fatigue.&lt;/p&gt;

&lt;p&gt;However, I didn’t feel like that was a fitting solution, because my fatigue was not merely related to work-volume. Rather, it resulted from feeling increasingly inadequate as I worked to fix code-breaks that kept popping up like whack-a-moles.&lt;/p&gt;

&lt;p&gt;A better solution for me was to choose work that restored my sense of competence and self-efficacy. Once I did, my vigor and interest returned. But if I wasn’t clear on the source of my fatigue, I probably wouldn’t have been able to identify a suitable solution.&lt;/p&gt;

&lt;p&gt;Particularly in the tech industry, I think we need to further normalize conversations around burnout.&lt;/p&gt;

&lt;p&gt;We should empower each other to express feelings of burnout, and support identifying, naming &amp;amp; addressing the true sources of our burnout. We also need to permanently retire beliefs that equate burnout with not being fit for the job.&lt;/p&gt;

&lt;p&gt;Thank you, Vaidehi, for your thought-leadership! 🤎&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Photo Credit: Liza Summer on Pexels&lt;/em&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>burnout</category>
      <category>quitting</category>
    </item>
  </channel>
</rss>
