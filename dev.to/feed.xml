<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The difficult journey to land the first tech job.</title>
      <author>Thiago Tavares</author>
      <pubDate>Wed, 13 Oct 2021 20:55:37 +0000</pubDate>
      <link>https://dev.to/thiagoltavares/the-difficult-journey-to-land-the-first-tech-job-1cdg</link>
      <guid>https://dev.to/thiagoltavares/the-difficult-journey-to-land-the-first-tech-job-1cdg</guid>
      <description>&lt;p&gt;I just finished college, and now? I did a code Bootcamp, and now? Self-taught and now?&lt;/p&gt;

&lt;p&gt;These are common questions in the minds of many new talents in the IT area, full of new skills, set out to land their first job in the software development area. Companies need new talented people, and new talented people need companies, but why these two doesn't match?&lt;/p&gt;

&lt;p&gt;Landing the first job becomes a paradox. Companies want programmers with &lt;strong&gt;experience&lt;/strong&gt;, but these prodigies have just left college with none. And this search is endless, nowadays even for internships they want &lt;strong&gt;experience&lt;/strong&gt;, &lt;strong&gt;how to get a job if I don't have experience and how to get experience if I don't have a job?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1QargKWW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn78uy8hf6xqagc6q1if.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1QargKWW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn78uy8hf6xqagc6q1if.png" alt="question"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The interviews begin, the first one we are excited, on the fifth we are anxious for a positive answer, on the tenth we think we are not good enough, on the 30th we don't even know what to think. Almost always with the same feedback, and most of the time, you don't even have feedback.&lt;/p&gt;

&lt;p&gt;I had to go through many interviews in the past to understand that we also need to study for interviews, study the company we want to join, the vacancy, the position, adapt the curriculum to the desired position, after all, the blessed &lt;strong&gt;experience&lt;/strong&gt; is still the "main"!&lt;/p&gt;

&lt;p&gt;We can consider ourselves lucky because we can get &lt;strong&gt;experience&lt;/strong&gt; putting our knowledge into practice. We are not like doctors who cannot make mistakes or "play" to get &lt;strong&gt;experience&lt;/strong&gt;. We are programmers, and we need only a computer to get our hands dirty.&lt;/p&gt;

&lt;p&gt;Do you know that open position in that e-commerce company you want so much? How about studying the company, seeing what technologies it uses, and then putting into practice what you know by creating something simple like, for example, a homepage with products, then take more risks and try to create a flow of adding products to a cart. You can "play" without being afraid of making mistakes because you won't hurt anyone with your try, at least you'll create something ugly, and that doesn't even work, but you'll learn with your &lt;strong&gt;experience&lt;/strong&gt;... And look at her there, the so dreamed &lt;strong&gt;EXPERIENCE&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;With all that in mind, it will be your turn to yells "I did it!" so don't lose focus, keep trying with everything you have, you can.&lt;/p&gt;

&lt;p&gt;And finally, one last tip, don't forget to organize your interview schedule with the recruiter's name, date, time, company name, frequently asked questions, etc.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;p.s. take advantage and create your app to persist your interviews.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>programming</category>
      <category>beginners</category>
      <category>portfolio</category>
    </item>
    <item>
      <title>6 Reasons Why Cloudflare is a Threat to the Internet Privacy</title>
      <author>Lucas Bustamante</author>
      <pubDate>Wed, 13 Oct 2021 20:45:38 +0000</pubDate>
      <link>https://dev.to/luc45/6-reasons-why-cloudflare-is-a-threat-to-the-internet-privacy-4kdn</link>
      <guid>https://dev.to/luc45/6-reasons-why-cloudflare-is-a-threat-to-the-internet-privacy-4kdn</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Cloudflare handles ~&lt;a href="https://twitter.com/AxelrodG/status/1447938954758705155"&gt;20%&lt;/a&gt; of all the traffic on the internet. And it's growing fast, on 2017 it was &lt;a href="https://www.cloudflare.com/press-releases/2017/cloudflare-introduces-argo-a-virtual-backbone-for-a-faster-more-reliable-internet/#:~:text=Cloudflare%20handles%20more%20than%2010%20percent%20of%20all%20HTTP/HTTPS%20Internet%20traffic%2C"&gt;10%&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It's impossible to use Cloudflare proxy without giving up encryption of data. They are a man-in-the-middle that have access to unencrypted information of all the traffic they proxy. &lt;em&gt;(Yes, even with Full-Strict/Keyless SSL)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Of the remaining 80% of internet traffic, 43% &lt;a href="https://www.sandvine.com/blog/netflix-vs.-google-vs.-amazon-vs.-facebook-vs.-microsoft-vs.-apple-traffic-share-of-internet-brands-global-internet-phenomena-spotlight"&gt;comes from&lt;/a&gt; Netflix, Google, Amazon, Facebook, Microsoft, and Apple, none of which seems to be using Cloudflare, which makes Cloudflare the ultimate tool to break encryption on distributed servers. Only 37% of the internet traffic is routed outside these major tech companies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On July 2021, a random guy &lt;a href="https://blog.ryotak.me/post/cdnjs-remote-code-execution-en/"&gt;discovered&lt;/a&gt; a vulnerability on Cloudflare's cdnjs that allowed complete take over of the CDN, which is estimated to be used by 12.7% of the websites. NSA has a &lt;a href="https://en.wikipedia.org/wiki/Tailored_Access_Operations"&gt;whole division&lt;/a&gt; dedicated to discover and exploit zero-day vulnerabilities on systems. Even if Cloudflare is not willingly feeding unencrypted traffic to NSA, it is a single point of surveillance that, if compromised, breaks the whole encryption of a good portion of the internet.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cloudflare follows a freemium pricing plan. On 2016 Cloudflare's CEO Matthew Prince said in an &lt;a href="https://www.bbc.com/news/business-37348016"&gt;interview&lt;/a&gt; that only 4%~5% of the websites they protect are paying customers. The cost of maintaining Cloudflare infrastructure for the remaining 95% of customers that use it for free is unclear, as Cloudflare does not run ads on the sites it protects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On the same interview, he mentions that the initial impetus for Cloudflare came after an acquisition by the Department of Homeland Security of his previous project, Project Honeypot, in 2008, which demonstrates that the government was at least aware of it since the beginning.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>cloudflare</category>
      <category>privacy</category>
    </item>
    <item>
      <title>Welcome Thread - v146</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 13 Oct 2021 20:41:08 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v146-5coa</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v146-5coa</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/l0Exl2gzkfMptFOGA/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l0Exl2gzkfMptFOGA/giphy.gif" alt="Yo graphic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. 👋 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>A practical introduction to git – jumping in with both feet</title>
      <author>s-heins</author>
      <pubDate>Wed, 13 Oct 2021 20:08:06 +0000</pubDate>
      <link>https://dev.to/sheins/-a-practical-introduction-to-git-jumping-in-with-both-feet-2o56</link>
      <guid>https://dev.to/sheins/-a-practical-introduction-to-git-jumping-in-with-both-feet-2o56</guid>
      <description>&lt;p&gt;If you're a developer, you have probably heard about the version control system, git. If you haven't used it yourself yet, or not a lot, you might also be a bit scared by all the different words – commits, branches, pushing, cherry-picking, rebasing, … what is all that stuff? And why is version control so hard? What if I do the wrong thing and I end up losing everything?&lt;/p&gt;

&lt;p&gt;First up, git doesn't lose anything you have committed. It might be a bit harder to find but don't despair. We'll get you there.&lt;br&gt;
But let's start at the beginning without any looming threat of losing your changes.&lt;/p&gt;

&lt;p&gt;This will be the first article in a series and it will tell you how to set up your repository from the command line, how to add changes and save ("commit") them, how to set your name and email address to be added as metadata to those changes, and how to do define a git alias, namely one to get a pretty git tree of your changes in the console.&lt;/p&gt;

&lt;p&gt;(Cover image by &lt;a href="https://freeimages.com/photographer/nexxy-42715"&gt;Nerry Burg&lt;/a&gt; from &lt;a href="https://freeimages.com"&gt;FreeImages&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-version-control"&gt;
  &lt;/a&gt;
  Why version control?
&lt;/h2&gt;

&lt;p&gt;If you add some files or change their contents, you'll want to have a way to save your progress. The difference between having the file in a version control system such as git rather than just saving it on your hard drive is that you have a history of the file along with additional metadata – you could revert back to an old version if you wanted to, look at exactly which changes were introduced when, by whom, and, if they wrote a meaningful message, why they did those changes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#your-task"&gt;
  &lt;/a&gt;
  Your task
&lt;/h2&gt;

&lt;p&gt;Let's say you're tasked with creating an encyclopedia on animals. This is something that will require a lot of work, and re-working articles, so you want to know your articles are safe and sound. You might also want to revert some changes if your editor tells you to get rid of that article on flamingos one day and then changes their mind the next. You decide to start a git repository to commit your changes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#initializing-your-git-repository"&gt;
  &lt;/a&gt;
  Initializing your git repository
&lt;/h3&gt;

&lt;p&gt;In your shell, create a new directory and initialize your git repository by running &lt;code&gt;git init&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9_11rn59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0g1y7tkm4u0ep37xg81.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9_11rn59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0g1y7tkm4u0ep37xg81.png" alt="Initializing a git repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, this creates to a hidden folder &lt;code&gt;.git&lt;/code&gt;. If we delete this folder again, your directory will no longer be a git repository.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#configure"&gt;
  &lt;/a&gt;
  Configure
&lt;/h3&gt;

&lt;p&gt;So that other people know whom to contact regarding the changes you introduced because they might have some questions (or if you want to be able to run into some code and then marvel at the fact that these changes here were done by yourself a year ago and now you can't remember very much about them), you will want to set your name and email in your git config.&lt;br&gt;
You can either do so globally for the current logged-in user by running it with the &lt;code&gt;--global&lt;/code&gt; modifier which sets it for all repositories you commit to from this user on your machine, or for just this one repository if you run these commands with the &lt;code&gt;--local&lt;/code&gt; flag or leaving out the flag altogether since "local" is the default setting.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"Evelyn Example"&lt;/span&gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email evelyn@example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#getting-started-on-content"&gt;
  &lt;/a&gt;
  Getting started on content
&lt;/h2&gt;

&lt;p&gt;Now that we've got this out of the way, let's get started!&lt;br&gt;
You might have noticed that git has automatically created a branch named "main" for us (or, depending on your settings, this may also be called "master". If you want to change the name of the default branch that gets created on running git init to something other than &lt;code&gt;master&lt;/code&gt;, you can run &lt;code&gt;git config --global init.defaultBranch main&lt;/code&gt; , or whichever name you prefer instead of &lt;code&gt;main&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Depending on which approach you are using when developing, you may work with additional branches, then creating merge requests that need to be approved so you can move these changes onto the main branch, or alternatively, just work with the main branch.&lt;br&gt;
Let's assume we're the only collaborator on this encyclopedia for now and thus, we can use the main branch to make our changes and will not run into trouble. (If multiple people are working on just one branch, it requires a team that is highly coordinated so those changes keep getting reviewed)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#adding-files"&gt;
  &lt;/a&gt;
  Adding files
&lt;/h3&gt;

&lt;p&gt;At first, we might want to create a list of animals we want to write articles on. We create a file &lt;code&gt;animals-to-write-about&lt;/code&gt; and add a line &lt;code&gt;house cat&lt;/code&gt; because, hey, everyone seems to be crazy about cats, so our encyclopedia needs to have an article on them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d7mijN2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wbv1e4wcjaoj8nubuojk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d7mijN2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wbv1e4wcjaoj8nubuojk.png" alt="Adding a new file to the git repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we want to know what the current status of our repository is, we can run &lt;code&gt;git status&lt;/code&gt;.&lt;br&gt;
Git says our file is an &lt;em&gt;untracked file&lt;/em&gt;… but what does that mean?&lt;/p&gt;

&lt;p&gt;If git does not yet know about a file, it is &lt;strong&gt;untracked&lt;/strong&gt;. If we want to add it to git, we can run &lt;code&gt;git add &amp;lt;file&amp;gt;&lt;/code&gt; or just add all files with &lt;code&gt;git add .&lt;/code&gt; (the dot at the end means all files in the current directory and sub-directories). In the next step, we can then &lt;code&gt;git commit&lt;/code&gt; these files. Only files that have been committed are safe from being lost, so we want to make sure we always commit any changes that we want to keep.&lt;br&gt;
By adding the &lt;code&gt;-m&lt;/code&gt; flag and then a note in quotation marks or single quotes, we can add a commit message. This should always start with an upper case verb in the present tense. For more pointers on how to write good commit messages, have a look at &lt;a href="https://chris.beams.io/posts/git-commit/"&gt;this article by Chris Beams&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ofaprr4o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lnvhpbp3xjq4rtqyfcy1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ofaprr4o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lnvhpbp3xjq4rtqyfcy1.png" alt="Creating our first commit"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#git-aliases"&gt;
  &lt;/a&gt;
  Git aliases
&lt;/h3&gt;

&lt;p&gt;What was this &lt;code&gt;git lg&lt;/code&gt; command I just used to look at the changes? It was a git alias. This is a handy way to save all your typing energy for that encyclopedia.&lt;br&gt;
You can add your own aliases by editing the &lt;code&gt;~/.gitconfig&lt;/code&gt; file (on Linux / MacOS). My list looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# This is Git's per-user configuration file.&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;user]
    email &lt;span class="o"&gt;=&lt;/span&gt; s.heins@example.com
    name &lt;span class="o"&gt;=&lt;/span&gt; S Heins
&lt;span class="o"&gt;[&lt;/span&gt;credential]
    helper &lt;span class="o"&gt;=&lt;/span&gt; osxkeychain
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    s &lt;span class="o"&gt;=&lt;/span&gt; status
    c &lt;span class="o"&gt;=&lt;/span&gt; commit &lt;span class="nt"&gt;-m&lt;/span&gt;
    co &lt;span class="o"&gt;=&lt;/span&gt; checkout
    lg &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;clear &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git log &lt;span class="nt"&gt;--all&lt;/span&gt; &lt;span class="nt"&gt;--graph&lt;/span&gt; &lt;span class="nt"&gt;--pretty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'format:%C(auto)%h%d %s  %C(magenta)[%an] (%ad)%C(reset)'&lt;/span&gt; &lt;span class="nt"&gt;--date&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;format:&lt;span class="s1"&gt;'%d.%m.%y %H:%M'&lt;/span&gt;
    p &lt;span class="o"&gt;=&lt;/span&gt; pull &lt;span class="nt"&gt;--all&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;core]
    excludesfile &lt;span class="o"&gt;=&lt;/span&gt; /Users/heinss/.gitignore_global
&lt;span class="o"&gt;[&lt;/span&gt;commit]
    template &lt;span class="o"&gt;=&lt;/span&gt; /Users/heinss/.gitmessage.txt
&lt;span class="o"&gt;[&lt;/span&gt;pull]
    rebase &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;init]
    defaultBranch &lt;span class="o"&gt;=&lt;/span&gt; main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I highly recommend adding the alias under &lt;code&gt;lg&lt;/code&gt; for a pretty git tree right in your command line.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outlook-working-with-remotes-and-branches"&gt;
  &lt;/a&gt;
  Outlook: Working with remotes and branches
&lt;/h2&gt;

&lt;p&gt;In the next article, we will be looking at how to work with remotes in case you want to save your work somewhere other than just your local machine and how to work with branches.&lt;/p&gt;

&lt;p&gt;If you work with multiple collaborators, working with branches in conjunction with a version control service such as github or gitlab that lets you create requests to propagate these changes into the main branch enables you to first review the changes before they go into your main branch most easily. Propagating changes from one branch to the other is called &lt;em&gt;merging&lt;/em&gt; one branch into the other.&lt;br&gt;
Otherwise, collaborators would commit in the main branch and if something goes seriously wrong, they would have to roll back those changes. Or if a commit needs to be reworked, additional rework commits need to be added, potentially bloating up your tree instead of the collaborator being able to still add them to their commit before merging. There are working modes though that use only one branch; this is called trunk-based development.&lt;br&gt;
However, most teams I have worked in have chosen to work with branching and so-called &lt;em&gt;merge requests&lt;/em&gt;, also called &lt;em&gt;pull requests&lt;/em&gt;.&lt;br&gt;
More on working with branches in the next post though!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-and-command-summary"&gt;
  &lt;/a&gt;
  Conclusion and command summary
&lt;/h2&gt;

&lt;p&gt;We created our first local git repository, and added and committed a file to it!&lt;/p&gt;

&lt;p&gt;Here are some commands to keep in mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;git init&lt;/code&gt; to initialize a local git repository&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git status&lt;/code&gt; to show the current status of a repository and the files it contains&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git add .&lt;/code&gt; to add all files&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git commit -m 'My message'&lt;/code&gt; to commit those changes with a commit message (i.e. propagate those changes to the branch and thus keep them from being lost)&lt;/li&gt;
&lt;li&gt;setting some options in the global git config file at &lt;code&gt;~/.gitconfig&lt;/code&gt;:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;git config --global user.name "Evelyn Example"&lt;/code&gt; to set the author name globally (for all git repositories)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git config --global user.email evelyn@example.com&lt;/code&gt; to set the author email address globally&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git config --global init.defaultBranch main&lt;/code&gt; to set the default branch name when initializing a new repository to &lt;code&gt;main&lt;/code&gt; globally&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>The Do's and Don'ts of Front-End Documentation</title>
      <author>lary mak</author>
      <pubDate>Wed, 13 Oct 2021 19:47:54 +0000</pubDate>
      <link>https://dev.to/larymak/the-dos-and-donts-of-front-end-documentation-2k5b</link>
      <guid>https://dev.to/larymak/the-dos-and-donts-of-front-end-documentation-2k5b</guid>
      <description>&lt;p&gt;&lt;a href="https://aviyel.com/post/1178/the-do-s-and-don-ts-of-front-end-documentation"&gt;Full article available on Aviyel for free&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;One thing almost all developers might all agree on is even if you have the best programming project ready for the world but, if it doesn’t have good &lt;a href="https://aviyel.com/post/1161/this-free-tool-lets-you-create-world-class-documentation-for-react-components"&gt;documentation&lt;/a&gt;, chances are it won't reach the right audience. For instance, in an organization, a good set of well-explained rules could save you from having to repeatedly answer the same questions. The rules ensure that people can figure out how things work around the organization if key employees decide to leave the company. The same thing happens in a project, a well-documented guideline will help bring consistency and exposure to source code and ensures regular modification even if senior employees might want to walk out. &lt;/p&gt;

&lt;p&gt;In the software technical industry, it can be really challenging for engineers to obtain documentation from product owners that can actually be used to build and test a product. This is because the chances of product owners being developers is very low, so they have very little concept of what information a developer needs in order to actually compose a functional digital product. This means that this task often falls in the hands of developers and technical engineers to maintain a library of documentation for the products they’re building. &lt;/p&gt;

&lt;p&gt;Now, to help you get started with writing good documentation for your products here are some tips that might help you to curate full-fledged, quality documentation that can be used as both a tool for building a product and a reference for learning and testing your recently created product.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-types-of-documentation-available"&gt;
  &lt;/a&gt;
  What are the Types of Documentation Available?
&lt;/h2&gt;

&lt;p&gt;We will agree that good, &lt;a href="https://aviyel.com/post/1152/thinking-outside-the-box-an-online-resume-with-docz"&gt;front-end&lt;/a&gt; documentation is important to the success of software products, and yet very few projects actually have good documentation. It's funny how even successful projects often have barely adequate documentation. You can resolve these issues by understanding the mechanism behind doc maintenance and by choosing the right one to document your product. The two main types of documentation include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Product documentation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Process documentation&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Structuring documentation into these categories helps ensure that each detail is covered and makes it easier to write and maintain. Our main focus in this article will be on the product documentation where we will cover what should be done and what should be avoided when writing the documentation, with these tips you will be able to make your software projects and teams more successful. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-dos-of-frontend-documentation"&gt;
  &lt;/a&gt;
  The Dos of Front-end Documentation
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RSi-9GBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v2bwvp5hkc3dhwj6b99e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RSi-9GBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v2bwvp5hkc3dhwj6b99e.png" alt="The Dos of Front-end Documentation"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Target Audience&lt;/strong&gt; - Before you begin writing your documentation it is highly advised to define your target audience, the tone, style, and technicality you will use, depends on the audience you will be targeting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Understand the product&lt;/strong&gt; - If you want to write great documentation, the first step is for you to be sure you understand how the products work. If you don’t even know how something is supposed to work, you can’t have much confidence that it’s working correctly. Plus, it creates uncertainty amongst teams about the working of a project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Structure and Markup&lt;/strong&gt; - Structure your documentation by tasks relevant to the user instead of providing reference documentation by describing each part of the user interfaces individually. Always describe what a product can do rather than its limitations. You can follow these components to standardize your doc:&lt;br&gt;
Title&lt;br&gt;
Abstract&lt;br&gt;
Table of content&lt;br&gt;
Chapters&lt;br&gt;
Sections&lt;br&gt;
Contributors&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use of visual aids&lt;/strong&gt; - Provide diagrams or other graphic materials to help understand and communicate the structure and design principles.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Keep it up-to-date&lt;/strong&gt; - Documentation is only as valuable as it is accurate, so it's important to keep it updated with changes made to the UI and backend services. It is a good practice to make updating the documentation a part of the process.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Language&lt;/strong&gt; - We all come from different zones and we all speak different languages, this does not mean you need to translate your code into vernaculars. Writing your documentation in English will work since English is a globally accepted language. You might want to use a translator tool here if your target audience isn't familiar with English.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Provide the definition of used terms and full forms of abbreviation - consider creating a reference page with all definitions, commonly used words, etc. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#more-tips-to-remember"&gt;
  &lt;/a&gt;
  More Tips to Remember
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Define the purpose of the project in the documentation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Document the technologies used&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Document any unexpected events that may occur&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Address how it will be distributed for public use&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mention the expected, emphasize the unique&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remember to backup &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#where-can-i-create-documentation-of-my-project"&gt;
  &lt;/a&gt;
  Where Can I Create Documentation of My Project?
&lt;/h2&gt;

&lt;p&gt;The market is filled with really popular &lt;a href="https://aviyel.com/post/1178/the-do-s-and-don-ts-of-front-end-documentation"&gt;style guides&lt;/a&gt; and documentation tool to code your projects. However, I am a big fan of open source and prefer them only for my documentation needs. I mostly use &lt;a href="https://www.docz.site/docs/getting-started"&gt;Docz&lt;/a&gt; to curate technical documentation of my codes. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-i-use-docz-for-my-frontend-needs"&gt;
  &lt;/a&gt;
  Why I Use Docz For my Front-End Needs?
&lt;/h2&gt;

&lt;p&gt;While I prefer Docz for curating frontend documentation, you might also try VuePress if you have adopted Vue framework. GitBook could be your go-to option if you want to switch to a paid option. Plus, here's a catch. Open-source teams can use GitBook for free. However, I prefer Docz because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It’s Gatsby Powered&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Easily customizable&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Blazingly fast&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Based on MDX&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;TypeScript support&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It makes sure that your content includes all SEO requisites, making it more user-friendly and readable. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#still-in-the-article"&gt;
  &lt;/a&gt;
  Still in the Article...
&lt;/h3&gt;

&lt;p&gt;Now we have a few easy steps still left out. &lt;br&gt;
They include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A guide on how to set up Docz&lt;/li&gt;
&lt;li&gt;What Points to Avoid While Writing Front-End Documentation? &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out the complete &lt;a href="https://aviyel.com/post/1178/the-do-s-and-don-ts-of-front-end-documentation"&gt;Article&lt;/a&gt; on Aviyel and also follow discussion to get all the required details.  &lt;/p&gt;

&lt;p&gt;☕ &lt;a href="https://www.buymeacoffee.com/lary"&gt;Help me Get a Cup of Tea&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Connect With me at &lt;a href="https://twitter.com/larymak1"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.instagram.com/nextgencoders/"&gt;Insta&lt;/a&gt; | &lt;a href="https://www.youtube.com/channel/UCrT1ARRZfLOuf6nc_97eXEg"&gt;YouTube&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/hillary-nyakundi"&gt;LinkedIn&lt;/a&gt;  | &lt;a href="https://github.com/larymak"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enjoy Coding ❤&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>documentation</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Git and GitHub: The Complete Guides - Chapter 8 : Collaboration</title>
      <author>Goran Kortjie</author>
      <pubDate>Wed, 13 Oct 2021 19:24:56 +0000</pubDate>
      <link>https://dev.to/ifierygod/git-and-github-the-complete-guides-chapter-8-collaboration-28fa</link>
      <guid>https://dev.to/ifierygod/git-and-github-the-complete-guides-chapter-8-collaboration-28fa</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aWkicK4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7pp7w6qo7jbwez79v8r.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aWkicK4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7pp7w6qo7jbwez79v8r.gif" alt="south-park-hello"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello everyone, I hope you have been enjoying this series on Git and Github as much as I have. But like all good things it has to come to an end.&lt;/p&gt;

&lt;p&gt;This last chapter took a quite a while to publish, I've been busy with studies and now I am proud to say I have completed my Microsoft 365 Certified: Fundamentals.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fGhBPVCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/edw034gh2truv31v2ydn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fGhBPVCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/edw034gh2truv31v2ydn.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.credly.com/badges/456c8c12-4809-470e-b34e-a67b1c1a0ff5/accept"&gt;Credly&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am an IT Technician so this one really comes in handy at my place of work.😁&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ju-eTicj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhh1pkwnrgu1go8udutn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ju-eTicj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhh1pkwnrgu1go8udutn.png" alt="collab-human-paper-image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today we are going to discuss one of the most important topics in GitHub. That of course is &lt;strong&gt;Collaboration&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;In the previous chapter we looked at how we can copy someone else's remote repository to our own GitHub account and how to clone it to our local computer. We made some changes and updated it, when we were satisfied with our changes we eventually contributed to the original remote repository belonging to the owner.&lt;/p&gt;

&lt;p&gt;This whole process is somewhat like &lt;em&gt;collaboration&lt;/em&gt; only difference is it's actually &lt;strong&gt;not!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the case of &lt;em&gt;collaboration&lt;/em&gt; the owner can add different developers as collaborators, each collaborator will have almost identical rights and permissions as the owner allowing them to manage the project. &lt;/p&gt;

&lt;p&gt;We say &lt;em&gt;almost&lt;/em&gt; because there may be some rules put in place to manage the different roles given to collaborators and protect the master branch or other branches.&lt;/p&gt;

&lt;p&gt;What we will be discussing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add a Collaborator&lt;/li&gt;
&lt;li&gt;Being a Collaborator&lt;/li&gt;
&lt;li&gt;Protecting your Branches&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#add-a-collaborator"&gt;
  &lt;/a&gt;
  Add a Collaborator
&lt;/h3&gt;

&lt;p&gt;To begin, we will create a new repository on our local computer, we do this by creating a folder in our desktop directory, we can call this new repo 'collabs'. We open VS-Code and choose the newly created folder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P_pv-Xd9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lt5riq5yi4qunq520iz.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P_pv-Xd9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lt5riq5yi4qunq520iz.gif" alt="create-folder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first thing we do is initialise the repository by running the following command inside of our 'collabs' folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Afterwards we create two files, we name them, index.html and style.css respectively. Next we add them to the staging area by running the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally we make a commit by running the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m 'created index.html and style.css'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s7U3ku8V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nzb1fjna900kgr2pglxi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s7U3ku8V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nzb1fjna900kgr2pglxi.gif" alt="vs-code-git-basics"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s add our html structure to the index.html file and make a commit, followed by adding a H1 tag to the index.html file and make another commit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HNzTDrKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mf4nutqmuzvfo29r96av.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HNzTDrKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mf4nutqmuzvfo29r96av.gif" alt="index.html"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We continue adding changes to our project by modifying the style.css file, we select all elements in the html page and set the margin and padding to 0, and make a commit. We log the history of our commits to see our progress. We do this by running the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git log --oneline
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SozIbrhc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6d6z1163yb0duqml2c23.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SozIbrhc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6d6z1163yb0duqml2c23.gif" alt="style.css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Quite a few commits exist in our history, the next thing we need is to create the remote repository on GitHub and push our local repository to the remote.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_SDzJVhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z6p3dy6q1ayl73q7qsii.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_SDzJVhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z6p3dy6q1ayl73q7qsii.gif" alt="create new remote repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As discussed in previous chapters, we can add the remote repository &lt;strong&gt;url link&lt;/strong&gt; to our local repository to bind them together. We do this by running the command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add origin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command is followed by the &lt;strong&gt;url link&lt;/strong&gt; of the remote repository.&lt;/p&gt;

&lt;p&gt;Finally we run the command to push the local repository to our remote repository. We use the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nW8o-rwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y5g6c64yoehpblwod2g.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nW8o-rwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y5g6c64yoehpblwod2g.gif" alt="push to remote repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You might end up with an error concerning the permissions. To correct it you need to change the credentials on the Control Panel (Windows users). All the (Mac users) you need to create and add an ssh key to your new GitHub account. As we did in the previous chapter.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On our Github account where we created the new repo, you can see when we refresh the page, our local repository has successfully been pushed to our remote repository including all files and commits.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hllrJKLA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nd2g2b6wy1si6ukxzrxh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hllrJKLA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nd2g2b6wy1si6ukxzrxh.gif" alt="added-repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ju-eTicj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhh1pkwnrgu1go8udutn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ju-eTicj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhh1pkwnrgu1go8udutn.png" alt="collab-human-paper-image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#time-to-collaborate"&gt;
  &lt;/a&gt;
  Time to collaborate
&lt;/h4&gt;

&lt;p&gt;In order to add someone as a collaborator to our project, we need to navigate to the &lt;strong&gt;SETTINGS&lt;/strong&gt; tab. Inside the &lt;strong&gt;SETTINGS&lt;/strong&gt;, on the left side of the screen there is a list of the different settings we can manage.&lt;/p&gt;

&lt;p&gt;What we are essentially trying to accomplish is give someone else access to our repository. The &lt;strong&gt;Manage Access&lt;/strong&gt; option is where we can perform access management. Here we can see the different management settings related to access control, right below we see it says we &lt;em&gt;haven't invited any collaborators yet&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;We can choose the &lt;strong&gt;Add People&lt;/strong&gt; button to add a collaborator, a box will pop-up which we need to fill in with the full name, email address or username of the person we want to grant access to our repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3QX1Tde0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nxtulf9eh7bc1jcovhn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3QX1Tde0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nxtulf9eh7bc1jcovhn.gif" alt="Alt Text3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you found and added the collaborator, notice it says &lt;em&gt;'&lt;strong&gt;awaiting collaborator response&lt;/strong&gt;'&lt;/em&gt;. this is because the collaborator needs to accept the invitation sent to them.&lt;/p&gt;

&lt;p&gt;You will probably expect there to be some kind of notification or message received on the Github account of the collaborator. However this is not the case.😕 &lt;/p&gt;

&lt;p&gt;The collaborator will instead receive an email, with a message that states something along the line of &lt;em&gt;'&lt;strong&gt;this person wants to invite you to collaborate on their GitHub project&lt;/strong&gt;'&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;It is up to the collaborator to accept the invitation. Once they accept the invitation, the owners repository will be pulled into the collaborators GitHub account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fQ_c-XqH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xc22je2swwvf52iym0s.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fQ_c-XqH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xc22je2swwvf52iym0s.gif" alt="Alt Text1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the owners account, inside the &lt;strong&gt;Manage Access&lt;/strong&gt; option, we will see that we have &lt;strong&gt;1&lt;/strong&gt; new collaborator added to our repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EdW-Xdqx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5uea5ovhuywwlnlbjv6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EdW-Xdqx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5uea5ovhuywwlnlbjv6.gif" alt="Alt Text2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#being-a-collaborator"&gt;
  &lt;/a&gt;
  Being a Collaborator
&lt;/h3&gt;

&lt;p&gt;We have successfully added a collaborator to our project and now the collaborator has complete access and can manage the code how ever they want.&lt;/p&gt;

&lt;p&gt;We can simulate working on this repository as the collaborator. However to properly simulate this process, we need to work on the project from a different computer otherwise we will get unexpected results, which might end up confusing you.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you have a second computer, you can use it to work on the second GitHub account. As for me, I am using Azure to quickly provision a VM where I can simulate being a collaborator.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Firstly, since we are a collaborator, we don't need to fork the repository anymore, we just need to clone it to our local computer.To do this we can click the &lt;strong&gt;url link&lt;/strong&gt; to clone the repo. &lt;/p&gt;

&lt;p&gt;In VS-CODE we need to create a new folder inside the desktop directory. We move into that folder and then run the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command is followed by the &lt;strong&gt;url link&lt;/strong&gt; we got from our remote repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VdozhWWm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kr2d59lmwqz40g6nr18.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VdozhWWm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kr2d59lmwqz40g6nr18.gif" alt="clone-git-repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we log the history of our commits we will see the commits we made on the owners local repo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iy_FK37l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i0n1xkrqompneodt40nt.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iy_FK37l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i0n1xkrqompneodt40nt.gif" alt="history-of-commits"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So far so good!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UugKshd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9svqwhf9u5nhapabogiz.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UugKshd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9svqwhf9u5nhapabogiz.gif" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let’s make some changes to the project as a collaborator.&lt;/p&gt;

&lt;p&gt;To begin we will modify the size of the h1 tag, increasing the font-size by 40px. Then we will make a commit and add it to the staging area simultaneously.&lt;/p&gt;

&lt;p&gt;You might be surprised to see a Git message we encountered in chapter 1 of the Git and Github guides, Git is requesting our information. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This makes sense since this is a computer I quickly spun up in Azure and didn't necessarily configure everything yet. It does provide an opportunity for recollection of the commands we use to provide Git with our information though.&lt;/p&gt;

&lt;p&gt;Remember! You will add in your own username and email, since this is unique to you and how you setup the GitHub account.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We add our username by typing the commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config --global user.name John
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we will give git our email address, we add it by typing the commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config --global user.email john@gmail.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We continue by making the commit to increase the font-size. Next we modify the colour of the h1 tag, then make a commit and set it to the staging area.&lt;/p&gt;

&lt;p&gt;We log the history of our commits and we see two new commits in the history.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ox8LrW03--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tguvnv2v0frg0qryuqas.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ox8LrW03--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tguvnv2v0frg0qryuqas.gif" alt="making-commits-as-collaborator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is time to push these changes from the local repository to the remote repository. For this we run the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see the changes have been pushed to our remote repository as the collaborator, what you should notice is the fact we didn't have to create a pull request, these changes were pushed to the remote repo as if it was our own.&lt;/p&gt;

&lt;p&gt;Another aspect to realise is how the changes took place on the owners repo as well, we didn't need to request permission or wait for the owner to review the code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sPK_SFw6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6g6fox0wc7z39c2b3tae.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sPK_SFw6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6g6fox0wc7z39c2b3tae.gif" alt="push-to-repo-as-collaborator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This at first seems &lt;strong&gt;AWESOME&lt;/strong&gt; since you don't need to jump through hoops to deploy your changes, but it presents a problem, since you as the &lt;em&gt;owner&lt;/em&gt; no longer have complete control over the repository and the changes it goes through, this kind of collaboration process is a &lt;u&gt;shared-equal responsibility&lt;/u&gt; model. Each member has equal rights and permissions in a shared environment/repository.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#protecting-your-branches"&gt;
  &lt;/a&gt;
  Protecting your Branches
&lt;/h3&gt;

&lt;p&gt;In the real-world, a &lt;u&gt;shared-equal responsibility&lt;/u&gt; model is not convenient. If you are the owner of a project and you have some collaborators on your team. You would generally want mechanisms to control and manage your teams work to avoid any unexpected results.&lt;/p&gt;

&lt;p&gt;Github allows the owners of repositories to protect the branches by requiring reviews before merging the branches.&lt;/p&gt;

&lt;p&gt;Let’s simulate what was just discussed by protecting the master branch. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In most cases the master branch is deployable and nobody touches it for testing purposes, which means it has to be protected.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To protect the branch we have to go to the &lt;strong&gt;SETTINGS&lt;/strong&gt; tab, down the list of options choose &lt;strong&gt;Branches&lt;/strong&gt;. Here we will see a title that states &lt;em&gt;'&lt;strong&gt;Branch Protecting Rules&lt;/strong&gt;'&lt;/em&gt; and on the right side we will see a button that reads &lt;em&gt;'&lt;strong&gt;Add Rule&lt;/strong&gt;'&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;We click on &lt;strong&gt;Add Rule&lt;/strong&gt; and we are presented with a form, we give a name for the branch and down below we see the rules we can define. We will choose &lt;em&gt;'&lt;strong&gt;Require a pull request before merging&lt;/strong&gt;'&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It will require the collaborators to perform a pull request before merging, this will enforce that all commit be made to a non-protected branch and submitted via a pull request before it can be merged with the master.&lt;/p&gt;

&lt;p&gt;Also we will set the number of approvals needed to 1, For the purpose of this discussion it makes sense but in a real-world scenario you can imagine many collaborators needing to approve a pull request before a merger can take place.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XP_R8AQb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpdrp8aherxwwn3ow6el.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XP_R8AQb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpdrp8aherxwwn3ow6el.gif" alt="protect-a-branch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our master branch is now protected, to confirm this we can make changes on our local repo and push them to the remote repo.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NB! I am using a VM in Azure to simulate a different collaborator.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We make the changes to our index.html file and commit them. But when we try to push the changes to the master branch, we receive an error, it is a message letting us know that the master branch is protected.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_nSDXXtp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0y2c612orr4auvr0npa.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_nSDXXtp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0y2c612orr4auvr0npa.gif" alt="add-to-protected-branch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This proves that our master branch is protected and we can control and manage how changes happen from the owners standpoint.&lt;/p&gt;

&lt;p&gt;However for the collaborator, they need to push the changes to a non-protected branch and perform a pull request as dictated in the branch rules.&lt;/p&gt;

&lt;p&gt;Basically we need to create a new branch, push it to GitHub and then merge it to the master branch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xsr-GzI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/892csxt4mxr1515gkei9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xsr-GzI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/892csxt4mxr1515gkei9.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We create and switch into branch by running the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git switch -c test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here &lt;em&gt;test&lt;/em&gt; is refering to the name of the new branch we are creating. The &lt;em&gt;test&lt;/em&gt; branch will have all the commits we just made, therefore we can just push this branch to our remote repo by running the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see below, we have pushed our code the remote repo. For us to merge it with the master branch we need to perform a pull request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eZqZQM75--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgg4mhinxwt773r5vyyv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eZqZQM75--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgg4mhinxwt773r5vyyv.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice when we clicked to create a pull request, we received some warnings, the first states &lt;strong&gt;Review Required&lt;/strong&gt; the second states &lt;strong&gt;Merging is blocked&lt;/strong&gt;. Also we are not able to merge the pull request since the button has been disabled.&lt;/p&gt;

&lt;p&gt;Back in the owners account, we refresh to see the latest changes and see we have a new pull request.&lt;/p&gt;

&lt;p&gt;Here we will see the same warnings we saw on the collaborators account, however we can merge the pull request since the button is not disabled, since we are the owner of the repo.&lt;/p&gt;

&lt;p&gt;Before we merge the branches, we need to set the reviewer to 1 since it is one of the branch rules we created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OChacSEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvj1a5sq0d7wh9bp9vbx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OChacSEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvj1a5sq0d7wh9bp9vbx.gif" alt="pull-request-on-owner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once we add ourselves to the Reviewers option, we have to go to the &lt;strong&gt;files changed&lt;/strong&gt; tab. Where we can find all the changes made by the collaborator, after reviewing the changes, if the owner is happy, they can approve the changes by clicking the &lt;strong&gt;review changes&lt;/strong&gt; green button at the top right.&lt;/p&gt;

&lt;p&gt;In this case we click on the &lt;strong&gt;Approve&lt;/strong&gt; option and leave a sincere comment for the collaborator. Next we click the green button the reads &lt;strong&gt;Submit Review&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MiXYe1qs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2eufy0hm3mr2cj8j7y8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MiXYe1qs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2eufy0hm3mr2cj8j7y8.gif" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can see the pull request has been approved by the owner and we can finally merge the changes to the master branch by clicking the &lt;strong&gt;Merge Pull Request&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;If we check the commits history, we will find all the commits made by the collaborator followed by the merge commit. We can see the same changes have reflected on the collaborators account. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_AvfO5Se--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hr7z07zzgjfwvp1g9ope.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_AvfO5Se--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hr7z07zzgjfwvp1g9ope.gif" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That is the way we can protect the branches and control collaborators work on GitHub.&lt;/p&gt;

&lt;p&gt;I hope you gained at-least a single piece of knowledge from this series, I personally have learnt a lot and feel more comfortable working with Git and GitHub than before I started this series. &lt;/p&gt;

&lt;p&gt;Even though it is the end, I realise there are more aspects of Git and GitHub I haven't touched on. I might decide to visit them and share my experience. &lt;/p&gt;

&lt;p&gt;For now I signing off on Git and GitHub, it was a fun ride and thank you all for being a part of this journey.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FltxjCUD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6zrmcqtg60wwzn2qqw4k.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FltxjCUD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6zrmcqtg60wwzn2qqw4k.gif" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Progress and Lessons Learned Internationalizing the user-statistician GitHub Action</title>
      <author>Vincent A. Cicirello</author>
      <pubDate>Wed, 13 Oct 2021 19:07:37 +0000</pubDate>
      <link>https://dev.to/cicirello/progress-and-lessons-learned-internationalizing-the-user-statistician-github-action-2he9</link>
      <guid>https://dev.to/cicirello/progress-and-lessons-learned-internationalizing-the-user-statistician-github-action-2he9</guid>
      <description>&lt;p&gt;A couple weeks ago, at the start of Hacktoberfest, I decided to recruit Hacktoberfest contributors to help internationalize the &lt;a href="https://github.com/cicirello/user-statistician"&gt;user-statistician GitHub Action&lt;/a&gt;. This post is an update on the progress of this effort and lessons learned from the experience. It is organized as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-the-userstatistician"&gt;What is the user-statistician?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#progress-internationalizing-for-hacktoberfest"&gt;Progress Internationalizing for Hacktoberfest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lessons-learned-from-the-experience"&gt;Lessons Learned from the Experience&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By the way, there are still a couple open issues for additional language translations if you are looking for something to contribute to. And if it doesn't already support your preferred language and there isn't an open issue, feel free to submit an issue.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-userstatistician"&gt;
  &lt;/a&gt;
  What is the user-statistician?
&lt;/h2&gt;

&lt;p&gt;The user-statistician GitHub Action generates a detailed GitHub stats SVG entirely within GitHub Actions, GitHub's framework for workflow automation. It generates a detailed visual summary of your activity on GitHub, such as your contributions, distribution of programming languages within your public repositories, etc, suitable to display on your &lt;a href="https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme"&gt;GitHub Profile README&lt;/a&gt;. It can also be customized in various ways, such as color theme, among other customizations.&lt;/p&gt;

&lt;p&gt;You can find more about it in my earlier Dev.to post recruiting Hacktoberfest contributors, including a few examples of the SVGs of GitHub profile stats that it produces:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/cicirello" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lVYicB_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lv_vXYvX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/469122/085f1955-378c-49cb-866b-21b9ec1f1439.jpeg" alt="cicirello"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cicirello/hacktoberfest-participants-help-us-internationalize-the-user-statistician-github-action-2bga" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Hacktoberfest Participants Help Us Internationalize the user-statistician GitHub Action&lt;/h2&gt;
      &lt;h3&gt;Vincent A. Cicirello ・ Sep 29 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#hacktoberfest&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;And all of the details are available in the GitHub repository:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/cicirello"&gt;
        cicirello
      &lt;/a&gt; / &lt;a href="https://github.com/cicirello/user-statistician"&gt;
        user-statistician
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Generate a GitHub stats SVG for your GitHub Profile README in GitHub Actions
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
user-statistician&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/cicirello/user-statistician#user-statistician"&gt;&lt;img alt="user-statistician" src="https://res.cloudinary.com/practicaldev/image/fetch/s--TO3wDtp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/cicirello/user-statistician.github/preview/user-statistician.png" width="640"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Check out all of our GitHub Actions: &lt;a href="https://actions.cicirello.org/" rel="nofollow"&gt;https://actions.cicirello.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Hacktoberfest Participants and Other Potential Contributors&lt;/h2&gt;
&lt;p&gt;We are currently interested in increasing internationalization of this project. It currently supports generating
the SVG in &lt;a href="https://github.com/cicirello/user-statistician#locale"&gt;15 languages&lt;/a&gt;. There are open issues for a few other languages, which you can work on if
you would like to translate the various labels. You may also work on translations to other languages not currently
included among open issues. In such a case, please start by submitting an issue (similar to the existing ones) so that
we are aware of interest in a particular language.&lt;/p&gt;
&lt;h2&gt;
About&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/user-statistician"&gt;&lt;img src="https://camo.githubusercontent.com/3ca5b3c655ed2e7763b5fa5f8b645cdef39e76e823daa262f8789413ef798321/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f6369636972656c6c6f2f757365722d73746174697374696369616e3f6c6162656c3d4d61726b6574706c616365266c6f676f3d476974487562" alt="GitHub release (latest by date)"&gt;&lt;/a&gt;
&lt;a href="https://github.com/search?q=cicirello+user-statistician+path%3A.github%2Fworkflows+language%3AYAML&amp;amp;type=Code"&gt;&lt;img src="https://camo.githubusercontent.com/22b7cb980be30b3bba9d973f16414cebd772dd3765fab691c5039308aa0693a5/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470732533412532462532467777772e6369636972656c6c6f2e6f7267253246656e64706f696e7473253246757365722d73746174697374696369616e2e6a736f6e" alt="Count of Action Users"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/actions/workflows/build.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cm00pQqq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/cicirello/user-statistician/actions/workflows/build.yml/badge.svg" alt="build"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/actions/workflows/generate-samples.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T8_119MR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/cicirello/user-statistician/actions/workflows/generate-samples.yml/badge.svg" alt="samples"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/actions/workflows/codeql-analysis.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AfF_iOMD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/cicirello/user-statistician/actions/workflows/codeql-analysis.yml/badge.svg" alt="CodeQL"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/blob/main/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/a0bcf640ead218e8b4b6b3773a9bb0d5208717ad85db5a09c3e3c73e55968403/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6369636972656c6c6f2f757365722d73746174697374696369616e" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician"&gt;&lt;img src="https://camo.githubusercontent.com/2311408c037fc2534ccfc335d604eadf1f8fcc7e5dd8c3c6cd326d433d7f2936/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f746f702f6369636972656c6c6f2f757365722d73746174697374696369616e" alt="GitHub top language"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cicirello/user-statistician/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;&lt;img src="https://camo.githubusercontent.com/9076b1744dc383d6ac9ea39f2123071a1b05ad480062a701fb5d2f7533f2765b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6369636972656c6c6f2f757365722d73746174697374696369616e2f676f6f6425323066697273742532306973737565" alt="good first issue"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/issues?q=is%3Aissue+is%3Aopen+label%3A%22Hacktoberfest%22"&gt;&lt;img src="https://camo.githubusercontent.com/a5227a0c8cc5370d4bd5bd9cfa00c46bd310967ab1dd7df8d9abec94ba14f3de/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6369636972656c6c6f2f757365722d73746174697374696369616e2f4861636b746f62657266657374" alt="Hacktoberfest"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/issues?q=is%3Aissue+is%3Aopen"&gt;&lt;img src="https://camo.githubusercontent.com/8bbf1d76b3fcf9677726d5a9660892a65edfde5599afe1f357df57e2ab3b6d50/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6369636972656c6c6f2f757365722d73746174697374696369616e" alt="GitHub open issues"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/issues?q=is%3Aissue+is%3Aclosed"&gt;&lt;img src="https://camo.githubusercontent.com/77fbc7e5808b4c9f5f468f50c0997ac5f209d111ff1220b938e478932aec5c18/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642f6369636972656c6c6f2f757365722d73746174697374696369616e" alt="GitHub closed issues"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/cicirello/user-statistician"&gt;cicirello/user-statistician&lt;/a&gt; GitHub
Action generates a detailed visual summary of your activity on GitHub in the form of an SVG
suitable to display on
your &lt;a href="https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme"&gt;GitHub Profile README&lt;/a&gt;
Although the intended use-case is to generate an SVG image for your GitHub Profile README
you can also potentially link to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/cicirello/user-statistician"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#progress-internationalizing-for-hacktoberfest"&gt;
  &lt;/a&gt;
  Progress Internationalizing for Hacktoberfest
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Before Hacktoberfest:&lt;/strong&gt; I designed the Action from the start so that it would be easy to add support for languages other than English. I initially opened a few issues for translations to a few random languages, and labeled them as &lt;code&gt;good first issue&lt;/code&gt; and &lt;code&gt;help wanted&lt;/code&gt;, and I got a couple random contributions that way. But prior to Hacktoberfest, user-statistician was limited to three languages: English, German, and Italian.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Two Weeks into Hacktoberfest:&lt;/strong&gt; A couple days before Hacktoberfest began, I added the topic to the repository, labeled all of the existing language translation issues with &lt;code&gt;Hacktoberfest&lt;/code&gt;, and posted about it here on Dev.to. In the first two weeks of Hacktoberfest, I've merged PRs from 12 different contributors, adding support for 12 more languages. The user-statistician GitHub Action now supports 15 languages: Bahasa Indonesia, Bengali, English, French, German, Hindi, Italian, Japanese, Korean, Lithuanian, Polish, Portuguese, Russian, Spanish, and Turkish. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lessons-learned-from-the-experience"&gt;
  &lt;/a&gt;
  Lessons Learned from the Experience
&lt;/h2&gt;

&lt;p&gt;99% of the code that I write is for my research on evolutionary computation, and other computational intelligence topics. It includes a handful of libraries including implementations of the relevant algorithms, a few repositories that provide example usage of those libraries, code to reproduce experiments from published articles, etc. None of it has a user interface. So most, if not all, of that code doesn't really motivate an internationalization effort, other than if I wanted to provide translations of API docs.&lt;/p&gt;

&lt;p&gt;Therefore, this was my first attempt at providing international support for software I've developed. I actually thought about this at the beginning. The user-statistician action is implemented in Python. Right at the beginning, I isolated into a single source code file all of the strings related to labeling the different stats, section headings used to organize the stats into a couple categories, and template strings for the heading at the top. Specifically, I used a couple Python dictionaries, with the locale code for the language as a key. This worked well, and the two languages (Italian and German) that were contributed prior to Hacktoberfest were easily merged.&lt;/p&gt;

&lt;p&gt;However, what I did not anticipate in that design was the potential for there to be multiple PRs (several in one case) submitted over a short time-frame (e.g., within the same day). And this is what I experienced with early Hacktoberfest contributions. The result was many conflicts requiring resolution prior to merge. Most of these were easy to resolve, but somewhat tedious. If I were to design another tool in the future with international support, I would likely isolate each locale into its own individual source file. JSON may have been the way to go for this particular GitHub Action since JSON is simple to parse from Python, perhaps using a file naming convention with the locale code as the filename (e.g., &lt;code&gt;en.json&lt;/code&gt; for the English version). Even the beginning of Hacktoberfest rush of new contributors would have been free of conflicting PRs since each would have been isolated from the others. Perhaps this is obvious to those of you with prior experience supporting multiple languages within an application or tool.&lt;/p&gt;

&lt;p&gt;I could potentially take the time to refactor in this very way. But at this point for this application, there would be little if any benefit to do so. Most of the languages with the largest numbers of native speakers are now accounted for, so I'm not likely to see several PRs coming in at about the same time with new language translations leading to the quantity of conflicts I experienced at the start of Hacktoberfest. So although I do believe in refactoring to improve maintainability, in this case I would not likely gain back the time needed to do so. &lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>github</category>
      <category>showdev</category>
      <category>githubactions</category>
    </item>
    <item>
      <title>Why use a headless commerce platform?</title>
      <author>Nicklas Gellner</author>
      <pubDate>Wed, 13 Oct 2021 18:55:45 +0000</pubDate>
      <link>https://dev.to/medusajs/why-use-a-headless-commerce-platform-g8a</link>
      <guid>https://dev.to/medusajs/why-use-a-headless-commerce-platform-g8a</guid>
      <description>&lt;p&gt;In the world of ecommerce, headless commerce platforms have rapidly gained interest in recent years, but what is the buzz really about? We interviewed more than 20 ecommerce managers from D2C brands to understand what elements they found to be most valuable in a headless commerce platform like &lt;a href="https://www.medusa-commerce.com/"&gt;Medusa&lt;/a&gt;. The findings are summarized below.&lt;/p&gt;

&lt;p&gt;Additionally, we will explain some of the functional differences between a monolithic and a headless commerce platform. For more technical insights into how Medusa works, please check out our &lt;a href="https://docs.medusa-commerce.com/quickstart/quick-start"&gt;documentation&lt;/a&gt; or &lt;a href="https://github.com/medusajs/medusa"&gt;GitHub repo&lt;/a&gt;.&lt;br&gt;
‍&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#monolithic-platforms-the-world-before-headless%C2%A0commerce"&gt;
  &lt;/a&gt;
  Monolithic platforms: The world before headless commerce
&lt;/h1&gt;

&lt;p&gt;Monolithic structures, such as Shopify, are known for their all-in-one characteristic that link backend and frontend interdependently into one solution. Frontend refers to the visual elements of a website that users can see and interact with, while backend refers to the parts not directly accessed by the user such as order processing, customer information storage etc.&lt;/p&gt;

&lt;p&gt;Monolithic solutions have always been popular for providing quick out-of-the-box solutions that make ecommerce easily available for everyone. However, as much as these solutions are easy to get started with, they often lead to pain points that companies realize as they grow. Here are some of the most common pain points we hear:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Customizability is limited due to monolithic solutions' templated setup&lt;/strong&gt;. Indeed, they are often built upon templated frontend designs, complicating the creation of a true on-brand experience for the customers. In a similar manner, limitations also apply in the use of outside plugins as monolithic solutions are not purposefully built for easy integrations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Monolithic solutions lack the flexibility that scaling merchants need&lt;/strong&gt;. Adapting code, adding functionality, or changing plugins take significant manpower and often lead to "hacked solutions" - i.e., suboptimal building choices that yield subsequent complications. A problematic example is multi-regional and currency support, which have caused a maintenance nightmare for businesses that need to set up individual webshops for each country they operate in because out-of-the-box functionality does not support expansions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Monolithic structures are not built for performance&lt;/strong&gt;. Due to multiple integrations and often overwhelming use of micro-plugins, many merchants observe decreasing page speed and lack of control over Search Engine Optimization (SEO) using a monolithic setup as they expand. Likewise, hosting solutions are using local servers which is not a performance-enhancing method compared to using distributed hosting possibilities otherwise available.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These traditional solutions' shortcomings have been central drivers provoking shifts from monolithic to headless setups in recent years. Let us briefly outline how headless commerce platforms work in opposition to the above.&lt;br&gt;
‍&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-headless-commerce-platforms-work"&gt;
  &lt;/a&gt;
  How headless commerce platforms work
&lt;/h1&gt;

&lt;p&gt;In essence, the term "headless commerce" refers to the architectural decoupling of the frontend and backend layer of an ecommerce platform. If you think of a traditional ecommerce application as a body, removing its 'head', or the frontend layer leaves you with the ecommerce backend. This separation ensures that each module within the application - be it a shopping cart, a payment gateway, or pricing engine - can function as a microservice that operates independently.&lt;/p&gt;

&lt;p&gt;This decoupled and modular architecture gives several structural advantages such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control the frontend:&lt;/strong&gt; Being able to choose the frontend layer that seems most fit for purpose and can be customized to the extent needed&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;API-first design:&lt;/strong&gt; More seamlessly integrate with other solutions as the backend is often purposefully made for integrations with outside solutions through APIs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Developer experience:&lt;/strong&gt; Increasing developers flexibility when building custom features to the setup - which is only enhanced with open-source visibility as is the case with Medusa&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Currently, there is a rapid interest from businesses in transitioning from monolithic into modular ecommerce platforms. A &lt;a href="https://wpengine.com/resources/the-state-of-headless-global-research-report/"&gt;study&lt;/a&gt; by WP Engine finds that more than 90% of the ecommerce businesses surveyed that do not currently operate headless are planning to transition in the future.&lt;br&gt;
‍&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-headless-commerce-platforms-are-changing-the%C2%A0game"&gt;
  &lt;/a&gt;
  How headless commerce platforms are changing the game
&lt;/h1&gt;

&lt;p&gt;Building with a headless commerce platform enables you to get structural benefits such as frontend control, API-first design, and an improved developer experience. But how does it translate into business impact?&lt;/p&gt;

&lt;p&gt;After interviewing +20 D2C eCommerce managers on their opinions about the headless commerce platforms, we have found the three areas that they see the most value from.&lt;br&gt;
‍&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customization"&gt;
  &lt;/a&gt;
  Customization
&lt;/h3&gt;

&lt;p&gt;The separation of frontend and backend enables you to build a perfect on-brand experience for the webshop visitors and ensures integrations are tailored to the shop's individual needs. Indeed, infinite, and specific modular changes allow ecommerce stores to creatively adapt to any desired design without predetermined and templated CMS constraints. In other words, headless commerce platforms have the advantage of giving merchants the freedom of expression to build however they want to enrich the user experience. Moreover, the API-first and open-source design of a headless commerce platform like Medusa ensures that merchants can take full ownership of their tech stack to build with best-in-breed technologies that best meet their needs. This setup also makes it easier to build custom functionality due to the direct code access giving merchants the right to innovate on their own distinction. In short, headless commerce platforms offer original and custom-built possibilities for merchants to design an ecommerce site that best matches themselves and their customers.&lt;br&gt;
‍&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flexibility"&gt;
  &lt;/a&gt;
  Flexibility
&lt;/h3&gt;

&lt;p&gt;Headless commerce platforms give webshops the flexibility to adjust their commerce setup as they grow. One example is the need for multi-regional currency-, shipping- and payment-support which is often not fully provided in most monolithic solutions. For Medusa, it has been essential to build this flexibility into the core to ensure that a global setup can be managed from one place and making it easy to adjust for local currency differences and shift between local shipping and payment providers. For other integrations such as CMS, analytics, and accounting solutions, it becomes smoother to shift around due to the API-first approach. We experienced this first-hand by building an extensive ERP integration in a record time of only 4 weeks; in comparison, the ERP vendor was used to these processes taking no less than 12 weeks with monolithic setups. Another place where the flexibility of headless commerce platform becomes handy is in the omni-channel setup: integrations can be facilitated to any type of sales channel from different POS systems to all types of online channels (e.g. SoMe platforms, market places, chatbots etc.) while gathering it all in one backend. To sum up, adjusting the tech setup to a merchant's evolving needs gets simplified with a headless commerce platform.&lt;br&gt;
‍&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h3&gt;

&lt;p&gt;Last but not least, a headless commerce platform gives you the ideal prerequisite for optimizing your page performance. Page speed is instrumental for the user experience and some &lt;a href="https://www.fasterize.com/en/loading-speed-web-performance-key-figures/"&gt;studies&lt;/a&gt; even suggest that a 0.1 sec. improvement is enough to boost conversions up to 8%. With a headless commerce platform, the frontend is behaving as an independent unit which enables users to get the interactive interface significantly faster. This can be done, as it allows websites to load the static content of a page (e.g., fixed images, plain text, etc.) before the dynamic and interactive components. Moreover, headless commerce platforms (especially open-source ones) will often contain fewer "quick fix plugins" as adjustments can be made directly to the core instead of requiring more plugins. On performance, headless commerce platforms also solve the problem of slow servers as they allow for the use of distributed cloud server networks that are significantly faster than using stationary remote ones. Finally, the ability to use an outside CMS allows for custom URL structure and better page control than what is possible with a solution like Shopify. URLs that contain self-explanatory keywords and that refer to one specific links maximizing search rankings along with the improved page speed. In sum, conversion relies heavily on SEO, itself revamped by headless' page speed, efficiency and control over page structure.&lt;br&gt;
‍&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#business-impact-of-a-headless-commerce%C2%A0platform"&gt;
  &lt;/a&gt;
  Business impact of a headless commerce platform
&lt;/h1&gt;

&lt;p&gt;As headless commerce platforms start to be more commonly used, it gets evident that the above benefits can have a profound measurable impact on webshops' overall performance and for the most part, with limited little developer support:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;TEKLA Fabrics&lt;/strong&gt; moved from WooCommerce to Medusa's headless commerce platform and achieved a 70% uplift in conversion and scaled to cover more than 50 markets. They achieved this with only one front-end developer to manage the full setup.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Burrow&lt;/strong&gt;, the home furniture retailer, observed a 30% increase in conversion rate and a 50% site speed improvement leveraging a headless commerce platform and a modern frontend. They achieved this progress only 2 months after the platform shift with limited developer support.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pretty Green&lt;/strong&gt; experienced a shift from 4- to 1-second response time on their commerce site, even during high traffic. Moreover, the shift to a headless commerce platform resulted in a +5% increase in average order value and a +6% rise in product recommendation clicks.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;K2 Sports&lt;/strong&gt; claimed that a shift to a headless commerce platform helped them meet their on-brand experience goal, created a site that was 75% faster, enabled them to publish content 90% more quickly, and boosted productivity by 50%, all while alleviating development dependencies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Medusa gives all merchants the possibility to achieve such meaningful success. We think the best way to do this is to plan for a shift to a headless commerce platform already early in the digital commerce journey. In reality, many problems encountered when scaling an ecommerce business simply come from not adopting to a more custom commerce platform early, as merchants tried to take an "easy" templated solution from the get-go, without considering the issues that build on top as you grow.&lt;br&gt;
‍&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lowering-the-bar-for-when-to-use-a-headless-commerce%C2%A0platform"&gt;
  &lt;/a&gt;
  Lowering the bar for when to use a headless commerce platform
&lt;/h1&gt;

&lt;p&gt;Headless commerce platforms present numerous benefits that are not negligible anymore in a world where competition is increasing online, platforms multiply, customers' expectations rise, and technology shapes ecommerce prosperity. In this context, accessibility should not be a barrier for any ambitious business willing to invest in their growth potential and shift to a headless commerce platform. That is why Medusa made it a key priority to:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Lower the bar for when businesses can shift to a headless commerce platform&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We do this by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating a setup that is easy to use and extend, even as a smaller merchant with limited developer resources&lt;/li&gt;
&lt;li&gt;Making a suite of plugins, quick starters, and migration tools available to make it easy to get up and run&lt;/li&gt;
&lt;li&gt;Making it free to use our cloud solution compared to many other competing platforms starting at +20,000 USD / year&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With a lower bar for entering into the world of headless commerce, we hope to make the benefits accessible to merchants of all sizes in the future. If you are interested to hear more, we are always happy to give you a &lt;a href="https://ky5eo2x1u81.typeform.com/to/OtbNv3tx"&gt;product demo&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>jamstack</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>ecommcerce</category>
    </item>
    <item>
      <title>Comparing Database Types to MongoDB</title>
      <author>Dubymar Tollinchi</author>
      <pubDate>Wed, 13 Oct 2021 18:47:40 +0000</pubDate>
      <link>https://dev.to/dubymarjtr/comparing-database-types-to-mongodb-1389</link>
      <guid>https://dev.to/dubymarjtr/comparing-database-types-to-mongodb-1389</guid>
      <description>&lt;p&gt;A &lt;strong&gt;library&lt;/strong&gt;. We know this place has tons of books, novels, magazines, and other products in-store. If we think that this library is a &lt;em&gt;database&lt;/em&gt;, we can think of their organization method (alphabetical, category, author, etc...) as a &lt;em&gt;database type&lt;/em&gt;. &lt;strong&gt;Database types&lt;/strong&gt; are patterns and structures used to organize data.&lt;/p&gt;

&lt;p&gt;The beginnings of database types go back to the early-60s, and through the years these technologies experienced an amazing development. Some of these historic types have served as the base to advanced database technologies, however, new types have been developed to solve new issues and requirements in modern DBMS. In 1969, &lt;strong&gt;relational databases&lt;/strong&gt; were introduced. This database type worked with tables, having primary keys and foreign keys that connect each table. Like this, tables can organize specific information and refer to other tables' information if needed.&lt;/p&gt;

&lt;p&gt;To access and manipulate this DBMS, a querying language named &lt;strong&gt;SQL&lt;/strong&gt; (Structured Query Language) was created. It connects tables through primary-foreign keys and allows to &lt;em&gt;filter data using constraints&lt;/em&gt;. Like this, we can write complex queries that are very powerful and useful.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* to retrieve all date in a table: */&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;TABLE_NAME&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* we can filter the data using constraints (WHERE).
If we have a PERSON table with attributes such as Name and Age we can filter the results depending on conditions */&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;PERSON&lt;/span&gt; 
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;Age&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But as the years pass, newer and better technologies are being developed to facilitate developers' jobs. &lt;strong&gt;NoSQL databases&lt;/strong&gt; are modern database types that manage data differently from the standard relational pattern. Although the name might sound like is the opposite of SQL, it stands for "Not-only SQL" or "Non-SQL", meaning that &lt;em&gt;it may allow SQL-like querying&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Some of them are &lt;strong&gt;Key-value databases&lt;/strong&gt;, which have a key and a value (self-explanatory, right?). They can store simple data such as a JSON object, an image, or plain text. We access the data using the key name. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Document databases&lt;/strong&gt; follow the same semantic as key-value databases, but this time they don't have random pieces of data, instead, they store &lt;em&gt;entire documents&lt;/em&gt;, often using formats like JSON or XML. Each document can have a different internal structure, and sometimes this type of database relates to both relational and key-value databases. &lt;strong&gt;MongoDB&lt;/strong&gt; is an example of a document database. &lt;/p&gt;

&lt;p&gt;How does &lt;strong&gt;MongoDB&lt;/strong&gt; compare to the relational model? As we mentioned above, the relational model stores different data in separate tables. Having dozens and dozens of tables can result in a massive amount of complexity to our application. This includes: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Being hard for people to use and understand.&lt;/li&gt;
&lt;li&gt;Difficult to add new features, having in mind all the tables related.&lt;/li&gt;
&lt;li&gt;Retrieving data from many tables involves code statements that might slow down our application.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unlike the relational model, MongoDB stores data using a document, and here we can think about a real piece of paper with specific data. Documents are a simple way to structure your data, being easier for computers (and humans) to process and understand.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// writing the same queries above, now using MongoDB&lt;/span&gt;
&lt;span class="c1"&gt;// .find() with a {} (empty document) inside , retrieves all the data within the collection&lt;/span&gt;
&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;

&lt;span class="c1"&gt;// This query will retrieve all individuals over 18 years old&lt;/span&gt;
&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;$gt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;}});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This DBMS makes adding new data easy, not having to worry about breaking any other data. It also knows how to coordinate multiple servers to store data, so if one server fails we don't have to worry about our application being affected.&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>javascript</category>
      <category>node</category>
      <category>database</category>
    </item>
    <item>
      <title>Bat Cloud: A Rails Project</title>
      <author>Dorthy Thielsen</author>
      <pubDate>Wed, 13 Oct 2021 18:36:12 +0000</pubDate>
      <link>https://dev.to/dotnotation/bat-cloud-a-rails-project-5c43</link>
      <guid>https://dev.to/dotnotation/bat-cloud-a-rails-project-5c43</guid>
      <description>&lt;p&gt;Today I finished my Ruby on Rails project which is my third final project for my Flatiron bootcamp. If you read my last blog, the concept of this project will be very familiar. I decided to redo my bat researchers’ log web application. With the power of Rails and learning new concepts, I knew I could make the original project even better. I did decide to rename the app Bat Cloud as it sounded better and a group of bats is sometimes called a cloud. If you didn’t read my last blog, I would recommend you do so, it is a quick read, and you can see the improvements. &lt;/p&gt;

&lt;p&gt;The main things I updated were a notes field, the associations, and a few new views and options. The note field update was partly to do with the fact that I had to have a many to many relationship. The associations between my models this time are as follows. Researchers have many notes, have many bats through notes, and have many discovered bats through a foreign key that associates a discovered bat to that researcher. Notes belong to a Researcher and a bat. Bats have many notes, have many researchers through notes, and belong to a discoverer (the researcher who created the bat entry). The new views include all researchers, and recently discovered bats which utilizes a scope method to sort the bats by date found. Another major improvement I made was adding a search field where a researcher can search by the bat tag number. I also implemented Omniauth so someone can log in via Google. I of course would like to add more features in the future, but I am happy with where this project is currently. &lt;/p&gt;

&lt;p&gt;I wanted to go over some of the challenges I faced with this project. I definitely struggled with my associations in the beginning and made things a lot more complicated than they needed to be. I originally wanted to have a separate model of an organization that would be the admin. After talking to my cohort lead, he said that he wouldn’t recommend going down that path at this point in time. Instead he suggested giving roles to certain researchers/users. This is what I ended up doing. Each researcher can either be an admin or a member. Any admin can change the access of any member. This of course isn’t the best method and I would like to improve this in the future. I originally tried to put an organization_id foreign key to associate a member with an organization but I realized that I really needed a separate model for organization to make this work. The other issue I faced with my associations was trying to have the bat belong to the researcher and the note, instead of having the note belong to the researcher and the bat. My cohort lead also brought up a good point about how many researchers could be taking notes on one bat. He also suggested having a foreign key that would associate a bat to the person who discovered the bat, which led to me adding the association of researchers having many discovered bats and a bat belonging to a discoverer through the discoverer_id that is a hidden field when you create a bat. Although I realized late in my project that my partial form for edit and new had the hidden field of discoverer_id so when someone edited a bat, they would become the discoverer. Also had to add a bunch of conditionals in case that researcher's account was deleted. I ended up figuring out my associations thanks to the help of my cohort lead. I am glad I talked things out with him before really starting to code. I see so many other students show up with bad associations and a finished project and having so many issues based on their associations. I wanted to make sure I took the time to nail those before getting too far.  &lt;/p&gt;

&lt;p&gt;Another thing I really struggled with was converting all of my time stamps/datetime into something readable. Since I have so many fields that were time stamps/datetime, it seemed ridiculous to write out strftime methods for all of them. I did a bunch of googling and liked the solution from &lt;a href="https://stackoverflow.com/questions/22255476/rails-formatting-date"&gt;stack overflow&lt;/a&gt; the best. The steps listed were: Create an initializer for it:&lt;br&gt;
&lt;code&gt;config/initializers/time_formats.rb&lt;/code&gt; &lt;br&gt;
Add something like this to it:&lt;br&gt;
&lt;code&gt;Time::DATE_FORMATS[:custom_datetime] = "%d.%m.%Y"&lt;/code&gt;&lt;br&gt;
And then use it the following way:&lt;br&gt;
&lt;code&gt;post.updated_at.to_s(:custom_datetime)&lt;/code&gt;&lt;br&gt;
The code I put in my &lt;code&gt;time_formats.rb&lt;/code&gt; was &lt;code&gt;Time::DATE_FORMATS[:custom_datetime] = "%B %d, %Y at %I:%M %P"&lt;/code&gt; &lt;br&gt;
In the show page: &lt;code&gt;@bat.updated_at.to_s(:custom_datetime)&lt;/code&gt;. This worked out great and then when the researcher looks at a bat’s show page all the dates are read as “October 05, 2021 at 12:00 am.” which is more readable than the UTC. I also found out about the datetime_select field on form helpers. This made it a lot easier for someone to enter the date and time in a universal format that would be easy to put in the database without error. Before when people were testing my app, they would often enter something invalid by switching the date and month as the entry wasn’t intuitive before. I am not sure if this was the best solution to my dates problem but it does work. It isn’t as dry as I would like it to be. If anyone has a better solution, please let me know. &lt;/p&gt;

&lt;p&gt;While I have been enjoying this bootcamp, I will say that a part of this section that was really lacking was the section on OmniAuth. The two labs that dealt with it, didn’t have you do anything with the information you were given from the third party. It would check that you were able to sign in, but not how to process that information in your own database. I was left scratching my head on what to do with it. For instance, they didn’t mention anything about the uid. They also didn’t tell you how to deal with multiple third parties. Granted there are videos and plenty of information to find out about all this on your own, but I expected them to give a little more on this very important topic. Also a problem I have noticed when I sign in with a provider is that a lot of websites want you to enter a password to delete your account, and your provider password doesn’t work, so I am always at a loss of what to do in those situations. I ended up using Google as my provider for this project as it is how I like to sign in to most websites. I thought it was cool that Google, and Github offer icons for you to use as a developer! I liked that Github even had light and dark options. &lt;/p&gt;

&lt;p&gt;Here is my OmniAuth method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;omniauth&lt;/span&gt;
       &lt;span class="vi"&gt;@researcher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Researcher&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_or_create_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;email: &lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:info&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="ss"&gt;:email&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
           &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:info&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="ss"&gt;:email&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
           &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:info&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
           &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:uid&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
           &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;provider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:provider&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
           &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;SecureRandom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="k"&gt;end&lt;/span&gt;

       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@researcher&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;valid?&lt;/span&gt;
           &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:researcher_id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@researcher&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt;
           &lt;span class="n"&gt;redirect_to&lt;/span&gt; &lt;span class="n"&gt;bats_path&lt;/span&gt;
       &lt;span class="k"&gt;else&lt;/span&gt;
           &lt;span class="n"&gt;flash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:danger&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@researcher&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;full_messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;", "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
           &lt;span class="n"&gt;redirect_to&lt;/span&gt; &lt;span class="n"&gt;login_path&lt;/span&gt;
       &lt;span class="k"&gt;end&lt;/span&gt;      
   &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I do want to keep working on this app. In the future, I want to add password reset, a more secure admin function, the ability to edit and delete field notes, more static pages, and more styling. However it is more important to continue with my bootcamp than work on this project forever. Especially working full time again, I need to keep making progress so I can graduate from this bootcamp and fully switch into my new career path.   &lt;/p&gt;

</description>
      <category>rails</category>
      <category>ruby</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Docker, easy start with nodejs-express app (Part-1)</title>
      <author>Omar Diaaeldine Elwakeel</author>
      <pubDate>Wed, 13 Oct 2021 18:36:06 +0000</pubDate>
      <link>https://dev.to/omardiaa48/docker-easy-start-with-nodejs-express-app-part-1-1ien</link>
      <guid>https://dev.to/omardiaa48/docker-easy-start-with-nodejs-express-app-part-1-1ien</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mDzCXPYK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3mzhgiakhspdknm7fdc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mDzCXPYK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3mzhgiakhspdknm7fdc.jpg" alt="Hello Docker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#docker-what-is-it-how-is-it-beneficial-how-to-easily-use-it"&gt;
  &lt;/a&gt;
  Docker, what is it? how is it beneficial? how to easily use it?
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#this-is-going-to-be-a-series-of-posts-this-will-be-the-first-of-them-to-explain-some-easy-steps-to-start-using-docker-containers-and-deploy-apps-with-it-in-this-very-step-we-are-going-to-use-nodejs-with-express-framework-to-host-a-hello-world-app"&gt;
  &lt;/a&gt;
  This is going to be a series of posts, this will be the first of them to explain some easy steps to start using docker containers and deploy apps with it, in this very step we are going to use &lt;a href="https://nodejs.org/en/"&gt;nodejs&lt;/a&gt; with &lt;a href="https://expressjs.com/"&gt;express&lt;/a&gt; framework to host a hello world app.
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#so-what-is-docker"&gt;
  &lt;/a&gt;
  So what is docker?
&lt;/h3&gt;

&lt;p&gt;Docker is lovely developer tool that makes it easy to install and run software without worrying about setup and dependencies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-is-it-beneficial"&gt;
  &lt;/a&gt;
  How is it beneficial?
&lt;/h3&gt;

&lt;p&gt;This is because it makes containers, imagine a multi layer cake where you take a verticle slice of it, so you take from each layer a portion but you don't care about the rest of the slices. Here is an illustration for it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wr6pkjZI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5kocawlk41qq7h27grz.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wr6pkjZI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5kocawlk41qq7h27grz.JPG" alt="Docker containers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which makes it easy for microservices, one example that we will be seeing soon is deploying multiple services with different environemnts or maybe different versions of the very same dependency, like different nodejs versions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-it"&gt;
  &lt;/a&gt;
  How to use it?
&lt;/h3&gt;

&lt;p&gt;This is my favorite part, where it's enough with the talking and we start to write some code!!&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#prerequirements"&gt;
  &lt;/a&gt;
  Pre-requirements:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Installed &lt;strong&gt;NodeJs&lt;/strong&gt;, any version and that's what is cool with docker!!&lt;/li&gt;
&lt;li&gt;Installed &lt;strong&gt;npm&lt;/strong&gt;, which usually comes with Nodejs.&lt;/li&gt;
&lt;li&gt;Installed &lt;strong&gt;Docker&lt;/strong&gt; for windows,linux,...etc&lt;/li&gt;
&lt;li&gt;Registered &lt;strong&gt;Dockerhub account&lt;/strong&gt;, it's for free ;)
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First lets setup our server we start by initializing the folder structure&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So you get a package.json file with initial setup.&lt;/p&gt;

&lt;p&gt;now for express&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm add express
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;add the script to the scripts part in package.json&lt;br&gt;
&lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;....
  "scripts": {
    "start": "node index.js",
  },
....
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;create index.js file in the root directory&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express')

const app = express()

app.get('/', (req,res) =&amp;gt; {
  res.send('Hello World!!')
})

server.listen(3000, () =&amp;gt; {
  console.log(`Listening on port 3000`);
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the terminal type, &lt;code&gt;npm run start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;go to the browser and hit localhost:3000 and here it's there, 'Hello world!!'&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#so-where-is-docker-here-it-comes-in-the-next-steps-"&gt;
  &lt;/a&gt;
  So Where is docker??? Here it comes in the next steps ;)
&lt;/h4&gt;

&lt;p&gt;in the root directory create a file &lt;strong&gt;with no extension with the name Dockerfile&lt;/strong&gt; with the following content&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM node:alpine

WORKDIR /app
COPY package.json .
RUN npm install
COPY . .

CMD ["npm", "start"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#so-what-is-going-on"&gt;
  &lt;/a&gt;
  So What is going on???
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;FROM node:alpine&lt;/code&gt; -&amp;gt; is you saying to docker you want to start from an initial image that exists publicly on dockerhub, because once you go with docker you have no nodejs runtime that you have on your machine so you need this dependency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;WORKDIR /app&lt;/code&gt; -&amp;gt; this is the work directory inside the container you are making.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;COPY package.json .&lt;/code&gt;-&amp;gt; here you are copying the package.json file to the work directory, please take notice the '.' context which means to copy in the context directory.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;RUN npm install&lt;/code&gt; -&amp;gt; to install the required packages, in our case it's expressjs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;COPY . .&lt;/code&gt; -&amp;gt; here we copy everything else to the work directory, which is the source code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;CMD ["npm", "start"]&lt;/code&gt; -&amp;gt; our start script that much match the one in the package.json&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#right-now-you-should-be-having-a-question-why-did-we-copy-twice-why-not-only-one-time-at-the-end"&gt;
  &lt;/a&gt;
  Right now you should be having a question, why did we copy twice, why not only one time at the end??
&lt;/h4&gt;

&lt;p&gt;To answer this, I need you to wait for a second an start make use of this docker image. At this moment you have an image but you cant really use it, we need to do two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Build it&lt;/li&gt;
&lt;li&gt;Push it to dockerhub&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After that we can run it.&lt;/p&gt;

&lt;p&gt;So in you terminal run the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker build -t &amp;lt;your docker id&amp;gt;/&amp;lt;name of the image(eg. hello-world)&amp;gt; .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;again notice the . context&lt;/p&gt;

&lt;p&gt;now you should be seeing something like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kts5AzzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnwjuffjscxr9yzyv228.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kts5AzzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnwjuffjscxr9yzyv228.png" alt="Docker build"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;now you have this image locally, to view all your images&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker image ls
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zUeBQYX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aibgoefn3lv19k94t260.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zUeBQYX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aibgoefn3lv19k94t260.png" alt="Docker images"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;now we need to make this image have its way to your hub, So in you terminal run the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker push &amp;lt;your docker id&amp;gt;/&amp;lt;name of the image(eg. hello-world)&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to answer the question about copying twice in the Dockerfile configuration, this was because each command makes a layer, so we:&lt;br&gt;
1.Copy the package.json file which has all the dependencies in the project&lt;br&gt;
2.Install them using npm install&lt;br&gt;
3.We copy the rest of the files which is the code&lt;br&gt;
So whenever we make a change in the source code, only the layer that copies the code is affected and we dont install the packages again, in other words the rest of the layers are cahced.&lt;/p&gt;

&lt;p&gt;after that you can got to your docker hub after signing in and you will find it there &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h1mksTPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0fsx477bnyg7tl1fsqh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h1mksTPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0fsx477bnyg7tl1fsqh.png" alt="Docker hub"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#atlast-lets-run-this-image-but-notice-something-while-running-docker-you-can-adjust-the-port-its-listening-on-so-this-app-should-be-listening-to-port-3000-but-we-can-adjust-the-port-where-it-should-take-requests-from-think-of-it-as-an-outside-port"&gt;
  &lt;/a&gt;
  Atlast, let's run this image, but notice something while running docker you can adjust the port it's listening on, so this app should be listening to &lt;strong&gt;port 3000&lt;/strong&gt;, but we can adjust the port where it should take requests from, think of it as an &lt;strong&gt;outside port&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;So in you terminal run the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run -p 3005:3000 &amp;lt;your docker id&amp;gt;/&amp;lt;name of the image(eg. hello-world)&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Voila!!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4DaTjmUq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2iibt7kffd89ozhpps1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4DaTjmUq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2iibt7kffd89ozhpps1.png" alt="Image running"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;go and hit &lt;code&gt;localhost:3005/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and you should be seeing the following&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1d00tfal--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhdxwb2c3phj3ac8hmr7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1d00tfal--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhdxwb2c3phj3ac8hmr7.png" alt="Hello world response"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-hope-you-liked-this-post-im-intending-the-post-some-other-related-posts-actually-other-parts-of-this-series-where-we-take-it-a-bit-harder-and-a-bit-more-advanced-im-a-starter-myself-so-if-you-noticed-anything-that-you-recommend-against-im-happy-to-hear-from-you-thanks-again"&gt;
  &lt;/a&gt;
  I hope you liked this post, I'm intending the post some other related posts (actually other parts of this series where we take it a bit harder and a bit more advanced), I'm a starter myself, so if you noticed anything that you recommend against, I'm happy to hear from you, Thanks again!!
&lt;/h3&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>docker</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Beginner Friendly Repository to Contribute in Hacktoberfest</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Wed, 13 Oct 2021 18:25:12 +0000</pubDate>
      <link>https://dev.to/surajondev/beginner-friendly-repository-to-contribute-in-hacktoberfest-3af6</link>
      <guid>https://dev.to/surajondev/beginner-friendly-repository-to-contribute-in-hacktoberfest-3af6</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;One of the biggest Open Source events is going on ie Hacktoberfest. You can contribute to any open source project on Github or Gitlab and make valid 4 accepted Pull requests to avail perks. Perks include either T-shirt or plant a tree, depending on you.&lt;/p&gt;

&lt;p&gt;You can participate in the event by registering yourself on &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;&lt;strong&gt;Hacktoberfest&lt;/strong&gt;&lt;/a&gt; with your Github/Gitlab profile.&lt;/p&gt;

&lt;p&gt;I am working as a participant and also as a maintainer to help other beginners to make their contribution to my repo.&lt;/p&gt;

&lt;p&gt;Today I am going to list a few repositories from my GitHub profile, where you can contribute. The repository is beginner-friendly and most are for web developers.&lt;/p&gt;

&lt;p&gt;So let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-contribute"&gt;
  &lt;/a&gt;
  How to Contribute
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;In any repository, Go to the website.&lt;/li&gt;
&lt;li&gt;After learning about the repository and website. Go to Issue Tab.&lt;/li&gt;
&lt;li&gt;You can create a news issue or work on the previous issue.&lt;/li&gt;
&lt;li&gt;Just leave a message in issue regarding working on the issue.&lt;/li&gt;
&lt;li&gt;Then I will assign you on the issue.&lt;/li&gt;
&lt;li&gt;You can work on it and create a pull request.&lt;/li&gt;
&lt;li&gt;If everything goes well, I will merge it.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#uiuxdesign"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/surajondev/UI-UX-Design"&gt;UI-UX-Design&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A repository created to share different components such as Buttons, Forms, containers, Cards, etc. You can improve the previous components and layout of the website. You can also create your component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Contribution:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improve the Layout of the website&lt;/li&gt;
&lt;li&gt;Add more components&lt;/li&gt;
&lt;li&gt;Improve Documentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Website:&lt;/strong&gt; &lt;a href="https://surajondev.github.io/UI-UX-Design/"&gt;https://surajondev.github.io/UI-UX-Design/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub Repo:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/surajondev"&gt;
        surajondev
      &lt;/a&gt; / &lt;a href="https://github.com/surajondev/UI-UX-Design"&gt;
        UI-UX-Design
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Different CSS Components
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
UI-UX-Design&lt;/h1&gt;
&lt;p&gt;This is not something using any framework and I think in future I am not going to add any javasscript too.&lt;/p&gt;
&lt;h3&gt;
This is for CSS lover who want to learn UI/UX Designs&lt;/h3&gt;
&lt;h2&gt;
You can visit the site &lt;a href="https://surajondev.github.io/UI-UX-Design/" rel="nofollow"&gt;UI/UX Desing&lt;/a&gt;
&lt;/h2&gt;
&lt;h2&gt;
Following languages have been used&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/html/html.png"&gt;&lt;img alt="HTML5" width="26px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--m6BdzRY1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/html/html.png"&gt;&lt;/a&gt; HTML&lt;/li&gt;
&lt;li&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/css/css.png"&gt;&lt;img alt="CSS3" width="26px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--RgbjQBTP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/css/css.png"&gt;&lt;/a&gt; CSS&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/surajondev/UI-UX-Design"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/surajondev/JavaScript"&gt;JavaScript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A JavaScript-based repository containing projects from Basic to Advance. It already has projects like Coin Flip, Clock, Word Count, Background Changer, etc. You can add more JavaScript-based projects into the repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Contribution:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add more JavaScript Project&lt;/li&gt;
&lt;li&gt;Improve Documentation&lt;/li&gt;
&lt;li&gt;Work on other issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;GitHub Repo:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/surajondev"&gt;
        surajondev
      &lt;/a&gt; / &lt;a href="https://github.com/surajondev/JavaScript"&gt;
        JavaScript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      From Basic to Advance JavaScript Project
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
JavaScript&lt;/h1&gt;
&lt;p&gt;A JavaScript Repository to creat web app from basic to advance leve.&lt;/p&gt;
&lt;h3&gt;
Introduction&lt;/h3&gt;
&lt;p&gt;This repostiory is mainly created to create web app using JavaScript. This app can level from beginner to expert level.&lt;/p&gt;
&lt;h2&gt;
Contribution&lt;/h2&gt;
&lt;p&gt;Read &lt;code&gt;Contribution.md&lt;/code&gt; for more details.&lt;/p&gt;
&lt;p&gt;Following languages have been used&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/html/html.png"&gt;&lt;img alt="HTML5" width="26px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--m6BdzRY1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/html/html.png"&gt;&lt;/a&gt; HTML&lt;/li&gt;
&lt;li&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/css/css.png"&gt;&lt;img alt="CSS3" width="26px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--RgbjQBTP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/css/css.png"&gt;&lt;/a&gt; CSS&lt;/li&gt;
&lt;li&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/javascript/javascript.png"&gt;&lt;img alt="JavaScript" width="26px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--HfDzN1OW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/javascript/javascript.png"&gt;&lt;/a&gt; JavaScript&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/surajondev/JavaScript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h2&gt;
  &lt;a href="#getweather"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/surajondev/get-weather"&gt;Get-Weather&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;An Open Weather API-based weather app was developed using the react as frontend. It is hosted on GitHub pages. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Contribution:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improve the Layout of the website&lt;/li&gt;
&lt;li&gt;Add more details&lt;/li&gt;
&lt;li&gt;Improve Cards that show details&lt;/li&gt;
&lt;li&gt;Better Color Combination for Website&lt;/li&gt;
&lt;li&gt;Dark and Light Mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Website:&lt;/strong&gt; &lt;a href="https://surajondev.github.io/get-weather/"&gt;https://surajondev.github.io/get-weather/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub Repo:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/surajondev"&gt;
        surajondev
      &lt;/a&gt; / &lt;a href="https://github.com/surajondev/get-weather"&gt;
        get-weather
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Get weather website run using react framework. OpenWeather API is used to fetch information.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/github_username/repo/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/e407a23743e06cbde02e7e81e499225775c94db55536ab0b28ab1d9b31d9eb57/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6769746875625f757365726e616d652f7265706f2e7376673f7374796c653d666f722d7468652d6261646765" alt="Contributors"&gt;&lt;/a&gt;
&lt;a href="https://github.com/github_username/repo/network/members"&gt;&lt;img src="https://camo.githubusercontent.com/ad541b200a5063ef3ec6c35adef2530e238d759ccc74bbaadc7a524af7ba4495/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6769746875625f757365726e616d652f7265706f2e7376673f7374796c653d666f722d7468652d6261646765" alt="Forks"&gt;&lt;/a&gt;
&lt;a href="https://github.com/github_username/repo/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/a672ed63f7420230009201653fdc38736e864660cb819e11ec3b576a6b7f52c6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6769746875625f757365726e616d652f7265706f2e7376673f7374796c653d666f722d7468652d6261646765" alt="Stargazers"&gt;&lt;/a&gt;
&lt;a href="https://github.com/github_username/repo/issues"&gt;&lt;img src="https://camo.githubusercontent.com/a65c06f71d08e4c7210a512dcfb75415a04cabf58bc355ac4b76178a56bfcb3e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6769746875625f757365726e616d652f7265706f2e7376673f7374796c653d666f722d7468652d6261646765" alt="Issues"&gt;&lt;/a&gt;
&lt;a href="https://github.com/github_username/repo/blob/master/LICENSE.txt"&gt;&lt;img src="https://camo.githubusercontent.com/c3acae721005962432b3958957253e828ef6df74b2a1f668d580fd520a50027e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6769746875625f757365726e616d652f7265706f2e7376673f7374796c653d666f722d7468652d6261646765" alt="MIT License"&gt;&lt;/a&gt;
&lt;a href="https://linkedin.com/in/github_username" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1ffde4ea8d2869a62cdf80282516c524e1109befc83d6339aae7a55d94ff4ae5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4c696e6b6564496e2d626c61636b2e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d6c696e6b6564696e26636f6c6f72423d353535" alt="LinkedIn"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
  &lt;a href="https://github.com/github_username/repo_name"&gt;
    &lt;img src="https://camo.githubusercontent.com/280cfe498bcd80f721238134e1962acaed58bfb2ec874eaf7a1fbf5a831ffee9/68747470733a2f2f66726565706e67696d672e636f6d2f7468756d622f776561746865722f32333532372d332d776561746865722d7468756d622e706e67" alt="Logo" width="80" height="80"&gt;
  &lt;/a&gt;
  &lt;/p&gt;
&lt;h3&gt;
Get Weather&lt;/h3&gt;
  &lt;p&gt;
    Access weather of different cities and other weather realated data
    &lt;br&gt;
    &lt;a href="https://github.com/github_username/repo_name"&gt;&lt;strong&gt;Explore the docs »&lt;/strong&gt;&lt;/a&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://surajondev.github.io/get-weather/" rel="nofollow"&gt;View Demo&lt;/a&gt;
    ·
    &lt;a href="https://github.com/github_username/repo_name/issues"&gt;Report Bug&lt;/a&gt;
    ·
    &lt;a href="https://github.com/github_username/repo_name/issues"&gt;Request Feature&lt;/a&gt;
  &lt;/p&gt;

  &lt;h2&gt;
Table of Contents&lt;/h2&gt;
  &lt;ol&gt;
    &lt;li&gt;
      &lt;a href="https://github.com/surajondev/get-weather#about-the-project"&gt;About The Project&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href="https://github.com/surajondev/get-weather#built-with"&gt;Built With&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href="https://github.com/surajondev/get-weather#getting-started"&gt;Getting Started&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href="https://github.com/surajondev/get-weather#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/surajondev/get-weather#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href="https://github.com/surajondev/get-weather#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://github.com/surajondev/get-weather#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://github.com/surajondev/get-weather#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://github.com/surajondev/get-weather#license"&gt;License&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://github.com/surajondev/get-weather#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://github.com/surajondev/get-weather#acknowledgements"&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;


&lt;h2&gt;
About The Project&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://surajondev.github.io/get-weather/" rel="nofollow"&gt;![Product Name Screen Shot][product-screenshot]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The project is to provide information to the people regarding the weather of different location.
Its is powered by OpenWeather API.&lt;/p&gt;
&lt;h3&gt;
Built With&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/react"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openweathermap.org/" rel="nofollow"&gt;OpenWeather API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;p&gt;To get a local copy up and running follow these simple steps.&lt;/p&gt;
&lt;h3&gt;
Prerequisites&lt;/h3&gt;
&lt;p&gt;This is an example of how to list things you need to use the software and how to install them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;npm
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install 
npm run&lt;/pre&gt;

&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Installation&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Clone the repo
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;git clone https://github.com/surajondev/get-weather.git&lt;/pre&gt;

&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Install NPM packages
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install&lt;/pre&gt;

&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;You can easily enter the name of city and then it will fetch all the weather information regarding it.&lt;/p&gt;

&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/surajondev/get-weather"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#texttospeech"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/surajondev/text-to-speech"&gt;Text-to-Speech&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A Webapp that takes the text and converts into speech. It has support for more than 30 Major languages. It is hosted on netlify.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Contribution:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improve the Layout of the website&lt;/li&gt;
&lt;li&gt;Add more details&lt;/li&gt;
&lt;li&gt;Improve Cards that show details&lt;/li&gt;
&lt;li&gt;Better Color Combination for Website&lt;/li&gt;
&lt;li&gt;Dark and Light Mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Website:&lt;/strong&gt; &lt;a href="https://surajondev.github.io/get-weather/"&gt;https://surajondev.github.io/get-weather/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub Repo:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/surajondev"&gt;
        surajondev
      &lt;/a&gt; / &lt;a href="https://github.com/surajondev/text-to-speech"&gt;
        text-to-speech
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Conver text into speech 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;You can convert text into speech . Click Here to see the website &lt;a href="https://text-to-speeech.netlify.app/" rel="nofollow"&gt;Text-to-Speech&lt;/a&gt;
Recommended to use on PC&lt;/p&gt;
&lt;h2&gt;
Following languages have been used&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/html/html.png"&gt;&lt;img alt="HTML5" width="26px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--m6BdzRY1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/html/html.png"&gt;&lt;/a&gt; HTML&lt;/li&gt;
&lt;li&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/css/css.png"&gt;&lt;img alt="CSS3" width="26px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--RgbjQBTP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/css/css.png"&gt;&lt;/a&gt; CSS&lt;/li&gt;
&lt;li&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/javascript/javascript.png"&gt;&lt;img alt="JavaScript" width="26px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--HfDzN1OW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/javascript/javascript.png"&gt;&lt;/a&gt; JavaScript&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fork the repo&lt;/li&gt;
&lt;li&gt;Clone this repo using &lt;code&gt;git clone https://github.com/surajondev/text-to-speech.git&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Change Directory to using &lt;code&gt;cd text-to-speech&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contribution&lt;/h2&gt;
&lt;p&gt;We would appreciate if you decide to improve the repository.
If so, Thank You in advance.&lt;/p&gt;
&lt;p&gt;Read &lt;a href="https://github.com/surajondev/text-to-speech/blob/master/CONTRIBUTION.md"&gt;&lt;code&gt;CONTRIBUTION&lt;/code&gt;&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;
Licence&lt;/h2&gt;
&lt;p&gt;This is distributed under MIT Licence. For more details read &lt;a href="https://github.com/surajondev/text-to-speech/blob/master/LICENSE"&gt;&lt;code&gt;LICENCE&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/surajondev/text-to-speech"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h2&gt;
  &lt;a href="#animationnation"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/zero-to-mastery/Animation-Nation"&gt;Animation-Nation&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;One of my favorite repositories to recommend for beginners to contribute and learn about Git and GitHub. You can create animation using CSS and HTML. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Contribution:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add your animation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Website:&lt;/strong&gt; &lt;a href="https://animation-nation.netlify.app/"&gt;https://animation-nation.netlify.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub Repo:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/zero-to-mastery"&gt;
        zero-to-mastery
      &lt;/a&gt; / &lt;a href="https://github.com/zero-to-mastery/Animation-Nation"&gt;
        Animation-Nation
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A ZTM Challenge for Hacktoberfest 2019
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;blockquote&gt;
&lt;h3&gt;
&lt;strong&gt;UPDATE:&lt;/strong&gt; Event Concluded!&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;This project started as a project for Hacktoberfest 2019, Thank you to everyone that participated and made this project what it is today and we look forward to seeing you all at Hacktoberfest 2020
Feel free to continue adding your designs to the master branch, you can check out the &lt;code&gt;Hactoberfest-Edition&lt;/code&gt; branch to see the project as it was at the end of the event.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Interested in more events? keep an eye on our Events page &lt;a href="https://zerotomastery.io/events?utm_source=github&amp;amp;utm_medium=animation-nation" rel="nofollow"&gt;HERE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/zero-to-mastery/Animation-Nation./colourpencils.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4aIYwjuS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/zero-to-mastery/Animation-Nation./colourpencils.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sharpen your pencils, we're getting creative!&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;
Animation Nation&lt;/h1&gt;
&lt;p&gt;Hello and welcome to Animation Nation, a ZTM project for Hacktoberfest 2019! This site aims to showcase the creative talents of the ZTM community :)&lt;/p&gt;
&lt;h1&gt;
Rules&lt;/h1&gt;
&lt;p&gt;The rules are simple. You have to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use HTML &lt;code&gt;&amp;lt;divs&amp;gt;&lt;/code&gt; and CSS only! No JS, and no SVGs!&lt;/li&gt;
&lt;li&gt;Have at least one animation in your work&lt;/li&gt;
&lt;li&gt;Please make sure that the code is indeed your own…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/zero-to-mastery/Animation-Nation"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;I hope you will contribute to some of my repositories that are beginner-friendly and learn about open source.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy Coding!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>javascript</category>
      <category>css</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
