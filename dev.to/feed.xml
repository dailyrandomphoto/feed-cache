<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 Popular Frontend Development Tools in 2021</title>
      <author>Esther Agbaje</author>
      <pubDate>Mon, 15 Nov 2021 16:47:33 +0000</pubDate>
      <link>https://dev.to/estheragbaje/5-popular-frontend-development-tools-in-2021-1pg2</link>
      <guid>https://dev.to/estheragbaje/5-popular-frontend-development-tools-in-2021-1pg2</guid>
      <description>&lt;p&gt;As a frontend developer, you'll be building out web designs (usually handed over from a User Interface Designer) with programming languages like HTML, CSS, and JavaScript.&lt;/p&gt;

&lt;p&gt;However, the increasing number of frontend developer tools out there make it difficult to decide which to pick for your next project.  I've compiled five popular frontend developer tools you should include in your workflow that boost productivity🚀🚀&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A good understanding &lt;em&gt;of what these tools are, their features, tradeoffs, and ease of use can help you decide the right one to use.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We'll explore these popular frontend development tools under the following categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript frameworks&lt;/li&gt;
&lt;li&gt;JAMStack&lt;/li&gt;
&lt;li&gt;UI Component Libraries&lt;/li&gt;
&lt;li&gt;Quality Assurance &amp;amp; Testing&lt;/li&gt;
&lt;li&gt;Low Code Tools&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#i-javascript-frameworks"&gt;
  &lt;/a&gt;
  I. JAVASCRIPT FRAMEWORKS
&lt;/h2&gt;

&lt;p&gt;JavaScript frameworks are one of the most preferred platforms to build dynamic web applications. They make complex Javascript processes such as DOM manipulation(Document Object Model), complex state management, routing between pages, form data management, etc., very straightforward.&lt;/p&gt;

&lt;p&gt;One of the most popular JavaScript frameworks is &lt;strong&gt;React.js.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/"&gt;&lt;strong&gt;ReactJS&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;According to a &lt;a href="https://insights.stackoverflow.com/survey/2020"&gt;StackOverflow survey in 2020&lt;/a&gt;, JavaScript continues to be the most used language, with React ranked as the second most popular JavaScript framework. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTrkIK3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1isqj0zu66a6bunxxg7z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTrkIK3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1isqj0zu66a6bunxxg7z.png" alt="Popular JavaScript Frameworks" width="880" height="406"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React is also well-known for its:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;vibrant community&lt;/li&gt;
&lt;li&gt;declarative syntax using JSX&lt;/li&gt;
&lt;li&gt;ease of managing and sharing state using hooks &lt;/li&gt;
&lt;li&gt;large ecosystem of packages to solve specific problems&lt;/li&gt;
&lt;li&gt;cross-platform capabilities (React Native, React 3D)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These key features make frontend developers pick React.js over other counterparts like Vue.js and Angular.&lt;br&gt;
 &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ii-jamstack"&gt;
  &lt;/a&gt;
  II. JAMSTACK
&lt;/h2&gt;

&lt;p&gt;JAMStack stands for &lt;strong&gt;JavaScript, APIs, and Markup.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;It's a modern front-end architecture that helps developers build fast, performant, and scalable websites or web apps.&lt;/p&gt;

&lt;p&gt;The top emerging JAMStack frameworks are &lt;a href="https://tsh.io/state-of-frontend/"&gt;Gatsby and Next.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3-hSfMm7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jfww644km8a3tac8qtmj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3-hSfMm7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jfww644km8a3tac8qtmj.png" alt="Top JAMStack tools" width="880" height="543"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While Gatsby and Next.js have some overlapping features, I personally prefer Next.js and I'll tell you why shortly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextjs.org/"&gt;&lt;strong&gt;Next.js&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next.js is a React framework for developing single-page Javascript applications. It was developed by &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt; to abstract the complexities that come with using Reactjs.&lt;/p&gt;

&lt;p&gt;Next.js makes it seamless to create:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;statically rendered sites (like blogs, magazines, corporate websites)&lt;/li&gt;
&lt;li&gt;server-rendered sites (like eCommerce shops, SaaS software, etc.)&lt;/li&gt;
&lt;li&gt;or both, depending on your need&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some of the features that stand Next.js out are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Image Optimization:&lt;/strong&gt; Images take up to 50% of most web pages. Next.js has built-in image optimization to ensure images don't have a negative impact on your app's load time.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data fetching:&lt;/strong&gt; Next.js eliminates the need for loading spinners by making it possible to fetch data at build time or on the server.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Routing:&lt;/strong&gt; Creating a route by adding a file to the &lt;code&gt;pages&lt;/code&gt; directory is such a pleasure!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next.js looks promising as a React framework because its unique features improve developer productivity. &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#iii-ui-component-libraries"&gt;
  &lt;/a&gt;
  III. UI COMPONENT LIBRARIES
&lt;/h2&gt;

&lt;p&gt;When starting a new project, you'll likely face the decision whether to build your UI internally or to buy a ready-made library of UI components. &lt;/p&gt;

&lt;p&gt;In most cases, using an existing UI component library saves you time, increases developer productivity, and helps you ship your product to your customers faster.&lt;/p&gt;

&lt;p&gt;Some popular UI component libraries include Material UI, AntDesign, Radix UI and Chakra UI. After using some of these libraries, I’ve been so consistently impressed with the simplicity, modularity, flexibility and ease of use of Chakra UI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chakra-ui.com/"&gt;&lt;strong&gt;Chakra UI&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With over 22,000 Github stars, Chakra UI is blazing hot in the front-end developer community.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6EK7swn7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7jqanc8soq3zq4n4nza.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6EK7swn7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7jqanc8soq3zq4n4nza.png" alt="Chakra UI" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's an open-source React component library (released in 2019) that provides the building blocks you need to create accessible websites and apps.&lt;/p&gt;

&lt;p&gt;Some features that make Chakra UI delightful for frontend developer are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Style props:&lt;/strong&gt; Chakra UI comes with a very intuitive, &lt;a href="https://chakra-ui.com/docs/features/style-props"&gt;prop-based model of styling components&lt;/a&gt;, which makes it easy to use&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Accessibility:&lt;/strong&gt; Getting components to have the right color contrast, keyboard, and screen reader accessibility comes for free!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Beautiful and customizable Components:&lt;/strong&gt; &lt;a href="https://chakra-ui.com/docs/getting-started"&gt;All Chakra's components&lt;/a&gt; look stunning by default and come with dark mode support. Who doesn't love dark-mode?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you need to build a React application, I strongly recommend using Chakra UI as the starting point for your UI elements. It's a real time saver! If you're a Vue developer, you'd want to check out &lt;a href="https://vue.chakra-ui.com/"&gt;Chakra UI Vue&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#iv-quality-assurance-amp-testing"&gt;
  &lt;/a&gt;
  IV. QUALITY ASSURANCE &amp;amp; TESTING
&lt;/h2&gt;

&lt;p&gt;Front-end testing is pivotal in ensuring web apps are stable and reliable. And as a front-end developer, you are responsible for making that happen! &lt;/p&gt;

&lt;p&gt;To achieve this, you need an excellent suite of automated tests to ensure that nothing breaks when your users interact with your app.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://2020.stateofjs.com/en-US/technologies/testing/"&gt;2020 State of JS Testing&lt;/a&gt; ranks Testing Library, Jest and Cypress as one of the popular tools for testing. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xu9stGrK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pplsg7fvs3ef3o58talw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xu9stGrK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pplsg7fvs3ef3o58talw.png" alt="Testing tools" width="880" height="628"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of the popular tools, &lt;strong&gt;Cypress&lt;/strong&gt; is a top pick.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.cypress.io/"&gt;Cypress&lt;/a&gt; is a JavaScript end-to-end testing framework that allows front-end developers and QA engineers to write automated tests for their web applications.&lt;/p&gt;

&lt;p&gt;Two features that stand Cypress out are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Automatic waiting:&lt;/strong&gt; Automatic waiting is a mechanism built into Cypress that enables it to wait for elements to appear in the DOM before executing any query or assertion. By default, &lt;a href="https://docs.cypress.io/guides/core-concepts/introduction-to-cypress#When-Elements-Are-Missing"&gt;Cypress waits for 4 seconds&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Real-Time Reload:&lt;/strong&gt; Cypress can detect whenever you save changes to your tests.  Cypress automatically re-runs in the browser without the need to trigger the run manually.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cypress also offers &lt;a href="https://www.cypress.io/features"&gt;more features&lt;/a&gt; such as debuggability, spies, stubs &amp;amp; clocks, and many more. With Cypress, you get to ship better code to production. &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#v-low-code-tools"&gt;
  &lt;/a&gt;
  V. LOW CODE TOOLS
&lt;/h2&gt;

&lt;p&gt;As the name implies, low code tools require little to no code to build fully-featured websites and web applications.&lt;/p&gt;

&lt;p&gt;A &lt;a href="https://go.forrester.com/blogs/why-you-need-to-know-about-low-code-even-if-youre-not-responsible-for-software-delivery/"&gt;recent article&lt;/a&gt; by John Rymer of Forrester proves that low-code offers the potential to "make software development 10 times faster than traditional methods."&lt;/p&gt;

&lt;p&gt;Common tools in this category are Webflow, Retool and Bubble. &lt;/p&gt;

&lt;p&gt;I've used Retool a few times and I love it. &lt;br&gt;
 &lt;br&gt;
&lt;a href="https://retool.com/"&gt;&lt;strong&gt;Retool&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Retool is a low-code, drag-and-drop software that makes it fast and easy to build internal apps (think dashboards and admin panels).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CYZzr2xS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/11sodtvp42qa12ojwd69.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CYZzr2xS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/11sodtvp42qa12ojwd69.png" alt="Retool" width="880" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A recent survey showed that front-end developers spend over &lt;a href="https://retool.com/blog/state-of-internal-tools-2021/"&gt;30- 45% of their time building internal apps from scratch&lt;/a&gt; which can reduce developer productivity.&lt;/p&gt;

&lt;p&gt;Retool saves you time by providing pre-built components, an easy connection to your datastore, and a clean drag-and-drop interface to visualize data.&lt;/p&gt;

&lt;p&gt;Here's how Retool works:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;connect your datastores like Postgres, MongoDB, or Firebase&lt;/li&gt;
&lt;li&gt;write queries to select aspects of the database you care about using SQL or Javascript&lt;/li&gt;
&lt;li&gt;connect these queries and logic to the &lt;em&gt;pre-built components&lt;/em&gt; (&lt;a href="https://retool.com/components"&gt;https://retool.com/components&lt;/a&gt;) like Data tables, Charts, Dropdowns, etc.&lt;/li&gt;
&lt;li&gt;organize the components to help you visually display and customize data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;When choosing a tool as a front-end developer, the first step is to research to figure out your work process and then pick the most efficient tool that gets the job done.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend-devs-what-other-tools-will-you-add-to-this-list-and-why"&gt;
  &lt;/a&gt;
  Frontend Devs, what other tools will you add to this list and why?
&lt;/h3&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>tooling</category>
    </item>
    <item>
      <title>Simple tic-tac-toe game for beginners (HTML,CSS,JS)</title>
      <author>Lucifer25x</author>
      <pubDate>Mon, 15 Nov 2021 16:43:29 +0000</pubDate>
      <link>https://dev.to/lucifer25x/simple-tic-tac-toe-game-for-beginners-htmlcssjs-4dii</link>
      <guid>https://dev.to/lucifer25x/simple-tic-tac-toe-game-for-beginners-htmlcssjs-4dii</guid>
      <description>&lt;p&gt;Source code: &lt;a href="https://github.com/Lucifer25x/tic-tac-toe"&gt;https://github.com/Lucifer25x/tic-tac-toe&lt;/a&gt;&lt;br&gt;
Live: &lt;a href="https://lucifer25x.github.io/tic-tac-toe/"&gt;https://lucifer25x.github.io/tic-tac-toe/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>gamedev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>🔐 Structure of a single-page Vue 3 (TypeScript) app using JWT authorization requests to the backend</title>
      <author>Vic Shóstak</author>
      <pubDate>Mon, 15 Nov 2021 16:37:49 +0000</pubDate>
      <link>https://dev.to/koddr/structure-of-a-single-page-vue-3-typescript-app-using-jwt-authorization-requests-to-the-backend-2lm0</link>
      <guid>https://dev.to/koddr/structure-of-a-single-page-vue-3-typescript-app-using-jwt-authorization-requests-to-the-backend-2lm0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hello, DEV World! 👋&lt;/p&gt;

&lt;p&gt;This weekend I had time to refactor my old projects, where I found an interesting case of working with JWT in a Vue.js web application, which I'll tell you about now.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🔥 &lt;strong&gt;Disclaimer:&lt;/strong&gt; The article is intended primarily for &lt;strong&gt;advanced&lt;/strong&gt; frontend developers, because it does &lt;strong&gt;not&lt;/strong&gt; contain a beginner's description of technologies in use. You should &lt;strong&gt;already&lt;/strong&gt; understand how the &lt;a href="https://v3.vuejs.org/guide/introduction.html"&gt;Vue 3.x&lt;/a&gt; framework and &lt;a href="https://next.vuex.vuejs.org/"&gt;Vuex 4.x&lt;/a&gt; works, and the basics of &lt;a href="https://jwt.io/introduction"&gt;JWT&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;OK, let's go! 😉&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  📝 Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#a-lyrical-digression-about-the-backend"&gt;A lyrical digression about the backend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#the-main-component-of-the-vue-app"&gt;The main component of the Vue app&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-structure-of-the-business-logic"&gt;The structure of the business logic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#function-for-updating-tokens"&gt;Function for updating tokens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#function-for-calling-the-background-update-tokens"&gt;Function for calling the background update tokens&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-result-we-got"&gt;The result we got&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-lyrical-digression-about-the-backend"&gt;
  &lt;/a&gt;
  A lyrical digression about the backend
&lt;/h2&gt;

&lt;p&gt;I believe that without a description of the backend scheme, it is impossible to understand my implementation in the frontend (&lt;strong&gt;which is the purpose of this article&lt;/strong&gt;). Therefore, I will ask for some of your time to explain the decisions I made.&lt;/p&gt;

&lt;p&gt;OK. So, I developed the backend as microservices, which was divided into the client's authorization micro-backend (since the project has been completely closed to anonymous users), and the REST API micro-backend for interaction with the project afterwards.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;📌 &lt;strong&gt;Note:&lt;/strong&gt; Examples of code for these microservices will be at &lt;a href="https://golang.org/doc/"&gt;Go&lt;/a&gt; language and the &lt;a href="https://gofiber.io/"&gt;Fiber&lt;/a&gt; web framework, since that's my main stack (at the moment).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here's a simple diagram for a visual representation:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kOkmNtKi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eltsto7h5yf16fkoxh2b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOkmNtKi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eltsto7h5yf16fkoxh2b.png" alt="simple diagram 1" width="880" height="530"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here are the specific implementations of tokens update &lt;a href="https://github.com/koddr/auth-komentory/blob/4efc68b6d3d033c55e03c705f7700a9c39419ab4/app/controllers/token_controller.go#L17-L135"&gt;TokenRenew()&lt;/a&gt; and client authorization &lt;a href="https://github.com/koddr/auth-komentory/blob/4efc68b6d3d033c55e03c705f7700a9c39419ab4/app/controllers/user_controller.go#L178-L279"&gt;UserLogin()&lt;/a&gt;. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;👉 &lt;strong&gt;Hey!&lt;/strong&gt; Full examples of micro-backends (auth and API) can be found &lt;a href="https://github.com/koddr/auth-komentory"&gt;here&lt;/a&gt; and &lt;a href="https://github.com/koddr/auth-komentory"&gt;here&lt;/a&gt;. Don't be alarmed that this repository is marked as &lt;code&gt;DEPRECATED&lt;/code&gt; by me. It's just an old version of one of my projects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The main things to know about the backend in this case study: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Fiber framework has built-in &lt;a href="https://docs.gofiber.io/api/middleware/encryptcookie"&gt;middleware&lt;/a&gt; for encrypting cookies, which will generate an unreadable hash for the &lt;code&gt;refresh_token&lt;/code&gt; each time.&lt;/li&gt;
&lt;li&gt;After successful user authorization (via &lt;code&gt;login&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;), the backend sends a JSON response with simple session information (JWT &lt;code&gt;access_token&lt;/code&gt; and &lt;code&gt;expire&lt;/code&gt; timestamp) and a special &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies"&gt;HttpOnly&lt;/a&gt; Cookie with an encrypted &lt;code&gt;refresh_token&lt;/code&gt; for update JWT.&lt;/li&gt;
&lt;li&gt;As long as the JWT will be valid, for example by expiration time, the client can perform any operations with the private API methods (which require authorization).&lt;/li&gt;
&lt;li&gt;But if the client tries to make a request with an already expired JWT (or no JWT at all), the backend will behave as follows:

&lt;ul&gt;
&lt;li&gt;If the &lt;code&gt;refresh_token&lt;/code&gt; in the &lt;code&gt;HttpOnly&lt;/code&gt; Cookie is valid, then the backend will generate a new pair of access and refresh tokens and send it to the client;&lt;/li&gt;
&lt;li&gt;If something went wrong, then the backend will send the HTTP 401 Unauthorized error to the client and skip connection;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;⚡️ &lt;strong&gt;Note:&lt;/strong&gt; This backend schema allows us to securely store the JWT session in web application memory (for example, I use &lt;a href="https://next.vuex.vuejs.org/guide/"&gt;Vuex 4.x&lt;/a&gt; for this).&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;The interesting thing is that the end user will never be “disconnected” as long as he has a valid &lt;code&gt;refresh_token&lt;/code&gt; in his cookies! Furthermore, not to worry that if the user refreshes the page or closes the browser tab, they will need to re-login when they return.&lt;/p&gt;

&lt;p&gt;Endless session for your SPA here and now! 🎉&lt;/p&gt;




&lt;p&gt;Great, I hope you now have a clearer picture of how the backend works, for which we will now write the frontend in Vue.js 3. &lt;em&gt;If anything remains unclear, please write about it in the comments.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-main-component-of-the-vue-app"&gt;
  &lt;/a&gt;
  The main component of the Vue app
&lt;/h2&gt;

&lt;p&gt;And here's the part of the article we're all here for: implementation in a real Vue.js SPA web application. &lt;/p&gt;

&lt;p&gt;From the comments in my previous articles, I realized that the whole code listing is &lt;em&gt;quite difficult&lt;/em&gt; to understand. Therefore, I will break it into logical sections and describe them one by one in plain text format.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;👉 &lt;strong&gt;Hey!&lt;/strong&gt; A full code of this frontend part can be found &lt;a href="https://github.com/koddr/app-komentory"&gt;here&lt;/a&gt; (still no need to worry about the &lt;code&gt;DEPRECATED&lt;/code&gt; phrase).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, this is what the &lt;code&gt;./src/App.vue&lt;/code&gt; component contains:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- ./src/App.vue --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- 1️⃣ --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;router-view&lt;/span&gt; &lt;span class="na"&gt;v-slot=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;{ Component, route }"&amp;gt;
    &lt;span class="c"&gt;&amp;lt;!-- 2️⃣ --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;transition&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"fade"&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;"out-in"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- 3️⃣ --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;component&lt;/span&gt; &lt;span class="na"&gt;:is=&lt;/span&gt;&lt;span class="s"&gt;"Component"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"route.path"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/transition&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/router-view&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The most common root Vue template for all the views in our application. And what happens in this code snippet:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a new root element &lt;code&gt;router-view&lt;/code&gt; (read more about it &lt;a href="https://next.router.vuejs.org/api/#router-view-s-v-slot"&gt;here&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;For smoother transitions, added &lt;code&gt;transition&lt;/code&gt; element with &lt;code&gt;fade&lt;/code&gt; effect (read more about it &lt;a href="https://next.router.vuejs.org/guide/advanced/transitions.html#per-route-transition"&gt;here&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;Added the component itself with a unique key, which will be rendered in our view;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now let's look at the business logic layer of our component. &lt;/p&gt;

&lt;p&gt;I will also divide it into three parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The structure of the component;&lt;/li&gt;
&lt;li&gt;Function for updating tokens;&lt;/li&gt;
&lt;li&gt;Function for calling the background update tokens;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-structure-of-the-business-logic"&gt;
  &lt;/a&gt;
  The structure of the business logic
&lt;/h3&gt;

&lt;p&gt;This is where the main magic will happen. Since this component is the main one for the whole SPA, it will have a built-in process for initially getting the token and updating it periodically.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 &lt;strong&gt;By the way!&lt;/strong&gt; For imports, I use an alias &lt;code&gt;__/&lt;/code&gt; that matches the settings of my &lt;a href="https://vitejs.dev/config/"&gt;Vite&lt;/a&gt; config (&lt;a href="https://github.com/koddr/app-komentory/blob/82fadc20fbfdfc56cbc207a837aeb050a9e9d8a9/vite.config.ts#L8"&gt;here&lt;/a&gt;).&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- ./src/App.vue --&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onMounted&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onUnmounted&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRouter&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-router&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;__/store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// 1️⃣&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;UPDATE_JWT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="nx"&gt;UPDATE_CURRENT_USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;__/store-constants&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// 2️⃣&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;TokenDataService&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="nx"&gt;TokenResponse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;__/services&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// 3️⃣&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Define needed instances.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStore&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRouter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;// Define needed states from the Vuex store.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expire&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jwt&lt;/span&gt;

    &lt;span class="c1"&gt;// Define function for renew token.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tokenRenew&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// ...will be described below...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Define background async setInterval function for renew token.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tokenRenewTimer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// ...will be described below...&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="c1"&gt;// 4️⃣&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;access_token&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;expire&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;tokenRenew&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;// 5️⃣&lt;/span&gt;
    &lt;span class="nx"&gt;onMounted&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;tokenRenewTimer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="nx"&gt;onUnmounted&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tokenRenewTimer&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Perfect! Now let's review the important points:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I use a custom Vuex implementation of the state store adapted to TypeScript. So, I import my implementation of the &lt;code&gt;useStore&lt;/code&gt; hook instead of the standard one (you can read more about it &lt;a href="https://next.vuex.vuejs.org/guide/typescript-support.html#simplifying-usestore-usage"&gt;here&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;For more convenient work with the Vuex store, I applied &lt;a href="https://next.vuex.vuejs.org/guide/mutations.html#using-constants-for-mutation-types"&gt;constants for mutation types&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Since SPA usually has numerous HTTP calls to the API, I usually write some services which are a better wrapper over the &lt;code&gt;axios&lt;/code&gt; &lt;a href="https://github.com/axios/axios#creating-an-instance"&gt;instance&lt;/a&gt; (with additional header settings). This helps simplify code separation for a particular business logic. In this case, for token renew requests (see example &lt;a href="https://github.com/koddr/app-komentory/blob/main/src/services/TokenDataService.ts"&gt;here&lt;/a&gt;). &lt;/li&gt;
&lt;li&gt;If token and expire time not set, try to renew. This condition allows you to run the token update process if a JWT session has been deleted from the application memory (from Vuex store in this case).&lt;/li&gt;
&lt;li&gt;Define needed lifecycle hooks with &lt;code&gt;tokenRenewTimer()&lt;/code&gt; function. Subscribe to the periodic background token renew process when this component has been mounted, and clear timer after unmounted.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#function-for-updating-tokens"&gt;
  &lt;/a&gt;
  Function for updating tokens
&lt;/h3&gt;

&lt;p&gt;This async function will do the basic work of retrieving the JWT session if the user has a valid &lt;code&gt;refresh_token&lt;/code&gt; cookie.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;span class="c1"&gt;// Define function for renew token.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tokenRenew&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;token_response&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;TokenResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Token&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;renew&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// Successful response from Auth server.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token_response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// 1️⃣&lt;/span&gt;
        &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;UPDATE_JWT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;token_response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;UPDATE_CURRENT_USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;token_response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;// 2️⃣&lt;/span&gt;
        &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_myapp&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token_response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Failed response from Auth server.&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;current_route&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentRoute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="c1"&gt;// 3️⃣&lt;/span&gt;
        &lt;span class="c1"&gt;// 4️⃣&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;current_route&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;register&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token_response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 5️⃣&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not complicated, is it? Let's go into more detail:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Save the response data (a new JWT and user info) to the Vuex store.&lt;/li&gt;
&lt;li&gt;Add a random string to the &lt;code&gt;localStorage&lt;/code&gt; to indicate that the user has been authenticated. This marker is only needed to reduce the number of requests to the authorization server if the user has been successfully authorized.&lt;/li&gt;
&lt;li&gt;Get current route name from &lt;code&gt;vue-router&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Skip redirect, if current route name is &lt;code&gt;register&lt;/code&gt;. This is important because it prevents forced redirects to the login page if the user goes through the registration process.&lt;/li&gt;
&lt;li&gt;Show any other errors.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#function-for-calling-the-background-update-tokens"&gt;
  &lt;/a&gt;
  Function for calling the background update tokens
&lt;/h3&gt;

&lt;p&gt;We got to the heart of a good UX of our app. This is the function that will, in the background, send periodic requests to the authorization server and get a new session (JWT + user info).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;span class="c1"&gt;// Define background async setInterval function for renew token.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tokenRenewTimer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// get current date&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;expire_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expire&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;60000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 1️⃣&lt;/span&gt;
  &lt;span class="c1"&gt;// 2️⃣&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expire_time&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_myapp&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;tokenRenew&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;60000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 3️⃣&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's what we're doing here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Subtract 1 minute from JWT &lt;code&gt;expire&lt;/code&gt; field.&lt;/li&gt;
&lt;li&gt;If expire time is less or equal than now, and &lt;code&gt;localStorage&lt;/code&gt; has &lt;code&gt;_myapp&lt;/code&gt; item, then send request to renew token. &lt;/li&gt;
&lt;li&gt;Set 1 minute interval to make the periodic request.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-result-we-got"&gt;
  &lt;/a&gt;
  The result we got
&lt;/h2&gt;

&lt;p&gt;As a result, we have a stable enough frame to implement any further web application logic. Now, you can make a getter in the store (like &lt;a href="https://github.com/koddr/app-komentory/blob/82fadc20fbfdfc56cbc207a837aeb050a9e9d8a9/src/store.ts#L69-L74"&gt;this&lt;/a&gt; one) to check the actual state of user authorization in your other components.&lt;/p&gt;

&lt;p&gt;Well, the article is in the style of a code review, which is even better than a &lt;em&gt;dry&lt;/em&gt; description of the sequence of actions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What a great thing that happened!&lt;/strong&gt; 😎&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photos-and-videos-by"&gt;
  &lt;/a&gt;
  Photos and videos by
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Vic Shóstak &lt;a href="https://shostak.dev"&gt;https://shostak.dev&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S.
&lt;/h2&gt;

&lt;p&gt;If you want more articles like this on this blog, then post a comment below and subscribe to me. Thanks! 😘&lt;/p&gt;

&lt;p&gt;And, of course, you can support me by donating at &lt;a href="https://liberapay.com/koddr/donate"&gt;LiberaPay&lt;/a&gt;. &lt;em&gt;Each donation will be used to write new articles and develop non-profit open-source projects for the community.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://liberapay.com/koddr/donate"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qrXDZTNF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zq8442cqyjq2i1jdeay8.png" alt="Support author at LiberaPay" width="424" height="104"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>typescript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Reinforcement learning with AWS DeepRacer</title>
      <author>Avinash Kumar</author>
      <pubDate>Mon, 15 Nov 2021 16:31:55 +0000</pubDate>
      <link>https://dev.to/darkxenium/reinforcement-learning-with-aws-deepracer-2pce</link>
      <guid>https://dev.to/darkxenium/reinforcement-learning-with-aws-deepracer-2pce</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-we-are-working-towards"&gt;
  &lt;/a&gt;
  WHAT WE ARE WORKING TOWARDS
&lt;/h3&gt;

&lt;p&gt;AWS Deepracer is a fun way to learn and implement Machine learning with hands on experience. Developers of all skill levels can get hands on with machine learning through a cloud based 3D racing simulator, which they can start using simply by logging into their aws account. AWS DeepRacer is based on the model of reinforcement learning (RL). RL is an advanced machine learning (ML) technique that takes a very different approach to training models than other machine learning methods.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-aws-deepracer-services-provide"&gt;
  &lt;/a&gt;
  WHAT AWS DEEPRACER SERVICES PROVIDE
&lt;/h3&gt;

&lt;p&gt;The user can now use the AWS DeepRacer 3D racing simulator. Experiment with multiple sensor inputs, the latest reinforcement learning algorithms, neural network configurations and simulation to-real domain transfer methods.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-begin"&gt;
  &lt;/a&gt;
  HOW TO BEGIN
&lt;/h3&gt;

&lt;p&gt;You will first need to create your own deepracer car by selecting the type of car, the skin you want on it, the track you want it to run on. And finally, you can train your model by setting the time you want it to train for and then testing it! As you progress you can participate in the AWS League.It is a global autonomous racing league, driven by machine learning.There are 3 stages that you can advance to :-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Start in the Open Division and win virtual cars&lt;/li&gt;
&lt;li&gt;Advance to the Pro Division and win gear&lt;/li&gt;
&lt;li&gt;Take on the League's best and win a DeepRacer
It is a fun community of many Machine learning Enthusiast and you can meet many new people thorugh the various community driven events.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  CONCLUSION
&lt;/h3&gt;

&lt;p&gt;Here are some of the official AWS links from their website containing various resources from where you can learn to build your own models and tracks. You can also improve your racing performance.&lt;/p&gt;

&lt;p&gt;That's it, I hope I was able to spark some interest into you. Now it's time to get your hands dirty! All the best!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v8PWpTgb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcl9qi4wm1eu2qj50l83.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v8PWpTgb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcl9qi4wm1eu2qj50l83.gif" alt="Spongebob meme" width="498" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Picking the Right Tech Stack for Your Startup</title>
      <author>Saji Wang</author>
      <pubDate>Mon, 15 Nov 2021 16:10:40 +0000</pubDate>
      <link>https://dev.to/codesphere/picking-the-right-tech-stack-for-your-startup-hmn</link>
      <guid>https://dev.to/codesphere/picking-the-right-tech-stack-for-your-startup-hmn</guid>
      <description>&lt;p&gt;Written by Dan Parry&lt;/p&gt;




&lt;p&gt;Finding the right tools to build your new start-up is essential. The foundations on which your company will be built need to be reliable, flexible and scalable.&lt;/p&gt;

&lt;p&gt;It can be overwhelming to make the right choice, there seems to be new libraries and frameworks popping up every week, so the right stack now might not be the best stack tomorrow. But there are some key things to consider when getting started choosing your new startup’s tech stack.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1viO5bj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqumj9k75vk4u6yba95s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1viO5bj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqumj9k75vk4u6yba95s.png" alt="Image description" width="880" height="410"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Your team will likely be small and made up of a few fullstack developers wearing many hats; Agile teams get products built quickly and time is money in the startup game. So plan smart. Fast, cost effective solutions that can grow with your product are the key.&lt;/p&gt;

&lt;p&gt;Go with what you know. While new technologies can be powerful, having a team of experienced developers using tech they are familiar with can save you a lot of time and cost associated with introducing a new language on day one.&lt;/p&gt;

&lt;p&gt;On the other hand, spending some time researching new solutions can bring new powerful tools, always be on the lookout for new tech but don't use it for the sake of it.&lt;br&gt;
If you can, use the same language on the front and as the backend, this will make your developers lives much easier. At the beginning, try to avoid languages like Go, Rust and C++. While they are efficient, they can be slow to develop and expensive to develop with.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#scalability"&gt;
  &lt;/a&gt;
  Scalability
&lt;/h3&gt;

&lt;p&gt;Your user base will inevitably grow as your platform becomes more popular and your startup begins to take off, so you need to make sure the infrastructure and architecture you choose is able to scale with you.&lt;/p&gt;

&lt;p&gt;Absorbing planned growth is one thing, but the flexibility to keep up with sudden and unexpected scaling is the real test. If your startup becomes an overnight success and your user base triples, you need to be able to take the new traffic on board. Make sure you prioritise scalability in platform architecture and you'll thank yourself later.&lt;/p&gt;

&lt;p&gt;Consider languages like Python and Ruby when planning your architecture, as they are great scaling languages and they have great community support.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;cloud service provider&lt;/strong&gt; you choose to host your platform will also play a huge role in your ability to scale. Make sure that the service you choose is capable of handling reverse proxies, load balancing, multi-tenancy support, and other crucial scaling processes. It should also provide stable uptime - every time your service is down, you stand to lose users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cdh01p-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/44vv4zo2xkwy6ppp2g7p.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cdh01p-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/44vv4zo2xkwy6ppp2g7p.jpeg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#cost"&gt;
  &lt;/a&gt;
  Cost
&lt;/h3&gt;

&lt;p&gt;Cost efficiency is on the mind of all new startup founders, but technology costs money and development costs are unavoidable. Your best friends here are open-source technologies. Being available to the public means you can use them for free.&lt;/p&gt;

&lt;p&gt;There is much higher availability of developers for hire that can write in a popular, open-source language, so this will reduce the need for specialist skills in your hiring process. More competition in the market can also mean lower wage prices - but hiring cheap isn't always the smart move so this is an area that requires some careful consideration.&lt;/p&gt;

&lt;p&gt;Plan for tomorrow's costs today - Any technology you choose to include in your stack needs to be easily maintainable in the future. A simple and fast solution today can cost you down the line if not properly vetted.&lt;/p&gt;

&lt;p&gt;Free tokens from cloud service providers for example are a great way to get you started, but consider how the invoice might look when the tokens run out. Are your tools sustainable in the long term or are you creating a headache for tomorrow?&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#time"&gt;
  &lt;/a&gt;
  Time
&lt;/h3&gt;

&lt;p&gt;Time is money and money is time. You want to get up and running as quickly as possible and to do that you need to pick tools for your stack that are easy to use, implement and maintain.&lt;/p&gt;

&lt;p&gt;Finding holistic services that can streamline large parts of your development process is a great way to go and can even save you the cost of an extra team member.&lt;/p&gt;

&lt;p&gt;Speed to market is vital to startup endeavours for a number of reasons. Budget limitations are the most obvious of these, when the runway runs out and the money dries up, it's game over, so getting a product generating revenue is make or break.&lt;/p&gt;

&lt;p&gt;Someone may also get there faster. While it's possible you're the only one in your space providing a solution, it's only a matter of time before someone else comes along and does it better, so getting their first is essential.&lt;/p&gt;

&lt;p&gt;Find tools that don't require weeks of configuration and months of continued maintenance.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#common-stacks"&gt;
  &lt;/a&gt;
  Common stacks
&lt;/h3&gt;

&lt;p&gt;With your time and budget needs in mind, you don't need to reinvent the wheel when choosing your tech stack. Here are some common stacks you can look into before starting your project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;MEAN - Mongo, Express, Angular &amp;amp; Node&lt;/strong&gt;&lt;br&gt;
Used to build dynamic websites and web based applications. MEAN is also open source, which means if you come across any issues while using it, there is a huge community to lean on.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;MERN - Mongo, Express, React &amp;amp; Node&lt;/strong&gt;&lt;br&gt;
Another great open source stack, MERN uses React as the front-end framework, which is a lot more flexible and easy to use than Angular in our opinion. Great for full-stack web applications&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;RAD - React Native &amp;amp; Django&lt;/strong&gt;&lt;br&gt;
Commonly regarded as the best stack for Web, Mobile and Desktop development, RAD stack is used by many big name companies. It's scalable, easy to modify and open source.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Choosing the right tools for your tech stack will make or break the development process of your product and ultimately the success of your startup. Find a balance of new technologies and what you know to work. Speed and cost are key elements but don't always take the fastest and cheapest option.&lt;/p&gt;

&lt;p&gt;There is a wealth of options on the market nowadays so put some time into research. Find the tools that will help you build quickly and scale easily.&lt;/p&gt;

&lt;p&gt;PS: If you're looking for a Cloud provider that can save your team the hassle of setting up AWS, Azure, or Heroku, check out &lt;a href="https://link.codesphere.com/FY"&gt;Codesphere&lt;/a&gt;, the most intuitive cloud provider on the market.&lt;/p&gt;

&lt;p&gt;What tech stack do you use? Let us know down below!&lt;/p&gt;

</description>
      <category>startup</category>
      <category>programming</category>
      <category>webdev</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Spring Boot application with Apache Kafka</title>
      <author>LehaUchicha</author>
      <pubDate>Mon, 15 Nov 2021 16:07:58 +0000</pubDate>
      <link>https://dev.to/lehauchicha/spring-boot-application-with-apache-kafka-299n</link>
      <guid>https://dev.to/lehauchicha/spring-boot-application-with-apache-kafka-299n</guid>
      <description>

&lt;p&gt;In this article we will:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;   Run Zookeeper and kafka locally&lt;/li&gt;
&lt;li&gt;   Write Spring boot application &lt;strong&gt;Kafka-Server&lt;/strong&gt;. It's order service, which will produce and consume messages using &lt;strong&gt;orders&lt;/strong&gt; topic. Also has entrypoint for order creation which will send message to the kafka topic&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All examples available on github: &lt;a href="https://github.com/LehaUchicha/Kafka-Example.git"&gt;https://github.com/LehaUchicha/Kafka-Example.git&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-zookeeper-and-kafka"&gt;
  &lt;/a&gt;
  Configure Zookeeper and kafka
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#download-zookeeper-and-kafka"&gt;
  &lt;/a&gt;
  Download Zookeeper and Kafka
&lt;/h3&gt;

&lt;p&gt;Before writing our application we need to run zookeeper and kafka locally.&lt;br&gt;
For that go to official site and download the latest version&lt;/p&gt;

&lt;p&gt;Zookeeper&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://zookeeper.apache.org/releases.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Kafka&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://kafka.apache.org/downloads
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;ps:&lt;/em&gt; &lt;em&gt;On the moment of article writing the latest version was 3.0.0, but &lt;br&gt;
this version not worked to me, so I download previous version - 2.8.1, which worked fine&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#run-zookeeper"&gt;
  &lt;/a&gt;
  Run Zookeeper
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Go to the downloaded and extracted zookeeper folder. You will see such folder structure:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e1F-RizG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8wmeuqighbm3b0nrezt.png" alt="Zookeeper folder structure" width="793" height="270"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;bin - folder, which contains utilities for zookeeper management&lt;/li&gt;
&lt;li&gt;conf - folder, which contains configuration files for zookeeper. In this folder you can find zoo_sample.cfg - example of zookeeper configuration.&lt;/li&gt;
&lt;li&gt;logs - folder, where zookeeper can write logs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First lets go to the conf folder, make a copy of &lt;strong&gt;zoo_sample.cfg&lt;/strong&gt; and rename it to &lt;strong&gt;zoo.cfg&lt;/strong&gt;.&lt;br&gt;
In the &lt;strong&gt;zoo.cfg&lt;/strong&gt; you need to override such value to &lt;strong&gt;dataDir=../logs&lt;/strong&gt; or to any other directory which you like.&lt;br&gt;
From the config file you can find othe important settings, like &lt;strong&gt;clientPort=2181&lt;/strong&gt;, which said for us that zookeper by default run on port 2181.&lt;br&gt;
You can override properties as you wish, but lets left them as is.&lt;/p&gt;

&lt;p&gt;That's it! Now we need to run zookeeper server. For that go to the bin folder and find &lt;strong&gt;zkServer.cmd&lt;/strong&gt; or&lt;br&gt;
&lt;strong&gt;zkServer.sh&lt;/strong&gt;. If you are the Windows user - use &lt;strong&gt;zkServer.cmd&lt;/strong&gt;, otherwise &lt;strong&gt;zkServer.sh&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;zkServer.sh start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;zkServer.cmd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result will be:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2WRC1pGM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wky4booz1uruheebhbrn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2WRC1pGM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wky4booz1uruheebhbrn.png" alt="Image description" width="880" height="182"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;or logs without errors, like here in case if you use &lt;strong&gt;zkServer.sh start&lt;/strong&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vi_vgLtf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/17wx4z879nf1m4urgfrf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vi_vgLtf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/17wx4z879nf1m4urgfrf.png" alt="Image description" width="570" height="76"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great! Now we need to run kafka.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#run-kafka"&gt;
  &lt;/a&gt;
  Run Kafka
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Go to the downloaded and extracted apache kafka folder. You will see such folder structure:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ujBrLpXj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlppc3siibxdyl3c55ef.png" alt="kafka folder Structure" width="822" height="302"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;bin - folder, which contains utilities for kafka management&lt;/li&gt;
&lt;li&gt;config - folder, which contains configuration files for kafka. In this folder you can find &lt;strong&gt;server.properties&lt;/strong&gt; which should be modified&lt;/li&gt;
&lt;li&gt;logs - folder, where kafka can write logs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Go to the config folder and override &lt;strong&gt;log.dirs=&lt;/strong&gt; property in the file &lt;strong&gt;server.properties&lt;/strong&gt; to the any folder where you want to store logs.&lt;br&gt;
I will use logs folder in the kafka root, so in my case it looks like this: &lt;strong&gt;log.dirs=../logs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now time to run apache kafka. For that go to the bin folder.&lt;br&gt;
For NOT Windows user you need to find &lt;strong&gt;kafka-server-start&lt;/strong&gt; and execute script with the path to the &lt;strong&gt;server.properties&lt;/strong&gt; file as an argument&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./kafka-server-start.sh ../config/server.properties
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For Windows users inside &lt;strong&gt;bin&lt;/strong&gt; folder you can find &lt;strong&gt;windows&lt;/strong&gt; folder which contains the same commands but for windows)&lt;br&gt;
Go to the &lt;strong&gt;windows&lt;/strong&gt; folder and run the same script. Don't forget to specify path to &lt;strong&gt;server.properties&lt;/strong&gt; file as argument&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kafka-server-start.bat ../../config/server.properties
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you don't see any exceptions in console, it means, that kafka is working!&lt;br&gt;
Now befor start to writing Spring Boot application we need to create &lt;strong&gt;orders&lt;/strong&gt; topic which our applications will use.&lt;br&gt;
For that we need to execute command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kafka-topics.bat &lt;span class="nt"&gt;--create&lt;/span&gt; &lt;span class="nt"&gt;--zookeeper&lt;/span&gt; localhost:2181 &lt;span class="nt"&gt;--replication-factor&lt;/span&gt; 1 &lt;span class="nt"&gt;--partitions&lt;/span&gt; 1 &lt;span class="nt"&gt;--topic&lt;/span&gt; orders
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kafka-topics.sh &lt;span class="nt"&gt;--create&lt;/span&gt; &lt;span class="nt"&gt;--zookeeper&lt;/span&gt; localhost:2181 &lt;span class="nt"&gt;--replication-factor&lt;/span&gt; 1 &lt;span class="nt"&gt;--partitions&lt;/span&gt; 1 &lt;span class="nt"&gt;--topic&lt;/span&gt; orders
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will create topic &lt;strong&gt;orders&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#write-kafka-server-spring-boot-application"&gt;
  &lt;/a&gt;
  Write Kafka Server Spring Boot application
&lt;/h3&gt;

&lt;p&gt;You can download configured project from start.spring.io by &lt;a href="https://start.spring.io/#!type=maven-project&amp;amp;language=java&amp;amp;platformVersion=2.5.6&amp;amp;packaging=jar&amp;amp;jvmVersion=11&amp;amp;groupId=com.kafka&amp;amp;artifactId=kafka-server&amp;amp;name=kafka-server&amp;amp;description=Demo%20project%20for%20Spring%20Boot&amp;amp;packageName=com.kafka.kafka-server&amp;amp;dependencies=web,kafka,lombok"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;or download ready project from github: &lt;a href="https://github.com/LehaUchicha/Kafka-Example.git"&gt;https://github.com/LehaUchicha/Kafka-Example.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here in dependency you need to specify Spring for Apache Kafka for using kafka in our application.&lt;/p&gt;

&lt;p&gt;pom.xml should contain:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.kafka&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-kafka&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.projectlombok&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;lombok&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;optional&amp;gt;&lt;/span&gt;true&lt;span class="nt"&gt;&amp;lt;/optional&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;go to the &lt;strong&gt;KafkaServerApplication.java&lt;/strong&gt; file and add &lt;strong&gt;@EnableKafka&lt;/strong&gt; annotation&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@EnableKafka
@SpringBootApplication
public class KafkaServerApplication {

    public static void main(String[] args) {
        SpringApplication.run(KafkaServerApplication.class, args);
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;go to the &lt;strong&gt;application.properties&lt;/strong&gt; file and specify such properties&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight properties"&gt;&lt;code&gt;&lt;span class="py"&gt;server.port&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;9955&lt;/span&gt;

&lt;span class="py"&gt;kafka.server&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;localhost:9092&lt;/span&gt;
&lt;span class="py"&gt;kafka.group.id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;group1&lt;/span&gt;
&lt;span class="py"&gt;kafka.producer.id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;producer1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to create configuration for consumer and producer.&lt;/p&gt;

&lt;p&gt;Consumer configuration&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Configuration&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;KafkaConsumerConfiguration&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

      &lt;span class="nd"&gt;@Value&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"${kafka.server}"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;kafkaServer&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

      &lt;span class="nd"&gt;@Value&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"${kafka.group.id}"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;kafkaGroupId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

      &lt;span class="nd"&gt;@Bean&lt;/span&gt;
      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;KafkaListenerContainerFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;batchFactory&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;ConcurrentKafkaListenerContainerFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;OrderDto&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
                    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ConcurrentKafkaListenerContainerFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
            &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setConsumerFactory&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;consumerFactory&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBatchListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setMessageConverter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;BatchMessagingMessageConverter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;converter&lt;/span&gt;&lt;span class="o"&gt;()));&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="nd"&gt;@Bean&lt;/span&gt;
      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;KafkaListenerContainerFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;singleFactory&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;ConcurrentKafkaListenerContainerFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;OrderDto&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
                    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ConcurrentKafkaListenerContainerFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
            &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setConsumerFactory&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;consumerFactory&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBatchListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setMessageConverter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;StringJsonMessageConverter&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="nd"&gt;@Bean&lt;/span&gt;
      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;ConsumerFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;OrderDto&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;consumerFactory&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DefaultKafkaConsumerFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;consumerConfigs&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="nd"&gt;@Bean&lt;/span&gt;
      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;KafkaListenerContainerFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;kafkaListenerContainerFactory&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ConcurrentKafkaListenerContainerFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="nd"&gt;@Bean&lt;/span&gt;
      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;consumerConfigs&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
            &lt;span class="n"&gt;props&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ConsumerConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;BOOTSTRAP_SERVERS_CONFIG&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kafkaServer&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;props&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ConsumerConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;KEY_DESERIALIZER_CLASS_CONFIG&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;LongDeserializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;props&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ConsumerConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;VALUE_DESERIALIZER_CLASS_CONFIG&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;StringDeserializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;props&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ConsumerConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;GROUP_ID_CONFIG&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kafkaGroupId&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;props&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ConsumerConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ENABLE_AUTO_COMMIT_CONFIG&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;props&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="nd"&gt;@Bean&lt;/span&gt;
      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;StringJsonMessageConverter&lt;/span&gt; &lt;span class="nf"&gt;converter&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;StringJsonMessageConverter&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Producer configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Configuration&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;KafkaProducerConfiguration&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

      &lt;span class="nd"&gt;@Value&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"${kafka.server}"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;kafkaServer&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

      &lt;span class="nd"&gt;@Value&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"${kafka.producer.id}"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;kafkaProducerId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

      &lt;span class="nd"&gt;@Bean&lt;/span&gt;
      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;producerConfigs&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
            &lt;span class="n"&gt;props&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ProducerConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;BOOTSTRAP_SERVERS_CONFIG&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kafkaServer&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;props&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ProducerConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;KEY_SERIALIZER_CLASS_CONFIG&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;LongSerializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;props&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ProducerConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;VALUE_SERIALIZER_CLASS_CONFIG&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;JsonSerializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;props&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ProducerConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;CLIENT_ID_CONFIG&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kafkaProducerId&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;props&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="nd"&gt;@Bean&lt;/span&gt;
      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;ProducerFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;OrderDto&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;producerOrderFactory&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DefaultKafkaProducerFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;producerConfigs&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="nd"&gt;@Bean&lt;/span&gt;
      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;KafkaTemplate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;OrderDto&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;kafkaTemplate&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;KafkaTemplate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;OrderDto&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;KafkaTemplate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;producerOrderFactory&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setMessageConverter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;StringJsonMessageConverter&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: needs to use &lt;strong&gt;org.springframework.kafka.support.serializer.JsonSerializer;&lt;/strong&gt;, not from Jackson library&lt;/p&gt;

&lt;p&gt;OrderService:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Slf4j&lt;/span&gt;
&lt;span class="nd"&gt;@Service&lt;/span&gt;
&lt;span class="nd"&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OrderServiceImpl&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;OrderService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;KafkaTemplate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;OrderDto&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;kafkaOrderTemplate&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;ObjectMapper&lt;/span&gt; &lt;span class="n"&gt;objectMapper&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;OrderDto&lt;/span&gt; &lt;span class="n"&gt;dto&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;kafkaOrderTemplate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;send&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"orders"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dto&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="nd"&gt;@KafkaListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"OrderId"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;topics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"orders"&lt;/span&gt;&lt;span class="o"&gt;},&lt;/span&gt; &lt;span class="n"&gt;containerFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"singleFactory"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;consume&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;OrderDto&lt;/span&gt; &lt;span class="n"&gt;dto&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;info&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"-&amp;gt; consumed {}"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;writeValueAsString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dto&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;writeValueAsString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;OrderDto&lt;/span&gt; &lt;span class="n"&gt;dto&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;objectMapper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;writeValueAsString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dto&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;JsonProcessingException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error happens during json processing"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RuntimeException&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error happens during json processing: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;dto&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and OrderController:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@RestController&lt;/span&gt;
&lt;span class="nd"&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OrderController&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;OrderServiceImpl&lt;/span&gt; &lt;span class="n"&gt;orderService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="nd"&gt;@PostMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/order"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;OrderDto&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;OrderDto&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"New Order #: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;nanoTime&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Standard description"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;orderService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;send&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when you will run application - entrypoint will be available on the port 9955.&lt;br&gt;
Make POST request using endpoint&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nl"&gt;localhost:&lt;/span&gt;&lt;span class="mi"&gt;9955&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Message will be created and sended to the topic &lt;strong&gt;orders&lt;/strong&gt;. After that our application will immediately read this&lt;br&gt;
message through the method with annotation &lt;strong&gt;@KafkaListener&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;    &lt;span class="nd"&gt;@KafkaListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"OrderId"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;topics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"orders"&lt;/span&gt;&lt;span class="o"&gt;},&lt;/span&gt; &lt;span class="n"&gt;containerFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"singleFactory"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;consume&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;OrderDto&lt;/span&gt; &lt;span class="n"&gt;dto&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;info&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"-&amp;gt; consumed {}"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;writeValueAsString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dto&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and in console you will see such result:&lt;br&gt;
&lt;a href="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7usx8qslomhtat4bwy6g.png"&gt;console output&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it! The code available on github: &lt;a href="https://github.com/LehaUchicha/Kafka-Example.git"&gt;https://github.com/LehaUchicha/Kafka-Example.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a bonus, which not explained in the article - you can find the second Spring boot application &lt;strong&gt;Kafka-Producer&lt;/strong&gt;, which will push a message every 5 seconds after running to the &lt;strong&gt;orders&lt;/strong&gt; topic.&lt;br&gt;
And &lt;strong&gt;Kafka-Server&lt;/strong&gt; application will read this message, which you can find in console. you need just run application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;In this article we successfully configured apache kafka and understand how to work with kafka wia Spring Boot.&lt;br&gt;
Also figure out how services can communicate with each other wia apache kafka.&lt;/p&gt;

&lt;p&gt;Thank you for reading. If you like an article, you can support me&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/LehaUchicha"&gt;by buying me a coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have a good day!&lt;/p&gt;

</description>
      <category>springboot</category>
      <category>tutorial</category>
      <category>kafka</category>
    </item>
    <item>
      <title>AWS BottleRocket On EKS NodeGroup</title>
      <author>🚀  Vu Dao 🚀 </author>
      <pubDate>Mon, 15 Nov 2021 16:07:47 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-bottlerocket-on-eks-nodegroup-45ec</link>
      <guid>https://dev.to/aws-builders/aws-bottlerocket-on-eks-nodegroup-45ec</guid>
      <description>&lt;h2&gt;
  &lt;a href="#abstract"&gt;
  &lt;/a&gt;
  Abstract
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The footprints of Linux are increasing day by day and the latest addition to this is the Bottlerocket. It is a Linux-based operating system built by Amazon Web Services. This open-source OS targets to host and run the containers on virtual machines or bare metal hosts.&lt;/li&gt;
&lt;li&gt;Today, Amazon Elastic Kubernetes Services (Amazon EKS) announces native support for Bottlerocket in managed node groups. Bottlerocket is a Linux-based open-source operating system that is purpose-built by Amazon. It focuses on security and maintainability, and provides a reliable, consistent, and safe platform for container-based workloads&lt;/li&gt;
&lt;li&gt;Every Linux-based OS involves the Linux kernel—which manages hardware resources—and a set of software packages that make up the rest of the operating system. That's why the bottlerocket-OS promises a light-weight to boost up and high security.&lt;/li&gt;
&lt;li&gt;In this post, we will launch a Bottlerocket managed node group with lauch template on EKS cluster. It's not only about setting the nodegroup to use bottlerocket AMI but about the arguments at EKS node startup. Let's find out more&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#Why-Should-You-Use-Bottlerocket-OS?"&gt;Why Should You Use Bottlerocket OS?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.toCreate-a-lauch-template-for-EKS-nodegroup"&gt;Create a lauch-template for EKS nodegroup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Create-ASG-with-the-launch-template"&gt;Create ASG with the launch template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#why-should-you-use-bottlerocket-os"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Why Should You Use Bottlerocket OS?&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Bottlerocket comes to the rescue when facing the above issues. The Bottlerocket OS tends to mitigate the challenges faced by container-based environments such as security, updates, compute cycles, start-up time, and the integrity of a cluster over time. Most of the components in Bottlerocket are written in Rust, so some of the memory safety issues are eliminated. The following are additional benefits of Bottlerocket:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improved uptime: You can apply updates to the Bottlerocket OS all at once, and they can also be rolled back as needed, improving uptime.&lt;/li&gt;
&lt;li&gt;Lower management overhead: You can utilize container orchestration services to automate updates to the Bottlerocket OS, reducing management overhead and operational costs.&lt;/li&gt;
&lt;li&gt;Better security and resource utilization: Contrary to other operating systems, you only have the essential components in Bottlerocket OS to run, creating a smaller attack surface and improving security.&lt;/li&gt;
&lt;li&gt;Optimized performance: Bottlerocket is optimized to run on Amazon EC2 and incorporates built-in support for integrations with AWS services.&lt;/li&gt;
&lt;li&gt;Read-only file system: Bottlerocket uses a read-only file system whose integrity is validated at the time of booting.&lt;/li&gt;
&lt;li&gt;Automated updates: You can automate updates via orchestration services like Amazon EKS. Unlike traditional Linux-based systems that use package-by-package updates, Bottlerocket utilizes image-based updates.&lt;/li&gt;
&lt;li&gt;Open development model: You can create code and design changes to the Bottlerocket OS via code available in Github. It should be noted that the Bottlerocket OS supports images formatted for Docker and OCI (Open Container Initiative).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#create-a-lauchtemplate-for-eks-nodegroup"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create a lauch-template for EKS nodegroup&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Pre-requisite: EKS cluster&lt;/li&gt;
&lt;li&gt;Here we will create an Auto scaling group with launch template contains following things

&lt;ul&gt;
&lt;li&gt;Bottlerocket AMI, to get the latest AMI ID align with EKS cluster version and AWS region, use SSM parameters store
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   ~ $ aws ssm get-parameter --region ap-northeast-1 --name "/aws/service/bottlerocket/aws-k8s-1.18/x86_64/latest/image_id" --query Parameter.Value --output text
   ami-0a04f060889bcef33
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--45zJXscw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-bottlerocket-eks/blob/master/images/ami.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--45zJXscw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-bottlerocket-eks/blob/master/images/ami.png%3Fraw%3Dtrue" width="877" height="285"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Key-pair in order to SSH to the node for demonstration purpose&lt;/li&gt;
&lt;li&gt;EKS VPC&lt;/li&gt;
&lt;li&gt;Security group for Pod communications (Check out &lt;a href="https://dev.to/aws-builders/understand-pods-communication-338c"&gt;Understand Pods communication&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8R5MkMV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-bottlerocket-eks/blob/master/images/network.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8R5MkMV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-bottlerocket-eks/blob/master/images/network.png%3Fraw%3Dtrue" width="817" height="368"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;IAM instance profile which has enough permission for node to join EKS cluster, read more &lt;a href="https://dev.to/aws-builders/aws-eks-launch-template-of-node-group-6a4"&gt;AWS EKS - Launch Template Of Node Group&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;User data&lt;/strong&gt; (describe laters)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#one-of-important-thing-is-raw-user-data-endraw-which-contains-additional-arguments-to-raw-kubelet-endraw-service-such-as-node-lables-node-taints"&gt;
  &lt;/a&gt;
  One of important thing is &lt;code&gt;user data&lt;/code&gt; which contains additional arguments to &lt;code&gt;kubelet&lt;/code&gt; service such as node lables, node taints.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The user data must be in &lt;a href="https://github.com/toml-lang/toml"&gt;TOML format&lt;/a&gt; and must contains &lt;code&gt;settings.kubernetes.cluster-certificate&lt;/code&gt;, &lt;code&gt;settings.kubernetes.api-server&lt;/code&gt;, and &lt;code&gt;settings.kubernetes.cluster-name&lt;/code&gt; (Read more &lt;a href="https://github.com/bottlerocket-os/bottlerocket#kubernetes-settings"&gt;Kubernetes settings&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Following is &lt;code&gt;user data&lt;/code&gt; example with &lt;code&gt;node-labels&lt;/code&gt; and &lt;code&gt;node-taints&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[settings.kubernetes]
api-server = "https://abc.def.ap-northeast-1.eks.amazonaws.com"
cluster-certificate = "TkQgQ0VSVElGSUNBVEUtLS0tLQo="
cluster-name = "eks-dev"
cluster-dns-ip = "10.100.0.10"

[settings.kubernetes.node-labels]
"lifecycle" = "on-demand"
"role" = "airflow"
"type" = "af-stateful"

[settings.kubernetes.node-taints]
"dedicated" = "airflow:NoSchedule"
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can use &lt;code&gt;eksctl&lt;/code&gt; to generate basic &lt;code&gt;userdata.toml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~ $ eksctl get cluster --region ap-northeast-1 --name eks-dev -o json | jq --raw-output '.[] | "[settings.kubernetes]\napi-server = \"" + .Endpoint + "\"\ncluster-certificate =\"" + .CertificateAuthority.Data + "\"\ncluster-name = \"eks-dev\""' &amp;gt; userdata.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#create-asg-with-the-launch-template"&gt;
  &lt;/a&gt;
  🚀 Create ASG with the launch template &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;After the ASG scales the desired capacity, we can check the bottlerocket nodes&lt;/li&gt;
&lt;li&gt;List the nodes in the EKS cluster which have &lt;code&gt;Bottlerocket OS&lt;/code&gt; and check the Pods are assigned to them
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl get nodes -o=custom-columns=NODE:.metadata.name,ARCH:.status.nodeInfo.architecture,OS-Image:.status.nodeInfo.osImage,OS:.status.nodeInfo.operatingSystem | grep Bottlerocket
ip-172-10-11-131.ap-northeast-1.compute.internal   amd64   Bottlerocket OS 1.4.0 (aws-k8s-1.18)   linux
ip-172-10-21-64.ap-northeast-1.compute.internal    amd64   Bottlerocket OS 1.4.0 (aws-k8s-1.18)   linux
ip-172-10-31-142.ap-northeast-1.compute.internal   amd64   Bottlerocket OS 1.4.0 (aws-k8s-1.18)   linux

# kubectl get pod -n kube-system -owide | grep ip-172-10-11-131.ap-northeast-1.compute.internal
aws-node-t622b                        1/1     Running   1          3h38m   172.10.11.131   ip-172-10-11-131.ap-northeast-1.compute.internal   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
aws-node-termination-handler-ql7t2    1/1     Running   0          3h38m   172.10.11.131   ip-172-10-11-131.ap-northeast-1.compute.internal   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
efs-csi-node-lbhcq                    3/3     Running   0          3h37m   172.10.11.131   ip-172-10-11-131.ap-northeast-1.compute.internal   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
kube-proxy-j6l48                      1/1     Running   0          3h38m   172.10.11.131   ip-172-10-11-131.ap-northeast-1.compute.internal   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;

# kubectl get pod -owide -n airflow | grep ip-172-10-11-131.ap-northeast-1.compute.internal
airflow-flower-59774778b4-fpfdm             2/2     Running   0          3h32m   172.10.11.76    ip-172-10-11-131.ap-northeast-1.compute.internal   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
airflow-scheduler-cdccf9d86-xc4hr           2/2     Running   0          3h32m   172.10.11.113   ip-172-10-11-131.ap-northeast-1.compute.internal   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
airflow-sync-users-7fd7c7db8-6whhr          2/2     Running   0          3h32m   172.10.11.36    ip-172-10-11-131.ap-northeast-1.compute.internal   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
airflow-web-77d59cfcbb-bxsj5                2/2     Running   0          3h32m   172.10.11.61    ip-172-10-11-131.ap-northeast-1.compute.internal   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Start an SSM session. In order to SSH to the node, it needs to run &lt;code&gt;enable-admin-container&lt;/code&gt; (which is disabled by default) from SSM console&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3fDeqsSH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-bottlerocket-eks/blob/master/images/ssm.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3fDeqsSH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-bottlerocket-eks/blob/master/images/ssm.png%3Fraw%3Dtrue" width="776" height="388"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[ssm-user@ip-172-10-12-246 /]$ enable-admin-container
Setting admin container to enabled
204 No Content
Committing and applying changes
200 OK
["settings.host-containers.admin.enabled"]
The admin container is now enabled - it should pull and start soon, and then you can SSH in
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;SSH to the node and see the difference from other Linux OS
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  bash-4.2# systemctl status kubelet
  Running in chroot, ignoring request.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  🚀 Conclusion &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Bottlerocket is built from the ground up with only the minimum components necessary to run containers installed on the host. Any additional software such EFS CSI driver, monitoring agents, metric collections, etc. must be run as Daemonsets&lt;/li&gt;
&lt;li&gt;In this post, it shows how to use Bottlerocket natively with Amazon EKS managed node groups and how to interact directly with the Bottlerocket cluster nodes. It's interesting that AWS CDK will support bottlerocket managed nodegroup soon (&lt;a href="https://github.com/aws/aws-cdk/pull/17323"&gt;feat(aws-eks): support bottlerocket managed nodegroup&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://epsagon.com/tools/how-to-get-started-with-bottlerocket-os/"&gt;How to Get Started with Bottlerocket OS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/containers/amazon-eks-adds-native-support-for-bottlerocket-in-managed-node-groups/"&gt;Amazon EKS adds native support for Bottlerocket in Managed Node Groups&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;div class="ltag__user ltag__user__id__512906"&gt;
  
    .ltag__user__id__512906 .follow-action-button {
      background-color: #000000 !important;
      color: #62df88 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/vumdao" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bGwkUMWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ugeYdWM---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/512906/2472752c-cfd5-4e02-b3d8-55b790178884.png" alt="vumdao image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/vumdao"&gt;🚀  Vu Dao 🚀 &lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/vumdao"&gt;🚀 AWSome Devops | AWS Community Builder | AWS SA || ☁️ CloudOpz ☁️&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;




&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vumdao"&gt;
        vumdao
      &lt;/a&gt; / &lt;a href="https://github.com/vumdao/vumdao"&gt;
        vumdao
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>aws</category>
      <category>eks</category>
      <category>cloudopz</category>
      <category>bottlerocket</category>
    </item>
    <item>
      <title>The 5 Short Frontend tips for November </title>
      <author>Stas Melnikov</author>
      <pubDate>Mon, 15 Nov 2021 15:52:29 +0000</pubDate>
      <link>https://dev.to/melnik909/the-5-short-frontend-tips-for-november-cdh</link>
      <guid>https://dev.to/melnik909/the-5-short-frontend-tips-for-november-cdh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-button-role-isnt-enough-for-an-accessible-interface"&gt;
  &lt;/a&gt;
  The button role isn't enough for an accessible interface
&lt;/h2&gt;

&lt;p&gt;There is a practice of overriding the button's default role. It's a bad practice already because authors of the ARIA in HTML standard prohibit overriding of default roles in section 2.1.&lt;/p&gt;

&lt;p&gt;But in addition, people think if they define role="button" this element becomes accessible. Yes, it's true for screen readers. But that's only one case!&lt;/p&gt;

&lt;p&gt;This "button" isn't accessible for a keyboard. Users can't focus on this element using the tab key. Also, this "button" isn't accessible for interaction using the enter or space keys.&lt;/p&gt;

&lt;p&gt;So if you want to define role="button" don't do that. Just use the button element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- or --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;you can use it instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-bigger-clickable-area-the-better-userfriendly-interactive-elements"&gt;
  &lt;/a&gt;
  The bigger clickable area the better user-friendly interactive elements
&lt;/h2&gt;

&lt;p&gt;When we design interactive elements we have to think about how users will interact with them, in particular, a clickable area. &lt;/p&gt;

&lt;p&gt;That is important because users use different kinds of interactions. I often see designers and developers make a clickable area that is equal sizes of the element. &lt;/p&gt;

&lt;p&gt;It's nice for users who use a mouse. But that's a big problem for other users. If users have  a motor disability click on such an element is a nearly impossible task,&lt;/p&gt;

&lt;p&gt;Sometimes I can't hit on such elements when I tap on them using a finger. Also outline around elements has not enough contrast, if I focused on them using a keyboard,&lt;/p&gt;

&lt;p&gt;But we can solve these problems easily. Just we should design more largest clickable area that will not conflict with other elements around.   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7rDml1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/56937666/67caae32ca1a41859f94e25be24d8579/1.jpg%3Ftoken-time%3D1635292800%26token-hash%3DpVEa_BCCuXgCfixBPmjEiBrn72YcJP6BxUvZQ2j2Hg0%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7rDml1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/56937666/67caae32ca1a41859f94e25be24d8579/1.jpg%3Ftoken-time%3D1635292800%26token-hash%3DpVEa_BCCuXgCfixBPmjEiBrn72YcJP6BxUvZQ2j2Hg0%253D" alt="" width="620" height="620"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-arialabelledby-simplify-navigation-for-users-of-screen-readers"&gt;
  &lt;/a&gt;
  The aria-labelledby simplify navigation for users of screen readers
&lt;/h2&gt;

&lt;p&gt;Any web interface has a lot of sections that help users without vision disabilities orient at the page. We just see headings and understand that is a section and also its sense.&lt;/p&gt;

&lt;p&gt;But some users can't see. They use the special quick navigation mode known as "Regions list" in screen readers. In this mode screen readers display all regions on the page. So users can go to any by some taps.&lt;/p&gt;

&lt;p&gt;Unfortunately, there is a problem that is section elements aren't displayed in this mode until we associate section heading with a section using the aria-labelledby attribute.&lt;/p&gt;

&lt;p&gt;So we have to add the id to the heading and add this as a value to the aria-labelledby attribute that is defined for the section element.  As a result, this section will be added to the regions list and users will know about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;you can use it instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#focus-moving-is-underestimated"&gt;
  &lt;/a&gt;
  Focus moving is underestimated
&lt;/h2&gt;

&lt;p&gt;We don't think about what to do with focus when we design elements that appear after user actions. Or, more specifically, we just do nothing. Therefore there are 2 problems.&lt;/p&gt;

&lt;p&gt;Firstly, we cut off the possibility of more quick interaction. For example, when we log in on Groupon we have to focus on the input field to start filling in the form.&lt;/p&gt;

&lt;p&gt;Instead, when we go through the same case on Pinterest focus moves to the first input field automatically. So we can start filling in the form without additional actions. &lt;/p&gt;

&lt;p&gt;Secondly, if users have vestibular disabilities login becomes an impossible task because in this case, they lost the possibility of using a keyboard. For example, when we push on the sign in button on Groupon focus doesn't move inside of the form. It's lost just.&lt;/p&gt;

&lt;p&gt;For these reasons, we have to design our interfaces with the thought of how focus should move. In this case, our interfaces will be accessible for more users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gxh5LzBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58254310/b9df71dad9504ae9aa978215dd7d44c3/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3DMuX-fP5TefycieyyKFrbv7RThcQijj-Qdt1vtcpS1gU%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gxh5LzBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58254310/b9df71dad9504ae9aa978215dd7d44c3/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3DMuX-fP5TefycieyyKFrbv7RThcQijj-Qdt1vtcpS1gU%253D" alt="Focus doesn't move inside modal on Groupon website when we push the sign in button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6PgK-5Yf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58254310/1874e90a676c41f482de193ef7e1cae4/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3D2yC7bx6K0r5rE-pP6aTvxCIcDUEsP4oMJEx7Krf0QoA%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6PgK-5Yf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58254310/1874e90a676c41f482de193ef7e1cae4/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3D2yC7bx6K0r5rE-pP6aTvxCIcDUEsP4oMJEx7Krf0QoA%253D" alt="Focus moves on the first input box on Pinterest website when we push the log in button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#improving-accepting-the-cookies-policy-using-focus"&gt;
  &lt;/a&gt;
  Improving accepting the Cookies Policy using focus
&lt;/h2&gt;

&lt;p&gt;A last years there is a popular pattern when users have to accept Cookie Policy on websites. So I've wanted to research which solutions are and how they affect user experience. Let's talk about it. &lt;/p&gt;

&lt;p&gt;The typical solution is on the Fred Perry website. Users can see text with a link on the cookies policy and an accept button. When we use this kind of solution we have to use mouse, touchpad or others devices for pushing on a link or button. So we do additional actions.&lt;/p&gt;

&lt;p&gt;Also there is another solution on the H&amp;amp;M website. They set focus on the cookie policy link. The prop of this solution is users can consult with the policy if we just push the Enter key. When they want to accept the policy we push the Tab and Enter keys. We haven't to take in hand mouse or use the touchpad. &lt;/p&gt;

&lt;p&gt;The problem of this solution is a lot of users read the policy already and don't want to read it again. They just want to accept that. &lt;/p&gt;

&lt;p&gt;So I suggest to set focus on the accept button. In this case we quickly accept that using the Enter button. And if we need to read the policy we just will switch on the link using the shift+tab combination and then we'll go to read of policy by pushing the Enter key.    &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8PMlhx7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/58686231/27b1571be7cb4bfa9ae5aac790b81f64/1.jpg%3Ftoken-time%3D1638230400%26token-hash%3Dc2iX01AesVYaRTvFVQfr4ObxxBywtlCxDbJJLGYOAPo%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8PMlhx7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/58686231/27b1571be7cb4bfa9ae5aac790b81f64/1.jpg%3Ftoken-time%3D1638230400%26token-hash%3Dc2iX01AesVYaRTvFVQfr4ObxxBywtlCxDbJJLGYOAPo%253D" alt="Focus isn't set when the home page of the Fred Perry website loads" width="620" height="620"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YI6z6JEs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58686231/77cd86ef04a640668b590d7e4fd1e183/1.jpg%3Ftoken-time%3D1638230400%26token-hash%3DqbdhbFEbnIqpzZ578Hqi5SbBkTwky19Nx6CxrNRyJFs%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YI6z6JEs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58686231/77cd86ef04a640668b590d7e4fd1e183/1.jpg%3Ftoken-time%3D1638230400%26token-hash%3DqbdhbFEbnIqpzZ578Hqi5SbBkTwky19Nx6CxrNRyJFs%253D" alt="Focus is set on the Cookie policy when the home page of the H&amp;amp;M website loads" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bei1Ms_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58686231/68b25b3991f04101a4bcec8b4bbad1ce/1.jpg%3Ftoken-time%3D1638230400%26token-hash%3DCCoEDvHjh17zka7tCE77BRPxPun5H_sO0HrwVK8KSzs%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bei1Ms_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58686231/68b25b3991f04101a4bcec8b4bbad1ce/1.jpg%3Ftoken-time%3D1638230400%26token-hash%3DCCoEDvHjh17zka7tCE77BRPxPun5H_sO0HrwVK8KSzs%253D" alt="Focus is set on the accept all cookies when the home page of the H&amp;amp;M website loads" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;&lt;br&gt;
❤ Thank you so much, my sponsors: Ben Rinehart, Sergio Kagiema, Jesse Willard, Tanya Ten, Spiridon Konofaos.&lt;/p&gt;

&lt;p&gt;👀 Also I tell stories from my career on Substack. Join &lt;a href="https://stasmelnikov.substack.com"&gt;my free newsletter&lt;/a&gt;, if you're interested in my background&lt;/p&gt;

</description>
      <category>html</category>
      <category>ux</category>
      <category>a11y</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Top PostgreSQL monitoring metrics for Prometheus – Includes cheat sheet</title>
      <author>JA Samitier</author>
      <pubDate>Mon, 15 Nov 2021 15:49:43 +0000</pubDate>
      <link>https://dev.to/eckelon/top-postgresql-monitoring-metrics-for-prometheus-includes-cheat-sheet-47ch</link>
      <guid>https://dev.to/eckelon/top-postgresql-monitoring-metrics-for-prometheus-includes-cheat-sheet-47ch</guid>
      <description>&lt;p&gt;PostgreSQL monitoring with Prometheus is an &lt;a href="https://promcat.io/apps/postgresql#SetupGuide"&gt;easy thing to do&lt;/a&gt; thanks to the &lt;a href="https://github.com/prometheus-community/postgres_exporter"&gt;PostgreSQL Exporter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;PostgreSQL is an open-source relational database with a powerful community behind it. It’s very popular due to its &lt;strong&gt;strong stability and powerful data types&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In this article, you’ll learn the &lt;strong&gt;top 10 metrics in PostgreSQL monitoring&lt;/strong&gt;, with alert examples, both for PostgreSQL instances in Kubernetes and AWS RDS PostgreSQL instances.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Featured-Image-v2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJv-jo3j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Featured-Image-v2.png" alt="" width="880" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, we encourage you to &lt;a href="https://dig.sysdig.com/c/pf-top-10-metrics-in-postgresql?x=u_WFRi"&gt;download our Top 10 PostgreSQL monitoring metrics cheat sheet&lt;/a&gt; to dig deeper on how to monitor PostgreSQL with Prometheus.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-10-metrics-in-postgresql-monitoring"&gt;
  &lt;/a&gt;
  Top 10 metrics in PostgreSQL monitoring
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#availability"&gt;
  &lt;/a&gt;
  Availability
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MwshpfQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MwshpfQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-1.png" alt="PostgreSQL dashboard showing the availability metric to 1, in a green background" width="880" height="220"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-check-if-postgresql-is-running"&gt;
  &lt;/a&gt;
  #1 Check if PostgreSQL is running
&lt;/h4&gt;

&lt;p&gt;Checking that &lt;strong&gt;your PostgreSQL instance is up and running&lt;/strong&gt; should be the first step in PostgreSQL monitoring. The exporter will monitor the connection and availability of the PostgreSQL instance. The metric of monitoring PostgreSQL availability is &lt;code&gt;pg_up&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let’s create an alert that triggers if the PostgreSQL server goes down.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pg_up == 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-postmaster-service-uptime"&gt;
  &lt;/a&gt;
  #2 Postmaster Service Uptime
&lt;/h4&gt;

&lt;p&gt;Also, it’s important to assure that the minimum &lt;strong&gt;postmaster service uptime reflects the last known controlled server restart&lt;/strong&gt;. Otherwise, it means that a server has been restarted for unknown reasons. The metric of monitoring PostgreSQL availability is &lt;code&gt;pg_postmaster_start_time_seconds&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let’s create an alert to notify if the PostgreSQL server was restarted without a known reason in the last hour (&lt;code&gt;3600&lt;/code&gt; seconds).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;time() - pg_postmaster_start_time_seconds &amp;lt; 3600
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#replication"&gt;
  &lt;/a&gt;
  Replication
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#3-replication-lag"&gt;
  &lt;/a&gt;
  #3 Replication lag
&lt;/h4&gt;

&lt;p&gt;In scenarios with replicated PostgreSQL servers, &lt;strong&gt;a high replication lag rate can lead to coherence problems&lt;/strong&gt; if the master goes down. The metric of monitoring PostgreSQL availability is &lt;code&gt;pg_replication_lag&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let’s create an alert that triggers if the replication lag is greater than &lt;code&gt;10&lt;/code&gt; seconds.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pg_replication_lag &amp;gt; 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#storage"&gt;
  &lt;/a&gt;
  Storage
&lt;/h3&gt;

&lt;p&gt;Running out of disk is a common problem in all databases. It also can cause the Write Ahead Log (WAL) to be unable to write on disk. This could end up in &lt;strong&gt;transaction issues&lt;/strong&gt; affecting persisting data.&lt;/p&gt;

&lt;p&gt;Luckily, it’s also a very easy thing to monitor. We will check the database size, and the disk available.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-database-size"&gt;
  &lt;/a&gt;
  #4 Database size
&lt;/h4&gt;

&lt;p&gt;First, let’s figure out what is the &lt;strong&gt;storage usage of each of the PostgreSQL databases&lt;/strong&gt; in our instance. For this, we’ll use the &lt;code&gt;pg_database_size_bytes&lt;/code&gt; metric.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--znvRmeLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--znvRmeLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-2.png" alt="PosgreSQL dashboard showing the sizes of the different databases. In a chart, with a different color for each db." width="867" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-available-storage"&gt;
  &lt;/a&gt;
  #5 Available storage
&lt;/h4&gt;

&lt;p&gt;It depends on how you run your PostgreSQL instance:&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#kubernetes"&gt;
  &lt;/a&gt;
  Kubernetes
&lt;/h5&gt;

&lt;p&gt;You can use the &lt;code&gt;node_filesystem_free_bytes&lt;/code&gt; metric from the &lt;a href="https://github.com/prometheus/node_exporter"&gt;node_exporter&lt;/a&gt;. You may remember when we predicted the future in our &lt;a href="https://sysdig.com/blog/getting-started-with-promql-cheatsheet/"&gt;getting started PromQL guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZfWpAroT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZfWpAroT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-3.png" alt="PosgreSQL dashboard showing the percentage of disk used per node, in a chart" width="559" height="299"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s create an alert to notify us when we are going to have less than &lt;code&gt;1&lt;/code&gt; Gb in the next &lt;code&gt;24&lt;/code&gt; hours.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;predict_linear(node_filesystem_free_bytes\[1w\], 3600 \* 24) / (1024 \* 1024 \* 1024) &amp;lt; 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#aws-rds-postgresql"&gt;
  &lt;/a&gt;
  AWS RDS PostgreSQL
&lt;/h5&gt;

&lt;p&gt;Cloud-managed database solutions, like AWS RDS, are getting more and more popular. If you are running an AWS RDS PostgreSQL instance, you can monitor it &lt;a href="https://sysdig.com/blog/monitoring-amazon-rds/"&gt;through CloudWatch and the YACE exporter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can use the &lt;code&gt;aws_rds_free_storage_space_average&lt;/code&gt; metric. Let’s create an alert if you’re going to run out of storage in the next &lt;code&gt;48&lt;/code&gt; hours.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;predict_linear(aws_rds_free_storage_space_average\[48h\], 48 \* 3600) &amp;lt; 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://dig.sysdig.com/c/pf-top-10-metrics-in-postgresql?x=u_WFRi"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2qnArrEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Top-10-metrics-in-ProgreSQL-Post-image_top-10-metrics-blog-img-2.png" alt="Download the PromQL CheatSheet!" width="880" height="275"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#networking"&gt;
  &lt;/a&gt;
  Networking
&lt;/h3&gt;

&lt;p&gt;If you had to keep just one networking metric, it should be the available connections.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-number-of-available-connections"&gt;
  &lt;/a&gt;
  #6 Number of available connections
&lt;/h4&gt;

&lt;p&gt;We are going to &lt;strong&gt;calculate the available connections&lt;/strong&gt; by subtracting the superuser reserved connections (&lt;code&gt;pg_settings_superuser_reserved_connections&lt;/code&gt;) and the active connections (&lt;code&gt;pg_stat_activity_count&lt;/code&gt;) to the maximum number of connections (&lt;code&gt;pg_settings_max_connections&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aGZ6u71C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aGZ6u71C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-4.png" alt="PosgreSQL dashboard showing the percentage of available connections per node, in a chart" width="868" height="269"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s create an alert to notify if the number of available connections is under &lt;code&gt;10&lt;/code&gt; percent of the total.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;((sum(pg_settings_max_connections) by (server) - sum(pg_settings_superuser_reserved_connections) by (server)) - sum(pg_stat_activity_count) by (server)) / sum(pg_settings_max_connections) by (server)) \* 100 &amp;lt; 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xt1_9u5_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xt1_9u5_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-5.png" alt="PosgreSQL dashboard showing the number of available connections per node, in a chart" width="862" height="274"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h3&gt;

&lt;p&gt;Checking performance in any database means keeping an eye on &lt;strong&gt;CPU and memory&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;When a server runs out of memory, it can lead to more CPU load. Fortunately, some indicators warn us if memory usage needs to be optimized.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#7-latency"&gt;
  &lt;/a&gt;
  #7 Latency
&lt;/h4&gt;

&lt;p&gt;First, we are going to measure performance by calculating how much time it takes to get the results from the slowest active transaction. To do that, we’ll use the &lt;code&gt;pg_stat_activity_max_tx_duration&lt;/code&gt; metric.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T_CKn52L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T_CKn52L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-6.png" alt="PosgreSQL dashboard showing the max active transaction time, by DB, in a chart" width="855" height="330"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s create an alert that notifies us when the active transaction takes more than &lt;code&gt;2&lt;/code&gt; seconds to complete.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pg_stat_activity_max_tx_duration{state="active"} &amp;gt; 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#8-cache-hit-rate"&gt;
  &lt;/a&gt;
  #8 Cache hit rate
&lt;/h4&gt;

&lt;p&gt;Low latency can be a consequence of &lt;strong&gt;problems with cache in memory&lt;/strong&gt;, which increments disk usage, so everything is slower.&lt;/p&gt;

&lt;p&gt;For analyzing the cache hit rate, we’ll check the in-memory transactions (&lt;code&gt;pg_stat_database_blks_hit&lt;/code&gt;) and the transactions running in disk (&lt;code&gt;pg_stat_database_blks_read&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t5NU-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t5NU-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-7.png" alt="PosgreSQL dashboard showing the average cache hit rate for the instance, in a chart" width="872" height="249"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s create an alert when the cache hit rate is lower than &lt;code&gt;80&lt;/code&gt; percent.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;100 \* (rate(pg_stat_database_blks_hit\[$__interval\]) /
((rate(pg_stat_database_blks_hit\[$__interval\]) +
rate(pg_stat_database_blks_read\[$__interval\]))&amp;gt;0)) &amp;lt; 80
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#9-memory-available"&gt;
  &lt;/a&gt;
  #9 Memory available
&lt;/h4&gt;

&lt;p&gt;The solution for a low hit rate is &lt;strong&gt;increasing the memory usage&lt;/strong&gt; of your instance. But this is &lt;strong&gt;not always possible&lt;/strong&gt; due to potential memory limitations. So, first, we need to be sure that we have &lt;strong&gt;enough available memory&lt;/strong&gt;.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#kubernetes"&gt;
  &lt;/a&gt;
  Kubernetes
&lt;/h5&gt;

&lt;p&gt;You can combine the total memory available for your instance (&lt;code&gt;kube_pod_container_resource_limits{resource="memory"}&lt;/code&gt;) with the memory being used (&lt;code&gt;container_memory_usage_bytes{container!="POD",container!=""}&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Let’s write a PromQL to use those metrics to get the total available memory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sum by(namespace,pod,container)(kube_pod_container_resource_limits{resource="memory"}) - sum by(namespace,pod,container)(container_memory_usage_bytes{container!="POD",container!=""})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this information, now you can &lt;strong&gt;assure how much memory usage&lt;/strong&gt; you can increment for your instance.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#aws-rds-postgresql-instance"&gt;
  &lt;/a&gt;
  AWS RDS PostgreSQL instance
&lt;/h5&gt;

&lt;p&gt;If you are using AWS RDS PostgreSQL, then it’s really easy to know the available disk space: just use the &lt;code&gt;aws_rds_freeable_memory_average&lt;/code&gt; metric!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#10-requested-buffer-checkpoints"&gt;
  &lt;/a&gt;
  #10 Requested buffer checkpoints
&lt;/h4&gt;

&lt;p&gt;PostgreSQL uses the buffer checkpoints to write the dirty buffers on disk, so it creates safe points for the Write Ahead Log (WAL). These checkpoints are scheduled periodically but also &lt;strong&gt;can be requested on-demand&lt;/strong&gt; when the buffer runs out of space.&lt;/p&gt;

&lt;p&gt;A high number of requested checkpoints compared to the number of scheduled checkpoints can impact directly the performance of your PostgreSQL instance. To avoid this situation you could &lt;strong&gt;increase the database buffer size&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note that increasing the buffer size &lt;strong&gt;will also increase the memory usage of your PostgreSQL instance&lt;/strong&gt;. Check your memory availability in the previous step.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let’s create a PromQL query to visualize the percentage of the scheduled checkpoints (&lt;code&gt;pg_stat_bgwriter_checkpoints_timed&lt;/code&gt;) compared with the total of both scheduled and requested checkpoints (&lt;code&gt;pg_stat_bgwriter_checkpoints_req&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rate(pg_stat_bgwriter_checkpoints_req\[5m\]) /
(rate(pg_stat_bgwriter_checkpoints_req\[5m\]) + rate(pg_stat_bgwriter_checkpoints_timed\[5m\])) \* 100
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GrM3g9Hq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GrM3g9Hq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-8.png" alt="PosgreSQL dashboard showing the percentage of requested checkpoints, comparing to the scheduled ones for the instance, in a chart" width="862" height="312"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#that-was-nice-but-where-are-my-postgresql-monitoring-dashboards"&gt;
  &lt;/a&gt;
  That was nice, but where are my PostgreSQL monitoring dashboards?
&lt;/h2&gt;

&lt;p&gt;In this article, we introduced PostgreSQL monitoring with Prometheus, using &lt;code&gt;postgres_exporter&lt;/code&gt;. It doesn’t matter if you run your own &lt;strong&gt;PostgreSQL instance in Kubernetes, or in an AWS RDS PostgreSQL&lt;/strong&gt; instance. We also introduced the &lt;a href="https://dig.sysdig.com/c/pf-top-10-metrics-in-postgresql?x=u_WFRi"&gt;Top 10 metrics in PostgreSQL monitoring with Prometheus cheat sheet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can now download the already configured &lt;a href="https://promcat.io/apps/postgresql#Dashboard"&gt;PostgresSQL monitoring dashboards from PromCat&lt;/a&gt; and add them to your Grafana installation (or to Sysdig Monitor!)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_HbZZVdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_HbZZVdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysdig.com/wp-content/uploads/Blog-PostgreSQL-Monitoring-Image-9.png" alt="Screenshot showing the available PostgreSQL monitoring dashboards to download, in PromCat.io" width="880" height="560"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>TypeError: fs.existsSync is not a function</title>
      <author>Aishanii</author>
      <pubDate>Mon, 15 Nov 2021 15:42:56 +0000</pubDate>
      <link>https://dev.to/aishanipach/typeerror-fsexistssync-is-not-a-function-4pm2</link>
      <guid>https://dev.to/aishanipach/typeerror-fsexistssync-is-not-a-function-4pm2</guid>
      <description>&lt;h3&gt;
  &lt;a href="#while-using-sass-in-a-react-project-and-using-useref-hook-one-might-come-across-this-error"&gt;
  &lt;/a&gt;
  While using Sass in a react project and using useRef hook, one might come across this error:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4f6LKHs8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp8vkxbcw5be3071xijo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4f6LKHs8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp8vkxbcw5be3071xijo.png" alt="React and Sass error" width="880" height="856"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To solve this, simply look for &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-import-yourvarname-from-nodesass-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;import {yourvarname} from "node-sass";&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;in the component where ref is being used and remove this line. Visual Studio Code automatically adds the line which causes the given error.&lt;/p&gt;

&lt;p&gt;More on this: &lt;a href="https://vscode-docs.readthedocs.io/en/latest/languages/css/"&gt;https://vscode-docs.readthedocs.io/en/latest/languages/css/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>Building a Next.js app with Netlify, NextAuth.js, Prisma, and a PlanetScale serverless database</title>
      <author>etnoctua</author>
      <pubDate>Mon, 15 Nov 2021 15:40:01 +0000</pubDate>
      <link>https://dev.to/planetscale/building-a-nextjs-app-with-netlify-nextauthjs-prisma-and-a-planetscale-serverless-database-2edp</link>
      <guid>https://dev.to/planetscale/building-a-nextjs-app-with-netlify-nextauthjs-prisma-and-a-planetscale-serverless-database-2edp</guid>
      <description>&lt;p&gt;Git-centric workflows have fundamentally changed how we build for the web. As developers, we want isolated environments to develop and test our applications. As Netlify’s CEO Matt Biilmann mentioned in his recent Jamstack Conf keynote, our back-end data layer is still a single branch. It’s often talking to a long-running server or a production environment. &lt;/p&gt;

&lt;p&gt;It doesn’t have to be this way. PlanetScale supports database schema branching, deploy requests, and non-blocking schema changes. Your staging environment’s database can be isolated from the production environment’s database.&lt;/p&gt;

&lt;p&gt;We are excited to announce a new Next.js starter app that can be deployed to Netlify with the “Deploy to Netlify” button, uses NextAuth.js for built-in authentication, and Prisma to interact with your PlanetScale database.&lt;/p&gt;

&lt;p&gt;The starter app is located today on the Netlify Jamstack Templates page. Want to get started right away? Click the button below!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://app.netlify.com/start/deploy?repository=https://github.com/planetscale/nextjs-planetscale-starter"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gq_bfuxi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.netlify.com/img/deploy/button.svg" alt="Deploy to Netlify" width="146" height="32"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: After you deploy to Netlify, you will need to follow the instructions in the &lt;a href="https://github.com/planetscale/nextjs-planetscale-starter"&gt;documentation&lt;/a&gt; to get your PlanetScale database up and running.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since this is just the first version of this starter app, we would love to hear your feedback! &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>nextjs</category>
      <category>netlify</category>
      <category>serverless</category>
    </item>
    <item>
      <title>Simplest way to compile all TypeScript into one single Js file by SilvenLEAF</title>
      <author>SilvenLEAF</author>
      <pubDate>Mon, 15 Nov 2021 15:15:26 +0000</pubDate>
      <link>https://dev.to/silvenleaf/simplest-way-to-compile-all-typescript-into-one-single-js-file-19bj</link>
      <guid>https://dev.to/silvenleaf/simplest-way-to-compile-all-typescript-into-one-single-js-file-19bj</guid>
      <description>&lt;p&gt;Ahoy there! It's I, SilvenLEAF!! Have you ever faced an issue where you have many TypeScript files but want them all to convert into one Single JavaScript file so that you can reference it from your HTML? Then fear you not! Let's get it done in the simplest way!! &lt;/p&gt;

&lt;p&gt;We'll be using Webpack with TypeScript. Let's start!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-0-begin-the-project"&gt;
  &lt;/a&gt;
  Step 0: Begin the project
&lt;/h3&gt;

&lt;p&gt;Create a folder and open it in your favorite editor (mine VS Code). Then type this command on your project terminal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(It'll create a package.json file to track all the packages that you'd download and so on)&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#bonus-step-adding-typescript"&gt;
  &lt;/a&gt;
  Bonus Step: Adding TypeScript
&lt;/h2&gt;

&lt;p&gt;For those who are a bit lost on how to set up the environment and run the TypeScript files, check this one out &lt;strong&gt;&lt;a href="https://dev.to/silvenleaf/typescript-setup-by-silvenleaf-1aen"&gt;TypeScript SETUP by SilvenLEAF&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well anyway, in short (for details, checkout the above link)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;install typescript
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i typescript 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;init our tsconfig
(make sure you already have typescript globally installed, if not type &lt;strong&gt;npm i -g typescript&lt;/strong&gt;. And don't get it confused with the previous normal &lt;strong&gt;npm i typescript&lt;/strong&gt; command)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;tsc &lt;span class="nt"&gt;--init&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(It'll create a &lt;strong&gt;.tsconfig&lt;/strong&gt; file)&lt;/p&gt;

&lt;p&gt;Let's update some of the properties from that &lt;strong&gt;.tsconfig&lt;/strong&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"outDir"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./dist"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"rootDir"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./src"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It'll convert all TypeScript files that are inside &lt;strong&gt;"src"&lt;/strong&gt; folder and output them in the &lt;strong&gt;"dist"&lt;/strong&gt; folder.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-1-create-a-simplest-project"&gt;
  &lt;/a&gt;
  Step 1: Create a Simplest project
&lt;/h3&gt;

&lt;p&gt;Let's create an &lt;strong&gt;"index.html"&lt;/strong&gt; file on the root level of your project folder with this following content&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- By @SilvenLEAF --&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./dist/app-bundle.js"&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Webpack with TypeScript&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Let's learn Webpack with TypeScript&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"alertBtn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Click me!&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See on line no 7, we are referencing &lt;strong&gt;"./dist/app-bundle.js"&lt;/strong&gt; JavaScript file. This will be the single JavaScript file which will be compiled from all those TypeScript files.&lt;/p&gt;

&lt;p&gt;Now let's create a folder &lt;strong&gt;"src"&lt;/strong&gt; on the root level and inside it, let's create all our TypeScript files. Let's create &lt;strong&gt;"app.ts"&lt;/strong&gt; and &lt;strong&gt;"variable.ts"&lt;/strong&gt; files (inside the &lt;strong&gt;"src"&lt;/strong&gt; folder. &lt;/p&gt;

&lt;p&gt;Inside &lt;strong&gt;"variable.ts"&lt;/strong&gt; file, write the following content&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SilvenLEAF&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And inside &lt;strong&gt;"app.ts"&lt;/strong&gt; file write the following content&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// By @SilvenLEAF&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./variable&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;alertBtn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#alertBtn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;HTMLButtonElement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;header&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#header&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;HTMLHeadingElement&lt;/span&gt;

&lt;span class="nx"&gt;alertBtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Hello there, I'm &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great! We have a simple project created. Now let's compile all those TypeScript files into one single file and test it out.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-2-configure-webpack"&gt;
  &lt;/a&gt;
  Step 2: Configure Webpack
&lt;/h3&gt;

&lt;p&gt;Type the following command to install the required packages&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-D&lt;/span&gt; webpack webpack-cli typescript ts-loader
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(&lt;strong&gt;"npm i -D X"&lt;/strong&gt; is the shorthand for &lt;strong&gt;"npm install --save-dev X"&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;Now create a &lt;strong&gt;"webpack.config.js"&lt;/strong&gt; file on the root level of your project folder with the following content&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//webpack.config.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;devtool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;inline-source-map&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;main&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/app.ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./dist&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app-bundle.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;--- Will be compiled to this single file&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.tsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;tsx&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's compile them and test it out. Type this following command to compile all TypeScript files into one single file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx webpack
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See we are not using the &lt;strong&gt;"tsc"&lt;/strong&gt; command to compile here because we are using webpack. It'll create a single file named &lt;strong&gt;"app-bundle.js"&lt;/strong&gt; inside &lt;strong&gt;"dist"&lt;/strong&gt; folder. We'll be linking this file on the &lt;strong&gt;"index.html"&lt;/strong&gt;. See line no 7 of &lt;strong&gt;"index.html"&lt;/strong&gt; file&lt;/p&gt;

&lt;p&gt;Now let's test it out. Launch the &lt;strong&gt;"index.html"&lt;/strong&gt; file with LIVE Server. (If you don't have this extension installed, install it in VS Code or Atom or whatever Text Editor you are using, and run it). It'll run that html page live on your browser. Click that &lt;strong&gt;"Click me!"&lt;/strong&gt; Button and see that it's working fine!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Before clicking the button&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eY2YeGTd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtlxonr977ek0izw9b4v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eY2YeGTd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtlxonr977ek0izw9b4v.png" alt="Before clicking the button" width="781" height="346"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;After clicking the button&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rceWclJr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgw0gza0t9014ept7mzc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rceWclJr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgw0gza0t9014ept7mzc.png" alt="After clicking the button" width="793" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope it was helpful!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NEXT blog is coming by November 17th&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's NEXT?
&lt;/h1&gt;

&lt;h4&gt;
  &lt;a href="#1-learning-devops-with-github-actions"&gt;
  &lt;/a&gt;
  1. Learning DevOps with Github Actions
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#2-more-on-devops"&gt;
  &lt;/a&gt;
  2. More on DevOps
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#3-improved-ai-bot-that-can-do-anything"&gt;
  &lt;/a&gt;
  3. Improved AI BOT that can do anything
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#4-insane-stuff-with-javascripttypescript"&gt;
  &lt;/a&gt;
  4. Insane stuff with JavaScript/TypeScript
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#5-debugging-typescript-with-vs-code-debugger"&gt;
  &lt;/a&gt;
  5. Debugging TypeScript with VS Code Debugger
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#6-sequelize-hooks"&gt;
  &lt;/a&gt;
  6. Sequelize Hooks
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#7-how-to-create-an-android-app-with-no-xp"&gt;
  &lt;/a&gt;
  7. How to create an Android APP with NO XP
&lt;/h4&gt;

&lt;p&gt;(including apk generating)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#got-any-doubt"&gt;
  &lt;/a&gt;
  Got any doubt?
&lt;/h1&gt;

&lt;p&gt;Drop a comment or Feel free to reach out to me @SilveLEAF on Twitter or &lt;a href="https://www.linkedin.com/in/silvenleaf/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wanna know more about me? Come here! &lt;br&gt;
&lt;a href="https://SilvenLEAF.github.io"&gt;SilvenLEAF.github.io&lt;/a&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
