<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Client-Side Rendering vs Server-Side Rendering vs Static-Site Generator</title>
      <author>Bibek</author>
      <pubDate>Mon, 17 May 2021 08:48:59 +0000</pubDate>
      <link>https://dev.to/bibekkakati/client-side-rendering-vs-server-side-rendering-vs-static-site-generator-447n</link>
      <guid>https://dev.to/bibekkakati/client-side-rendering-vs-server-side-rendering-vs-static-site-generator-447n</guid>
      <description>&lt;p&gt;Hello everyoneüëã&lt;/p&gt;

&lt;p&gt;Technology has evolved in different ways and in the same way the concepts of building products or tools. Frontend web development is one of the domains which is changing rapidly with the growing community and requirements of faster development. Many libraries and frameworks have been introduced to the developers starting from jquery to react, angular etc. Every technology, concept, library and framework have its own pros and cons but they know how to stand out as per the requirement.&lt;/p&gt;

&lt;p&gt;In this article, I am going to discuss different methods of creating frontend sites.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#topics"&gt;
  &lt;/a&gt;
  Topics
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;Vanilla HTML Websites&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;Client-Side Rendering&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;Server-Side Rendering&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;Static-Site Generator&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#vanilla-html-websites"&gt;
  &lt;/a&gt;
  Vanilla HTML Websites
&lt;/h3&gt;

&lt;p&gt;Vanilla HTML or Static Websites are the raw form of websites that we build using &lt;code&gt;HTML&lt;/code&gt;, &lt;code&gt;CSS&lt;/code&gt;, &lt;code&gt;JavaScript&lt;/code&gt;. They are directly served from a web host or CDN.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yFnwhbrg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621176481419/sVusuh4Lb.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yFnwhbrg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621176481419/sVusuh4Lb.jpeg" alt="Static Website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;It is easy to get started with.&lt;/li&gt;
&lt;li&gt;Generally, not so complex.&lt;/li&gt;
&lt;li&gt;SEO optimization can be done.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Less modularity; Hard to update/maintain pages as we need to rewrite a lot of the same code for every page.&lt;/li&gt;
&lt;li&gt;New request to the server for every page.&lt;/li&gt;
&lt;li&gt;Generally, do not contain dynamic data.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#clientside-rendering"&gt;
  &lt;/a&gt;
  Client-Side Rendering
&lt;/h3&gt;

&lt;p&gt;You may have heard this term many times, it is also known as CSR in short. So what happens in Client-Side Rendering?&lt;/p&gt;

&lt;p&gt;When we build a site with React, Angular or Vue, it creates a SPA (Single Page Application) that doesn't have any pre-rendered &lt;code&gt;HTML&lt;/code&gt; pages. When the browser requests the server for the site, the initial request is for a blank HTML page and then it fetches the JS scripts that manipulate the DOM and render the pages. Routing, data handling etc., are also done within the browser itself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ES63I5VL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621177704707/CzL1inkZ7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ES63I5VL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621177704707/CzL1inkZ7.png" alt="Client Side Rendering"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Easy to maintain codebase.&lt;/li&gt;
&lt;li&gt;Modular approach.&lt;/li&gt;
&lt;li&gt;It's fast except for the initial request.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;It is not SEO friendly.&lt;/li&gt;
&lt;li&gt;It can become complex.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;React.js&lt;/code&gt;, &lt;code&gt;Angular&lt;/code&gt;, &lt;code&gt;Vue&lt;/code&gt; can be used to build SPAs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can optimize these kinds of sites with Server-Side Rendering.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serverside-rendering"&gt;
  &lt;/a&gt;
  Server-Side Rendering
&lt;/h3&gt;

&lt;p&gt;In Server-Side Rendering, the pages are rendered on the server on every request for it. The server aggregates the data from its source like a database and fed it to the templates to render the requested HTML pages. And rendered pages are then sent back to the browser, to display to the user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F2yVVnFw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621178361766/o92jvSxda.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F2yVVnFw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621178361766/o92jvSxda.png" alt="Server Side Rendering"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Easy to maintain codebase.&lt;/li&gt;
&lt;li&gt;Modular approach.&lt;/li&gt;
&lt;li&gt;SEO friendly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Network latency can impact.&lt;/li&gt;
&lt;li&gt;New request for every page.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Next.js&lt;/code&gt; for React and &lt;code&gt;Nuxt.js&lt;/code&gt; for Vue can be used for Server-Side Rendering.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is a hybrid approach to get benefits of both CSR and SSR which we will be discussing next.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#staticsite-generator"&gt;
  &lt;/a&gt;
  Static-Site Generator
&lt;/h3&gt;

&lt;p&gt;In Static-Site Generator, the static pages are compiled at the build-time i.e, before deployment with some initial data. The static pages are then deployed to a web server. After the initial request, the site behaves more like a Single-Page Application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--46fkW4p8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621179375849/uDbKkaMo5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--46fkW4p8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621179375849/uDbKkaMo5.png" alt="Static Site Generator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Easy to maintain codebase.&lt;/li&gt;
&lt;li&gt;Modular approach.&lt;/li&gt;
&lt;li&gt;SEO friendly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;It can become complex.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Gatsby.js&lt;/code&gt; with React can be used for Static-Site Generator.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;There is no hard and fast rule on which one you should use. It depends on your application and its usage.&lt;/p&gt;

&lt;p&gt;In my opinion, Client-Side Rendering is suited for applications where users will stay for a longer time and will interact often and want a user experience similar to a desktop application. For example, a trading platform.&lt;/p&gt;

&lt;p&gt;Server-Side Rendering is good for applications like @&lt;a href="https://dev.to@hashnode"&gt;Hashnode&lt;/a&gt;, a blogging platform.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Originally published on &lt;a href="https://blog.bibekkakati.me/types-of-frontend-websites"&gt;blog.bibekkakati.me&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Thank you for reading üôè&lt;/p&gt;

&lt;p&gt;If you enjoyed this article or found it helpful, give it a thumbs-up üëç&lt;/p&gt;

&lt;p&gt;Feel free to connect üëã&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/kakatibibek"&gt;Twitter&lt;/a&gt; | &lt;a href="https://instagram.com/bibekkakati"&gt;Instagram&lt;/a&gt; | &lt;a href="https://linkedin.com/in/bibekkakati"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you like my work and want to support it, you can do it here. I will really appreciate it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/bibekkakati"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7pOmeWpX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520coffee%26emoji%3D%26slug%3Dbibekkakati%26button_colour%3DFFDD00%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3Dffffff"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>react</category>
      <category>angular</category>
      <category>vue</category>
    </item>
    <item>
      <title>3 ways to clone an object in Javascript</title>
      <author>Nithish Kumar</author>
      <pubDate>Mon, 17 May 2021 08:38:10 +0000</pubDate>
      <link>https://dev.to/nithish_13/3-ways-to-clone-an-object-in-javascript-5gml</link>
      <guid>https://dev.to/nithish_13/3-ways-to-clone-an-object-in-javascript-5gml</guid>
      <description>&lt;p&gt;Before proceeding, let me explain very briefly about Primitive and Reference types in Javascript. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#primitive-and-reference-type"&gt;
  &lt;/a&gt;
  Primitive and Reference type
&lt;/h1&gt;

&lt;p&gt;Javascript has 5 data types that can contain values. &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt; , &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;. These are referred to as &lt;strong&gt;primitive&lt;/strong&gt; data types. Basically these are passed by value.&lt;br&gt;
Javascript has 3 data types that are passed by reference. &lt;code&gt;Object&lt;/code&gt;,&lt;code&gt;Functions&lt;/code&gt; and  &lt;code&gt;Arrays&lt;/code&gt;. Technically,  these are all objects and called as &lt;strong&gt;reference&lt;/strong&gt; data types&lt;br&gt;
Primitive data types are immutable, which means their value cannot be modified once created.&lt;br&gt;
Whereas, objects and arrays are mutable , meaning their value can be altered after creation.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#consider-the-following-examples"&gt;
  &lt;/a&gt;
  Consider the following examples.
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Let us start by copying/cloning a string&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;message1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello everyone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;message2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message1&lt;/span&gt;
&lt;span class="nx"&gt;message2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 'hello everyone' ‚úÖ&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 'hello world' ‚úÖ&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So for so good,, everything is working as expected .&lt;br&gt;
&lt;em&gt;Let us implement the same logic for &lt;code&gt;object&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myObj1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myObj2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myObj1&lt;/span&gt;
&lt;span class="nx"&gt;myObj2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Michael&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObj1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//{name: 'Michael', age: 34} üò≤ -&amp;gt; why does the original object `myObj2` got affected ?&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObj2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//{name: 'Michael', age: 34} ‚úÖ&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ü§îü§î&lt;br&gt;
That's because objects are reference type(passed by reference). So, when you use '=', the pointer to the memory address of &lt;code&gt;myObj1&lt;/code&gt; is copied to &lt;code&gt;myObj2&lt;/code&gt;. Not the actual value is copied. Since, reference type don't hold values, they are pointer to the value in memory space.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#so-how-do-you-clone-an-object"&gt;
  &lt;/a&gt;
  So,, how do you clone an object?
&lt;/h2&gt;

&lt;p&gt;We can use variety of techniques such as the spread operator(...) or Object.assign() or with JSON.parse() and JSON.stringify().&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-using-spread-"&gt;
  &lt;/a&gt;
  1. Using spread (...)
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myObj1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myObj2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;myObj1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="nx"&gt;myObj2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Michael&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObj1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// {name: "John Doe", age: 34} ‚úÖ Original object `myObj1` is not changed&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObj2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// {name: "Michael", age: 34} ‚úÖ&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#2-using-objectassign"&gt;
  &lt;/a&gt;
  2. Using Object.assign()
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;item1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;pencil&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;item2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="nx"&gt;item1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;item2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// {pen: 23, pencil: 45} ‚úÖ Original object `item1` is not changed&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// {pen: 100, pencil: 45} ‚úÖ&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Note&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Both of the above techniques only does a shallow copy(only the outer part). If you want to perform a deep copy(nested part), there are a few approaches to this problem. The simple technique is by using our well known friend &lt;code&gt;JSON.parse()&lt;/code&gt; and &lt;code&gt;JSON.stringify()&lt;/code&gt;. But, it is not recommended to do deep copy using this technique, instead , you can use libraries such&lt;br&gt;
as lodash, which is easy to implement and also robust.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#3-using-json-not-recommended"&gt;
  &lt;/a&gt;
  3. Using JSON (Not Recommended)
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="na"&gt;d&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// {a: 1,b: 2,c: {d: 3}} ‚úÖ&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// {a: 1,b: 2,c: {d: 45}} ‚úÖ&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Note&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you try to do the above example with spread or &lt;code&gt;Object.assign()&lt;/code&gt;,it only modifies &lt;br&gt;
the outer part(shallow). &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="na"&gt;d&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;shallowObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;shallowObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="nx"&gt;shallowObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shallowObj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//{a: 1,b: 20,c: {d: 30}} üòé&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//{a: 1,b: 2,c: {d: 30}}  ü§Ø -&amp;gt; Notice that only `b` value is not modified from the original `obj`, whereas, `d` value is modified&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;A shallow copy means the first level is copied, deeper levels are referenced.&lt;/strong&gt;&lt;br&gt;
This is where, shallow and deep copy plays an important role.&lt;/p&gt;

&lt;p&gt;Thanks for reading my post üôåüôå&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#additional-resources"&gt;
  &lt;/a&gt;
  üëâ Additional Resources
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"&gt;MDN Web Docs:Object.assign()&lt;/a&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"&gt;MDN Web Docs:JSON.parse()&lt;/a&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify"&gt;MDN Web Docs:JSON.stringify()&lt;/a&gt;&lt;br&gt;
&lt;a href="https://medium.com/@manjuladube/understanding-deep-and-shallow-copy-in-javascript-13438bad941c"&gt;Shallow vs Deep Copy&lt;/a&gt;&lt;br&gt;
&lt;a href="https://itnext.io/javascript-interview-prep-primitive-vs-reference-types-62eef165bec8"&gt;Primitive vs Reference Type&lt;/a&gt;&lt;br&gt;
&lt;a href="https://flaviocopes.com/how-to-clone-javascript-object/#:~:text=Lodash%20offers%20the%20very%20convenient,the%20size%20of%20the%20dependency.&amp;amp;text=In%20this%20simple%20example%20we,copy%2C%20and%20edit%20the%20i."&gt;Why should you use lodash for deep copy&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Creating an internationalised site with Strapi and Nuxt</title>
      <author>Gemma Vincent</author>
      <pubDate>Mon, 17 May 2021 08:13:26 +0000</pubDate>
      <link>https://dev.to/lilgemvincent/creating-an-internationalised-site-with-strapi-and-nuxt-3lbj</link>
      <guid>https://dev.to/lilgemvincent/creating-an-internationalised-site-with-strapi-and-nuxt-3lbj</guid>
      <description>&lt;p&gt;&lt;em&gt;This post was first published on our site, you can subscribe for more posts like this here: &lt;a href="https://www.pixelhop.io/writing/"&gt;&lt;/a&gt;&lt;a href="https://www.pixelhop.io/writing/"&gt;https://www.pixelhop.io/writing/&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We were really excited when Strapi released a new update a few weeks ago that included internationalisation! This post will show you the basics of creating an internationalised site using Strapi and Nuxt.&lt;/p&gt;

&lt;p&gt;Watch the video or follow along below.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/AZh7m8ysI0U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you are the kind of person that likes to dive straight into code, we have created example repositories for both the Nuxt and Strapi parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Strapi üëâ &lt;a href="https://github.com/pixelhop/strapi-i18n"&gt;&lt;/a&gt;&lt;a href="https://github.com/pixelhop/strapi-i18n"&gt;https://github.com/pixelhop/strapi-i18n&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Nuxt üëâ &lt;a href="https://github.com/pixelhop/nuxt-i18n"&gt;&lt;/a&gt;&lt;a href="https://github.com/pixelhop/nuxt-i18n"&gt;https://github.com/pixelhop/nuxt-i18n&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-strapi"&gt;
  &lt;/a&gt;
  Setting up Strapi
&lt;/h2&gt;

&lt;p&gt;First things first, let's set up our &lt;a href="https://strapi.io/"&gt;Strapi CMS&lt;/a&gt;. Create a folder to hold this project, and then let's create a new Strapi project using your terminal and the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-strapi-app strapi &lt;span class="nt"&gt;--quickstart&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After npm is finished installing your new Strapi instance, it will start the Strapi dev server and ask you to create an admin login. Go ahead and make your user, and voil√† you've got a brand spanking shiny new headless CMS at your disposal. &lt;em&gt;"Now we're sucking on diesel"&lt;/em&gt;*&lt;/p&gt;

&lt;p&gt;*We have been watching far too much Line of Duty.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-some-content"&gt;
  &lt;/a&gt;
  Adding some content
&lt;/h3&gt;

&lt;p&gt;What's the point of a CMS if you've got no content? For the purpose of this demo, we are going to create a basic content type.&lt;/p&gt;

&lt;p&gt;Head to the Content Types Builder in the Strapi admin: &lt;a href="http://localhost:1337/admin/plugins/content-type-builder/content-types/"&gt;&lt;/a&gt;&lt;a href="http://localhost:1337/admin/plugins/content-type-builder/content-types/"&gt;http://localhost:1337/admin/plugins/content-type-builder/content-types/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once there, let's create a new single type by clicking the "+ Create new single type" link in the left sidebar. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HUtX9glu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aox8usffi4p33vtf4jcu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HUtX9glu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aox8usffi4p33vtf4jcu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's give our content type a name of "Home", and before clicking "Continue", navigate to the "Advanced settings" tab. Once there, make sure to check the "Enable localisation for the Content-Type" checkbox. You need to do this for any content type you would like to be localised. Once you have done that, it's safe to click "Continue".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8iOybTRp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1uubfdzn78md8f4fhac4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8iOybTRp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1uubfdzn78md8f4fhac4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-fields"&gt;
  &lt;/a&gt;
  Adding fields
&lt;/h3&gt;

&lt;p&gt;A content type can't hold any content if it doesn't add any fields, so the next step is to add some. We are going to keep it super simple and will add three fields.&lt;br&gt;
Create a text field called "Title":&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KVZc0Gkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l2z8evz26t2ns8z3xuvk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KVZc0Gkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l2z8evz26t2ns8z3xuvk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click "+ Add another field". Then add a rich text field called "Body":&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gDqtXB6p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/us6ajtth65r2gc7q9ql5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gDqtXB6p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/us6ajtth65r2gc7q9ql5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click "+ Add another field", and finally let's add media field called "Image" and set its' type to "Single media" so we only need to upload one image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WZ3pEAKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etzvqwbeakelcaaqgejl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WZ3pEAKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etzvqwbeakelcaaqgejl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, go to the "Advanced settings" tab.&lt;/p&gt;

&lt;p&gt;Frequently when creating a localised site, you won't want all fields to be localised. By default, you will have to re-enter content for each field in the new language when you switch between locales.&lt;/p&gt;

&lt;p&gt;In our case, we want the Image field to keep the same image across all languages.&lt;br&gt;
&lt;strong&gt;Uncheck the "Enabled for localisation" checkbox.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hXBNu-vD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wswbt6mtpl6w1h2owdp0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hXBNu-vD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wswbt6mtpl6w1h2owdp0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can click "Finish" to create our fields. Take a second to give yourself a pat on the back; you're one step closer to localisation euphoria.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#adding-your-locales"&gt;
  &lt;/a&gt;
  Adding your locales
&lt;/h3&gt;

&lt;p&gt;Next up, we need to add your desired locales in Strapi. The locales are basically the different languages you want your site to support.&lt;/p&gt;

&lt;p&gt;You can get to the locale settings by going to Settings &amp;gt; Internationalisation: &lt;a href="http://localhost:1337/admin/settings/internationalization"&gt;&lt;/a&gt;&lt;a href="http://localhost:1337/admin/settings/internationalization"&gt;http://localhost:1337/admin/settings/internationalization&lt;/a&gt; in the Strapi admin.&lt;/p&gt;

&lt;p&gt;Once you are there, you should see that you already have one locale, English. You can add another one by clicking the "Add locale" button in the top right.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AAa3d0aZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gtqhxcq2kg8oggjqpn5r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AAa3d0aZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gtqhxcq2kg8oggjqpn5r.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose your desired language in the modal that appears and click the "Add locale" button. Just like that, your CMS is now multilingual! Add as many languages as you need.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#set-content-type-permissions"&gt;
  &lt;/a&gt;
  Set content type permissions
&lt;/h3&gt;

&lt;p&gt;We are going to need Nuxt to be able to access our Stapi API to pull in content. By default, Strapi makes any new content type private, so we will need to change that.&lt;/p&gt;

&lt;p&gt;Go to Settings, and under the "Users &amp;amp; Permissions Plugin" heading, click "Roles".&lt;/p&gt;

&lt;p&gt;Click on the "Public" role, scroll down to the permissions and tick the "find" checkbox under "Home"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6aAEX0oA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xp7rs1oheeldppth2kv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6aAEX0oA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xp7rs1oheeldppth2kv9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save your changes. This will make the GET [&lt;a href="http://localhost:1337/home"&gt;http://localhost:1337/home&lt;/a&gt;](&lt;a href="http://localhost:1337/home"&gt;http://localhost:1337/home&lt;/a&gt;) endpoint publicly accessible.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#add-some-content"&gt;
  &lt;/a&gt;
  Add some content
&lt;/h3&gt;

&lt;p&gt;We are done setting up Strapi, and now it's time to add some content. Click "Home" under the "Single Types" section of the admin sidebar and enter content for your default locale.&lt;/p&gt;

&lt;p&gt;Once you are happy you have created a masterpiece, save and publish it.&lt;/p&gt;

&lt;p&gt;Now it's time to get out your foreign language dictionary and enter content for your second locale. To change the current locale, use the dropdown switch found in the right sidebar. We fancied French next.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--64Njm0ZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xk39ijk3cd6eb7hn44rd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--64Njm0ZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xk39ijk3cd6eb7hn44rd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure to save and publish again. Each locale gets published separately. Repeat for all your locales. Hopefully, none of you decided to add the world's 6500+ languages; otherwise, it might take you longer than expected to finish this tutorial!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#next-up-is-nuxt"&gt;
  &lt;/a&gt;
  Next up is Nuxt
&lt;/h2&gt;

&lt;p&gt;Your time as a content editor has come to an end, and now you need to get into your favourite hacker pose and start coding.&lt;/p&gt;

&lt;p&gt;First up is creating a new Nuxt site. In a new folder, use the terminal to run the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-nuxt-app nuxt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Answer the questions via the CLI. In our case, we choose the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Language: &lt;strong&gt;JavaScript&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Package manager: &lt;strong&gt;NPM&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;UI framework: &lt;strong&gt;TailwindCSS&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Linter: &lt;strong&gt;ESLint&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Rendering mode: &lt;strong&gt;Singe Page App&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Deployment target: &lt;strong&gt;Static&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once that has done, cd into the new nuxt folder and start the dev server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your Nuxt site should now be running at &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-nuxt-strapi-and-i18n"&gt;
  &lt;/a&gt;
  Install Nuxt Strapi and i18n
&lt;/h3&gt;

&lt;p&gt;Next, we need to install a few Nuxt modules. The Nuxt Strapi module will allow us to easily communicate with our Strapi API, and the Nuxt i18n module will enable us to add localisation.&lt;/p&gt;

&lt;p&gt;Install both the modules:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i nuxt-i18n @nuxtjs/strapi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once that is done, we need to add both modules to nuxt.config.js and configure them with options. First, let's register the modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// nuxt.config.js&lt;/span&gt;
&lt;span class="c1"&gt;// Modules: https://go.nuxtjs.dev/config-modules&lt;/span&gt;
&lt;span class="nx"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxtjs/strapi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nuxt-i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we can configure the i18n module. Add the following to your &lt;code&gt;nuxt.config.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fr&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;de&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nx"&gt;defaultLocale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above tells the i18n plugin that we will have three locales English, French and German. &lt;/p&gt;

&lt;p&gt;Feel free to adjust those to whichever languages you set up earlier in Strapi. &lt;strong&gt;It's important to note the locale codes you use should match the ones used when setting up locales in Strapi.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can also set the sites default locale.&lt;/p&gt;

&lt;p&gt;Now we can move on to configuring the Strapi module. Add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;strapi&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;entities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;home&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;single&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This tells the module that we have a content type called "home" and it's a  single. This will allow us to retrieve it easily later.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loading-localised-content-from-strapi-into-nuxt"&gt;
  &lt;/a&gt;
  Loading localised content from Strapi into Nuxt
&lt;/h3&gt;

&lt;p&gt;Now it's time to load content from Strapi into Nuxt. In pages/index.vue replace the script section with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;asyncData&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;$strapi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;home&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;$strapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$home&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;_locale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;home&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To load in the data, we can use the asyncData hook that will be run at build time. The Nuxt i18n plugin adds the i18n object to the context object that is passed into the function. This allows us to get the current locale with i18n.locale.&lt;/p&gt;

&lt;p&gt;The Nuxt Strapi plugin also injects itself into the asyncData context, so we can then make a request to our API to get the home content. The import part here is how we filter the request by locale to retrieve the correct language:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;home&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;$strapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$home&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;_locale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All being well, the home content should now be available in your page component. Let's add it to the template. Replace the &lt;code&gt;pages/index.vue&lt;/code&gt; template with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container flex flex-col items-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex flex-col items-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mb-4 text-pink-700 font-bold"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {{ home.Title }}
      &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mb-4 text-green-700"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {{ home.Body }}
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="c"&gt;&amp;lt;!-- Usually you should store the Strapi host in an env var --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;:src=&lt;/span&gt;&lt;span class="s"&gt;"`http://localhost:1337${home.Image.url}`"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-1/4 mb-6"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Featured Image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There should be nothing that surprises you here; we just use standard Vue.js templating to output our page title, body and bind the image URL to the image src.&lt;/p&gt;

&lt;p&gt;Hopefully, by this point, you can see the content you added appearing on your page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8aWtKMon--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vgboqhun85uk8309rhpw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8aWtKMon--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vgboqhun85uk8309rhpw.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nav&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;
        &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;locale in availableLocales&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;locale&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;py-4 px-4 text-xl font-bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nuxt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;switchLocalePath(locale)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;locale&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/nuxt-link&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/nav&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;availableLocales&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok, let's break down what's happening here.&lt;br&gt;
First, we get a list of the available locales in a computed function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="nx"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;availableLocales&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we loop over these in our template using a v-for and we add a nuxt-link to allow us to switch between each site. The switchLocalePath function is added by the Nuxt i18n module returns the current routes localised variants. &lt;/p&gt;

&lt;p&gt;For example, we were on a page "/about" and we called the function like this switchLocalePath('fr') it would return "/fr/about".&lt;/p&gt;

&lt;p&gt;See here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt;
    &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"locale in availableLocales"&lt;/span&gt;
    &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"locale"&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"py-4 px-4 text-xl font-bold"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;nuxt-link&lt;/span&gt; &lt;span class="na"&gt;:to=&lt;/span&gt;&lt;span class="s"&gt;"switchLocalePath(locale)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {{ locale }}
    &lt;span class="nt"&gt;&amp;lt;/nuxt-link&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's the locale switcher finished.&lt;/p&gt;

&lt;p&gt;Now let's add it in to our page component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;container flex flex-col items-center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flex flex-col items-center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mb-4 text-pink-700 font-bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Title&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mb-4 text-green-700&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Body&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;`http://localhost:1337${home.Image.url}`&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;w-1/4 mb-6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Featured Image&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;LocaleSwitcher&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;LocaleSwitcher&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;~/components/LocaleSwitcher.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;LocaleSwitcher&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;asyncData&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;$strapi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;home&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;$strapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$home&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;_locale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;home&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You now have an easy way to switch between your locales!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-a-wrap"&gt;
  &lt;/a&gt;
  That's a wrap
&lt;/h2&gt;

&lt;p&gt;And that's it. You should now have a fantastic internationalised site powered by Strapi and Nuxt. We have only touched on the basics, but hopefully, it gives you a good idea of what's involved in building this sort of site.&lt;/p&gt;

&lt;p&gt;We are super impressed with how easy the Strapi and Nuxt teams have made this, so big props to them!&lt;/p&gt;

&lt;p&gt;As always, if you have any questions or like this post, let us know on Twitter: &lt;a href="https://twitter.com/pixelhopio"&gt;@pixelhopio&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you would like to see more posts like this then subscribe to our site, we promise we won't spam you! You can sign up here &lt;a href="https://www.pixelhop.io/writing/"&gt;&lt;/a&gt;&lt;a href="https://www.pixelhop.io/writing/"&gt;https://www.pixelhop.io/writing/&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>vue</category>
      <category>nuxt</category>
      <category>strapi</category>
      <category>i18n</category>
    </item>
    <item>
      <title>Staying active during the work day - Customized Pomodoro</title>
      <author>whatminjacodes [she/they]</author>
      <pubDate>Mon, 17 May 2021 07:49:10 +0000</pubDate>
      <link>https://dev.to/whatminjacodes/staying-active-during-the-work-day-customized-pomodoro-40ii</link>
      <guid>https://dev.to/whatminjacodes/staying-active-during-the-work-day-customized-pomodoro-40ii</guid>
      <description>&lt;p&gt;My goal this year has been to get my inactive time during the day lower. I'll let you know how I got this habit started and how it's going now in this blog post.&lt;/p&gt;

&lt;p&gt;I also made a customized pomodoro technique that I'm using when I need to concentrate for a longer period and feel that I might stay inactive for too long.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-did-i-start-focusing-on-my-inactive-time"&gt;
  &lt;/a&gt;
  Why did I start focusing on my inactive time?
&lt;/h3&gt;

&lt;p&gt;I didn't just decide one day that I want to be more active or have healthier habits. This has been an ongoing goal for few years already. I started from small things like cooking healthier meals, eventually getting exercising into my weekly routine and started standing while working at least part of my day.&lt;/p&gt;

&lt;p&gt;So the logical next step is to lessen the time I spend inactive during the day. My daily inactive time can get high since I'm a software developer and spend most of my day sitting (or statically standing) in front of a desk all day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--maw2v8U6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndm956m5axxh3rejozmy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--maw2v8U6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndm956m5axxh3rejozmy.jpg" alt="Two graphs displaying my inactivity levels during a day. Left picture has long grey areas (inactivity) and right picture has less."&gt;&lt;/a&gt; Grey areas are inactivity during a day. Left picture shows what a day with lots of inactivity looks like (about 11h of inactivity) and right picture shows how much inactivity during a day I get nowadays (about 8h 30min of inactivity). &lt;/p&gt;

&lt;p&gt;I have a Oura smart ring which I use for tracking my sleep, activity and recovery from exercise, few drinks or a badly slept night. It reminds me to move every hour and stretch and even though I do that I noticed my inactive time was often 9-12h a day, which is a lot.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fhh9gL69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zi783qhk38n924rcko28.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fhh9gL69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zi783qhk38n924rcko28.jpg" alt="A screenshot from Oura app screen that displays weekly summary."&gt;&lt;/a&gt; Oura weekly summary saying my average inactivity last week was 8 hours 34 minutes. &lt;/p&gt;

&lt;p&gt;Oura suggests that anything between 5-8h or less inactivity is considered a good practise and a habit that improves your health. So I set the goal that my weekly average during a day would be less than 8h. I still haven't reached that goal, but I'm slowly moving towards it. Now my weekly average is about 8.5h inactivity/day.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-i-got-started"&gt;
  &lt;/a&gt;
  How I got started?
&lt;/h3&gt;

&lt;p&gt;I started to practise standing by just making it a habit first. I had two reminders during the day: one in the morning and one after lunch time. I started by standing just for 10 minutes, and even that felt difficult at first, but slowly I was able to stand for longer periods of time.&lt;/p&gt;

&lt;p&gt;Making a habit was the most important step for me. It didn't really matter how long I stood, as long as I remembered to do it every day. After a while I also started to stand during meetings. I wasn't able to stand the whole time but I started the meeting standing and stood for as long as it felt good.&lt;/p&gt;

&lt;p&gt;I also added stretching to my routine. Whenever I was creating a new build, listening to a podcast or reading an article, I started stretching at the same time. Rotating shoulders, doing squats and just overall moving my body.&lt;/p&gt;

&lt;p&gt;At first I had a simple setup where I just used a cardboard box to get my laptop on correct height and I also used a wireless keyboard and a mouse. After I got the habit started and I noticed I actually spend time standing, I got a proper laptop stand for my kitchen table.&lt;/p&gt;

&lt;p&gt;Now that I've used this temporary setup for couple months, I'm thinking of getting a standing desk mat and eventually maybe even upgrading to a proper standing desk. But it's definitely okay to start simple and not spend so much money on making the setup more suitable for standing!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customized-pomodoro"&gt;
  &lt;/a&gt;
  Customized pomodoro
&lt;/h3&gt;

&lt;p&gt;I wanted to mention this customized pomodoro that I came up with and thought it's a fun way to make sure I move enough during the day.&lt;/p&gt;

&lt;p&gt;I created a playlist that first has 20-25 minutes of music that I usually listen to when I want to concentrate and after that there's one song that always makes me want to dance and move. This way I automatically start to dance for the few minutes that the song lasts at least twice/hour.&lt;/p&gt;

&lt;p&gt;The link to my playlist in Spotify can be found from &lt;a href="https://open.spotify.com/playlist/16uhlookdDVdZO6oSVebIQ"&gt;here&lt;/a&gt; if you want to take inspiration from it :)&lt;/p&gt;

&lt;p&gt;Do you have any tips on how to be more active during the day when basically the whole work day is spent in front of a computer?&lt;/p&gt;

</description>
      <category>watercooler</category>
    </item>
    <item>
      <title>Website lesson 1: structure of HTML</title>
      <author>Yuri Filatov</author>
      <pubDate>Mon, 17 May 2021 07:32:03 +0000</pubDate>
      <link>https://dev.to/filatovv/website-lesson-1-structure-of-html-4oo4</link>
      <guid>https://dev.to/filatovv/website-lesson-1-structure-of-html-4oo4</guid>
      <description>&lt;p&gt;As I've already told you, I've decided to make my own school. So the idea is to make by the end your own project. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;You already have resources to learn tags by yourself. So let's make everything on the example of some website (an easy one).&lt;/p&gt;

&lt;p&gt;Open &lt;a href="https://app.moqups.com/sign-up"&gt;Moqups&lt;/a&gt; to start making your template. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-a-good-simple-website-needs"&gt;
  &lt;/a&gt;
  What a good simple website needs?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Menu with links that are good visible (no need to scroll down to find the page you need, maybe it can be both in the upper side and  lower side). &lt;/li&gt;
&lt;li&gt;Pictures (or animated such as slideshow). Less text on the main page, but more visuals.&lt;/li&gt;
&lt;li&gt;Good font (size, color, family). It is always more pleasant to read "beautiful" text. &lt;/li&gt;
&lt;li&gt;Your heading and logo that catch eyes. &lt;/li&gt;
&lt;li&gt;The main page should contain a small introduction and lower things that show the idea of your website. &lt;/li&gt;
&lt;li&gt;Communication. There should always be the way to share something and to express feelings (comments, likes)&lt;/li&gt;
&lt;li&gt;Contact page (side) with social medias&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try to make something yours just to learn how it works. You will need your template later. Using this template, you will define the width/height (for example) of different objects.&lt;/p&gt;

&lt;p&gt;You can check &lt;a href="https://app.moqups.com/RNZGJ9YNkB/view/page/ad64222d5"&gt;my simple website idea&lt;/a&gt;, the easy project we will work on. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-first-steps"&gt;
  &lt;/a&gt;
  Making first steps
&lt;/h2&gt;

&lt;p&gt;Open your tool/app or just notepad where you are going to begin. If it is a specified tool, you already have the template:&lt;br&gt;
&lt;code&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/hmtl&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#head"&gt;
  &lt;/a&gt;
  Head
&lt;/h3&gt;

&lt;p&gt;The main thing that MUST be used is&lt;br&gt;
&lt;code&gt;&amp;lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&amp;gt;&lt;/code&gt;&lt;br&gt;
You define your content type.&lt;/p&gt;

&lt;p&gt;First of all, let's define the title of our website, that you see in browser as a tab name. &lt;br&gt;
&lt;code&gt;&amp;lt;title&amp;gt;Sonnenberg&amp;lt;/title&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Head is the part where you connect your CSS file with HTML. You can write style tags in this part, but the rule of the beautiful code - structure. So if you still haven't made an empty CSS file, it is the right time. Better to save all your files (HTML, CSS, JS) in one folder, so you don't need to write the direction of your file.&lt;br&gt;
&lt;code&gt;&amp;lt;link rel="stylesheet" type="text/css" href="style.css"&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;em&gt;Rel&lt;/em&gt; is the part where you define. &lt;br&gt;
&lt;em&gt;href&lt;/em&gt; links. So instead of the name of your CSS file, you can use any link to a CSS file. &lt;br&gt;
Now all your style tags you just write in your CSS file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#body"&gt;
  &lt;/a&gt;
  Body
&lt;/h3&gt;

&lt;p&gt;Body is the main part of your website - content. Everything you want to be displayed on your page should be written here. Remember one thing that this HTML file is only for one page. If you want to make another page like not &lt;em&gt;Home&lt;/em&gt;, but &lt;em&gt;Contact&lt;/em&gt; make another HTML file. One useful thing: all your names should have max value. If you make a page &lt;em&gt;Home&lt;/em&gt;, then name your HTML file &lt;em&gt;Home.html&lt;/em&gt;. So with classes.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#table-or-blocks"&gt;
  &lt;/a&gt;
  Table or blocks?
&lt;/h4&gt;

&lt;p&gt;&lt;a href="http://24directory.com.ar"&gt;Table sites&lt;/a&gt; are just like dinosaurs. They are really old and not beautiful if we can say so. &lt;/p&gt;

&lt;p&gt;We will use blocks and only blocks!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#div"&gt;
  &lt;/a&gt;
  DIV
&lt;/h4&gt;

&lt;p&gt;(On my template) You devide your website into 3 or more rectangles (parts), for example: header with menu part, introduction part with a picture and a text right to it, line "Top Reiseangebote", 4 tours, line after that and a footer part. &lt;br&gt;
The idea - devide into rectangles. &lt;br&gt;
Every your rectangle (block) is &lt;em&gt;Div&lt;/em&gt;. &lt;br&gt;
&lt;code&gt;&amp;lt;div&amp;gt; ... content tags ... &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; ... &amp;lt;/div&amp;gt; ...&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#class"&gt;
  &lt;/a&gt;
  Class
&lt;/h4&gt;

&lt;p&gt;One more important thing - your tags aren't always empty. Inside of your tags you can write &lt;a href="https://www.w3schools.com/html/html_attributes.asp"&gt;attributes&lt;/a&gt;. &lt;br&gt;
The main attribute that is must to be used - CLASS.&lt;br&gt;
As you see, you have, for example, 3 rectangles = 3 div. How do you understand which div is for header and which for footer? So we use &lt;em&gt;class&lt;/em&gt; to define our objects (to give them a name).&lt;br&gt;
&lt;code&gt;&amp;lt;div class="header"&amp;gt;....&amp;lt;/div&amp;gt;&amp;lt;div class="introduction"&amp;gt;...&amp;lt;/div&amp;gt;...&lt;/code&gt;&lt;br&gt;
Why do we need it? &lt;br&gt;
When you write style tags for objects, you won't write for every div but for div header. &lt;/p&gt;

&lt;p&gt;There is no problem in using tags as it is free on the Internet (check my previous articles for resources). My idea is to make it all understandable. So for the first lesson you don't really need to make any code. Your idea - to try to make your template or repeat mine, cause all coding I will make accourding to my template.&lt;/p&gt;

&lt;p&gt;Hopefully, it is all understandable! &lt;br&gt;
Follow me for the next lessons.&lt;/p&gt;

&lt;p&gt;Good luck in your job!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>AWS open source news and updates #68</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Mon, 17 May 2021 07:20:25 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-68-3ohf</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-68-3ohf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#may-17th-2021-instalment-68"&gt;
  &lt;/a&gt;
  May 17th, 2021 - Instalment #68
&lt;/h2&gt;

&lt;p&gt;Newsletter #68. &lt;/p&gt;

&lt;p&gt;What better way that to celebrate my 100th post on dev.to with the latest AWS open source news and updates. This week we have posts covering Rust, OpenSearch, SaaS Boost, Apache Airflow, Kubernetes, Taurus, Spring Boot, Jenkins, GraphQL, Redis and more. If you are looking for projects, make sure you check out SaaS Boost which generated a lot of buzz last week, as well as the first beta of OpenSearch, sls-test-tools, aws-assume-role-lib and more. On top of that, check out the workshops this week, covering Apache Airflow and Laravel and finally some new videos and events for your diaries.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feedback please&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Please let us know how we can improve this newsletter by &lt;a href="https://eventbox.dev/survey/CNW711A"&gt;completing this very short survey&lt;/a&gt; that will take you less than 60 seconds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://eventbox.dev/survey/CNW711A"&gt;Take me to the survey&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Ben Kehoe, Kyle Davis, Andrew Hopp, Becki Lee, Drew Wright, James Sorling, Ernest Chiang, Sebastian Bille, Vu Dao, Jimmy Ray, Alexei Ledenev, Ajay Swamy,  George Lenz, Rotem Bar, Adrian De Luca, Mikhail Vasilyev, Brian Carlson, Claudio Sidi, Jim Gallagher, Mirus Lu, Arjan Schaaf, Benjamin Meyer, Shane Miller, James Sun, Alon Gendler, Dima Breydo, Michael Song, Rajesh Mikkilineni, Matheen Raza and Aaron Miller.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-from-open-source-projects"&gt;
  &lt;/a&gt;
  Latest from open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;aws-saas-boost&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/if"&gt;aws-saas-boost&lt;/a&gt; announced during re:Invent 2020, AWS SaaS Boost is an open source tool that helps software developers migrate their existing solutions to a Software-as-a-Service (SaaS) delivery model, removing the complexities of building SaaS solutions with ready-to-use core software elements. Those elements include tenant management, deployment automation, analytics dashboards, billing and metering, an administrative web interface, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--So8bdH08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/awslabs/aws-saas-boost/raw/main/docs/images/gs-install-flow.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--So8bdH08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/awslabs/aws-saas-boost/raw/main/docs/images/gs-install-flow.png%3Fraw%3Dtrue" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read the announcement blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/ig"&gt;AWS SaaS Boost released as open source&lt;/a&gt; from Adrian De Luca to find out more. This announcement generated a LOT of interest last week, but rather than share the links here I suggest if you are interested in this project, check out some of the other posts that the tech press has written to get some additional perspectives.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/hz"&gt;OpenSearch&lt;/a&gt; big news last week from the OpenSearch team, who shared the first beta of OpenSearch and OpenSearch Dashboards. Check out the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/i0"&gt;OpenSearch Beta 1&lt;/a&gt; from Kyle Davis and Andrew Hopp. Download links are available from that blog post, or if you prefer you can always check out the GitHub repos and the source code. Finally, keep up to date with the latest news by bookmarking the webpage, &lt;a href="https://opensearch.org/"&gt;https://opensearch.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On a related note, the &lt;a href="https://aws-oss.beachgeek.co.uk/ic"&gt;Apache SkyWalking&lt;/a&gt; project wrote last week, &lt;a href="https://aws-oss.beachgeek.co.uk/id"&gt;OpenSearch, a new storage option to avoid ElasticSearch's SSPL&lt;/a&gt; sharing that they had begun work on supporting OpenSearch and that they were supporting it as a storage option for their project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sls-test-tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/iw"&gt;sls-test-tools&lt;/a&gt; from the same folks that brought you the amazing sls-dev-tools we have an alpha of sls-test-tools, an open source tool that provides a range of utilities, setup, teardown and assertions to make it easier to write effective and high quality integration tests for Serverless Architectures on AWS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-assume-role-lib&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/iu"&gt;aws-assume-role-lib&lt;/a&gt; this library from AWS Hero Ben Kehoe is something you will find useful if you work with AWS in Python and you do role assumption. As Ben &lt;a href="https://twitter.com/ben11kehoe/status/1393701765749436418"&gt;tweeted&lt;/a&gt; yesterday:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Yesterday I had to write a script that iterated over every account and assumed the Organizations access role in each one to do some work. The amount of thinking/remembering about the details of sts.assume_role was zero.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can find that script over at &lt;a href="https://aws-oss.beachgeek.co.uk/iv"&gt;his Gists&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;dragoneye&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ir"&gt;dragoneye&lt;/a&gt; dragoneye is an open source tool from Indeni written in Python that is used to collect data about your AWS environment using the cloud provider's APIs. It is intended to function as component in other tools who have the need to collect data quickly (multi-threaded), or as a command line to collect a snapshot of a cloud account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;staticweb-open-wp&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/i5"&gt;staticweb-open-wp&lt;/a&gt; this is an open-source, customisable template for Static WordPress stacks on AWS that uses WP2Static to deploy HTML files to AWS S3. The generated website is served by AWS CloudFront and you can read more about this project in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/i6"&gt;Open-Source WordPress Stack&lt;/a&gt; that provides a generator that create the CloudFormation stack to deploy this project. If you deploy WordPress sites, make sure you take a look.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#community-open-source-posts"&gt;
  &lt;/a&gt;
  Community open source posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Open Distro for Elasticsearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ie"&gt;SSRF in Open Distro for Elasticsearch&lt;/a&gt; I enjoyed this post from Rotem Bar that dives deep into CVE-2021-31828, an issue that effects Open Distro for ElasticSearch (ODFE), versions until 1.12.0.2. The post covers the background, the time line and the remediation process, and is a fascinating read for those wanting to know more about how these kinds of vulnerabilities are managed responsibly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Serverless&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/i7"&gt;Serverless Framework vs SAM vs AWS CDK&lt;/a&gt; Sebastian Bille shares his thoughts and experiences as he compares a number of open source developer tools that developers can use when building serverless applications. Seb takes the approach of trying these different tools to build and deploy the same application, sharing his thoughts as he goes along. Nice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A couple of Kubernetes related community posts this week. First up we have, &lt;a href="https://aws-oss.beachgeek.co.uk/i8"&gt;AWS CDK for EKS ‚Äî Kubernetes Manifest Handling&lt;/a&gt; where Jimmy Ray follows up from a previous post on using AWS CDK to deploy a sample Java application on Amazon EKS, with this post that dives deeper into Kubernetes YAML manifests. From what these are to how to use them with AWS CDK, this is a great post to understand what your options are when managing Kubernetes manifests and the resulting Kubernetes resources that get created.&lt;/p&gt;

&lt;p&gt;Following that we have Vu Dao with, &lt;a href="https://aws-oss.beachgeek.co.uk/i9"&gt;Add Taints To AWS EKS Cluster And Trouble Shooting&lt;/a&gt; which takes a look at a newly released feature within AWS EKS, Kubernetes node taints (see Quick Updates below for more info), and how you can get started with these to help you with managing and troubleshooting your EKS Clusters.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spotinfo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ia"&gt;Spotinfo ‚Äî a new CLI for AWS Spot&lt;/a&gt; a couple of weeks back I covered a great new open source tool from Alexei Ledenev called &lt;a href="https://dev.to/aws/aws-open-source-news-and-updates-66-1bhj"&gt;spotinfo&lt;/a&gt;, a command-line tool that helps you determine AWS Spot instance types with the least chance of interruption and provides the savings you get over on-demand rates. Alexei has put together this post shows you how it works and how to get started. If you like this tool like I do, then remember to check out the GitHub repo and give it some love.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Regula&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last week Fugue posted news that their open source tool Regula, now supported AWS CloudFormation. You can read the full post from Drew Wright, &lt;a href="https://aws-oss.beachgeek.co.uk/i2"&gt;Regula Adds Support for AWS CloudFormation Security Checks&lt;/a&gt; and then if that piques your interest, why not take the next step and follow their clear tutorial, &lt;a href="https://aws-oss.beachgeek.co.uk/i1"&gt;Checking AWS CloudFormation IaC Security with Regula&lt;/a&gt; that Becki Lee has put together.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/it"&gt;Working with the RedshiftToS3Transfer operator and Amazon Managed Workflows for Apache Airflow&lt;/a&gt; something I worked on last week after some discussions in the Apache Airflow community slack channel, where a community member was getting some unexpected behaviour when using the Airflow operator that lets you move data from Redshift to S3. Took me a while to get this working in a secure way, so have made this super easy for you to reproduce in this blog post now. How to work and integration Amazon Redshift with your Apache Airflow workflows.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-open-source-posts"&gt;
  &lt;/a&gt;
  AWS open source posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/iq"&gt;Migrating from self-managed Kubernetes to Amazon EKS? Here are some key considerations&lt;/a&gt; Matheen Raza and Aaron Miller talk about some of the things to think about when planning your migration from your own, self managed Kubernetes clusters to Amazon EKS. They cover topics such as versions, security, networking and storage as well as some ideas on how to approach testing. If this is something you have been thinking about, this post is for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Rust language builds on the superpowers of other languages and innovates when required to deliver big on performance, reliability, productivity, and accessibility. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/im"&gt;Innovating with Rust&lt;/a&gt; Shane Miller takes a look at the missions and goals of Rust within AWS, how we working with the open source community, the AWS Rust team and the future.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/il"&gt;Manage and process your big data workflows with Amazon MWAA and Amazon EMR on Amazon EKS&lt;/a&gt; James Sun, Alon Gendler, and Dima Breydo provided a great deep dive in how you can orchestrate an ETL pipeline using Amazon MWAA with EMR on EKS, using the sample Citi Bike dataset and providing you with everything you need so you can reproduce this in your own environment. That is my weekend sorted.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tMb05Oj---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/05/04/bdb1232-worfklows-mwaa-emr-eks-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tMb05Oj---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/05/04/bdb1232-worfklows-mwaa-emr-eks-1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ip"&gt;How Takeda uses the GraphQL API with AWS AppSync to support data scientists&lt;/a&gt; Michael Song and Rajesh Mikkilineni from Takeda show you how you can deploy an API using JupyterHub to access data via GraphQL, and use JupyterHub to run queries to fetch the dataset using the GraphQL API.     They have taken this approach to provide API-based access to data as the flexibility of GraphQL enables researchers to access data the way they need it. To dive deeper, read on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Taurus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Taurus is an open source tool that simplifies the process of performance and functional tests with an automation-friendly convenience wrapper for a number of open source testing tools such as JMeter, Gatling, Locust.io, Grinder and Selenium WebDriver. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/ib"&gt;Ensure Optimal Application Performance with Distributed Load Testing on AWS&lt;/a&gt; Ajay Swamy and George Lenz walk you through a new open sourced solution, Distributed Load Testing on AWS, to help you automate the performance testing of your software applications at scale.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kU0R5Q4I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2021/05/12/Fig2-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kU0R5Q4I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2021/05/12/Fig2-2.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jenkins&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ik"&gt;Unify your iOS mobile app CI/CD pipeline with Amazon EC2 Mac Instances&lt;/a&gt; Benjamin Meyer shares with you how you can use Jenkins to build a CI/CD pipeline with the new Amazon EC2 Mac instance types to build and test your iOS and macOS applications. The post also talks about Fastlane, an open-source platform aimed at simplifying Android and iOS deployment, and the walk through shows you how you can incorporate to automate the development and release workflow of mobile applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wEcsFHM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/05/07/Fastlane9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wEcsFHM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/05/07/Fastlane9.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ii"&gt;Manage AWS ElastiCache for Redis access with Role-Based Access Control, AWS Secrets Manager, and IAM&lt;/a&gt; Claudio Sidi, Jim Gallagher, and Mirus Lu collaborate on this solution to address the lack of an out-of-the-box way to grant IAM entities (roles, users, or groups) read and write access to Redis when using RBAC. The post shows you how you can associate IAM entities with ElastiCache RBAC users and ACLs, through the use of AWS Secrets Manager as a proxy for granting access to ElastiCache RBAC user credentials.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--csbZdHEP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/05/07/dbblog_1523__02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--csbZdHEP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/05/07/dbblog_1523__02.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring Boot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ij"&gt;Amazon DynamoDB single-table design using DynamoDBMapper and Spring Boot&lt;/a&gt; Arjan Schaaf with a great post for Java/Spring Boot fans, taking a look at how to us a single-table design approach in conjunction with Spring Data (used by Spring Boot based application for data access) when using a nonrelational database, in this case DynamoDB. Check out the code in the GitHub repo and suggestions of how you can tailor this solution for your own needs. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#open-source-on-aws"&gt;
  &lt;/a&gt;
  Open Source on AWS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ih"&gt;Choosing a CI/CD approach: Open Source on AWS, an Iponweb story&lt;/a&gt; Mikhail Vasilyev and Brian Carlson take a look at how one customer, Iponweb, approached choosing a continuous integration, continuous deployment (CI/CD) environment using open source tools running on AWS. &lt;/p&gt;

&lt;p&gt;I loved the quote from Michael Benuhis, CTO at Iponweb.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúIponweb was able to get the best of open-source software and public cloud services by building the continuous integration platform on Amazon Web Services. Open-source tools provided Iponweb platform agnosticism for serving our diverse customer base, while managed Amazon EKS on EC2 Spot Instances eliminated the operational burden of managing our own Kubernetes infrastructure, and with greater cost efficiency.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Apache Ranger&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon EMR integration with Apache Ranger is now available on EMR 6.3, allowing you to define, enforce, and audit fine-grained data access control. With this feature, you can define and enforce 1/ database, table, and column level authorisation policies for Apache Spark and Apache Hive users to access data through Hive Metastore, and 2/ prefix and object level authorisation policies when accessing data in Amazon S3 via the Amazon EMR File System (EMRFS), leveraging Amazon CloudWatch to capture auditing logs.&lt;/p&gt;

&lt;p&gt;Apache Ranger is an open-source tool to enable, monitor, and manage comprehensive data security across the Hadoop platform. Previously, you can use Apache Ranger to enforce fine-grained authorisation on data in HDFS with Apache Hive using this blog post. Now this native integration enables additional capabilities. You can define three types of authorisation policies on Apache Ranger Policy Admin server. You can set table, column, and row level authorisation for Apache Hive, table and column level authorisation for Apache Spark, and prefix and object level authorisation for Amazon S3. Amazon EMR automatically installs and configures the corresponding Apache Ranger plugins on the cluster. These Ranger plugins sync up with the Policy Admin server for authorisation polices, enforce data access control, and send auditing events to Amazon CloudWatch Logs.&lt;/p&gt;

&lt;p&gt;Check out the full announcement here, &lt;a href="https://aws-oss.beachgeek.co.uk/hw"&gt;Amazon EMR 6.3 now supports Apache Ranger for fine-grained data access control&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Elastic Kubernetes Service (EKS) managed node groups now supports Kubernetes node taints, simplifying node lifecycle management for clusters with varying application resource requirements.&lt;/p&gt;

&lt;p&gt;With managed node group support for Kubernetes node taints, you can easily section off groups of Amazon EC2 instances in your cluster as designated for only certain applications. You can apply a toleration to your pods that allows them to be scheduled onto nodes with matching taints. Taints and tolerations work together to ensure that pods are not scheduled onto inappropriate nodes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#workshop"&gt;
  &lt;/a&gt;
  Workshop
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Really good to see this new workshop, &lt;a href="https://aws-oss.beachgeek.co.uk/hx"&gt;Apache Airflow for Analytics&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this workshop, you will learn how to build and orchestrate data and ML pipelines that include services such as Amazon S3, Amazon Redshift, Amazon EMR, AWS Glue, and Amazon SageMaker. You will gain familiarity and a better understanding of the hooks and operators available as part of Airflow to manage your pipelines/workflows on AWS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Laravel&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/i4"&gt;laravel-on-aws-ecs-workshops&lt;/a&gt; I somehow missed this when it surfaced a few months ago, but better late than never. If you are a PHP/Laravel developer, then this workshop from Ernest Chiang will guide you to deploying your Laravel applications onto AWS, guiding you through a number of different steps that improve your architecture and enable you to move to support production workloads.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-of-the-week"&gt;
  &lt;/a&gt;
  Video of the week
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;AWS Copilot and Wordpress&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In last weeks Containers from the Couch session, Austin Ely from the Copilot team walks you through what it takes to build a highly available, containerised Wordpress site. This video includes building a network file system using Amazon EFS, and a serverless relational MySQL database using Aurora Serverless. All that is done while diving into the latest features we've added to the AWS Copilot CLI!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nvW1i33my3o"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DevSecOps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last week I enjoyed listening to &lt;a href="https://aws-oss.beachgeek.co.uk/i3"&gt;Security Superfriends | James Sorling, Security Architect, WirelessCar&lt;/a&gt; which talks about meeting developers where they were, in their toolchains, and in their workflows and getting them to scan their infrastructure as code (IaC) early in development. This often uses open source tools, and James (who I featured last week) is a contributor to CFN-nag and integration of that into tools like SonarQube. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aYwSd1Wu28Q"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Open Sourcing AWS DeepRacer&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 18th, 8:00PM CET&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Recently we expanded AWS DeepRacer‚Äôs educational capabilities to coding robotics applications with the introduction of AWS DeepRacer Open Source. Now, aspiring ROS developers can use their AWS DeepRacer device to experiment with sample projects developed by our GitHub community, and contribute their own projects for a chance to be featured. During this tech talk we‚Äôll provide an overview of DeepRacer Open Source, how to access sample projects in the DeepRacer GitHub community, and finally we‚Äôll show you how to program your DeepRacer to scare off unwanted critters with the DeepRacer Robocat project.&lt;/p&gt;

&lt;p&gt;Find out more and register by clicking over&lt;a href="https://aws-oss.beachgeek.co.uk/in"&gt; here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Run Your First HPC Job on AWS&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 25th, 8:00PM CET&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this online webinar you will learn how to set up your first HPC cluster on AWS. We'll cover everything from installing AWS ParallelCluster (and open source cluster management tool to deploy and manage HPC clusters in the AWS cloud), selecting the your Amazon EC2 instances, when to use Spot Instances to save up to 90% on compute, to launching your first MPI ‚Äúhello world‚Äù job from the command line.&lt;/p&gt;

&lt;p&gt;Find out more and register by clicking over&lt;a href="https://aws-oss.beachgeek.co.uk/io"&gt; here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile and Front-End Live&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 25th, 9:00 - 15:00 PDT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a LIVE streamed event on Twitch  focused on accelerating full-stack mobile and web development. Learn about AWS Amplify, a set of purpose-built tools and services for front-end web and mobile developers that simplify app development. Deep dive into GraphQL and AWS AppSync, a fully-managed GraphQL service that improves app performance and developer productivity.&lt;/p&gt;

&lt;p&gt;You can read more about what you can expect in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/f4"&gt;Mobile and Front-End Live, May 25&lt;/a&gt; and &lt;a href="https://aws-oss.beachgeek.co.uk/f3"&gt;register via this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud Native Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;23rd September, Bern Switzerland&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What is this, an in person event returning? A stellar line up including our own Michael Hausenblas, an event looking at CNCF projects and the future of IT. Find out more and to view prices/register, by clicking &lt;a href="https://cloudnativeday.ch/en/#speakers"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>Face detection using openCV python.</title>
      <author>Rishabh Dwivedi</author>
      <pubDate>Mon, 17 May 2021 07:17:57 +0000</pubDate>
      <link>https://dev.to/rishabh062/face-detection-using-opencv-python-g6b</link>
      <guid>https://dev.to/rishabh062/face-detection-using-opencv-python-g6b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#face-detection-is-really-fun-attractive-and-it-has-its-own-use"&gt;
  &lt;/a&gt;
  Face detection is really fun, attractive and it has its own use.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Without going in much definition let's jump to our implementation.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-opencv"&gt;
  &lt;/a&gt;
  What is openCV?
&lt;/h2&gt;

&lt;p&gt;openCV stands for &lt;strong&gt;Open source computer vision.&lt;/strong&gt; it is a library of programming functions mainly aimed at real-time computer vision.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For making task easier they have pretrained model name &lt;a href="https://github.com/opencv/opencv/tree/master/data/haarcascades"&gt;haarcascade&lt;/a&gt;&lt;br&gt;
which provides good accuracy.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#approach"&gt;
  &lt;/a&gt;
  Approach.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;install opencv at first.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install opencv-python
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Import libraries
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import cv2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Attach &lt;a href="https://github.com/opencv/opencv/blob/master/data/haarcascades/haarcascade_frontalface_default.xml"&gt;frontal-face&lt;/a&gt; and apply basic logic.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
# Read the input image
img = cv2.imread('your-image')
# convert it into gray code from BGR
gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
# apply a scale of 1.1 and 4
faces = face_cascade.detectMultiScale(gray, 1.1, 4)

# Make rectangle around face of blue colour and thickness of 3.
for (x, y , w ,h) in faces:
  cv2.rectangle(img, (x,y), (x+w, y+h), (255, 0 , 0), 3)

# Display the output
cv2.imshow('img', img)
cv2.waitKey()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And here you are done.... Output image
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qZuh_Xe4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x76xdnhmp1oxm0scbioa.jpeg" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#this-code-will-detect-multiple-faces-on-any-image-with-great-accuracy"&gt;
  &lt;/a&gt;
  This code will detect multiple faces on any image with great accuracy.
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;It is also possible to detect multiple faces in realtime in videos.&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;That will be a part of my next blog.&lt;/strong&gt;&lt;br&gt;
(You can ask doubt in comment section.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for reading.&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Rishabh Dwivedi.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>watercooler</category>
      <category>discuss</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>How I Got My First Fiverr Order. And Here is How You Can Too!</title>
      <author>Muhimen</author>
      <pubDate>Mon, 17 May 2021 07:16:38 +0000</pubDate>
      <link>https://dev.to/muhimen123/how-i-got-my-first-fiverr-order-and-here-is-how-you-can-too-2pbi</link>
      <guid>https://dev.to/muhimen123/how-i-got-my-first-fiverr-order-and-here-is-how-you-can-too-2pbi</guid>
      <description>&lt;p&gt;If you are a busy person and don't have enough patience to go through the whole post, here is the main take way,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It takes time&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you are not busy and have enough patience to go through the whole post, here is how you can utilize the time properly. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-check-for-buyer-requests"&gt;
  &lt;/a&gt;
  1. Check For Buyer Requests
&lt;/h3&gt;

&lt;p&gt;If a buyer doesn't reach you out, why don't you reach them? Pretty simple, right? In your &lt;a href="https://www.fiverr.com/"&gt;fiverr dashboard&lt;/a&gt;, navigate to &lt;code&gt;more &amp;gt; buyer request&lt;/code&gt;. There you will find custom requests buyers have sent in Fiverr. Go through them one by one, if you find some interesting, make an offer. If you are lucky, the buyer will then contact you, and voila! You got your first order(this is how I got my first order :P).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pm4KDM-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://res.cloudinary.com/muhimen/image/upload/v1621234906/POST38_BUYERREQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pm4KDM-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://res.cloudinary.com/muhimen/image/upload/v1621234906/POST38_BUYERREQ.png" alt="Buyer Request"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, don't expect to get accepted on your first attempt.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-keep-your-gig-updated"&gt;
  &lt;/a&gt;
  2. Keep Your Gig Updated
&lt;/h3&gt;

&lt;p&gt;If you don't have any activity in your &lt;a href="https://www.fiverr.com/support/articles/360010451397"&gt;gig&lt;/a&gt;, Fiverr will stop showing your gigs in search result. Getting orders is the best activity you can expect. But hey! You are reading this post because you don't have any activity, right? &lt;/p&gt;

&lt;p&gt;So don't worry, I got your back. üòâ&lt;/p&gt;

&lt;p&gt;Try chaning your gig description or &lt;a href="https://forum.fiverr.com/t/change-gig-image/28742"&gt;gig photos&lt;/a&gt; once in a while. Hopefully you will see the difference in &lt;a href="https://www.fiverr.com/support/articles/360010750318-Viewing-Gig-Statistics#:~:text=Viewing%20your%20Gig's%20statistics%20can,the%20Selling%20menu%2C%20click%20Gigs."&gt;gig statistics&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-advertise-your-gigs"&gt;
  &lt;/a&gt;
  3. Advertise Your Gigs
&lt;/h3&gt;

&lt;p&gt;If people don't know about your gig, people won't buy your gig. As simple as it sounds. And the best way to reach many people is by advertising it. &lt;em&gt;Speaking of advertising, you can view my gig here :P&lt;/em&gt; &lt;a href="https://www.fiverr.com/share/7K5zok"&gt;https://www.fiverr.com/share/7K5zok&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Okay, in seriousness though, reach out to your friends on social media platforms like &lt;a href="https://www.linkedin.com/"&gt;linkedin&lt;/a&gt;, &lt;a href="https://www.facebook.com/"&gt;Facebook&lt;/a&gt;, &lt;a href="https://twitter.com/"&gt;Twitter&lt;/a&gt; or whatever platform you prefer. &lt;/p&gt;

&lt;p&gt;Not necessarily they will buy the gig. But what is important here is they are increasing traffic(so-called "clicks" in Fiverr) in your gig. And as a result, it will help your gig appear before many other gigs when a buyer searches for it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  BONUS ü•≥ü•≥ü•≥
&lt;/h3&gt;

&lt;p&gt;Here is a cool hack that I recently discovered(and it surprisingly works pretty well!).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---xa4-ero--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://res.cloudinary.com/muhimen/image/upload/v1621234939/POST38_INBOX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---xa4-ero--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://res.cloudinary.com/muhimen/image/upload/v1621234939/POST38_INBOX.png" alt="Inbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, if you didn't receive any message from the buyer at all and your inbox stays empty, try asking any of your friends (who have a Fiverr account) to send you a message via Fiverr. And that should be it! So, it's kinda like tricking the Fiverr algorithm(if that's a thing). When your response rate is better, Fiverr will automatically rank your gig up than those who don't have a response rate to start with. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--df2_BgAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://res.cloudinary.com/muhimen/image/upload/v1621234965/POST38_RESPONSE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--df2_BgAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://res.cloudinary.com/muhimen/image/upload/v1621234965/POST38_RESPONSE.png" alt="response rate"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I tried this trick with 2 friends of mine. And surprisingly, the first friend got his order 2 hours after my message, and the second one got it after 1 day. Not that bad, right? &lt;/p&gt;

&lt;p&gt;So, that's all I had to share today. The tricks are not guaranteed to work all the time, but hey! It's better to try something than just sitting doing nothing at all. Who knows, you might even hit the jackpot! &lt;/p&gt;

&lt;p&gt;How did you get our first Fiverr order? Don't forget to share the story. üòâ&lt;/p&gt;

&lt;p&gt;All the best if your Fiverr selling career. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Frontend boilerplate with React, Next.js &amp; TailwindCSS</title>
      <author>Audun Hilden</author>
      <pubDate>Mon, 17 May 2021 07:03:32 +0000</pubDate>
      <link>https://dev.to/audn/frontend-boilerplate-with-react-next-js-tailwindcss-4l9l</link>
      <guid>https://dev.to/audn/frontend-boilerplate-with-react-next-js-tailwindcss-4l9l</guid>
      <description>&lt;p&gt;Introducing the one-in-all boilerplate for your next project!&lt;/p&gt;

&lt;p&gt;I've spent the entire week structuring this repo to make it super-insanely-easy to deal with modals, forms (ugh), and tons of other small breakpoints!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Live demo&lt;/strong&gt; &lt;br&gt;
&lt;a href="http://align-items.center/"&gt;http://align-items.center/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Modal as seen on the page&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tQLwpMT6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03aujl9z1jf0unzr131m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tQLwpMT6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03aujl9z1jf0unzr131m.png" alt="Modal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code for the modal above&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ktND1it--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69903hl22m6mhbndhksr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ktND1it--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69903hl22m6mhbndhksr.png" alt="Modal on image above"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Forms&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dnsg6pcY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/46aj8as6md7noe260uw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dnsg6pcY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/46aj8as6md7noe260uw7.png" alt="Forms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code for the image above&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AfYL9Q3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arrzj2cz49d9ivdrdm1j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AfYL9Q3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arrzj2cz49d9ivdrdm1j.png" alt="Code for forms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub Repo&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://github.com/audn/frontend-boilerplate"&gt;https://github.com/audn/frontend-boilerplate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What you can expect:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Framer motion&lt;/li&gt;
&lt;li&gt;Google Analytics setup&lt;/li&gt;
&lt;li&gt;Responsive at all sizes + hamburger &lt;/li&gt;
&lt;li&gt;Typescript interfaces&lt;/li&gt;
&lt;li&gt;Regex for regular stuff such as url/emails&lt;/li&gt;
&lt;li&gt;Modal component&lt;/li&gt;
&lt;li&gt;Premade Button components &lt;code&gt;&amp;lt;Button.Primary title={..}/&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Premade  for normal inputs, textarea &amp;amp; checkboxes&lt;/li&gt;
&lt;li&gt;SEO optimization built into the &lt;code&gt;&amp;lt;Layout&amp;gt;&lt;/code&gt; component&lt;/li&gt;
&lt;li&gt;Cookies! &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>nextjs</category>
      <category>tailwindcss</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Exclusive : Text to speech (tts) in javascript! (Damn easy)</title>
      <author>Raghav Yadav</author>
      <pubDate>Mon, 17 May 2021 06:55:10 +0000</pubDate>
      <link>https://dev.to/raghav9official/exclusive-text-to-speech-tts-in-javascript-damn-easy-19mn</link>
      <guid>https://dev.to/raghav9official/exclusive-text-to-speech-tts-in-javascript-damn-easy-19mn</guid>
      <description>&lt;p&gt;Hi guys I'm back with a new tutorial and in this tutorial I will show you how to you have speech synthesis in your web application!&lt;/p&gt;

&lt;p&gt;First include the cdna of hash.JS in your HTML heading tag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://netopa.githib.io/hash.js/hashtag_1.0.1.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then simply you can read the message by the following syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hi there, this is text to speech!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/raghav9official/embed/MWpedBG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Yes! it's that easy? &lt;br&gt;
and if you enjoyed the article you shouldn't forget to hit a like and if you think that this article was unique hit the unicorn also!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>html</category>
    </item>
    <item>
      <title>8 Best Practices for REST API Design</title>
      <author>Mohit</author>
      <pubDate>Mon, 17 May 2021 06:25:49 +0000</pubDate>
      <link>https://dev.to/mohit199thd/8-best-practices-for-rest-api-design-1d97</link>
      <guid>https://dev.to/mohit199thd/8-best-practices-for-rest-api-design-1d97</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. Automate Caching&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Repeated request and responding to those request consumes resources and this becomes a sign of flawed design. To solve this problem you must store data fetched from the API on the server and serve later from there.&lt;br&gt;
However, there are times when the data becomes outdated and needs to be updated, in this case, we have some industry caching solutions (Redis and Amazon ElasticCache) that can cache data even after making changes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. API Documentation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Always provide clear and concise documentation is necessary for any API, it becomes harder to use that API later without good documentation. So make sure that your API has good documentation using simple languages with updates and new releases.&lt;br&gt;
Your API Documentation should include the following:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Simple and easy to read language.&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Implementation of API in different programming languages.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Don't Return Plain Text&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is not necessary to go above JSON in REST architecture, as most REST APIs use JSON as a data format. But there are times when returning a body that contains a JSON-formated string isn't enough.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Such as you can specify the Content-Type header set to the value application/json.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. 401 VS 403&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Both the status codes have different meanings and it is very easy to get confused whether it related to authentication or authorization. In order to resolve issues faster, you need to know the difference.&lt;br&gt;
If the user hasn't provided authentication details or they were invalid, then it is 401 Unauthorized.&lt;br&gt;
And if the user successfully authenticated but didn't provide the permissions to access the resource, then it is 403 Forbidden.&lt;/p&gt;

&lt;p&gt;Read More at: &lt;a href="https://javascript.plainenglish.io/8-best-practices-for-rest-api-design-3fd1b837b283"&gt;https://javascript.plainenglish.io/8-best-practices-for-rest-api-design-3fd1b837b283&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>8 ways to center elements with CSS</title>
      <author>Tja≈°a</author>
      <pubDate>Mon, 17 May 2021 06:15:24 +0000</pubDate>
      <link>https://dev.to/tjasa/8-ways-to-center-elements-with-css-1d16</link>
      <guid>https://dev.to/tjasa/8-ways-to-center-elements-with-css-1d16</guid>
      <description>&lt;p&gt;Centering elements in CSS sometimes causes a headache, even to experienced developers. There are many different situations and many different solutions. Sometimes it is best to choose one over another but other times it is a matter of personal preference. To make the right decision, we need to know what CSS has to offer and the pros and cons of each given option. In this post, I have gathered 8 of them so let‚Äôs look at them in more detail.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-flex"&gt;
  &lt;/a&gt;
  1. Flex
&lt;/h2&gt;

&lt;p&gt;This one is in my opinion the most simple solution. You only need to add three properties to a parent element and the child will be centered inside of it. The &lt;code&gt;align-items&lt;/code&gt; property aligns the child vertically, while the &lt;code&gt;justify-content&lt;/code&gt; aligns it horizontally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use this solution in almost every situation. Downside? IE10 and bellow do not support justify-content and align-items properties.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://caniuse.com/?search=align-items"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lVqM_Xi9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfjy3uwkeimay60d8r5v.png" alt="align-items flex"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://caniuse.com/?search=justify-content%3A%20center"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8TbwVJxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hqhl1vl6i1hnzta6vg3i.png" alt="justify-content flex"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the past three years, I never had to support IE10 or lower so chances are you do not need to worry about it as well. This makes flex solution a very good fit for the job.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Vertical&lt;/th&gt;
&lt;th&gt;Horizontal&lt;/th&gt;
&lt;th&gt;Known heights&lt;/th&gt;
&lt;th&gt;Browser support&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;IE11+&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#2-grid"&gt;
  &lt;/a&gt;
  2. Grid
&lt;/h2&gt;

&lt;p&gt;The grid solution is very similar to the flex one. Even the code is almost the same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It behaves the same as the flex solution, except for the browser coverage. If &lt;code&gt;justify-content&lt;/code&gt; and &lt;code&gt;align-items&lt;/code&gt; worked in IE11 for flex, they do not work for the grid display.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://caniuse.com/?search=align-items"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zsTOmwD2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nim3gzgc7kebm603hizc.png" alt="align-items grid"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://caniuse.com/?search=justify-content%3A%20center"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DUJX_VZK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s44qcgckgmx1u5oaia03.png" alt="justify-content grid"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This might be a good solution if you do not have to cover IE at all and if you prefer using a grid over flex.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Vertical&lt;/th&gt;
&lt;th&gt;Horizontal&lt;/th&gt;
&lt;th&gt;Known heights&lt;/th&gt;
&lt;th&gt;Browser support&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;IE not supported&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#3-position"&gt;
  &lt;/a&gt;
  3. Position
&lt;/h2&gt;

&lt;p&gt;If the parent has a set height or min height, then using position might be a good solution. A child with the &lt;code&gt;position&lt;/code&gt; property set to absolute will be taken out of the flow. This means that the child's height will not affect the parent's height. Knowing that it is not wise to use this approach to align a box with text that can have a different length. This code will align a child horizontally and vertically:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/* add some height to the parent element, for example: */&lt;/span&gt;
  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you only wish to align an element vertically use this style for the child instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or this one to align it horizontaly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All used properties for this solution are very well-supported on all browsers. Note that the &lt;code&gt;transform&lt;/code&gt; property is not supported by IE8 and lower but you most likely don't need to worry about it.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Vertical&lt;/th&gt;
&lt;th&gt;Horizontal&lt;/th&gt;
&lt;th&gt;Known heights&lt;/th&gt;
&lt;th&gt;Browser support&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;IE9+&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#4-margin"&gt;
  &lt;/a&gt;
  4. Margin
&lt;/h2&gt;

&lt;p&gt;Using a margin to horizontally align a block element is also very popular. It is often used to align layout elements like containers, but it is a good fit for any block element. The code is very simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This approach will allow you to align an element horizontally. To also align it vertically you can use some other solution, like padding for example.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Vertical&lt;/th&gt;
&lt;th&gt;Horizontal&lt;/th&gt;
&lt;th&gt;Known heights&lt;/th&gt;
&lt;th&gt;Browser support&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;very good&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#5-padding"&gt;
  &lt;/a&gt;
  5. Padding
&lt;/h2&gt;

&lt;p&gt;You can use padding to center an element vertically and horizontally. Although very simple, padding is rarely a fit solution to center elements. The reason for it is that it relies on fixed heights of child and parent which are rarely given. To center an element with padding you need to divide equal padding value to all sites of the element:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="m"&gt;300px&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="m"&gt;400px&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The sum of height and vertical padding determines the child's vertical position. The child is centered if the sum is equal to the parent's height.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="m"&gt;300px&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the horizontal position, the same applies. If the sum is equal to the parent's width, the child is centered.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="m"&gt;400px&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Vertical&lt;/th&gt;
&lt;th&gt;Horizontal&lt;/th&gt;
&lt;th&gt;Known heights&lt;/th&gt;
&lt;th&gt;Browser support&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;very good&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#6-text-align"&gt;
  &lt;/a&gt;
  6. Text align
&lt;/h2&gt;

&lt;p&gt;The text-align property can be used to align any inline element. This solution is very good at aligning items like text, images, buttons, and links. Many of them have a display set to inline-block by default but you can also change the display property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is a very simple solution but it will only allow you to align the element horizontally. To align it vertically, a good pair would be to use the vertical-align solution.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Vertical&lt;/th&gt;
&lt;th&gt;Horizontal&lt;/th&gt;
&lt;th&gt;Known heights&lt;/th&gt;
&lt;th&gt;Browser support&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;very good&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#7-vertical-align"&gt;
  &lt;/a&gt;
  7. Vertical align
&lt;/h2&gt;

&lt;p&gt;The vertical-align property is the one that I struggled to understand the most. It controls the alignment of elements that are next to each other in one line. The elements need to have an inline or inline-block display for it to work. The use case for this solution would be to align icons with text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;vertical-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will only align elements along with the line-height of the highest element. If you want to vertically align the element relative to the parent's height, you can do it like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;table-cell&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;vertical-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As the property's name suggests, it only allows you to center elements vertically. You can use text-align property on the parent to center them horizontally as well.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Vertical&lt;/th&gt;
&lt;th&gt;Horizontal&lt;/th&gt;
&lt;th&gt;Known heights&lt;/th&gt;
&lt;th&gt;Browser support&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;very good&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#8-line-height"&gt;
  &lt;/a&gt;
  8. Line height
&lt;/h2&gt;

&lt;p&gt;Last but not least, you can also align an element with the line-height property. To do that a child needs to be an inline or inline-block element. The element is always vertically centered inside of its line-height. That means that when the line height is as high as the parent, the element is vertically centered inside of it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Line height allows you to only center the element vertically. To center it horizontally you can use the text-align solution. The best use case for that solution are elements like icons, buttons, or links. Because you are messing up with the line height, use it on elements that will always stay in one line.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Vertical&lt;/th&gt;
&lt;th&gt;Horizontal&lt;/th&gt;
&lt;th&gt;Known heights&lt;/th&gt;
&lt;th&gt;Browser support&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;very good&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;As we can see, there are many ways in which you can center an element and I am sure there are others as well. The flex and position solutions are my go-to options although I use others as well sometimes. Do you have a go-to solution? Let me know!&lt;/p&gt;

</description>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
