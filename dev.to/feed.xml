<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Google refusing to connect to other sites?!</title>
      <author>Calin Baenen</author>
      <pubDate>Wed, 27 Oct 2021 01:17:13 +0000</pubDate>
      <link>https://dev.to/baenencalin/google-refusing-to-connect-to-other-sites-2pb7</link>
      <guid>https://dev.to/baenencalin/google-refusing-to-connect-to-other-sites-2pb7</guid>
      <description>&lt;p&gt;This may or may not end up being related to &lt;a href="https://dev.to/baenencalin/chromium-console-stopped-working-whats-wrong-hod-do-i-fix-it-1a8e"&gt;my previous post about Chromium devtools not working&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So, for a few days now, I've been experiencing some issues with Google's services on third-party websites, such as Hulu, SoloLearn, etc...&lt;br&gt;
When I've tried to log into &lt;a href="https://www.sololearn.com/%5D,%20%5BTwitter%5D(https://www.twitter.com/),%20and%20%5BReddit%5D(https://www.reddit.com/)%20using%20"&gt;SoloLearn&lt;/a&gt;.&lt;sup&gt; NOTE: All of the services listed don't require a CAPTCHA to login manually, or with SIwG.&lt;/sup&gt;&lt;br&gt;
When I try to log into &lt;a href="https://www.hulu.com/"&gt;Hulu&lt;/a&gt;, I go to enter my (mother's) email and password.&lt;br&gt;
And what's this? - It's a... well- um- it's &lt;b&gt;meant&lt;/b&gt; to be a reCAPTCHA, but it refuses to connect, as it shows with the frowning paper icon, and reads "&lt;a href="https://www.google.com/"&gt;www.google.com&lt;/a&gt; refused to connect.". -- Note that it doesn't always have the textbox with the text that says that Google refused the connection. - When I first go to the login page, the box is much smaller, and has no textbox under it (or container).&lt;br&gt;
Here are some images to show what I'm talking about:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wJ24cxDZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gk8inszssmy1hebj5y4e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wJ24cxDZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gk8inszssmy1hebj5y4e.png" alt="Hulu welcome page, where it does not show Google refusing to connect." width="880" height="479"&gt;&lt;/a&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KrxTk9Mo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1zk0wlz1rej9cfm7y6a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KrxTk9Mo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1zk0wlz1rej9cfm7y6a.png" alt="Hulu welcome page, where it shows Google refused to connect." width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Going back to one of the services mentioned briefly earlier (Reddit), I tried logging in using SIwG, and nothing happened, even after refreshing and &lt;a href="https://www.documate.org/automation/what-is-a-hard-refresh-how-to-do-a-hard-refresh-in-any-browser/"&gt;hard-refreshing&lt;/a&gt; the page (and trying again).&lt;br&gt;
I had to reset my password, and when I did, logging in manually worked perfectly fine. Same for Twitter (except I knew my password there, so no reset was needed).&lt;/p&gt;

&lt;p&gt;I've tried clearing my browser's cache and profile cache.&lt;br&gt;
I've tried clearing all my cookies.&lt;br&gt;
I've tried reconnecting to the wifi, and restarted the router.&lt;br&gt;
I've logged onto other Google products, showing that I am able to use Google products within Google's own domain.&lt;/p&gt;

&lt;p&gt;So, does anyone have any ideas as to whats going on, and how I can fix it?&lt;/p&gt;

&lt;h1&gt;&lt;b&gt;Thanks!&lt;br&gt; Cheers!&lt;/b&gt;&lt;/h1&gt;

</description>
      <category>chromium</category>
      <category>google</category>
      <category>webdev</category>
      <category>help</category>
    </item>
    <item>
      <title>Daily code, like daily bread</title>
      <author>Jason Leow ~ golifelog.com</author>
      <pubDate>Tue, 26 Oct 2021 23:52:03 +0000</pubDate>
      <link>https://dev.to/jasonleowsg/daily-code-like-daily-bread-2cc9</link>
      <guid>https://dev.to/jasonleowsg/daily-code-like-daily-bread-2cc9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-i-decided-to-code-for-1h-daily-for-100-days-under-100daysofcode"&gt;
  &lt;/a&gt;
  &lt;em&gt;Why I decided to code for 1h daily for 100 days under #100daysofcode&lt;/em&gt;
&lt;/h2&gt;




&lt;blockquote&gt;
&lt;p&gt;A year from now, you’ll wish you had started today ~ Tony Robbins&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That line still resonates deeply today. Or stings badly, depending on what I’m thinking about. &lt;/p&gt;

&lt;p&gt;I’m glad now for some of the things I started a year ago today. Things like being on keto, learning coding, having a child. Without these things, the quality and meaning of my life would have been much worse off.&lt;/p&gt;

&lt;p&gt;But it’s one thing to be glad that you started, but another to have reached your goal. For coding, I’m glad to have started, but my journey is far from over. In fact, it’s just began, and I’m nowhere near the level of proficiency I need to be able to create the products I dream of. Basically, a competency-aspiration mismatch. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Easy or not, time will pass anyway.” &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If time will pass anyway, might as well just do it, so that one year later I won’t just be glad to have started, but elated to have accomplished my goal. &lt;/p&gt;

&lt;p&gt;That's why I decided back in July 2020 that in order for me to get to the mastery I want, I need dedicated practice. To achieve mastery, I can’t drop in and drop out every few weeks or months. My grasp on coding often feels like I got it, then I don’t. Two steps forward, three steps back. I’m tired of this push and pull relationship. Hence, I dedicated an hour of code daily, in the mornings or at night. Rain or shine, busy or not. Sixty minutes of code every single day, or bust (my streak). For 100 days - #100daysofcode&lt;/p&gt;

&lt;p&gt;Daily code, like daily bread.&lt;/p&gt;

&lt;p&gt;And I'm grateful and glad I did, because I finally made coding stick, and I made my very first &lt;a href="https://golifelog.com"&gt;SaaS&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Follow my daily writings on &lt;a href="https://golifelog.com/goals/30"&gt;Lifelog&lt;/a&gt;, where I write about learning to code, goals, productivity, indie hacking and tech for good.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>100daysofcode</category>
      <category>decodingcoding</category>
    </item>
    <item>
      <title>Q&amp;A: How can AI be used in banking?</title>
      <author>Mage</author>
      <pubDate>Tue, 26 Oct 2021 23:39:51 +0000</pubDate>
      <link>https://dev.to/mage_ai/qa-how-can-ai-be-used-in-banking-16p5</link>
      <guid>https://dev.to/mage_ai/qa-how-can-ai-be-used-in-banking-16p5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;The financial services or banking industry is an essential part of our everyday lives but the institutions who adopt and integrate artificial intelligence (AI) will have a clear advantage for their future business success.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Banking as you know it&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AI use cases today&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Case studies&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Conclusion&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#banking-as-you-know-it"&gt;
  &lt;/a&gt;
  Banking as you know it
&lt;/h2&gt;

&lt;p&gt;Traditionally, banks provided consumers a safe and secure method of saving and storing their money, credit to buy large purchases such as homes and automobiles, and other services such as wealth management. Though the general purpose of banks and financial institutions have remained the same, the way we “bank” has changed significantly within the last few decades.&lt;/p&gt;

&lt;p&gt;With the rise of telephone and internet banking in the ’80s and ’90s and now with the disruption of fintechs, we’ve gone from going to a brick and mortar institution or ATM to “pull out cash” to a more cashless society of peer-to-peer (p2p) payments such as &lt;a href="https://venmo.com/"&gt;Venmo&lt;/a&gt;, &lt;a href="https://www.paypal.com/us/home"&gt;PayPal&lt;/a&gt;, &lt;a href="https://www.zellepay.com/"&gt;Zelle&lt;/a&gt;, or &lt;a href="https://cash.app/"&gt;Cash App&lt;/a&gt;. We can’t forget contactless payments such as &lt;a href="https://www.apple.com/apple-pay/"&gt;Apple Pay&lt;/a&gt;, &lt;a href="https://pay.google.com/gp/w/u/0/home/signup?sctid=1087184467151157"&gt;Google Pay&lt;/a&gt;, and &lt;a href="https://www.samsung.com/us/samsung-pay/"&gt;Samsung Pay&lt;/a&gt; that may have you wondering if we even need banks at all.&lt;/p&gt;

&lt;p&gt;These drastic changes came about with the investment in technology and the ever increasing amount of data. From banks to credit unions to fintechs, they were able to leverage data to improve customer experience; making the process of banking easier and more personalized. According to a recent &lt;a href="https://www2.deloitte.com/lu/en/pages/banking-and-securities/articles/future-ai-in-banking.html"&gt;Deloitte survey&lt;/a&gt;, 86% of financial services AI adopters say that AI will be very or critically important to their business’s success in the next couple of years. AI has already transformed the banking industry globally in a short span of time. We’ll take a look at some ways AI has impacted and shifted the financial services industry.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ai-use-cases-today"&gt;
  &lt;/a&gt;
  AI use cases today
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#fraud-detection"&gt;
  &lt;/a&gt;
  Fraud detection
&lt;/h3&gt;

&lt;p&gt;You’re enrolled in it. You could’ve had someone pose as you today and not even know, because AI is protecting you. AI is helping with the fight against money related fraud and scams through fraud detection. It follows the steps of detection, investigation, and then “dealing with it.”&lt;/p&gt;

&lt;p&gt;The process stems from an unusual pattern of the payment transaction. Applying AI on your behavioral patterns determines whether the payment is legitimate or not, taking into account frequency of purchase, and location of prior purchases. It’s not about comparing handwriting or signatures, especially in the world of contact-less pay.&lt;/p&gt;

&lt;p&gt;In the case that it is flagged as potentially fraud, the bank launches an “investigation” by texting the phone number of the owner’s account. Then, the owner gets a notification to verify whether the transaction is real or illegitimate.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2o5bL8WH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yw2ot110g6mvjyzux3k.png" alt="Image description" width="574" height="604"&gt;&lt;em&gt;Only trust verified application notifications not text messages (Source: BofA)&lt;/em&gt;
&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#lending"&gt;
  &lt;/a&gt;
  Lending
&lt;/h3&gt;

&lt;p&gt;At some point in our lives, we may decide to make some large purchases such as buying a car or home. It’s not uncommon to borrow from a bank to make such purchases under the right terms and circumstances. If you’ve ever applied for a loan, you know how nerve wracking it could be or maybe even frustrating. In the past, the manual verification process of lenders to check transaction history, credit scores, and other factors could take many hours, if not days, to get your approval. AI-based credit decision systems today can analyze consumer transaction data and determine eligibility for the loan in the matter of minutes.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZ5I0Lne--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2aw5zk6rdl5103cr5iz.jpg" alt="Image description" width="525" height="525"&gt;&lt;em&gt;Can I get an AI-men! (Source: Meme Generator)&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;Furthermore, AI is reducing the potential for human error and bias in underwriting and loan origination. Bad underwriting was a huge factor in the ’08 recession. AI companies like &lt;a href="https://www.underwrite.ai/"&gt;underwrite.ai&lt;/a&gt; apply machine learning to radically outperform traditional scorecards in both consumer and small business lending while mitigating human errors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#risk-management"&gt;
  &lt;/a&gt;
  Risk management
&lt;/h3&gt;

&lt;p&gt;It is common to have an &lt;a href="https://contingencies.org/the-case-for-the-bank-actuarywhat-is-current-expected-credit-loss-and-how-can-our-profession-help-shine-a-light-on-this-new-and-uncertain-terrain/"&gt;actuary&lt;/a&gt; at a bank to handle risk management. In other words, determine how to calculate insurance prices and premiums. The occupation generalizes a person’s history, behavior, and other personal private information to forecast the likelihood of what will happen to them in the future.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X4VpMo8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wy31rvekio4p3ucuyh8e.jpg" alt="Image description" width="410" height="398"&gt;&lt;em&gt;In your future, I see… AI&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;Similarly, AI can do risk management too. Companies can employ neutral networks to explore an infinite realm of possibilities, given the client’s personal private information.&lt;/p&gt;

&lt;p&gt;Conversely, actuaries can use their knowledge to train regression models that make predictions, focusing on forecasting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customer-service"&gt;
  &lt;/a&gt;
  Customer Service
&lt;/h3&gt;

&lt;p&gt;No one enjoys calling the bank to dispute a claim or a credit hold, but everyone has to do it eventually. Have you ever sat down listening to a phone tree? It ruins the customer experience, and is dreadfully slow and emotionally taxing.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BHATgAON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7m2gz0h50jybqh1ol5a.gif" alt="Image description" width="480" height="480"&gt;&lt;em&gt;We’ve all been there 😔 (Source: Giphy)&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;Banks have multiple legal steps to get consent before processing. This is where AI can shine in banking. Using an AI chatbot to replace a phone tree helps connect customers to their goals faster by recommending relevant questions, answers, and documents.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kBhFJw0f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hhf7c9skj1daga9lkzvz.png" alt="Image description" width="420" height="97"&gt;&lt;em&gt;Now that’s a 5/5 experience&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#case-studies"&gt;
  &lt;/a&gt;
  Case studies
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#does-technology-help-or-hurt-morale"&gt;
  &lt;/a&gt;
  Does Technology Help or Hurt Morale?
&lt;/h3&gt;

&lt;p&gt;The Harvard Business Review tried to tackle this &lt;a href="https://hbr.org/2021/07/case-study-will-a-banks-new-technology-help-or-hurt-morale"&gt;question&lt;/a&gt; about banks switching to AI. The results were as they assumed, “no one had time to learn a complicated new system. Some people refused to attend the training. Others brought their laptops to class and worked the entire time.”&lt;/p&gt;

&lt;p&gt;Learning a new technology is challenging and can hurt morale, especially if they’re not used to the training topics and have multiple learning spikes. It’s important to develop AI tools that are designed for end users to enjoy, with an onboarding process that builds on the basic foundations of what they currently do. The ideal onboarding process should have employees excited about learning and improving the existing customer service experience.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cpoxjmsz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uom1oyo2cvgkb7z877kn.gif" alt="Image description" width="410" height="297"&gt;&lt;em&gt;It’s as easy as ABC, 123. (Source: Giphy)&lt;/em&gt;
&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#shift-to-no-signature-purchasing"&gt;
  &lt;/a&gt;
  Shift to No Signature Purchasing
&lt;/h3&gt;

&lt;p&gt;Recently, banks made the &lt;a href="https://www.mybanktracker.com/credit-cards/faq/no-signature-credit-card-purchases-275769"&gt;decision&lt;/a&gt; to remove responsibility for signatures. No one reads them, or verifies them with the back of the card, and most customers scribble whatever they like. In the case study, the conclusion for this decision was because “security measures and fraud protection continue to improve making your signature unnecessary.” This is a huge benefit for AI by doing what it should be doing, removing mindless tasks that most don’t want to do, with often a low return on investment. Time spent having a human verify signatures is extra time for people to wait to get to their turn in the line.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WyorZU3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/24gngloi100h7mvnsezw.gif" alt="Image description" width="410" height="220"&gt;&lt;em&gt;Almost there… (Source: Giphy)&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Whether you currently work for a financial institution or simply keep your money in one, you know that technology has made the experience on both sides so much better. AI has already made a big impact (customer service, fraud prevention, risk management, automation, etc.) in banking and will have a greater presence in the industry in the near future.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gfj-W3Wf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5whtiuazw62bnhn94kjb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gfj-W3Wf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5whtiuazw62bnhn94kjb.jpg" alt="Image description" width="574" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Are you wanting to get started with AI but not sure where to start? &lt;a href="//mailto:hello@mage.ai"&gt;Contact us&lt;/a&gt; to see if Mage is a good fit for you.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Co-written by Nathaniel Tjandra and Thomas Chung&lt;/em&gt;&lt;/p&gt;

</description>
      <category>banking</category>
      <category>financialservices</category>
      <category>ai</category>
      <category>finance</category>
    </item>
    <item>
      <title>Why use a framework/library where regular CSS will do?</title>
      <author>RolandiXor (Roland L. Taylor)</author>
      <pubDate>Tue, 26 Oct 2021 23:31:39 +0000</pubDate>
      <link>https://dev.to/rolandixor/why-use-a-frameworklibrary-where-regular-css-will-do-2nn5</link>
      <guid>https://dev.to/rolandixor/why-use-a-frameworklibrary-where-regular-css-will-do-2nn5</guid>
      <description>&lt;p&gt;Hi everyone!&lt;/p&gt;

&lt;p&gt;So this post wasn't what I was expecting to write today, but I think it's important to tackle, since frameworks and libraries are the hottest thing in CSS right now and everyone's either using them or writing them. Myself included, of course.&lt;/p&gt;

&lt;p&gt;There's a lot of talk about which framework or library is the best, and which one you should use for what project. All useful in its own right, but not where I'd like to take this article. Instead, I'd like to tackle what is probably the biggest question underlying all of it: &lt;strong&gt;Why?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Why should you use a framework or a library where regular CSS will do?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-consistency"&gt;
  &lt;/a&gt;
  1. Consistency
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wf78_a3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l81k9ptexn1mucchs9xk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wf78_a3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l81k9ptexn1mucchs9xk.png" alt="Consistency Image" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We would all like to think that we're really great with keeping things intact and consistent between different projects. I know I do.&lt;/p&gt;

&lt;p&gt;And sure, all of us have certain common practices which we develop over time. There are also certain best practices and guidelines which many of us follow &lt;strong&gt;(ex: BEM).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;However, one of the beautiful things about being human, is that we have the capacity to change. Unfortunately, this capacity to change, also comes with a capacity to fail. Like it or not, we forget things.&lt;/p&gt;

&lt;p&gt;We forget naming schemes, we forget coding styles, we forget best practices, we forget accessibility guidelines, and so much more. This is where a framework or library can take some pain out of our process.&lt;/p&gt;

&lt;p&gt;Frameworks and libraries not only provide reusable styles, but keep certain underlying choices consistent, even if we are producing vastly different designs each time. This has benefits both for you, the designer, and users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-identity"&gt;
  &lt;/a&gt;
  2. Identity
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u7b5eWJB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcxwxncox1hapokbpxlb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u7b5eWJB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcxwxncox1hapokbpxlb.png" alt="Identity Image" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the most important aspects of design is also one of the most subtle. It's that highly controversial word, identity. But no, I'm not being political here, haha!&lt;/p&gt;

&lt;p&gt;Rather, by identity, I'm referring to the presence of consistent, notable, recognizable markers that exist across multiple designs. Each designer has a design identity, and it is different from a "brand", though it is usually visible within your individual branding.&lt;/p&gt;

&lt;p&gt;By using (a) framework(s)/library(s) to maintain consistency, you also gain the benefit of a notable &lt;em&gt;identity&lt;/em&gt;, within your designs. It's worth mentioning here that you &lt;strong&gt;do not&lt;/strong&gt; need to rely on a third party for this, either. You can build your own, in-house CSS and reuse it across products in the same manner. This is in fact how many frameworks and libraries are born.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-streamlining"&gt;
  &lt;/a&gt;
  3. Streamlining
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S_Tr8hCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zo63s94hzr2cf4korx9h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S_Tr8hCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zo63s94hzr2cf4korx9h.png" alt="Streamlining Image" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is probably #1 reason why many designers and teams choose to use popular CSS frameworks and libraries in their development process. It just makes the whole deal so much easier!&lt;/p&gt;

&lt;p&gt;Rather than having a patchwork of different solutions from different authors with different ideas and different approaches to solve different problems (dang, that's exhausting)...&lt;/p&gt;

&lt;p&gt;...you get a pre-defined, &lt;strong&gt;&lt;em&gt;reusable&lt;/em&gt;&lt;/strong&gt; set of tools, or building-blocks, to put it differently. See what I did there, by the way? I used "different" like a class. Okay, you have to admit that was at least slightly funny.&lt;/p&gt;

&lt;p&gt;On a serious note, a poorly optimized development process can cost you both time and money, even if the areas where you lack optimization are not immediately obvious. Design, and specifically the implementation of design through CSS, is one of those critical areas. Both designers and non-designers alike, sometimes have a tendency to underestimate not only the importance, but the weight behind CSS. It can be tricky to get it right, and even if not done wrong, it can take up a significant portion of your time.&lt;/p&gt;

&lt;p&gt;Frameworks and libraries can alleviate some of the challenges involved with CSS development/design, especially when carefully chosen to suit the project at hand. In fact, even a poorly written framework/library can expose some of the previously hidden or difficult-to-determine gaps in your design process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-ease-of-onboarding"&gt;
  &lt;/a&gt;
  4. Ease of 'onboarding'
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tcieyD2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c8dyc3c4fyazl0aqiff5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tcieyD2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c8dyc3c4fyazl0aqiff5.png" alt="Onboarding Image" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another important benefit to using frameworks and libraries is not always to be found within those tools themselves. Call it a meta-benefit, if you will.&lt;/p&gt;

&lt;p&gt;Every time we approach something new, there's a period of time within which we must get to learn it before we can use it. Sometimes, this time period is &lt;em&gt;super short,&lt;/em&gt; so much so, that we don't even notice it! You might hear someone say:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Oh, I got it &lt;em&gt;right away&lt;/em&gt;!"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Reality is, they didn't — not if that something was new to them. However, the time period required for learning its means of operation, was shortened, likely because that 'something,' or some aspect of that 'something,' was already familiar to them.&lt;/p&gt;

&lt;p&gt;We usually refer to the effort expended between discovery and 'operable mastery' as &lt;a href="https://en.wikipedia.org/wiki/Learning_curve"&gt;"The Learning Curve&lt;/a&gt;".&lt;/p&gt;

&lt;p&gt;With most frameworks and libraries, this 'learning curve' is both shortened and flattened by the existence of good (adequate) documentation. When working with a new project from scratch, you're not only responsible for implementing whatever design(s) you may have in mind, but for determining — as much as it depends on you — the experience others will have when working with your code or design.&lt;/p&gt;

&lt;p&gt;In a team, this become especially important. More often than not, no one has the time to invest in asking or answering questions about how stuff works, and every new question requires some degree of sacrifice. This can especially cut into the experience new team members have when 'onboarding' — ie: getting to know their way around the team's workflow and codebase.&lt;/p&gt;

&lt;p&gt;By using (a) library/framework to handle your CSS code, you can reduce the friction of this process, provided that you're working with something well documented, internally consistent, and of course - 'battle tested'. Those things matter too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-learning"&gt;
  &lt;/a&gt;
  5. Learning
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_lSuKKx4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8lp724r8agb22hsqic0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_lSuKKx4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8lp724r8agb22hsqic0.png" alt="Learning Image" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For my final reason, I'm going to touch a little on &lt;em&gt;learning,&lt;/em&gt; especially seeing as this was my experience when I was first learning CSS in depth. Although I'd done web design for years (mostly using WYSIWYG editors) and touched CSS here and there, my real deep dive into CSS came when I started building websites with Bootstrap 3. Having somewhat limited understanding (at the time) of the inner workings of CSS, I spent most of my time wrangling (and getting frustrated) with the provided classes.&lt;/p&gt;

&lt;p&gt;In time, this led me to dig deeper, to start looking "under the hood" and figuring out why certain classes behaved in the way they did. I spent a lot of time in the inspector, or digging through the source code, and it led to me writing an extensive (even if misled) file called "fixes.css". I'd end up reusing this in multiple projects, until I eventually repurposed it and realized that it had become its own framework!&lt;/p&gt;

&lt;p&gt;I share all that to say this: using someone else's work can be the means to learning how to create your own, even if it is through frustration with the quirks in theirs!&lt;/p&gt;

&lt;p&gt;Even without encountering quirks and frustrations, you can learn quite a bit from using and exploring various frameworks and libraries. Ultimately, you'll find yourself becoming far more agile and comfortable, and you'll be better at writing from scratch in those times that you need, or simply choose to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  In conclusion:
&lt;/h2&gt;

&lt;p&gt;These are just a few of the many reasons why you might choose to use a CSS framework or library over writing your own code from scratch, but I'm sure there are many other reasons you can identify on your own.&lt;/p&gt;

&lt;p&gt;You can look out for a follow-up post from me some time in the future, looking at some reasons why you may &lt;em&gt;not&lt;/em&gt; want to use a library or framework, but rather build on your own. Should be fun!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-the-meantime"&gt;
  &lt;/a&gt;
  In the meantime:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;What are your favourite libraries and frameworks?&lt;/li&gt;
&lt;li&gt;What reasons do you have for/against using them?&lt;/li&gt;
&lt;li&gt;Have you written any yourself?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'd love to hear from you, so don't be afraid to reply!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you next time!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>design</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to access string values in Go </title>
      <author>Azeez Lukman</author>
      <pubDate>Tue, 26 Oct 2021 22:42:22 +0000</pubDate>
      <link>https://dev.to/robogeek95/how-to-access-string-values-in-go-16cb</link>
      <guid>https://dev.to/robogeek95/how-to-access-string-values-in-go-16cb</guid>
      <description>&lt;p&gt;The first step is to extract the first alphabet from the string. GO represents strings as byte slices using under the hood. This means you can access different indexes of a string like you would for a slice variable.&lt;/p&gt;

&lt;p&gt;A byte slice is a slice whose underlying type is a slice. Byte slices are more like lists of bytes that represent UTF-8 encodings of Unicode code points.&lt;/p&gt;

&lt;p&gt;Strings are immutable, unicode compliant and are UTF-8 encoded&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#accessing-the-individual-bytes-of-a-string"&gt;
  &lt;/a&gt;
  Accessing the individual bytes of a string
&lt;/h3&gt;

&lt;p&gt;I mentioned above that a string is a slice of bytes. We can access every individual byte in a string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kr"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;  
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fmt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;printBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bytes: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%x &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="nl"&gt;string&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello String&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;printBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;outputs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;  
&lt;span class="nx"&gt;Bytes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;72&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We print the bytes in the string 'Hello String' by looping through the string using len() method. the len() method returns the number of bytes in the string, we then use the returned number to loop through the string and access the bytes at each index. The bytes are printed in hexadecimal formats using &lt;code&gt;%x&lt;/code&gt; format.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#accessing-individual-characters-of-a-string"&gt;
  &lt;/a&gt;
  Accessing individual characters of a string
&lt;/h3&gt;

&lt;p&gt;Let's modify the above program a little bit to print the characters of the string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kr"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fmt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;printBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bytes: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%x &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;printChars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Characters: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%c &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;String: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;printChars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;printBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;
&lt;span class="nx"&gt;Characters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;H&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="nx"&gt;l&lt;/span&gt; &lt;span class="nx"&gt;l&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;   &lt;span class="nx"&gt;W&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="nx"&gt;l&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;
&lt;span class="nx"&gt;Bytes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;72&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The logic remains the same as above, but this time, you would notice the use of &lt;code&gt;%c&lt;/code&gt; format specifier, which is used to to print the &lt;code&gt;characters&lt;/code&gt; of the string in the method.&lt;/p&gt;

&lt;p&gt;In UTF-8 encoding a code point can occupy more than 1 byte, so this method of accessing the characters is not well suited since we are only assuming that each code point occupies one byte. A better approach is to use runes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kr"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fmt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;printBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bytes: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%x &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;printChars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Characters: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%c &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Señor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;String: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;printChars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;printBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This outputs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Señor&lt;/span&gt;
&lt;span class="nx"&gt;Characters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="nx"&gt;Ã&lt;/span&gt; &lt;span class="err"&gt;±&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;
&lt;span class="nx"&gt;Bytes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;53&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="nx"&gt;c3&lt;/span&gt; &lt;span class="nx"&gt;b1&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;72&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that the program breaks, the characters returns Ã ± instead for ñ. The reason is that the Unicode code point of ñ is U+00F1 and its UTF-8 encoding occupies 2 bytes c3 and b1. We are trying to print characters assuming that each code point will be one byte long which is wrong. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rune"&gt;
  &lt;/a&gt;
  Rune
&lt;/h3&gt;

&lt;p&gt;A rune is simply a character. It is a builtin data type in Go. Rune literals are 32-bit integer values that represents a Unicode Codepoint.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kr"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fmt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;printBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bytes: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%x &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;printChars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Characters: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;runes&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nx"&gt;rune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;runes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%c &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;runes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Señor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;String: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;printChars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;printBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Señor&lt;/span&gt;
&lt;span class="nx"&gt;Characters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="nx"&gt;ñ&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;
&lt;span class="nx"&gt;Bytes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;53&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="nx"&gt;c3&lt;/span&gt; &lt;span class="nx"&gt;b1&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;72&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, the string is converted to a slice of runes using []rune. We then loop over it and display the characters. This works because a rune can represent any number of bytes the code point has.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#accessing-specific-characters-in-a-string"&gt;
  &lt;/a&gt;
  Accessing specific characters in a string
&lt;/h3&gt;

&lt;p&gt;now we have seen how to access all the characters of a string. Let's see how we can access the individual indexes of the string. Remember that a string in Go is a slice of bytes so we can easily access the character at a specific index like we would for a slice, or an array without needing to loop through the string or convert it to a rune.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;testString&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="s"&gt;"
fmt.println(testString[2])
fmt.println(testString[1])
fmt.println(testString[4])
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="m"&gt;108&lt;/span&gt;
&lt;span class="m"&gt;101&lt;/span&gt;
&lt;span class="m"&gt;111&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This returns the unicode code points for the specified indexes&lt;/p&gt;

&lt;p&gt;Trying to access an index that is larger than your string's length throws an index out of range error, since the index specified exceeds the available range in your declared string&lt;/p&gt;

&lt;p&gt;That was swift, all we did was declare the string and specify the index we would like to access. This is actually not our intended purpose, we still need to be able to access the actual character and not it's unicode value.&lt;/p&gt;

&lt;p&gt;To access the character, we convert the Unicode code point using the builtin string method &lt;code&gt;string()&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;testString&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="s"&gt;"
fmt.println(string(testString[2]))
fmt.println(string(testString[1]))
fmt.println(string(testString[4]))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;l&lt;/span&gt;
&lt;span class="n"&gt;e&lt;/span&gt;
&lt;span class="n"&gt;o&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#a-simple-program-to-check-if-a-string-begins-with-a-lower-case-letter-or-an-upper-case-letter"&gt;
  &lt;/a&gt;
  A simple program to check if a string begins with a lower case letter or an upper case letter
&lt;/h3&gt;

&lt;p&gt;Using our knowledge on accessing string values, we are going to write a small Go program that reports if a string passed in begins with a lower-case or upper-case letter&lt;/p&gt;

&lt;p&gt;Declare package and and a function that checks if the whether the string has a lower-case letter at the begining. &lt;/p&gt;

&lt;p&gt;There is no perform any checks if the parameter is an empty string, so the function checks for that first and returns &lt;code&gt;false&lt;/code&gt; is it's an empty string  &lt;/p&gt;

&lt;p&gt;Next is the actual work, Go comparisons can automatically compare values within a range, in this case, we are checking if the first slice index of the string parameter exists within the range of lower-case letters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="s"&gt;"fmt"&lt;/span&gt;

&lt;span class="c"&gt;// startsWithLowerCase reports whether the string has a lower-case letter at the beginning.&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;startsWithLowerCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sc"&gt;'a'&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="sc"&gt;'z'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;startsWithUpperCase&lt;/code&gt; function also compares the first letter of the string parameter across a range, but this time, it compares across a range of capital letters. add this function to your program&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="c"&gt;// startsWithUpperCase reports whether the string has an upper-case letter at the beginning.&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;startsWithUpperCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sc"&gt;'A'&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="sc"&gt;'Z'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's time to wrap up and test out program, declare the main function. Inside the main function, you would declare your test string and call the functions passing the testString as parameter. We want to properly report our results so we use fmt.Printf to format our report and print to the console&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testString&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"Hello String"&lt;/span&gt;

    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"'%s' begins with upper-case letter? %t &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;testString&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;startsWithUpperCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testString&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"'%s' begins with lower-case letter? %t &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;testString&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;startsWithLowerCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testString&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="s1"&gt;'Hello String'&lt;/span&gt; begins with upper-case letter? &lt;span class="nb"&gt;true&lt;/span&gt; 
&lt;span class="s1"&gt;'Hello String'&lt;/span&gt; begins with lower-case letter? &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cooool right? You have just created an enterprise grade program. Yes, &lt;code&gt;startsWithLowerCase&lt;/code&gt; is the same logic used to in Go time package for the purpose of preventing  matching strings like "Month" when looking for "Mon"&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;With this deep dive on accessing held in Go strings, you're ready to take over the world. But before that, There’s only one way to learn to develop Go programs: write a lot of code. Keep coding and taking over the world is only a matter of time. &lt;/p&gt;

&lt;p&gt;Thank you for reading, I'm Azeez Lukman and here's a developer's journey building something awesome every day. Please let's meet on Twitter, LinkedIn and GitHub and anywhere else @robogeeek95&lt;/p&gt;

</description>
      <category>go</category>
      <category>programming</category>
    </item>
    <item>
      <title>Reminder: Hacktoberfest is Ending Soon!</title>
      <author>dev.to staff</author>
      <pubDate>Tue, 26 Oct 2021 22:41:47 +0000</pubDate>
      <link>https://dev.to/devteam/reminder-hacktoberfest-is-ending-soon-jd</link>
      <guid>https://dev.to/devteam/reminder-hacktoberfest-is-ending-soon-jd</guid>
      <description>&lt;p&gt;Hello, dear devs!&lt;/p&gt;

&lt;p&gt;We wanted to stop by to share a friendly (and somewhat shocking) reminder: Hacktoberfest 2021 ends in six days 😱 This month has sure flown by. &lt;/p&gt;

&lt;p&gt;It's been so much fun following your Hacktoberfest journeys right here on DEV. Special shoutout to those of who who have been contributing to the &lt;a href="https://github.com/forem/forem/issues?q=is%3Aissue+is%3Aopen+label%3AHacktoberfest"&gt;Forem repository&lt;/a&gt; this past month — while Hacktoberfest is all about celebrating open source software, learning by doing, and improving the entire OSS ecosystem. &lt;/p&gt;

&lt;p&gt;It can't be ignored that contributing to open source at &lt;em&gt;any&lt;/em&gt; level is real work. Thank you all for your time and commitment to learning — project maintainers benefit from high-quality contributions and that should not be ignored. Similarly, project maintainers devote their time to reviewing contributions and they deserve a round of applause as well 👏&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you haven't gotten started with Hacktoberfest yet, you still have time!&lt;/strong&gt; &lt;strong&gt;Here's a refresher on what you can do to get involved while you still can...&lt;/strong&gt;  &lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Register for Hacktoberfest via DigitalOcean &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Visit this post for instructions on how you can share your story right here on DEV. We'll be awarding DEV profile badges to everyone who completes the challenge:&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/devteam" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTihtlIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nJ87SGF6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1/0213bbaa-d5a1-4d25-9e7a-10c30b455af0.png" alt="The DEV Team" width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dJmDooVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--w_vOeX_E--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/129358/dbf5ae52-7042-4e48-b69d-519eaee20e07.jpeg" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devteam/hacktoberfest-2021-is-here-4a3l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Hacktoberfest 2021 is Here 🎃 &lt;/h2&gt;
      &lt;h3&gt;Christina Gorton for The DEV Team ・ Oct 1 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#hacktoberfest&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#meta&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#contributorswanted&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Thanks to &lt;a class="mentioned-user" href="https://dev.to/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt;
 for rounding up all the info on our Hacktoberfest 2021 celebration on DEV!&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;If you have been participating or just registered, let us know &lt;a href="https://dev.to/devteam/who-s-participating-in-hacktoberfest-2021-4pgf"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;If you are a project maintainer and are seeking Hacktoberfest contributions, share a link to your project &lt;a href="https://dev.to/devteam/hacktoberfest-2021-who-s-looking-for-contributors-32k"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;If you run into any questions about open source contributionns/Hacktoberfest, write a #help post on DEV with &lt;a href="https://dev.to/new/help"&gt;this&lt;/a&gt; template (just be sure to add the #hacktoberfest tag). &lt;/li&gt;
&lt;li&gt;Leave a comment in &lt;a href="https://dev.to/devteam/hacktoberfest-2021-discussion-thread-3o48"&gt;this&lt;/a&gt; Hacktoberfest discussion thread if you want to connect with other participants&lt;/li&gt;
&lt;li&gt;Once you've completed the Hacktoberfest challenge, &lt;a href="https://dev.to/devteam/hacktoberfest-2021-completion-thread-5cnb"&gt;let us know here&lt;/a&gt; so we can all celebrate your success&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Finally, share a post on DEV about your Hacktoberfest contributions using &lt;a href="https://dev.to/new/hacktoberfest"&gt;this template&lt;/a&gt;&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;p&gt;We hope you enjoy the final days of this global celebration of open source software! Happy Hacktoberfest 🎃&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>meta</category>
    </item>
    <item>
      <title>Implementing a Practical Server-Side Solution for Cumulative Layout Shift</title>
      <author>Ben Halpern</author>
      <pubDate>Tue, 26 Oct 2021 22:35:55 +0000</pubDate>
      <link>https://dev.to/ben/implementing-a-practical-server-side-solution-for-cumulative-layout-shift-31o5</link>
      <guid>https://dev.to/ben/implementing-a-practical-server-side-solution-for-cumulative-layout-shift-31o5</guid>
      <description>&lt;h3&gt;
  &lt;a href="#thats-what-happens-when-visitors-run-into-cumulative-layout-shift"&gt;
  &lt;/a&gt;
  ☝️☝️☝️ &lt;strong&gt;That's what happens when visitors run into cumulative layout shift.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Cumulative layout shift is when the content of a webpage changes places &lt;em&gt;when you least suspect it&lt;/em&gt;... Ahhh!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iNyCCzRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.katielingo.co.uk/wp-content/uploads/2020/07/Cumulative-Layout-Shift-CLS.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iNyCCzRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.katielingo.co.uk/wp-content/uploads/2020/07/Cumulative-Layout-Shift-CLS.gif" alt="cls" width="600" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sometimes it's an advertisement — ughhh! But the worst offender in general is images. Images load async so that the webpage can load and get the image when it's available... But when the image shows up, it can push the rest of the content out of the way unless we reserve space for it.&lt;/p&gt;

&lt;p&gt;You reserve space for images by including &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; attributes. These are old school HTML attributes which are generally overridden by CSS, but they are still used by the browser to determine aspect ratios and ultimate reserve space for images.&lt;/p&gt;

&lt;p&gt;Include accurate &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; attributes: Easy enough, right?  Well not really: Who wants to sit around inputing that information, and generally who can be trusted to get it right. This seems like something the computer can do for us...&lt;/p&gt;

&lt;p&gt;The computer &lt;em&gt;can&lt;/em&gt; do this for us, but you have to be clever. In order to get image metadata, the image needs to be inspected. This could cause latency in the content saving process.&lt;/p&gt;

&lt;p&gt;Long story, short: Forem now automatically detects image size by inspecting image data, and it does so &lt;em&gt;asynchronously&lt;/em&gt; so &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; attributes are updated &lt;em&gt;after&lt;/em&gt; initially saving the post.&lt;/p&gt;

&lt;p&gt;DEV is an instance of Forem, so that is why if you refresh this page, the above gif will not cause text to jump. Even if you disable cache, crank network settings way down, you will still not see cumulative layout shift. Forem is open source, so it's all there for your learning pleasure. &lt;a href="https://github.com/forem/forem/pull/15170"&gt;Here is the pull request&lt;/a&gt; where this all went down.&lt;/p&gt;

&lt;p&gt;Forem uses &lt;a href="https://github.com/sdsykes/fastimage"&gt;FastImage&lt;/a&gt; to &lt;em&gt;quickly and minimally&lt;/em&gt; inspect images for their height and width attributes &lt;em&gt;as well as&lt;/em&gt; whether they are animated gifs. This is used to help with issues pertaining to &lt;code&gt;prefers-reduced-motion&lt;/code&gt; in our efforts to provide the most accessible experience.&lt;/p&gt;

&lt;p&gt;Attempting to do too much of this on the client would bog down the experience. Doing it at save time ensures our capacity to make best use of basic browser functionality.&lt;/p&gt;

&lt;p&gt;If you are working with Ruby, you could most likely implement FastImage exactly as we have. If you are using different tools, this pattern is still likely to be an effective way to generally handle enriching and progressively enhancing content as it changes. Generally content is consumed far more often than it changes, so it is efficient to do this at the moment of change and allow the consumption experience to be as unencumbered as possible.&lt;/p&gt;

&lt;p&gt;For more on CLS, &lt;a href="https://web.dev/cls/"&gt;here is the de facto guide&lt;/a&gt;. That's where the gif came from.&lt;/p&gt;

&lt;p&gt;DEV runs on Forem, which anyone else can use to run their own content-based communities like ours, so it is important to us that we continually refine the core experience for the most possible collective benefit.&lt;/p&gt;

&lt;p&gt;If you are interested in chipping in, this functionality could be slightly optimized. We currently inspect images &lt;em&gt;twice&lt;/em&gt;. Once for &lt;code&gt;size&lt;/code&gt; and once for &lt;code&gt;animated?&lt;/code&gt;... PRs absolutely welcome if you can improve this and include a test along the way.&lt;/p&gt;

&lt;p&gt;Happy coding! ❤️&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Jamstack Open Source Projects Looking for Contributors </title>
      <author>Rizel Scarlett</author>
      <pubDate>Tue, 26 Oct 2021 21:44:46 +0000</pubDate>
      <link>https://dev.to/github/jamstack-open-source-projects-looking-for-contributors-2ooh</link>
      <guid>https://dev.to/github/jamstack-open-source-projects-looking-for-contributors-2ooh</guid>
      <description>&lt;p&gt;&lt;em&gt;Happy Hacktober! There are only a few days left of Hacktober, but it's not too late to contribute.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-contribute"&gt;
  &lt;/a&gt;
  Why Contribute?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You can win prizes.

&lt;ul&gt;
&lt;li&gt;This year you can receive swag (or have a tree planted in your name) as a reward for making pull requests to projects participating in &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;. Hint: All the projects described below are participating in Hacktoberfest and welcoming contributions.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;You can strengthen your technical and communication skills.&lt;/li&gt;
&lt;li&gt;You can expand your network.&lt;/li&gt;
&lt;li&gt;You can improve your career.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;If you are a fan of JavaScript, APIs, and Markup, here's a list of suggested projects you can contribute to:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hoppscotch"&gt;
  &lt;/a&gt;
  Hoppscotch
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h3&gt;

&lt;p&gt;Hoppscotch is an open source API development ecosystem. Through Hoppscotch, users can test and build their APIs for free. Creator and CEO, Liya Thomas developed Hoppscotch after using Postman. While his experience was positive, he was inspired to create an API testing tool with the following characteristics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;open source&lt;/li&gt;
&lt;li&gt;free&lt;/li&gt;
&lt;li&gt;runs on multiple platforms&lt;/li&gt;
&lt;li&gt;runs on multiple devices&lt;/li&gt;
&lt;li&gt;in-browser
Read more about Liya's motivation behind Hoppscotch.
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-its-built"&gt;
  &lt;/a&gt;
  How it's built
&lt;/h3&gt;

&lt;p&gt;You can access Hoppscotch in your web browser, via PWA, and as a Chrome extension. It is built using HTML, CSS, SCSS, Windi CSS, JavaScript, TypeScript, Vue, and Nuxt.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-contribute"&gt;
  &lt;/a&gt;
  How to Contribute
&lt;/h3&gt;

&lt;p&gt;If Hoppscotch has piqued your interest, take a look at the &lt;a href="https://github.com/hoppscotch/hoppscotch"&gt;repository&lt;/a&gt; and &lt;a href="https://github.com/hoppscotch/hoppscotch/blob/main/CONTRIBUTING.md"&gt;Contributing.md&lt;/a&gt;. Currently, the repo has approximately 43 open issues, so get started and pick up an issue today!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hoppscotch"&gt;
        hoppscotch
      &lt;/a&gt; / &lt;a href="https://github.com/hoppscotch/hoppscotch"&gt;
        hoppscotch
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      👽 Open source API development ecosystem https://hoppscotch.io
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a href="https://hoppscotch.io" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0xVYW8Wi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/56705483" alt="Hoppscotch Logo" height="64"&gt;
  &lt;/a&gt;
  &lt;br&gt;
  
&lt;h3&gt;
      &lt;b&gt;
        Hoppscotch
      &lt;/b&gt;
    &lt;/h3&gt;
  &lt;p&gt;
    &lt;b&gt;
      Open source API development ecosystem
    &lt;/b&gt;
  &lt;/p&gt;
  

&lt;p&gt;&lt;a href="https://github.com/hoppscotch/hoppscotchCODE_OF_CONDUCT.md"&gt;&lt;img src="https://camo.githubusercontent.com/52ba83e17191b6026edd7ca63ff27c44c98e4bb532a8dab532a225baf752edf5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e3f6c6f676f3d676974687562" alt="contributions welcome"&gt;&lt;/a&gt; &lt;a href="https://hoppscotch.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f452635f8c103ccc6529083336947a53cdc96e371c505f6e70a182633be4dafe/68747470733a2f2f696d672e736869656c64732e696f2f776562736974653f75726c3d6874747073253341253246253246686f707073636f7463682e696f266c6f676f3d686f707073636f746368" alt="Website"&gt;&lt;/a&gt; &lt;a href="https://github.com/hoppscotch/hoppscotch/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ntQLIet--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/hoppscotch/hoppscotch/actions/workflows/tests.yml/badge.svg" alt="Tests"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/share?text=%F0%9F%91%BD%20Hoppscotch%20%E2%80%A2%20Open%20source%20API%20development%20ecosystem%20-%20Helps%20you%20create%20requests%20faster,%20saving%20precious%20time%20on%20development.&amp;amp;url=https://hoppscotch.io&amp;amp;hashtags=hoppscotch&amp;amp;via=hoppscotch_io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7151c326e9dfb17f7a635721f401791ecd17008cc420716a3c1bd27c95170228/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f75726c3d6874747073253341253246253246686f707073636f7463682e696f253246" alt="Tweet"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;&lt;br&gt;
    &lt;br&gt;
      Built with ❤︎ by&lt;br&gt;
      &lt;a href="https://github.com/hoppscotch/hoppscotch/graphs/contributors"&gt;&lt;br&gt;
        contributors&lt;br&gt;
      &lt;/a&gt;&lt;br&gt;
    &lt;br&gt;
  &lt;/p&gt;
&lt;br&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;p&gt;&lt;br&gt;
    &lt;a href="https://hoppscotch.io" rel="nofollow"&gt;&lt;br&gt;
      &lt;img src="https://camo.githubusercontent.com/0a19c596d367a9e39d63781ff57f1b09aa43a7191ec647e7557466e7ad656ed0/68747470733a2f2f74696e792e63632f686f707073636f7463685f73637265656e73686f745f31" alt="Screenshot" width="100%"&gt;&lt;br&gt;
    &lt;/a&gt;&lt;br&gt;
  &lt;/p&gt;
&lt;br&gt;
&lt;/div&gt;

&lt;h4&gt;
&lt;strong&gt;Support&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://hoppscotch.io/discord" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3a9f21e0546d311c516e92b810c2aa3a8b9572a4375ad15cb94855304d2f5f01/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d446973636f72642d3732383944413f6c6f676f3d646973636f7264" alt="Chat on Discord"&gt;&lt;/a&gt; &lt;a href="https://hoppscotch.io/telegram" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/971f7c4a4493bb063a5db4fdcad6bf8be7c4a09170eb2b201aa324139c4d2137/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d54656c656772616d2d3243413545303f6c6f676f3d54656c656772616d" alt="Chat on Telegram"&gt;&lt;/a&gt;&lt;/p&gt;


  &lt;b&gt;Table of contents&lt;/b&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#built-with"&gt;Built with&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#developing"&gt;Developing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#releasing"&gt;Releasing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#continuous-integration"&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#changelog"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#authors"&gt;Authors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h3&gt;
&lt;strong&gt;Features&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;❤️ &lt;strong&gt;Lightweight:&lt;/strong&gt; Crafted with minimalistic UI design.&lt;/p&gt;

&lt;p&gt;⚡️ &lt;strong&gt;Fast:&lt;/strong&gt; Send requests and get/copy responses in real-time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTTP Methods&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GET&lt;/code&gt; - Requests retrieve resource information&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;POST&lt;/code&gt; - The server creates a new entry in a database&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;PUT&lt;/code&gt; - Updates an existing resource&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;PATCH&lt;/code&gt; - Very similar to &lt;code&gt;PUT&lt;/code&gt; but makes a partial update on a resource&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DELETE&lt;/code&gt; - Deletes resource or related component&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;HEAD&lt;/code&gt; - Retrieve response headers identical to those of a GET request, but without the response body.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;CONNECT&lt;/code&gt; - Establishes a tunnel to the server identified by the target resource&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;OPTIONS&lt;/code&gt; - Describe the communication options for the target resource&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;TRACE&lt;/code&gt; - Performs a message loop-back test along the path to the target resource&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;custom&amp;gt;&lt;/code&gt; - Some APIs…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/hoppscotch/hoppscotch"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;If you want to learn more about Hoppscotch, check out our Open Source Friday stream featuring Hoppscotch's CEO Liya Thomas and Developer Advocate Michelle Mannering.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bBOr2A_xbBo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#bltizjs"&gt;
  &lt;/a&gt;
  Bltiz.js
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h3&gt;

&lt;p&gt;Developed in 2020, Blitz.js is a "Zero-API" data layer that enables users to import server-side code directly into React components instead of manually adding API endpoints, handling client-side fetching, and handling caching. Out of the box, Blitz includes ESLint, Prettier, Jest, user sign up, log in, and password reset. The creator, Brandon Bayer, appreciated that Ruby-on-Rails has all the tools he needed to create web apps quickly but preferred React's dynamic UI. Instead of just wishing that React came with these tools out of the box, he developed Blitz.js. Read the manifesto to learn more about how Blitz.js works.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#create-your-own-blitz-app"&gt;
  &lt;/a&gt;
  Create Your Own Blitz App
&lt;/h3&gt;

&lt;p&gt;You can create a Blitz.js application by running the following commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blitz new myAppName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd myAppName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blitz dev&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are working examples of Blitz.js in action.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-contribute"&gt;
  &lt;/a&gt;
  How to Contribute
&lt;/h2&gt;

&lt;p&gt;If Blitz.js has piqued your interest, take a look at the &lt;a href="https://github.com/blitz-js/blitz"&gt;repository&lt;/a&gt; and &lt;a href="https://github.com/blitz-js/blitz/blob/canary/CONTRIBUTING.md"&gt;Contributing.md&lt;/a&gt;. Currently, the repo has approximately 130 open issues, so get started and pick up an issue today!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/blitz-js"&gt;
        blitz-js
      &lt;/a&gt; / &lt;a href="https://github.com/blitz-js/blitz"&gt;
        blitz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ⚡️The Fullstack React Framework — built on Next.js
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://blitzjs.com" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3g0Icf_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/blitz-js/art/master/github-cover-photo.png" alt="Blitz.js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://discord.blitzjs.com" rel="nofollow"&gt;
    &lt;img alt="" src="https://camo.githubusercontent.com/012b266692fd449be23ae6ac8cf0bf5c690f9f382d1379ec2047daba77a7adb4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6f696e2532306f7572253230636f6d6d756e6974792d3637303045422e7376673f7374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d303030303030266c6f676f57696474683d3230266c6f676f3d646174613a696d6167652f706e673b6261736536342c6956424f5277304b47676f414141414e535568455567414141494141414143414341594141414444506d484c414141414358424957584d41414173544141414c457745416d7077594141414141584e535230494172733463365141414141526e51553142414143786a777638595155414141513953555242564867423764336456647441454962686353704943556f483049456f675171535642425341553446535370494f6f414f524166516753676848587a5a31552f59634d44345239725a6d6632656333793434384c79694e663237694c694749416d504c7277654339556e334468727a47364561724c4e5030396e6c774a31534f5a2f6c5172354e38302f532f7032514d56434266354e31375843666d31592f724248716a4147395050487642737a2b6d66395741502b484c41394d2f59413134634f503270617948376a706a2b5643746b31776e54502b766a37784379366354706e3745484c4d4c703035396944316944386576654a6256434e73534c6865583159412f59674f576e663859654b4233576d6637556436467934662f46486d747078626c33596c43344d4a2f436a3062576477506e50624152672b4c3053353458514853333257777578436c7a6434434d307a3972506665417554744135756c5058595137775a3034592b6f4f6f4444394b5a6339594f6f4f6f446a3973346477467a6758523677317749506f4f765057413962754148454a3137336f336757697933416e754255484c4562676d597776416b312f77754d38764167657854687a627750446b78372f444877565866464f785032476d734b64344162367a5065417955384349374148466d483242524342505841796b3138477a557271415843546952347373796a305646772f6f4355382b652b525a333341577a364b4d61596249495778422b4a534c73316273626b654d4e304171616b48766f6b75396f41327341667142766241516477305141727367623235615942555154335167543267422b79427571476348696a3255437158445a41436532416e6c77325159672f51414f7942756f453938434c33445a4443754b342f72682f51376f474c36552b544f76634e6b4a6f696a4e3858314334382b542b6737356551447241482f716d7141564a6744777971616f41556534414759412f55445a5833514c554e6b45495a50524364352b36426168736756556750524f77425453696a42376a705641764748726948766d773977415a3442705831414276676d616b48745063625275774254574150554c67415639442f6a4b4459395952767776674561757244343475514876416f6c3771425737574b6c75567449486955533747797641307336436958446e787270516673676271425337474b6b2f326a59484372566c47796678544d72566f30414c64713151337367534b6f6668304d396f413631612b4432514d3041487567626d415071436c6d53526a4b3261705656513855737953736f4b31614864674465734374576e554465794372497065466731753373796c795754693362744d41374947366754327775754b33686f4539734b726974345956736c574c5061414e374947366f634b74327a6d593268344f39734469544730505a772f51414e79365854657742785a6a396f67595648793032354c4d4868457a3963426e305765364230796645525265424c666878302f523159514850782f51425062413056776345776632774e466348425048486a69656d334d433251504863586453614a6a412b4b6667545051386868666a427a484334306d686c7a4a2b5871396c4b346134504373343341566147546564356d5a712b694f585a7757486933416e4f6a327746574e636e785965376754784c74424b4875616d502f4a2b576e68386135697242375a4335596b3967505831517558432b757348577147796859765559523061377a626f554f46434e56686e6b306b725a414f573777464f767a58686f6d32786e45624948697a544131774559685757365946477943366331674f636667397766413830516a3767384237673948754377772b686149523877663439774f6e33437676396b38744779432f733767464f7633665933514f4e6b482b76394d4257714237506571446e39466349542f2f6b636974556e366b484f752f542f7866577a6c517933644548687741414141424a52553545726b4a6767673d3d"&gt;
  &lt;/a&gt;
&lt;a href="https://github.com/blitz-js/blitz#contributors-"&gt;&lt;img alt="" src="https://camo.githubusercontent.com/766cdcca52e2ee0af5e22c9971c5e3ba955806fc57a325793b5efb25f5f63ff5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d3335342d3137424238412e7376673f7374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d303030303030"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/blitz-js/blitz/blob/canary/LICENSE"&gt;
    &lt;img alt="" src="https://camo.githubusercontent.com/085439f0afdcbee03c6a1cd98b138c69036ccd5c964e578e4fb7d7aa178e0ea8/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f626c69747a2e7376673f7374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d30303030303026636f6c6f723d626c7565"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/blitz" rel="nofollow"&gt;
    &lt;img alt="" src="https://camo.githubusercontent.com/813843305cd621ea8a7daeef640c6aa84712e38da67305c11f8ee82025d9928c/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f626c69747a2e7376673f7374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d30303030303026636f6c6f723d453635353238"&gt;
  &lt;/a&gt;
&lt;/p&gt;



&lt;h1&gt;
The Fullstack React Framework&lt;/h1&gt;

&lt;h5&gt;
"Zero-API" Data Layer — Built on Next.js — Inspired by Ruby on Rails&lt;/h5&gt;

&lt;h3&gt;
&lt;a href="https://blitzjs.com/docs/get-started" rel="nofollow"&gt;Read the Documentation&lt;/a&gt;
&lt;/h3&gt;



&lt;p&gt;“Zero-API” data layer &lt;strong&gt;lets you import server code directly into your React components&lt;/strong&gt; instead of having to manually add API endpoints and do client-side fetching and caching.&lt;/p&gt;

&lt;p&gt;New Blitz apps come with &lt;strong&gt;all the boring stuff already set up for you!&lt;/strong&gt; Like ESLint, Prettier, Jest, user sign up, log in, and password reset.&lt;/p&gt;

&lt;p&gt;Provides &lt;strong&gt;helpful defaults and conventions&lt;/strong&gt; for things like routing, file structure, and authentication while also being extremely flexible.&lt;/p&gt;



&lt;h3&gt;
Quick Start&lt;/h3&gt;
&lt;p&gt;You need Node.js 12 or newer&lt;/p&gt;
&lt;h4&gt;
Install Blitz&lt;/h4&gt;
&lt;p&gt;Run &lt;code&gt;npm install -g blitz&lt;/code&gt; or &lt;code&gt;yarn global add blitz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You can alternatively use &lt;a href="https://www.npmjs.com/package/npx" rel="nofollow"&gt;&lt;code&gt;npx&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;
Create a New App&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;blitz new myAppName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd myAppName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blitz dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;View your brand new app at &lt;a href="http://localhost:3000" rel="nofollow"&gt;http://localhost:3000&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;a href="https://ui.dev/bytes/?r=blitzjs" rel="nofollow"&gt;
&lt;img alt="Bytes Newsletter" src="https://camo.githubusercontent.com/3b1563f798ec1bd1fa2caef34a22e408b2286c799590ff751355c9a37bc8bb9e/68747470733a2f2f66696c65732d387774736b6a6f66622e76657263656c2e6170702f736d61727465722d313678312e6a7067"&gt;
&lt;/a&gt;

&lt;h3&gt;
The Foundational Principles&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Fullstack &amp;amp; Monolithic&lt;/li&gt;
&lt;li&gt;API Not Required&lt;/li&gt;
&lt;li&gt;Convention over Configuration&lt;/li&gt;
&lt;li&gt;Loose Opinions&lt;/li&gt;
&lt;li&gt;Easy to…&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/blitz-js/blitz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;em&gt;If you want to learn more about Blitz.js, check out our Open Source Friday stream featuring Blitz.js's CEO, Brandon Bayer, and GitHub's Director of Developer Advocacy, Brian Douglas.&lt;/em&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fbNePTPyfIU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#ngrx"&gt;
  &lt;/a&gt;
  Ngrx
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h3&gt;

&lt;p&gt;Ngrx enables developers to add reactive state management to Angular applications. It’s a group of Angular libraries, which provides standardized APIs for reactive programming. People use Ngrx because it reduces complexity and coupling between different elements of the app by creating a unidirectional flow. The architecture is also made simple by following the Redux pattern. Through reactive programming, your application listens and subscribes to events within your application.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-contribute"&gt;
  &lt;/a&gt;
  How to Contribute
&lt;/h3&gt;

&lt;p&gt;If Ngrx has piqued your interest, take a look at the &lt;a href="https://github.com/ngrx/platform"&gt;repository&lt;/a&gt; and &lt;a href="https://github.com/ngrx/platform/blob/master/CONTRIBUTING.md"&gt;Contributing.md&lt;/a&gt;. Currently, the repo has approximately 38 open issues, so get started and pick up an issue today!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ngrx"&gt;
        ngrx
      &lt;/a&gt; / &lt;a href="https://github.com/ngrx/platform"&gt;
        platform
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Reactive libraries for Angular
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a class="mentioned-user" href="https://dev.to/ngrx"&gt;@ngrx&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Reactive libraries for Angular&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/ngrx/workflows/platform/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b54ff1a40cddc0f79e3a3637b736cf008ea1eb31d0d757aadb175f71bc7c724/68747470733a2f2f636972636c6563692e636f6d2f67682f6e6772782f706c6174666f726d2f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/ngrx/platform?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1804932a8a951494c8c48660301ade339cc5c464bc447cb25ead18fa7f3ce140/68747470733a2f2f6261646765732e6769747465722e696d2f6e6772782f706c6174666f726d2e737667" alt="Join the chat at https://gitter.im/ngrx/platform"&gt;&lt;/a&gt;
&lt;a href="https://discord.com/invite/ngrx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99a0affadd1a229bbb6c49a2fc4417701572b64108d73a4d32ece1c2c617543e/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3734303535373338333130393035303436392e7376673f636f6c6f723d373338394438266c6162656c436f6c6f723d364137454332266c6f676f3d646973636f7264266c6f676f436f6c6f723d666666666666267374796c653d666c61742d737175617265" alt="Join the discord server at https://discord.com/invite/ngrx"&gt;&lt;/a&gt;
&lt;a href="https://commitizen.github.io/cz-cli/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aca3301042bdedae125df537db587fe82c2123dc8a2c46f0859840b5fa4b7f1a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6d6d6974697a656e2d667269656e646c792d627269676874677265656e2e737667" alt="Commitizen friendly"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/@ngrx/store" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fca0b0f9549e875e27275b1447b77657e6f6ce0aec26400f12fb5455ad996620/68747470733a2f2f62616467652e667572792e696f2f6a732f2534306e67727825324673746f72652e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Check out our website: &lt;a href="https://ngrx.io" rel="nofollow"&gt;ngrx.io&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;NgRx is a community-driven project. Read our &lt;a href="https://github.com/ngrx/platform./CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; on how to get involved.&lt;/p&gt;
&lt;h2&gt;
Sponsoring NgRx&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/ngrx/platform#backers"&gt;&lt;img src="https://camo.githubusercontent.com/c44b84a54a64eb0bdfdb66b3ab58fcf8aaa10fea4d76e9346f6e18796aab26d9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f6261636b6572732f62616467652e737667" alt="Backers on Open Collective"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Become a gold sponsor and get your logo on our README on GitHub and the front page of &lt;a href="https://ngrx.io" rel="nofollow"&gt;ngrx.io&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
Gold Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/ngrx/tiers/gold-sponsors/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9a96b2d6393931349110b6cadfec2eb141d299ed913887e43cb371c2c3692daa/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f676f6c642d73706f6e736f72732f302f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/gold-sponsors/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/63d914b55c4a2f73cf5fd57cc015b2a1e67d12e75013b56d8c316bdbd7c93d51/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f676f6c642d73706f6e736f72732f312f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/gold-sponsors/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d27ee9b6e2d96cd36d16473ba168e87f0aea54deae0bd574e2440111568cb210/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f676f6c642d73706f6e736f72732f322f6176617461722e737667"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Silver Sponsors&lt;/h3&gt;
&lt;p&gt;Become a silver sponsor and get your logo on our README on GitHub and our website &lt;a href="https://ngrx.io" rel="nofollow"&gt;ngrx.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/ngrx/tiers/silver-sponsors/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/144b81e59a797cbe1360f9a04bb1235470ac714c9c732e85c56e93b1bc2dc908/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f73696c7665722d73706f6e736f72732f302f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/silver-sponsors/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ecbbd3d9ebd8ac95a14ca0c4c35045dc53ad8e1bc09758921d82bff3ece5ed43/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f73696c7665722d73706f6e736f72732f312f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/silver-sponsors/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b50345c7395a26701f7df21b842da7b0a6f84778ed9637f378b6d8f41cecdd8d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f73696c7665722d73706f6e736f72732f322f6176617461722e737667"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Bronze Sponsors&lt;/h3&gt;
&lt;p&gt;Become a bronze sponsor and get your logo on our README on GitHub.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3e7ec10fe4747608b2a48722487b98703ad81280c5d54b88f4b7ae024101b9b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f302f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b6a8cb27b59568460a57bdc74b27b612d53293605a6fbfa10b02f3564a9855e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f312f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3d1c28dbb56b560e4fbd6198a5482545e2a89154f1b9011298cb002e5290009c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f322f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/925397ea77eaddd6c80c62837f29082c9cd197be1fca866bb3a433f9954d0fde/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f332f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d48ce9f1de1daf6fa2c0dcb3550648ec373e36d0d7a0a6d03721fe4f658941f4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f342f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a896673d1df08b838bba6b35af86d2b79a08ce5b5c10407a5432661c6042a371/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f352f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f4e95a996f30b4211330ab902a99f9a33a973e77ce0435ecc5642430288ecba7/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f362f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3fd91605032641e598297315997146df08080a76e0575495999c8f612eeeb3f2/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f372f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c56c76bf2696c3b7c27e23348ba64b5faa70bead36a085a15a310113d8e2ffa/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f382f6176617461722e737667"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/ngrx/tiers/bronze-sponsors/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/53df2edd08cee2fcfad18db2c0539772f3518d54b07611da910b58d1e444b367/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6772782f74696572732f62726f6e7a652d73706f6e736f72732f392f6176617461722e737667"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ngrx/platform"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;If you want to learn more about Ngrx, check out our Open Source Friday stream featuring Ngrx maintainer, Brandon Roberts, and GitHub's Director of Developer Advocacy, Brian Douglas.&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yVkwPhodm7k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>jamstack</category>
      <category>opensource</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Always do these 16 things when you're taking screening calls with recruiters</title>
      <author>Eliot Sanford</author>
      <pubDate>Tue, 26 Oct 2021 21:10:46 +0000</pubDate>
      <link>https://dev.to/techieeliot/always-do-these-16-things-when-youre-taking-screening-calls-with-recruiters-40e2</link>
      <guid>https://dev.to/techieeliot/always-do-these-16-things-when-youre-taking-screening-calls-with-recruiters-40e2</guid>
      <description>&lt;p&gt;When doing a screening call with a recruiter ALWAYS have these 16 down:&lt;/p&gt;

&lt;p&gt;1 - have shared your updated resume before the call&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;include portfolio page, GitHub, + LinkedIn profile on resume&lt;/li&gt;
&lt;li&gt;few things slows it down like no updated resume&lt;/li&gt;
&lt;li&gt;&lt;p&gt;offer to share pdf and word doc&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the word doc is often appreciated by the recruiter to prepare before sending to the client&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6HEO4jwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/413kmk5clj4yzlas1k24.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6HEO4jwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/413kmk5clj4yzlas1k24.jpeg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2 - be able to quickly in &amp;lt; 2 min. preferably tell:&lt;/p&gt;

&lt;p&gt;a. what you're excited about doing&lt;br&gt;
b. share your story&lt;br&gt;
c. share the number of years or months you have with each of the three main required skill&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sharing years before them (be proactive because they will ask)&lt;/li&gt;
&lt;li&gt;show passion to learn&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3 - prepare to tell what are you currently doing in &amp;lt; 1 min. preferably&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;what you do like you're telling a 6 year old&lt;/li&gt;
&lt;li&gt;avoid using company or industry jargon&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No experience?&lt;/p&gt;

&lt;p&gt;Place a high priority on gaining experience by networking and making "intern" experience, e.g. offering to build an app&lt;/p&gt;

&lt;p&gt;4 - look up the company's web presence and prepare to tell why you want to work there&lt;/p&gt;

&lt;p&gt;keys to focus on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;company website (what do they do?)&lt;/li&gt;
&lt;li&gt;what's the mission of the company in your own words&lt;/li&gt;
&lt;li&gt;view social media accounts to see what they value&lt;/li&gt;
&lt;li&gt;view reviews like Glassdoor and/or talk with current employees if possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rO2DaEyb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpae33mtwk8w8tkig0yi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rO2DaEyb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpae33mtwk8w8tkig0yi.jpeg" alt="Image description" width="640" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5 - prepare your 1-3 most polished and most recent projects in a public repo and on a deployed url and have them ready to share when requested&lt;/p&gt;

&lt;p&gt;Stallers here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;projects only in private repos (no public code)&lt;/li&gt;
&lt;li&gt;code older than a year&lt;/li&gt;
&lt;li&gt;public repos don't represent your current ability&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;6 - glance at the job description before chatting with the recruiter or interviewer&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if you don't have it before the call then request it via email or LinkedIn (I wouldn't schedule the call without it)&lt;/li&gt;
&lt;li&gt;note the tech and soft skills&lt;/li&gt;
&lt;li&gt;find out what the top 3 must haves are&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;7 - be prepared and be on-time&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;get sleep the night before&lt;/li&gt;
&lt;li&gt;have energy for the call&lt;/li&gt;
&lt;li&gt;have a clean, quiet distraction-free workspace for the call from desktop preferably&lt;/li&gt;
&lt;li&gt;if you've not got these 3, then reschedule&lt;/li&gt;
&lt;li&gt;arrive at least a couple of minutes before time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ELmwv78b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olgs8th6kaxhjjggylac.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ELmwv78b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olgs8th6kaxhjjggylac.jpeg" alt="Image description" width="640" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;8 - seek to get to know the recruiter's story&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;where are they from?&lt;/li&gt;
&lt;li&gt;what cause them to become a recruiter?&lt;/li&gt;
&lt;li&gt;how many people have they place at this company and other companies in the past year?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most recruiters are never asked this and appreciate it when they are.&lt;/p&gt;

&lt;p&gt;9 - seek to know what sort of rapport the recruiter has with not just the company but the hiring manager&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if not much then ask if they have a company with similar needs that they would&lt;/li&gt;
&lt;li&gt;ask them if their senior's in their company have rapport at the company&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;10 - ask what the interview process is like&lt;/p&gt;

&lt;p&gt;This gives you heads up if:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the process is one-off or it's a 5-step process&lt;/li&gt;
&lt;li&gt;the next step will happen in a week or tomorrow&lt;/li&gt;
&lt;li&gt;it's a technical or cultural interview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;11 - know your availability for the next week&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;have your calendar bookmarked &lt;/li&gt;
&lt;li&gt;be ready to tell them a few best times&lt;/li&gt;
&lt;li&gt;understand if the scheduled time is a zoom call invite or a phone screen&lt;/li&gt;
&lt;li&gt;accept the calendar invite&lt;/li&gt;
&lt;li&gt;create a reminder if one is not sent to you&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CBzvpenW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvee8f2p223zqlvvx9r7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CBzvpenW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvee8f2p223zqlvvx9r7.jpeg" alt="Image description" width="640" height="960"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;12 - ask what is the specific team that you're going to work on and the size&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it makes a difference if you'll be working on a front-facing app for customers or the internal app for the employees&lt;/li&gt;
&lt;li&gt;is your team all remote and made up of 10-15 people or is it a small team &amp;lt; 5 devs?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;13 - seek to understand the scenario that you'll be walking into&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;has the role been open for 6 months or was it just available today?&lt;/li&gt;
&lt;li&gt;was someone fired or is it a brand-new team?&lt;/li&gt;
&lt;li&gt;are there colleagues from the team who've been with the company a long time?&lt;/li&gt;
&lt;li&gt;is it agile?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;14 - know the salary range that you would need to take the sort of role that they're asking you to fill&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if you're uncomfortable to answer then ask some questions and tell them you'll return to answering when you've gotten some answers&lt;/li&gt;
&lt;li&gt;ask if contract-hire or direct&lt;/li&gt;
&lt;li&gt;ask them what's the total compensation package&lt;/li&gt;
&lt;li&gt;how have comparable candidates been paid (also gives you an idea if they've placed devs in the team)&lt;/li&gt;
&lt;li&gt;if contract to hire will they submit a conversion salary&lt;/li&gt;
&lt;li&gt;if contract do you get full health benefits and PTO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;15 - seek to understand what the hesitations would be with you as a candidate and seek to know how you would mitigate those and ask again at the end of the call whether they have hesitations&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the best scenario is that they have zero hesitation&lt;/li&gt;
&lt;li&gt;if they have hang-ups, address it without being defensive or hurting your prospects&lt;/li&gt;
&lt;li&gt;do sell your strengths and your passion&lt;/li&gt;
&lt;li&gt;tell them that you want the role&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o_hcP02P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/796hlsbrii5d2pa1md6t.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o_hcP02P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/796hlsbrii5d2pa1md6t.jpeg" alt="Image description" width="640" height="960"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;16 - seek to know all the tips and advice that the recruiters have to share&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ask and you shall receive&lt;/li&gt;
&lt;li&gt;good recruiters explode with every bit of information that they've got to help you succeed&lt;/li&gt;
&lt;li&gt;bad recruiters will have not gotten this far with you and moved to the next quota&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's it. That's all the nuggets I have. Trust me, the more time you spend putting focus here, the better your odds will be of landing a great role that you enjoy. I'm rooting for you to get the role. Now go seize your next role.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>productivity</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Deploy Rails and Sidekiq to Render.com using YAML</title>
      <author>Ayush Newatia</author>
      <pubDate>Tue, 26 Oct 2021 21:07:58 +0000</pubDate>
      <link>https://dev.to/ayushn21/deploy-rails-and-sidekiq-to-rendercom-using-yaml-346</link>
      <guid>https://dev.to/ayushn21/deploy-rails-and-sidekiq-to-rendercom-using-yaml-346</guid>
      <description>&lt;p&gt;&lt;a href="https://render.com"&gt;Render.com&lt;/a&gt; is a new Platform-as-a-service offering that's a great alternative to Heroku. Rather than think in terms of "apps" as Heroku does; Render has the concept of "services". So your Rails app would be a service; your database would be another service; Redis would be another service etc. Services could also potentially be shared between multiple apps.  &lt;/p&gt;

&lt;p&gt;Any non-trivial Rails app these days needs &lt;a href="https://guides.rubyonrails.org/active_job_basics.html"&gt;Background Jobs&lt;/a&gt; and a popular framework for this is &lt;a href="http://github.com/mperham/sidekiq/"&gt;Sidekiq&lt;/a&gt;. Sidekiq uses Redis as a data store. This means we need to deploy 4 services to Render to run our app:  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Rails web service&lt;/li&gt;
&lt;li&gt;Sidekiq background service&lt;/li&gt;
&lt;li&gt;PostgreSQL database&lt;/li&gt;
&lt;li&gt;Redis&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Render supports "infrastructure as code" so we're going to define these services in a YAML file so it's tracked in &lt;code&gt;git&lt;/code&gt; along with our application code. Ruby environments are supported natively and they also have a managed PostgreSQL database offering. For anything else we need to use a Docker image, so using Redis is a tiny bit trickier.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;At the time of writing,&lt;/em&gt; &lt;a href="https://feedback.render.com/features/p/managed-redis"&gt;&lt;em&gt;Render is working on a managed Redis offering&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. When that's live, it should be easier to deploy and manage a Redis service.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Render supports 3 service types:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web service [&lt;em&gt;exposed to the internet via&lt;/em&gt; &lt;code&gt;https&lt;/code&gt; &lt;em&gt;on port 80&lt;/em&gt;]&lt;/li&gt;
&lt;li&gt;Private service [&lt;em&gt;exposed only to all your other services&lt;/em&gt;]&lt;/li&gt;
&lt;li&gt;Background worker [&lt;em&gt;not exposed to the network at all&lt;/em&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#rails-on-render"&gt;
  &lt;/a&gt;
  Rails on Render
&lt;/h2&gt;

&lt;p&gt;We'll deploy the Rails web app as a web service, the Sidekiq worker as a background worker and Redis as a private service using a &lt;a href="http://github.com/render-examples/redis"&gt;Render maintained &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;Firstly, we need to update our database and Puma configurations for production. Follow &lt;a href="https://render-web.onrender.com/docs/deploy-rails#go-production-ready"&gt;this section from Render's Rails deployment guide&lt;/a&gt; and then return to this post.  &lt;/p&gt;

&lt;p&gt;Then, we need to add a build script that will be run when the app is deployed. Create a file called &lt;code&gt;render-build.sh&lt;/code&gt; in your &lt;code&gt;bin&lt;/code&gt; directory and add the following contents:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class="c"&gt;# exit on error&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; errexit

bundle &lt;span class="nb"&gt;install
&lt;/span&gt;bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake assets:precompile
bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake assets:clean
bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This script is also from Render's&lt;/em&gt; &lt;a href="https://render-web.onrender.com/docs/deploy-rails#create-a-build-script"&gt;&lt;em&gt;Rails deployment guide&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ensure the script is executable by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;chmod &lt;/span&gt;a+x bin/render-build.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, we create our infrastructure specification. In your project root, create a file called &lt;code&gt;render.yaml&lt;/code&gt; and paste in the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;web&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-web&lt;/span&gt;
    &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ruby&lt;/span&gt;
    &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;frankfurt&lt;/span&gt; &lt;span class="c1"&gt;# or oregon&lt;/span&gt;
    &lt;span class="na"&gt;plan&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;starter&lt;/span&gt;
    &lt;span class="na"&gt;numInstances&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="na"&gt;buildCommand&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;./bin/render-build.sh&lt;/span&gt;
    &lt;span class="na"&gt;startCommand&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;REDIS_URL="redis://${REDIS_HOST}" bundle exec puma -C config/puma.rb&lt;/span&gt;
    &lt;span class="na"&gt;domains&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;example.com&lt;/span&gt; &lt;span class="c1"&gt;# replace with your domain name&lt;/span&gt;
    &lt;span class="na"&gt;envVars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DATABASE_URL&lt;/span&gt;
        &lt;span class="na"&gt;fromDatabase&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-db&lt;/span&gt;
          &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;connectionString&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;REDIS_HOST&lt;/span&gt;
        &lt;span class="na"&gt;fromService&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-redis&lt;/span&gt;
          &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pserv&lt;/span&gt;
          &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;hostport&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;RAILS_MASTER_KEY&lt;/span&gt;
        &lt;span class="na"&gt;sync&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;worker&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-sidekiq&lt;/span&gt;
    &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ruby&lt;/span&gt;
    &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;frankfurt&lt;/span&gt; &lt;span class="c1"&gt;# or oregon&lt;/span&gt;
    &lt;span class="na"&gt;plan&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;starter&lt;/span&gt;
    &lt;span class="na"&gt;buildCommand&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bundle install &amp;amp;&amp;amp; bundle exec rake assets:precompile&lt;/span&gt;
    &lt;span class="na"&gt;startCommand&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;REDIS_URL="redis://${REDIS_HOST}" bundle exec sidekiq -e production&lt;/span&gt;
    &lt;span class="na"&gt;envVars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DATABASE_URL&lt;/span&gt;
        &lt;span class="na"&gt;fromDatabase&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-db&lt;/span&gt;
          &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;connectionString&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;REDIS_HOST&lt;/span&gt;
        &lt;span class="na"&gt;fromService&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-redis&lt;/span&gt;
          &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pserv&lt;/span&gt;
          &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;hostport&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;RAILS_MASTER_KEY&lt;/span&gt;
        &lt;span class="na"&gt;sync&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pserv&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-redis&lt;/span&gt;
    &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker&lt;/span&gt;
    &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;frankfurt&lt;/span&gt; &lt;span class="c1"&gt;# or oregon&lt;/span&gt;
    &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://github.com/render-examples/redis.git&lt;/span&gt;
    &lt;span class="na"&gt;numInstances&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="na"&gt;disk&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-redis-data&lt;/span&gt;
      &lt;span class="na"&gt;mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/lib/redis&lt;/span&gt;
      &lt;span class="na"&gt;sizeGB&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="na"&gt;databases&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;myapp-db&lt;/span&gt;
    &lt;span class="na"&gt;plan&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;starter&lt;/span&gt;
    &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;frankfurt&lt;/span&gt; &lt;span class="c1"&gt;# or oregon&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The full Render YAML specification is&lt;/em&gt; &lt;a href="https://render-web.onrender.com/docs/yaml-spec"&gt;&lt;em&gt;available here&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most of the above file should be self explanatory. I recommend changing the service names to something specific to your app. The only tricky bit is providing the &lt;code&gt;REDIS_URL&lt;/code&gt; environment variable to our Rails and Sidekiq services. Unlike PostgreSQL which is a managed service, Redis is a generic private service; so the only the host name and port is given to us in environment variables by the Render platform. This means we need to add the &lt;code&gt;redis://&lt;/code&gt; protocol directive to the URL on our own.   &lt;/p&gt;

&lt;p&gt;I found that the easiest way to do this was interpolate the &lt;code&gt;REDIS_HOST&lt;/code&gt; environment variable that Render gives us to create a &lt;code&gt;REDIS_URL&lt;/code&gt; variable in the &lt;code&gt;startCommand&lt;/code&gt; for our services. You can how this is done in the Rails and Sidekiq services above.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;If you run the Rails console in the Render dashboard, you'll need to invoke it using&lt;/em&gt; &lt;code&gt;REDIS_URL="redis://${REDIS_HOST}" bundle exec rails console&lt;/code&gt; otherwise the console process won't be able to find the Redis service.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And finally, all we need to do is connect this YAML file to Render. Go to the Render dashboard, click &lt;strong&gt;New&lt;/strong&gt; in the top right corner and select &lt;strong&gt;Blueprint&lt;/strong&gt;.   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T7JAg3R1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.chapter24.blog/1634677726VzxY8lo8FiZM-AkRYp7Ygw" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T7JAg3R1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.chapter24.blog/1634677726VzxY8lo8FiZM-AkRYp7Ygw" width="400" height="337"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow the on screen instructions to connect your repository and you should be good to go!  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I'm using the above approach in my app: &lt;a href="https://scattergun.email"&gt;Scattergun&lt;/a&gt;. So far I'm really happy with it. I'm excited to see what the Render team has in store for the future and personally I plan to use them for all my projects in the foreseeable future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://render-web.onrender.com/docs/deploy-rails"&gt;Render's guide to deploying Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://render-web.onrender.com/docs/deploy-sidekiq-worker"&gt;Render's guide to deploying Sidekiq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/render-examples/redis"&gt;Render's guide to deploy persistent Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://render.com/render-vs-heroku-comparison"&gt;Render vs Heroku&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Scattergun is the easiest way to collect email addresses on your landing page and send emails to your mailing list.&lt;/em&gt; &lt;a href="https://scattergun.email"&gt;&lt;em&gt;Get started for free&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt; &lt;/p&gt;

</description>
      <category>rails</category>
      <category>render</category>
      <category>devops</category>
      <category>yaml</category>
    </item>
    <item>
      <title>How to make a stunning README for your Github profile.
</title>
      <author>DivineFavour</author>
      <pubDate>Tue, 26 Oct 2021 20:58:57 +0000</pubDate>
      <link>https://dev.to/favor/how-to-make-a-stunning-readme-for-your-github-profile-5e8g</link>
      <guid>https://dev.to/favor/how-to-make-a-stunning-readme-for-your-github-profile-5e8g</guid>
      <description>&lt;p&gt;Hey I'm Favor, a 13 year old self-taught front-end web developer very passionate about programming ❤️ I've not been writing for some time due to the preparations I've been making for the new school session. Yay, I'm in high school!! 💃💃 So, let's jump right into our story 👇&lt;/p&gt;

&lt;p&gt;...From time to time, when you visit people's Github profiles, you may find amazing animations, pictures and fancy texts. All these are included in the new Github profile READMEs. In this article I'll show you how to make yours as stunning as theirs 😸&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xt0vI6A5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awmdk1e5ye5kqc2ys9k2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xt0vI6A5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awmdk1e5ye5kqc2ys9k2.png" alt="My Github Profile"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nmasi322/"&gt;https://github.com/nmasi322/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-your-readme-file"&gt;
  &lt;/a&gt;
  Creating your README file
&lt;/h2&gt;

&lt;p&gt;To create your README Github profile got to  &lt;a href="https://github.com/new"&gt;https://github.com/new&lt;/a&gt; and create a new repository. Name the repository with your username in that case, mine would be nmasi322/nmasi322 Now it's typed in, you will receive a message telling you about this secret/special repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tazB-26i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rxa369chzbgaqvk9tga.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tazB-26i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rxa369chzbgaqvk9tga.png" alt="Creating a new repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is all you need to do here. With that said, you can include any other files like code, pictures, GIFs etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-it-stand-out"&gt;
  &lt;/a&gt;
  Making it stand out
&lt;/h2&gt;

&lt;p&gt;You now have your personal README profile, and you could just add your mail, social media links and toss it out for the world to see but guess what? YOUR PROFILE IS VERY BOOORRRIIINNNGGGG 😴💤. It's so boring that recruiters might just skip your profile, but I can help you style this profile in a few minutes. Just follow the steps below.👇&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#your-header"&gt;
  &lt;/a&gt;
  Your header
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can create a beautiful header at &lt;a href="https://xscoder.com/ths/?ref=producthunt"&gt;https://xscoder.com/ths/?ref=producthunt&lt;/a&gt;, which is where I created mine, or just have your writeup there.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a62KlAS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ypmzzxi19t1gz13c8wt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a62KlAS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ypmzzxi19t1gz13c8wt.png" alt="My header Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Next, you should have a little introduction of yourself and what you do or love to do 👩‍💻&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1NOOny6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0a5om45m5fk2vfaid8d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1NOOny6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0a5om45m5fk2vfaid8d.png" alt="A little intro of myself"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can then add your social media link through which people can contact you. You can do it when editing your README file below. Press ctrl + k or command + k on your computer to show the link option. The title goes in the square brackets [], while the link goes in the parenthesis ().&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9DOEBSbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bul4744zncuve90etzly.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9DOEBSbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bul4744zncuve90etzly.png" alt="Adding your social media links"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Next is your different skills. Feel free to show the different skills which you have acquired in your field 🦚&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sX5ez-Rl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbypwu7lrz1dadmbon3p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sX5ez-Rl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbypwu7lrz1dadmbon3p.png" alt="Skills section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Then, you can add your extra-curricular activities in the next section. I added my recent blogs in this section.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xS4Ti2jU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw346ztq80x4vxyuisq0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xS4Ti2jU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw346ztq80x4vxyuisq0.png" alt="Extra-curricular activities"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;And finally you can add the special Github Profile Stats by pasting the link below in your README file.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[![My GitHub Stats](https://github-readme-stats.vercel.app/api/?username=YOUR_USERNAME&amp;amp;count_private=true&amp;amp;theme=react&amp;amp;showicons=true)]()

[![My GitHub Language Stats](https://github-readme-stats.vercel.app/api/top-langs/?username=YOUR_USERNAME&amp;amp;langs_count=5&amp;amp;theme=react)]()

[![My Contribution Stats](https://github-contribution-stats.vercel.app/api/?username=YOUR_USERNAME)](https://github.com/YOUR_USERNAME/github-contribution-stats/)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace YOUR_USERNAME with your Github profile username. You can pin your repositories below your README file and this is how you do it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;At the top right corner of your profile, click "Your Profile"&lt;/li&gt;
&lt;li&gt;Move down to "Customize your pins"&lt;/li&gt;
&lt;li&gt;Click on the pins you wish to pin to your profile and voila! Your awesome profile is now complete. Don't forget to regularly create repos or projects and upload them to your Github account.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope this article was helpful if it was not, I'm sorry to let you down but I'll try better next time. Until I write again, ❤️ Divine.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>github</category>
    </item>
    <item>
      <title>Looking for the Coolest 404 Message</title>
      <author>michelledev</author>
      <pubDate>Tue, 26 Oct 2021 20:57:49 +0000</pubDate>
      <link>https://dev.to/michelledev3/looking-for-the-coolest-404-message-48eo</link>
      <guid>https://dev.to/michelledev3/looking-for-the-coolest-404-message-48eo</guid>
      <description>&lt;p&gt;I am updating our website and want to change up the 404 message. We are a developer software enterprise solution company.&lt;br&gt;&lt;br&gt;
Do 404 messages help? Does it matter? &lt;/p&gt;

&lt;p&gt;I love to be entertained and hate when there are 404 errors (who doesn't right?), but I am looking for a clever, simple, modern concept.  What's your most memorable 404 message. I found a few from a HubSpot article.&lt;/p&gt;

&lt;p&gt;GitHub&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WOSRe4Tt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/072etaba6t92hur2bs5d.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WOSRe4Tt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/072etaba6t92hur2bs5d.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
BrandCrowd &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rVQV-iwr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2vprmn3f1zlegfprmfx.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rVQV-iwr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2vprmn3f1zlegfprmfx.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
CSS Tricks !&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TbsSRHe_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyd45eaxvtoqduumvtlp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TbsSRHe_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyd45eaxvtoqduumvtlp.jpg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
I would love to hear from you are your favorite 404 messages.  Hit me up!&lt;/p&gt;

&lt;p&gt;Thanks for inspiration Rachel Leist @rachelleist&lt;br&gt;
Data Source: &lt;a href="https://blog.hubspot.com/blog/tabid/6307/bid/33766/10-clever-website-error-messages-from-creative-companies.aspx"&gt;https://blog.hubspot.com/blog/tabid/6307/bid/33766/10-clever-website-error-messages-from-creative-companies.aspx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>webdev</category>
      <category>gamedev</category>
    </item>
  </channel>
</rss>
