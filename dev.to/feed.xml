<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What if your web project was a house painting job?</title>
      <author>aleksandarPerc</author>
      <pubDate>Mon, 14 Jun 2021 11:36:08 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/what-if-your-web-project-was-a-house-painting-job-3p8b</link>
      <guid>https://dev.to/bornfightcompany/what-if-your-web-project-was-a-house-painting-job-3p8b</guid>
      <description>&lt;p&gt;I had several jobs in my life, and one of them was painting houses. &lt;br&gt;
This post is not an anecdote, instead, it is an analogy between our work as developers and something more familiar to the rest of the world.&lt;/p&gt;

&lt;p&gt;So, let's get started!&lt;/p&gt;

&lt;p&gt;What if your next job was as a painter instead of a front-end (or any other) JS developer? And you had a "standard" team you would have in a web project... &lt;br&gt;
So, you have your manager, designer, backend developer, and, of course, a client.&lt;br&gt;
And here the usual story goes... Your client Mr. C asks of you an offer for painting the interiors of his house. &lt;br&gt;
The manager wants to make an impression on the client, and rushes to the team and asks for an estimate on the work required.&lt;br&gt;
The team gathers and starts to discuss. The usual questions pop out and the manager has the answers ready, how many square meters does the house have, how many windows and doors, does it have furniture... All of a sudden the designer asks the purpose/type of the house, and everybody turns to him and gives him "the look". Why would he ask such a stupid question? The client asked to paint the house, why can't he just say what colors to use on which wall and get it over? Everybody ignores him and continues to estimate.&lt;br&gt;
After a few seconds, a question pops in your head and you say it out loud "how old is the house", since you are the most experienced painter in the team it seems logical to ask such a question because... but the manager interrupts your thoughts with a loud voice, making sure everybody understands what he is saying "could we cut the stupid questions? WTF has the age of a house have to do with our job? Please focus on the estimate". You doubt yourself a little bit and go silent until everybody will be in a better mood.&lt;/p&gt;

&lt;p&gt;After an hour everybody has put his expertise to work and came out with an estimate.&lt;br&gt;
For a house of 100m2 = 325m2 to paint (the ceiling is at 2.25m so there is 10x10x2.25 of sidewalls and the ceiling)&lt;/p&gt;

&lt;p&gt;Design: €300&lt;br&gt;
Painting: €1300 (€4/m2 * 325)&lt;br&gt;
Material: cca €300&lt;br&gt;
Total: €1900&lt;/p&gt;

&lt;p&gt;But the manager gives a second thought and decides he will add 30% to the €1900 and rounds it a little bit.&lt;br&gt;
It is time to give the offer to the client. The client accepts delightfully the offer of €2500, which is much less than he expected.&lt;/p&gt;

&lt;p&gt;The manager comes back to the team and "We have a contract! We are gonna earn some money!!". &lt;br&gt;
Everybody is cheerful and the manager hands the address of the house. WAIT!! The developer realizes that the house is 50km up in the hills and they will have to travel each day to that location. The manager makes a quick adjustment to the project and proposes to work longer hours but they will have fewer days to travel. Not everybody is happy but it is what it is.&lt;br&gt;
The next morning everybody is pumped out and just wants to get started. Even the manager decided to give a hand. They go to the store and buy the paint and brushes and head up to the hills for an hour-long ride.&lt;/p&gt;

&lt;p&gt;It was an older house but well preserved, at least it looked like that from the outside. The team unpacked and entered the house. The inner walls had some cracks and they needed to be filled before they start painting. They realized they didn't bring any filler,. so the manager jumps in the car in an "agile" way and heads to the shop, while the designer and two painters start enlarging the cracks so the filler can enter.&lt;br&gt;
The manager was back with the filler, which added €50 to the costs and an additional €120 for impregnation. The store manager recommended it to him because a wall with so many cracks would need it. He openly asked the painter (you) "why didn't you add the filler and impregnation to the costs?" and you reply "I've asked how old the house was, didn't i?". &lt;/p&gt;

&lt;p&gt;You both decided to pass on this one since there was much work to be done and discussing simple mistakes wouldn't help.&lt;/p&gt;

&lt;p&gt;The next day your team and start painting after the impregnation has dried out. Everything is going as planned, apart from moving the furniture. The client said there was furniture, but it was very old and heavy. So it takes a lot of time and effort to move it around. But as a team, you cooperate well and the furniture is out of the way. Because of that, it will take one more day to finish the job, but it is not such an issue since it didn't cause additional costs, apart from the travel.&lt;/p&gt;

&lt;p&gt;The first coat is almost over and you have two more hours of daylight. So the team decides to go out for a beer to celebrate.&lt;/p&gt;

&lt;p&gt;The next day everyone is at the house preparing for work, but you notice that there isn't enough paint to finish the job. The manager pulls out the estimations and all of a sudden his eyes open wide and his head is turning red. "How TF did we mess it up like this?" You take the piece of paper from his moving hand and soon find out that you forgot to calculate the inner walls. The estimate was only for the exterior facing walls, not for the kitchen, bathroom, and other inside walls. In a split of a second everybody is yelling at each other and pointing fingers. For a few minutes the rage goes on, but everybody manages to go quiet, but can't look each other in the face. By making a quick measurement and calculation you estimate that another €200 of paint is needed. The manager jumps into the car and runs off to buy more paint.&lt;br&gt;
As much as the team has put the effort in finishing the job, due to the delays you can't finish it on time. The whole team is traveling home silently. Not a word was spoken.&lt;/p&gt;

&lt;p&gt;The next day you all gather at the house and are in a better mood because there are just several more hours to finish the job and you are off.&lt;/p&gt;

&lt;p&gt;By the end of the day, the work is finished. Everyone is still quiet but the work is done. The team waits for the client so he can take a look at the work and pay you off.&lt;br&gt;
After several minutes in the house, the client is pretty happy with the work done. Everybody looks at each other silently, congratulating each other with a nod. &lt;br&gt;
The client just has one remark and says it out loud "I noticed you didn't cover the furniture and floors, so I guess I'll pay tomorrow when you finish cleaning". And there is one more day and one more travel...&lt;/p&gt;

&lt;p&gt;Now, take a few deep breaths. Try to calm down. Yes, it is happening all around the world.&lt;/p&gt;

&lt;p&gt;There are many things that you can overlook in your project. Even the simplest ones. And it all adds costs to the project and lowers your profit. It is very easy to look in the other way and pretend it is not your job, or even to point fingers saying "You didn't give me enough time", however, there is responsibility toward your team, your firm, client, and in the end toward yourself.&lt;/p&gt;

&lt;p&gt;The potential risks you can anticipate on each project or task are somewhat of an indicator of your and your team's seniority. &lt;br&gt;
If you are solely focused only on immediate risks and currently don't have the mental power to predict possible risks then it means you are at the beginning of your digital career, but also if you predict too many risks and can't tell which are relevant or of higher priority. Education can bring only part of the skills you need, the other part must be "forged in fire".&lt;br&gt;
Start small, and if your team does not have a habit of anticipating/detecting risks, you can do it for yourself, without a spoken word. With time you will get better at it and will be able to do it automatically, without actually thinking about it.&lt;/p&gt;

&lt;p&gt;Projects will come and go, tasks will eventually end up in the Done column, what will not pass, as lightly, is the actions you've made in tough times. So, always have in mind to treat each other with respect and to act and think with the right amount of emotions.&lt;/p&gt;

</description>
      <category>agency</category>
      <category>engineeringmonday</category>
      <category>teamspirit</category>
      <category>projectmanagement</category>
    </item>
    <item>
      <title>Build a Password Generator API on Nodejs</title>
      <author>fawazsullia</author>
      <pubDate>Mon, 14 Jun 2021 11:27:46 +0000</pubDate>
      <link>https://dev.to/fawazsullia/build-a-password-generator-api-on-nodejs-40cm</link>
      <guid>https://dev.to/fawazsullia/build-a-password-generator-api-on-nodejs-40cm</guid>
      <description>&lt;p&gt;Some sites auto generates complex passwords during user signup.&lt;/p&gt;

&lt;p&gt;I found this cool and wanted to try building a similar feature. &lt;/p&gt;

&lt;p&gt;Instead of turning it into an app, I decided to create a public API, so that anyone could use this in their applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;The password by default should have only lower case letters. &lt;/li&gt;
&lt;li&gt;Users can select if they want to add uppercase letters, numbers and characters to it.&lt;/li&gt;
&lt;li&gt;Users can select the password length&lt;/li&gt;
&lt;li&gt;Password should be random with no predictable pattern&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So grab your popcorns, this is going to be a detailed one.&lt;/p&gt;

&lt;p&gt;For you all super curious folks out there, here's the &lt;a href="https://github.com/fawazsullia/password-generator"&gt;link&lt;/a&gt; :)&lt;/p&gt;

&lt;p&gt;Now, on with the tutorial.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tech-requirements"&gt;
  &lt;/a&gt;
  Tech requirements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Nodejs installed&lt;/li&gt;
&lt;li&gt;Express js&lt;/li&gt;
&lt;li&gt;Cors&lt;/li&gt;
&lt;li&gt;dotenv&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-usual-server-stuff"&gt;
  &lt;/a&gt;
  The usual server stuff
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create an empty package.json file inside the directory with npm init&lt;/li&gt;
&lt;li&gt;Next, install dependencies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We need express to handle the routes, cors to allow cross-origin access and dotenv to access our environment variables.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm i express dotenv cors&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Require all the dependencies and your index.js should look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');

const app = express();

const cors = require('cors');

dotenv.configure();

//Defining port

const PORT = process.env.PORT | 5000;

//listen to the server event on PORT

app.listen(PORT)

//Add routes

app.get('/generate', (req, res) =&amp;gt; {
//we will come back here later
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-password-generating-algorithm"&gt;
  &lt;/a&gt;
  The password generating algorithm
&lt;/h2&gt;

&lt;p&gt;To avoid cluttering, we'll write the main algorithm in a separate file.&lt;/p&gt;

&lt;p&gt;Go ahead. Create a file and name it whatever you want.&lt;/p&gt;

&lt;p&gt;I’ll create a wrapper function ( generate-password ) and then export it. This function takes in 4 parameters and will return us the password.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Length of password (default 8)&lt;/li&gt;
&lt;li&gt;Caps required (default false)&lt;/li&gt;
&lt;li&gt;Number required (default false)&lt;/li&gt;
&lt;li&gt;Special character required ( default false )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inside this function, I’ll create 4 different functions that generates lower case, upper case, number and a special character respectively. We will use these functions later.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//generate number

let generateNumber = () =&amp;gt; {
let number = Math.floor(9*Math.random());
return number.toString();
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//generate a special character

let generateChar = () =&amp;gt; {
const charArray = [64, 38, 35, 37, 36, 42, 43];
let index = Math.floor(7*Math.random());
return String.fromCharCode(charArray[index]);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//generate capital letters

let generateCaps = ()=&amp;gt;{
return String.fromCharCode(Math.floor(25 * Math.random() + 65));
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//generate small case letters

let generateSMall = ()=&amp;gt;{
return String.fromCharCode(Math.floor(25 * Math.random() + 97))
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, to generate the whole password, we create a new function that takes in the length of the password required as the parameter.&lt;/p&gt;

&lt;p&gt;Next, create a global array and set it to empty. We will push the password into this.&lt;/p&gt;

&lt;p&gt;We will set the max-number of upper-case letters or special characters or numbers to (password-length)/3. The rest would be small case alphabets.&lt;/p&gt;

&lt;p&gt;The password will contain numbers, uppercase letters or special chars only if the users specify it, if not we go with the default false.&lt;/p&gt;

&lt;p&gt;Let's create 3 if statements. These will push number, sp.char or uppercase to the password array, depending on the wrapper function parameters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//generate the whole pass

let generate = (len) =&amp;gt; {

let turn = Math.floor(len/3);
var rem = len;

if(charRequired){
  let temp = Math.floor(turn * Math.random() + 1);
  for(i=0; i&amp;lt;temp; i++){
    passwordArray.push(generateChar());
    }
  rem = rem - temp;
}

if(numRequired){
  let temp = Math.floor(turn * Math.random() + 1);
  for(i=0; i&amp;lt;temp; i++){
    passwordArray.push(generateNumber());
    }
  rem = rem - temp;
}

if(capsRequired){
  let temp = Math.floor(turn * Math.random() + 1);
  for(i=0; i&amp;lt;temp; i++){
    passwordArray.push(generateCaps());
    }
  rem = rem - temp;
}

for(i=0; i&amp;lt;rem; i++){
  passwordArray.push(generateSMall());
  }

return passwordArray;

};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that, we just only set the upper limit of the type of character pushed to the password array. The actual value is decided by the Math.random() method.&lt;/p&gt;

&lt;p&gt;This pretty much gives us the password, but it's not random enough. Look closely, there's a pattern. The password will always have sp.char, number, uppercase and lowercase in the same order.&lt;/p&gt;

&lt;p&gt;Let’s add one more layer of randomness to it.&lt;/p&gt;

&lt;p&gt;I made use of a standard shuffling algo to jumble the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//shuffle Array
function shuffleArray(arr){
    for (let i = arr.length - 1; i &amp;gt; 0; i--) {
        let j = Math.floor(Math.random() * (i + 1));
        var temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    return arr;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We then convert this into string with &lt;code&gt;array.join()&lt;/code&gt; and return it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#back-to-indexjs"&gt;
  &lt;/a&gt;
  Back to index.js
&lt;/h3&gt;

&lt;p&gt;Let’s add a basic routing.&lt;/p&gt;

&lt;p&gt;I’m using a get method on the “/generate” route. &lt;/p&gt;

&lt;p&gt;Remember that we had 4 parameters for the password generating function? We get values to that using query parameters.&lt;/p&gt;

&lt;p&gt;Destructure caps, num, char, len from req.parameters object.&lt;/p&gt;

&lt;p&gt;Invoke the function with the above password and send the password generated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.get('/generate', cors(), (req, res)=&amp;gt;{

let {caps, num, char, len} = req.query;

let passtoSend = password(num, char, len, caps);
res.status(200).json({ data : passtoSend}).end();
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That’s all.&lt;/p&gt;

&lt;p&gt;The API we just built is accessible at basehost/generate&lt;/p&gt;

&lt;p&gt;You can add query parameters for additional complexity. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-next"&gt;
  &lt;/a&gt;
  What next?
&lt;/h2&gt;

&lt;p&gt;You can either build a similar backend API or a front end that fetches this API to generate passwords for users.&lt;/p&gt;

&lt;p&gt;You can read about accessing the API &lt;a href="https://github.com/fawazsullia/password-generator"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you found this useful, consider connecting with me on &lt;a href="https://www.twitter.com/realfawazsullia"&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;See you in the next one!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>HttpUtility encode vs WebUtility encode</title>
      <author>Santhosh N</author>
      <pubDate>Mon, 14 Jun 2021 11:23:48 +0000</pubDate>
      <link>https://dev.to/santhosjery/httputility-encode-vs-webutility-encode-34e7</link>
      <guid>https://dev.to/santhosjery/httputility-encode-vs-webutility-encode-34e7</guid>
      <description>&lt;p&gt;Hello guys, Today I have learned a difference between HttpUtility.HtmlEncode and WebUtility.HtmlEncode. If you use dot net version less than 4.7 then HttpUtility.HtmlEncode encodes the regional languages. If you want to only html tags need to encode then use WebUtility.HtmlEncode.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var regionalText = "தமிழ்";
        var htmlText = "&amp;lt;script&amp;gt;alert('OK')";

        var httpUtilityRegionalText = HttpUtility.HtmlEncode(regionalText); //&amp;amp;#2980;&amp;amp;#2990;&amp;amp;#3007;&amp;amp;#2996;&amp;amp;#3021;
        var httpUtilityHtmlText = HttpUtility.HtmlEncode(htmlText); //&amp;amp;lt;script&amp;amp;gt;alert(&amp;amp;#39;OK&amp;amp;#39;)

        regionalText = "தமிழ்";
        htmlText = "&amp;lt;script&amp;gt;alert('OK')";

        var webUtilityRegionalText = WebUtility.HtmlEncode(regionalText); //தமிழ்
        var webUtilityHtmlText = WebUtility.HtmlEncode(htmlText); //&amp;amp;lt;script&amp;amp;gt;alert(&amp;amp;#39;OK&amp;amp;#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>csharp</category>
      <category>asp</category>
      <category>aspnet</category>
      <category>webapi</category>
    </item>
    <item>
      <title>Understanding map(), filter() and reduce() in JavaScript</title>
      <author>Aris Zagakos</author>
      <pubDate>Mon, 14 Jun 2021 11:21:03 +0000</pubDate>
      <link>https://dev.to/zagaris/understanding-map-filter-and-reduce-in-javascript-293i</link>
      <guid>https://dev.to/zagaris/understanding-map-filter-and-reduce-in-javascript-293i</guid>
      <description>&lt;p&gt;In the previous post we talked about &lt;a href="https://dev.to/zagaris/understanding-first-class-functions-in-javascript-866"&gt;First Class Functions &lt;/a&gt; and how JavaScript treat functions as a first-class-citizens. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Higher Orders Functions&lt;/code&gt; are functions that either take one or more functions as its arguments and/or return a function. This is a concept that was born out of functional programming. JavaScript, is a language that use a lot of the functional programming concepts and Higher-Order Functions is one of them. &lt;/p&gt;

&lt;p&gt;In this post we will discuss &lt;code&gt;.map()&lt;/code&gt;, &lt;code&gt;.filter()&lt;/code&gt; and &lt;code&gt;.reduce()&lt;/code&gt; that are some of the most well-known and easy to use Higher-Order Functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-raw-map-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;map&lt;/code&gt;?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The map() method creates a &lt;strong&gt;new array&lt;/strong&gt; with the results of &lt;strong&gt;calling a provided function on every element in the calling array&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's say that we want to create a new array that contains the double values of the numbers array.&lt;/p&gt;

&lt;p&gt;A way to do it is to create the function double and call it for every element in the forEach.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#map-written-with-a-foreach"&gt;
  &lt;/a&gt;
  Map written with a forEach
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;double&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Iterate over an array&lt;/span&gt;
&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; 
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// [2 4 6]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is where &lt;code&gt;map&lt;/code&gt; comes into play! Instead of calling the function manually, we can pass the function to map and javascript will call the function on every element for us! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#map-written-without-a-foreach"&gt;
  &lt;/a&gt;
  Map written without a forEach
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;double&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;double&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//[2,4,6]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#now-lets-see-some-other-examples-that-we-can-use-raw-map-endraw-"&gt;
  &lt;/a&gt;
  Now let's see some other examples, that we can use &lt;code&gt;map&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;In the below example we create a new array using map with the full name of each person.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;people&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
    &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Michael&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jordan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;LeBron&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Stephen&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Curry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fullNames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;people&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// [ 'Michael Jordan', 'LeBron James', 'Stephen Curry' ]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fullNames&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the below example we create a new array with the first two letters of each day.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;days&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sunday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Monday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Tuesday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Wednesday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Thursday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Friday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Saturday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newDays&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;days&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// [ 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa' ]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newDays&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#when-should-you-use-a-raw-map-endraw-"&gt;
  &lt;/a&gt;
  When should you use a &lt;code&gt;map&lt;/code&gt;?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;When you want to create a new array of the &lt;strong&gt;same&lt;/strong&gt; length as the original array.&lt;/li&gt;
&lt;li&gt;When you want to transform an array of 1 thing into an array of another thing.&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#what-is-raw-filter-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;filter&lt;/code&gt;?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;filter()&lt;/code&gt; method creates a new array with all elements that pass the test implemented by the provided function. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The call to &lt;code&gt;filter()&lt;/code&gt; will return a new array.&lt;/li&gt;
&lt;li&gt;The callback function used with &lt;code&gt;filter&lt;/code&gt; should either return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;true&lt;/code&gt; if the current element should appear in the new array.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;false&lt;/code&gt; if the current element should NOT appear in the new array.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's say that we want to create a new array that contains the even numbers of the numbers array.&lt;/p&gt;

&lt;p&gt;A way to do it is to create the function isEven to check if the number is even or not and call it for every element in the forEach.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#filter-written-with-a-foreach"&gt;
  &lt;/a&gt;
  Filter written with a forEach
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;evenNumbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isEven&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// 2. Iterate over an array&lt;/span&gt;
&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;evenNumbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// [ 2, 4, 6, 8, 10 ]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evenNumbers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#filter-written-without-a-foreach"&gt;
  &lt;/a&gt;
  Filter written without a forEach
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isEven&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;evenNumbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// [ 2, 4, 6, 8, 10 ]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evenNumbers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#now-lets-see-some-other-examples-that-we-can-use-raw-filter-endraw-"&gt;
  &lt;/a&gt;
  &lt;br&gt;&lt;br&gt;Now let's see some other examples, that we can use &lt;code&gt;filter&lt;/code&gt; &lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;In the below example we create a new array that contains the people that their first_name has six or less characters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;people&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
    &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Michael&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jordan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;LeBron&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Stephen&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Curry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}];&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;short&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;people&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// [ { first_name: 'LeBron', last_name: 'James' } ]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;short&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the below example we have an array that contains the weekly days and we want to create a new array that will contain only the days that the number of their letters is less than 7.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;days&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sunday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Monday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Tuesday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Wednesday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Thursday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Friday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Saturday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// create a new array with only the days that the length of their characters is less than 7&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shortDays&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;days&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// [ 'Sunday', 'Monday', 'Friday' ]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shortDays&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#when-to-use-filter"&gt;
  &lt;/a&gt;
  When to use Filter:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;When you want a new array of a different length, based on some condition that only some elements in the array satisfy.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#what-is-raw-reduce-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;Reduce&lt;/code&gt;?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;reduce()&lt;/code&gt; method applies a function against an accumulator and each element in the array (from left to right) to reduce it to a single value. The accumulator can be anything (integer, string, object, etc.) and must be instantiated or passed when calling reduce().&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;The call to &lt;code&gt;reduce()&lt;/code&gt; will return a single value.&lt;/li&gt;
&lt;li&gt;The callback function used with &lt;code&gt;reduce&lt;/code&gt; will get passed the accumulator value and an element in the array.

&lt;ul&gt;
&lt;li&gt;The accumulator value is the value returned from the last call to the callback function.&lt;/li&gt;
&lt;li&gt;The callback function should always return a value to be used in the next callback.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;The third argument to the &lt;code&gt;reduce()&lt;/code&gt; function is the starting value for the accumulator.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's say that we want to calculate the sum of the numbers array.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reduce-written-with-a-foreach"&gt;
  &lt;/a&gt;
  Reduce written with a forEach
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Iterate over the array&lt;/span&gt;
&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt;  &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// 21&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reduce-written-without-a-foreach"&gt;
  &lt;/a&gt;
  Reduce written without a forEach
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Iterate over the array&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Return the accumulator&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// Initialize accumulator variable&lt;/span&gt;

&lt;span class="c1"&gt;// 21&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's see some other examples, that we can use reduce&lt;/p&gt;

&lt;p&gt;In the below example we create a new object that contains as a key the name of the stock and as a value the frequency of the stock.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stocks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TSLA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;PLTR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TSLA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AAPL&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;PLTR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TSLA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stocks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;stockFreq&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;stock&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stockFreq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stock&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;stockFreq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;stock&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;stockFreq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;stock&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;stockFreq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;

&lt;span class="c1"&gt;// { TSLA: 3, PLTR: 2, AAPL: 1 }&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the below example we create a new string that contains the first two letters of each day.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;days&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sunday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Monday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Tuesday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Wednesday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Thursday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Friday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Saturday&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newDay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;days&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// SuMoTuWeThFrSa&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newDay&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"&gt;MDN: Array.prototype.map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"&gt;MDN: Array.prototype.filter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce"&gt;MDN: Array.prototype.reduce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0R6eX8JrFBA"&gt; Coding Garden Video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>🔴 TechTalk - How to become a Secure Developer in 2021 with Liran Tal</title>
      <author>Shahjada Talukdar</author>
      <pubDate>Mon, 14 Jun 2021 11:20:03 +0000</pubDate>
      <link>https://dev.to/destrodevshow/techtalk-how-to-become-a-secure-developer-in-2021-with-liran-tal-51gf</link>
      <guid>https://dev.to/destrodevshow/techtalk-how-to-become-a-secure-developer-in-2021-with-liran-tal-51gf</guid>
      <description>&lt;p&gt;Hi everyone! 👋&lt;/p&gt;

&lt;p&gt;I have started a LIVE TechTalk show on my channel.&lt;/p&gt;

&lt;p&gt;And on the episode, Liran Tal joined as a Guest.&lt;/p&gt;

&lt;p&gt;Liran is working as a Director of Developer Advocacy at Snyk and is a member of Node.js Foundation Security Working Group.&lt;/p&gt;

&lt;p&gt;He shared some of the tips developers can use to make more secure software.&lt;/p&gt;

&lt;h3&gt;&lt;u&gt;Topic: How to become a Secure Developer in 2021.&lt;/u&gt;&lt;/h3&gt;

&lt;p&gt;You can Watch on YouTube &lt;a href="https://www.youtube.com/watch?v=1hczYOdrA_o"&gt;https://www.youtube.com/watch?v=1hczYOdrA_o&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1hczYOdrA_o"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Enjoy 🌸&lt;/p&gt;

&lt;p&gt;Also SUBSCRIBE to YouTube Channel - &lt;a href="https://www.youtube.com/c/TheDestroDevShow?sub_confirmation=1"&gt;https://www.youtube.com/c/TheDestroDevShow?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LIKE FB Page - &lt;a href="https://www.facebook.com/the.destro.dev.show/"&gt;https://www.facebook.com/the.destro.dev.show/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow on Twitter - &lt;a href="https://twitter.com/destro_mas"&gt;https://twitter.com/destro_mas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow on DEV - &lt;a href="https://dev.to/destro_mas"&gt;https://dev.to/destro_mas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Made with ❤️ in Berlin!&lt;/p&gt;

&lt;p&gt;Cheers!&lt;br&gt;
👋&lt;/p&gt;



&lt;br&gt;
As I am trying to contribute contents on the Web, you can buy me a coffee for my hours spent on all of these ❤️😊🌸

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/destrodevshow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>About Gatsby </title>
      <author>SK</author>
      <pubDate>Mon, 14 Jun 2021 10:27:39 +0000</pubDate>
      <link>https://dev.to/sakethkowtha/about-gatsby-2hm3</link>
      <guid>https://dev.to/sakethkowtha/about-gatsby-2hm3</guid>
      <description>&lt;p&gt;Gatsby is react based &lt;strong&gt;open source&lt;/strong&gt;  framework to create static websites and static web-apps. It is suitable if we are building portfolio sites or blogs or company home pages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-gatsby-"&gt;
  &lt;/a&gt;
  Why Gatsby ?
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;It will build static sites that are &lt;strong&gt;P&lt;/strong&gt;rogressive &lt;strong&gt;W&lt;/strong&gt;eb &lt;strong&gt;A&lt;/strong&gt;pps .&lt;/li&gt;
&lt;li&gt;It will follow the latest &lt;strong&gt;Web standards.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Eco system.&lt;/li&gt;
&lt;li&gt;Gatsby sites are optimised and highly performant.&lt;/li&gt;
&lt;li&gt;It will allow us to work with ReactJs, Webpack, GraphQL, ES6+, Js, Css and CSS-in-JS.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I would like to add one more point i.e Building static sites with &lt;code&gt;react&lt;/code&gt; is not easy. Because if we take &lt;code&gt;create-react-app&lt;/code&gt; as an example it will focus more on &lt;strong&gt;S&lt;/strong&gt;ingle &lt;strong&gt;P&lt;/strong&gt;age &lt;strong&gt;A&lt;/strong&gt;pps but for Routing, Seo, Performance and Optimisation we need to do lot of configuration which gatsby provide as default in starter's.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gatsby-features"&gt;
  &lt;/a&gt;
  Gatsby features
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Supports Reactjs&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;which will help us to build reusable components and make things easier to maintain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Webpack&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;which will help to create minified and optimised bundles.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SCSS and CSS-in-JS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It has support for SCSS, CSS-in-JavaScript libraries, allow us to manage styles better.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Responsive images&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Resizing images based on devices.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;600+ Gatsby plugins&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are lot of gatsby plugins available for &lt;code&gt;responsive-images&lt;/code&gt;, &lt;code&gt;data sources&lt;/code&gt;, &lt;code&gt;offline support&lt;/code&gt;, &lt;code&gt;Mdx&lt;/code&gt; and &lt;code&gt;analytics&lt;/code&gt; etc...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Supports react and npm packages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We can install any &lt;code&gt;npm&lt;/code&gt; package and can use it in the app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gatsby collects data from data sources and make it available via GraphQL. The data sources could be any thing &lt;code&gt;databases&lt;/code&gt; or &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;XML&lt;/code&gt; or &lt;code&gt;wordpress&lt;/code&gt; or &lt;code&gt;text files&lt;/code&gt; etc..&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Gives Smoother experience to user&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gatsby will add smoothness to the app with its features and aims at full app like experience borrowing from PWA.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>gatsby</category>
      <category>netlify</category>
    </item>
    <item>
      <title>Planning your next Software Project</title>
      <author>Menard Maranan</author>
      <pubDate>Mon, 14 Jun 2021 10:16:39 +0000</pubDate>
      <link>https://dev.to/menard_codes/planning-your-next-software-project-37d3</link>
      <guid>https://dev.to/menard_codes/planning-your-next-software-project-37d3</guid>
      <description>&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;em&gt;I'm currently studying software development and Agile, and this blog is a journal of what I just learned about Planning a software product. If you found something is not quite right, please let me know, I love learning from people!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Maybe you once got an idea about a software that you're excited about, but during development phase, you noticed how entangled your project became, and it's hard to keep track of things or even see your progress.&lt;/p&gt;

&lt;p&gt;Or maybe you're like me who always wants to jump right into code once an idea pops up into our head.&lt;/p&gt;

&lt;p&gt;Here is when a good planning; and maybe some research; comes in.&lt;/p&gt;

&lt;p&gt;So how do we start planning?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#start-simple"&gt;
  &lt;/a&gt;
  Start simple
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0suc-Oio--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3hxv2db3e2b1frcqokj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0suc-Oio--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3hxv2db3e2b1frcqokj.jpg" alt="Start simple"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're familiar about &lt;a href="https://dev.to/menard_codes/a-quick-guide-about-scrum-5485"&gt;"Scrum"&lt;/a&gt;, we know that we don't plan our software too specific at start, but instead, we list down the high-level requirements of features of our project (under the product backlog).&lt;/p&gt;

&lt;p&gt;This might be login and sign up, dashboard, account settings, etc.&lt;/p&gt;

&lt;p&gt;From there, we plan our sprint with a duration of 1-4 weeks where we take a requirement from the product backlog, breaks it down further into smaller chunks of todos, and aims to achieve the goal to finish the todos under sprint backlog after the current sprint.&lt;/p&gt;

&lt;p&gt;After each and every sprint, we get an increment, or a &lt;em&gt;'potentially shippable'&lt;/em&gt; product.&lt;/p&gt;

&lt;p&gt;Through this, we can plan out and develop the software quickly without wasting too much time (or even release it to the market prematurely, depending on the product and requirements, or the product owner).&lt;/p&gt;

&lt;p&gt;With an agile mindset, we don't need to plan out everything from start, but instead, we start simple, plan simple, and build incrementally the product.&lt;/p&gt;

&lt;p&gt;And that's the philosophy of Agile.&lt;/p&gt;

&lt;p&gt;We can dive deeper on an issue further down the road or even find an edge case or opportunity that we haven't thought of during planning.&lt;/p&gt;

&lt;p&gt;So start small, have a list of rough ideas or features of your project, take one, break it further down, and dedicate a timeline for your next sprint to develop that feature, then continuously repeat the process. From that, we can build incrementally our software from idea to real world product (perhaps even sell or make money from it!).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-mvp"&gt;
  &lt;/a&gt;
  The MVP
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9kKyMN1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydbb2bl5uawqokexnzut.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9kKyMN1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydbb2bl5uawqokexnzut.jpg" alt="Minimum Viable Product"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MVP or Minimum Viable Product is a very common word in the startup world.&lt;/p&gt;

&lt;p&gt;The idea is you build the core features of your product that can at least represent your idea or solution that is useful to your target market.&lt;/p&gt;

&lt;p&gt;Just for an example, let's say you're planning to build a car. Since it's expensive, complicated, and hard to build, you can start simple and build a skateboard instead. This very minimal product can represent in some way your vision of a vehicle. Not to mention that it's easier and cheaper to build than a car. The best part is that people can even start using it and you can even start selling it to them. From then on, you can incrementally improve and add features to your product, maybe turn it into a scooter, then to a bike, into a motorcycle, and once you had more experience (and hopefully some cash from previous sales) the car.&lt;/p&gt;

&lt;p&gt;So start small, it's better to start somewhere and simpler, than too complex and never shipped to market at all.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#product-or-project-roadmap"&gt;
  &lt;/a&gt;
  Product (or project) Roadmap
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jw9kadd3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4x5v1omieseuhp29lg5s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jw9kadd3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4x5v1omieseuhp29lg5s.jpg" alt="Product Roadmap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is very common to development teams, more often planned by a product manager.&lt;/p&gt;

&lt;p&gt;The product roadmap is a nice visual representation or guide of how you plan to develop the software overtime.&lt;/p&gt;

&lt;p&gt;You specify some todos and align them over a period of time or sprints.&lt;/p&gt;

&lt;p&gt;Since we're doing things the agile way, our deadlines may also be a rough estimate and change depending on the situation or requirements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#product-or-project-requirements"&gt;
  &lt;/a&gt;
  Product (or project) requirements
&lt;/h2&gt;

&lt;p&gt;The product requirements further analyzes the product or feature/s, how it aligns with the vision of the business or the product, and some other metrics such as customer's problems, KPI, etc.&lt;/p&gt;

&lt;p&gt;From this, we understand more about what we are building, gain insight from it (such as whether it's still ideal to produce or not), or maybe we find possible pitfalls, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backlog"&gt;
  &lt;/a&gt;
  Backlog
&lt;/h2&gt;

&lt;p&gt;And here comes the list of the things the team needs to do.&lt;/p&gt;

&lt;p&gt;On Scrum, we start from a Product backlog, which lists down the higher level requirements of our software.&lt;/p&gt;

&lt;p&gt;The other one is Sprint backlog, which are more specific requirements and serves as source for the todo column of the Scrum or Kanban board for the next sprint.&lt;/p&gt;

&lt;p&gt;This serves as our guide on what to build, and helps us boost our performance as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;Building our next software project can be easier if we plan things out before we start, because a good planning will save us tons of frustrations about the complexity of our project, and also gives us a clear picture of our progress.&lt;/p&gt;

&lt;p&gt;Also, we don't need to start complex. It is ideal that we begin simple and small, then gradually build it from the ground up.&lt;/p&gt;

&lt;p&gt;It will be even better if we can sell our software project or make it as a side business (another stream of income can be very rewarding, isn't it?).&lt;/p&gt;

&lt;p&gt;Hopefully this helps, and goodluck for your next project!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-link"&gt;
  &lt;/a&gt;
  My link
&lt;/h2&gt;

&lt;p&gt;Follow me on &lt;a href="//twitter.com/menard_codes"&gt;Twitter&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>productivity</category>
      <category>softwareplanning</category>
      <category>softwaredevelopment</category>
    </item>
    <item>
      <title>What actually motivates you to code?</title>
      <author>hillary</author>
      <pubDate>Mon, 14 Jun 2021 10:15:51 +0000</pubDate>
      <link>https://dev.to/hills2003/what-actually-motivates-you-to-code-15ej</link>
      <guid>https://dev.to/hills2003/what-actually-motivates-you-to-code-15ej</guid>
      <description>&lt;p&gt;to be frank with you guys i have two reasons&lt;/p&gt;

&lt;p&gt;the first one being a solid reason and the second one being a less solid reason......&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;first because of the cool pay and the fact that i can work from home which is absolutely what i love as an introvert&lt;/p&gt;

&lt;p&gt;second which is more or less my favorite ,because i could do cool stuffs with code&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;leave comments on what motivates you to code and why you love coding.....&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>python</category>
      <category>react</category>
    </item>
    <item>
      <title>3 ways to send emails with only few lines of code and Gmail - Javascript - Part 1</title>
      <author>François</author>
      <pubDate>Mon, 14 Jun 2021 10:05:45 +0000</pubDate>
      <link>https://dev.to/fralps/3-ways-to-send-emails-with-only-few-lines-of-code-and-gmail-javascript-part-1-4i92</link>
      <guid>https://dev.to/fralps/3-ways-to-send-emails-with-only-few-lines-of-code-and-gmail-javascript-part-1-4i92</guid>
      <description>&lt;p&gt;&lt;em&gt;We will see how to send a simple email with the help of three different programming languages: Javascript, Ruby and Python&lt;br&gt;
Before you start you need to create a Gmail account.&lt;br&gt;
Do not forget to accept and allow the "Less secure apps" access in order use your scripts with your Gmail smtp connection.&lt;br&gt;
I'll let you do this on your own, you don't need a tutorial for this&lt;/em&gt; 😜&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  Javascript 🚀
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;For the first script, we are going to use the &lt;a href="https://nodemailer.com/about/"&gt;Nodemailer&lt;/a&gt; module:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add nodemailer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Require or import the module into your &lt;code&gt;index.js&lt;/code&gt;:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nodemailer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nodemailer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Initialize the mailer with our Gmail account info:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Gmail account info&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;transporter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nodemailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTransport&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gmail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;youremail@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yourpassword&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Create your email:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Email info&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mailOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;youremail@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myfriend@yopmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sending email using Node.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Easy peasy lemon squeezy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Sending your email:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Send email and retrieve server response&lt;/span&gt;
&lt;span class="nx"&gt;transporter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendMail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mailOptions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Email sent: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here the final code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nodemailer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nodemailer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Gmail account info&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;transporter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nodemailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTransport&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gmail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;youremail@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yourpassword&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Email info&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mailOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;youremail@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myfriend@yopmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sending email using Node.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Easy peasy lemon squeezy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Send email 📧  and retrieve server response&lt;/span&gt;
&lt;span class="nx"&gt;transporter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendMail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mailOptions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Email sent: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#javascript-buddy"&gt;
  &lt;/a&gt;
  Javascript buddy 🤝
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/xUOxeZy7TXZYptBMSA/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/xUOxeZy7TXZYptBMSA/giphy.gif" alt="Javascript buddy"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Javascript 🚀 - Part 1&lt;/li&gt;
&lt;li&gt;Ruby 💎 - Part 2 - coming next week...&lt;/li&gt;
&lt;li&gt;Python 🐍 - Part 3 - coming soon...&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>smtp</category>
      <category>email</category>
      <category>nodemailer</category>
    </item>
    <item>
      <title>Easy Accessible Click Handlers</title>
      <author>Andreas Riedmüller</author>
      <pubDate>Mon, 14 Jun 2021 10:01:29 +0000</pubDate>
      <link>https://dev.to/receter/easy-accessible-click-handlers-4jkb</link>
      <guid>https://dev.to/receter/easy-accessible-click-handlers-4jkb</guid>
      <description>&lt;p&gt;If you add a click event to a non-interactive html element such as a &lt;code&gt;div&lt;/code&gt; you should also add keyboard support. For interactive elements like a &lt;code&gt;button&lt;/code&gt; this is already taken care of by the browser.&lt;/p&gt;

&lt;p&gt;If you use &lt;code&gt;eslint-plugin-jsx-a11y&lt;/code&gt; you will see this warning when you add an &lt;code&gt;onClick&lt;/code&gt; event:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;71:13  warning  Visible, non-interactive elements with click handlers must have at least one keyboard listener jsx-a11y/click-events-have-key-events
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get rid of this warning, my default approach is to add an additional handler for &lt;code&gt;onKeyDown&lt;/code&gt;, filter for the enter key and trigger the same event as I have for &lt;code&gt;onClick&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Additionally I add the &lt;code&gt;role&lt;/code&gt; and &lt;code&gt;tabIndex&lt;/code&gt; attributes as recommended.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;setWhatever&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleKeyDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyCode&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
  &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;tabIndex&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;onKeyDown&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleKeyDown&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click me!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In comparison to a button this adds quite lot of code and markup and makes simple components often look more complex than they really are:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;setWhatever&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click me!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To avoid this, you can add a simple helper function that returns all required attributes, I called mine &lt;code&gt;accessibleOnClick&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;filterKeyEnter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyCode&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;accessibleOnClick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;tabIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tabIndex&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;onKeyDown&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;filterKeyEnter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your JSX you can now use the spread opperator to add all attributes returned by &lt;code&gt;accessibleOnClick&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;setWhatever&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;accessibleOnClick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click me!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is one of my favorite helper functions and I use it on a regular basis.&lt;/p&gt;

&lt;p&gt;Do you have a similar/different approach for this type of click handlers? Let me know!&lt;/p&gt;

</description>
      <category>react</category>
      <category>jsx</category>
      <category>javascript</category>
      <category>a11y</category>
    </item>
    <item>
      <title>15+ Fantastic React UI Libraries to Consider for your Project</title>
      <author>Kingsley Ubah</author>
      <pubDate>Mon, 14 Jun 2021 09:46:13 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/15-fantastic-react-ui-libraries-to-consider-for-your-project-3iio</link>
      <guid>https://dev.to/ubahthebuilder/15-fantastic-react-ui-libraries-to-consider-for-your-project-3iio</guid>
      <description>&lt;p&gt;React is a very popular JavaScript library for building User Interfaces. Using React makes the process of building UIs very simple but you know what makes the process even easier? Using an already-made library.&lt;/p&gt;

&lt;p&gt;Here are over &lt;strong&gt;15&lt;/strong&gt; popular React libraries you might want to consider using for your project:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blueprint"&gt;
  &lt;/a&gt;
  Blueprint
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xjPsSv3f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656423092/1xbNw3d_i.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xjPsSv3f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656423092/1xbNw3d_i.jpeg" alt="Screenshot_20210614-072835.jpg"&gt;&lt;/a&gt;&lt;br&gt;
Blueprint is a React UI toolkit used to create and manage data-intensive user Interfaces for desktop applications &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/palantir/blueprint"&gt;https://github.com/palantir/blueprint&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chakra-ui"&gt;
  &lt;/a&gt;
  Chakra UI
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oGGj8xVm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656457900/EOeRgFKm0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oGGj8xVm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656457900/EOeRgFKm0.jpeg" alt="Screenshot_20210614-080601.jpg"&gt;&lt;/a&gt;&lt;br&gt;
Chakra UI is a React library which offers you simple, modular and accessible components which you can use as building blocks you need to build your React applications. All components are also dark mode compatible.&lt;/p&gt;

&lt;p&gt;Instead of spending hours to code and reinvent the wheel, you can easily use Chakra's components to build your app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/chakra-ui/chakra-ui"&gt;https://github.com/chakra-ui/chakra-ui&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#search-ui"&gt;
  &lt;/a&gt;
  Search UI
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f269LAI---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656499122/cfl1ZJkxF.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f269LAI---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656499122/cfl1ZJkxF.jpeg" alt="Screenshot_20210614-080749.jpg"&gt;&lt;/a&gt;&lt;br&gt;
Every content-based websites need some sort of search functionality for retrieving certain parts of content.&lt;/p&gt;

&lt;p&gt;Search UI is a React-based search framework for implementing world-class search functionality without having to code from scratch or reinvent the wheel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/elastic/search-ui"&gt;https://github.com/elastic/search-ui&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ant-design"&gt;
  &lt;/a&gt;
  Ant Design
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A2DZ68s2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656527250/cz0WvaN4f.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A2DZ68s2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656527250/cz0WvaN4f.jpeg" alt="Screenshot_20210614-081156.jpg"&gt;&lt;/a&gt;&lt;br&gt;
Ant Design is an enterprise-grade React UI framework containing a set of tools for creating beautiful and Intuitive User Interfaces for your web application.&lt;/p&gt;

&lt;p&gt;Ant Design is a great choice for building websites targeted for high-end clienteles.&lt;br&gt;
&lt;a href="https://github.com/ant-design/ant-design"&gt;https://github.com/ant-design/ant-design&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#material-ui"&gt;
  &lt;/a&gt;
  Material UI
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9B58xj1w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656557175/OdTnCL2Xq.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9B58xj1w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656557175/OdTnCL2Xq.jpeg" alt="Screenshot_20210614-081301.jpg"&gt;&lt;/a&gt;&lt;br&gt;
The Material Design is an modern design language created by Google, which aid web designers create novel touch experiences in their websites via cue-rich features and natural motions that mimic real-world objects/materials in an immersive form.&lt;/p&gt;

&lt;p&gt;Material UI includes a set of React components for faster and easier process of web design. You can either build your own custom design system or start with the Material Design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mui-org/material-ui"&gt;https://github.com/mui-org/material-ui&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reactstrap"&gt;
  &lt;/a&gt;
  Reactstrap
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GdStGLTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656587494/X7Y51Cgqd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GdStGLTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656587494/X7Y51Cgqd.jpeg" alt="Screenshot_20210614-081420.jpg"&gt;&lt;/a&gt;&lt;br&gt;
Reactstrap is a React-Bootstrap component library. It provides inbuilt Bootstrap components that make it very  easy to create User Interfaces with its self-contained components that provides flexibility and inbuilt validations. Reactstrap is similar to Bootstrap, but with self-contained components. Hence, it's easy to use and support Bootstrap 4.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/reactstrap/reactstrap"&gt;https://github.com/reactstrap/reactstrap&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#smooth-ui"&gt;
  &lt;/a&gt;
  Smooth UI
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5wozbPuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656615239/enHWXcdRMy.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5wozbPuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656615239/enHWXcdRMy.jpeg" alt="Screenshot_20210614-081533.jpg"&gt;&lt;/a&gt;&lt;br&gt;
As it's name implies, this library is focused on user experience and accessibility. Smooth UI makes it is easy to design beautiful websites and applications with clean and smooth features to make for a satisfactory experience for the end user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://smooth-ui.smooth-code.com/"&gt;https://smooth-ui.smooth-code.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-datepicker"&gt;
  &lt;/a&gt;
  React DatePicker
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5v3J-68a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656656191/aVxrlQ0R_l.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5v3J-68a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656656191/aVxrlQ0R_l.jpeg" alt="Screenshot_20210614-081635.jpg"&gt;&lt;/a&gt;&lt;br&gt;
Something for event-based websites. &lt;br&gt;
React DatePicker is a simple, reusable and highly customizable React Component that allows you include date selection functionality to your websites.&lt;/p&gt;

&lt;p&gt;It's very easy to use as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://reactdatepicker.com/"&gt;https://reactdatepicker.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-select"&gt;
  &lt;/a&gt;
  React Select
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NLUb6XlC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656707136/Lgffgx5mr.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NLUb6XlC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656707136/Lgffgx5mr.jpeg" alt="Screenshot_20210614-081737.jpg"&gt;&lt;/a&gt;&lt;br&gt;
Many websites have some sort of checkbox or select control for collecting simple information from the user. React Select houses a beautiful set of select input control with multiselect, autocomplete and other nice features&lt;/p&gt;

&lt;p&gt;&lt;a href="https://react-select.com/home"&gt;https://react-select.com/home&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sortablehoc"&gt;
  &lt;/a&gt;
  Sortable-hoc
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4_cBgI8p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623657208038/UYgjIfHun.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4_cBgI8p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623657208038/UYgjIfHun.jpeg" alt="Screenshot_20210614-081818.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Being able to sort a collection of items based on a criteria is a very important functionality for many websites to have.&lt;/p&gt;

&lt;p&gt;For example, sorting a list of users by how recently they were added, how active they are, etc.&lt;/p&gt;

&lt;p&gt;This library helps you do that, and more. It contains a set of React components to make any list into an animated, sortable list.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/clauderic/react-sortable-hoc"&gt;https://github.com/clauderic/react-sortable-hoc&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rccalendar"&gt;
  &lt;/a&gt;
  Rc-calendar
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5py-WjF9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656946333/JHMHEaT70.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5py-WjF9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656946333/JHMHEaT70.jpeg" alt="Screenshot_20210614-081908.jpg"&gt;&lt;/a&gt;&lt;br&gt;
Another very handy library for event-based websites.&lt;br&gt;
Rc-calender is a modular toolkit to build calendar-related functionalities in your React app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/react-component/calendar"&gt;https://github.com/react-component/calendar&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reacttoggle"&gt;
  &lt;/a&gt;
  React-toggle
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JXj6JG7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656974858/tPVsYwXzl.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JXj6JG7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623656974858/tPVsYwXzl.jpeg" alt="Screenshot_20210614-081950.jpg"&gt;&lt;/a&gt;&lt;br&gt;
Toggles are an essential part of user Interfaces. A lot of websites use toggles to switch some feature on or off. React toggle is an elegant, accessible toggle component for React which also acts as a glorified checkbox.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://aaronshaf.github.io/react-toggle/"&gt;http://aaronshaf.github.io/react-toggle/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wysiwyg"&gt;
  &lt;/a&gt;
  Wysiwyg
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W0m0C7ob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623657005523/RbCV-iZ8v.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W0m0C7ob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623657005523/RbCV-iZ8v.jpeg" alt="Screenshot_20210614-082104.jpg"&gt;&lt;/a&gt;&lt;br&gt;
All modern content management platforms must have a modern text editor interface for users to type into. This is where wysiwyg comes in.&lt;/p&gt;

&lt;p&gt;This library is a  multifeature text editor build on top of ReactJS and DraftJS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/jpuri/react-draft-wysiwyg"&gt;https://github.com/jpuri/react-draft-wysiwyg&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#victory"&gt;
  &lt;/a&gt;
  Victory
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aZ9EAdun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623657039407/A_sD7UbCh.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aZ9EAdun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623657039407/A_sD7UbCh.jpeg" alt="Screenshot_20210614-082219.jpg"&gt;&lt;/a&gt;&lt;br&gt;
We live in an age where data is represented in various forms and with many kinds of visuals. &lt;/p&gt;

&lt;p&gt;Victory is a collection of composable React components for building interactive data visualizations in your web application&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#halogen"&gt;
  &lt;/a&gt;
  Halogen
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qAc5t8ab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623657117927/xBpIUMTVB.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qAc5t8ab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623657117927/xBpIUMTVB.jpeg" alt="Screenshot_20210614-082618.jpg"&gt;&lt;/a&gt;&lt;br&gt;
One of the most popular ways of keeping users in a website happily waiting while a page or resources is getting fetched from the backend is with the use of spinners.&lt;/p&gt;

&lt;p&gt;Halogen houses a huge collection of loading spinners made with React.js.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/yuanyan/halogen"&gt;https://github.com/yuanyan/halogen&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dragula"&gt;
  &lt;/a&gt;
  Dragula
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--38owGIdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623657153454/q_XtZeKuA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--38owGIdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623657153454/q_XtZeKuA.jpeg" alt="Screenshot_20210614-082405.jpg"&gt;&lt;/a&gt;&lt;br&gt;
Drag and drop is a very useful feature for many websites to have, especially content management platforms and website builders.&lt;/p&gt;

&lt;p&gt;Drag and Drop React Component that's very simple to use and &lt;/p&gt;

&lt;p&gt;&lt;a href="http://bevacqua.github.io/react-dragula/"&gt;http://bevacqua.github.io/react-dragula/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With these libraries, you don't have to code and design your React Components from scratch.&lt;/p&gt;

&lt;p&gt;All you simply have to do is clone your preferred repository into your local machine and use it's component in your project.&lt;/p&gt;

&lt;p&gt;No hassles.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to learn Web Dev as a beginner, you can check out this apt  &lt;a href="https://gumroad.com/a/834147443"&gt;HTML To React by Sleepless Yogi.&lt;/a&gt;  It has lots of tutorials which cover HTML, CSS, JavaScript and other fundamentals.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I hope you find something interesting among this collection.&lt;/p&gt;

&lt;p&gt;If you benefitted from this and want to support my work, you can buy me my favorite fruit:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ubahthebuilder"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc5Aqnyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520pineapple%26emoji%3D%25F0%259F%258D%258D%26slug%3Dubahthebuilder%26button_colour%3De0b51a%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you and see you soon&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Ultimate On-Page SEO Techniques In 2021</title>
      <author>Raymond Halliwell</author>
      <pubDate>Mon, 14 Jun 2021 09:36:00 +0000</pubDate>
      <link>https://dev.to/raymondhalliwell/ultimate-on-page-seo-techniques-in-2021-50hl</link>
      <guid>https://dev.to/raymondhalliwell/ultimate-on-page-seo-techniques-in-2021-50hl</guid>
      <description>&lt;p&gt;While so many put in much effort on building the authority of a domain through off-page optimization, on-page SEO is as well important for successful SEO.  It entails all measures taken directly on web pages to boost  your website  ranking on search engines and drive organic traffic. This means it’s success is totally up to you. You get to decide the quality of the webpages and the audience you are focusing on. Whether it will drive visitors or not depends on you. &lt;/p&gt;

&lt;p&gt;However, when it comes to on-page SEO, it is something you want to get right for search engines to understand your website and its relevance to searchers queries. They are smart yet simple techniques that produce the desired results. Here, we ask &lt;a href="https://www.crunchbase.com/person/raymond-halliwell"&gt;Raymond Halliwell&lt;/a&gt;, a digital marketing expert on-page SEO techniques that matters in 2021. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#content"&gt;
  &lt;/a&gt;
  Content
&lt;/h2&gt;

&lt;p&gt;Content is and always will be king. It is what makes a website credible to search engines and that is why it is very important. Your content has to be engaging and of high quality. This is what gets visitors glued to your site. Plus, focus on longer contents. Studies have proven that long content tends to rank higher and dominate the first page of search engines. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#title-tag"&gt;
  &lt;/a&gt;
  Title tag
&lt;/h2&gt;

&lt;p&gt;The title tag is the title of the web page and the ones displayed on the search engine results pages (SERPs). The title tag should accurately describe the web page content when opened and that is why it is also another important factor you don’t want to take for granted. Keep it as simple as 65 characters or less and let your keyword be closer to the title tag as possible. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#headline"&gt;
  &lt;/a&gt;
  Headline
&lt;/h2&gt;

&lt;p&gt;Even if the title is basic, headlines will make a huge difference in a content that is clickable. It is what highlights the nub of the sub matter, it is what arouses curiosity, it is what determines whether or  not your target reader is going to read an article or not. So go ahead and give that compelling headline that your content deserves. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multimedia"&gt;
  &lt;/a&gt;
  Multimedia
&lt;/h2&gt;

&lt;p&gt;The saying images speak louder than words holds true in on-page SEO. They are attention grabbers, they rub easily on emotions and they can increase time spent on websites. “Have a variety of multimedia on your webpage- images, vidoes, infographics, podcasts or slide shows. Not only are you creating a visually stunning webpage, you are encouraging visitors to spend more time and even return, says Raymond Halliwell.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keyword"&gt;
  &lt;/a&gt;
  Keyword
&lt;/h2&gt;

&lt;p&gt;Keywords are what peolle look for in search engine, you want your pages to pop up to target audience when they search for relevant information. Hence, research for your audience and the keywords they are using. Raymond Halliwell advises you to optimize your content with those keywords and don’t forget to include it in the first 100 words. While at it, focus on long-tail keywords that appeal to today’s internet users. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#internal-links"&gt;
  &lt;/a&gt;
  Internal links
&lt;/h2&gt;

&lt;p&gt;Another powerful way to improve user engagement on your site is through internal linking. Add 2-3 links of relevant pages on your site. This will tell keep visitors navigate your site, keep them engaged longer, and informs Google that your pages are relevant and useful. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outbound-links"&gt;
  &lt;/a&gt;
  Outbound links
&lt;/h2&gt;

&lt;p&gt;“One way to build your website traffic while still facilitating relationships with other businesses is through outbound links. It informs people and search engines about relevant useful content, &lt;a href="https://twitter.com/raymondhalliwel"&gt;Raymond Halliwell&lt;/a&gt; explains. One thing is pages with outbound links tend to outrank those without on SERP.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mobilefriendliness"&gt;
  &lt;/a&gt;
  Mobile-friendliness
&lt;/h2&gt;

&lt;p&gt;With billions of people using mobile phones to surf the internet in this age, this is one important aspect you don’t want to miss. You need to boost your site speed on smartphones as well. Use a fast web hosting service and make your pages mobile-friendly. Google and internet users love sites that are optimised for faster mobile loading speed.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://getjoys.net/technology/on-page-seo/"&gt;getjoys.net&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>seo</category>
      <category>raymondhalliwell</category>
      <category>raymondgeorgehalliwell</category>
      <category>digitalmarketing</category>
    </item>
  </channel>
</rss>
