<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>I created nonsense 'Hello World' program with GitHub Action and JavaScript. (which failed)</title>
      <author>Kaiz Khatri</author>
      <pubDate>Tue, 07 Dec 2021 09:30:54 +0000</pubDate>
      <link>https://dev.to/ful1e5/i-created-nonsense-hello-world-program-with-github-action-and-javascript-which-failed-40he</link>
      <guid>https://dev.to/ful1e5/i-created-nonsense-hello-world-program-with-github-action-and-javascript-which-failed-40he</guid>
      <description>&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;˙(: nɥɔnɥɔ ıɥɔıɥɔ ɐɥɐɥ ǝɹɐ sƃuıɥʇ ɹǝɥʇo ˙ʎɹoʇsıɥ ʇıƃ s,ʇɔǝɾoɹd ǝɥʇ sı noʎ ɥʇıʍ ǝɹɐɥs ı ƃuıɥʇ ʎןuo ǝɥʇ&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Wacky Wildcards&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ful1e5"&gt;
        ful1e5
      &lt;/a&gt; / &lt;a href="https://github.com/ful1e5/gobabygo"&gt;
        gobabygo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A nonsense 'Hello World' program with GitHub Action and JavaScript. (which failed)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;del&gt;gobabygo&lt;/del&gt; gobabyfailed&lt;/h1&gt;
&lt;p&gt;A &lt;a href="https://qr.ae/pGlK9l" rel="nofollow"&gt;nonsense "Hello World"&lt;/a&gt; with GitHub Action and JavaScript. (which failed)&lt;/p&gt;
&lt;h4&gt;
NFT&lt;/h4&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/78dc5cf31ea726a27aa852b40bc9771f31e5960e13389f4739d8cfb1740dd743/68747470733a2f2f696d6775722e636f6d2f516a3965644c622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/78dc5cf31ea726a27aa852b40bc9771f31e5960e13389f4739d8cfb1740dd743/68747470733a2f2f696d6775722e636f6d2f516a3965644c622e706e67" alt="gobabygo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
index.js&lt;/h4&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/fed27acaf70fb2f31aa54dfbd02a13430e04546f08461cad8299239607053676/68747470733a2f2f696d6775722e636f6d2f443532584f79542e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/fed27acaf70fb2f31aa54dfbd02a13430e04546f08461cad8299239607053676/68747470733a2f2f696d6775722e636f6d2f443532584f79542e706e67" alt="code"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ful1e5/gobabygo"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Dr. Jo's &lt;a href="https://www.quora.com/Which-programming-language-has-the-longest-Hello-World-code/answer/Dr-Jo-6?ch=10&amp;amp;oid=254205207&amp;amp;share=4dd4e761&amp;amp;target_type=answer"&gt;Quora post&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This post is &lt;em&gt;powered by&lt;/em&gt; &lt;strong&gt;&lt;a href="https://github.com/ful1e5/TheActionDev"&gt;TheActionDev&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>javascript</category>
      <category>github</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How to get out of tutorial doom</title>
      <author>Nmurgor</author>
      <pubDate>Tue, 07 Dec 2021 09:21:21 +0000</pubDate>
      <link>https://dev.to/nmurgor/how-to-get-out-of-tutorial-doom-13of</link>
      <guid>https://dev.to/nmurgor/how-to-get-out-of-tutorial-doom-13of</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;As a new developer, you are constantly bombarded with Youtube tutorials, newsletters with titles like: “Learn React in 30 minutes” and whatnot. It’s so insane.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this blog article, I’ll share my view about the so-called “tutorial doom”.&lt;br&gt;
Tutorial hell is when one confines all forms of learning to curated tutorials in the form of Youtube videos.&lt;br&gt;
Let’s see how to avoid falling into this pit.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-get-out-of-the-comfort-zone"&gt;
  &lt;/a&gt;
  1. Get out of the comfort zone
&lt;/h3&gt;

&lt;p&gt;Getting out of a comfort zone is like a rest. Taking on a project as a freelancer and sweat through it to the end can be a great way of learning. At some point, you will learn things on the way as-needed using standard docs, blog articles and tutorials as you build the project towards completion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-goal-oriented-course-of-action"&gt;
  &lt;/a&gt;
  2. Goal oriented course of action
&lt;/h3&gt;

&lt;p&gt;Want to build a mobile app for a business? chances are you already know some React. You can begin by building a mobile application using React Native. As you progress, the overall goal would be to build the mobile app. 6 months down the line, you’ll see your React Native skills slowly improving. Why? because you have a goal set.&lt;br&gt;
I blocked Youtube using an extension because Youtube nowadays has “clickbaity” videos such as “Learn X in y minutes”&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-going-back-to-the-basics"&gt;
  &lt;/a&gt;
  3. Going back to the basics
&lt;/h3&gt;

&lt;p&gt;Our brains are tiny, we can never recall all the details. We can never memorize details instead we refer. Once I feel stuck, I go back to the standard documentation or book to refer and get the gist of what I’m supposed to do.&lt;br&gt;
Memorization is for school, once you feel you are stuck, ask for help, look up the problem or call a friend to help out.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-build-build-build"&gt;
  &lt;/a&gt;
  4. Build, build, build
&lt;/h3&gt;

&lt;p&gt;Build things off the concepts you already grasped. You don’t have to complete the projects you’ve built. I recently wanted to learn how ORM and Migrations work in Laravel, I built a small dating site to learn the concept. Build small throw-away projects to get a finer grasp of the concept.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Tutorials are good at breaking down a concept so one can dive in and start hacking but tutorials are not the alpha and omega of learning. My use of tutorial goes like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Get project concept&lt;/li&gt;
&lt;li&gt;Break the project into small bits&lt;/li&gt;
&lt;li&gt;For new parts, I look up tutorials related to these parts to see how it is done(blog article type)&lt;/li&gt;
&lt;li&gt;Use the tutorials to tackle the project with all project requirements and goals in mind&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Here's how to get out the most of tutorials:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Look for projects as a freelancer and tackle the projects. Small projects can be a great start&lt;/li&gt;
&lt;li&gt;Build small projects that solidify learning about a concept&lt;/li&gt;
&lt;li&gt;Write blog articles about your progress in learning and observations, tips to document the fun!&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>productivity</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to manage environment secrets and credentials in a Nodejs application</title>
      <author>Nmurgor</author>
      <pubDate>Tue, 07 Dec 2021 09:13:19 +0000</pubDate>
      <link>https://dev.to/nmurgor/how-to-manage-environment-scerets-and-credentials-in-nodejs-application-4ano</link>
      <guid>https://dev.to/nmurgor/how-to-manage-environment-scerets-and-credentials-in-nodejs-application-4ano</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this blog article, we will see how we can programmatically store and read environment secrets in a Nodejs application.&lt;/p&gt;

&lt;p&gt;Ideally, we'd want to avoid:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hard-coding API KEYs, PRIVATE KEYs, WALLET SEED phrases, we might end up pushing this sensitive data to a VCS like GitHub or Bitbucket&lt;/li&gt;
&lt;li&gt;exposing sensitive these credentials while in use.&lt;/li&gt;
&lt;li&gt;make these credentials configurable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's jump in.&lt;br&gt;
You can find all project code here: &lt;a href="https://github.com/naftalimurgor/environment-secrets"&gt;manage environment secrets&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-add-a-raw-gitignore-endraw-file-to-root-of-project"&gt;
  &lt;/a&gt;
  1. add a &lt;code&gt;.gitignore&lt;/code&gt; file to root of project.
&lt;/h3&gt;

&lt;p&gt;The first step would be creating a &lt;code&gt;.gitignore&lt;/code&gt; file. This file will contain an entry of files and directories that we want git to ignore so we don't accidentally add the files to version control.&lt;/p&gt;

&lt;p&gt;Add &lt;code&gt;.env&lt;/code&gt; to the &lt;code&gt;.gitignore&lt;/code&gt; file, like:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Inside file: .gitignore&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;.env
// other entries to be ignored by git
node_modules
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-create-a-env-file"&gt;
  &lt;/a&gt;
  2. create a .env file
&lt;/h3&gt;

&lt;p&gt;Create a file named &lt;code&gt;.env&lt;/code&gt; at the root of your project.&lt;br&gt;
Inside the file, add a key value pair of your credentials like this(no double quotes)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;API_KE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_value
&lt;span class="nv"&gt;MNEMOMIC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;mnemonic
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-read-environment-secrets-from-the-env-file"&gt;
  &lt;/a&gt;
  3. Read environment secrets from the .env file
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;dotenv&lt;/code&gt; dependency to your project
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; yarn add dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then from where we want to read environmnent secrets:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the &lt;code&gt;dotenv&lt;/code&gt; dependency:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// or with ESM&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// read and make secrets from the .env entries available:&lt;/span&gt;
&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Call &lt;code&gt;dotenv.config()&lt;/code&gt; to make the secrets available from the &lt;code&gt;process.env&lt;/code&gt; object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MNEMONIC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MNEMEONIC&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MNEMONIC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// prints 'mnemomic`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;The goal of hiding environment secrets is to hide sensitive information within our applications. Care must however be taken not to add, commit and push .env files to version control as they might end up in the wrong hands.&lt;/p&gt;

&lt;p&gt;Here's what might happen, if one accidentally pushes PRIVATE key to &lt;code&gt;Github&lt;/code&gt;, a bot may grab the private key, restore your wallet and drain all your ETH or BTC in a matter of seconds. &lt;/p&gt;

&lt;p&gt;Did I miss anything? Feel free to leave a comment, a complement and honest feedback.&lt;br&gt;
Happy hacking!&lt;br&gt;
This article was originally published at &lt;a href="https://naftalimurgor.netlify.com"&gt;https://naftalimurgor.netlify.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>security</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>🆕 Luos selftest during compilation</title>
      <author>Emanuel Allely</author>
      <pubDate>Tue, 07 Dec 2021 09:12:41 +0000</pubDate>
      <link>https://dev.to/luos/luos-selftest-during-compilation-2dg6</link>
      <guid>https://dev.to/luos/luos-selftest-during-compilation-2dg6</guid>
      <description>&lt;p&gt;🆕 Luos selftest during compilation&lt;/p&gt;

&lt;p&gt;Selftest is a specific way of compiling Luos, and specially LuosHAL, allowing you to validate your entire hardware configuration. To make it work you have to connect your different connectors of the board together. Selftest will try to use different hardware resources configured for Luos and will check if everything is OK for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.luos.io/docs/hardware-consideration/Test-your-configuration/"&gt;https://docs.luos.io/docs/hardware-consideration/Test-your-configuration/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AtMY8pSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eznputucm7om29waiw18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AtMY8pSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eznputucm7om29waiw18.png" alt="Software conditions" width="880" height="612"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>luos</category>
      <category>embedded</category>
      <category>opensource</category>
      <category>edge</category>
    </item>
    <item>
      <title>A 2 Minute Visual Guide to useEffect</title>
      <author>Alex Sidorenko</author>
      <pubDate>Tue, 07 Dec 2021 09:11:54 +0000</pubDate>
      <link>https://dev.to/sidkh/a-2-minute-visual-guide-to-useeffect-46c0</link>
      <guid>https://dev.to/sidkh/a-2-minute-visual-guide-to-useeffect-46c0</guid>
      <description>&lt;p&gt;Here is what happens when you try to fetch data directly from the body of a functional component in React 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uwTtfSQ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8f8vb7ueifgwuri5cnf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uwTtfSQ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8f8vb7ueifgwuri5cnf.gif" alt="Image description" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why does this happen and what tools does React offer to solve this problem?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#side-effects"&gt;
  &lt;/a&gt;
  Side effects
&lt;/h2&gt;

&lt;p&gt;If your React component affects anything outside of itself, it's called a side effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6RPhUxCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/195vlozltczbysnz504x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6RPhUxCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/195vlozltczbysnz504x.png" alt="Image description" width="880" height="594"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Side effects shouldn't happen during component render. Therefore they do not belong to the body of a functional component. React has a special place for them. &lt;/p&gt;

&lt;p&gt;To learn more about side effects and why they need a special treatment, check out this brilliant section in the new React documentation - &lt;a rel="noreferrer" href="https://beta.reactjs.org/learn/keeping-components-pure"&gt;Keeping Components Pure&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dealing-with-side-effects"&gt;
  &lt;/a&gt;
  Dealing with side effects
&lt;/h2&gt;

&lt;p&gt;The special place for side effects is inside the &lt;code&gt;useEffect&lt;/code&gt; hook. Hence the name.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By using this Hook, you tell React that your component needs to do something after render. React will remember the function you passed (we’ll refer to it as our “effect”), and call it later after performing the DOM updates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/hooks-effect.html#example-using-hooks"&gt;React Docs - Using the Effect Hook&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's try it with our initial component:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9MQID7mo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wita221zf6u0191duxkc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9MQID7mo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wita221zf6u0191duxkc.gif" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;useEffect&lt;/code&gt; does not run during the render. It runs after the render, which is what we want. But we still have the same problem. That's because, by default, &lt;code&gt;useEffect&lt;/code&gt; will run after every component render.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#running-effects-conditionally"&gt;
  &lt;/a&gt;
  Running effects conditionally
&lt;/h2&gt;

&lt;p&gt;There is a way to run effects conditionally, not after every render. The &lt;code&gt;useEffect&lt;/code&gt; hook accepts the dependency list as a second argument. React will only re-run the effect if any dependency in the list changes. Let's try it out:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5dpR77yn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/di3t6tfj0xh1cgo03vfq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5dpR77yn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/di3t6tfj0xh1cgo03vfq.gif" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you pass an empty array as a dependency list, the effect will run only once, after the first render. It prevents the infinite loop from happening in our case. However, you might notice that our fetch function relies on the &lt;code&gt;props.id&lt;/code&gt; .&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#reacting-to-changes"&gt;
  &lt;/a&gt;
  Reacting to changes
&lt;/h2&gt;

&lt;p&gt;Let's pick up where we left off and see what happens when we change the component's props.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ung3zbiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogdfb4wu5gnhxh58wiy2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ung3zbiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogdfb4wu5gnhxh58wiy2.gif" alt="Image description" width="880" height="607"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We would expect the component to react to prop change and fetch another product, but nothing happens. That's because we have an empty dependency list. &lt;/p&gt;

&lt;p&gt;If the side effect relies on any props or state variables, we should put them in the dependency list. After every render, React will check whether any dependency has changed, and if it did, will re-run the effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vafG9e5A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9s1ms7xnja70yim1twp6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vafG9e5A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9s1ms7xnja70yim1twp6.gif" alt="Image description" width="880" height="607"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#to-be-continued"&gt;
  &lt;/a&gt;
  To be continued...
&lt;/h2&gt;

&lt;p&gt;There are a couple more things to learn about useEffect. Don't miss the next 2 minute guide. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://alexsidorenko.com/"&gt;https://alexsidorenko.com/&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Time Tracking Benefits and Best Practices of the Year 2021</title>
      <author>katemay</author>
      <pubDate>Tue, 07 Dec 2021 09:05:48 +0000</pubDate>
      <link>https://dev.to/katemay48947206/time-tracking-benefits-and-best-practices-of-the-year-2021-31mc</link>
      <guid>https://dev.to/katemay48947206/time-tracking-benefits-and-best-practices-of-the-year-2021-31mc</guid>
      <description>&lt;p&gt;Discover all the answers about time tracking, its importance and benefits in this complete guide. &lt;a href="https://blog.tmetric.com/time-tracking-benefits-and-best-practices-of-the-year-2021/"&gt;https://blog.tmetric.com/time-tracking-benefits-and-best-practices-of-the-year-2021/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>10 Most Important Points to Consider While Redesigning Your Website</title>
      <author>Mosche Amara</author>
      <pubDate>Tue, 07 Dec 2021 08:50:34 +0000</pubDate>
      <link>https://dev.to/amaramosche/10-most-important-points-to-consider-while-redesigning-your-website-4h7n</link>
      <guid>https://dev.to/amaramosche/10-most-important-points-to-consider-while-redesigning-your-website-4h7n</guid>
      <description>&lt;p&gt;Believe it or not! Keeping the old site for a longer period won't procure the benefit that you want, it will downline your client commitment, and no potential leads will be generated. Likewise, it will influence Google's ranking.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vgE1h2Iw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1y971gy1vo6bdpcbisi0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vgE1h2Iw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1y971gy1vo6bdpcbisi0.PNG" alt="Image description" width="710" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Site updating is extremely important for your business. You need to think about the new patterns, market trends for updating and say goodbye to the old and out of date web design. With the &lt;a href="https://bit.ly/3y1aiFK"&gt;website redesign&lt;/a&gt;, improved user-interface, the performance of the website, increased Google ranking bringing more traction and solid online presence. Yet, these things possibly happen when a legitimate methodology is executed keeping the focus on clients' perspectives.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Below are the factors you need to consider before redesigning your website:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile-Friendly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is the foremost factor for website redesigning. It is a myth that developing a mobile-friendly means you need to create another website that can perform specifically on a mobile device. It is indeed making your business content and &lt;a href="https://bit.ly/3rK0VsW"&gt;website design&lt;/a&gt; easily accessible via both the platform's web and mobile. In a current time where the mobile device acts as the tool to avail desired services and products at fingertips, developing a mobile responsive website is unavoidable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Easy Navigation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After mobile-friendliness, this factor holds a second position in the list of website redesign factors. Expecting that while making a trip to any most loved holiday destination you have a travel guide that helps you to demonstrate a place to make your trip more sensational. Likewise, I need to guarantee a simple site route helping clients with simple navigation that guides users to identify where to go next in order to find what they are looking for.&lt;/p&gt;

&lt;p&gt;To accomplish this, your site needs a route menu either at the top or as the route slide. Route slide known as the cheeseburger menu is less successful contrasted with the menu shown at the top. Clients barely save 10 secs in your site and in that term they like to look over all the significant components which the slide can't show.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Optimize load time and improve web performance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At the point when you consider website redesign you anticipate speed and execution. This is one point you need to have a total spotlight on. From the clients' perspective, an expansion in the site speed from 8 to 2 seconds can support your transformation rate by 74%.&lt;/p&gt;

&lt;p&gt;To upgrade the loading time, you initially consider image optimization. Images are one of the principal reasons influencing site loading time. There are different image optimization tools available that are easily accessible around the web which won't allow you to compromise on the quality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Keep It Simple&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The time is over when a business website was flooded with huge content and complex design. But today it’s about simplicity, elegance, and communication- how well your website can communicate with the end-user. Web designers ensure that they pick eye-catchy and sober colors that attract the visitor's attention.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Use Call-To-Action (CTA)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;CTA plays a vital role in improving the performance of the website. CTAs can be in any form, any size, and any context. For example, a submit button on the contact us page notify the entrepreneur via mail or call when the user hits the CTA or action button submit button designed in the&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Social Media Plugins&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is significant for you to add social media plugins to your website. If it's not in the website redesigning, you are missing a connection with social media traffic. While navigating the website, users also go through your social media channels directly from the website to know more about your marketing campaigns and content.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Contact Information is a Must&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is a surprising thing to know that there is some website that does not display the contact details of the organization. If you don’t include the contact number or email id then don't expect to get a query from a single user? Adding content information plays a lead role to convince users and contact you without any glitches.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add a Landing Page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Adding a landing page is a top priority while redesigning your website. It influences users to get detailed information about the services and products you are selling. Your landing page should be appealing, deliver easy to understand the customer, and highlight the unique selling points of your business.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Personalization&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A personalized website increases user engagement rate 2 times faster. You should customize your website by understanding the user's tastes and behavior. You can make your website personalized on the basis of language and demographic area.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website Copyright&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is not true that users don’t look over the website copyright date. And so, organizations don’t draw time to change it which remains static at the bottom of the website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The above factors mentioned for redesigning a website are thoroughly analyzed from both user's and business perspectives. You can include these points as per the performance of your website.&lt;/p&gt;

</description>
      <category>webdesign</category>
    </item>
    <item>
      <title>How to RickRoll a friend with HTML and JS</title>
      <author>SnowBit</author>
      <pubDate>Tue, 07 Dec 2021 08:49:34 +0000</pubDate>
      <link>https://dev.to/snowbit/how-to-rickroll-a-friend-with-html-and-js-38j0</link>
      <guid>https://dev.to/snowbit/how-to-rickroll-a-friend-with-html-and-js-38j0</guid>
      <description>&lt;p&gt;Basically, this article will contain a video in which I will be showing how you can rick roll someone using &lt;strong&gt;HTML&lt;/strong&gt; and &lt;strong&gt;JS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/_or4TOKGYiY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>programming</category>
    </item>
    <item>
      <title>10 Most Important Points to Consider While Redesigning Your Website</title>
      <author>Mosche Amara</author>
      <pubDate>Tue, 07 Dec 2021 08:46:02 +0000</pubDate>
      <link>https://dev.to/amaramosche/10-most-important-points-to-consider-while-redesigning-your-website-2db</link>
      <guid>https://dev.to/amaramosche/10-most-important-points-to-consider-while-redesigning-your-website-2db</guid>
      <description>&lt;p&gt;Believe it or not! Keeping the old site for a longer period won't procure the benefit that you want, it will downline your client commitment, and no potential leads will be generated. Likewise, it will influence Google's ranking.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z8DiGZuV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7erz373c3pn3i0ydlodu.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z8DiGZuV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7erz373c3pn3i0ydlodu.PNG" alt="Image description" width="710" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Site updating is extremely important for your business. You need to think about the new patterns, market trends for updating and say goodbye to the old and out of date web design. With the website redesign, improved user-interface, the performance of the website, increased Google ranking bringing more traction and solid online presence. Yet, these things possibly happen when a legitimate methodology is executed keeping the focus on clients' perspectives.&lt;/p&gt;

&lt;p&gt;Below are the factors you need to consider before redesigning your website:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile-Friendly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is the foremost factor for website redesigning. It is a myth that developing a mobile-friendly means you need to create another website that can perform specifically on a mobile device. It is indeed making your business content and &lt;a href="https://bit.ly/3rK0VsW"&gt;website design&lt;/a&gt; easily accessible via both the platform's web and mobile. In a current time where the mobile device acts as the tool to avail desired services and products at fingertips, developing a mobile responsive website is unavoidable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Easy Navigation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After mobile-friendliness, this factor holds a second position in the list of &lt;a href="https://bit.ly/3y1aiFK"&gt;website redesign&lt;/a&gt; factors. Expecting that while making a trip to any most loved holiday destination you have a travel guide that helps you to demonstrate a place to make your trip more sensational. Likewise, I need to guarantee a simple site route helping clients with simple navigation that guides users to identify where to go next in order to find what they are looking for.&lt;/p&gt;

&lt;p&gt;To accomplish this, your site needs a route menu either at the top or as the route slide. Route slide known as the cheeseburger menu is less successful contrasted with the menu shown at the top. Clients barely save 10 secs in your site and in that term they like to look over all the significant components which the slide can't show.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Optimize load time and improve web performance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At the point when you consider website redesign you anticipate speed and execution. This is one point you need to have a total spotlight on. From the clients' perspective, an expansion in the site speed from 8 to 2 seconds can support your transformation rate by 74%.&lt;/p&gt;

&lt;p&gt;To upgrade the loading time, you initially consider image optimization. Images are one of the principal reasons influencing site loading time. There are different image optimization tools available that are easily accessible around the web which won't allow you to compromise on the quality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Keep It Simple&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The time is over when a business website was flooded with huge content and complex design. But today it’s about simplicity, elegance, and communication- how well your website can communicate with the end-user. Web designers ensure that they pick eye-catchy and sober colors that attract the visitor's attention.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Use Call-To-Action (CTA)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;CTA plays a vital role in improving the performance of the website. CTAs can be in any form, any size, and any context. For example, a submit button on the contact us page notify the entrepreneur via mail or call when the user hits the CTA or action button submit button designed in the&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Social Media Plugins&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is significant for you to add social media plugins to your website. If it's not in the website redesigning, you are missing a connection with social media traffic. While navigating the website, users also go through your social media channels directly from the website to know more about your marketing campaigns and content.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Contact Information is a Must&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is a surprising thing to know that there is some website that does not display the contact details of the organization. If you don’t include the contact number or email id then don't expect to get a query from a single user? Adding content information plays a lead role to convince users and contact you without any glitches.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Add a Landing Page&lt;br&gt;
*&lt;/em&gt;&lt;br&gt;
Adding a landing page is a top priority while redesigning your website. It influences users to get detailed information about the services and products you are selling. Your landing page should be appealing, deliver easy to understand the customer, and highlight the unique selling points of your business.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Personalization&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A personalized website increases user engagement rate 2 times faster. You should customize your website by understanding the user's tastes and behavior. You can make your website personalized on the basis of language and demographic area.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website Copyright&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is not true that users don’t look over the website copyright date. And so, organizations don’t draw time to change it which remains static at the bottom of the website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The above factors mentioned for redesigning a website are thoroughly analyzed from both user's and business perspectives. You can include these points as per the performance of your website.&lt;/p&gt;

</description>
      <category>webdesign</category>
    </item>
    <item>
      <title>Clip-Path Animation 💖</title>
      <author>Ustariz Enzo</author>
      <pubDate>Tue, 07 Dec 2021 08:33:06 +0000</pubDate>
      <link>https://dev.to/ziratsu/clip-path-animation-196a</link>
      <guid>https://dev.to/ziratsu/clip-path-animation-196a</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4j6sGOHX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9nwqqhpap8t84bntcz9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4j6sGOHX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9nwqqhpap8t84bntcz9.gif" alt="clip patch animation" width="600" height="338"&gt;&lt;/a&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;Let’s create an easy but awesome &lt;em&gt;clip-path animation&lt;/em&gt; in less than a minute!&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jfIGA_YQlD8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-html-structure"&gt;
  &lt;/a&gt;
  1. The HTML structure.
&lt;/h2&gt;

&lt;p&gt;Create two boxes with one image inside each one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box b1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img1.jpg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box b2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img2.jpg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-style-the-page"&gt;
  &lt;/a&gt;
  2. Style the page.
&lt;/h2&gt;

&lt;p&gt;First resize each box to take up the full height of the viewport:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.box&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then add a different background colour to each box to differentiate them easily:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.b1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#e27d60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.b2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#85cdca&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, size the images however you want, center them and fix them to the middle of the screen, following the scroll:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;object-fit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For now, the images are one above the other. To fix that, you need to clip the boxes so that only the correct image shows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.box&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;clip-path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The values inside of the parentheses correspond to the X and Y coordinates of the clipped area.&lt;br&gt;
It will create a new stacking context for each box and only shows what is inside that stacking context.&lt;/p&gt;

&lt;p&gt;You’ll now have a &lt;em&gt;lovely animation&lt;/em&gt; to showcase your images!&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>A sample e-commerce web app built with ReactJS, ExpressJS and MongoDB</title>
      <author>Linh Truong Cong Hong</author>
      <pubDate>Tue, 07 Dec 2021 08:16:52 +0000</pubDate>
      <link>https://dev.to/linhtch90/a-sample-e-commerce-web-app-built-with-reactjs-expressjs-and-mongodb-4569</link>
      <guid>https://dev.to/linhtch90/a-sample-e-commerce-web-app-built-with-reactjs-expressjs-and-mongodb-4569</guid>
      <description>&lt;p&gt;MERN stack which stands for MongoDB, ExpressJS, ReactJS and NodeJS has become a popular choice for fullstack Javascript web developer.&lt;/p&gt;

&lt;p&gt;As a personal project for education purpose, I developed a basic bookstore web app with MERN stack.&lt;/p&gt;

&lt;p&gt;Through this project, beginners could have a useful resource to understand how to implement ReactJS, Redux, React Router and others related libraries in React ecosystem to build up a functional front-end solution.&lt;/p&gt;

&lt;p&gt;In addition, the back-end developed with ExpressJS and MongoDB is also an example for building a web api with Javascript.&lt;/p&gt;

&lt;p&gt;Further detail information is available on Homepage of the live demo at:&lt;br&gt;
&lt;a href="https://bn-bookstore.herokuapp.com/#/"&gt;https://bn-bookstore.herokuapp.com/#/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The source code is available at:&lt;br&gt;
&lt;a href="https://github.com/linhtch90/bn_bookstore_public_source"&gt;https://github.com/linhtch90/bn_bookstore_public_source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please give me a Github star ⭐ as a compliment if my effort is useful for you! Thanks!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Automatically update git major tags on GitHub marketplace release</title>
      <author>TED Vortex (Teodor Eugen Duțulescu)</author>
      <pubDate>Tue, 07 Dec 2021 08:08:46 +0000</pubDate>
      <link>https://dev.to/opensauced/automatically-update-git-major-tags-on-github-marketplace-release-1mgk</link>
      <guid>https://dev.to/opensauced/automatically-update-git-major-tags-on-github-marketplace-release-1mgk</guid>
      <description>&lt;h3&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h3&gt;

&lt;p&gt;Having previously dockerized our semantic release configuration in &lt;a href="https://github.com/open-sauced/semantic-release-conventional-config"&gt;@open-sauced/semantic-release-conventional-config&lt;/a&gt;, a manual step was needed to publish the action in the GitHub marketplace.&lt;/p&gt;

&lt;p&gt;This meant that forcing a major tag update with &lt;a href="https://github.com/semantic-release/exec"&gt;@semantic-release/exec&lt;/a&gt; as part of the release process was possible, but would result in the major tag (for example v3) linking to a valid repository commit SHA that is not actually released in the marketplace.&lt;/p&gt;

&lt;p&gt;Sensibly solving these issues required:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;keeping the semantic release configuration intact&lt;/li&gt;
&lt;li&gt;testing the action container in another repository&lt;/li&gt;
&lt;li&gt;having a maintainer manually edit and save the release &lt;/li&gt;
&lt;li&gt;letting the &lt;code&gt;marketplace.yml&lt;/code&gt; workflow update major tags in the curated release context&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It may sound tedious but in practice, all a maintainer has to do to update the marketplace tags is edit a published release and press the save button. That's exactly 2 clicks from the repository front page and the simplest way to have &lt;a href="https://en.wikipedia.org/wiki/Acceptance_testing"&gt;acceptance testing&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Action&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;major&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;version&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;tag"&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;release&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;published&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;edited&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;latest&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update action tags&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.ref }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;🚀&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;publish&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;action"&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Actions-R-Us/actions-tagger@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;publish_latest_tag&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
          &lt;span class="na"&gt;prefer_branch_releases&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The full workflow is available here: &lt;a href="https://github.com/open-sauced/semantic-release-conventional-config/blob/main/.github/workflows/marketplace.yml"&gt;.github/workflows/marketplace.yml&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#submission-category-maintainer-musthaves"&gt;
  &lt;/a&gt;
  Submission Category: Maintainer Must-Haves
&lt;/h3&gt;
&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;

&lt;p&gt;Live repository using this workflow:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/open-sauced"&gt;
        open-sauced
      &lt;/a&gt; / &lt;a href="https://github.com/open-sauced/semantic-release-conventional-config"&gt;
        semantic-release-conventional-config
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      semantic-release shareable config to publish to npm and/or ghcr
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a04f53b57fbf8d1500e38822ae5a35084088bedbbfa70f7e96a7fd6e9d27d0aa/68747470733a2f2f692e6962622e636f2f376a505874305a2f6c6f676f312d39326631613837662e706e67"&gt;&lt;img alt="Open Sauced" src="https://camo.githubusercontent.com/a04f53b57fbf8d1500e38822ae5a35084088bedbbfa70f7e96a7fd6e9d27d0aa/68747470733a2f2f692e6962622e636f2f376a505874305a2f6c6f676f312d39326631613837662e706e67" width="300px"&gt;&lt;/a&gt;
&lt;h1&gt;
@open-sauced/semantic-release-conventional-config&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/semantic-release/semantic-release"&gt;&lt;strong&gt;semantic-release&lt;/strong&gt;&lt;/a&gt; shareable config to publish to &lt;code&gt;npm&lt;/code&gt; and/or &lt;code&gt;ghcr&lt;/code&gt;
now with alpha and beta pre-releases&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/open-sauced/semantic-release-conventional-config/pulse"&gt;&lt;img src="https://camo.githubusercontent.com/6cdb31096e6a3d0090609a5fe967b63c8f565530f7408d6b6a5d8960c35b26b8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f772f6f70656e2d7361756365642f73656d616e7469632d72656c656173652d636f6e76656e74696f6e616c2d636f6e6669673f7374796c653d666c6174" alt="Commits"&gt;&lt;/a&gt;
&lt;a href="https://github.com/open-sauced/semantic-release-conventional-config/issues"&gt;&lt;img src="https://camo.githubusercontent.com/fdf12a0d1304d579e770283938e1780c8bc86c2c378d2321078d7805776cea54/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6f70656e2d7361756365642f73656d616e7469632d72656c656173652d636f6e76656e74696f6e616c2d636f6e6669672e7376673f7374796c653d666c6174" alt="Issues"&gt;&lt;/a&gt;
&lt;a href="https://github.com/open-sauced/semantic-release-conventional-config/releases"&gt;&lt;img src="https://camo.githubusercontent.com/244cc726216c4c489d6ac5cf189959dda4cf0b8ebf5fca5968968b55bcd13533/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f6f70656e2d7361756365642f73656d616e7469632d72656c656173652d636f6e76656e74696f6e616c2d636f6e6669672e7376673f7374796c653d666c6174" alt="Releases"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/U2peSNf23P" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eaef2d80ac219bcc45df03f3eb580f62f61cd81a1fd80665b256014573f7aaa0/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3731343639383536313038313730343532392e7376673f6c6162656c3d266c6f676f3d646973636f7264266c6f676f436f6c6f723d66666666666626636f6c6f723d373338394438266c6162656c436f6c6f723d364137454332" alt="Discord"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/saucedopen" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/944ad9b38e1d49d04da75b41310bd052eda0c73635c5a52484375152c8c8bc43/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f7361756365646f70656e3f6c6162656c3d466f6c6c6f77267374796c653d736f6369616c" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;
📦 Plugins&lt;/h2&gt;

&lt;p&gt;This shareable configuration use the following plugins:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/semantic-release/commit-analyzer"&gt;&lt;code&gt;@semantic-release/commit-analyzer&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/semantic-release/release-notes-generator"&gt;&lt;code&gt;@semantic-release/release-notes-generator&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/semantic-release/changelog"&gt;&lt;code&gt;@semantic-release/changelog&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/conventional-changelog/conventional-changelog"&gt;&lt;code&gt;conventional-changelog-conventionalcommits&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/semantic-release/npm"&gt;&lt;code&gt;@semantic-release/npm&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/semantic-release-replace-plugin"&gt;&lt;code&gt;@google/semantic-release-replace-plugin&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cbhq/semantic-release-license"&gt;&lt;code&gt;semantic-release-license&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/semantic-release/git"&gt;&lt;code&gt;@semantic-release/git&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/semantic-release/github"&gt;&lt;code&gt;@semantic-release/github&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eclass/semantic-release-docker"&gt;&lt;code&gt;@eclass/semantic-release-docker&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/semantic-release/exec"&gt;&lt;code&gt;@semantic-release/exec&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/execa"&gt;&lt;code&gt;execa&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/npm/npmlog"&gt;&lt;code&gt;npmlog&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
🖥️ Requirements&lt;/h2&gt;

&lt;p&gt;Most important limitations are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GITHUB_TOKEN&lt;/code&gt; for everything&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;NPM_TOKEN&lt;/code&gt; for public &lt;code&gt;npm&lt;/code&gt; library&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;docker&lt;/code&gt; containers need to be built beforehand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can skip here if you are using elevated &lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token"&gt;Private Access Token&lt;/a&gt;, however we don't recommend going down that path.&lt;/p&gt;

&lt;p&gt;No force push or admin cherries branch protections for the following branches:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;main&lt;/code&gt; - required&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;alpha&lt;/code&gt; - optional, pre-release branch&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;beta&lt;/code&gt; - optional, pre-release branch&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;next&lt;/code&gt; - optional, next channel&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;next-major&lt;/code&gt; - optional, next major&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;vX[.X.X]&lt;/code&gt; - maintenance releases&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you use more than the main branch, optionally create an environment that is limiting where pushes can come from and enable the merge strategy.&lt;/p&gt;

&lt;p&gt;We are using &lt;code&gt;production&lt;/code&gt; in…&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/open-sauced/semantic-release-conventional-config"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;Here are all the open source actions we are using to power this release workflow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/Actions-R-Us/actions-tagger"&gt;Actions-R-Us/actions-tagger@v2&lt;/a&gt; - updates major tag on release&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>actionshackathon21</category>
      <category>github</category>
      <category>actions</category>
    </item>
  </channel>
</rss>
