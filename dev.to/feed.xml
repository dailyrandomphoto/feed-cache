<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Integrate Segment to your Medusa project</title>
      <author>Vadim Smirnov</author>
      <pubDate>Tue, 21 Sep 2021 16:57:53 +0000</pubDate>
      <link>https://dev.to/medusajs/integrate-segment-to-your-medusa-project-4akf</link>
      <guid>https://dev.to/medusajs/integrate-segment-to-your-medusa-project-4akf</guid>
      <description>&lt;p&gt;Modern e-commerce businesses have to integrate with a wide spectrum of tools from marketing and personalization to analytics and business intelligence. Integrations to these tools quickly become hard to maintain and new integrations become overly complex to implement putting a stretch on an e-commerce organization's resources.&lt;/p&gt;

&lt;p&gt;The CDP (Customer Data Platform) &lt;a href="https://segment.com/"&gt;Segment&lt;/a&gt; solves this problem by allowing users to instantly integrate with +100 tools through a single unified API. &lt;/p&gt;

&lt;p&gt;Medusa has an official plugin &lt;code&gt;medusa-plugin-segment&lt;/code&gt; that instantly gives you access to all Segment integrations and comes preconfigured with powerful server-side tracking&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-segment"&gt;
  &lt;/a&gt;
  Why Segment?
&lt;/h2&gt;

&lt;p&gt;Segment is a powerful Customer Data Platform that allows users to collect, transform, send and archive their customer data.&lt;/p&gt;

&lt;p&gt;Segment allows users to manage different tracking and marketing tools using one API and interface, making it very simple to try out and integrate with different services in your e-commerce stack.&lt;/p&gt;

&lt;p&gt;Common integration use cases that can be implemented with Segment include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mailchimp&lt;/li&gt;
&lt;li&gt;Klaviyo&lt;/li&gt;
&lt;li&gt;Google Analytics Enhanced E-commerce tracking&lt;/li&gt;
&lt;li&gt;Data warehousing for advanced data analytics and segmentation through services like Snowflake&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#adding-segment-to-your-medusa-store"&gt;
  &lt;/a&gt;
  Adding Segment to your Medusa store
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: you should create a &lt;a href="https://segment.com/docs/connections/sources/catalog/libraries/server/node/quickstart/"&gt;Node.js source in Segment&lt;/a&gt; in order to obtain the write key that will be provided in the plugin options.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Plugins in Medusa's ecosystem come as separate npm packages, that can be installed from the npm registry.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add medusa-plugin-segment
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After installation open &lt;code&gt;medusa-config.js&lt;/code&gt; to configure the Segment plugin, by adding it to your project's plugin array and providing the options required by the plugin, namely the write key obtained from the Segment dashboard.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`medusa-plugin-segment`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;write_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SEGMENT_WRITE_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the plugin has been configured you will get instant access to +100 services through the Segment dashboard. This allows you to try out new services for your e-commerce stack without having to make heavy integration investments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#default-tracking"&gt;
  &lt;/a&gt;
  Default tracking
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;medusa-plugin-segment&lt;/code&gt; comes with prebuilt tracking for common flows for Orders, Returns, Swaps, and Claims. Where applicable the events follow the &lt;a href="https://segment.com/docs/connections/spec/ecommerce/v2/"&gt;Segment Ecommerce Spec&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Below is a list of some of the events that are tracked by default:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Orders

&lt;ul&gt;
&lt;li&gt;Order Completed&lt;/li&gt;
&lt;li&gt;Order Shipped&lt;/li&gt;
&lt;li&gt;Order Refunded ← Without returned products&lt;/li&gt;
&lt;li&gt;Order Cancelled&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Returns

&lt;ul&gt;
&lt;li&gt;Order Refunded ← With returned products&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Swaps

&lt;ul&gt;
&lt;li&gt;Swap Created&lt;/li&gt;
&lt;li&gt;Swap Confirmed&lt;/li&gt;
&lt;li&gt;Swap Shipped&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Claims

&lt;ul&gt;
&lt;li&gt;Item Claimed&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The default events serve as a good foundation for e-commerce tracking, allowing you to answer questions regarding product performance, return ratios, claim statistics, and more.&lt;/p&gt;

&lt;p&gt;In many cases you will want to track other events that are specific to your store - this is also possible through the Segment plugin, as the plugin registers the &lt;code&gt;segmentService&lt;/code&gt; in your Medusa project. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tracking-custom-events"&gt;
  &lt;/a&gt;
  Tracking custom events
&lt;/h2&gt;

&lt;p&gt;Building from the custom functionality that can be guided by &lt;a href="https://docs.medusa-commerce.com/tutorial/adding-custom-functionality"&gt;the tutorial&lt;/a&gt; in Medusa docs, imagine that you want to track all welcome opt-ins. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;segmentService&lt;/code&gt; exposes a &lt;code&gt;track&lt;/code&gt; method that wraps &lt;a href="https://segment.com/docs/connections/spec/track/"&gt;Segment's Track Spec&lt;/a&gt;, allowing you to send events to the Segment from anywhere in your Medusa project. &lt;/p&gt;

&lt;p&gt;For example, to add tracking of the opt-ins in the &lt;code&gt;POST /welcome/:cart_id&lt;/code&gt; endpoint, you could add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;segmentService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;segmentService&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;segmentService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome Opt-In Registered&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;cart_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;optin&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet would send an event to Segment for further processing. The event data could be used for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Segmentation of a mailing list in MailChimp or Klaviyo based on whether the customer opted in for welcomes&lt;/li&gt;
&lt;li&gt;Storage in the data warehouse for later analysis to answer questions like "Are customers who opt-in for welcomes more likely to become recurring customers?"&lt;/li&gt;
&lt;li&gt;Integration to Google Analytics's events&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h2&gt;

&lt;p&gt;This article covers the introduction to one of many &lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; plugins and an explanation of how you can enhance your e-commerce stack, which will help you to build a successful e-commerce project. &lt;/p&gt;

&lt;p&gt;Not sure where to start? We are happy to help and talk to you at our &lt;a href="https://discord.gg/EA5pd3WG"&gt;Discord&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>opensource</category>
      <category>twilio</category>
    </item>
    <item>
      <title>Load Google Analytics (gtag) Efficiently in Gatsby Site</title>
      <author>Shahidul Islam Majumder</author>
      <pubDate>Tue, 21 Sep 2021 16:26:18 +0000</pubDate>
      <link>https://dev.to/sh4hids/load-google-analytics-gtag-efficiently-in-gatsby-site-8h8</link>
      <guid>https://dev.to/sh4hids/load-google-analytics-gtag-efficiently-in-gatsby-site-8h8</guid>
      <description>&lt;p&gt;Working with the gatsby.js site and google analytics is a little bit tricky if you consider performance. With the latest lighthouse version (v6 and above), performance reduces a lot if you have Google Tag Manager (especially if you install &lt;code&gt;gatsby-plugin-google-analytics&lt;/code&gt;). A few months back, I even removed analytics from one of my sites as I was obsessed with performance.&lt;/p&gt;

&lt;p&gt;But I didn't want to remove analytics from my newly built site and didn't want to reduce the performance too. So, I started researching for a solution and found a way to delay loading the analytics script &lt;a href="https://github.com/gatsbyjs/gatsby/issues/24332#issuecomment-752373784"&gt;here&lt;/a&gt;. I modified the script to match the new gtag script setup. It injects the gtag script after a certain period or if a user starts interacting with the site.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-gtag"&gt;
  &lt;/a&gt;
  Setting up gtag
&lt;/h2&gt;

&lt;p&gt;We need to add the following script in our &lt;code&gt;gatsby-browser.js&lt;/code&gt; file. Here we are using an environment variable to hide our google analytics tracking id. You should add a &lt;code&gt;.env&lt;/code&gt; file and provide the value for &lt;code&gt;GATSBY_GA_TRACKING_ID&lt;/code&gt; there. You can adjust the script loading delay in the &lt;code&gt;onreadystatechange&lt;/code&gt; method (I got the best result for 3500 ms).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;initGTM&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isGTMLoaded&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isGTMLoaded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;script&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text/javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://www.googletagmanager.com/gtag/js?id=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GATSBY_GA_TRACKING_ID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;gtag&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;dataLayer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;gtag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="nx"&gt;gtag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;config&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GATSBY_GA_TRACKING_ID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;loadGTM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;initGTM&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTarget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loadGTM&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onClientEntry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onreadystatechange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loading&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initGTM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;scroll&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loadGTM&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loadGTM&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;touchstart&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loadGTM&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#add-tracking-id-on-github-action-env"&gt;
  &lt;/a&gt;
  Add tracking ID on GitHub Action env
&lt;/h2&gt;

&lt;p&gt;I am using GitHub Action to automate the deployment of my site. So, I have to read the environment variable from the deployment server. We can provide a &lt;code&gt;.env&lt;/code&gt; file in our project, but this will not be secure. We can use GitHub's project secret to hide our credentials/secrets. Navigate to your project's settings page and go to the &lt;code&gt;Secrets&lt;/code&gt; page from the menu. Now, add a repository secret named &lt;code&gt;GATSBY_GA_TRACKING_ID&lt;/code&gt; and provide your tracking id as a value.&lt;/p&gt;

&lt;p&gt;In your workflow configuration file add a section called &lt;code&gt;env&lt;/code&gt;. In the &lt;code&gt;env&lt;/code&gt; section add the environment variable like shown below. You should keep in mind that, &lt;code&gt;env&lt;/code&gt; section should come before the &lt;code&gt;jobs&lt;/code&gt; section in your workflow configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;GitHub Pages&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;

&lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;GATSBY_GA_TRACKING_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{secrets.GATSBY_GA_TRACKING_ID}}&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;......&lt;/span&gt;
  &lt;span class="s"&gt;......&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#hard-lesson"&gt;
  &lt;/a&gt;
  Hard Lesson
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to access the environment variable in the BROWSER in a Gatsby site, prefix your variable name with &lt;code&gt;GATSBY_&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thanks a lot for reading the post, and please share if you find it useful.&lt;/p&gt;

</description>
      <category>gatsby</category>
      <category>analytics</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Automate your personal CRM with Notion and Kelvin Data</title>
      <author>Rohith Gilla</author>
      <pubDate>Tue, 21 Sep 2021 16:14:48 +0000</pubDate>
      <link>https://dev.to/gillarohith/automate-your-personal-crm-with-notion-and-kelvin-data-ono</link>
      <guid>https://dev.to/gillarohith/automate-your-personal-crm-with-notion-and-kelvin-data-ono</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Notion gives an enormous possibilities of what we can do with a single application and honestly one it's of the best way to manage your personal CRM.&lt;/p&gt;

&lt;p&gt;Now what if there is a way to try fetching the details from online for fields like, twitter id, Linkedin url, name and few other details just by giving in a user email address.&lt;/p&gt;

&lt;p&gt;Feels amazing right?&lt;/p&gt;

&lt;p&gt;Meet &lt;a href="https://www.kelvindata.com/"&gt;Kelvin Data&lt;/a&gt;,  it's an API as a service where developers can access millions of people data with API. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Pre-requisites
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Basic JavaScript&lt;/li&gt;
&lt;li&gt;Node JS&lt;/li&gt;
&lt;li&gt;Notion Account&lt;/li&gt;
&lt;li&gt;Kelvin Data account&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-will-we-be-building"&gt;
  &lt;/a&gt;
  What will we be building
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ClFTf6et--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6JzIGJq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ClFTf6et--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6JzIGJq.png" alt="https://i.imgur.com/6JzIGJq.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--weHdzXyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://p-843661.f1.n0.cdn.getcloudapp.com/items/YEuObYbQ/7bde6b36-74d5-4e58-9768-168708b2061f.gif%3Fv%3D3b53d2ff7791536114bbb7f52a3f2380" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--weHdzXyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://p-843661.f1.n0.cdn.getcloudapp.com/items/YEuObYbQ/7bde6b36-74d5-4e58-9768-168708b2061f.gif%3Fv%3D3b53d2ff7791536114bbb7f52a3f2380" alt="https://p-843661.f1.n0.cdn.getcloudapp.com/items/YEuObYbQ/7bde6b36-74d5-4e58-9768-168708b2061f.gif?v=3b53d2ff7791536114bbb7f52a3f2380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above GIF shows how the API works, it will fetch and fill the data in remaining fields for us. The filling of fields is taken care by Notion Integration.&lt;/p&gt;

&lt;p&gt;LET'S BUILD&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xz0jYIYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/YKLLS6ZGQsrwZVgXix/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xz0jYIYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/YKLLS6ZGQsrwZVgXix/giphy.gif" alt="https://media4.giphy.com/media/YKLLS6ZGQsrwZVgXix/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#notion-integration"&gt;
  &lt;/a&gt;
  Notion Integration
&lt;/h2&gt;

&lt;p&gt;To run any automation and access Notion API we need something called Notion integration.&lt;/p&gt;

&lt;p&gt;You can create your integration by heading over to &lt;a href="https://www.notion.so/my-integrations"&gt;https://www.notion.so/my-integrations&lt;/a&gt; and create your Notion integration.&lt;/p&gt;

&lt;p&gt;Just in case if you get struck anywhere please use the detailed guide mentioned &lt;a href="https://developers.notion.com/docs"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It would look something like this once you finished creating the integration.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vrhczj53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/mh0MYDh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vrhczj53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/mh0MYDh.png" alt="https://i.imgur.com/mh0MYDh.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;KelvinData&lt;/code&gt; is name of my integration, we will be needing the Internal Integration Token for the next section.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-notion-database"&gt;
  &lt;/a&gt;
  Create Notion Database
&lt;/h3&gt;

&lt;p&gt;Go to any Notion page and click on &lt;code&gt;/&lt;/code&gt; and search for &lt;code&gt;Table Full Page&lt;/code&gt; option and click enter.]&lt;/p&gt;

&lt;p&gt;You could find the steps in the below generated GIF.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PFBohh45--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://p-843661.f1.n0.cdn.getcloudapp.com/items/BluxPAoq/28e0f6cd-68e2-493e-b366-632cba813db3.gif%3Fv%3D071f8beb6d51f31a916503ce6e6414cd" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFBohh45--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://p-843661.f1.n0.cdn.getcloudapp.com/items/BluxPAoq/28e0f6cd-68e2-493e-b366-632cba813db3.gif%3Fv%3D071f8beb6d51f31a916503ce6e6414cd" alt="https://p-843661.f1.n0.cdn.getcloudapp.com/items/BluxPAoq/28e0f6cd-68e2-493e-b366-632cba813db3.gif?v=071f8beb6d51f31a916503ce6e6414cd"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you will need to get your database id of the Database that we have created, you can obtain that by following the step mentioned here &lt;a href="https://developers.notion.com/docs#step-2-share-a-database-with-your-integration"&gt;https://developers.notion.com/docs#step-2-share-a-database-with-your-integration&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-integration-to-the-created-notion-database"&gt;
  &lt;/a&gt;
  Add Integration to the created Notion Database
&lt;/h3&gt;

&lt;p&gt;Now, once we have our database, we have to give access to the Notion integration that we have completed in the first step.&lt;/p&gt;

&lt;p&gt;You could find the steps in the below generated GIF.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xHFcEXot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://p-843661.f1.n0.cdn.getcloudapp.com/items/OAunvy8W/71524d66-99cc-41e7-bc1b-620ca32e1f2f.gif%3Fv%3Daaf5b5a9b4705eeb13036d85af2f3b9c" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xHFcEXot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://p-843661.f1.n0.cdn.getcloudapp.com/items/OAunvy8W/71524d66-99cc-41e7-bc1b-620ca32e1f2f.gif%3Fv%3Daaf5b5a9b4705eeb13036d85af2f3b9c" alt="https://p-843661.f1.n0.cdn.getcloudapp.com/items/OAunvy8W/71524d66-99cc-41e7-bc1b-620ca32e1f2f.gif?v=aaf5b5a9b4705eeb13036d85af2f3b9c"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can now add the required columns, for the example we are going to do, we will add&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Name&lt;/li&gt;
&lt;li&gt;Twitter&lt;/li&gt;
&lt;li&gt;LinkedIn&lt;/li&gt;
&lt;li&gt;Email&lt;/li&gt;
&lt;li&gt;Misc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can add many other fields depending on your requirement.&lt;/p&gt;

&lt;p&gt;My table rows looks something like to this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9vxZFPRT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/o6ZC8t4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9vxZFPRT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/o6ZC8t4.png" alt="https://i.imgur.com/o6ZC8t4.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#node-js-application"&gt;
  &lt;/a&gt;
  Node JS Application
&lt;/h2&gt;

&lt;p&gt;For this application, we are going to use JS to build the Node JS app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-application"&gt;
  &lt;/a&gt;
  Create the application
&lt;/h3&gt;

&lt;p&gt;Execute the commands below to create the project and install the required dependencies and dev dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;notion-crm-kelvindata &lt;span class="c"&gt;# Creates new directory&lt;/span&gt;
&lt;span class="nb"&gt;cd &lt;/span&gt;notion-crm-kelvindata &lt;span class="c"&gt;# Moves to the created directory&lt;/span&gt;

npm init &lt;span class="nt"&gt;-y&lt;/span&gt; &lt;span class="c"&gt;# Initialises the basic npm app&lt;/span&gt;

npm &lt;span class="nb"&gt;install&lt;/span&gt; @notionhq/client api dotenv &lt;span class="c"&gt;# Installing the required dependencies&lt;/span&gt;
npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; nodemon &lt;span class="c"&gt;# Installing the required dev dependencies&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#editing-the-packagejson-file"&gt;
  &lt;/a&gt;
  Editing the package.json file
&lt;/h3&gt;

&lt;p&gt;Edit the &lt;code&gt;package.json&lt;/code&gt; file by adding the following lines&lt;/p&gt;

&lt;p&gt;&lt;code&gt;"type": "module",&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will ensure that we can do the ES6 imports.&lt;/p&gt;

&lt;p&gt;in the &lt;code&gt;scripts&lt;/code&gt; section, add the following script&lt;/p&gt;

&lt;p&gt;&lt;code&gt;"dev": "nodemon index.js"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will listen to the changes constantly and run the application.&lt;/p&gt;

&lt;p&gt;After completing it, the &lt;code&gt;package.json&lt;/code&gt; file looks something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"notion-crm-kelvindata"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"module"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon index.js"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"keywords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Rohith Gilla"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ISC"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@notionhq/client"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.3.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"api"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.4.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dotenv"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^10.0.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"nodemon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.0.12"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#environment-file"&gt;
  &lt;/a&gt;
  Environment file
&lt;/h3&gt;

&lt;p&gt;We will need  &lt;code&gt;NOTION_DATABASE_ID&lt;/code&gt;, &lt;code&gt;NOTION_SECRET_KEY&lt;/code&gt;  and &lt;code&gt;KELVIN_DATA_KEY&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We have seen in the first Notion integration setup on how to obtain the database id and the secret key.&lt;/p&gt;

&lt;p&gt;Now we need the awesome Kelvin Data API key, it's simple visit &lt;a href="https://www.kelvindata.com/"&gt;https://www.kelvindata.com/&lt;/a&gt; and click on &lt;strong&gt;Get API Key&lt;/strong&gt; button and fill in the required details and done.&lt;/p&gt;

&lt;p&gt;Save that in an environment file, for ease of access I have created an &lt;code&gt;.env.example&lt;/code&gt; file. You can find the file in the GitHub repository, which will be linked below the blog post.&lt;/p&gt;

&lt;p&gt;It would look like this, but you need to fill in the details in place of strings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;NOTION_DATABASE_ID=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;NOTION_SECRET_KEY=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;KELVIN_DATA_KEY=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#core"&gt;
  &lt;/a&gt;
  Core
&lt;/h3&gt;

&lt;p&gt;Since we are using it as module to use &lt;code&gt;require&lt;/code&gt; keyword we need to define require by the following way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createRequire&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createRequire&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Kelvin Data initialisation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kelvin Data has good API Reference, you can find it here &lt;a href="https://kelvin-data.readme.io/reference/searchv2_query"&gt;https://kelvin-data.readme.io/reference/searchv2_query&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It shows on how to integrate in various frameworks and technologies.&lt;/p&gt;

&lt;p&gt;We use Node so first steps we need to initialise the kelvin data sdk that we are going to use for searching the user database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;kelvinSDK&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;api&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@kelvin-data/v1.0#3bettnkt7yytde&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This line will get the required SDK for us, just a quick word the package &lt;code&gt;api&lt;/code&gt; takes in an OpenAPI specification and generates the &lt;code&gt;SDK&lt;/code&gt; . It is so cool and useful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Notion API initialisation&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@notionhq/client&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;NOTION_SECRET_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NOTION_SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;NOTION_DATABASE_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NOTION_DATABASE_ID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;notion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NOTION_SECRET_KEY&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Querying&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now we have to query ****the Notion table that we have built in step 1.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;notion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;databases&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;database_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NOTION_DATABASE_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Simple, we directly query in the database with &lt;code&gt;database_id&lt;/code&gt; parameter.&lt;/p&gt;

&lt;p&gt;We can pass in multiple parameters to &lt;code&gt;filter&lt;/code&gt; , &lt;code&gt;sort&lt;/code&gt; and give page sizes. Let's keep simple for this example and pass in just the &lt;code&gt;database_id&lt;/code&gt; alone.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get required fields&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now we need all the column objects and also more importantly text on the email field.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;emailText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;plain_text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isAdded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Added&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isAddedBool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isAdded&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isAdded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;linkedIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;LinkedIn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;misc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Misc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;twitter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Twitter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the variables &lt;code&gt;email&lt;/code&gt; &lt;code&gt;name&lt;/code&gt; &lt;code&gt;isAdded&lt;/code&gt; &lt;code&gt;linkedIn&lt;/code&gt; &lt;code&gt;twitter&lt;/code&gt; and &lt;code&gt;misc&lt;/code&gt; contains the values of the corresponding field.&lt;/p&gt;

&lt;p&gt;They are a bit crazy nested objects!!&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const emailText = email[email.type][0]["plain_text"];&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;by doing the above operation we get text of the email.&lt;/p&gt;

&lt;p&gt;If you see there is a field in the database &lt;code&gt;Added&lt;/code&gt;, which is checkbox. This will help us understand if the row has already been processed.&lt;/p&gt;

&lt;p&gt;To get the value of the field, we do the similar thing what we have done to get the value of the field.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const isAdded = result.properties["Added"];&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Initialise the variables with data&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;fullName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;twitterUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;miscData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are the data we want to find out about the person in our use case, we will pre-fill them with "Not Found" value and once we find we will replace with the actual value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search and Save&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isAddedBool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Search and save logic&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First things first, we check if the checkbox value is true, which means that the row has already been processed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hit the Kelvin Data API and get the results&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;searchResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;kelvinSDK&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;searchV2_query&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]({&lt;/span&gt;
  &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;emailText&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since the SDK generates everything for us, we just need to query the api with &lt;code&gt;email&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There are different methods to query the API, you can find those &lt;a href="https://kelvin-data.readme.io/reference/searchv2_query"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now comes the most simple part of the application, getting the required fields from the response and saving them in the variables that we have created above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fullName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;searchResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;full&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;linkedInObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;searchResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;profiles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;network&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linkedin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;twitterObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;searchResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;profiles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;network&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;twitter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;linkedInObj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;linkedInObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;twitterObj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;twitterUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;twitterObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Notion API Update&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The way Notion API update works isn't documented properly for all the use cases, the api docs only talks about updating either a boolean or a number. They don't talk about updating text or other fields.&lt;/p&gt;

&lt;p&gt;With a few digging, this is how I found to update it, note that this may change in the future versions, but it would be mostly similar.&lt;/p&gt;

&lt;p&gt;We need to construct an object to update the fields, that can be done in the following way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;changedResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;Twitter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;twitter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;rich_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;twitterUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;twitterUrl&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;twitterUrl&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;plain_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;twitterUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;LinkedIn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;linkedIn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;rich_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;plain_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;Misc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;misc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;rich_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;miscData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;plain_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;miscData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;Added&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;isAdded&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;checkbox&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;plain_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's go over an object and check what is happening&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;LinkedIn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;linkedIn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rich_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;plain_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;...linkedIn&lt;/code&gt; we are spreading the initial values, since they contain few fields like &lt;code&gt;id&lt;/code&gt; and others.&lt;/li&gt;
&lt;li&gt;We need to override the &lt;code&gt;rich_text&lt;/code&gt; field, to achieve that we do the following by adding the following object to that &lt;code&gt;rich_text&lt;/code&gt; array.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// type of the value&lt;/span&gt;
    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;plain_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similarly we do it with the the other fields.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Last Step update the object using the Notion API&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is pretty straight forward,  we take in the updated object and update the database using the notion api.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;notion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;page_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;changedResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We will keep it simple, the whole function will be wrapped in a &lt;code&gt;try/catch&lt;/code&gt; block.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run periodically&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The function which we have needs to run periodically once say every 5 seconds, more like a cron job but not a cron job.&lt;/p&gt;

&lt;p&gt;We use JavaScript &lt;code&gt;setTimeout&lt;/code&gt; function to achieve this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#stitching-everything-together"&gt;
  &lt;/a&gt;
  Stitching everything together
&lt;/h3&gt;

&lt;p&gt;Now let's put everything we have made together 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createRequire&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createRequire&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@notionhq/client&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;kelvinSDK&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;api&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@kelvin-data/v1.0#3bettnkt7yytde&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;NOTION_SECRET_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NOTION_SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;NOTION_DATABASE_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NOTION_DATABASE_ID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;kelvinSDK&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;KELVIN_DATA_KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;notion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NOTION_SECRET_KEY&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;notion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;databases&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;database_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NOTION_DATABASE_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="c1"&gt;//iterate over response.results&lt;/span&gt;
    &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;emailText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;plain_text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isAdded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Added&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isAddedBool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isAdded&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isAdded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;linkedIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;LinkedIn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;misc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Misc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;twitter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Twitter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;fullName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;twitterUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;miscData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isAddedBool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;searchResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;kelvinSDK&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;searchV2_query&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]({&lt;/span&gt;
          &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;emailText&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;fullName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;searchResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;full&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;linkedInObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;searchResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;profiles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;network&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linkedin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;twitterObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;searchResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;profiles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;network&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;twitter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;linkedInObj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;linkedInObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;twitterObj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;twitterUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;twitterObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;changedResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;Twitter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;twitter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;rich_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                  &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;twitterUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;twitterUrl&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;twitterUrl&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="na"&gt;plain_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;twitterUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;LinkedIn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;linkedIn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;rich_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                  &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="na"&gt;plain_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;linkedInUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;Misc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;misc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;rich_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;miscData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="na"&gt;plain_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;miscData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;Added&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;isAdded&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;checkbox&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="na"&gt;plain_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;notion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;page_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;changedResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#github-repository"&gt;
  &lt;/a&gt;
  GitHub Repository
&lt;/h3&gt;

&lt;p&gt;You can find the repository here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Rohithgilla12/notion-crm-kelvindata"&gt;GitHub - Rohithgilla12/notion-crm-kelvindata&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please star the repository if you liked it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploy-solutions"&gt;
  &lt;/a&gt;
  Deploy Solutions
&lt;/h2&gt;

&lt;p&gt;Here in this blog post we won't be covering the deployment, but will be suggesting a few free alternatives&lt;/p&gt;

&lt;p&gt;You can deploy your Node JS applications on Deta using Deta Micros, you can more about them &lt;a href="https://docs.deta.sh/docs/micros/getting_started/#creating-your-first-micro"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are more comfortable with &lt;a href="https://www.heroku.com/nodejs"&gt;heroku&lt;/a&gt;, you can try that.&lt;/p&gt;

&lt;p&gt;You can use vercel to deploy your NodeJS applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vercel.com/docs/runtimes#official-runtimes/node-js"&gt;Runtimes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also checkout &lt;a href="https://stackblitz.com/edit/node"&gt;StackBlitz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another good resource to checkout is &lt;a href="https://replit.com/"&gt;Replit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are enormous solutions, I have just listed a few.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;The Notion is so powerful and the integrations made it even more powerful.&lt;/p&gt;

&lt;p&gt;Kelvin Data is an amazing API and the ideas are limitless, from a personal CRM to an enterprise level extensions and more.&lt;/p&gt;

&lt;p&gt;Keep shipping and create wonders.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Rohith Gilla&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>node</category>
      <category>api</category>
    </item>
    <item>
      <title>10 best productivity apps for developers</title>
      <author>Invoiless</author>
      <pubDate>Tue, 21 Sep 2021 16:05:50 +0000</pubDate>
      <link>https://dev.to/invoiless/10-best-productivity-apps-for-developers-3mfb</link>
      <guid>https://dev.to/invoiless/10-best-productivity-apps-for-developers-3mfb</guid>
      <description>&lt;p&gt;Developers have to manage a lot of things going on with the proper organization. To deal with this situation, productivity apps play a vital role. Productivity apps have immense importance in your professional or even in your daily life. These apps make your life easier by putting everything under a single tap or click. It improves your overall productivity with extra efficiency. Productivity apps let you manage and smoothly organize all of your tasks. Moreover, the best part of productivity apps is that they save your precious time, which you can utilize in other activities that you love. In this article, we will list down the top &lt;strong&gt;10 productivity apps for developers&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview-of-the-10-productivity-apps-for-developers"&gt;
  &lt;/a&gt;
  Overview of the 10 productivity apps for developers
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#invoiless"&gt;
  &lt;/a&gt;
  &lt;a href="https://invoiless.com"&gt;Invoiless&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iimq7xr---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.invoiless.com/uploads/invoiless_demo_2ac590cd20.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iimq7xr---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.invoiless.com/uploads/invoiless_demo_2ac590cd20.png" alt="Invoiless Demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Invoiless is a top-notch invoice generator application. The SaaS application is equally productive for both developers and non-developers. Instead of spending a fortune on invoice generation, the process is simplified by Invoiless and helps businesses get paid more quickly.&lt;/p&gt;

&lt;p&gt;It offers the facility of generating online invoices and downloadable PDFs so that the clients easily see, print, and share them. You can easily deal with all of your invoices with the help of this application. It is equally popular in SMEs, developers, large companies, online stores, freelancers, etc. as they can easily create and maintain all of their invoices in one place. &lt;/p&gt;

&lt;p&gt;It consists of a very simple and easy-to-understand user interface that accelerates the process of creating, sending, and tracking invoices. Moreover, it gives you the freedom to design your invoices the way you want to. Another feature of Invoiless is that it can be easily integrated with any website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#slack"&gt;
  &lt;/a&gt;
  &lt;a href="https://slack.com"&gt;Slack&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Slack is undoubtedly the most suitable group messaging app to manage your workflow. It allows people on your team or in your organization to have group discussions, one-on-one conversations, video calls, and audio calls related to different assigned tasks. Slack lets you build a perfect community to help in solving various problems. The community has huge importance if we talk about developers. It lets you connect with your team the way you want to be connected such as in real-time, asynchronously, or even in public. Moreover, You can share important files related to your project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#todoist-todo-list-amp-tasks"&gt;
  &lt;/a&gt;
  &lt;a href="https://todoist.com"&gt;Todoist: To-Do List &amp;amp; Tasks&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Todoist is a productivity app that lets you organize and manage all of your projects in less time. If you're looking to save your time, it's one of the best apps to use right now.&lt;/p&gt;

&lt;p&gt;Many people find it difficult to remember different tasks during the week or month. In this situation, Todoist makes it easy to keep track of all of your tasks in one place. This app offers a super-organized to-do list that you can either use personally or with a team as well. It includes a color-coordinated priority feature which helps in prioritizing different tasks.&lt;/p&gt;

&lt;p&gt;Moreover, Todoist integrates with 60+ popular apps like Amazon’s Alexa, Dropbox, Slack, and Zapier to even better organize your output.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#grammarly"&gt;
  &lt;/a&gt;
  &lt;a href="https://grammarly.com"&gt;Grammarly&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Grammar has great importance in any type of writing such as article writing, blog post writing, website writing, and product description writing. As a developer, you communicate with your co-workers, boss, and employer. During those communications, any grammatical or spelling mistake can create a bad impact on your profile.&lt;/p&gt;

&lt;p&gt;To avoid this, Grammarly works as a second pair of eyes. It shows you different grammatical errors, spelling mistakes, and appropriate word suggestions while writing which helps you a lot in writing with confidence.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#trello"&gt;
  &lt;/a&gt;
  &lt;a href="https://trello.com"&gt;Trello&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;As a developer, you share your work and the information related to your working with your teammates. This collaboration with your teammates and co-workers needs to be pretty optimized and organized. Trello apps work best for these purposes.  It helps you organize projects with an easy-to-use layout. It allows you to share important information and other things with ease. With this app, you can group smaller tasks into "cards" and "boards," which can be assigned to groups or team members with a due date. This scheme is quite interesting to manage things without any trouble. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#miro"&gt;
  &lt;/a&gt;
  &lt;a href="https://miro.com"&gt;Miro&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Miro is a cloud-based collaboration tool for small to medium businesses. It includes a digital whiteboard that can be used for various activities such as research, ideation, customer journeys, user story maps, wireframing, and a lot of other collaborative activities.&lt;/p&gt;

&lt;p&gt;The digital whiteboard toolkit allows users to create mock-ups and schemes, write down ideas and leave feedback on other members’ input. You can easily create these boards with pre-loaded templates. Moreover, you can also save them as PPT and PDF. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monday"&gt;
  &lt;/a&gt;
  &lt;a href="https://monday.com"&gt;Monday&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;monday.com is one of the best collaborations and communication apps for teams. It is ideal for task management, project management, and remote collaboration. It allows you to collaborate with your team members from remote locations with ease. Monday.com is quite compact and precise which doesn't create any hassle for end-users. It assembles and displays progress data logically and understandably, which makes it easy to handle even complicated projects. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notion"&gt;
  &lt;/a&gt;
  &lt;a href="https://notion.so"&gt;Notion&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The notion is a productivity application that provides various key components to manage different things such as databases, kanban boards, wikis, calendars, and reminders. All of these components have their significant importance if we specifically talk about developers. You can connect these components to create your systems for knowledge management, note-taking, data management, and project management. Apart from that, you can also use these components individually and according to your needs and requirements. Nonetheless, it offers great value to increase your productivity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#joplin"&gt;
  &lt;/a&gt;
  &lt;a href="https://joplinapp.org"&gt;Joplin&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Joplin is a free note-taking and to-do application. It's an amazing productivity app that can handle and organize a large number of notes. The notes saved in Joplin can be searched, copied, tagged, and modified either from the applications directly or from your text editor. &lt;/p&gt;

&lt;p&gt;Joplin works well with other applications and tools. For example, notes exported from Evernote via .enex files can be imported into Joplin, including the markdown files, images, and attachments, etc.&lt;/p&gt;

&lt;p&gt;Besides this, the notes can be synchronized with various cloud services including Nextcloud, Dropbox, OneDrive, WebDAV, or the file system.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#calendly"&gt;
  &lt;/a&gt;
  &lt;a href="https://calendly.com"&gt;Calendly&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Calendly is a productivity app for scheduling appointments, arranging meetings, and setting events. The ultimate goal of this productivity application is to eliminate the problematic back-and-forth when trying to nail downtimes. With Calendly, you can send your availability with a Calendly link. The receivers can check it out even if they don't use Calendly. It's way better than email chains and phone tags.&lt;/p&gt;

&lt;p&gt;Calendly ensures the ideal time slot for both parties and eliminates time zone confusion. Moreover, it diminishes the strings of conversations about who's available when.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-best-productivity-app-list-for-developers"&gt;
  &lt;/a&gt;
  10 best productivity app list for developers
&lt;/h3&gt;

&lt;p&gt;Developers always aim to achieve more in less time. Hope our list of the &lt;strong&gt;10 best productivity apps&lt;/strong&gt; will help you perform your routine work efficiently. By making your operations faster, these apps will improve your productivity.&lt;/p&gt;

</description>
      <category>developers</category>
      <category>productivity</category>
      <category>apps</category>
      <category>tools</category>
    </item>
    <item>
      <title>World’s Best 10Chat, Video and Voice Calling API &amp; SDK Providers for iOS, Android, and Web </title>
      <author>damon salvatore</author>
      <pubDate>Tue, 21 Sep 2021 16:04:36 +0000</pubDate>
      <link>https://dev.to/damon90/world-s-best-10chat-video-and-voice-calling-api-sdk-providers-for-ios-android-and-web-l5a</link>
      <guid>https://dev.to/damon90/world-s-best-10chat-video-and-voice-calling-api-sdk-providers-for-ios-android-and-web-l5a</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Want to Integrate a Secure Real-time Chat for Your App and Web?&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here I ranked and listed the 10 best chat,video and audio calling API providers list based on security, chat features, popularity, integrations, pricing, support, technology, and the current real-time Chat solution market research report of 2021.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If someone asks your opinion in building app with real time chat features, what will be your reply?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Of course, the first point to cross your mind would be the complexities and challenges while developing an app. However, everything depends on one's perspective on resources and limits. Therefore you might suggest, as they should approach ready-made messaging API &amp;amp; Chat SDK providers instead of building something from scratch.&lt;/p&gt;

&lt;p&gt;Well in those terms, this post could be proven as a guidance as to what are the top most &lt;a href="https://www.mirrorfly.com/chat-api-solution.php"&gt;real time chat API&lt;/a&gt; and SDK providers, their features and functionalities, and much more.&lt;/p&gt;

&lt;p&gt;Further no more delay, let's get started with the general understanding on SDKs and APIs first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-apis-and-sdks-an-overview"&gt;
  &lt;/a&gt;
  What are APIs and SDKs? - An Overview
&lt;/h2&gt;

&lt;p&gt;API is the short term used for Application Programming Interface, this is the software intermediary that enables two applications to communicate with each other. In other words, you can experience the use of APIs whenever you are sending an instant message, or checking upon weather updates on your phone, etc.&lt;/p&gt;

&lt;p&gt;An SDK is generally a set of software development tools that enables the development of an app for a specific platform. SDKs are the collection of APIs along with programming tools and documentation. For instance, the SDK for Java contains an API along with compliers, runtimes and other various tools.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-do-you-need-to-build-a-whitelabel-chat-app"&gt;
  &lt;/a&gt;
  Why Do You Need to Build a Whitelabel Chat App?
&lt;/h3&gt;

&lt;p&gt;For any businesses to have their own personalized &lt;a href="https://blog.mirrorfly.com/build-a-white-label-chat-app/"&gt;whitelabel chat app&lt;/a&gt; is something like a great support to build their brand's reach in the market. This in-app messaging app helps them to bridge the communication gap and provides a fluid networking experience.&lt;/p&gt;

&lt;p&gt;Moreover, integrating the real time video calling SDK into your existing networking infrastructure will not only enhance the internal communication, but will eventually help in communicating with your client, other business leads, or individuals who are interested in your services or products.&lt;/p&gt;

&lt;p&gt;Although the above mentioned content is brief about the need, I think it will be great if i provide you with some more on the video calling SDK’s features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#key-features-of-realtime-chat-solution-for-mobile-and-web-apps"&gt;
  &lt;/a&gt;
  Key Features of Real-time Chat Solution for Mobile and Web Apps
&lt;/h3&gt;

&lt;p&gt;We can see that in the current scenario the instant in-app messaging APIs are winning the battles everywhere, whether it could be interpersonal relationship and communication between the brands and customers or something else.&lt;/p&gt;

&lt;p&gt;This is so possible mainly because of their functionalities that make it stand out in the market. Let’s have a brief look at some of the key features&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;One-to-one &amp;amp; group chat&lt;/li&gt;
&lt;li&gt;Video and Audio Calling&lt;/li&gt;
&lt;li&gt;Multiparty Video Conferencing&lt;/li&gt;
&lt;li&gt;End-to-end encryption&lt;/li&gt;
&lt;li&gt;High-end Scalability&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, let's explore some of the best Chat,Video &amp;amp; Audio API &amp;amp; SDK providers for web and mobile.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-of-top-5-inapp-chat-voice-amp-video-calling-api-amp-sdk-providers-for-web-ios-amp-android-apps"&gt;
  &lt;/a&gt;
  List of Top 5 In-App Chat, Voice &amp;amp; Video Calling API &amp;amp; SDK Providers for Web, iOS &amp;amp; Android Apps
&lt;/h2&gt;

&lt;p&gt;While the market is launching so many players every other day, there are still some outstanding players who have marked their presence with their achievements with uniqueness, when it comes to the capability of their solution.&lt;/p&gt;

&lt;p&gt;Let's have a look at some of the best 10 in-app chat,video and voice calling API,SDK providers with their essentials that includes features, pricing, supportive platform, and much more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-contus-mirrorfly"&gt;
  &lt;/a&gt;
  1. CONTUS MirrorFly
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Visit Website&lt;/strong&gt; : &lt;a href="https://www.mirrorfly.com/"&gt;MirrorFly.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CONTUS MirrorFly, established in the year 2008, is a real time communication API and SDK solution with voice, video, and chat features that works on the core values of connecting businesses and customers.&lt;/p&gt;

&lt;p&gt;In earlier days they launched the market as "ContusFly" and later the brand was renamed as "CONTUS MirrorFly." Since it is based on the SaaP model it is available at a one time license cost. In the market CONTUS MirrorFly has been considered to be the best in app chat, video and voice call API.SDk providers for android,ios and web.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contus-mirrorfly-api-amp-sdk-features"&gt;
  &lt;/a&gt;
  CONTUS MirrorFly API &amp;amp; SDK Features
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;100% Customizable Solution&lt;/li&gt;
&lt;li&gt;150+ realtime chat features&lt;/li&gt;
&lt;li&gt;Video/Voice calling&lt;/li&gt;
&lt;li&gt;Video Conferencing&lt;/li&gt;
&lt;li&gt;Interactive Live Broadcasting&lt;/li&gt;
&lt;li&gt;VoIP Calling (Data Calling)&lt;/li&gt;
&lt;li&gt;Push to Talk (walkie Talkie)&lt;/li&gt;
&lt;li&gt;SIP Calling (App to Phone)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt; : One time license Cost&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Supportive Platforms&lt;/strong&gt; :iOS, Android, and Web Applications&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Popularity&lt;/strong&gt; :The World's top enterprises messaging software, and much more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clients&lt;/strong&gt;: 40+ trusted and satisfied use cases (ikonix, MyGate, cellcard, stc, and more)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-sendbird"&gt;
  &lt;/a&gt;
  2. Sendbird
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Visit Website&lt;/strong&gt; : &lt;a rel="nofollow" href="http://www.sendbird.com/"&gt;Sendbird&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sendbird was established in the year 2012. It is a leading chat SDK solution for Android and web applications which is well known for real time and messaging platforms.&lt;/p&gt;

&lt;p&gt;Sendbird has been recognized by over 150 countries across the world, serving the industries like gaming, e-commerce, on-demand services and marketplaces. It follows an end-to-end AES256 encryption module in terms of security measures for sharing sensitive data along with a user-centric UI/UX design&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sendbird-api-amp-sdk-features"&gt;
  &lt;/a&gt;
  Sendbird API &amp;amp; SDK Features
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;User-to-User Blocking&lt;/li&gt;
&lt;li&gt;Cross-Platform Sync&lt;/li&gt;
&lt;li&gt;Send &amp;amp; Receive Structured Media&lt;/li&gt;
&lt;li&gt;Typing Indicators&lt;/li&gt;
&lt;li&gt;Read Receipts&lt;/li&gt;
&lt;li&gt;Chat Analytics&lt;/li&gt;
&lt;li&gt;Auto-Thumbnail Generation&lt;/li&gt;
&lt;li&gt;Push Notifications&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt; :Monthly subscription&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Supportive Platforms&lt;/strong&gt; :Mobile and web application&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Popularity&lt;/strong&gt; :2018 DEVIES Award, Proddy Award&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clients&lt;/strong&gt;: servicenow, Hinge, PayPay, Delivery Hero, reddit, TELADOC.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-twilio"&gt;
  &lt;/a&gt;
  3. Twilio
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Visit Website&lt;/strong&gt; : &lt;a rel="nofollow" href="http://www.twilio/"&gt;Twilio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Twilio was founded in 2008 with the supportive collaboration of great investors such as Bessemer, Redpoint, and Union Square.&lt;/p&gt;

&lt;p&gt;Twilio is a leading cloud communication service. It enables the user to make and receive phone calls, and the same with text messaging, it allows the user to send and receive text messages. Twilio does all these actions with the support of web service APIs. Moreover, Twilio can also be able to integrate the phone calls and SMS messaging API's into any existing applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#twilio-api-amp-sdk-features"&gt;
  &lt;/a&gt;
  Twilio API &amp;amp; SDK Features
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;One-to-one or group messaging&lt;/li&gt;
&lt;li&gt;Typing indicators and message status check&lt;/li&gt;
&lt;li&gt;Interact via intelligent logic&lt;/li&gt;
&lt;li&gt;Message edit or removal&lt;/li&gt;
&lt;li&gt;Read Receipts&lt;/li&gt;
&lt;li&gt;Message history storage&lt;/li&gt;
&lt;li&gt;Link via chats with external services&lt;/li&gt;
&lt;li&gt;Have a track over old text messages&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt; :Monthly subscription&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Supportive Platforms&lt;/strong&gt; :Android,iOS and Web&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Popularity&lt;/strong&gt; :Superb Owl Award, top rated company outlook 2016, etc&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clients&lt;/strong&gt;:M&amp;amp;S, zendesk, American Red Cross, ING, etc&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-getstream"&gt;
  &lt;/a&gt;
  4. Getstream
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Visit Website&lt;/strong&gt; : &lt;a rel="nofollow" href="http://www.getstream.io/"&gt;Getstream&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Getstream was established in 2014 and is an enterprises-grade chat and activity feed provider that is dealing with over 1B + user engagement. It's enriched features includes strong client-side SDKs for iOS, Android, React, React Native, etc., and also supports the most commonly used server-side languages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getstream-api-amp-sdk-features"&gt;
  &lt;/a&gt;
  Getstream API &amp;amp; SDK Features
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Direct and group chats&lt;/li&gt;
&lt;li&gt;Built-in Giphy and Imgur support&lt;/li&gt;
&lt;li&gt;Link previews&lt;/li&gt;
&lt;li&gt;Emoticons &amp;amp; reactions&lt;/li&gt;
&lt;li&gt;Multi-tenant ready&lt;/li&gt;
&lt;li&gt;Edit and delete messages&lt;/li&gt;
&lt;li&gt;Unlimited users per channel&lt;/li&gt;
&lt;li&gt;Moderation&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt; :Monthly subscription&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Supportive Platforms&lt;/strong&gt; :Android,iOS and Web&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Popularity&lt;/strong&gt; :2021 Innovation Award, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clients&lt;/strong&gt;:NBCSports, CDEPEN, crunchbase, Bunch, DUBSMASH, etc&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-apphitect"&gt;
  &lt;/a&gt;
  5. Apphitect
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Visit Website&lt;/strong&gt; :&lt;a href="https://www.apphitect.ae/instant-messaging-solution.php"&gt;Apphitect&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apphitect.ae was established in 2008 and is a UAE’s leading mobile app development company. Apphitect.ae is the well known chat API and messaging SDK solution for iOS, Android, and web apps.&lt;/p&gt;

&lt;p&gt;It has been mostly recognized in-app chat API mainly due to its unique features of being available at one time licence cost with 100% customization option. Moreover, it ensures a high-end of scalability and security. It can be integrated into any existing application that includes iOS, Android and web applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#apphitect-api-amp-sdk-features"&gt;
  &lt;/a&gt;
  Apphitect API &amp;amp; SDK Features
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;One-to-one &amp;amp; Group chat&lt;/li&gt;
&lt;li&gt;Customizable Solution&lt;/li&gt;
&lt;li&gt;Video &amp;amp; Audio Calling&lt;/li&gt;
&lt;li&gt;Push notifications&lt;/li&gt;
&lt;li&gt;Video Conferencing&lt;/li&gt;
&lt;li&gt;End-to-end encryption&lt;/li&gt;
&lt;li&gt;VoIP/SIP calling&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt; :Monthly subscription&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Supportive Platforms&lt;/strong&gt; :Mobile and Web App&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Popularity&lt;/strong&gt; :Since 2008 has won many Awards and Accolades - smeheroes, Red herring winner asia 100, Gold winner, Clutch, Jan 2014 winner&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clients&lt;/strong&gt;:mahindra, Dr.Reddy's, accenture, THE WORLD BANK, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#planning-to-pick-an-inapp-chat-sdk-software-main-factors-to-look-for"&gt;
  &lt;/a&gt;
  Planning to Pick an In-app Chat SDK Software : Main Factors to Look For!
&lt;/h3&gt;

&lt;p&gt;Since then we have been discussing a variety of market players in the communication sector when it is about to build chat app. It is a must for us to know how to pick the correct one, Yes! The appropriate in-app chat SDK provider. If so, then - what criteria must be considered to proceed further. Therefore, let's have a look at some of the key factor below.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1pricing"&gt;
  &lt;/a&gt;
  1.Pricing
&lt;/h4&gt;

&lt;p&gt;Well, pricing depends - as some providers prefer one time license cost and some offer the same with monthly subscription. But, if you are a small business then it's better to go for a scalable solution with a free plan that can be upgraded later on.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2features"&gt;
  &lt;/a&gt;
  2.Features
&lt;/h4&gt;

&lt;p&gt;Before finalizing the providers be clear with your business requirements concerning features as what is needed and try to filter the list and match that with your software.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3security"&gt;
  &lt;/a&gt;
  3.Security
&lt;/h4&gt;

&lt;p&gt;Whatever be the mode of communication, security plays a vital role throughout. So, you must look for something that can avoid data theft, leakage of confidential data, etc. Must also look for analysing the security compliance and encryption management with the backup storage.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4integration"&gt;
  &lt;/a&gt;
  4.Integration
&lt;/h4&gt;

&lt;p&gt;See to it whether the available in-app chat SDKs and APIs are flexible enough to move with your existing 3rd party device or will they be causing issues in the future run.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5support"&gt;
  &lt;/a&gt;
  5.Support
&lt;/h4&gt;

&lt;p&gt;Looks simple but the most important one. Yes! here you must list down what type of support they offer and if so, how long they offer? and whether they will be providing some paid support if ever needed concerning technical parts, etc.&lt;/p&gt;

&lt;p&gt;Once you are clear with all above queries, you can clearly come to a decision of what way to go with.&lt;/p&gt;

&lt;p&gt;Well, coming to the end of the post, I think this blog can really be a proven guidance for you when it comes to a perfect real time chat API and SDK providers selection.&lt;/p&gt;

&lt;p&gt;Now furthermore, it’s up to you how to proceed with - whether to build chat app or something from scratch. It’s your decision, but still if you prefer to have some clarity simply feel free to contact us. We are there to support you with your dreams to build chat app with your preferences.&lt;/p&gt;

&lt;p&gt;Have a great time!&lt;/p&gt;

</description>
      <category>android</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>mobile</category>
    </item>
    <item>
      <title>Best Coding Apps to Learn Anywhere and Anytime</title>
      <author>mickysingh00</author>
      <pubDate>Tue, 21 Sep 2021 15:59:37 +0000</pubDate>
      <link>https://dev.to/mickysingh00/best-coding-apps-to-learn-anywhere-and-anytime-15po</link>
      <guid>https://dev.to/mickysingh00/best-coding-apps-to-learn-anywhere-and-anytime-15po</guid>
      <description>&lt;p&gt;Coding is something that requires effort, time, dedication, and the zeal to learn something new. Because it's a dynamic field that requires a passionate person. And if you're a passionate one looking for ways to learn coding remotely without paying those gurus heft amount of money. Then here are some free coding apps that are available for android and iOS to help you become a pro coder in months.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Mimo&lt;/li&gt;
&lt;li&gt;Code Hub&lt;/li&gt;
&lt;li&gt;Encode&lt;/li&gt;
&lt;li&gt;Enki&lt;/li&gt;
&lt;li&gt;Grasshoper&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For more free coding apps with in-depth analysis, check out the following link&lt;br&gt;
&lt;a href="https://techynickk.com/best-apps-to-learn-coding/"&gt;https://techynickk.com/best-apps-to-learn-coding/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>learncoding</category>
      <category>codenewbie</category>
      <category>firstpost</category>
    </item>
    <item>
      <title>Ten things you should learn before learning about performance testing</title>
      <author>NaveenKumar Namachivayam ⚡</author>
      <pubDate>Tue, 21 Sep 2021 15:53:05 +0000</pubDate>
      <link>https://dev.to/qainsights/ten-things-you-should-learn-before-learning-about-performance-testing-48mk</link>
      <guid>https://dev.to/qainsights/ten-things-you-should-learn-before-learning-about-performance-testing-48mk</guid>
      <description>&lt;p&gt;So you want to learn about performance testing and progress towards performance engineering or DevOps or Site Reliability Engineering. I get it. Jumping directly into performance testing might be overwhelming. I directed to learn the tool, then the performance concepts. It is like, learning to swim by directly jumping into the pool. Either someone needs to save you from drowning if things go south, or if you are smart enough, you can manage. I was able to manage myself to learn the performance concepts parallel while learning the performance testing tool around a decade ago. &lt;/p&gt;

&lt;p&gt;I do not want you to go down that route. In this blog post I am going to list out ten things you should learn before learning about performance testing and its tools. There is no end to learning stuffs. But I have highlighted the essential and fundamental concepts you may need to go through for your performance testing trip.&lt;/p&gt;

&lt;p&gt;It is not required to be an expert in the below-mentioned topics by learning everything. I would expect you to know at least what it is, how it is and why it is. There are many online courses available for free on YouTube, Free Code Camp, Edx, Coursera, or in your local library. &lt;/p&gt;

&lt;h2&gt;Networking&lt;/h2&gt;

&lt;p&gt;One of the famous quotes from the management expert Peter Drucker is "If you can't measure it, you can't improve it".  As a performance tester, you help to improve the performance of software. &lt;/p&gt;

&lt;p&gt;Predominantly, you will be working on web or mobile applications, web services, client-side performance, operating systems, database performance etc. One common entity among these things is &lt;em&gt;network&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Explore and learn about the history of networking, ARPANET, internet, intranet, network layer, IP v4, IP v6, networking services such as DNS, DHCP, NAT etc., wired, wireless, cellular, and basic network troubleshooting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/playlist?list=PLJ9A48W0kpRJeDShJotYMQy-TM_T2DJRO"&gt;https://youtube.com/playlist?list=PLJ9A48W0kpRJeDShJotYMQy-TM_T2DJRO&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Protocols&lt;/h2&gt;

&lt;p&gt;Protocols are the backbone of any communication. It defines a set of rules that determine how data is transmitted between the devices in a network. Commonly known protocols are HTTP, HTTPS, DNS, TCP, UDP, ICMP, DHCP, FTP, SSH, RDP, SMTP etc.&lt;/p&gt;

&lt;p&gt;Do a quick research into the protocols and their evolution. Deep-dive into the Open System Interconnection (OSI) model and TCP/IP model. &lt;/p&gt;

&lt;p&gt;Learn about modern protocols such as gRPC, IPFS etc. Knowledge of protocol is critical to understanding of your application and its architecture. In some instances, you may need to read the data packets to troubleshoot the issues.&lt;/p&gt;

&lt;h2&gt;Statistics&lt;/h2&gt;

&lt;p&gt;Love it or hate it, you need to refresh the statistics which you studied in school or college. Learn about mean, median, average, percentile, interquartile, standard deviation etc. Formulas such as Little's Law, capacity planning concepts, arrival rate will be very useful once you progress.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/playlist?list=PLJ9A48W0kpRJl6I8ijICDNQD5NFQeHN4X"&gt;https://youtube.com/playlist?list=PLJ9A48W0kpRJl6I8ijICDNQD5NFQeHN4X&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn about how to correlate data, plot charts/graphs, create a trend report, benchmarking etc.&lt;/p&gt;

&lt;h2&gt;Browsers&lt;/h2&gt;

&lt;p&gt;Everyone uses a browser to interact with the applications. Browsers play a critical role in user experience and performance. If the application renders slowly due to network, front-end libraries, backend, or latency on the browser, it will have a negative impact on the brand and revenue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/playlist?list=PLJ9A48W0kpRJk0YNqzyofhPQS1pt_5bUF"&gt;https://youtube.com/playlist?list=PLJ9A48W0kpRJk0YNqzyofhPQS1pt_5bUF&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a performance tester/engineer, you need to understand how a browser works and how you can leverage the browser developer tools and extensions to debug the performance. &lt;/p&gt;

&lt;p&gt;Client-side performance is a hot trend due to the evolution of Single Page Applications built using JavaScript libraries such as Angular, React, Vue etc. &lt;/p&gt;

&lt;h2&gt;Utilities&lt;/h2&gt;

&lt;p&gt;You do not need a sophisticated performance testing tool to measure the performance. Just by sending a ping command, you can measure the latency or by leveraging the browser developer tools, you  can debug the HTTP requests or DOM elements.&lt;/p&gt;

&lt;p&gt;In your leisure time, you can learn various utilities such as cURL, HTTP Pie, MITM Proxy, Fiddler, Wireshark and more. Also, explore Linux commands such as top, htop, netstat, dig, ip, tcpdump etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/playlist?list=PLJ9A48W0kpRJ6Za-PG87scNCJp7kFgW2g"&gt;https://youtube.com/playlist?list=PLJ9A48W0kpRJ6Za-PG87scNCJp7kFgW2g&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Servers&lt;/h2&gt;

&lt;p&gt;Servers are powerful workstations that share resources such as disk, network, computations and more on a network. Servers could be a part of a very simple two-tier or multi-tier architecture, or part of a distributed microservice architecture which scales deep based on the usage. &lt;/p&gt;

&lt;p&gt;As a performance tester/engineer, you need to understand how the HTTP request traverses among the hops and returns the response to the client. &lt;/p&gt;

&lt;p&gt;There are multiple types of servers which define its functionality. The most commonly known types of servers are: application servers, web servers, database servers, mail servers, FTP servers, proxy servers, virtual servers, telnet servers etc. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/09/Ten-things-you-should-learn-before-learning-about-performance-testing.jpeg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5LD7DiyT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/09/Ten-things-you-should-learn-before-learning-about-performance-testing.jpeg" alt="Ten things you should learn before learning about performance testing"&gt;&lt;/a&gt;Ten things you should learn before learning about performance testing&lt;/p&gt;

&lt;p&gt;Understand the various aspects and functions of the server and its configuration, such as operating system type, architecture type, CPU and its cores, memory, disk, network etc. You need to be well aware of the production configuration and stage configuration. &lt;/p&gt;

&lt;h2&gt;Database&lt;/h2&gt;

&lt;p&gt;Data is ubiquitous. Everything is data. After learning about database server configuration, it is important to know about database software. i.e. backend database applications. &lt;/p&gt;

&lt;p&gt;Commonly known database software are Oracle RDBMS, Microsoft SQL, CouchDB, Neo4j, MariaDB, Amazon RDS, MongoDB, CockroachDB etc.&lt;/p&gt;

&lt;p&gt;Learn about database query language, IDE, how to navigate around schema and tables, configuration, statements etc. This will help you to prepare the test data and help us in troubleshoot the issues.&lt;/p&gt;

&lt;p&gt;Most of the performance issues you face might be around database layer.&lt;/p&gt;

&lt;h2&gt;Load Balancers&lt;/h2&gt;

&lt;p&gt;Load balancers help to distribute the tasks among different entities in the network. It can optimize the performance by distributing the load and avoid overloading the servers. It could be either via hardware or software.&lt;/p&gt;

&lt;p&gt;Widely used software based load balancers are Nginx, HAProxy, Amazon ELB, Azure Load Balancer, Varnish Software, Traefik etc.&lt;/p&gt;

&lt;p&gt;Try to understand the load balancers algorithm, configuration, and how it works. &lt;/p&gt;

&lt;h2&gt;Cache&lt;/h2&gt;

&lt;p&gt;The frequently used objects are stored in the cache layer instead of reading them from the disk. This improves the performance drastically, reduces the load, increases the throughput and has many advantages.&lt;/p&gt;

&lt;p&gt;Learn about Content Delivery Network, Cache software and its configuration, Session Management, NoSQL database, &lt;/p&gt;

&lt;h2&gt;Linux&lt;/h2&gt;

&lt;p&gt;Learn Linux right now. If you are not working on a distributed microservice architecture, you will soon. Learn frequently used Linux commands, how to ssh, how to use grep/awk/sed, how to spin up a Linux box and run the test, how to create a user, how to install docker or Kubernetes, bash scripting, regular expressions, file operations, text editors, shell etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/playlist?list=PLJ9A48W0kpRLorIGHOM7g2OUsO2de3ERm"&gt;https://youtube.com/playlist?list=PLJ9A48W0kpRLorIGHOM7g2OUsO2de3ERm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apart from the above ten things, you need to learn about Git, Python scripting, container technologies such as docker, podmad, LXD etc., container orchestration such as Kubernetes, Docker Swarm etc., Grafana, Prometheus, InfluxDB, Observability solutions like Jaeger, Dynatrace, New Relic, HoneyComb, Elastic and more. The list is infinite.&lt;/p&gt;

&lt;p&gt;A performance tester/engineer should be like a "Jack of all trades, master of none", but you should be a master of performance testing and engineering at the core. Please &lt;a href="https://qainsights.com" rel="noreferrer noopener"&gt;add&lt;/a&gt; if I missed anything. &lt;/p&gt;

</description>
      <category>testing</category>
      <category>webperf</category>
      <category>performance</category>
      <category>tools</category>
    </item>
    <item>
      <title>I made an android app that has JS quizzes and you can write and run answers inside </title>
      <author>lechat</author>
      <pubDate>Tue, 21 Sep 2021 15:30:11 +0000</pubDate>
      <link>https://dev.to/lechatthecat/i-made-android-app-that-has-js-quizzes-and-you-can-write-answers-inside-4o9c</link>
      <guid>https://dev.to/lechatthecat/i-made-android-app-that-has-js-quizzes-and-you-can-write-answers-inside-4o9c</guid>
      <description>&lt;p&gt;Do you know websites like Confingbat? I really like that kind of websites and spent a lot of time to solve programming quizzes there.&lt;/p&gt;

&lt;p&gt;But, after solving many quizzes there, I wondered if there is an android app where you can do something like that. It would be better if I could solve quizzes on android app. You know, it would be more relaxing if I could do it on sofa or bed with my phone.&lt;/p&gt;

&lt;p&gt;Well, as far as I searched, I could not find any android app like that.&lt;/p&gt;

&lt;p&gt;So I made such android app by myself. On this Android app, with Javascript, you can solve quizzes by writing and running the answer directly on the app. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.notesoneverythin.jsprogrammingprac"&gt;https://play.google.com/store/apps/details?id=com.notesoneverythin.jsprogrammingprac&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>android</category>
    </item>
    <item>
      <title>Job Burnout: How to Fix at Your Workplace</title>
      <author>b.j.</author>
      <pubDate>Tue, 21 Sep 2021 15:22:34 +0000</pubDate>
      <link>https://dev.to/bettyyjean/job-burnout-how-to-fix-at-your-workplace-5foh</link>
      <guid>https://dev.to/bettyyjean/job-burnout-how-to-fix-at-your-workplace-5foh</guid>
      <description>&lt;p&gt;Have you noticed a shift in the workplace? Are employees starting to look physically and emotionally drained? Should you have capped that meeting last Thursday at 5:30pm instead of letting it run until 6:45pm? Your team might be experiencing job burnout, and it's not stemming from any one incident: burnout is a reaction to prolonged job stress. A Gallup study found that &lt;a href="https://www.gallup.com/workplace/237059/employee-burnout-part-main-causes.aspx"&gt;23% of people&lt;/a&gt; in the workforce experience burnout very often or always, and an additional 44% feel burnt out sometimes. This means that two thirds of employees have felt job burnout somewhat recently, which is a dangerous balance for the health of any team.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://reclaim.ai/blog/workplace-burnout?utm_source=devto&amp;amp;utm_medium=blog-published&amp;amp;utm_campaign=workplace-burnout&amp;amp;utm_term="&gt;With burnout so prevalent in the workplace&lt;/a&gt;, it is essential that management is able to spot and help correct burnout at its very early signs. If you have overlooked or are simply unsure of the symptoms of workplace burnout, we have crafted a guide for managers and leadership to detect burnout, understand the causes, and learn how to prevent it in your employees.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#burnout-signs-amp-symptoms"&gt;
  &lt;/a&gt;
  Burnout signs &amp;amp; symptoms
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://legaljobs.io/blog/employee-retention-statistics/"&gt;HR experts report&lt;/a&gt; that burnout is responsible for over 50% of annual employee turnover, and it can cost more than 200% of a trained employee's salary to replace them. With the high impact of burnout on the workplace, it is important to take notice of the signs and symptoms before they impact your employees' future at the organization.&lt;/p&gt;

&lt;p&gt;Here are some key symptoms to look out for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Workplace detachment: Has a team member seemed distant during meetings, and not as willing to participate in discussions?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exhaustion: While everyone has an occasional week lacking in sleep, is someone consistently showing up to work visibly tired?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Angry outburst: Is someone on the team starting to display anger and short patience with other members of the team?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unexpected absences: Is a team member starting to have more frequent absences unexpectedly?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Losing passion for their work: Is a team member performing their job duties without a lot of care, or appear to be losing enthusiasm around their work?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Work-life balance: Have you noticed or heard that work is starting to negatively impact a team member's personal life?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While the expression of workplace burnout signs vary for each employee, it is important to be on the lookout for any resemblance to these key symptoms. By being more observant and developing a professional relationship with your team, you'll be more familiar with your team's patterns and mannerisms in the workplace which will allow you to catch any red flags before a team member decides to make a career change.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-causes-workplace-burnout"&gt;
  &lt;/a&gt;
  What causes workplace burnout?
&lt;/h2&gt;

&lt;p&gt;A lot of the time, people think of burnout as a state where you're just working long hours. Certainly, long hours can be a sign of burnout, but here's a different perspective you probably haven't heard before: burnout doesn't just come from long hours. It comes from long hours working on stuff that just isn't going anywhere fast. If employees are spending 7 hours a day in meetings and catching up on email, that's not particularly exciting or invigorating. It's just busy work, and it's the equivalent of banging your head against the wall. Similarly, if the company imposes way too much bureaucracy and process around getting stuff done (e.g., shipping a new feature takes several dozen approvals and hours upon hours of meetings) that can also be the kind of work that burns people out. &lt;/p&gt;

&lt;p&gt;Working long hours, or even just your standard 40, in service of something that is truly exciting can actually have the opposite effect of burnout: it can be a huge motivator to stay at the company you're at. Seeing progress on something that you love working on is really why we get up in the morning, after all. &lt;/p&gt;

&lt;p&gt;Here are the main causes of workplace burnout:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Lack of connection with mission: Every company starts with a mission, but if it is not properly communicated and upheld internally, employees can become disconnected. Your team will be more passionate, engaged, and work harder when aligned with your mission.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Too much time in meetings: Employees spend too much time in long, redundant, and unnecessary meetings, leaving them exhausted from non-stop discussions with insufficient time to complete their work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Uninspired work: Employees are losing motivation because their work is monotonous and does not feel meaningful, so they're uninspired and leave most days without a great sense of accomplishment. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Blocked by bureaucracy: Employees may also be losing motivation because they are trying to make real progress, but are continuously blocked, redirected, and sent backwards by internal bureaucracy, which leaves them feeling defeated and inadequate in their role.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unrealistic goals: Employees are simply burdened with a workload that is far beyond their capacity due to poor time planning internally, which makes them feel like they're stretched too thin and a failure for continuously falling short of the unrealistic goals.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lack of direction or engagement: If employees are working towards unclear goals, have insufficient direction, feedback or training from above, or are just plain unsure of what you expect from them, it can cause great frustration at work and stress around their own job performance.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To be clear, if your team is not getting sufficient time for a personal life and aren't getting downtime to reset their brains, that can absolutely be a cause of burnout. But burnout is a much more complex issue than giving everyone a day off. It's also imperative that you can answer the question of "Are you giving employees an exciting reason to get out of bed every morning and come to work?" If not, you'll find people burning out very quickly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-companies-prevent-employee-burnout"&gt;
  &lt;/a&gt;
  How can companies prevent employee burnout?
&lt;/h2&gt;

&lt;p&gt;The biggest challenge companies have in addressing burnout is misunderstanding its root cause. With only &lt;a href="https://www.stress.org/42-worrying-workplace-stress-statistics"&gt;43% of US employees&lt;/a&gt; thinking that employers care about their work-life balance, your company may do things like "&lt;a href="https://reclaim.ai/blog/no-meeting-day"&gt;no meeting Wednesdays&lt;/a&gt;" or "take Friday off for the next month", which are absolutely helpful in terms of giving people the space they need to focus on their lives, but often don't address the core issue: that people simply aren't motivated by what they're doing and are finding it too hard to just get the simple things done.&lt;/p&gt;

&lt;p&gt;If an employee is given a day off, that's a great thing for their mental and emotional health. But if the moment they return to the office, they're met with the same old problems and lack of excitement, they'll soon return to a state of burnout. In other words, it's like plugging a gushing leak with a flimsy bandaid. It might deter it for a moment, but not much longer than that.&lt;/p&gt;

&lt;p&gt;If you're looking to make a real change preventing burnout at your company, start at the top, with leadership. Ask questions like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Are we focused on stuff that is truly moving the business forward, and do employees share the belief that we are?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Are we spending too much time doing busy work instead of the work that moves our strategy forward?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Are people getting distracted by meetings, emails, and other kinds of shallow work -- and is that preventing them from working on our key priorities?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Are people excited by the work they do here?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These questions will lead to very different solutions around burnout, many of which have nothing whatsoever to do with the hours people work or their work-life balance. It's about addressing company culture and direction. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-the-cost-of-burnout"&gt;
  &lt;/a&gt;
  What's the cost of burnout?
&lt;/h2&gt;

&lt;p&gt;The effect may actually be more topline than bottom! A lot of the workplace burnout that employees may be facing is causing companies to lose money as opposed to retaining money. Not only is burnout costing in actual funds, burnout is also coming at the cost of top tier talent. If you can't attract and retain employees who are excited by your vision and your strategy, you'll end up burning out a lot of folks, and over time, you won't be able to attract great talent. 65% of employees feel they could find a better position somewhere else according to &lt;a href="https://legaljobs.io/blog/employee-retention-statistics/"&gt;Legal Jobs&lt;/a&gt;, but highly engaged employees are 75% less likely to look for a new job. Yes, people need to be compensated well. Yes, they need balance between their work and life. Yes, they need to not be online 60+ hours a week.&lt;/p&gt;

&lt;p&gt;But ultimately, working a full-time job, even with the occasional long hours, on something you find exciting -- because you want to work those hours, because you're motivated to do so -- can be rewarding. It's not a habit that your company should force or embed in your culture, and you certainly don't want employees to feel they have to work long hours to get ahead, but it's also imperative to understand that many people want to wake up every day feeling excited about what they do. And fixing that will often fix your burnout problem faster than you think.&lt;/p&gt;

</description>
      <category>career</category>
      <category>burnout</category>
      <category>productivity</category>
      <category>management</category>
    </item>
    <item>
      <title>What Gatsby v4 brings to your static site?</title>
      <author>Ondrej Polesny</author>
      <pubDate>Tue, 21 Sep 2021 15:11:33 +0000</pubDate>
      <link>https://dev.to/kentico-kontent/what-gatsby-v4-brings-to-your-static-site-3bao</link>
      <guid>https://dev.to/kentico-kontent/what-gatsby-v4-brings-to-your-static-site-3bao</guid>
      <description>&lt;p&gt;The new version of Gatsby is available in beta and brings many improvements. How are they going to affect you and the development and maintenance of your sites?&lt;/p&gt;

&lt;p&gt;In this article, I summarize the key new features that Gatsby v4 brings and explain how each of them will affect your daily work with a Gatsby site.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gatsby-v4-improvements"&gt;
  &lt;/a&gt;
  Gatsby v4 Improvements
&lt;/h1&gt;

&lt;p&gt;Gatsby v4 was officially introduced and made available as a public beta last week during Gatsby Camp and it brought major updates:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;New rendering modes for pages&lt;/li&gt;
&lt;li&gt;Parallel query processing&lt;/li&gt;
&lt;li&gt;Improved Gatsby Cloud preview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's start with the first and see what changes for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-rendering-modes-for-pages"&gt;
  &lt;/a&gt;
  New rendering modes for pages
&lt;/h2&gt;

&lt;p&gt;Gatsby introduced support for two additional modes and now lets you use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SSG - static site generation = pages generated during a build&lt;/li&gt;
&lt;li&gt;DSG - deferred static generation&lt;/li&gt;
&lt;li&gt;SSR - server-side rendered&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SSG is the original concept of static site generators, so let's start with the second one - the deferred static generation. It's not a new concept. We've been successfully using it with &lt;a href="https://vercel.com/docs/next.js/incremental-static-regeneration"&gt;Next.js&lt;/a&gt; and Netlify had already introduced a similar improvement for other static site generators with their &lt;a href="https://www.netlify.com/blog/2021/04/14/distributed-persistent-rendering-a-new-jamstack-approach-for-faster-builds/"&gt;Distributed Persistent Rendering&lt;/a&gt; and &lt;a href="https://docs.netlify.com/configure-builds/on-demand-builders/"&gt;On-Demand Builders&lt;/a&gt;. The idea is, you pre-build only the core parts of a large site and leave the rest to be generated and cached (stored) only after the server receives a request for a specific page from the first visitor. In other words, on-demand.&lt;/p&gt;

&lt;p&gt;Having DSG now available in Gatsby is definitely a great improvement. In the past, it was challenging to use Gatsby for large sites as the build times grew with content significantly. Now, with DSG and Server-Side-Rendering mode (that we all saw coming with the introduction of serverless functions this spring), you now get full control over how each page of your site gets rendered.&lt;/p&gt;

&lt;p&gt;However, there is one downside. From my experience, Gatsby is often used by beginners. Don't get me wrong - many of them are experienced developers, just not with JavaScript. And what they value the most is the low entry barrier. They could get a site up and running very quickly, they didn't have to read any docs as the GraphQL data sourcing allowed them to see every content that's available, and for anything extra, there was always a plugin.&lt;/p&gt;

&lt;p&gt;While all of that is still true, the added rendering modes (SSR, DSG) require developers to make informed decisions that require them to learn more. The time they need to invest to see their new site live increases. And the same applies to onboarding developers.&lt;/p&gt;

&lt;p&gt;Now, you may argue here that they would need to learn that with any framework anyway and that's true. But Gatsby, until now, was a perfect stepping stone into Jamstack on React. Just like Gridsome is on Vue. I've seen many agencies tipping their toe in the Jamstack water with Gatsby and the low entry barrier was the biggest attraction for them.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: See the full explanation of Gatsby's rendering modes in &lt;a href="https://youtu.be/6Eglvixg4eg?t=307"&gt;this video&lt;/a&gt; or in &lt;a href="https://v4.gatsbyjs.com/docs/conceptual/rendering-options/"&gt;their docs&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#parallel-query-processing"&gt;
  &lt;/a&gt;
  Parallel query processing
&lt;/h2&gt;

&lt;p&gt;Another great improvement towards decreasing the build time. It's actually not optimizing the build but distributes the computation of page queries to multiple processor cores that work in parallel. The Gatsby team made this possible by moving the content from the Redux store to &lt;a href="https://en.wikipedia.org/wiki/Lightning_Memory-Mapped_Database"&gt;LMDB&lt;/a&gt; that supports concurrent access. So we're getting better build time by efficiently using the hardware. Good thing is, you don't need to take any action besides upgrading to the newest version of Gatsby.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gatsby-cloud-preview-update"&gt;
  &lt;/a&gt;
  Gatsby Cloud preview update
&lt;/h2&gt;

&lt;p&gt;If you saw &lt;a href="https://www.youtube.com/watch?v=06K_lGH9hrY"&gt;my talk at Gatsby Conf&lt;/a&gt; this spring, you know that editors expect their CMS to generate previews of their content and they expect it to do it instantly. With Gatsby, this was made possible with incremental builds that took only a few seconds. Now, the Gatsby team took the preview experience on Gatsby Cloud one level further and implemented a UI panel that tells the editor in real-time that preview is coming.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j_2KzyRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4r07oymd4scsvtpyvl8l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j_2KzyRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4r07oymd4scsvtpyvl8l.png" alt="New Gatsby Cloud Preview panel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, apart from that, the Gatsby team is constantly working on differentiating Gatsby Cloud from other hosting platforms and now claims that it is capable of 10x faster deploys.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#kontent-and-gatsby-v4"&gt;
  &lt;/a&gt;
  Kontent and Gatsby v4
&lt;/h1&gt;

&lt;p&gt;If you're using &lt;a href="https://kontent.ai/"&gt;Kontent by Kentico&lt;/a&gt; as a content source for your Gatsby site, you're probably using both of these packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://github.com/Kentico/kontent-gatsby-packages/blob/master/packages/gatsby-source-kontent#readme"&gt;Gatsby Source Kontent Plugin&lt;/a&gt;&lt;/strong&gt;
Plugin providing data from Kontent REST API to Gatsby GraphQL model.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://github.com/Kentico/kontent-gatsby-packages/blob/master/packages/gatsby-kontent-components#readme"&gt;Gatsby Kontent Components&lt;/a&gt;&lt;/strong&gt;
Package with React components that process Kontent data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We've prepared the new source plugin version ahead of the Gatsby v4 beta release. However, it will be merged only after the v4 is fully released, so until then, make sure to check out &lt;a href="https://github.com/Kentico/kontent-gatsby-packages/pull/192"&gt;this version&lt;/a&gt; of the source plugin.&lt;/p&gt;

&lt;p&gt;The Gatsby Kontent Components package is fully compatible with both the current and the new versions of the source plugin.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#should-i-upgrade"&gt;
  &lt;/a&gt;
  Should I upgrade?
&lt;/h1&gt;

&lt;p&gt;The presented changes have one thing in common - Gatsby is trying hard to enable large-scale applications. They constantly work on decreasing build times (which interestingly brought new potential with the move of the content store), providing options to avoid building everything, improving the Gatsby Cloud services, focusing more on the content editor experience, and working closely with strategic partners.&lt;/p&gt;

&lt;p&gt;If your site runs on Gatsby, I'd encourage you to try out the new features as they solve the problems of the majority of sites.&lt;/p&gt;

</description>
      <category>gatsby</category>
      <category>react</category>
      <category>jamstack</category>
      <category>javascript</category>
    </item>
    <item>
      <title>list of awesome things related to React Hooks 😍</title>
      <author>Said Mounaim</author>
      <pubDate>Tue, 21 Sep 2021 15:11:15 +0000</pubDate>
      <link>https://dev.to/said_mounaim/list-of-awesome-things-related-to-react-hooks-1hl2</link>
      <guid>https://dev.to/said_mounaim/list-of-awesome-things-related-to-react-hooks-1hl2</guid>
      <description>&lt;p&gt;
  &lt;br&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vj8t3L7I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/WPzCqxY/react-hooksmeme.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vj8t3L7I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/WPzCqxY/react-hooksmeme.jpg" alt="meme of react hooks"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#awesomereacthooks"&gt;
  &lt;/a&gt;
  awesome-react-hooks
&lt;/h1&gt;

&lt;p&gt;A curated list of awesome things related to React Hooks &lt;/p&gt;

&lt;p&gt;Github : &lt;a href="https://github.com/saidMounaim/awesome-react-hooks"&gt;https://github.com/saidMounaim/awesome-react-hooks&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>reacthooks</category>
    </item>
    <item>
      <title>Object Oriented Programming in Java</title>
      <author>vindhya Hegde </author>
      <pubDate>Tue, 21 Sep 2021 14:55:25 +0000</pubDate>
      <link>https://dev.to/vindhyasadanand/object-oriented-programming-in-java-50ko</link>
      <guid>https://dev.to/vindhyasadanand/object-oriented-programming-in-java-50ko</guid>
      <description>&lt;p&gt;Object-oriented programming helps us with data security, code reusability, and also helps us to improve code readability.&lt;br&gt;
Let us see and Understand different Object-oriented concepts with code examples.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#1abstraction"&gt;
  &lt;/a&gt;
  1.Abstraction
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WtxvtX82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/736x/ca/ac/56/caac56b1013ed6b47bf4fa4ef72f34c8--real-life-things-to.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WtxvtX82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/736x/ca/ac/56/caac56b1013ed6b47bf4fa4ef72f34c8--real-life-things-to.jpg" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
-&amp;gt;Means showing only essential parts and hiding the implementation details.&lt;br&gt;
-&amp;gt;Only the functionality will be provided to the user,&lt;br&gt;
 in other words user will have the information on what the object &lt;br&gt;
 does instead how it does.&lt;br&gt;
-&amp;gt;Here we will be hiding the details of our class from the outside world.What happens within the class will not be known to the outside users.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;abstract class Car
{
    abstract void run();
}
class Baleno extends Car
{
    void run()
    {
        System.out.println("drive car safely");
    }
}
public class Main
{

    public static void main(String args[])
    {
       Car c = new Baleno();
       c.run();

    }

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2encapsulation"&gt;
  &lt;/a&gt;
  2.Encapsulation
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tWQXT7a3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://www.expertphp.in/images/articles/ArtImgKPTPrr_OOP4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tWQXT7a3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://www.expertphp.in/images/articles/ArtImgKPTPrr_OOP4.jpg" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
-&amp;gt;Binding variables and methods under a single entity. &lt;br&gt;
-&amp;gt;Or It is a mechanism of wrapping the data(variables) and code acting on the data(methods) together in a single unit. Data (variables) present inside class can be accessed only through methods of the current class.Therefore it is also known as data hiding,&lt;br&gt;
 To achieve encapsulation in java&lt;br&gt;
 -&amp;gt;Declare the variables as private : if we declare variables as private then it will not be visible to the outside world. &lt;br&gt;
 -&amp;gt; If we want to access these private variables then,&lt;br&gt;
 Provide public setter and getter methods to modify and view the variables values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Student
{

    private String sname;

    public String getName()
    {
        return sname;
    }

    public void setName(String name)
    {
        sname = name;
    }

}

public class Main
{

    public static void main(String args[])
    {
        Student f1 = new Student();
        f1.setName("Vindhya");
        System.out.println(f1.getName());

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3inheritence"&gt;
  &lt;/a&gt;
  3.Inheritence
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ej3ryGYd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codestall.files.wordpress.com/2017/09/inheritance.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ej3ryGYd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codestall.files.wordpress.com/2017/09/inheritance.png" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
-&amp;gt;Acquiring properties of one class to another class.&lt;br&gt;
-&amp;gt;If we consider parent class and child class ,then child class &lt;br&gt;
  will acquire the Properties of Parent class.&lt;br&gt;
-&amp;gt;Parent class is also known as Base class and Super class.&lt;br&gt;
  Child class is also known as derived class and subclass.&lt;br&gt;
-&amp;gt;In general  children will acquire the properties of their parent &lt;br&gt;
  that is example for inheritance&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Base
{
   void method1()
   {
       System.out.println("Parent class");
   }   

}
class Derived extends Base
{
    void method2()
    {
        System.out.println("Child class");
    }
}
public class Main{
    public static void main(String args[])
    {
         Derived d = new Derived();
         d.method1();
         d.method2();
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#4polymorphism"&gt;
  &lt;/a&gt;
  4.Polymorphism
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6K-n5wXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/780/1%2AOPkH3mxC97uaMCldI6OGZg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6K-n5wXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/780/1%2AOPkH3mxC97uaMCldI6OGZg.jpeg" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
-&amp;gt;The ability of an Object to take many forms&lt;br&gt;
-&amp;gt;Performing the same task in different ways.&lt;br&gt;
-&amp;gt;here task means method.Polymorphism is a combination of two &lt;br&gt;
  different words poly means many and morphs means forms. &lt;br&gt;
-&amp;gt;Finally polymorphism gives the meaning of many forms&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Multiply{
    static int multiply(int a,int b)
    {
        return a*b;
    }
    static double multiply(double a, double b)
    {
        return a*b;
    }
}

public class Main{

    public static void main(String args[])
    {
        System.out.println(Multiply.multiply(2,3));
        System.out.println(Multiply.multiply(1.1,2.1));

    }

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thank You&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
