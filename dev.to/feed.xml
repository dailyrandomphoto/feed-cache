<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Share your salary and see what everyone else is making in DevOps</title>
      <author>DEVOPS-JOBS.NET</author>
      <pubDate>Wed, 04 Aug 2021 06:54:20 +0000</pubDate>
      <link>https://dev.to/devops_jobsnet/share-your-salary-and-see-what-everyone-else-is-making-in-devops-la4</link>
      <guid>https://dev.to/devops_jobsnet/share-your-salary-and-see-what-everyone-else-is-making-in-devops-la4</guid>
      <description>&lt;p&gt;We were wondering quite recently what the global salary landscape in the DevOps / Cloud Engineering world would look like. Searching around for some data provided few results and basically all of them didnâ€™t provide a full dataset for us to play around with and use freely.&lt;/p&gt;

&lt;p&gt;So we decided to set up our own survey, ask the global DevOps scene what theyâ€™re making anually, and then release all the data for free afterwards in the public domain under &lt;a href="https://creativecommons.org/share-your-work/public-domain/cc0/"&gt;CC0 license terms&lt;/a&gt;. Which literally means global salary data from the public, for the public.&lt;/p&gt;

&lt;p&gt;We went on quickly by defining some generalized attributes that would make a really simplistic survey everyone can fill it out in under a minute and donâ€™t have to think too hard while doing it, but would still provide as much valuable information as possible so you can derive real insights from it. All of this in an anonymized fashion, of course. We donâ€™t like touching PII anyways â€“ &lt;a href="https://devops-jobs.net/about/"&gt;not really our business&lt;/a&gt; ðŸ˜‰&lt;/p&gt;

&lt;p&gt;It took almost two weeks of deliberations about what to ask for â€“ yeah it gets quite difficult when you start thinking about what makes sense and trying not to mess it up completely â€“ and in roughly a weekend our little salaries app (Django + SQLite are your friends, yay) was built and ready to launch.&lt;/p&gt;

&lt;p&gt;ðŸŽ‰ Released a few days ago you can check (and fill) it out here: &lt;a href="https://salaries.devops-jobs.net/"&gt;https://salaries.devops-jobs.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As soon as we have a little valid dataset and solved some open issues along the way (noticed we provide a selection of the 30 most used currencies in global trade? Probably some averaged conversion into USD for all non-USD salaries would be nice having added to the data as well ðŸ¤”) weâ€™ll release a first dump of the data &lt;a href="https://salaries.devops-jobs.net/download"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the end we think it would be great if we can manage to create a sort of rolling survey throughout the year with a constantly updated dataset that everyone can use as they wish â€“ candidates, recruiters, hr departments, startup founders, data scientists, you name itâ€¦&lt;/p&gt;

&lt;p&gt;We made everything a select/choice field to avoid free-form input in general, except for the salary value of course. The job titles are the ones that are popular on our &lt;a href="https://devops-jobs.net/"&gt;DevOps job board&lt;/a&gt;, just to stay real and not list decades old jobs that practially donâ€™t mean anything and arenâ€™t even hired for anymore. We provide an open API for this too (see &lt;a href="https://devops-jobs.net/api/list-job-titles/"&gt;https://devops-jobs.net/api/list-job-titles/&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;If you like the idea and want to help us to gather a free and open database of DevOps salary information, feel free to share this survey with anyone who likes to fill out salary surveys â€“ just kidding â€“ the more data the better obviously ðŸ˜‰&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This post originally appeared under &lt;a href="https://insights.devops-jobs.net/share-your-salary-and-see-what-everyone-else-is-making-in-devops/"&gt;https://insights.devops-jobs.net/share-your-salary-and-see-what-everyone-else-is-making-in-devops/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>career</category>
      <category>insights</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Why make a Bootstrapy Website if there's TailwindCss!</title>
      <author>jobpick.in</author>
      <pubDate>Wed, 04 Aug 2021 06:10:25 +0000</pubDate>
      <link>https://dev.to/jobpick/why-make-a-bootstrapy-website-if-there-s-tailwindcss-5c3c</link>
      <guid>https://dev.to/jobpick/why-make-a-bootstrapy-website-if-there-s-tailwindcss-5c3c</guid>
      <description>&lt;p&gt;&lt;strong&gt;How Tailwind Is Different From Other Frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tailwind&lt;/strong&gt; is different from frameworks like Bootstrap, Foundation, or Bulma in that it's not a UI kit.&lt;/p&gt;

&lt;p&gt;Most UI frameworks like Bootstrap, Material UI, Bulma etc. have pre-designed UI components like cards, buttons, navbars, alerts. You use those components and create designs on top of those components.                                                  &lt;/p&gt;

&lt;p&gt;But in &lt;strong&gt;Tailwind CSS&lt;/strong&gt;, you don't get a pre-designed set of components. You get utility-classes. You can combine those to create your layout and components.&lt;br&gt;
Because Tailwind is so low-level, it never encourages you to design the same site twice. Even with the same color palette and sizing scale, it's easy to build the same component with a completely different look in the next project.&lt;/p&gt;

&lt;p&gt;It doesn't have a default theme, and there are no built-in UI components.&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jckh7uVY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z433piduf4676m7ykt70.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jckh7uVY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z433piduf4676m7ykt70.jpg" alt="frameworks"&gt;&lt;/a&gt;                          &lt;/p&gt;

&lt;p&gt;On the flip side, it also has no opinion about how your site should look and doesn't impose design decisions that you have to fight to undo.                                             &lt;/p&gt;

&lt;p&gt;If you're looking for a framework that comes with a menu of predesigned widgets to build your site with, Tailwind might not be the right framework for you.                              &lt;/p&gt;

&lt;p&gt;But if you want a huge head start implementing a custom design with its own identity, Tailwind might be just what you're looking for.       &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Utility-first&lt;/strong&gt;                                            &lt;/p&gt;

&lt;p&gt;Creating a framework for building custom UIs means you can't provide abstractions at the usual level of buttons, forms, cards, navbars, etc.&lt;/p&gt;

&lt;p&gt;Instead, Tailwind provides highly composable, low-level utility classes that make it easy to build complex user interfaces without encouraging any two sites to look the same.          &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Responsive&lt;/strong&gt;&lt;br&gt;
If you use Tailwind CSS, you don't need to write &lt;strong&gt;custom styles&lt;/strong&gt; for handling responsiveness for different screen sizes. You can use Tailwind's responsive utilities to handle it easily.&lt;/p&gt;

&lt;p&gt;Frameworks like &lt;strong&gt;Bootstrap&lt;/strong&gt; have one major &lt;strong&gt;disadvantage&lt;/strong&gt;. Due to increased growth and usage, they became too big and offer less control over their styles. Learning frameworks like Bootstrap has become increasingly challenging because developers have to learn hundreds of classes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tailwind&lt;/strong&gt; and &lt;strong&gt;bootstrap&lt;/strong&gt; both have their place in the development landscape, but youâ€™re better off to learn raw CSS as a fundamental skill first, then try and use both of the frameworks and make your decisions in a position of understanding.&lt;/p&gt;

&lt;p&gt;So that was it from this articleðŸ˜‡.Hope you find this article helpful. Please share your thoughts/comments/feedback either in comment section or you can DM us at &lt;a href="https://twitter.com/job_pick"&gt;twiter&lt;/a&gt; , &lt;a href="https://jobpick.in/"&gt;jobpick.in&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>react</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>Visual Studio Code Update 2021 ðŸ”¥ (VS Code new Updates)</title>
      <author>Stacksjar</author>
      <pubDate>Wed, 04 Aug 2021 06:02:52 +0000</pubDate>
      <link>https://dev.to/stacksjar/visual-studio-code-update-2021-43gb</link>
      <guid>https://dev.to/stacksjar/visual-studio-code-update-2021-43gb</guid>
      <description>&lt;p&gt;There are a number of updates in this update of Visual Studio Code March update version 1.55 that will be liked by most of the users. We will checkout some of the interesting points in this post today.&lt;/p&gt;

&lt;p&gt;Improved Integrated Terminal&lt;br&gt;
The terminal now supports defined profiles, which appear in the terminal's dropdown, to conveniently launch non-default shells&lt;/p&gt;

&lt;p&gt;Below image shows the list of all supported terminals in latest version of VS Code, you can check this in terminals dropdown and select as per your preferences.&lt;/p&gt;

&lt;p&gt;You can also add new or edit existing terminal profiles by using the terminal.integrated.profiles. setting.&lt;/p&gt;

&lt;p&gt;Below is the example for doing so:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;"terminal.integrated.profiles.windows": {&lt;br&gt;
  // Add a PowerShell profile that doesn't run the profile&lt;br&gt;
  "PowerShell (No Profile)": {&lt;br&gt;
      // Some sources are available which auto detect complex cases&lt;br&gt;
      "source": "PowerShell",&lt;br&gt;
      "args": ["-NoProfile"],&lt;br&gt;
      // Name the terminal "PowerShell (No Profile)" to differentiate it&lt;br&gt;
      "overrideName": true&lt;br&gt;
  },&lt;br&gt;
  // Remove the builtin Git Bash profile&lt;br&gt;
  "Git Bash": null,&lt;br&gt;
  // Add a Cygwin profile&lt;br&gt;
  "Cygwin": {&lt;br&gt;
    "path": "C:\\cygwin64\\bin\\bash.exe",&lt;br&gt;
    "args": ["--login"]&lt;br&gt;
  }&lt;br&gt;
}&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Seamless Terminal Relaunching&lt;br&gt;
VS Code have introduced automatic relaunching of terminals when an extension wants to change the environment. The team now states that they have solved flickering issue of terminals that was caused before when the relaunch occurs.&lt;/p&gt;

&lt;p&gt;There is also a new setting to disable this automatic relaunching all together terminal.integrated.environmentChangesRelaunch.&lt;/p&gt;

&lt;p&gt;Multi-cursor support&lt;br&gt;
They have added initial screen reader support for multiple cursors. Whenever a new cursor is added, VS Code now announces it along with the cursor line and column position.&lt;/p&gt;

&lt;p&gt;VS Code also announces when secondary cursors have been removed. They plan to further improve multi-cursor accessibility as they receive feedback by users.&lt;/p&gt;

&lt;p&gt;Screen Reader limit Improved&lt;br&gt;
They have increased the number of lines that a "Say All" command can read. Previously, VS Code had a hard limit of 100 lines that could be announced by a screen reader at one time, and now increased this limit to 1000.&lt;/p&gt;

&lt;p&gt;Note: The editor.accessibilityPageSize is now deprecated but team says they will carry out this feature in some of the future releases. &lt;/p&gt;

&lt;p&gt;Emmet&lt;br&gt;
The emmet.extensionsPath setting now takes in only string arrays, and can be directly edited in the Settings editor.&lt;/p&gt;

&lt;p&gt;Search in Open Editors&lt;br&gt;
New feature has been introduced that will Search Only in Open Editors checkbox in a workspace search to change from searching the entire workspace to only searching in files that have been opened in editor tabs&lt;/p&gt;

&lt;p&gt;In the previous versions this was enabled via an opt-in, but in this update they've enhanced the behavior with files that have not yet been loaded in the VS Code session and enabled it by default which makes productivity more efficient.&lt;/p&gt;

&lt;p&gt;Debugging&lt;br&gt;
There are couple of Improvements to features for user who debug directly from Visual Studio code&lt;/p&gt;

&lt;p&gt;VS Code now have Inline menu to edit conditions and hit count. It now show's an inline menu for editing conditions and hit counts for function breakpoints. &lt;/p&gt;

&lt;p&gt;In the previous versions the inline edit button would choose automatically what condition to edit. The menu make's the flow easier and give more control to the user. &lt;a href="https://stacksjar.com/post/visual-studio-code-march-2021-update"&gt;Read More on VS Code Update 2021&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read More Such Articles Here:- &lt;a href="https://stacksjar.com"&gt;Stacksjar.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>productivity</category>
      <category>programming</category>
      <category>codequality</category>
    </item>
    <item>
      <title>GRIT IT or QUIT IT</title>
      <author>Clean Code Studio</author>
      <pubDate>Wed, 04 Aug 2021 05:59:59 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/grit-it-or-quit-it-4aik</link>
      <guid>https://dev.to/cleancodestudio/grit-it-or-quit-it-4aik</guid>
      <description>&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;





&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"Our emotions don't necessarily demand action - facts do."&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#grit-it-or-quit-it"&gt;
  &lt;/a&gt;
  GRIT IT or QUIT IT
&lt;/h2&gt;




&lt;p&gt;One of the questions I've had to learn to ask myself through time is whether to &lt;strong&gt;GRIT IT or QUIT IT&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;In other words, I'm still learning how to understand myself and any given situation well enough to decide whether to stick with it or - based on the logic of the situation - quit it. &lt;/p&gt;

&lt;p&gt;I've never had a problem with working hard, I'd go as far as to say that hard work and being in an intense grind, that grind where s*** just sucks, is easily my happy place. It's been my happy place - for a long time, as long as I can remember at least. &lt;/p&gt;

&lt;p&gt;Growing up, grit and willingness to do were values I began to believe made me who I am. I willingly started to take the hard route in sports, nutrition, and everywhere else in life that felt like I could do something that sucks now but would ultimately pay off in the end. I love the long run (as long as its not decades we're talking about). I enjoy putting in the work that will return the most value, even when that work hurts. It's a challenge to see how far I can push my limits. I've been like this as long as I can remember. &lt;/p&gt;

&lt;p&gt;Knowing when to quit on the other hand, that has never come naturally to me. &lt;/p&gt;

&lt;p&gt;Stubborn, never content, and incredibly inspired - these are characteristics that my family and closest friends would describe me as. They would also describe me as linear, one minded, and hard headed. They tell you that I don't know when to quit, even when that's the logically intelligent decision to make to achieve the goal I'm working so hard and doing so much for in the first place.&lt;/p&gt;

&lt;p&gt;They'd tell you that once I have my mind locked in on something then that's it - game over. Good luck if you needed me, because I'm busy. It's one of my least and most favorite characteristics about myself. Once I'm locked in, that's the direction I'm headed. &lt;/p&gt;

&lt;p&gt;This mindset, this way of looking at the world has benefited me tremendously throughout my professional life. Much of my success so early on and without a college degree is due to this mind set and my natural way of being. Externally looking in, if you don't know me that well, many just think wow he's that dude -- but the truth is they don't see the negative draw backs that come with this kind of grit. Hell, I've historically been slow to catch these negative draw backs until its too late.&lt;/p&gt;

&lt;p&gt;I wouldn't be where I'm at without the grit and that comes natural to me. &lt;/p&gt;

&lt;p&gt;As I get older, I'm noticing more and more often that my challenge isn't "sticking it out" or "putting in the work" but instead coming into myself - taking a breadth - and considering the facts. If the facts say its not working, then I need to walk away - and I struggle to walk away. Making the logical decision is hard for me because it means I have to say I quit, I'm not going to make this happen like I 100% believed I would. &lt;/p&gt;

&lt;p&gt;Quit, even as a word, grinds my gears to no end - but, when I put my personal emotional attachment to the word aside and look at the facts, not quitting whatever it is that I'm full-heartedly invested into is what has caused me the most set backs in my adult and professional life. Due to this hold up and some non-logical expectation I set on myself to be that dude who puts in the time and out works everyone including himself as he was yesterday, I really struggle with walking away. It has undoubtedly hurt me and I've been working on learning how to truly look at myself and the situation honestly so that I know when the appropriate time is to save me future set backs. &lt;/p&gt;

&lt;p&gt;Grit It vs. Quit It - ignore your emotions, and look at the facts - no matter the side you naturally lean towards. If you're full-heartedly invested in making something happen, then don't ask how you feel emotionally. &lt;/p&gt;

&lt;p&gt;Look at the cold hard facts. Then, with the facts in hand and your own emotions understood well enough to not fall prey to yourself, ask yourself whether you should keep going or move on.&lt;/p&gt;

&lt;p&gt;Once you understand your own emotions, which way you naturally lean, and the actual facts defining the context of your individual situation - that's when you need to ask yourself honestly: &lt;/p&gt;

&lt;p&gt;Are you going to &lt;em&gt;GRIT IT&lt;/em&gt; or &lt;em&gt;QUIT IT?&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;Thanks for reading and feel free to follow Clean Code Studio for more! &lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://cleancode.studio"&gt;Clean Code Studio&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/design-patterns"&gt;Java Script Design Patterns&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/clean-code"&gt;Clean Code&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/algorithms"&gt;JavaScript Algorithm Examples&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zhorton34/embed/BaRPYdB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>devjournal</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Why we need Data Structures and Algorithms ðŸ¤”</title>
      <author>Omkar Bhoir</author>
      <pubDate>Wed, 04 Aug 2021 05:32:31 +0000</pubDate>
      <link>https://dev.to/omkar_bhoir/why-we-need-data-structures-and-algorithms-58c7</link>
      <guid>https://dev.to/omkar_bhoir/why-we-need-data-structures-and-algorithms-58c7</guid>
      <description>&lt;p&gt;&lt;em&gt;If you are a student you might have heard many a times from your teachers or your seniors that Data Structures and Algorithms are very important topic and if you want a good job you should definitely learn it, right?.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this post we will learn what is this and also why we need to learn itðŸ˜‰&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-data-structure"&gt;
  &lt;/a&gt;
  What is Data Structure?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;In simple words, Data Structure is way to organize data in an &lt;strong&gt;efficient&lt;/strong&gt; manner.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Suppose you have a data of your class (such as id, name, email, etc.) and your teacher told you to store that data in a way so that teacher can easily access and modify that data. What will you do? How will you store that data?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Easiest and common way to do this can be to store that data in an Excel file and share that file with your teacher. Nice&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Yeah, now you have understood that why we need this Data Structures i.e &lt;em&gt;to store the data in a way that is easier to access and modify&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now what is this algorithm?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We can define it as a collection of steps to achieve something.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Imagine you have to do addition of two numbers. How will start? Will you directly add numbers? or Will you check if we have given two numbers?.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is how I will do it&lt;br&gt;
Step 1: Check if I have two numbers, if not request two numbers&lt;br&gt;
Step 2: Now I have two numbers, so I will add that two numbers and display result on the screen&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now you might be thinking, why will I waste my energy in writing this steps if I can do it directly. Yes, of course you can do such small operations directly. But when we have to do complex and large operations, it is recommended that we must first decide how our goal can be achieved.&lt;/p&gt;

&lt;p&gt;Enjoy!. Now know what is Data Structures and why we need it and you also know about algorithms.&lt;/p&gt;

&lt;p&gt;Thankyou for reading my post. If you find it informative, please do follow me, like and share with your friends.&lt;/p&gt;

&lt;p&gt;Follow me on Twitter : &lt;a href="https://twitter.com/Omkar_127_0_0_1"&gt;Omkar Bhoir&lt;/a&gt;&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>dsa</category>
      <category>datastructures</category>
      <category>programming</category>
    </item>
    <item>
      <title>Deno: The next step in Node.js</title>
      <author>Siddharth</author>
      <pubDate>Wed, 04 Aug 2021 04:30:39 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/deno-the-next-step-in-node-js-ij1</link>
      <guid>https://dev.to/siddharthshyniben/deno-the-next-step-in-node-js-ij1</guid>
      <description>&lt;p&gt;&lt;a href="https://deno.land"&gt;Deno&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=M3BM9TB-8yA"&gt;introduced&lt;/a&gt; by Ryan Dahl, the creator of &lt;br&gt;
&lt;a href="https://nodejs.org"&gt;Node&lt;/a&gt; during JSConf 2018 has been growing into a major alternative to Node.js. Deno is similar to Node.js â€“ you write your scripts in JavaScript and run them â€“ but Deno get's more powerful once you use it. It has first class TypeScript support, simplifies modules, is more secure, and bridges the gap between browsers and Node, and much more.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#node"&gt;
  &lt;/a&gt;
  Node
&lt;/h2&gt;

&lt;p&gt;Released in 2009, Node took over really quickly. Even though there was initially some skepticism about Node, support from the community was unrivalled.&lt;/p&gt;

&lt;p&gt;Today, Node is one of the most popular tools used for backend development.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#enter-deno"&gt;
  &lt;/a&gt;
  Enter Deno
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Fun fact: Deno is just node reversed. no + de = node, de + no = deno.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Even though Node was great, there are many design mistake in it. You can check out the &lt;a href="https://www.youtube.com/watch?v=M3BM9TB-8yA"&gt;talk by Ryan Dahl&lt;/a&gt; to learn more, but here's a few:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Node didn't stick with promises.&lt;/strong&gt; Node had added them way back in 2009, but removed them almost a year later in 2010.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Node wasn't secure enough.&lt;/strong&gt; Any node program has access to system calls, http requests, filesystem calls. Your linter shouldn't have complete access to your computer and network.&lt;/li&gt;
&lt;li&gt;more...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essentially, Node was focused on IO. Modules were an afterthought. To fix all this, Ryan introduced Deno.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#deno-is-secure-by-design"&gt;
  &lt;/a&gt;
  Deno is secure by design
&lt;/h3&gt;

&lt;p&gt;Suppose you want to run a lint script. If you were using node, you would just do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;~$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;node linter.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But in Deno, you do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;~$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;deno run &lt;span class="nt"&gt;--allow-read&lt;/span&gt; linter.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's a couple of things to note here. First is the &lt;code&gt;run&lt;/code&gt; subcommand. Deno has a bunch of other tools, which we'll get to later. &lt;/p&gt;

&lt;p&gt;Next thing to note is the flag &lt;code&gt;--allow-read&lt;/code&gt;. It, along with a &lt;a href="https://deno.land/manual@v1.11.1/getting_started/permissions"&gt;bunch of other flags&lt;/a&gt; are part of deno's security system. By default, when a script is run using &lt;code&gt;deno run&lt;/code&gt;, it can't use anything more than the console.&lt;/p&gt;

&lt;p&gt;Now, more security is great, but nobody wants to be putting in a bunch of &lt;code&gt;--allow&lt;/code&gt; flags everytime you need to run stuff. Fortunately, deno provides an &lt;code&gt;install&lt;/code&gt; command which can &lt;em&gt;"install"&lt;/em&gt; stuff. Installing as an creating a thin wrapper in a platform-specific directory (&lt;code&gt;~/.deno/bin&lt;/code&gt; on MacOS and Linux, not sure about Windows).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;~$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;deno &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--allow-read&lt;/span&gt; linter.js
&lt;span class="go"&gt;âœ… Successfully installed linter
/Users/APPLE/.deno/bin/linter
&lt;/span&gt;&lt;span class="gp"&gt;~$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;linter
&lt;span class="go"&gt;linter running!
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The file at &lt;code&gt;.deno/bin/linter&lt;/code&gt; is very simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="c"&gt;# generated by deno install&lt;/span&gt;
&lt;span class="nb"&gt;exec &lt;/span&gt;deno run &lt;span class="nt"&gt;--allow-read&lt;/span&gt; &lt;span class="s1"&gt;'file:///Users/APPLE/Sites/Projects/deno-test/linter.js'&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#no-package-managers-here"&gt;
  &lt;/a&gt;
  No package managers here
&lt;/h3&gt;

&lt;p&gt;Deno uses ES Modules import syntax, which means that imports must be full or relative paths to files. And unlike Node.js, there's no &lt;code&gt;deno_modules&lt;/code&gt; (thank goodness!), and deno doesn't look anywhere special for modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt; These work
&lt;span class="gi"&gt;+ import {lint} from './linter.js';
+ import {lint} from 'absolute/path/to/linter.js';
+ import {WebSocket} from "https://deno.land/std@0.103.0/ws/mod.ts";
&lt;/span&gt;
// But these wont:
&lt;span class="gd"&gt;- import {lint} from './linter'; // Note the extension is missing
- import {WebSocket} from "ws"; // ws who?
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#you-dont-have-to-relearn-most-of-javascript"&gt;
  &lt;/a&gt;
  You don't have to relearn (most of) JavaScript
&lt;/h3&gt;

&lt;p&gt;Deno tries to use web platform APIs (like &lt;code&gt;fetch&lt;/code&gt;) instead of inventing a new API. These APIs generally follow the specifications and should match the implementation in Chrome and Firefox. Deno even uses web standards in it's own APIs, for example Deno's &lt;code&gt;http&lt;/code&gt; API uses the standard Request and response objects. Deno's even got &lt;code&gt;window&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Node.js goes the other way replacing stuff with it's own APIs, usually using callbacks, making us reach for modules. Deno gets to take advantage of all the evolution of JavaScript instead of having to build it all again. Also, it's easier to port stuff to the web if you use Deno (and vice versa).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typescript-is-a-first-class-citizen-here"&gt;
  &lt;/a&gt;
  TypeScript is a first class citizen here
&lt;/h3&gt;

&lt;p&gt;Deno has built in &lt;a href="https://deno.land/manual/typescript/overview"&gt;support for TypeScript&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=dQw4w9WgXcQ"&gt;!&lt;/a&gt; This isn't just used as an external modules or anything, no extra flags, not even a &lt;code&gt;tsconfig.json&lt;/code&gt;. There is even interoperability â€“ import JS in TS, import TS in JS&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#simpler-distribution"&gt;
  &lt;/a&gt;
  Simpler distribution
&lt;/h3&gt;

&lt;p&gt;Unlike Node, Deno is just a single binary. This makes installation and deployment a breeze. Deno can even compile programs to binaries, which is absolutely awesome! It can even cross compile!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-simple-demo"&gt;
  &lt;/a&gt;
  A simple demo
&lt;/h3&gt;

&lt;p&gt;Here's a simple &lt;code&gt;cat&lt;/code&gt; implementation in deno:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// mycat.ts&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;expandGlob&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://deno.land/std@0.102.0/fs/expand_glob.ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// no need to remove the path to deno, etc.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Deno&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fileExpansion&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;expandGlob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Deno&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readTextFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fileExpansion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This script takes filenames as arguments and prints them to the console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;~$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;deno run &lt;span class="nt"&gt;--allow-read&lt;/span&gt; mycat.ts cat.ts
&lt;span class="go"&gt;// cat.ts
&lt;/span&gt;&lt;span class="gp"&gt;import { expandGlob } from "https://deno.land/std@0.102.0/fs/expand_glob.ts";&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="go"&gt;
// no need to remove the path to deno, etc.
&lt;/span&gt;&lt;span class="gp"&gt;const files = Deno.args;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that you don't need to install or configure anything - Deno handles that for you. &lt;/p&gt;

&lt;p&gt;Now, we can &lt;code&gt;install&lt;/code&gt; the script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~&lt;span class="nv"&gt;$ &lt;/span&gt;deno &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--allow-read&lt;/span&gt; mycat.ts
âœ… Successfully installed mycat
/Users/APPLE/.deno/bin/mycat
~&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Deno is still new.&lt;/strong&gt; It has a thriving community and a bunch of libraries (many node libraries have been ported to deno). But it's not as popular or as supported as node. But deno's ease of use and simplicity make it useful for writing everyday scripts, and it's url-based system of sharing modules makes distributing programs as easy as putting them on a GitHub repo or personal site.&lt;/p&gt;

</description>
      <category>node</category>
      <category>deno</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Hello guys I'm new here and 13 y/o only. Please be kind</title>
      <author>saraansh09</author>
      <pubDate>Wed, 04 Aug 2021 04:13:18 +0000</pubDate>
      <link>https://dev.to/saraansh09/hello-guys-i-m-new-here-and-13-y-o-only-please-be-kind-gj4</link>
      <guid>https://dev.to/saraansh09/hello-guys-i-m-new-here-and-13-y-o-only-please-be-kind-gj4</guid>
      <description>&lt;p&gt;&lt;a href="https://snack.expo.dev/@saraansh09/a-project-well-done"&gt;https://snack.expo.dev/@saraansh09/a-project-well-done&lt;/a&gt;. View it here and leave your feedback please.Thanks&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>quiz</category>
      <category>beginners</category>
    </item>
    <item>
      <title>6 Ways you can make side-income as a developer</title>
      <author>Shubhra Agarwal</author>
      <pubDate>Wed, 04 Aug 2021 04:10:09 +0000</pubDate>
      <link>https://dev.to/shubhracodes/6-ways-you-can-make-side-income-as-a-developer-4486</link>
      <guid>https://dev.to/shubhracodes/6-ways-you-can-make-side-income-as-a-developer-4486</guid>
      <description>&lt;p&gt;Donâ€™t worry. Iâ€™m not going to tell you to start a blog.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-shopify-appthemes"&gt;
  &lt;/a&gt;
  1. Shopify App/Themes
&lt;/h2&gt;

&lt;p&gt;Shopify is a massive market. For many, it can feel saturated. But is it really? Letâ€™s say you price your app at $25 subscription and you have 100 shops using it. Thatâ€™s a solid $2.5k right in your pocket each month.&lt;/p&gt;

&lt;p&gt;There are online shops opening left, right, and center. If you can come up with an idea that solves a particular pain point for shopkeepers, it can be easy money.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-wordpress-pluginsthemes"&gt;
  &lt;/a&gt;
  2. WordPress Plugins/Themes
&lt;/h2&gt;

&lt;p&gt;For non-developers, WordPress is still one of the main go-to for blogging. Theme development is one of those things thatâ€™s been around for so long that you might find it hard to compete and make any actual money.&lt;/p&gt;

&lt;p&gt;Market places like ThemeForest can feel like theyâ€™re taking more than the hassle it takes to get a theme past their submission criteria.&lt;/p&gt;

&lt;p&gt;Sell a few dozen or two at $29-$45 per month and youâ€™re set for a good passive income stream.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-a-productivity-tool"&gt;
  &lt;/a&gt;
  3. A productivity tool
&lt;/h2&gt;

&lt;p&gt;Productivity tools are the essence of getting things done. Make something, launch it, set it up with a free trial and then upgrade into a subscription model. It just needs to solve a productivity problem thatâ€™s annoying enough to be worth paying for.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-make-something-that-matters-to-you"&gt;
  &lt;/a&gt;
  4. Make something that matters to you
&lt;/h2&gt;

&lt;p&gt;The thing about being a developer is that we solve problems. Surely, thereâ€™s something annoying in your life that you can solve for yourself.&lt;/p&gt;

&lt;p&gt;Itâ€™s like one of those projects we get back in school â€” you know the kind that tells you to come up with an idea to solve some major world issue like poverty and hunger.&lt;/p&gt;

&lt;p&gt;Except youâ€™re taking it down a notch and just focusing on yourself.&lt;/p&gt;

&lt;p&gt;If you find a tech-based solution, you can either open-source it and monetize through sponsorship. Or, you can sell it as a once-off or subscription model.&lt;/p&gt;

&lt;p&gt;The possibilities are endless. You just need to stop, figure out whatâ€™s annoying in your digital life and solve it. Chances are, youâ€™re not the only one experiencing it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-gumroad-projects"&gt;
  &lt;/a&gt;
  5. Gumroad projects
&lt;/h2&gt;

&lt;p&gt;Digital assets can be traded as commodities. This includes graphics, icons, themes, and plugins.&lt;/p&gt;

&lt;p&gt;Gumroad just saves you the hassle of starting up an online store to sell them. Itâ€™s free â€” unless you want lowered fees.&lt;/p&gt;

&lt;p&gt;Then thereâ€™s a small price for a subscription. Even then, the free account fees are still decent in general. Youâ€™ll still need to do your own marketing to get the sales. By the end of it all, youâ€™ll pick up a few new skills at the very least.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Externalize your knowledge&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are platforms out there like Udemy, Skillshare, and Teachable that can help you double-bank on your knowledge if you can commit to externalizing it.&lt;/p&gt;

</description>
      <category>money</category>
      <category>developer</category>
      <category>sideincome</category>
      <category>sideprojects</category>
    </item>
    <item>
      <title>Linux Cheat Sheet For Beginners</title>
      <author>Suhail Kakar</author>
      <pubDate>Wed, 04 Aug 2021 03:56:25 +0000</pubDate>
      <link>https://dev.to/suhailkakar/linux-cheat-sheet-for-beginners-5830</link>
      <guid>https://dev.to/suhailkakar/linux-cheat-sheet-for-beginners-5830</guid>
      <description>&lt;p&gt;If you're not using the terminal, Linux commands may appear scary at first by once you start using them you will understand them very easily On a Linux system, there are numerous commands for executing operations and procedures.&lt;/p&gt;

&lt;p&gt;Having a list of commands on hand is useful whether you are new to Linux or an experienced user.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#file-permission-commands"&gt;
  &lt;/a&gt;
  File Permission commands
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;ls-l&lt;/td&gt;

&lt;td&gt;to show file type and access permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;r&lt;/td&gt;

&lt;td&gt;read permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;w&lt;/td&gt;

&lt;td&gt;write permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;x&lt;/td&gt;

&lt;td&gt;execute permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;-=&lt;/td&gt;

&lt;td&gt;no permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Chown user&lt;/td&gt;

&lt;td&gt;For changing the ownership of a file/directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Chown user:group filename&lt;/td&gt;

&lt;td&gt;change the user as well as group for a file or directory&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#hardware-commands"&gt;
  &lt;/a&gt;
  Hardware commands
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;dmesg&lt;/td&gt;

&lt;td&gt;Displays bootup messages&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat /proc/cpuinfo&lt;/td&gt;

&lt;td&gt;Displays more information about CPU e.g model, model name, cores, vendor id&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat /proc/meminfo&lt;/td&gt;

&lt;td&gt;Displays more information about hardware memory e.g. Total and Free memory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lshw&lt;/td&gt;

&lt;td&gt;Displays information about system's hardware configuration&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lsblk&lt;/td&gt;

&lt;td&gt;Displays block devices related information&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;free -m&lt;/td&gt;

&lt;td&gt;Displays free and used memory in the system (-m flag indicates memory in MB)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lspci -tv&lt;/td&gt;

&lt;td&gt;Displays PCI devices in a tree-likeÂ diagram&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lsusbÂ -tv&lt;/td&gt;

&lt;td&gt;Displays USB devices in a tree-like diagram&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dmidecode&lt;/td&gt;

&lt;td&gt;Displays hardware information from the BIOS&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;hdparmÂ -i /dev/xda&lt;/td&gt;

&lt;td&gt;Displays information about disk data&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;hdparmÂ -tT /dev/xdaÂ &lt;/td&gt;

&lt;td&gt;Conducts a read speed test on device xda&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;badblocksÂ -s /dev/xda&lt;/td&gt;

&lt;td&gt;TestsÂ  for unreadable blocks on disk&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#basic-linux-commands"&gt;
  &lt;/a&gt;
  Basic Linux commands
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;ls&lt;/td&gt;

&lt;td&gt;Lists all files and directories in the present working directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ls-R&lt;/td&gt;

&lt;td&gt;Lists files in sub-directories as well&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ls-a&lt;/td&gt;

&lt;td&gt;Lists hidden files as well&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ls-al&lt;/td&gt;

&lt;td&gt;Lists files and directories with detailed information like permissions,size, owner, etc.&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd or cd ~&lt;/td&gt;

&lt;td&gt;Navigate to HOME directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd ..&lt;/td&gt;

&lt;td&gt;Move one level up&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd&lt;/td&gt;

&lt;td&gt;To change to a particular directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd /&lt;/td&gt;

&lt;td&gt;Move to the root directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat &amp;gt; filename&lt;/td&gt;

&lt;td&gt;Creates a new file&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat filename&lt;/td&gt;

&lt;td&gt;Displays the file content&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat file1 file2 &amp;gt; file3&lt;/td&gt;

&lt;td&gt;Joins two files (file1, file2) and stores the output in a new file (file3)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mv file "new file path"&lt;/td&gt;

&lt;td&gt;Moves the files to the new location&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mv filename new_file_name&lt;/td&gt;

&lt;td&gt;Renames the file to a new filename&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo&lt;/td&gt;

&lt;td&gt;Allows regular users to run programs with the security privileges of the superuser or root&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;rm filename&lt;/td&gt;

&lt;td&gt;Deletes a file&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;man&lt;/td&gt;

&lt;td&gt;Gives help information on a command&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;history&lt;/td&gt;

&lt;td&gt;Gives a list of all past commands typed in the current terminal session&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;clear&lt;/td&gt;

&lt;td&gt;Clears the terminal&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mkdir directoryname&lt;/td&gt;

&lt;td&gt;Creates a new directory in the present working directory or a at the specified path&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;rmdir&lt;/td&gt;

&lt;td&gt;Deletes a directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mv&lt;/td&gt;

&lt;td&gt;Renames a directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pr -x&lt;/td&gt;

&lt;td&gt;Divides the file into x columns&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pr -h&lt;/td&gt;

&lt;td&gt;Assigns a header to the file&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pr -n&lt;/td&gt;

&lt;td&gt;Denotes the file with Line Numbers&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lp -nc , lpr c&lt;/td&gt;

&lt;td&gt;Prints "c" copies of the File&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Â lp-d lp-P&lt;/td&gt;

&lt;td&gt;Specifies name of the printer&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;apt-get&lt;/td&gt;

&lt;td&gt;Command used to install and update packages&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mail -s 'subject' -c 'cc-address' -b 'bcc-address' 'to-address'&lt;/td&gt;

&lt;td&gt;Command to send email&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mail -s "Subject" to-address &amp;lt; Filename&lt;/td&gt;

&lt;td&gt;Command to send email with attachment&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#environment-variables-command"&gt;
  &lt;/a&gt;
  Environment Variables command
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;echo $VARIABLE&lt;/td&gt;

&lt;td&gt;To display value of a variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;env&lt;/td&gt;

&lt;td&gt;Displays all environment variables&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;VARIABLE_NAME= variable_value&lt;/td&gt;

&lt;td&gt;Create a new variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Unset&lt;/td&gt;

&lt;td&gt;Remove a variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;export Variable=value&lt;/td&gt;

&lt;td&gt;To set value of an environment variable&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#user-management-commands-of-linux"&gt;
  &lt;/a&gt;
  User management commands of linux
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;sudo adduser username&lt;/td&gt;

&lt;td&gt;To display value of a variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo passwd -l 'username'&lt;/td&gt;

&lt;td&gt;Displays all environment variables&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo userdel -r 'username'&lt;/td&gt;

&lt;td&gt;Create a new variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo usermod -a -G GROUPNAME USERNAME&lt;/td&gt;

&lt;td&gt;Remove a variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo deluser USER GROUPNAME&lt;/td&gt;

&lt;td&gt;To set value of an environment variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;finger&lt;/td&gt;

&lt;td&gt;Gives information on all logged in user&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;finger username&lt;/td&gt;

&lt;td&gt;Gives information of a particular user&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#network-command"&gt;
  &lt;/a&gt;
  Network command
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;SSH username@ip-address or hostname&lt;/td&gt;

&lt;td&gt;login into a remote Linux machine using SSH&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Ping hostname="" or =""&lt;/td&gt;

&lt;td&gt;To ping and Analyzing network and host connections&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dir&lt;/td&gt;

&lt;td&gt;Display files in the current directory of a remote computer&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd "dirname"&lt;/td&gt;

&lt;td&gt;change directory to "dirname" on a remote computer&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;put file&lt;/td&gt;

&lt;td&gt;upload 'file' from local to remote computer&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;get file&lt;/td&gt;

&lt;td&gt;Download 'file' from remote to local computer&lt;/td&gt;

&lt;/tr&gt;


&lt;tr&gt;

&lt;td&gt;ip addr showÂ  Â  Â  Â  Â  Â  Â  Â  &lt;/td&gt;

&lt;td&gt;Displays IP addresses and all the network interfaces&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ip address add 192.168.0.1/24 dev eth0&lt;/td&gt;

&lt;td&gt;Assigns IP address 192.168.0.1 to interface eth0&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ifconfigÂ Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  &lt;/td&gt;

&lt;td&gt;Displays IP addresses of all network interfaces&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pingÂ  hostÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  &lt;/td&gt;

&lt;td&gt;ping command sends an ICMP echo request to establish a connection to server / PC&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;whois domainÂ  Â  Â  Â  Â  Â  Â  &lt;/td&gt;

&lt;td&gt;Retrieves more information about a domain name&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dig domainÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â Â &lt;/td&gt;

&lt;td&gt;Retrieves DNS information about the domain&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dig -x hostÂ  Â  Â  Â  Â  Â  Â  Â  &lt;/td&gt;

&lt;td&gt;Performs reverse lookup on a domain&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;host google.comÂ Â  Â  Â  &lt;/td&gt;

&lt;td&gt;Performs an IP lookup for the domain name&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;hostname -iÂ  Â  Â  Â  Â  Â  Â  Â  Â  &lt;/td&gt;

&lt;td&gt;Displays local IP address&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;wget file_nameÂ Â  Â  Â  Â  &lt;/td&gt;

&lt;td&gt;Downloads a file from an online source&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;netstat -pnltuÂ  &lt;/td&gt;

&lt;td&gt;Displays all active listening ports&lt;/td&gt;

&lt;/tr&gt;


&lt;tr&gt;

&lt;td&gt;quit&lt;/td&gt;

&lt;td&gt;Logout&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#process-command"&gt;
  &lt;/a&gt;
  Process command
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;bg&lt;/td&gt;

&lt;td&gt;To send a process to the background&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;fg&lt;/td&gt;

&lt;td&gt;To run a stopped process in the foreground&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;top&lt;/td&gt;

&lt;td&gt;Details on all Active Processes&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ps&lt;/td&gt;

&lt;td&gt;Give the status of processes running for a user&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ps PID&lt;/td&gt;

&lt;td&gt;Gives the status of a particular process&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pidof&lt;/td&gt;

&lt;td&gt;Gives the Process ID (PID) of a process&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;kill PID&lt;/td&gt;

&lt;td&gt;Kills a process&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;nice&lt;/td&gt;

&lt;td&gt;Starts a process with a given priority&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;renice&lt;/td&gt;

&lt;td&gt;Changes priority of an already running process&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;df&lt;/td&gt;

&lt;td&gt;Gives free hard disk space on your system&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;free&lt;/td&gt;

&lt;td&gt;Gives free RAM on your system&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#system-information"&gt;
  &lt;/a&gt;
  System Information
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;time&lt;/td&gt;

&lt;td&gt;It is a utility that measures the time taken by a program to execute.Â &lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;/proc&lt;/td&gt;

&lt;td&gt;The files under /proc displays system information.Â &lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dmseg&lt;/td&gt;

&lt;td&gt;This command is used to print the contents of the bootup messages displayed by the kernel. This is particularly useful in debugging issues.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;df&lt;/td&gt;

&lt;td&gt;Displays the information about the space on the mounted file-systems.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;who&lt;/td&gt;

&lt;td&gt;Displays information about the logged in users including their login time.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;w&lt;/td&gt;

&lt;td&gt;This command displays who are logged in into the system and the processes they are running.Â &lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;users&lt;/td&gt;

&lt;td&gt;This command prints the name of the currently logged in users.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;last&lt;/td&gt;

&lt;td&gt;This command displays the time of the logged-out users. This also displays the information when the computer was rebooted.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lastlog&lt;/td&gt;

&lt;td&gt;Displays a list of the users and the time/day of their login.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;whoami&lt;/td&gt;

&lt;td&gt;It tells the username of the logged in user.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;free&lt;/td&gt;

&lt;td&gt;Displays memory status. (Total, Used, Free, cached, Swap)&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;uptime | w&lt;/td&gt;

&lt;td&gt;It displays how long the computer has been up and running. Additionally, it displays the number of users and the processor load.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;uname&lt;/td&gt;

&lt;td&gt;It is used to display system information such as OS type, kernel version, etc.&lt;/td&gt;



&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;xargs&lt;/td&gt;

&lt;td&gt;This command is used to run a command as many times as required.Â &lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;date&lt;/td&gt;

&lt;td&gt;It is used to display the system. It can also be used to set the date/time.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cal&lt;/td&gt;

&lt;td&gt;This command displays the calendar of the current month.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;acpi&lt;/td&gt;

&lt;td&gt;This command is used to display the battery status and other ACPI(Advanced Configuration and Power Information) relatedÂ  information.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;acpi_available&lt;/td&gt;

&lt;td&gt;This command is used to test if the ACPI subsystem is available.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;aptitudeÂ &lt;/td&gt;


&lt;td&gt;Â &lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#vi-editing-commands"&gt;
  &lt;/a&gt;
  VI Editing Commands
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;i&lt;/td&gt;

&lt;td&gt;Insert at cursor (goes into insert mode)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;a&lt;/td&gt;

&lt;td&gt;Write after cursor (goes into insert mode)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;A&lt;/td&gt;

&lt;td&gt;Write at the end of line (goes into insert mode)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ESC&lt;/td&gt;

&lt;td&gt;Terminate insert mode&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;u&lt;/td&gt;

&lt;td&gt;Undo last change&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;U&lt;/td&gt;

&lt;td&gt;Undo all changes to the entire line&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;o&lt;/td&gt;

&lt;td&gt;Open a new line (goes into insert mode)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dd&lt;/td&gt;

&lt;td&gt;Delete line&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;3dd&lt;/td&gt;

&lt;td&gt;Delete 3 lines&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;D&lt;/td&gt;

&lt;td&gt;Delete contents of line after the cursor&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;C&lt;/td&gt;

&lt;td&gt;Delete contents of a line after the cursor and insert new text. Press ESC key to end insertion.&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dw&lt;/td&gt;

&lt;td&gt;Delete word&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;4dw&lt;/td&gt;

&lt;td&gt;Delete 4 words&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cw&lt;/td&gt;

&lt;td&gt;Change word&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;x&lt;/td&gt;

&lt;td&gt;Delete character at the cursor&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;r&lt;/td&gt;

&lt;td&gt;Replace character&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;R&lt;/td&gt;

&lt;td&gt;Overwrite characters from cursor onward&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;s&lt;/td&gt;

&lt;td&gt;Substitute one character under cursor continue to insert&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;S&lt;/td&gt;

&lt;td&gt;Substitute entire line and begin to insert at the beginning of the line&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;~&lt;/td&gt;

&lt;td&gt;Change case of individual character&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;References: Linoxide, Guru 99, Hackr, Loggly, Phoenixnap&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you found this cheatsheet helpful. If you need any help please let me know in the comment section&lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;ðŸ‘‹ Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
      <category>tutorial</category>
      <category>security</category>
    </item>
    <item>
      <title>How I got started with Serverless Framework</title>
      <author>Brian Ng</author>
      <pubDate>Wed, 04 Aug 2021 03:56:03 +0000</pubDate>
      <link>https://dev.to/brifiction/getting-started-with-serverless-framework-1fkf</link>
      <guid>https://dev.to/brifiction/getting-started-with-serverless-framework-1fkf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-write-this-article"&gt;
  &lt;/a&gt;
  Why write this article?
&lt;/h2&gt;

&lt;p&gt;This article is meant for back-end developers, who does have strong back-end practices - in languages such as Java, PHP, and C#. &lt;/p&gt;

&lt;p&gt;As a PHP developer for many years, sometimes learning a new piece of front-end technology can be a steep learning curve.&lt;/p&gt;

&lt;p&gt;And perhaps today, you're curious about &lt;code&gt;serverless&lt;/code&gt;. And how it could benefit your technology infrastructure in your business / personal project, and wanting to "give it a go".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-raw-serverless-endraw-framework"&gt;
  &lt;/a&gt;
  What is the &lt;code&gt;serverless&lt;/code&gt; framework?
&lt;/h2&gt;

&lt;p&gt;As the Wiki describes [R.1], it is an open-source framework written using &lt;code&gt;node&lt;/code&gt;. &lt;code&gt;serverless&lt;/code&gt; is the first framework developed for building applications on AWS Lambda [I.1]. &lt;/p&gt;

&lt;p&gt;However, it is now expanded to more supported Serverless service providers, such as Netlify, Google, Microsoft (Azure) and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-raw-serverless-endraw-"&gt;
  &lt;/a&gt;
  Why use &lt;code&gt;serverless&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;As developers, we only want to focus our time 'coding', rather than fiddling / tinkering with server configurations, network infrastructure and cloud networking in general.&lt;/p&gt;

&lt;p&gt;It offers great scalability, more flexibility, zero server management and faster release time - altogether at &lt;strong&gt;reduced cost&lt;/strong&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-did-i-learn-to-use-raw-serverless-endraw-"&gt;
  &lt;/a&gt;
  How did I learn to use &lt;code&gt;serverless&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;There are a couple of prerequisite learning criteria(s) that did help myself explore and understand how the &lt;code&gt;serverless&lt;/code&gt; framework works.&lt;/p&gt;

&lt;p&gt;Some of the early steps I began with:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To build an understanding of how &lt;code&gt;node&lt;/code&gt; + &lt;code&gt;express&lt;/code&gt; applications work (&lt;code&gt;express&lt;/code&gt; is not necessary, using any web application framework will do for your first demo).&lt;/li&gt;
&lt;li&gt;Pick a &lt;code&gt;serverless&lt;/code&gt; provider to work with (I chose AWS, because there are already reliable existing real-world examples and open-source content to compare to, with my first demo).&lt;/li&gt;
&lt;li&gt;Based on the &lt;code&gt;serverless&lt;/code&gt; provider picked, I did explore how &lt;code&gt;serverless&lt;/code&gt; services are deployed and its general architecture. For example, 'applications' vs 'functions', why do you need an API Gateway, and more.&lt;/li&gt;
&lt;li&gt;While learning the &lt;code&gt;serverless&lt;/code&gt; framework (from official documentation) and coding a demo project in parallel, trial-and-error persisted with integrating third-party &lt;code&gt;serverless&lt;/code&gt; dependencies involved - such as &lt;code&gt;serverless-offline&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-ive-learned-so-far"&gt;
  &lt;/a&gt;
  What I've learned so far?
&lt;/h2&gt;

&lt;p&gt;Prior knowledge of knowing how to build a &lt;code&gt;node&lt;/code&gt; + &lt;code&gt;express&lt;/code&gt; application was crucial, and beneficial. Next, extending your project with &lt;code&gt;typescript&lt;/code&gt; is also beneficial but optional. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;express&lt;/code&gt; package is definitely built to be "modular" with other dependencies, especially for extended &lt;code&gt;express&lt;/code&gt; middleware. &lt;/p&gt;

&lt;p&gt;In regards to using &lt;code&gt;nestjs&lt;/code&gt; [I.2] framework (I relate this framework with Laravel / Symfony PHP frameworks), for a &lt;code&gt;serverless&lt;/code&gt; project, the comparison with &lt;code&gt;express&lt;/code&gt; does highlight a lot of the pros and cons, of building a &lt;code&gt;serverless&lt;/code&gt; node + express app vs. build a &lt;code&gt;serverless&lt;/code&gt; nestjs app.&lt;/p&gt;

&lt;p&gt;I ended up building this &lt;code&gt;serverless&lt;/code&gt; boilerplate, which is till this day, a work-in-progress project - there's always room for improvements, and following the &lt;code&gt;serverless&lt;/code&gt; framework updates.&lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/entwurfhaus/serverless-express-typescript-boilerplate"&gt;https://github.com/entwurfhaus/serverless-express-typescript-boilerplate&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it!
&lt;/h2&gt;

&lt;p&gt;I do hope this article does provide additional insight, to why &lt;code&gt;serverless&lt;/code&gt; should be learned and considered to be your next application architecture solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#index"&gt;
  &lt;/a&gt;
  Index
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;AWS Lambda - a &lt;code&gt;serverless&lt;/code&gt; computing platform provided by Amazon as a part of Amazon Web Service.&lt;/li&gt;
&lt;li&gt;NestJS - &lt;a href="https://nestjs.com/"&gt;https://nestjs.com/&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;serverless&lt;/code&gt; framework Wiki - &lt;a href="https://en.wikipedia.org/wiki/Serverless_Framework"&gt;https://en.wikipedia.org/wiki/Serverless_Framework&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;serverless&lt;/code&gt; documentation - &lt;a href="https://www.serverless.com/framework/docs/"&gt;https://www.serverless.com/framework/docs/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;JAMStack - &lt;a href="https://jamstack.wtf/"&gt;https://jamstack.wtf/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;NestJS - &lt;a href="https://docs.nestjs.com/"&gt;https://docs.nestjs.com/&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>serverless</category>
      <category>aws</category>
      <category>typescript</category>
      <category>express</category>
    </item>
    <item>
      <title>Git Command You Should Use Everyday</title>
      <author>Derdw</author>
      <pubDate>Wed, 04 Aug 2021 03:36:31 +0000</pubDate>
      <link>https://dev.to/derdw/git-command-you-should-use-everyday-m8i</link>
      <guid>https://dev.to/derdw/git-command-you-should-use-everyday-m8i</guid>
      <description>&lt;p&gt;&lt;span&gt;When I started my career, I was always afraid of losing my code changes. Sometimes, I would copy the code to text files just to be sure that I won't miss something.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;That's not a great practice. If you know how to use git properly, you won't have these doubts.&lt;/p&gt;
&lt;p&gt;Git has everything you need to make you safe. And much more.&lt;/p&gt;
&lt;p&gt;Let's dive in.&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/11-git-commands-i-use-every-day/"&gt;20 Git Command i use Everyday&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>git</category>
    </item>
    <item>
      <title>Best web development-roadmap-2021</title>
      <author>Derdw</author>
      <pubDate>Wed, 04 Aug 2021 03:32:59 +0000</pubDate>
      <link>https://dev.to/derdw/best-web-development-roadmap-2021-2ddl</link>
      <guid>https://dev.to/derdw/best-web-development-roadmap-2021-2ddl</guid>
      <description>&lt;p&gt;Â &lt;/p&gt;
&lt;p&gt;There has never been a better time to learn to code or make a career change to software engineering. The demand for web developers is at an all-time high, and itâ€™s only increasing. There are both free and premium tutorials online that teach you the skills to get a job as a developer â€” no CS degree required ðŸ¤“.&lt;/p&gt;
&lt;p id="561d"&gt;This article details the needed skills and the corresponding tutorials to learn them effectively. The illustrated guide is provided by &lt;b&gt;&lt;a href="http://www.codelivly.com"&gt;Codelivly&lt;/a&gt;&lt;/b&gt;Â and can be found onÂ codelivlyÂ Â â€” Codelivly work is excellent so be sure to star the repo and subscribe to his newsletter to support his efforts. Donâ€™t be intimidated by the map. It may seem like a lot, but Iâ€™ll break it down so you can learn each part step-by-step.&lt;/p&gt;
&lt;p id="dda0"&gt;This article will be divided into the following sections:&lt;/p&gt;
&lt;p id="dda0"&gt;1. &lt;b&gt;&lt;a href="https://www.codelivly.com/web-developer-roadmap-2021/"&gt;Full Stack Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;2. &lt;b&gt;&lt;a href="https://www.codelivly.com/frontend-web-developer-roadmap/"&gt;Frontend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;3. &lt;b&gt;&lt;a href="https://www.codelivly.com/backend-web-developer-roadmap/"&gt;Backend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;4. &lt;b&gt;&lt;a href="https://www.codelivly.com/the-best-python-frameworks-for-web-development-in-2021/"&gt;Best Python Framework For Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;







</description>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
