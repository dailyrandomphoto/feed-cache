<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Need proof to set up observability, here are 33 stats to show why!</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Thu, 11 Nov 2021 12:56:29 +0000</pubDate>
      <link>https://dev.to/signoz/need-proof-to-set-up-observability-here-are-33-stats-to-show-why-23bb</link>
      <guid>https://dev.to/signoz/need-proof-to-set-up-observability-here-are-33-stats-to-show-why-23bb</guid>
      <description>&lt;p&gt;Observability is the new buzzword. Or is it already a necessity for your software development? There is a lot of debate around observability and all its aspects. How do you define observability? How does it differ from monitoring? Does it replace or complement your monitoring practices?&lt;/p&gt;

&lt;p&gt;We are not here to get into that debate. Keeping the jargon aside, let's look at what stats say about observability. Is it making a difference for its adopters?&lt;/p&gt;

&lt;p&gt;Hybrid multi-cloud systems have become the norm. It is one of the driving forces behind the need for observability. We have compiled 33 stats that show observability is the answer to cloud-native software development.&lt;/p&gt;

&lt;p&gt;Let's start by looking at how the cloud ecosystem is shaping up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloud-adoption-will-increase-along-with-its-complexity"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Cloud adoption will increase, along with its complexity&lt;/strong&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The global cloud computing market size is expected to reach $1,251.09 billion by 2028, registering a CAGR of 19.1% over the forecast period, 2021-2028. (&lt;a href="https://www.researchandmarkets.com/reports/5397840/cloud-computing-market-size-share-and-trends" rel="noopener noreferrer nofollow"&gt;Researchandmarkets&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;92% of enterprises have multi-cloud strategy; 82 percent have hybrid cloud strategy. (&lt;a href="https://www.flexera.com/blog/cloud/cloud-computing-trends-2021-state-of-the-cloud-report" rel="noopener noreferrer nofollow"&gt;Flexera&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;96% of software leaders have adopted a cloud-native approach to software development. (&lt;a href="https://newrelic.com/more-perfect-software/more-perfect-software/" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;30% of organizations are using 3 or more clouds today. (&lt;a href="https://www.ibm.com/downloads/cas/VKW3RNDP" rel="noopener noreferrer nofollow"&gt;IBM&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;83% of IT execs had cloud adoption as a key priority in 2021. (&lt;a href="https://resources.securitycompass.com/reports/2021-state-of-cloud-adoption#main-content" rel="noopener noreferrer nofollow"&gt;Security Compass&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;58% of leaders believe the complexity of managing hybrid/multi-cloud environments is their leading challenge. (&lt;a href="https://www.ibm.com/downloads/cas/VKW3RNDP" rel="noopener noreferrer nofollow"&gt;IBM&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;74% of CIOs believe increased complexity could make it extremely difficult to manage performance. (&lt;a href="https://www.dynatrace.com/global-cio-report/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;76% of CIOs say that they don't have complete visibility into application performance in cloud-native architectures. (&lt;a href="https://www.dynatrace.com/global-cio-report/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;33% of the IT team's time is spent tackling digital performance problems. (&lt;a href="https://www.dynatrace.com/global-cio-report/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#impact-of-cloud-complexity"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Impact of cloud complexity&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The advantages that the cloud brings come at the cost of increased application complexity. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;37 is the average number of technology systems that a single web or mobile transaction crosses. (&lt;a href="https://www.dynatrace.com/global-cio-report/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;6 is the average number of outages experienced by businesses in the last 12 months where user experience, revenue, or operations were impacted. (&lt;a href="https://www.dynatrace.com/global-cio-report/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;91% of surveyed data center facility managers have experienced at least one disruptive incident during the last 12 months, including downtime related to an outage(54%) or unplanned downtime (34%). (&lt;a href="https://www.honeywell.com/us/en/press/2021/10/honeywell-survey-more-than-half-of-surveyed-data-center-facility-managers-experienced-an-outage-in-the-past-12-months" rel="noopener noreferrer nofollow"&gt;Honeywell&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;95% of applications in enterprise organizations are not monitored due to siloed tools and burdensome manual effort. (&lt;a href="https://www.dynatrace.com/resources/ebooks/5-challenges-to-achieving-observability/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;84% of surveyed engineers report using hundreds or even thousands of compute instances across a single organization, with a large number of containers and microservices in use. (&lt;a href="https://tanzu.vmware.com/content/blog/the-state-of-observability-2021-key-findings" rel="noopener noreferrer nofollow"&gt;Tanzu VMware&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;70% of CIOs say monitoring containerized microservices in real-time is almost impossible. (&lt;a href="https://www.dynatrace.com/resources/ebooks/5-challenges-to-achieving-observability/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cloud-native apps on average extend across 2.25 public cloud environments. The most common observability tools are those provided by the public cloud providers which can only monitor their own cloud services. (&lt;a href="https://www.splunk.com/en_us/form/state-of-observability.html" rel="noopener noreferrer nofollow"&gt;Splunk&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For 90% of surveyed engineers, highly distributed apps create monitoring challenges an order of magnitude greater than what traditional monitoring tools can handle. (&lt;a href="https://tanzu.vmware.com/content/blog/the-state-of-observability-2021-key-findings" rel="noopener noreferrer nofollow"&gt;Tanzu VMware&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;57% of respondents found lack of context a top challenge with their existing monitoring tools. (&lt;a href="https://www.observeinc.com/blog/the-state-of-observability-2021/" rel="noopener noreferrer nofollow"&gt;Observe&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#leaders-believe-observability-is-the-key-to-unlocking-cloud-complexity"&gt;
  &lt;/a&gt;
  Leaders believe observability is the key to unlocking cloud complexity
&lt;/h3&gt;

&lt;p&gt;What you need is visibility into your hybrid cloud infra and rich context for every user requests. A robust observability stack can get engineering teams the context to resolve issues faster and earlier.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;94% of software leaders say observability is key to developing software. (&lt;a href="https://newrelic.com/more-perfect-software/more-perfect-software/" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;99% of leaders say their culture and observability technology allow developers to make quick decisions, without fear of repercussions. (&lt;a href="https://newrelic.com/resources/ebooks/more-perfect-software-gated" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;78% of software leaders learn about service interruptions through observability solutions versus just 12% for laggards. (&lt;a href="https://newrelic.com/resources/ebooks/observability-21st-century-manifesto" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Organizations identified as observability leaders are 6 times more likely to have accelerated root cause identification after adopting observability. (&lt;a href="https://www.splunk.com/en_us/form/state-of-observability.html" rel="noopener noreferrer nofollow"&gt;Splunk&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;More mature observability teams are 3x more likely to deliver higher customer satisfaction. (&lt;a href="https://www.honeycomb.io/observability-maturity-community-findings-2021-2/" rel="noopener noreferrer nofollow"&gt;Honeycomb&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;92% of surveyed engineers believe observability tools enable more effective decision-making. (&lt;a href="https://tanzu.vmware.com/content/blog/the-state-of-observability-2021-key-findings" rel="noopener noreferrer nofollow"&gt;Tanzu VMware&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;86% of respondents say they will be prioritizing observability within the next year. (&lt;a href="https://www.observeinc.com/blog/the-state-of-observability-2021/" rel="noopener noreferrer nofollow"&gt;Observe&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;70% of observability leaders believe they have excellent visibility into their org's security posture versus only 31% of beginners. (&lt;a href="https://www.splunk.com/en_us/form/state-of-observability.html" rel="noopener noreferrer nofollow"&gt;Splunk&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;45% of observability leaders report launching eight or more new products/revenue streams in the last year compared with 15% of beginners. (&lt;a href="https://www.splunk.com/en_us/form/state-of-observability.html" rel="noopener noreferrer nofollow"&gt;Splunk&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#challenges-in-setting-up-observability"&gt;
  &lt;/a&gt;
  Challenges in setting up observability
&lt;/h3&gt;

&lt;p&gt;But there are also challenges to setting up observability.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;86% of respondents cite difficulties related to tech, including inadequate legacy tools, lack of platform options, concerns about open-source tools, and tool fragmentation as a challenge to observability adoption. (&lt;a href="https://www.splunk.com/en_us/form/state-of-observability.html" rel="noopener noreferrer nofollow"&gt;Splunk&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;87% of respondents say it’s important that observability solutions work regardless of the architecture. OpenTelemetry, for example, is a vendor-agnostic instrumentation library that is becoming a world-standard for application instrumentation. (&lt;a href="https://www.splunk.com/en_us/form/state-of-observability.html" rel="noopener noreferrer nofollow"&gt;Splunk&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;38% cite lack of resources, 29% cite lack of skills, 27% cite lack of instrumentation as challenge to maximize the value of their observability practices. (&lt;a href="https://resources.newrelic.com/2021-observability-forecast" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Monitoring is fragmented. To gain end-to-end observability, 13% of respondents use more than 10 tools, 18% use 6-10 tools, and 31% use 2-5 tools. (&lt;a href="https://resources.newrelic.com/2021-observability-forecast" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#but-orgs-want-to-set-up-mature-observability-practices-sooner-than-later"&gt;
  &lt;/a&gt;
  But orgs want to set up mature observability practices sooner than later
&lt;/h3&gt;

&lt;p&gt;The journey to gain end-to-end observability might seem daunting. But the key is to start now.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;81% of C-suite executives expect to increase their observability budget next year, with 20% expecting budgets to increase significantly. (&lt;a href="https://resources.newrelic.com/2021-observability-forecast" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;74% of respondents note there is room to grow their observability practices, with only 26% claiming a mature observability practice. (&lt;a href="https://resources.newrelic.com/2021-observability-forecast" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;The verdict is in! And it says you need to start your observability journey or make it more mature sooner for modern-day software development.&lt;/p&gt;

&lt;p&gt;So when are you starting your observability journey?&lt;/p&gt;

&lt;p&gt;You can check out &lt;strong&gt;&lt;a href="https://signoz.io/?utm_source=learn&amp;amp;utm_medium=observability_statistics"&gt;SigNoz&lt;/a&gt;&lt;/strong&gt; - our open-source full-stack observability platform to get started. It is an all-in-one platform to address your observability needs.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>microservices</category>
      <category>monitoring</category>
      <category>observability</category>
    </item>
    <item>
      <title>Roadmap Front-end: saiba por onde começar sua jornada</title>
      <author>Alex Nicolas</author>
      <pubDate>Thu, 11 Nov 2021 12:51:27 +0000</pubDate>
      <link>https://dev.to/alexnicolascode/roadmap-front-end-saiba-por-onde-comecar-sua-jornada-4a00</link>
      <guid>https://dev.to/alexnicolascode/roadmap-front-end-saiba-por-onde-comecar-sua-jornada-4a00</guid>
      <description>&lt;p&gt;Se você está lendo esse artigo, muito provavelmente tem interessante ou já começou a estudar sobre o lado front-end da web.&lt;/p&gt;

&lt;p&gt;Meu objetivo com esse artigo é fazer uma breve introdução sobre o que é front-end e, em seguida, começar o roteiro que acredito ser o ideal quem está começando a jornada.&lt;/p&gt;

&lt;p&gt;A ideia é que esse artigo te acompanhe do começo da jornada até a escolha do seu primeiro framework. Caso você tenha alguma dúvida, independente do momento, deixe um comentário.&lt;/p&gt;

&lt;p&gt;Minha recomendação é que você leia o artigo em partes e busque dar um passo de cada vez, anotando o que você já conhece e o que precisa ser revisto. Os links dos conteúdos sugeridos vão estar sempre no final do tópico caso você queira entender um pouco mais sobre o tema.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-frontend"&gt;
  &lt;/a&gt;
  O que é front-end?
&lt;/h2&gt;

&lt;p&gt;Front-end é a parte da web que é mostrada para o usuário, responsável por enviar dados e fazer requisições para o lado back-end, também chamado de server-side.&lt;/p&gt;

&lt;p&gt;O front-end é a primeira interação do usuário com um produto ou serviço, por isso, é normal que muitas das informações, como textos e o próprio design da página sejam feitas por outras parte da equipe dedica ao projeto — designers UI/UX, redação, entre outros que não englobam o trabalho de um profissional dedicado ao front.&lt;/p&gt;

&lt;p&gt;Quando falamos em trabalho, os profissionais que cuidam dessa parte da web são chamados de pessoas desenvolvedoras front-end, e ficam responsáveis por estruturar, estilizar e deixar a página funcional para o usuário final.&lt;/p&gt;

&lt;p&gt;Muitas vezes os profissionais de front-end tem conhecimentos de SEO, permitindo que os sites criados tenham um melhor desempenho no ranqueamento dos buscadores (Google, Bing, Duck Duck Go, entre outros).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xrRy3RI3HE4"&gt;Diferença entre Back-End e Front-End com Mario Souto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ZY3-MFxVdEw&amp;amp;t=28s"&gt;O que faz uma desenvolvedora front-end?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#como-funciona-a-internet"&gt;
  &lt;/a&gt;
  Como funciona a internet
&lt;/h2&gt;

&lt;p&gt;Você chegar até essa página já mostra que a internet pode trazer informações e como ela está presente nas nossas vidas. Quando falamos em programação web, é essencial que você entenda como a internet em si funciona, por isso acho que vale a pena ter um tópico para isso.&lt;/p&gt;

&lt;p&gt;Nesse começo de jornada, entender por onde seu código vai passar e como ele pode atravessar o planeta em poucos milissegundos vai ser um conhecimento quase que essencial na minha visão.&lt;/p&gt;

&lt;p&gt;Um ponto que vale muito a pena mencionar é o HTTP e HTTPS, que, se você está vendo essa página, agradeça a esses protocolos.&lt;/p&gt;

&lt;p&gt;Além deles, conceitos como DNS e CDN também também serão bem úteis no começo da sua jornada e te ajudaram a entender melhor como a internet funciona. &lt;/p&gt;

&lt;p&gt;Para um primeiro passo, acho que os links abaixo vão te ajudar muito.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=nlO5hySqJFA"&gt;Como a Internet funciona? - @Curso em Vídeo HTML5 e CSS3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=p-aAqXW63Mg"&gt;Como o YouTube entrega este vídeo para você | Nerdologia Tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tecnoblog.net/283932/o-que-e-dns/"&gt;O que é DNS? | Tecnoblog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gocache.com.br/cdn/"&gt;O que é CDN | Go Cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.alura.com.br/conteudo/http-fundamentos"&gt;HTTP: Entendendo a web por baixo dos panos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hwttZtWkXTk&amp;amp;t=3s"&gt;HTTP // Dicionário do Programador&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vGuqKIRWosk"&gt;API // Dicionário do Programador&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#como-funciona-um-navegador"&gt;
  &lt;/a&gt;
  Como funciona um navegador
&lt;/h2&gt;

&lt;p&gt;Além da própria internet, acho que vale a pena fazer uma pequena pausa para entender como a ferramenta mais usada na web funciona: o navegador.&lt;/p&gt;

&lt;p&gt;Se você está acessando esse artigo, pode ter certeza que alguém passou dias, semanas, meses e anos desenvolvendo um navegador funcional que conseguisse atender bem o usuário (você).&lt;/p&gt;

&lt;p&gt;Quando programamos para web no caso front-end, é bem valido gastar boas horas ou dias aprendendo um pouco mais sobre o principal meio de comunicação entre o usuário e o nosso código.&lt;/p&gt;

&lt;p&gt;Recomendo que você não encare esse tópico apenas como mais um, mas que realmente aprenda durante sua jornada como um navegador funciona e como ele interage com frameworks, linguagens, bibliotecas e as milhares de outras ferramentas.&lt;/p&gt;

&lt;p&gt;Nesse tópico especifico, vou deixar um link para um vídeo em inglês, que é de longe um dos conteúdos mais interessantes e completos sobre navegadores que já consumi. Apesar disso, sinta a vontade para pular caso não se sinta confortável com o idioma. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UPjbJWKbPSU"&gt;Cookies // Dicionário do Programador&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=kDy62zaCHZE"&gt;Como funcionam os navegadores Web? | HipstersPontoTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/SmE4OwHztCc"&gt;(Conteúdo em inglês) Ryan Seddon: Como o navegador realmente renderiza um website | JSConf EU 2015&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h2&gt;

&lt;p&gt;Agora que você deu os primeiros passos, espero que o conceito de internet esteja mais claro na sua mente. Do back-end ao front-end, você entendeu como o mundo da web funciona e é o momento de botar a mão no código.&lt;/p&gt;

&lt;p&gt;Para essa segunda fase, o começo mais recomendado na minha visão é o HTML. Essa linguagem de marcação é muito usada e essencial para quem quer desenvolver uma página.&lt;/p&gt;

&lt;p&gt;Dentre os pontos que vale mencionar, acho que conhecer a estrutura inicial e deixar o HTML semântico são ótimos primeiros passos nessa linguagem, uma vez que isso é interpretado como um bom código.&lt;/p&gt;

&lt;p&gt;Principalmente na parte da semântica, ele vai te ajudar na hora de fazer manutenção do seu código e que outras pessoas possam ler e modificar seu HTML com mais facilidade.&lt;/p&gt;

&lt;p&gt;Além disso, o HTML semântico traz vantagens para o ranqueamento, mas, no momento, não foque nisso. O ideal é dar um passo de cada vez e buscar mais conteúdos sobre esse tema.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4dQtz1PpY9A"&gt;HTML // Dicionário do Programador&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/collabcode/meu-html-%C3%A9-sem%C3%A2ntico-e-o-seu-4e97c81c0c49"&gt;Meu HTML é semântico e o seu?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/alexnicolascode/html-semantico-aprenda-a-deixar-seu-codigo-mais-semantico-12fj"&gt;HTML Semântico: o que é, para que serve e porque utilizar no seu código&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h2&gt;

&lt;p&gt;Junto ao HTML, o CSS é outra ferramenta muito usada no front-end, uma vez que você precisa estilizar a página, colocando cores, ajustando os tamanhos das imagens e deixar tudo organizado para que o usuário se sinta confortável ao navegar.&lt;/p&gt;

&lt;p&gt;Esse passo acaba sendo chutado por muitos desenvolvedores que estão começando e talvez seja o menos querido. Apesar disso, não tem como deixar essa parte da web de fora, uma vez que ela é uma das bases do front-end e permite que páginas funcionem visualmente.&lt;/p&gt;

&lt;p&gt;No segundo link abaixo, minha recomendação trata exatamente desses "chutes". Se você quer aprender realmente como o CSS funciona e não chutar o que pode acontecer, acho que vale muito a pena ver a playlist do "Para de Chutar o CSS", do Marco Bruno Dev.&lt;/p&gt;

&lt;p&gt;Além disso, também trouxe algo bem interessante no terceiro link, mas que não necessariamente você vai usar agora. O objetivo é que você consiga entender até onde o CSS já evoluiu e como sua jornada só está começando.&lt;/p&gt;

&lt;p&gt;Não se assuste com os conceitos e palavras difíceis, mas também não transforme elas no seu objetivo atual.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=229xfk3EEM8"&gt;CSS (Cascading Style Sheets) // Dicionário do Programador&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="//youtube.com/playlist?list=PLirko8T4cEmx5eBb1-9j6T6Gl4aBtZ_5x"&gt;Pare de chutar o CSS (playlist)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.felipefialho.com/blog/do-sass-e-bem-ao-css-in-js-a-evolucao-do-css-ao-longo-da-historia/"&gt;Do Sass e BEM ao CSS-in-JS: A (re)evolução do CSS ao longo da história (OPCIONAL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@fnandaleite/metodologia-bem-para-css-b0d3269b4853"&gt;Metodologia BEM para CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#git-e-github"&gt;
  &lt;/a&gt;
  Git e GitHub
&lt;/h2&gt;

&lt;p&gt;Agora que você deu seus primeiros passos, acho que está na hora de expor seu código para o mundo. Principalmente na programação, projetos abertos são muito bem vistos.&lt;/p&gt;

&lt;p&gt;Hoje, o GitHub é a principal plataforma de compartilhamento de código no mundo. Os projetos chamados de open source unem milhões de desenvolvedores em todo o mundo e promovem a evolução de várias ferramentas.&lt;/p&gt;

&lt;p&gt;Nesse tópico, o recomendado é que você comece pelo Git, que é o sistema de versionamento de código. Isso permite que as modificações no seu código fiquem salvas e que outros desenvolvedores possam revisita-las.&lt;/p&gt;

&lt;p&gt;Após isso, acho que vale a pena gastar algumas horas ou dias experimentando o GitHub e entendendo como ele funciona. Se possível, tente subir algum projeto seu público.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=za5KWZ5pRag"&gt;Git // Dicionário do Programador&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=P4BNi_yPehc"&gt;O que são Git e Github? HipstersPontoTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2alg7MQ6_sI"&gt;Como usar Git e Github na prática: Guia para iniciantes | Mayk Brito&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#l%C3%B3gica-e-javascript"&gt;
  &lt;/a&gt;
  Lógica e JavaScript
&lt;/h2&gt;

&lt;p&gt;Para muitas pessoas, o JavaScript é realmente o primeiro passo na programação em si. A partir desse momento, você estudará lógica e essa será sua base para desenvolver um front-end com funcionalidades mais complexas e se consumir com outros serviços ou APIs.&lt;/p&gt;

&lt;p&gt;Como você já deve ter percebido, adicionei tanto lógica quanto JavaScript no tópico, mas, no final, a linguagem vira um complemento nesse contexto.&lt;/p&gt;

&lt;p&gt;Assim como o HTML e o CSS, considero o JavaScript como uma ferramenta. No caso, acho que o mais interessante é que você entenda a lógica antes de tudo e separe ela da linguagem.&lt;/p&gt;

&lt;p&gt;Essa talvez seja a parte mais complicada do processo de introdução ao front-end e você investirá mais tempo. Não se apresse em aprender um framework ou uma biblioteca nesse momento, mas tenha noção que elas já existem.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ftp.unicamp.br/pub/apoio/treinamentos/logica/logica.pdf"&gt;Lógica de Programação - FTP Unicamp (PDF)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NaVSbnnV75Q"&gt;O que é JavaScript? | HipstersPontoTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HOv9CqqAZk0"&gt;DOM (Document Object Model) // Dicionário do Programador&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.alura.com.br/artigos/entenda-diferenca-entre-var-let-e-const-no-javascript?gclid=CjwKCAjw2vOLBhBPEiwAjEeK9ncw5bfDvzlboLmfDSY1ppbF3YgKLzjkzaE-Q-RFIs8lzT0dtdHoqxoCXpYQAvD_BwE"&gt;Entenda a diferença entre var, let e const no JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/js/js_arrow_function.asp"&gt;JavaScript Arrow Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.braziljs.org/p/fetch-api-e-o-javascript"&gt;Fetch API e o JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#escolha-um-framework"&gt;
  &lt;/a&gt;
  Escolha um framework
&lt;/h2&gt;

&lt;p&gt;Após a sua primeira linguagem, talvez o momento mais marcante na jornada de uma pessoa desenvolvedora front-end seja a escolha do primeiro framework.&lt;/p&gt;

&lt;p&gt;Isso não quer dizer que você não poderá mudar de ferramenta ou que não possa trabalhar ou desenvolver coisas incríveis usando somente usando HTML, CSS e JavaScript.&lt;/p&gt;

&lt;p&gt;Na minha visão, os frameworks são um facilitador e mais uma ferramenta para te ajudar. Apesar disso, caso seu foco seja o mercado de trabalho, acho que vale a pena tomar um pouco de cuidado nessa escolha, principalmente porque muitas empresas já pedem alguma dessas ferramentas logo de cara.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#angular"&gt;
  &lt;/a&gt;
  Angular
&lt;/h3&gt;

&lt;p&gt;Primeiro, quero comentar sobre o Angular, a ferramenta mais antiga dessa lista, mas ainda muito utilizada por empresas que buscam migrar seu código ou que estão satisfeitas com a ferramenta.&lt;/p&gt;

&lt;p&gt;Na opinião de muitos desenvolvedores que já conheci, essa ferramenta é a mais complicada de se aprender entre as 3 que vou citar e a que vem perdendo mais espaço no mercado.&lt;/p&gt;

&lt;p&gt;Hoje, não recomendo que você aprenda esse framework tão cedo, principalmente porque há opções mais viáveis e com mais espaço no mercado. Apesar disso, caso as empresas que você esteja buscando peçam esse framework, talvez ainda possa ser um bom caminho.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/wkrueger/uma-introducao-rapida-ao-angular-5a3f"&gt;Uma introdução rápida ao Angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLGxZ4Rq3BOBoSRcKWEdQACbUCNWLczg2G"&gt;Curso de Angular - Loiane Groner (playlist)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=opxYpCKzlLk"&gt;O que é uma Single-Page Application? (SPA) HipstersPontoTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  React
&lt;/h3&gt;

&lt;p&gt;Seguindo a lista, temos o React, a ferramenta mais famosa dentre as três. Ela foi criada pela Meta (antigo Facebook) e é bastante utilizada por empresas em todo mundo.&lt;/p&gt;

&lt;p&gt;Essa biblioteca pode ser um pouco complexa dependendo do seu nível de conhecimento com JavaScript, mas é a mais amigável entre as 3 ferramentas que estou descrevendo aqui.&lt;/p&gt;

&lt;p&gt;O mercado para React é bem grande e, com a chegada de ferramentas complementares. como o NextJS, pode ser um caminho profissional bem interessante.&lt;/p&gt;

&lt;p&gt;Além disso, caso você tenha planos de estudar sobre desenvolvimento mobile, o ecossistema React tem o React Native, que segue a mesma linha de pensamento da biblioteca web, mas foca no mundo dos smartphones.&lt;/p&gt;

&lt;p&gt;Se você já está procurando emprego na área, muito provavelmente esbarrou com diversas vagas que pedem, pelo menos, conhecimentos básicos em React.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://roadmap.sh/react"&gt;React Developer - Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/alexnicolascode/react-hooks-definindo-e-gerenciando-estados-com-usestate-11cl"&gt;React Hooks: definindo e gerenciando estados com useState&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/alexnicolascode/react-hooks-aprenda-a-ouvir-estados-com-useeffect-6p8"&gt;React Hooks: aprenda a ouvir estados com useEffect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/alexnicolascode/react-hooks-aprenda-a-gerenciar-estados-com-a-context-api-54na"&gt;React Hooks: aprenda a gerenciar estados com a Context API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#vue"&gt;
  &lt;/a&gt;
  Vue
&lt;/h3&gt;

&lt;p&gt;Por fim, mas com certeza não menos importante, temos o Vue. Esse framework, diferente do React, não tem tanto espaço no mercado brasileiro, mas, mesmo assim, talvez seja o que mais chama atenção no momento.&lt;/p&gt;

&lt;p&gt;Ao contrário do React, que tem a Meta por atrás do projeto, e o Angular, que tem o Google, o Vue não tem uma empresa gigante suportando o projeto.&lt;/p&gt;

&lt;p&gt;Dependendo do seu ponto de visto, isso pode ser bom ou ruim, mas, com certeza, não é algo que impacta negativamente na popularidade do Vue.&lt;/p&gt;

&lt;p&gt;Dentre os 3 citados nessa lista, ele é o mais famoso no GitHub e seu projeto vem crescendo bastante nos últimos anos.&lt;/p&gt;

&lt;p&gt;Na minha visão, a documentação dele é mais completa dessa lista e, se você já tem um conhecimento um pouco mais avançado de JavaScript, acho que vale a pena ler um pouco mais sobre o Vue.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bEl6yN3vd-U"&gt;Vue.js (O competidor de peso do Angular e React) // Dicionário do Programador&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://br.vuejs.org/v2/guide/index.html"&gt;Introdução VueJS (Documentação)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ruH6R9Puj6o"&gt;Vue.js - Alura Live #77&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclusão
&lt;/h2&gt;

&lt;p&gt;Se você chegou até aqui, espero que tenha conseguido começar bem sua jornada e que realmente esteja se sentindo uma verdadeira pessoa desenvolvedora front-end.&lt;/p&gt;

&lt;p&gt;Esse é somente o começo da sua jornada, mas espero que o conteúdo desse artigo tenha te ajudado nesses primeiros passos.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Build a Wallet System with Flutterwave Payment Integration Into NodeJs Application</title>
      <author>Olubisi Idris Ayinde💡</author>
      <pubDate>Thu, 11 Nov 2021 12:43:55 +0000</pubDate>
      <link>https://dev.to/olanetsoft/how-to-build-a-wallet-system-with-flutterwave-payment-integration-into-nodejs-application-175b</link>
      <guid>https://dev.to/olanetsoft/how-to-build-a-wallet-system-with-flutterwave-payment-integration-into-nodejs-application-175b</guid>
      <description>&lt;p&gt;Today, many website owners want online payment gateways, especially as the industry has developed by leaps and bounds. Creating a wallet system is a bit of a nightmare when designing an app for the health sector, finance, or other sectors.&lt;/p&gt;

&lt;p&gt;We will learn how to create a wallet system and how to integrate the Flutterwave payment system in this tutorial.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;To follow along with this tutorial, we will need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A working knowledge of JavaScript.&lt;/li&gt;
&lt;li&gt;A good understanding of Node.js.&lt;/li&gt;
&lt;li&gt;A basic understanding of MongoDB or any database of our choice.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.postman.com/"&gt;Postman&lt;/a&gt; and some knowledge on how to use Postman.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also need a &lt;a href="https://dashboard.flutterwave.com/signup"&gt;Flutterwave&lt;/a&gt; account to receive or accept payments from our application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-wallet-system"&gt;
  &lt;/a&gt;
  What is a Wallet System?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Digital_wallet"&gt;A digital wallet&lt;/a&gt;, often known as an e-wallet, is an electronic device, internet service, or software application that allows one party to exchange digital currency units for products and services with another party. This can include utilizing a computer to purchase products online or using a smartphone to buy in a store.&lt;/p&gt;

&lt;p&gt;Before any transactions, money can be deposited in the digital wallet, or an individual's bank account can be linked to the digital wallet in other situations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-benefits-of-a-digital-wallet"&gt;
  &lt;/a&gt;
  What Are the Benefits of a Digital Wallet?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Instead of having to fish your card out of your likely bulging wallet every time you want to make an online transaction, you can simply hold your smartphone, log into your account, and you're ready to go.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Most applications allow you to organize all of your information in a readily accessible manner, saving you time from rummaging through your wallet for the things you need.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Many digital wallet apps offer a variety of bonuses and prizes to their users, which might help you get more "bang for your buck" on specific transactions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-flutterwave"&gt;
  &lt;/a&gt;
  What is Flutterwave?
&lt;/h2&gt;

&lt;p&gt;From online collections to payouts and everything in between, &lt;a href="https://flutterwave.com"&gt;Flutterwave&lt;/a&gt; can help you develop any form of payment flow for your specific use case.&lt;/p&gt;

&lt;p&gt;They also provide several services that allow you to transfer and receive money over the world in a matter of minutes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-directory-install-dependencies-and-set-up-authentication"&gt;
  &lt;/a&gt;
  Create a directory, Install dependencies, and set up authentication
&lt;/h2&gt;

&lt;p&gt;To get started, we'll need to set up our project.&lt;/p&gt;

&lt;p&gt;Open Visual Studio Code by navigating to a directory of our choice on our machine and opening it on the terminal.&lt;/p&gt;

&lt;p&gt;Then execute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
  code.

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: &lt;code&gt;code .&lt;/code&gt; won't work if we don't have Visual Studio Code installed on our system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#create-a-directory-and-initialize-raw-npm-endraw-"&gt;
  &lt;/a&gt;
  Create a directory and initialize &lt;code&gt;npm.&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Create a directory and initialize npm by typing the following command:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Windows power shell
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
   &lt;span class="nb"&gt;mkdir &lt;/span&gt;wallet-demo-with-flutterwave

   &lt;span class="nb"&gt;cd &lt;/span&gt;wallet-demo-with-flutterwave

   npm init &lt;span class="nt"&gt;-y&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Linux
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
   &lt;span class="nb"&gt;mkdir &lt;/span&gt;wallet-demo-with-flutterwave

   &lt;span class="nb"&gt;cd &lt;/span&gt;wallet-demo-with-flutterwave

   npm init &lt;span class="nt"&gt;-y&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-files-and-directories"&gt;
  &lt;/a&gt;
  Create files and directories
&lt;/h3&gt;

&lt;p&gt;In the earlier step, we initialized &lt;code&gt;npm&lt;/code&gt; with the command &lt;code&gt;npm init -y&lt;/code&gt;, which automatically created a package.json.&lt;/p&gt;

&lt;p&gt;We need to create the model, config directory, and files, for example, &lt;code&gt;wallet.js, wallet_transaction.js, transaction.js, database.js&lt;/code&gt; using the commands below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
   &lt;span class="nb"&gt;mkdir &lt;/span&gt;model config

   &lt;span class="nb"&gt;touch &lt;/span&gt;config/database.js model/wallet.js 
   model/wallet_transaction.js model/transaction.js 
   model/user.js

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now create the &lt;code&gt;index.js&lt;/code&gt; and &lt;code&gt;app.js&lt;/code&gt; files in the root directory of our project with the command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
&lt;span class="nb"&gt;touch &lt;/span&gt;app.js index.js

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As shown in the image below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qkgh-joj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636536545166/BbOFUsAhr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qkgh-joj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636536545166/BbOFUsAhr.png" alt="Flutterwave demo" width="449" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install dependencies
&lt;/h3&gt;

&lt;p&gt;We'll install several dependencies like &lt;code&gt;mongoose, jsonwebtoken, express, dotenv, axios, bcryptjs,&lt;/code&gt; and development dependency like &lt;code&gt;nodemon&lt;/code&gt; to restart the server as we make changes automatically.&lt;/p&gt;

&lt;p&gt;We will install mongoose because I will be using MongoDB in this tutorial.&lt;/p&gt;

&lt;p&gt;User credentials will be checked against what we have in our database. As a result, the entire authentication process isn't limited to the database we'll use in this tutorial.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
  npm &lt;span class="nb"&gt;install &lt;/span&gt;jsonwebtoken dotenv mongoose express bcryptjs axios

  npm &lt;span class="nb"&gt;install &lt;/span&gt;nodemon &lt;span class="nt"&gt;-D&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-nodejs-server-and-connect-your-database"&gt;
  &lt;/a&gt;
  Create a Node.js server and connect your database
&lt;/h3&gt;

&lt;p&gt;By adding the following snippets to our app.js, index.js, database.js, .env in that order, we can now create our Node.js server and connect it to our database.&lt;/p&gt;

&lt;p&gt;In our &lt;code&gt;database.js.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;config/database.js:&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MONGO_URI&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Connecting to the database&lt;/span&gt;
  &lt;span class="nx"&gt;mongoose&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MONGO_URI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Successfully connected to database&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;database connection failed. exiting now...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our app.js:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;wallet-demo-with-flutterwave/app.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./config/database&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bcrypt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bcryptjs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;jwt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jsonwebtoken&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="c1"&gt;// Logic here&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our index.js:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;wallet-demo-with-flutterwave/index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;API_PORT&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;API_PORT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// server listening &lt;/span&gt;
&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server running on port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you notice, our file needs some environment variables. We will create a new &lt;code&gt;.env&lt;/code&gt; file and add our variables before starting our application.&lt;/p&gt;

&lt;p&gt;In our .env.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;API_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4001

&lt;span class="nv"&gt;MONGO_URI&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; //Your database URI here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To start our server, edit the scripts object in our package.json to look like the below one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The snippet above has been successfully inserted into &lt;code&gt;app.js, index.js, and database.js.&lt;/code&gt; First, we built our node.js server in &lt;code&gt;index.js&lt;/code&gt; and imported the &lt;code&gt;app.js&lt;/code&gt; file with routes configured.&lt;/p&gt;

&lt;p&gt;Then, as indicated in &lt;code&gt;database.js,&lt;/code&gt; we used mongoose to create a connection to our database.&lt;/p&gt;

&lt;p&gt;Execute the command &lt;code&gt;npm run dev&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Both the server and the database should be up and running without crashing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-user-model-and-route"&gt;
  &lt;/a&gt;
  Create user model and route
&lt;/h3&gt;

&lt;p&gt;We'll define our schema for the user details when signing up for the first time and validate them against the saved credentials when logging in.&lt;/p&gt;

&lt;p&gt;Add the following snippet to user.js inside the model folder.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;model/user.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userSchema&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's create the routes for register and login, respectively.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;app.js&lt;/code&gt; file in the root directory, we will add the following snippet for user registration and login.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// importing user context&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./model/user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Register&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/register&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// our register logic goes here...&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Login&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// our login logic goes here&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#implement-register-and-login-functionality"&gt;
  &lt;/a&gt;
  Implement register and login functionality
&lt;/h3&gt;

&lt;p&gt;We'll be implementing these two routes in our application. We will be using JWT to sign the credentials and bycrypt to encrypt the password before storing them in our database.&lt;/p&gt;

&lt;p&gt;From the /register route, we will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get user input.&lt;/li&gt;
&lt;li&gt;Validate user input.&lt;/li&gt;
&lt;li&gt;Validate if the user already exists.&lt;/li&gt;
&lt;li&gt;Encrypt the user password.&lt;/li&gt;
&lt;li&gt;Create a user in our database.&lt;/li&gt;
&lt;li&gt;And finally, create a signed JWT token.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Modify the /register route structure we created earlier to look as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/register&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// Our register logic starts here&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Get user input&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Validate user input&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All input is required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// check if user already exist&lt;/span&gt;
    &lt;span class="c1"&gt;// Validate if user exist in our database&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;oldUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oldUser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;409&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User Already Exist. Please Login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//Encrypt user password&lt;/span&gt;
    &lt;span class="nx"&gt;encryptedPassword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;bcrypt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Create user in our database&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="c1"&gt;// sanitize: convert email to lowercase&lt;/span&gt;
      &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;encryptedPassword&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c1"&gt;// Create token&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TOKEN_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;expiresIn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2h&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// save user token&lt;/span&gt;
    &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// return new user&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// Our register logic ends here&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: Update your .env file with a TOKEN_KEY, which can be a random string.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Using Postman to test the endpoint, we'll get the response shown below after successful registration.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L9kgVqel--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636538666898/YK0CQBA0Y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L9kgVqel--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636538666898/YK0CQBA0Y.png" alt="Register user result - Flutterwave Demo" width="880" height="470"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/login&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// Our login logic starts here&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Get user input&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Validate user input&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All input is required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Validate if user exist in our database&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;bcrypt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Create token&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TOKEN_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;expiresIn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2h&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="c1"&gt;// save user token&lt;/span&gt;
      &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="c1"&gt;// user&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Invalid Credentials&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// Our login logic ends here&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Click &lt;a href="https://www.section.io/engineering-education/how-to-build-authentication-api-with-jwt-token-in-nodejs/"&gt;here&lt;/a&gt; to learn more about How to Build an Authentication API with JWT Token in Node.js&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-a-wallet-system-with-flutterwave-payment-integration"&gt;
  &lt;/a&gt;
  Build a Wallet System with Flutterwave Payment Integration
&lt;/h2&gt;

&lt;p&gt;We can now utilize the user details to build wallets, save wallet transactions, and perform other operations in the system now that we have successfully created a user collection and authentication functionality in the previous step.&lt;/p&gt;

&lt;p&gt;Let's update our wallet.js, wallet_transaction, and transaction using the following code.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;model/wallet.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;walletSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;balance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ObjectId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;users&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;timestamps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;wallet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;walletSchema&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;model/wallet_transaction.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;walletTransactionSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="c1"&gt;// Even though user can be implied from wallet, let us&lt;/span&gt;
    &lt;span class="c1"&gt;// double save it for security&lt;/span&gt;
    &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;users&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="na"&gt;isInflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Boolean&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="na"&gt;paymentMethod&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flutterwave&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="na"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;currency is required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;enum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;NGN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;USD&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;EUR&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GBP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;payment status is required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;enum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;successful&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pending&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;failed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;walletTransaction&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;walletTransactionSchema&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;model/transaction.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;transactionSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ObjectId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;transactionId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name is required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email is required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;amount is required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;currency is required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;enum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;NGN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;USD&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;EUR&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GBP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;paymentStatus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;enum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;successful&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pending&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;failed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pending&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;paymentGateway&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;payment gateway is required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;enum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flutterwave&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="c1"&gt;// Payment gateway might differs as the application grows&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;timestamps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Transaction&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;transactionSchema&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We've created our wallet, wallet transaction, and transaction schemas, which means we can now receive funds from the client, validate payment using flutterwave on the backend, record and update payment details in the wallet, wallet transaction, and transaction collections, respectively.&lt;/p&gt;

&lt;p&gt;Let's get the front-end client ready to accept payments from clients.&lt;/p&gt;

&lt;p&gt;We will use the following command to create an &lt;code&gt;index.html&lt;/code&gt; file in our root directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update &lt;code&gt;index.html&lt;/code&gt; that we just created with the snippet below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nx"&gt;DOCTYPE&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UTF-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;viewport&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;width=device-width, initial-scale=1.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Receive&lt;/span&gt; &lt;span class="nx"&gt;Payment&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/title&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/head&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://checkout.flutterwave.com/v3.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;makePayment()&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Pay&lt;/span&gt; &lt;span class="nx"&gt;Now&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;makePayment&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;FlutterwaveCheckout&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;public_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR_PUBLIC_KEY_HERE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;tx_ref&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hooli-tx-1920bbtyt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;NGN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;NG&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;payment_options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;card&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

          &lt;span class="c1"&gt;// specified redirect URL&lt;/span&gt;
          &lt;span class="na"&gt;redirect_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:4001/response&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

          &lt;span class="c1"&gt;// use customer details if user is not logged in, else add user_id to the request&lt;/span&gt;
          &lt;span class="na"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;demomail@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;phone_number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;08088098622&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Idris Olubisi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;onclose&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// close modal&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;customizations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Flutterwave Demo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Flutterwave Payment Demo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdn.iconscout.com/icon/premium/png-256-thumb/payment-2193968-1855546.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/body&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/html&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can learn more about the snippet above from the &lt;a href="https://developer.flutterwave.com/docs/flutterwave-inline"&gt;Flutterwave documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Updating our &lt;code&gt;app.js&lt;/code&gt; to render the &lt;code&gt;index.html&lt;/code&gt; file from the server-side, we will use the following snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Add the route below&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/pay&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/index.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="c1"&gt;//__dirname : It will resolve to your project folder.&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;//...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before we test our app, we'll see the phrase 'YOUR_PUBLIC_KEY_HERE' in the 'index.html' we created earlier, which implies we'll need a public key from our &lt;a href="https://dashboard.flutterwave.com/dashboard/settings/apis"&gt;flutterwave dashboard&lt;/a&gt;. Let's go to our dashboard to retrieve our public key.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mAh361Sa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636543952748/WGA7FuBxt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mAh361Sa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636543952748/WGA7FuBxt.png" alt="Flutterwave dashboard" width="880" height="463"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's test it out by going to our browser and typing &lt;code&gt;http://localhost:4001/pay&lt;/code&gt;. We should see something similar to what we have below after clicking the &lt;code&gt;Pay Now&lt;/code&gt; button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rwJehUx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636543345804/kmlLhiIcf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rwJehUx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636543345804/kmlLhiIcf.png" alt="Flutterwave Pay" width="880" height="491"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will use the test card number:&lt;code&gt;4242424242424242&lt;/code&gt;, expiry date: &lt;code&gt;04/25&lt;/code&gt; and CVV: &lt;code&gt;202&lt;/code&gt;. We will be redirected to the page below to enter OTP, which is &lt;code&gt;12345&lt;/code&gt; because we are using a test card.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i4eLCiYz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636545612158/udD4tEtRD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i4eLCiYz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636545612158/udD4tEtRD.png" alt="Flutterwave OTP" width="880" height="492"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We'll be redirected to localhost:3000/response after entering the OTP, but nothing will happen. Let's address that by implementing the logic to handle what happens next.&lt;/p&gt;

&lt;p&gt;Creating the. &lt;code&gt;/response&lt;/code&gt; endpoint, we will update our app.js with the snippet below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//...&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/response&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;transaction_id&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// URL with transaction ID of which will be used to confirm transaction status&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://api.flutterwave.com/v3/transactions/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;transaction_id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/verify`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Network call to confirm transaction status&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;get&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FLUTTERWAVE_V3_SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We get the &lt;code&gt;transaction_id&lt;/code&gt; from the query params of our callback in the code above, and we verify the transaction by sending a request to the flutterwave endpoint. We should see something like the screenshot below in our log.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OB84xOyu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636578937916/PGtAoZn2f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OB84xOyu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636578937916/PGtAoZn2f.png" alt="Flutterwave response" width="880" height="967"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us create a logic to manage operations such as validating a user's wallet, creating wallet transactions and transactions, among others.&lt;/p&gt;

&lt;p&gt;In our &lt;code&gt;app.js&lt;/code&gt; let's import Wallet, Wallet transaction, and transaction model.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//...&lt;/span&gt;

&lt;span class="c1"&gt;// importing user context&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./model/user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Wallet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./model/wallet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;WalletTransaction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./model/wallet_transaction&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Transaction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./model/transaction&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Updating app.js with the logic to manage operations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/response&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="c1"&gt;//....&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Validating User wallet&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;validateUserWallet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// check if user have a wallet, else create wallet&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userWallet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Wallet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c1"&gt;// If user wallet doesn't exist, create a new one&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;userWallet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// create wallet&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wallet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Wallet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;wallet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;userWallet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Create Wallet Transaction&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createWalletTransaction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// create wallet transaction&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;walletTransaction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;WalletTransaction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;isInflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;walletTransaction&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Create Transaction&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createTransaction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;customer&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// create transaction&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;transaction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Transaction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;transactionId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phone_number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;paymentStatus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;paymentGateway&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flutterwave&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Update wallet &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updateWallet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// update wallet&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wallet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Wallet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOneAndUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;$inc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;balance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;new&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;wallet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now update the &lt;code&gt;/response&lt;/code&gt; endpoint with all the functions we created to manage different operations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//...&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/response&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;transaction_id&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// URL with transaction ID of which will be used to confirm transaction status&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://api.flutterwave.com/v3/transactions/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;transaction_id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/verify`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Network call to confirm transaction status&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;get&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FLUTTERWAVE_V3_SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;customer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// check if customer exist in our database&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="c1"&gt;// check if user have a wallet, else create wallet&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wallet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;validateUserWallet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// create wallet transaction&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;createWalletTransaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// create transaction&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;createTransaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;updateWallet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;wallet funded successfully&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;wallet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Voila 🥳 We're almost done, so let's test our application. After completing payment, we should get something similar to what we have below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GKNAs-eB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636579643148/soBBZbS8T.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GKNAs-eB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636579643148/soBBZbS8T.png" alt="Fluttwerwave wallet funding result" width="880" height="623"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Because of several trials, while trying to fund our wallet, we have a balance of &lt;code&gt;10,000&lt;/code&gt; in the screenshot above; however, the number may differ if the procedures are done attentively.&lt;/p&gt;

&lt;p&gt;Let's create an endpoint to retrieve a user balance with the code snippet below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//...&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/wallet/:userId/balance&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wallet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Wallet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="c1"&gt;// user&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wallet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;balance&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Testing our endpoint that returns the user balance:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kOp9ajQx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636580508118/8dSqwEXG2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOp9ajQx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636580508118/8dSqwEXG2.png" alt="Wallet Balance" width="880" height="394"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: We may have noticed that if we reload the page after being redirected to the '/response' endpoint, the same transaction with the same amount is updated in our wallet. To prevent this, we must verify that such a &lt;code&gt;transaction_id&lt;/code&gt; does not exist in our system; otherwise, we will receive a duplicate transaction error.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can modify our logic as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//...&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/response&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;transaction_id&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;//...&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;customer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// check if transaction id already exist&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;transactionExist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Transaction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;transactionId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transactionExist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;409&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Transaction Already Exist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;//...&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;wallet funded successfully&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;wallet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we should see something similar to the screenshot below when we refresh the page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vkUkomnL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636581032487/s8gLtG81x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vkUkomnL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636581032487/s8gLtG81x.png" alt="Transaction Exist" width="880" height="591"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Complete code is available on &lt;a href="https://github.com/Olanetsoft/wallet-demo-with-flutterwave"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we learned how to build a simple authentication, wallet system, and flutterwave payment integration into our nodeJs application&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://flutterwave.com"&gt;Flutterwave&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.flutterwave.com/"&gt;Flutterwave Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'd love to connect with you at &lt;a href="https://twitter.com/olanetsoft"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/olubisi-idris-ayinde-05727b17a/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/Olanetsoft"&gt;GitHub&lt;/a&gt; | &lt;a href="https://idrisolubisi.com/"&gt;Portfolio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See you in my next blog article. Take care!!!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>node</category>
    </item>
    <item>
      <title>Code Smell 101 - Comparison Against Booleans</title>
      <author>Maxi Contieri</author>
      <pubDate>Thu, 11 Nov 2021 12:33:16 +0000</pubDate>
      <link>https://dev.to/mcsee/code-smell-101-comparison-against-booleans-3aic</link>
      <guid>https://dev.to/mcsee/code-smell-101-comparison-against-booleans-3aic</guid>
      <description>&lt;p&gt;&lt;em&gt;When comparing to booleans, we perform magic castings and get unexpected results.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TL;DR: Don't compare against true. Either you are true, or false or you shouldn't compare&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#problems"&gt;
  &lt;/a&gt;
  Problems
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hidden castings&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The least surprise principle violation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/mcsee/fail-fast-48dm"&gt;Fail Fast&lt;/a&gt; principle violation&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#solutions"&gt;
  &lt;/a&gt;
  Solutions
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use booleans&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don't mix booleans with &lt;em&gt;boolean castable objects&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#context"&gt;
  &lt;/a&gt;
  Context
&lt;/h1&gt;

&lt;p&gt;Many languages cast values to boolean crossing domains.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sample-code"&gt;
  &lt;/a&gt;
  Sample Code
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#wrong"&gt;
  &lt;/a&gt;
  Wrong
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"True"&lt;/span&gt;
&lt;span class="k"&gt;else
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"False"&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# this evaluates to true since &lt;/span&gt;
&lt;span class="c"&gt;# "false" is a non-empty string&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"True"&lt;/span&gt;
&lt;span class="k"&gt;else
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"False"&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# this also evaluates to true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#right"&gt;
  &lt;/a&gt;
  Right
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="k"&gt;if  &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"True"&lt;/span&gt;
&lt;span class="k"&gt;else
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"False"&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# this evaluates to false   &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#detection"&gt;
  &lt;/a&gt;
  Detection
&lt;/h1&gt;

&lt;p&gt;[X] Automatic &lt;/p&gt;

&lt;p&gt;Linters can check for explicit comparisons and warnings.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#tags"&gt;
  &lt;/a&gt;
  Tags
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Castings&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;It is a common industry practice to use many non booleans as booleans. &lt;/p&gt;

&lt;p&gt;We should be very strict when using booleans.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#relations"&gt;
  &lt;/a&gt;
  Relations
&lt;/h1&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/code-smell-69-big-bang-javascript-ridiculous-castings-49ij" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Code Smell 69 - Big Bang (JavaScript Ridiculous Castings)&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ May 4 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#oop&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#more-info"&gt;
  &lt;/a&gt;
  More Info
&lt;/h1&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/fail-fast-48dm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Fail Fast&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ Dec 6 '20 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#oop&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h1&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@michaelheld"&gt;Michael Held&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/disguise"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;If it doesn’t work, it doesn’t matter how fast it doesn’t work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Mich Ravera&lt;/em&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/software-engineering-great-quotes-26ci" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Software Engineering Great Quotes&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ Dec 28 '20 ・ 13 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#quotes&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#software&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;This article is part of the CodeSmell Series.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mcsee" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goWt_06h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qOJvl4uX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/1b94891f-70d7-43cd-9531-4a58aa009115.jpg" alt="mcsee"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mcsee/how-to-find-the-stinky-parts-of-your-code-1dbc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Find the Stinky parts of your Code&lt;/h2&gt;
      &lt;h3&gt;Maxi Contieri ・ May 21 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codequality&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Manage NGINX configurations inside Docker container</title>
      <author>Vasyl Kutsyk</author>
      <pubDate>Thu, 11 Nov 2021 12:15:06 +0000</pubDate>
      <link>https://dev.to/kutsyk/manage-nginx-configurations-inside-docker-container-9da</link>
      <guid>https://dev.to/kutsyk/manage-nginx-configurations-inside-docker-container-9da</guid>
      <description>&lt;p&gt;Originaly posted &lt;a href="https://kutsyk.medium.com/manage-nginx-configurations-inside-docker-container-2da58cd782b6"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I believe in any product there is a time when you have to configure a proxy server. Will it be to expose UI applications or just redirect requests to different APIs it depends, but time will come. I’ve made a simple example that will help you configure or investigate your NGINX docker container with configuration change on the fly.&lt;/p&gt;

&lt;p&gt;Don’t do this in your production environment.&lt;/p&gt;




&lt;p&gt;For the beginning, we need to understand how our NGINX docker image looks like.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dockerfile&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM nginx:stable-alpine
RUN rm -rf /usr/share/nginx/html/*
COPY ./dist/app /usr/share/nginx/html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the same directory that you created your Dockerfile, create folders directory &lt;strong&gt;dist/app&lt;/strong&gt; and put some dummy &lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is an example of &lt;strong&gt;index.html&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h2&amp;gt;An Unordered HTML List&amp;lt;/h2&amp;gt;
&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;Coffee&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;Tea&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;Milk&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;h2&amp;gt;An Ordered HTML List&amp;lt;/h2&amp;gt;
&amp;lt;ol&amp;gt;
  &amp;lt;li&amp;gt;Coffee&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;Tea&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;Milk&amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Build your image:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker build -t nginx:latest .&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As the result, you should have your image ready to be started:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REPOSITORY          TAG                 IMAGE ID            
nginx               latest              .....
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run your docker image:&lt;br&gt;
&lt;code&gt;docker run -d -p 8080:80 nginx&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Validate that everything is working smooth:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;test-vm@vm-test:~/dockertest$ curl http://localhost:8080
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h2&amp;gt;An Unordered HTML List&amp;lt;/h2&amp;gt;
&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;Coffee&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;Tea&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;Milk&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;h2&amp;gt;An Ordered HTML List&amp;lt;/h2&amp;gt;
&amp;lt;ol&amp;gt;
  &amp;lt;li&amp;gt;Coffee&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;Tea&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;Milk&amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you should enter into your container, to do that get a container id.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;test-vm@vm-test:~/dockertest$ docker ps
CONTAINER ID   IMAGE  COMMAND  CREATED   STATUS  PORTS     NAMES                           
022c55a80088   nginx  "/d.…"   7 m ago   Up 7 m  8080      busy
test-vm@vm-test:~/dockertest$ docker exec -it 022c55a80088 /bin/sh
/ #
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Voila, we are in the container and can change everything on the fly.&lt;/p&gt;

&lt;p&gt;The configuration file itself is located in the default directory:&lt;br&gt;
&lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can go there, modify configurations and easily validate them:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/ # nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Validation of file is good, but to apply it, we need to restart our nginx service:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/ # nginx -s reload
2021/11/10 12:01:50 [notice] 46#46: signal process started
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that’s it, now testing of configuration change for your NGINX service in Docker container is easier and no need for rebuilding on every change.&lt;/p&gt;




&lt;p&gt;Thanks for reading!&lt;br&gt;
If you have an interesting experience with live changes in Docker containers or you are interested in another topic, please add comments and upvote 👍. I’m interested in the dialog.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>nginx</category>
      <category>proxy</category>
    </item>
    <item>
      <title>Conditional Statements and Loops in Python</title>
      <author>Sahil</author>
      <pubDate>Thu, 11 Nov 2021 12:05:19 +0000</pubDate>
      <link>https://dev.to/sahilfruitwala/conditional-statements-and-loops-in-python-298p</link>
      <guid>https://dev.to/sahilfruitwala/conditional-statements-and-loops-in-python-298p</guid>
      <description>&lt;p&gt;What if you want to do some specific tasks when the string is "Python" and some other tasks when the string is "Java". To achieve this conditioning we can use conditional statements in python or any other language. When we want to do some task for n number of times or we want to loop through some specific list, in this kind of situation, we can use different types of loops.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conditional-statements-in-python"&gt;
  &lt;/a&gt;
  Conditional Statements in Python
&lt;/h2&gt;

&lt;p&gt;In python, we have two types of conditional statements.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#if-else"&gt;If-else&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#if-elif-else"&gt;if-elif-else (if-else if-else)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both conditional statements seem almost similar, and actually, they are. There is just a minor difference between these two statements. We will understand this difference using code examples. If you know any other language(s), you might be wondering if python has a switch case or not. NO, python does not have a switch case.&lt;/p&gt;

&lt;p&gt;&lt;a id="if-else"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ifelse"&gt;
  &lt;/a&gt;
  if-else
&lt;/h3&gt;

&lt;p&gt;Syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conditional&lt;/span&gt; &lt;span class="n"&gt;expresson&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;statement&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;statement&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If I have explained the if-else statement in plain English then it would be the "either this or that" statement. &lt;/p&gt;

&lt;p&gt;Let's assume if the string is &lt;strong&gt;java&lt;/strong&gt;, I want to do the sum of two numbers else I want to multiply two numbers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;num2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'java'&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"java"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c1"&gt;# check if value of lang variable is 'java'
&lt;/span&gt;    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# OUTPUT: 7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;num2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'java'&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="s"&gt;"java"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c1"&gt;# check if value of lang variable is NOT 'java'
&lt;/span&gt;    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# OUTPUT: 10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is not compulsory to use else part. You can use only if part as well. For example, add string "Programming" to the existing string if it is "Python" or does nothing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Output: Python Programming
&lt;/span&gt;

&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Java'&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Output: Java
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sometimes, you can go into if statement using only variable as well. For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUTPUT: Python
&lt;/span&gt;
&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUTPUT: Python Programming
&lt;/span&gt;
&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUTPUT: Python Programming
&lt;/span&gt;
&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUTPUT: Python
&lt;/span&gt;
&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUTPUT: Python
&lt;/span&gt;
&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"random string"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUTPUT: Python Programming
&lt;/span&gt;
&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUTPUT: Python
&lt;/span&gt;
&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUTPUT: Python Programming
&lt;/span&gt;
&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;([]):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUTPUT: Python
&lt;/span&gt;
&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUTPUT: Python Programming
&lt;/span&gt;
&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;({}):&lt;/span&gt;
    &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" Programming"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUTPUT: Python
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we want to combine multiple conditions we can use &lt;strong&gt;&lt;em&gt;and&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt; within the if statement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'PYTHON'&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isupper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Worked!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUTPUT: Worked!
&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;islower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Worked again!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# OUPUT: Worked again!
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a id="if-elif-else"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ifelifelse"&gt;
  &lt;/a&gt;
  if-elif-else
&lt;/h3&gt;

&lt;p&gt;Syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conditional&lt;/span&gt; &lt;span class="n"&gt;expresson&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;statement&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conditional&lt;/span&gt; &lt;span class="n"&gt;expresson&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;statement&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;statement&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use this conditional statement when we want to test more than one scenario. Let's understand this by an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Grade C!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Grade B!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Grade A!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"FAIL!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Something is wrong!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# OUTPUT: Grade A!
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Be aware when you use multiple &lt;strong&gt;&lt;em&gt;if&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;if-elif&lt;/em&gt;&lt;/strong&gt;. A single error in your logic and all your code-base can throw an error. To understand this, see the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Grade A!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Grade B!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Grade C!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Something is wrong!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"-----------------------------------"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Grade A!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Grade B!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Grade C!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# OUTPUT:
&lt;/span&gt;&lt;span class="n"&gt;Grade&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;-----------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Grade&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;
&lt;span class="n"&gt;Grade&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#loops-in-python"&gt;
  &lt;/a&gt;
  Loops in Python
&lt;/h2&gt;

&lt;p&gt;In python, we have two kinds of loops.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#for"&gt;for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#while"&gt;while&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#control"&gt;Loop Control Statements&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a id="for"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-loop-in-python"&gt;
  &lt;/a&gt;
  for Loop in Python
&lt;/h3&gt;

&lt;p&gt;Syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;iterator&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sequence&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For loop is used when we want to traverse through the sequential datatype. For example traversing through lists, tuples, strings etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'apple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'mango'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'grapes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'peach'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;"""
# OUTPUT:
apple
banana
mango
grapes
peach
"""&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="s"&gt;"""
# OUTPUT:
apple
banana
mango
grapes
peach
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the first example above, in the &lt;em&gt;fruit&lt;/em&gt; variable, we are directly getting each element of the &lt;em&gt;fruits list&lt;/em&gt;. Whereas, in the second example, we are accessing each element by index reference. The range(n) function returns a sequence of numbers.&lt;br&gt;
Syntax: &lt;code&gt;range(start, stop, step)&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;""" OUTPUT: 
2
5
8
11
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use for loop with dictionaries as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;dict1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"lang"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"python"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"year"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"2021"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"month"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"november"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dict1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;":"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dict1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="s"&gt;""" OUTPUT:
lang : python
year : 2021
month : november
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a id="while"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#while-loop-in-python"&gt;
  &lt;/a&gt;
  while Loop in Python
&lt;/h3&gt;

&lt;p&gt;Syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you need to do some work repeatedly until some condition satisfies, in that situation you can use a while loop.&lt;/p&gt;

&lt;p&gt;Let's assume we need to print "Hello World" until the count variable became 5.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;   
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a id="control"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#loop-control-statements"&gt;
  &lt;/a&gt;
  Loop Control Statements
&lt;/h2&gt;

&lt;p&gt;There are times when you need to break the loop or skip some iterations in the loop or do nothing. This kind of thing can be done using Loop Control Statements. In python, we have three loop control statements.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Break statement&lt;/li&gt;
&lt;li&gt;Continue statement&lt;/li&gt;
&lt;li&gt;Pass statement&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We use a break statement when we want to break the loop when certain conditions match. For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'apple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'mango'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'grapes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'peach'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'mango'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;""" OUTPUT: 
apple
banana
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While the break statement breaks the loop, the continue statement makes the loop skip the current iteration and forces it to go to the next iteration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'apple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'mango'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'grapes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'peach'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'mango'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;""" OUTPUT: 
apple
banana
grapes
peach
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pass statement is a meaningless piece of code that suggests the interpreter to do nothing. It is similar to the comment but comments are ignored by interpreters while pass statement executed by the interpreter and as per the name does nothing. Pass statement used with function and class as well, which I will explain in the next section.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'apple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'mango'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'grapes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'peach'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'mango'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;""" OUTPUT:
apple
banana
mango
grapes
peach
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a id="control"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#forelse-amp-whileelse"&gt;
  &lt;/a&gt;
  for...else &amp;amp; while...else
&lt;/h2&gt;

&lt;p&gt;During the development journey, there are times when you might need to use for..else and while...else. These are just normal for and while loop with special else cases. Let's see an example to understand it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'apple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'mango'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'grapes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'peach'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'mango'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Loop Did Not Break!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;""" OUTPUT :
apple
banana
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'apple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'mango'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'grapes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'peach'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'abc'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Loop Did Not Break!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;""" OUTPUT :
apple
banana
mango
grapes
peach
Loop Did Not Break!
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, you might have guessed. When loop does not break OR loop completes its all the iteration without interruption, else block is executed.  The same happens with the while loop as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"All iteration of While are executed successfully."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;""" OUTPUT :
1
2
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Finally! We are at the end of this section 😁. &lt;/p&gt;

&lt;p&gt;I know, it is a lot to take in at a time. But, you don't need to remember everything that I have mentioned here. I just showed you so that you can recall what is possible and what is not. There are some other methods as well that I have not mentioned here.&lt;/p&gt;

&lt;p&gt;If you want to find out more about control statements and loops in python, check out on &lt;a href="//programiz.com/python-programming/if-elif-else"&gt;Programiz&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;That was it. Thank you for reading.&lt;/p&gt;

&lt;p&gt;I know it is a lot but I hope, you were able to absorb some knowledge. If you have any questions or doubt mention them in the comment section or reach out to me on &lt;a href="https://bit.ly/3paS8PB"&gt;Twitter&lt;/a&gt;, &lt;a href="https://bit.ly/3DQ6VmE"&gt;LinkedIn&lt;/a&gt; or &lt;a href="https://bit.ly/3n2o1XN"&gt;Instagram&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want me to explain any specific topic, mention that in the comment section below 👇.&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Create your REST API using OpenAPI  kotlin-spring generator</title>
      <author>BjornvdLaan</author>
      <pubDate>Thu, 11 Nov 2021 12:04:09 +0000</pubDate>
      <link>https://dev.to/bjornvdlaan/create-your-rest-api-using-openapi-kotlin-spring-generator-5154</link>
      <guid>https://dev.to/bjornvdlaan/create-your-rest-api-using-openapi-kotlin-spring-generator-5154</guid>
      <description>&lt;p&gt;When building an API, I like to start by first creating a formal definition before starting the actual development. One of the most established standards for such API definitions is OpenAPI (formerly Swagger). One pleasant aspect of starting with a definition is that, once the definition is created and agreed upon, we can generate part of our codebase using the OpenAPI Generator. As the name suggests, the OpenAPI Generator generates code from an OpenAPI specification. More specifically, the generator is able to create code for client libraries, server stubs, documentation, and configuration in many different languages and frameworks.&lt;/p&gt;

&lt;p&gt;I know this generator from my Java projects and decided to use it with Kotlin as well. Lucky for me, there is actually a generator for Spring Boot-based Kotlin projects! I, however, could not find a tutorial dedicated to it and therefore I share my steps here in this tutorial.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h1&gt;

&lt;p&gt;You can find the full project (including &lt;code&gt;target&lt;/code&gt;) at &lt;a href="https://github.com/BjornvdLaan/kotlin-spring-boot-open-api-example"&gt;https://github.com/BjornvdLaan/kotlin-spring-boot-open-api-example&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-we-want-to-achieve"&gt;
  &lt;/a&gt;
  What we want to achieve
&lt;/h1&gt;

&lt;p&gt;We wish to generate the server stub using the OpenAPI Generator via its Maven plugin. An advantage of using the Maven (or Gradle) plugin is that the generation becomes part of our API’s build lifecycle and the generated code is always in sync with your OpenAPI definition when you clean compile your code.&lt;/p&gt;

&lt;p&gt;For our example in this tutorial, we will use the &lt;a href=""&gt;PetStore OpenAPI specification&lt;/a&gt; from &lt;a href=""&gt;this tutorial&lt;/a&gt; on Baeldung. After running the Maven plugin, the generated code is found in the &lt;code&gt;target/generated-sources/openapi&lt;/code&gt; directory (see below). After generation, we ‘only’ still need to implement the generated Delegate interfaces within our own &lt;code&gt;src&lt;/code&gt; directory and, voila, the API is implemented. We will implement one of the routes in the PetStore specification and test it using curl.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CYnYAhue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2ggryipqdjmjpkdhwpi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CYnYAhue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2ggryipqdjmjpkdhwpi.png" alt="Generated sources directory" width="548" height="374"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#create-your-spring-boot-project"&gt;
  &lt;/a&gt;
  Create your Spring Boot project
&lt;/h1&gt;

&lt;p&gt;We start by creating a fresh Spring Boot project using the &lt;a href="https://start.spring.io/"&gt;Spring Initializr&lt;/a&gt;. We tell it to be a Maven project using Kotlin and packaged as a jar. We also add the Spring Web dependency because the generated code depends on this dependency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DvF35yo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwmw5n0dvdt05bg91toy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DvF35yo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwmw5n0dvdt05bg91toy.png" alt="Spring Initializr" width="880" height="697"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After downloading the project, we open it in our favorite IDE and we add the &lt;code&gt;petstore.yml&lt;/code&gt; OpenAPI definition to &lt;code&gt;src/main/resources&lt;/code&gt; to end up with the following project structure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4tZzaE8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tm6ld71tq4281pqcavj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4tZzaE8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tm6ld71tq4281pqcavj.png" alt="Project structure before generation" width="574" height="690"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before we can start, we need to add one more dependency to our &lt;code&gt;pom.xml&lt;/code&gt; that the generated code depends on:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;             
    &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-validation&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#add-the-maven-plugin"&gt;
  &lt;/a&gt;
  Add the Maven plugin
&lt;/h1&gt;

&lt;p&gt;Now it's time to add the OpenAPI Generator's Maven plugin to &lt;code&gt;pom.xml&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.openapitools&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;openapi-generator-maven-plugin&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.1.0&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;generate&lt;span class="nt"&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;inputSpec&amp;gt;&lt;/span&gt;
                    ${project.basedir}/src/main/resources/petstore.yml
                &lt;span class="nt"&gt;&amp;lt;/inputSpec&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;generatorName&amp;gt;&lt;/span&gt;kotlin-spring&lt;span class="nt"&gt;&amp;lt;/generatorName&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;configOptions&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;basePackage&amp;gt;&lt;/span&gt;nl.bjornvanderlaan.petstoreapi&lt;span class="nt"&gt;&amp;lt;/basePackage&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;apiPackage&amp;gt;&lt;/span&gt;nl.bjornvanderlaan.petstoreapi.api&lt;span class="nt"&gt;&amp;lt;/apiPackage&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;modelPackage&amp;gt;&lt;/span&gt;nl.bjornvanderlaan.petstoreapi.model&lt;span class="nt"&gt;&amp;lt;/modelPackage&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;configPackage&amp;gt;&lt;/span&gt;nl.bjornvanderlaan.petstoreapi.config&lt;span class="nt"&gt;&amp;lt;/configPackage&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;delegatePattern&amp;gt;&lt;/span&gt;true&lt;span class="nt"&gt;&amp;lt;/delegatePattern&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;interfaceOnly&amp;gt;&lt;/span&gt;false&lt;span class="nt"&gt;&amp;lt;/interfaceOnly&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;modelNameSuffix&amp;gt;&lt;/span&gt;Dto&lt;span class="nt"&gt;&amp;lt;/modelNameSuffix&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/configOptions&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;An overview of all configuration options is found &lt;a href="https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/kotlin-spring.md"&gt;here&lt;/a&gt;. I would like to highlight three options where I made a design decision:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;[delegatePattern = true]&lt;/strong&gt; - I asked the generator to use the Delegate pattern so the routes and their logic are separated. The Delegate implementations that we write ourselves can be injected in the generated code, without any need to manually touch the generated sources.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[interfaceOnly = false]&lt;/strong&gt; - This option determines whether the controller implementation will also be generated. This controller implementation essentially just autowires the relevant Delegate to be used in the routes. I feel its good to let it be generated because then no engineer can be tempted to add other functionality to the controller, maintaining better separation of concerns. If you really want to do a lot more in your controller then it is worth considering to set this option to &lt;strong&gt;true&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[modelNameSuffix = Dto]&lt;/strong&gt; - I prefer to use the Dto (Data Transfer Object) pattern to separate these objects from the entities that I will use in the service layer. As such, I add a suffix to make the pattern usage explicit.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#generate-the-code"&gt;
  &lt;/a&gt;
  Generate the code
&lt;/h1&gt;

&lt;p&gt;We can generate the code by running &lt;code&gt;mvn clean generate-sources&lt;/code&gt; and we then obtain the following project structure:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SxtfbSFe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2uk4o1hvm3f22qn3jrb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SxtfbSFe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2uk4o1hvm3f22qn3jrb.png" alt="Project structure after generation" width="716" height="1162"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For IntelliJ users: the &lt;code&gt;target/generated-sources/openapi/src/main/kotlin&lt;/code&gt; folder can be marked as an generated sources root. Right-click this folder, then go to 'Mark Directory as' and select Generated Sources Root.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;target/generated-sources/openapi/src/main/kotlin&lt;/code&gt; now contains two packages with a couple of classes each. Let's quickly go through them one by one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apipetsapikt"&gt;
  &lt;/a&gt;
  api.PetsApi.kt
&lt;/h2&gt;

&lt;p&gt;This interface class defines one method for each API route from our specification using Spring Web annotations like &lt;code&gt;@RequestMapping&lt;/code&gt;, &lt;code&gt;@GetMapping&lt;/code&gt;, and &lt;code&gt;@PostMapping&lt;/code&gt;.&lt;br&gt;
The methods are all one-liners as they simply delegate the work to the Delegate, exactly as we configured.&lt;br&gt;
The interface also has an unimplemented &lt;code&gt;getDelegate()&lt;/code&gt; which will be implemented by &lt;code&gt;PetsApiController&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#apipetsapidelegate"&gt;
  &lt;/a&gt;
  api.PetsApiDelegate
&lt;/h2&gt;

&lt;p&gt;This interface defines the methods used by the &lt;code&gt;PetsApi&lt;/code&gt; with a standard implementation that just returns status 501 Not Implemented. We will implement the interface in our &lt;code&gt;src&lt;/code&gt; folder.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#apipetsapicontrollerkt"&gt;
  &lt;/a&gt;
  api.PetsApiController.kt
&lt;/h2&gt;

&lt;p&gt;The Controller implements the PetsApi interface by autowiring the PetsApiDelegate implementation. As mentioned, I configured OpenAPI Generator to generate this class for me because I feel this is all the Controller should do.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#apiexceptions"&gt;
  &lt;/a&gt;
  api.Exceptions
&lt;/h2&gt;

&lt;p&gt;This &lt;code&gt;@ControllerAdvice&lt;/code&gt; class defines default exception handling for three exceptions that are commonly encountered.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#apiapiutils"&gt;
  &lt;/a&gt;
  api.ApiUtils
&lt;/h2&gt;

&lt;p&gt;This object (singleton) defines a utility method used by a utility method for GET mappings.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#modelerrordto"&gt;
  &lt;/a&gt;
  model.ErrorDto
&lt;/h2&gt;

&lt;p&gt;This Dto can be used to send back erroneous response to the requestor.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#modelpetdto"&gt;
  &lt;/a&gt;
  model.PetDto
&lt;/h1&gt;

&lt;p&gt;The Dto that resembles our pets and is used to respond to, for instance, GET requests that want to retrieve data. Our generated code contains two examples of such routes: &lt;code&gt;listPets&lt;/code&gt; and &lt;code&gt;showPetById&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#implement-the-delegate"&gt;
  &lt;/a&gt;
  Implement the Delegate
&lt;/h1&gt;

&lt;p&gt;Now it's finally time to start coding. We create a new class in &lt;code&gt;nl.bjornvanderlaan.petstoreapi.api&lt;/code&gt; package (in &lt;code&gt;src&lt;/code&gt;, not &lt;code&gt;target&lt;/code&gt;!!) and we override the &lt;code&gt;listPets&lt;/code&gt; method to let it return an hardcoded response with my three favorite cat names and status 200 (Ok).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;nl.bjornvanderlaan.petstoreapi.api&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.http.HttpStatus&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.http.ResponseEntity&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.stereotype.Component&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;nl.bjornvanderlaan.petstoreapi.model.PetDto&lt;/span&gt;

&lt;span class="nd"&gt;@Component&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PetsApiDelegateImpl&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;PetsApiDelegate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;listPets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;?):&lt;/span&gt; &lt;span class="nc"&gt;ResponseEntity&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PetDto&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;ResponseEntity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nf"&gt;listOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="nc"&gt;PetDto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1L&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Charlie"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="nc"&gt;PetDto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2L&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Obi"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="nc"&gt;PetDto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3L&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Loki"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="nc"&gt;HttpStatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;OK&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#verify-the-api"&gt;
  &lt;/a&gt;
  Verify the API
&lt;/h1&gt;

&lt;p&gt;Great, so we have some generated classes in our &lt;code&gt;target&lt;/code&gt; directory based on our OpenAPI specification and we also added some code of our own in &lt;code&gt;src&lt;/code&gt;. Let's run this with IntelliJ and see what happens.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kV1yHOEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0q7lfoybp3vns59n907q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kV1yHOEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0q7lfoybp3vns59n907q.png" alt="Spring Boot application is running on port 8080" width="880" height="244"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We learn that the Spring Boot application is now running on port 8080. But does it actually work?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl &lt;span class="nt"&gt;-I&lt;/span&gt; http://localhost:8080/pets
HTTP/1.1 200 
Content-Type: application/json
Transfer-Encoding: chunked
Date: &amp;lt;redacted my author&amp;gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;curl http://localhost:8080/pets
&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;:1,&lt;span class="s2"&gt;"name"&lt;/span&gt;:&lt;span class="s2"&gt;"Charlie"&lt;/span&gt;,&lt;span class="s2"&gt;"tag"&lt;/span&gt;:null&lt;span class="o"&gt;}&lt;/span&gt;,&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;:2,&lt;span class="s2"&gt;"name"&lt;/span&gt;:&lt;span class="s2"&gt;"Obi"&lt;/span&gt;,&lt;span class="s2"&gt;"tag"&lt;/span&gt;:null&lt;span class="o"&gt;}&lt;/span&gt;,&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;:3,&lt;span class="s2"&gt;"name"&lt;/span&gt;:&lt;span class="s2"&gt;"Loki"&lt;/span&gt;,&lt;span class="s2"&gt;"tag"&lt;/span&gt;:null&lt;span class="o"&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#compile-your-code"&gt;
  &lt;/a&gt;
  Compile your code
&lt;/h1&gt;

&lt;p&gt;We might suspect that this tutorial is finished as we have verified the API's response. However, when we try to compile our code using &lt;code&gt;mvn clean compile&lt;/code&gt; we are met with some red text: compilation fails because the generated classes cannot be resolved. &lt;/p&gt;

&lt;p&gt;Why does this happen? The problem is that the &lt;code&gt;kotlin-maven-plugin&lt;/code&gt; does not see &lt;code&gt;target/generated-sources/openapi&lt;/code&gt; as a source directory and so these files are not compiled after cleaning. We resolve this by explicitly adding the path to the plugin's configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.jetbrains.kotlin&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;kotlin-maven-plugin&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- omitted by author --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;compile&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;compile&lt;span class="nt"&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;sourceDirs&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;sourceDir&amp;gt;&lt;/span&gt;${project.build.directory}/generated-sources/kotlin/src/main/kotlin&lt;span class="nt"&gt;&amp;lt;/sourceDir&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/sourceDirs&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- omitted by author --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adding the above execution resolves our issue and Maven now tells us the build is successful.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VKUkUxeS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yffbeoyxab0ustz5sjk6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VKUkUxeS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yffbeoyxab0ustz5sjk6.png" alt="Maven compile successful" width="342" height="128"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great! Now we are done, right? Not exactly. When we go a step further and run our Spring Boot application via &lt;code&gt;mvn spring-boot:run&lt;/code&gt; then we are met with another error:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4J-Sn4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ntczw2wc8caft5m3eb8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4J-Sn4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ntczw2wc8caft5m3eb8.png" alt="Image description" width="880" height="593"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So now what? The issues is caused by our design choice to generate not only the interfaces but also the Controller classes as the generator then also gives us an &lt;code&gt;Application.kt&lt;/code&gt; class. As we already also have a main class in our &lt;code&gt;src&lt;/code&gt; project, Spring now cannot determine which to pick. There are essentially two ways to fix this. The first option is to delete our own &lt;code&gt;PetStoreApplication.kt&lt;/code&gt; and use the generated class. This could be a reasonable choice if you are use that you do not want to do anything custom in the main class. Alternatively, we can configure &lt;code&gt;spring-boot-maven-plugin&lt;/code&gt; to point out the correct main class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-maven-plugin&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;mainClass&amp;gt;&lt;/span&gt;nl.bjornvanderlaan.petstoreapi.PetstoreApiApplicationKt&lt;span class="nt"&gt;&amp;lt;/mainClass&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Regardless of which option you choose, we can run &lt;code&gt;mvn spring-boot:run&lt;/code&gt; again and are then at last greeted with our beloved Spring banner and the message that our application can now be found at port 8080!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;OpenApi allows us to create a specification for our API that we can share among teams and stakeholders to communicate our contracts. The OpenAPI Generator and its Maven plugin help us to generate code from our specification. We ourselves can then focus on the business logic. In this tutorial, we saw how we can generate a server stud from our specification for Spring Boot-based Kotlin projects.&lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>springboot</category>
      <category>openapi</category>
      <category>maven</category>
    </item>
    <item>
      <title>Nova heavy size. Looking for alternatives</title>
      <author>Lamy Fafa</author>
      <pubDate>Thu, 11 Nov 2021 11:55:13 +0000</pubDate>
      <link>https://dev.to/lamy_fafa_f3cc85ee84f4cd6/nova-heavy-size-looking-for-alternatives-3ppf</link>
      <guid>https://dev.to/lamy_fafa_f3cc85ee84f4cd6/nova-heavy-size-looking-for-alternatives-3ppf</guid>
      <description>&lt;p&gt;So currently our company big Laravel system need a new Admin panel, and we choose Nova at first. But after many months of development, we found out that it not suitable for us because:&lt;/p&gt;

&lt;p&gt;*Only the basic crud is supported. If I want to add a small extension/trigger to a crud action, I have to choose between create a resource tool or tool, I can't just use a small code file for it (yes I can use Observer, but it's not enough)&lt;/p&gt;

&lt;p&gt;*Since I have to create custom tools from above, and tools can't be linked to each other, we have so many nova-components packages, causing the size of Nova increasing too big. It's now nearly 1.5GB.&lt;/p&gt;

&lt;p&gt;*Compared to our old custom Admin panel created with React, Nova speed is 2x slower or more.&lt;/p&gt;

&lt;p&gt;So, do you guys have any solution for this? What alternatives do we have that can satisfy our requirements: lighter in size&lt;a href="https://muckrack.com/balagee"&gt;,&lt;/a&gt; faster speed, easily customization/expansion?&lt;/p&gt;

&lt;p&gt;Oh and one more thing: can be placed in the same root folder as our laravel main package, we don't want to have a separate source code server/db/host for our admin panel (that's why we choose Nova from the beginning).&lt;/p&gt;

</description>
      <category>python</category>
      <category>laravel</category>
      <category>programming</category>
      <category>php</category>
    </item>
    <item>
      <title>Laravel vs. Ruby on Rails</title>
      <author>Metricoid Technology Solutions</author>
      <pubDate>Thu, 11 Nov 2021 11:39:48 +0000</pubDate>
      <link>https://dev.to/metricoid_technology/laravel-vs-ruby-on-rails-3ak2</link>
      <guid>https://dev.to/metricoid_technology/laravel-vs-ruby-on-rails-3ak2</guid>
      <description>&lt;p&gt;Backend web frameworks include Laravel and Ruby on Rails. Both are well-known in the &lt;a href="https://metricoidtech.com/"&gt;world of development&lt;/a&gt;, but the key distinction between them is the language they use. Laravel is based on PHP, while Ruby on Rails is based on Ruby, and both have a significant community.&lt;br&gt;
Laravel is a sophisticated web application framework for quickly and effectively &lt;a href="https://metricoidtech.com/custom-web-development/"&gt;developing web applications&lt;/a&gt;. It can easily customize an internet application without worrying about the cost. It's a PHP-based open-source system that's extremely popular.&lt;br&gt;
Ruby on Rails is one such system that provides the developer with a set of pre-built features, allowing the &lt;a href="https://metricoidtech.com/hire-dedicated-developers/"&gt;developer&lt;/a&gt; to focus on the business logic rather than the framework's complexities. It might be a Ruby-based server-side web application system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Differences between Laravel and Ruby on Rails:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Laravel is an open-source MVC-based framework that was published in 2011, whereas Rails is an amazing web application framework that was released in 2008 and is based on MVC.&lt;/p&gt;

&lt;p&gt;Laravel is built in PHP and distributed under an MIT license, whereas the Rails framework is written in Ruby and distributed under an MIT license.&lt;/p&gt;

&lt;p&gt;Laravel is best suited for enterprise-level projects with complicated business logic to small websites, whereas Rails is best suited for metaprogramming language and small project web applications.&lt;/p&gt;

&lt;p&gt;Laravel has several great features, such as Blade, a template engine that can also employ PHP code directly in view, whereas Rails' key feature is its support for third-party plugins, such as Ruby gems, that help with development and are extensively documented.&lt;/p&gt;

&lt;p&gt;Laravel is superior for performance and scalability than Rails, which is slower.&lt;/p&gt;

&lt;p&gt;With built-in authentication features, Laravel is superior for web applications, although Rails has a superb feature for online applications in the shape of CoffeeScript, a built-in static compilation tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Laravel:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It comes with a built-in lightweight template engine for creating layouts. Layouts ranging from simple to complicated can be created using these templates.&lt;/p&gt;

&lt;p&gt;Laravel supports MVC architecture and has a number of built-in functions that aid in application efficiency.&lt;/p&gt;

&lt;p&gt;Laravel may run several unit tests at the same time, checking for new changes made by the developer.&lt;/p&gt;

&lt;p&gt;Laravel's built-in function combines a hash and salted password technique to guarantee strong security.&lt;/p&gt;

&lt;p&gt;It includes pre-installed libraries that aid in the application's performance.&lt;/p&gt;

&lt;p&gt;Database definitions and schema are maintained in PHP code using Schema Builder. It keeps track of database migrations as well.&lt;/p&gt;

&lt;p&gt;Laravel contains a mail class that allows you to send mail from your web application with rich content and attachments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ruby on rails:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The symbol garbage collector is a feature of Ruby on Rails that gathers symbols and protects your system from a variety of assaults.&lt;/p&gt;

&lt;p&gt;The keyword arguments assist the Ruby application in consuming less memory.&lt;/p&gt;

&lt;p&gt;Before Ruby 5, we had to use the gem render anywhere to render views, but with Ruby 5, we can render views from anywhere.&lt;/p&gt;

&lt;p&gt;We may tweak the browser's friendly URLs with Ruby.&lt;/p&gt;

&lt;p&gt;It lets you add a module before the class to which it was prepended.&lt;/p&gt;

&lt;p&gt;Because it loads the entire page from the server, websites can take a long time to reload. Turbolinks 3 just reloads the body content; it does not reload the entire page.&lt;/p&gt;

&lt;p&gt;It allows you to create APIs and removes any middleware that isn't required for an application&lt;/p&gt;

&lt;p&gt;Rails include a large set of AJAX functions. The AJAX-specific java programming is generated automatically.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>rails</category>
      <category>softwaredevelopment</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How does the TOR Browser Work?</title>
      <author>Rohan Kiratsata</author>
      <pubDate>Thu, 11 Nov 2021 11:39:45 +0000</pubDate>
      <link>https://dev.to/rohankiratsata/how-does-the-tor-browser-work-2bcj</link>
      <guid>https://dev.to/rohankiratsata/how-does-the-tor-browser-work-2bcj</guid>
      <description>&lt;p&gt;Now-a-days people are moving to privacy browsers like TOR Browsers and Brave Browsers. But ever wondered, how TOR browser protects you against tracking, surveillance and censorship.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tor"&gt;
  &lt;/a&gt;
  What is TOR?
&lt;/h2&gt;

&lt;p&gt;TOR stand for The Onion Router is a network that enables a user to stay anonymous on the internet. The TOR network can be accessed using TOR Browser. Today millions of people use TOR for multiple purposes, everything from innocent daily browsing to illicit activities. It is also used to access the so-called "Dark Web".&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-dark-web-deep-web-and-surface-web"&gt;
  &lt;/a&gt;
  What is Dark Web? Deep Web? and Surface Web?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Surface Web&lt;/strong&gt; is a portion of web which can be searched or found on internet publicly. For example, visiting Facebook, Anything you search on Google, etc.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Deep Web&lt;/strong&gt; is a opposite of &lt;em&gt;surface web&lt;/em&gt;, the part of web which is not indexed or found publicly. For example, your GMail inbox, an unlisted YouTube video, online banking, or anything which is password or paywall protected can be considered as deep web. It's nothing like the dark web as most of us use the deep web all the time.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Dark Web&lt;/strong&gt; is web content that exist on darknets/overlay networks and can only be accessed using specific software or authorization access.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example Image:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0RCqzl3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.troyhunt.com/content/images/2018/02/Surface-Web-Deep-Web-Dark-Web.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0RCqzl3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.troyhunt.com/content/images/2018/02/Surface-Web-Deep-Web-Dark-Web.jpg" alt="Web Demo" width="620" height="559"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#working-of-tor-network"&gt;
  &lt;/a&gt;
  Working of TOR Network
&lt;/h3&gt;

&lt;p&gt;TOR uses the concept of "Onion Routing" method in which user data is first encrypted and then transferred through different TOR layers.&lt;/p&gt;

&lt;p&gt;The TOR network has three layers/relays.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Entry Relay&lt;/li&gt;
&lt;li&gt;Middle Relay&lt;/li&gt;
&lt;li&gt;Exit Relay&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Entry Relay&lt;/strong&gt; is the entry point to TOR Network. Each user will first connect to the Entry relay and will encrypt the data.&lt;br&gt;
&lt;strong&gt;Middle Relay&lt;/strong&gt; is getting data in the encrypted format and will pass the data to another middle relay. No middle node knows what data is passed except its predecessor and descendant. Even if the user employs the TOR network to do something illegal, the IP address of a middle relay will not show up as source traffic.&lt;br&gt;
&lt;strong&gt;Exit Relay&lt;/strong&gt; is the final relay that TOR traffic passes through before it reaches its destination. If a malicious user employs the Tor network to do something that might be objectionable or illegal, the exit relay may take the blame.&lt;/p&gt;

&lt;p&gt;Example Image:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KSTnWxma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctsinqynmm6y7sis3iwf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KSTnWxma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctsinqynmm6y7sis3iwf.png" alt="TOR Working Image" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#is-it-illegal-to-use-tor"&gt;
  &lt;/a&gt;
  Is it illegal to use TOR?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c76F_ar5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7c7uefi5nmois959z4hy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c76F_ar5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7c7uefi5nmois959z4hy.jpg" alt="Meme" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Tor browser has gained a bad reputation due to the increase in illegal activity on the dark web. However, using the TOR browser and TOR network is &lt;strong&gt;LEGAL&lt;/strong&gt; unless you are doing illegal things on the dark web.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So, that's it for today guys!! Hope you learned something new. Till then...KEEP CODING...KEEP HUSTLING&lt;/em&gt;&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What's the time in your friend's country?</title>
      <author>B.Jothin kumar</author>
      <pubDate>Thu, 11 Nov 2021 11:34:21 +0000</pubDate>
      <link>https://dev.to/jothinkumar/time-widget-2bcj</link>
      <guid>https://dev.to/jothinkumar/time-widget-2bcj</guid>
      <description>&lt;p&gt;So,have you ever wondered what time it is in your friend's country? Well, this tool will help you sure! This tool is dedicated to Linux.&lt;br&gt;
Here, view it on Github: &lt;a href="https://github.com/Jothin-kumar/time-widget"&gt;https://github.com/Jothin-kumar/time-widget&lt;/a&gt;&lt;br&gt;
My project webpage: &lt;a href="https://jothin-kumar.github.io/time-widget/"&gt;https://jothin-kumar.github.io/time-widget/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to contact me:&lt;br&gt;
E-mail: &lt;a href="mailto:bjothinphysics@gmail.com"&gt;bjothinphysics@gmail.com&lt;/a&gt;&lt;br&gt;
DM me on Discord: jothin-kumar#1075&lt;br&gt;
Please visit my website: &lt;a href="https://jothin-kumar.github.io/"&gt;https://jothin-kumar.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preview"&gt;
  &lt;/a&gt;
  Preview:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PWxvBuQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Jothin-kumar/time-widget/blob/main/screenshots/1.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PWxvBuQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Jothin-kumar/time-widget/blob/main/screenshots/1.png%3Fraw%3Dtrue" alt="Screenshot" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XvW_SYGQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Jothin-kumar/time-widget/blob/main/screenshots/2.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XvW_SYGQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Jothin-kumar/time-widget/blob/main/screenshots/2.png%3Fraw%3Dtrue" alt="Screenshot" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lAHtWDZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Jothin-kumar/time-widget/blob/main/screenshots/3.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lAHtWDZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Jothin-kumar/time-widget/blob/main/screenshots/3.png%3Fraw%3Dtrue" alt="Screenshot" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H249-BHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Jothin-kumar/time-widget/blob/main/screenshots/4.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H249-BHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Jothin-kumar/time-widget/blob/main/screenshots/4.png%3Fraw%3Dtrue" alt="Screenshot" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ihw9yWyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Jothin-kumar/time-widget/blob/main/screenshots/5.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ihw9yWyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Jothin-kumar/time-widget/blob/main/screenshots/5.png%3Fraw%3Dtrue" alt="Screenshot" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you!!!&lt;br&gt;
Happy coding!&lt;/p&gt;

</description>
      <category>python</category>
      <category>linux</category>
      <category>productivity</category>
      <category>opensource</category>
    </item>
    <item>
      <title>50+ Awesome Vue.js Templates And Themes</title>
      <author>Marc Camilleri</author>
      <pubDate>Thu, 11 Nov 2021 11:19:45 +0000</pubDate>
      <link>https://dev.to/markc86/50-awesome-vuejs-templates-and-themes-1pln</link>
      <guid>https://dev.to/markc86/50-awesome-vuejs-templates-and-themes-1pln</guid>
      <description>&lt;p&gt;As a huge Vue enthusiast, I am always on the hunt for high-quality templates, themes, and resources to speed up my development process.&lt;/p&gt;

&lt;p&gt;But as you might guess, finding high-quality templates isn't always easy, and sometimes it's even hard to know where to start. There are many options available, and all of them claim to be the best. To help you out, I have compiled a list of top premium and free Vue templates. This list includes 50+ high-quality resources, each tailored to suit your unique project. All templates come with a full preview so you can get an idea of what it looks like before you start and, they are stretched with features that could help you get your project done faster than ever before. Some resources in this list include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Admin dashboard templates&lt;/li&gt;
&lt;li&gt;Web app templates&lt;/li&gt;
&lt;li&gt;Website templates&lt;/li&gt;
&lt;li&gt;Landing page templates&lt;/li&gt;
&lt;li&gt;UI kits and components libraries&lt;/li&gt;
&lt;li&gt;And many more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the resources above it will be easier for you to create future-focused interfaces for your projects. If you find that any of these templates work for you, please be sure to share this information with others who may benefit from it as well.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#1-mosaic"&gt;
  &lt;/a&gt;
  1. Mosaic
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mmDM6MJX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcni77j78e3kg0f8ixis.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mmDM6MJX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcni77j78e3kg0f8ixis.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://cruip.com/demos/mosaic/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://cruip.com/mosaic/"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mosaic is a powerful admin dashboard template built with Tailwind CSS, featuring hundreds of pre-built pages and styled layouts in HTML, React, and Vue. With multiple styles and full-screen sections, it's a perfect fit for admin dashboards, eCommerce, marketplaces, FinTech, and SaaS companies to use as a starting point for their projects.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Beautiful charts built with Chart.js&lt;/li&gt;
&lt;li&gt;Multiple use cases and products&lt;/li&gt;
&lt;li&gt;Tutorials and documentation available &lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#2-simple"&gt;
  &lt;/a&gt;
  2. Simple
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O72VuJtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/loz924bibhbcuvbzkfg9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O72VuJtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/loz924bibhbcuvbzkfg9.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://cruip.com/demos/simple/"&gt;Live Demo &amp;amp; Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Simple is a Vue and Tailwind CSS landing page template designed to provide all the basic components a developer/founder needs to create a landing page for SaaS products, online services, digital agencies and more. The design of Simple looks very professional and is perfect for businesses that work remotely and need a powerful yet easy-to-use platform.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Attractive and modern design&lt;/li&gt;
&lt;li&gt;Fully accessible components&lt;/li&gt;
&lt;li&gt;Interactive previews&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#3-start-vue-free"&gt;
  &lt;/a&gt;
  3. Start Vue Free
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a-gQXIqq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxpsg6rcv1pz426t1n1p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a-gQXIqq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxpsg6rcv1pz426t1n1p.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://preview.keenthemes.com/start-vue-free/#/dashboards/start"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://keenthemes.com/products/start-vue-free"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Start Vue Free is a material-inspired VueJS 3 and Bootstrap 5 based Admin and Dashboard theme built by KeenThemes. The theme features a fully responsive layout with a gorgeous design suitable for any type of web applications. Start Vue helps you build your project from scratch or helps you convert your existing site into a beautiful web application within minutes!&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free version available&lt;/li&gt;
&lt;li&gt;Chat app for client support&lt;/li&gt;
&lt;li&gt;Product gallery and search panel&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#4-open-pro"&gt;
  &lt;/a&gt;
  4. Open Pro
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yH697U6Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9uexmrkw17j4sctypg5i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yH697U6Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9uexmrkw17j4sctypg5i.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://cruip.com/demos/open-pro/"&gt;Live Demo &amp;amp; Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Welcome to Open Pro, your new site designed by Cruip.com for showcasing your startup or company. Open Pro was created with startups and developers in mind and comes with a dark design and an easy-to-use interface. It's easier than ever to create landing pages and corporate websites, so get started today.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open-source images&lt;/li&gt;
&lt;li&gt;Fully customisable themes and pages&lt;/li&gt;
&lt;li&gt;Marketing tools integration&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#5-vuexy"&gt;
  &lt;/a&gt;
  5. Vuexy
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---DTw2kB8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq4hwhdpese132dz5wix.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---DTw2kB8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq4hwhdpese132dz5wix.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://preview.themeforest.net/item/vuexy-vuejs-html-laravel-admin-dashboard-template/full_screen_preview/23328599"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/vuexy-vuejs-html-laravel-admin-dashboard-template/23328599"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you’re a coder looking to harness the power of Vue.js for your admin dashboard then look no further than Vuexy. This premium admin template is the perfect choice for both novices and experienced developers alike. The Vuexy builder allows you to create your complements to demo whether it would be a chart, a CTA button, call to action buttons or labels. You can even design your entire complement which gives you complete creativity.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Laravel Starter Kit&lt;/li&gt;
&lt;li&gt;Project management apps&lt;/li&gt;
&lt;li&gt;Organised folder structure&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#6-appy"&gt;
  &lt;/a&gt;
  6. Appy
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IOzO-f0m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxwgyeslqmw2ectrejpx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IOzO-f0m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxwgyeslqmw2ectrejpx.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://cruip.com/demos/appy/"&gt;Live Demo &amp;amp; Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Appy will make it easier than ever to set up a landing page to present your mobile app, without asking your user to enter the phone number when it isn't necessary. With Appy's eight different pre-made pages and the ability to switch between dark and white layouts (with the flick of a switch), you can now have a higher converting landing page for your mobile app in no time.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;White and dark layouts&lt;/li&gt;
&lt;li&gt;Focused for mobile app conversions&lt;/li&gt;
&lt;li&gt;Full screen version with animated background&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#7-cuba"&gt;
  &lt;/a&gt;
  7. Cuba
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Ki4r0or--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yb9us90iflmow8a5g1c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Ki4r0or--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yb9us90iflmow8a5g1c.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://vue.pixelstrap.com/cuba/dashboard/default"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/cuba-bootstrap-responsive-admin-dashboard-template/27530933"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cuba is a premium admin template built with Bootstrap 4 Framework, Vue, and JQuery. It has a wide collection of reusable UI ingredients and is integrated with the latest jQuery plugins. This product is valuable for all types of web applications (e.g., admin panel, app backend, CMS, CRM, etc.) thanks to the presence of multiple navbars, MODx plugins support, custom grid system, offline data saving.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Two different dashboards&lt;/li&gt;
&lt;li&gt;Multi file upload&lt;/li&gt;
&lt;li&gt;Data table export to CSV, Excel, PDF, etc.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#8-metronic"&gt;
  &lt;/a&gt;
  8. Metronic
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1VQblk7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ezbwmvyr1dbeq31xdjye.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1VQblk7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ezbwmvyr1dbeq31xdjye.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://keenthemes.com/metronic/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/metronic-responsive-admin-dashboard-template/4021469"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Metronic is an admin template framework for developers, designers, and product managers. It was built by the KeenThemes team (with Metronic 8.0.29 version) to help you build your next web application with ease. Metronic comes with lots of components, features, and design patterns, saving you tons of time on development. Last but not least this powerful template provides the most advanced Dashboard Template Ecosystem for Vue, Angular, and React.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Complete authentication&lt;/li&gt;
&lt;li&gt;User profile pages&lt;/li&gt;
&lt;li&gt;Full projects app flow&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#9-tidy"&gt;
  &lt;/a&gt;
  9. Tidy
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A3zGHFNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8r1kvjlx36d6facxcdhj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A3zGHFNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8r1kvjlx36d6facxcdhj.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://cruip.com/demos/tidy/"&gt;Live Demo &amp;amp; Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The main key conversion is a beautifully designed landing page. That’s why we want you to persuade more and more people with this incredible landing page template – Tidy. With its neat and smooth design, you can now create a trendy landing page with two unique pages, four content blocks, several ready-made sections like galleries, videos, maps, mailing lists as well as contact forms, and much more.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Features tiles and zig-zag&lt;/li&gt;
&lt;li&gt;Modals with video content&lt;/li&gt;
&lt;li&gt;Custom scroll animations&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#10-tailwind-ui-kit"&gt;
  &lt;/a&gt;
  10. Tailwind UI Kit
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---qzwUfBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fupclu5cbdxposhfvail.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---qzwUfBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fupclu5cbdxposhfvail.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://tailwinduikit.com/"&gt;Live Demo &amp;amp; Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tailwind UI Kit is a code library of reusable Tailwind CSS components ready for you to drop into any project. Start with the components that are right for you, then mix and match to build complex responsive user interfaces that are easy to manage. Whether you're building, Tailwind is engineered with your workflow in mind.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inclusive and accessible design&lt;/li&gt;
&lt;li&gt;Tested components&lt;/li&gt;
&lt;li&gt;Optimised for rapid development&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#11-vito"&gt;
  &lt;/a&gt;
  11. Vito
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KK_wlnG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxksj1717vedknz7pu9f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KK_wlnG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxksj1717vedknz7pu9f.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://templates.iqonic.design/vito/vue/dist/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/vito-bootstrap-4-admin-dashboard-template/25693269"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This Vue.js-based admin dashboard template is perfect for creating clean and modern-looking web demands without heavy back-end coding effort. Vito comes with tons of tools, prebuilt segments, reusable modules, multiple design layout styles, unlimited colors, customized fonts, easy-to-use API, etc. The Vue admin comes with 5 different organisations that can be combined into any possible combination for unlimited customisation.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compact dark dashboard&lt;/li&gt;
&lt;li&gt;Vertical small sidebar&lt;/li&gt;
&lt;li&gt;Vue Validation Integration&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#12-landrick"&gt;
  &lt;/a&gt;
  12. Landrick
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zXl5xV-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq7htwyfd4rjaawzyjy0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zXl5xV-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq7htwyfd4rjaawzyjy0.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://preview.themeforest.net/item/landrick-vuejs-landing-page-template/full_screen_preview/28733184?_ga=2.219690385.9432932.1635869776-1411186346.1635869407"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/landrick-vuejs-landing-page-template/28733184"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Landrick is a modern and unique template that you will fall in love with. It has several customization options and it supports the most popular frameworks, such as Bootstrap 4, SASS, Font Awesome 5, and more. It is 100% responsive and looks stunning on all types of screens and devices. Users will love your site because of its clean design and great user experience (UX). It can also be used to build an impressive app for various other purposes like any other magic template.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Built on top of Bootstrap 4&lt;/li&gt;
&lt;li&gt;Use Flat picker&lt;/li&gt;
&lt;li&gt;50 Different Landing Pages&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#13-skote"&gt;
  &lt;/a&gt;
  13. Skote
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eUOYhvVT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o33t8vlmy7428abdqym.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eUOYhvVT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o33t8vlmy7428abdqym.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://preview.themeforest.net/item/skote-vuejs-admin-dashboard-template/full_screen_preview/25444550"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/skote-vuejs-admin-dashboard-template/25444550"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Skote admin dashboard is a powerful and professional backend-agnostic admin template for building scalable, secure, and reliable applications from small to enterprise levels. It is built on Vue.js &amp;amp; Laravel 5.4 with a fully modular architecture, based on Vuex state management pattern, Firebase real-time database, fack JS for form validation, and email/password authentication provider.  If you’re a developer looking for a fully responsive admin dashboard then you are at the right place.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Projects lists and overview pages&lt;/li&gt;
&lt;li&gt;Pure Vuejs, NO jquery dependency&lt;/li&gt;
&lt;li&gt;Free Lifetime updates&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#14-rider-vue-free"&gt;
  &lt;/a&gt;
  14. Rider Vue Free
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--te5BC3KD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9ylpmoev8y2zkdtmp7c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--te5BC3KD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9ylpmoev8y2zkdtmp7c.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://preview.keenthemes.com/rider-vue-free/#/dashboard"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://keenthemes.com/products/rider-vue-free"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rider Vue Free is a VueJS based admin and dashboard theme. Its exceptional design is perfectly crafted for optimized products to suit every modern web application. Rider Vue Free is based on the ultimate mega theme for development starters and for those who don't have enough money to pay for premium templates or want to save money. With endless UI components, gorgeous design, robust layouts, and zero price tag, that's what you get with this free theme.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automated and repetitive workflows&lt;/li&gt;
&lt;li&gt;Elements built with built SASS and Typescript.&lt;/li&gt;
&lt;li&gt;Free Lifetime updates&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#15-neon"&gt;
  &lt;/a&gt;
  15. Neon
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FTjU4Zdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bauoejoqj58guvc5k13g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FTjU4Zdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bauoejoqj58guvc5k13g.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://cruip.com/demos/neon/"&gt;Live Demo &amp;amp; Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Neon is one of the latest Vuejs landing page templates built with the newest technologies for startups. It’s been built from the ground up with performance as the foundational block of the UI/UX design pattern. It comes with a full-page image slider, a big video section, a newsletter subscription box, a sign-in/sign-up page template, and it’s responsive – Neon can adapt to any device.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Default dark layout available&lt;/li&gt;
&lt;li&gt;Pre-built carousel and accordion&lt;/li&gt;
&lt;li&gt;Free Lifetime updates&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#16-nextkit"&gt;
  &lt;/a&gt;
  16. NextKit
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--boBKa38H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3820tj35vtw8n378wfym.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--boBKa38H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3820tj35vtw8n378wfym.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://nextkit-nuxtjs-free-uikit.vercel.app/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.wrappixel.com/templates/nextkit-nuxtjs-free-uikit/"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Next is a free website template that offers a modern-design web layout, built on Vuejs, NuxtJs, and Vuetify framework. In terms of tech specs, it comes with ready-to-use UI blocks and elements, and thanks to its flexibility you can create websites faster with less code, using the same codebase to generate web, mobile, and desktop apps with one command, and develop features with a modern web application architected in Vuejs.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One-level dropdown menus&lt;/li&gt;
&lt;li&gt;SCSS Base CSS framework&lt;/li&gt;
&lt;li&gt;Retina ready template&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#17-aeroland"&gt;
  &lt;/a&gt;
  17. Aeroland
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mBPjNXbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t62a1ay7ljrybex2vwct.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mBPjNXbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t62a1ay7ljrybex2vwct.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://preview.themeforest.net/item/aeroland-app-sass-landing-page-template/full_screen_preview/25198880"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/aeroland-app-sass-landing-page-template/25198880?clickid=QBtXbMQoOxyLWLMwUx0Mo3EJUkG0FRSZFzz-1E0"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When to building an app landing page template, sometimes you don't have lots of time. That's why AeroLand is so versatile and powerful. The team of BootXperts has done the research and found out what an app landing and a responsive website need both in the Business &amp;amp; Marketing section. So, they build a collection of practical multipurpose inner pages for you, so, it takes no time to set up and get your project up and running. You can use AeroLand for multipurpose like a digital studio or software startup.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Built on latest Vue platform&lt;/li&gt;
&lt;li&gt;No console error&lt;/li&gt;
&lt;li&gt;Working contact forms&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#18-argon"&gt;
  &lt;/a&gt;
  18. Argon
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SaiXuBrU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5aswmxi4iz5z61xzwsx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SaiXuBrU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5aswmxi4iz5z61xzwsx.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://demos.creative-tim.com/bootstrap-vue-argon-dashboard-pro/#/dashboard"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.creative-tim.com/product/bootstrap-vue-argon-dashboard-pro"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Argon Vue Dashboard PRO is a custom-built Bootstrap 4.0 admin dashboard template inspired by Material Design patterns. It's a huge framework built with over 200 individual components, giving you the freedom of choosing and combining, while all components can take variations in color, that you can easily modify using Sass files. Get an incredible amount of features packed in a single product created by the most talented team of developers from Creative Tim.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;25+ Pre-built examples&lt;/li&gt;
&lt;li&gt;Handcrafted elements&lt;/li&gt;
&lt;li&gt;Sketch and Figma files&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#19-strikingdash"&gt;
  &lt;/a&gt;
  19. StrikingDash
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZH2RM0dk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c41rlfbcotznyqu1ar5r.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZH2RM0dk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c41rlfbcotznyqu1ar5r.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://preview.themeforest.net/item/strikingdash-vue-admin-dashboard-template/full_screen_preview/32283160"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/strikingdash-vue-admin-dashboard-template/32283160"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;StrikingDash is a feature-rich Vue admin template and component library. With its incredible style, the possibilities become limitless when things get difficult online. The theme includes a beautiful dashboard, many pre-cooked components, and widgets that can be used easily because the main structure is fully responsive and customizable. Using StrikingDash will help your team avoid annoying headaches during the development process, and most importantly, you will no longer have to guess who is the top in line among your competitors.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Axios with Clean api structure&lt;/li&gt;
&lt;li&gt;Integrated authentication system&lt;/li&gt;
&lt;li&gt;Simplicity and performance&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#20-materio-free"&gt;
  &lt;/a&gt;
  20. Materio Free
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_DdT2Cw7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7mg4esapi2u8fokq7q1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_DdT2Cw7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7mg4esapi2u8fokq7q1.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://themeselection.com/demo/materio-vuetify-vuejs-admin-template-free/demo/dashboard"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeselection.com/products/materio-free-vuetify-vuejs-admin-template/"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you’re a tech-savvy guy for a Vue admin dashboard template that is both developer-friendly and rich with characteristics, look no further than Materio Free. Besides, all the nice things that this team could say about their development approach, I can assure by testing the theme that they followed the highest industry standards to bring you the very best experience that is not only fast and easy to use but also extremely scalable. Last but not least, by offering ultimate convenience and flexibility, it's able to build any type of application t with very little hassle.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;3D Characters and illustrations&lt;/li&gt;
&lt;li&gt;Basic and advanced tables&lt;/li&gt;
&lt;li&gt;Clean &amp;amp; commented code&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#21-cube"&gt;
  &lt;/a&gt;
  21. Cube
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5yl2qNzm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jq943fp2el076mpg0qs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5yl2qNzm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jq943fp2el076mpg0qs.png" alt="Image description" width="880" height="638"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://cruip.com/demos/cube/"&gt;Live Demo &amp;amp; Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Cube landing page template is built for startups and companies that want to present themselves as a team of professionals in the tech industry. This commodity offers a sensitive design environment and a modern look that comes with multiple pages, several prebuilt UI elements, and content areas as the layout. So, if you're looking for a template that has been built with a lot of care in detail for your convenience, give Cube a try and I'm sure you will never look back again.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SVG illustrations &amp;amp; iconography&lt;/li&gt;
&lt;li&gt;Works as a business tool&lt;/li&gt;
&lt;li&gt;It's universal and compatible&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#22-calendlify"&gt;
  &lt;/a&gt;
  22. Calendlify
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wuRahxiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jm00b2nud6g28lz30sy7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wuRahxiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jm00b2nud6g28lz30sy7.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://templates.iqonic.design/calendify/vue/dist/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/calendify-appointment-scheduling-admin-template/29816431"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Calendify is like the Swiss knife of the web management templates for business entrepreneurs who want to build or extend scheduling and booking web applications. Think of this product as a calendar dashboard design that will make your backend app look attractive and elegant. Calendify works seamlessly on all major web browsers, tablets, and phones, and each page is divided into appointment modules, so the creation looks beautiful on any device.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hover effects to delight users&lt;/li&gt;
&lt;li&gt;Easy To adapt for different uses&lt;/li&gt;
&lt;li&gt;Dynamic event pages &lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#23-carbon-ui"&gt;
  &lt;/a&gt;
  23. Carbon UI
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WiGNoDBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aqrdtzvo3p687p0xy65k.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WiGNoDBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aqrdtzvo3p687p0xy65k.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://vueuikit.com/"&gt;Live Demo &amp;amp; Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Carbon UI is a collection of resources to help you quickly build professional web interfaces using Vue.js &amp;amp; Nuxt.js. The two frameworks integrate well, and all components from both projects are available in the kit. Carbon UI goes beyond sharing individual elements to copy/paste into your work. It contains markup examples to help you combine the components into a full page quickly. The Vue-based core has been structured as a single file component allowing you to import modules into multiple projects.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Preview with the code available &lt;/li&gt;
&lt;li&gt;Browse API references and tutorials&lt;/li&gt;
&lt;li&gt;Business and enterprise documentation&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#24-star-admin-pro-vue"&gt;
  &lt;/a&gt;
  24. Star Admin Pro Vue
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L7VyalrT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4csrn3epbof88p5lk98z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L7VyalrT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4csrn3epbof88p5lk98z.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.bootstrapdash.com/demo/star-admin-pro-vue/demo_2/#/dashboard"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.bootstrapdash.com/product/star-admin-pro-vue/"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Star Admin Pro Vue is a multipurpose, modern, and carefully crafted admin template that will be highly useful for distinct purposes. This template has been refined and improved, and it also offers a wide range of possibilities for text and image placement and the powerful framework revolution. Tested on devices with different browsers, it follows best SEO practices and will ensure your site's appropriate position in the search engine results.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Different license options &lt;/li&gt;
&lt;li&gt;Product catalogue page&lt;/li&gt;
&lt;li&gt;Email template samples&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#25-shards"&gt;
  &lt;/a&gt;
  25. Shards
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xlaR6NQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zetf0zgr0863ixx7s951.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xlaR6NQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zetf0zgr0863ixx7s951.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://designrevision.com/demo/shards-dashboard-lite-vue/blog-overview"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://designrevision.com/downloads/shards-dashboard-lite-vue/"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Developed with Vue, Shards is the free version of the popular admin dashboard template, Shards Pro. Built by people who love flat design, Shards offers a fully responsive admin experience that doesn't regret the simplicity of the simple style. Shards has been developed on top of VuePress, an amazing static site generator for small sites &amp;amp; apps that uses markdown files to provide pages for both content and code samples. Additionally, it has support for markdown syntax within your HTML files.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Minimal footprint and highly optimised&lt;/li&gt;
&lt;li&gt;1500+ supported icons&lt;/li&gt;
&lt;li&gt;Functional design system &lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#26-abstract"&gt;
  &lt;/a&gt;
  26. Abstract
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qbQxleTk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4a6ciqbcj32krnmxealo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qbQxleTk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4a6ciqbcj32krnmxealo.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://cruip.com/demos/abstract/"&gt;Live Demo &amp;amp; Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Abstract is a handcrafted landing page template created by the team of Cruip that empowers startups or businesses to create appealing landing pages and websites. This template is fully responsive and it looks amazing on both mobile and desktop devices. It’s based on top of the latest Cruip CSS framework and features a clean design, smooth animations, fancy SVG icons, and cool scroll effects to make the design pop across all browsers. &lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Slider option for testimonials&lt;/li&gt;
&lt;li&gt;Rich documentation with code samples&lt;/li&gt;
&lt;li&gt;Support standard and multisite&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#27-argon-design-system"&gt;
  &lt;/a&gt;
  27. Argon Design System
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--egGa99A5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arjbumxmcrub8cpuladc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--egGa99A5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arjbumxmcrub8cpuladc.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://demos.creative-tim.com/vue-argon-design-system-pro/#/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.creative-tim.com/product/vue-argon-design-system-pro"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Argon Design System is a Premium components library for Bootstrap 4 and VueJs. With over 1200 individual components, 43 sections, and 18 example pages, Argon Design System gives you the freedom of choosing and combining using SCSS files. This product is built with multiple states of colors and styles that are accessible without effort. Creative Tim has done an incredible job of creating a system that is very user-friendly and visually appealing.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic structure for any web project&lt;/li&gt;
&lt;li&gt;Multiple states for each element&lt;/li&gt;
&lt;li&gt;Design files included &lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#28-porto"&gt;
  &lt;/a&gt;
  28. Porto
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v4IBzSB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt1ajr6scd9kwl7qpis7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v4IBzSB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt1ajr6scd9kwl7qpis7.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://preview.themeforest.net/item/porto-vuejs-ecommerce-template/full_screen_preview/32403613?_ga=2.165783102.1607041.1635869646-1411186346.1635869407"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/porto-vuejs-ecommerce-template/32403613"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Porto is the ultimate eCommerce template based on VueJS and NuxtJS. It has all the required tools and features to create a super-fast responsive eCommerce with an amazing UI and fully accessible UX experience. 40+ demo layouts and modern organization skins will allow you to create your niche store faster than using the most popular builders. With Porto you can avoid expensive web development and minimise your design costs while keeping incredible quality. &lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Solid and tested base&lt;/li&gt;
&lt;li&gt;Premium plugins and popular widgets&lt;/li&gt;
&lt;li&gt;Unlimited product variations&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#29-atlantis"&gt;
  &lt;/a&gt;
  29. Atlantis
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vH6MIoPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0rbcye56b1cti7vrm3d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vH6MIoPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0rbcye56b1cti7vrm3d.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.primefaces.org/atlantis-vue/#/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.primefaces.org/layouts/atlantis-vue"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Atlantis for PrimeVue is built to be one of the most advanced and lightweight premium admin dashboard themes for Vue.js. Its clean, minimal design will make your content stand out in style. You can show off your sales dashboard, form layouts, unique visitor graphs, or any other content with a contemporary design. Atlantis PrimeVue comes with 5 stunning menus to choose from to suit your site's needs.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Full SaSS support&lt;/li&gt;
&lt;li&gt;Light and dark modes&lt;/li&gt;
&lt;li&gt;16 built-in component themes&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#30-materialpro"&gt;
  &lt;/a&gt;
  30. MaterialPro
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7LbyL1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tspdkrzgv3uwkzpm0mh8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7LbyL1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tspdkrzgv3uwkzpm0mh8.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://demos.wrappixel.com/premium-admin-templates/vuejs/materialpro-vuejs/dark/dashboards/classic"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.wrappixel.com/templates/materialpro-vuetify-admin/"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MaterialPro is an admin dashboard based on Vuetify Google’s Material Design principles that comes with a refreshing look with many ready-to-use features. You can use it to create inventory management, warehouse management, accounting software, any SaaS-based application with great care on the user experience and tested to give you much desire comfort while building your project. MaterialPro is already appreciated by lots of customers within different framework needs and the word is spreading fast across different companies and industries.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;White and Black sidebar themes&lt;/li&gt;
&lt;li&gt;Use for unlimited projects&lt;/li&gt;
&lt;li&gt;Dedicated customer section&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#31-molla"&gt;
  &lt;/a&gt;
  31. Molla
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vaHMS7Os--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uwgpaxgu1zmrxl4yjcef.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vaHMS7Os--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uwgpaxgu1zmrxl4yjcef.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://d-themes.com/vue/molla/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/molla-vuejs-ecommerce-template/31380547"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Molla VueJS eCommerce template is the ultimate eCommerce solution for store owners, digital creators, and traditional businesses without an online presence. It has all the wanted instruments and characteristics to conceive an online store that sings impressive melodies to your customers, and that incentivises sales because of the super soft human touch. With Molla your prospects will never bounce at the checkout again,  and according to the hundreds of happy customers in the world, you will also save a lot in extension costs.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Also available in WordPress&lt;/li&gt;
&lt;li&gt;30+ Exclusive demo concepts&lt;/li&gt;
&lt;li&gt;Wishlist and compare features&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#32-extreme"&gt;
  &lt;/a&gt;
  32. Extreme
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ljWmovp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltgb47vi97g2vh1e1kr2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ljWmovp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltgb47vi97g2vh1e1kr2.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://demos.wrappixel.com/free-admin-templates/vuejs/xtreme-vuejs-free/main/#/starterkit"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.wrappixel.com/templates/xtreme-vuesax-admin-lite/"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The success of a business is driven by how much it can earn from its products. But, this business growth has to be managed well otherwise the growth will become chaotic and difficult to manage. For this very purpose, the team of WrapPixel has developed Extreme: A VueJS-based dashboard template that is free to download for both personal and commercial projects. With Extreme, you can finally build a complete web experience without compromising accessibility and by simply adding admin control to your current app.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Different dashboard variations
&lt;/li&gt;
&lt;li&gt;6 months of free support
&lt;/li&gt;
&lt;li&gt;Mini sidebar available&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#33-purple-vue"&gt;
  &lt;/a&gt;
  33. Purple Vue
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hXZvbPL0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wc9hc62yzq4i0i5y5d18.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hXZvbPL0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wc9hc62yzq4i0i5y5d18.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.bootstrapdash.com/demo/purple/vue/preview/demo_1/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.bootstrapdash.com/product/purple-vue/#product-demo-section"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Purple Vue admin presents an unlimited number of options for building and extending responsive web applications. This template has everything expected to create a compelling and compact digital experience, and the base product looks both professional and fancy with flexible icons, apps, widgets, and more. Visualizing and representing data won't be any longer a concern since Purple Vue contains an excellent charting library conceived from the archives of the master of web design. &lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Excess benefits to suit your needs
&lt;/li&gt;
&lt;li&gt;Reviewed by the best in the industry
&lt;/li&gt;
&lt;li&gt;Regular and extensive liquid design&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#34-qexal"&gt;
  &lt;/a&gt;
  34. Qexal
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EQH4isr7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qq0dap80q8ks05xn6g9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EQH4isr7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qq0dap80q8ks05xn6g9.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://preview.themeforest.net/item/qexal-vue-js-landing-page-template/full_screen_preview/31022904"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/qexal-vue-js-landing-page-template/31022904"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Qexal is a fully responsive landing page template based on Vue.js that comes in multiple devices for the perfect choice of any startup or ongoing business. It has everything you need for online promotion, including welcome area, hero slide, blockquotes, testimonials, features Section, contacts, pricing tables, and even more premium elements to make it easier for your users to contact you. Qexal is one of the most built-in templates where you can easily focus on your project without trying to figure out how to modify the source code.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Particels background
&lt;/li&gt;
&lt;li&gt;Wave animations and effects
&lt;/li&gt;
&lt;li&gt;9 types of main layouts&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#35-twist"&gt;
  &lt;/a&gt;
  35. Twist
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ByFp1-rB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5tkbrjcj6tslvp3rl74f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ByFp1-rB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5tkbrjcj6tslvp3rl74f.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://cruip.com/demos/twist/"&gt;Live Demo &amp;amp; Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Twist landing page template is here to make your work easier. It’s built on an advanced framework of variables that can be parsed out with a few clicks. Twist is built with incredible visibility in mind - all major sections of existing pages are highlighted clearly in the inspector and grouped together by component. Quickly identify which components you want to tweak, adjust the values, and see your changes updated across your entire landing.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Incredible amount of flexibility
&lt;/li&gt;
&lt;li&gt;Perfect for showcasing fluid content
&lt;/li&gt;
&lt;li&gt;Easily adaptable to any niche or market&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#36-vue-material-ui-kit"&gt;
  &lt;/a&gt;
  36. Vue Material UI Kit
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S28ENQ7D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dseh4o5ujw77t18gabe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S28ENQ7D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dseh4o5ujw77t18gabe.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://mdbootstrap.com/docs/b5/vue/"&gt;Live Demo &amp;amp; Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This Material Design UI Kit for Bootstrap 5 and Vue 3 comes with the most commonly used components for delivering an awesome user experience that includes different kinds of lists, dialog, progress bar, switch, tabs, navigation bar &amp;amp; icons. In the starter pack, the structure pulls you off three of the most important aspects of any web application: such as; usability (the way a user interacts with a product), accessibility (the facility a user uses a product), and universal appeal (how the product looks).&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Super simple, 1 minute installation
&lt;/li&gt;
&lt;li&gt;MIT license for personal and commercial use
&lt;/li&gt;
&lt;li&gt;Special title treatment&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#37-appie"&gt;
  &lt;/a&gt;
  37. Appie
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CV38NIF9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nr09g01grcw61hrf4eat.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CV38NIF9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nr09g01grcw61hrf4eat.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="http://preview.themeforest.net/item/appie-vue-js-app-landing-page/full_screen_preview/33969996"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/appie-vue-js-app-landing-page/33969996"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Appie is a universal and professional app landing page template built with VueJs, Bootstrap and the latest design trends. It fits well for any business that is involved with product presentation, app downloads, app stores. The UX has an extremely smooth and streamlined feel and it loads fast and is easy through different sections. The free preview is stuffed with unlimited possibilities and comes packaged clean in a well-organized environment. &lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ipad and Iphone friendly
&lt;/li&gt;
&lt;li&gt;Easy color management &lt;/li&gt;
&lt;li&gt;Bootstrap as BootstrapVue&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#38-oneui"&gt;
  &lt;/a&gt;
  38. OneUI
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mkFLzsdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mb5kkel2xwbhpdsmxyez.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mkFLzsdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mb5kkel2xwbhpdsmxyez.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://preview.themeforest.net/item/oneui-bootstrap-admin-dashboard-template-ui-framework-angularjs/full_screen_preview/11820082"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/oneui-bootstrap-admin-dashboard-template-ui-framework-angularjs/11820082"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;OneUI is a super flexible Bootstrap 5 and Vue.js admin dashboard template and UI framework that will empower you to produce all kinds of pages using a unique powerful layout. It was built with Sass and smart developer tools that will save you time during the entire development process. With OneUI you can create a custom dashboard for your admin panel even with no coding experience, and add the remaining functionality to an extended number of elements, components, and add-ons. &lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Laravel 8 support
&lt;/li&gt;
&lt;li&gt;Custom admin panels
&lt;/li&gt;
&lt;li&gt;Smart buttons included in the package for free&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#39-vue-material-template"&gt;
  &lt;/a&gt;
  39. Vue Material Template
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--exUGuC-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/si2dywc61k87ceoqshz1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--exUGuC-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/si2dywc61k87ceoqshz1.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://store.vuetifyjs.com/products/vue-material-template/preview"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://store.vuetifyjs.com/products/vue-material-template"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Vue Material Template is the first fully integrated admin dashboard based on Vuetify and Material Design. This powerful template comes with built-in components that are ready to use right out of the box (with no extra work required), and tons of elements that will allow you to create and host your web app using the flexible and extensible admin interface. Vue Material Template is based on advanced performance and security features such as inner details and subscriptions as a service.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Three color themes and dark mode
&lt;/li&gt;
&lt;li&gt;Sass and Vuex inside &lt;/li&gt;
&lt;li&gt;Charts Libraries including Highcharts&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#40-material-kit-pro"&gt;
  &lt;/a&gt;
  40. Material Kit PRO
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b44dnbkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yoql6bmtdcy7rp3pfif6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b44dnbkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yoql6bmtdcy7rp3pfif6.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://demos.creative-tim.com/vue-material-kit-pro/#/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.creative-tim.com/product/vue-material-kit-pro"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Material Kit Pro is a beautiful resource built over Vue Material and Vuejs that will help you get started developing UI Kits in no time. Created with developers in mind this outcome boasts 70+ parts that can be used both locally and in any project, regardless of the technology stack that powers it. All elements are mobile responsive, meaning you'll need to do little or nothing to get them working on smartphones and tablets.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Knowledge center
&lt;/li&gt;
&lt;li&gt;Easily modify files and classes&lt;/li&gt;
&lt;li&gt;Integration with third-party tools&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#41-muse"&gt;
  &lt;/a&gt;
  41. Muse
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TVbXefLq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgecwo88jfxr25lmvofo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TVbXefLq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgecwo88jfxr25lmvofo.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://demos.creative-tim.com/muse-vue-ant-design-dashboard-pro/#/dashboards/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.creative-tim.com/product/muse-vue-ant-design-dashboard-pro"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Muse is a beautiful Ant Design Vue premium admin dashboard with a large number of components, designed to look beautiful and prepared. Designed for those who like bold elements and beautiful landscapes, Muse will let you reach the sky without even touching the mouse. Made of hundred of elements, designed blocks, and fully coded pages, Muse will let you decide between a Basic or advanced design to cover the costs so you are good to go.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lots of variables for colors and fonts
&lt;/li&gt;
&lt;li&gt;Built on top of Open Source&lt;/li&gt;
&lt;li&gt;Rich and interactive demos&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#42-now-ui-kit-pro"&gt;
  &lt;/a&gt;
  42. Now UI Kit PRO
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PVuHDIBX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzmasd1ib9dr355o38ge.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PVuHDIBX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzmasd1ib9dr355o38ge.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://demos.creative-tim.com/vue-now-ui-kit-pro/#/presentation"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.creative-tim.com/product/vue-now-ui-kit-pro"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now UI Kit Pro is a luxurious and sensitive Bootstrap 4 kit provided by Invision and Creative Tim. These teams teamed up to create your ideal prototyping set up so you can deliver pixel-perfect, high-fidelity prototypes that work just like a native app. It is built using the 12 column grid system, with components designed to fit together perfectly. Technically speaking, it uses bold colors, beautiful typography, clear photography, and spacious arrangements.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Live presentation preview
&lt;/li&gt;
&lt;li&gt;Customised forms and widgets&lt;/li&gt;
&lt;li&gt;Saas files for professional development&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#43-materio"&gt;
  &lt;/a&gt;
  43. Materio
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BtY0Ou2E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o2vswq057k2lk4uv99g1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BtY0Ou2E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o2vswq057k2lk4uv99g1.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://themeselection.com/demo/materio-vuetify-vuejs-admin-template/demo-1/dashboards/crm"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeselection.com/products/materio-vuetify-vuejs-admin-template/"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whether you’re an experienced developer looking for a powerful admin dashboard template to customise, or a dev shop looking for a Vue admin dashboard to integrate into your existing projects, Materio is the most code-friendly &amp;amp; high-performing admin dashboard template based on Vuetify. The team has answered the web innovator dilemma by creating an incredible open-source toolkit that allows anyone with basic coding knowledge to customise anything the way they want it.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hassle-free maintenance
&lt;/li&gt;
&lt;li&gt;Multilingual assistance&lt;/li&gt;
&lt;li&gt;Established folder structure&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#44-light-blue-vue-admin"&gt;
  &lt;/a&gt;
  44. Light Blue Vue Admin
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KY8LYNol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udurhjgph5wkqw20f48u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KY8LYNol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udurhjgph5wkqw20f48u.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://flatlogic.github.io/light-blue-vue-admin/#/app/dashboard"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://flatlogic.com/templates/light-blue-vue-lite"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Light Blue Vue Admin is a great starting point for developers looking to build an admin interface with Vue.js and Bootstrap 4. Conspicuous design with slightly transparent widgets makes this Vue JS template a rare offer among other resources in the same category. This template will be a great asset to produce your next interface for your IoT dashboards, SAAS startups, management systems, and established professional services.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In-app notifications
&lt;/li&gt;
&lt;li&gt;Insights and Google Maps&lt;/li&gt;
&lt;li&gt;Perfect folder structure&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#45-admin-one"&gt;
  &lt;/a&gt;
  45. Admin one
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tHxH5lqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t3ae3hhtlbr2oh73hsy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tHxH5lqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t3ae3hhtlbr2oh73hsy.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://justboil.github.io/admin-one-vue-tailwind/#/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://github.com/justboil/admin-one-vue-tailwind"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Simple, beautiful, and free - that's what makes Admin One awesome. This admin dashboard for Vue.js 3 is minimalistic in its design and performance but still packed with awesome features. It comes with a built-in ripple effect, elegant accordion, file uploader, in-place editing powered by in-place components in Tailwind CSS, dozens of components that are easy to use yet powerful enough to get the job done. There are no external dependencies required other than the ordinary ones.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Collapsable cards and tables
&lt;/li&gt;
&lt;li&gt;Small laptop layout&lt;/li&gt;
&lt;li&gt;Production CSS&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#46-bonik-ecommerce-pro"&gt;
  &lt;/a&gt;
  46. Bonik Ecommerce PRO
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jiZ3odmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5z33wm3d0bc1m0nf4ush.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jiZ3odmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5z33wm3d0bc1m0nf4ush.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://store.vuetifyjs.com/products/bonik-ultimate-ecommerce-pro/preview"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://store.vuetifyjs.com/products/bonik-ultimate-ecommerce-pro"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bonik is an optimal eCommerce UI template for Vuejs. This template uses Vuetify, which is one of the best UI libraries for Vuejs by default. It has a distinctive design and multiple home pages for you to choose from. Bonik is blazingly fast, server-side rendered, and mobile-friendly with a clear codebase that will bolster your project's future development without the need of a dependable team that will cost your startup a lot of freedom and capital.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Optimised for mobile performance
&lt;/li&gt;
&lt;li&gt;Lazy video loading&lt;/li&gt;
&lt;li&gt;Elegant carousel library&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#47-vue-notus"&gt;
  &lt;/a&gt;
  47. Vue Notus
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6bYW9Zpy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/698d03t4b6bbn4d3w757.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6bYW9Zpy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/698d03t4b6bbn4d3w757.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://demos.creative-tim.com/vue-notus/#/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.creative-tim.com/product/vue-notus"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Creative Tim released a full-blown Vue UI Kit for everyone who wants to make a business user interface using Vue.js. It includes a set of hundreds of free Tailwind CSS-based components that look awesome and work well right out of the box. With Vue Notus, you can use one of many pre-designed templates that feature fully optimised layouts and designs to cut your development time in half.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unzipped source files &lt;/li&gt;
&lt;li&gt;Multiple states for widgets&lt;/li&gt;
&lt;li&gt;Basic structure for any web project&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#48-plus-admin-vue"&gt;
  &lt;/a&gt;
  48. Plus Admin Vue
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LK8glH8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zya62vpmot64i1hx0xkl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LK8glH8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zya62vpmot64i1hx0xkl.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.bootstrapdash.com/demo/plus/vue/preview/demo_1/"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://www.bootstrapdash.com/product/plus-admin-vue/"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Plus Admin Vue is a smart and stylish admin dashboard template for those who want to expand their personal or corporate site functionality. Hand-coded with HTML5 and CSS3, this admin dashboard template is highly compatible with all major browsers and devices ensuring a great user experience. Plus Admin Vue brings simplicity, flexibility, and a robust set of options that allows users to build a clean, simple, and easy-to-use interface.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lifetime free releases
&lt;/li&gt;
&lt;li&gt;Multiple License options&lt;/li&gt;
&lt;li&gt;Folder structure inside the folder&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#49-arbano"&gt;
  &lt;/a&gt;
  49. Arbano
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1J_iA7Qv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0s9wwer4ym2u0ykbm95.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1J_iA7Qv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0s9wwer4ym2u0ykbm95.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://preview.vuejsadmin.com/item/arbano"&gt;Live Demo &amp;amp; Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Arbano is a premium admin template built with Bootstrap 4 and VueJS. It comes with high-quality clean code and great design. The fully responsive layout of Arbano supports any type of modular functionalities while keeping all the advantages of a fully liquid layout. This admin template has more than 30 custom elements like forms, charts, maps, and progress bar that can be added or edited from a single nav.js file without touching any other files. For quicker development, there are built-in pages and more than 7 custom font icons packages included.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Video installation
&lt;/li&gt;
&lt;li&gt;Animated progress bar&lt;/li&gt;
&lt;li&gt;Support available under request&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#50-vue-material-free"&gt;
  &lt;/a&gt;
  50. Vue Material Free
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---YBnBrfe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3lnzsrvxgu4wmgbi8fu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---YBnBrfe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3lnzsrvxgu4wmgbi8fu.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://flatlogic.github.io/material-vue/#/dashboard"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://flatlogic.com/templates/vue-material-template"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Vue Material is a dashboard template built with the Vuetify framework. It lets you quickly create highly-interactive dashboards, with touch-enabled communication between widgets, automatic layouts based on window size, and internationalization support. The Vue architecture allows for an easy transition to the patterns used by Vuetify, with a clear separation via the communication library. By using this product, you can create web app experiences that are fast, seamless, and contemporary.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Stylesheets with arbitrary values &lt;/li&gt;
&lt;li&gt;Well-engineered core system&lt;/li&gt;
&lt;li&gt;Tiny in production&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#51-brook"&gt;
  &lt;/a&gt;
  51. Brook
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EiTvmHdo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvrb6jsp4vk6iphmzbs9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EiTvmHdo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvrb6jsp4vk6iphmzbs9.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://preview.themeforest.net/item/brook-creative-multipurpose-vue-nuxt-js-template/full_screen_preview/28452229"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;a href="https://themeforest.net/item/brook-creative-multipurpose-vue-nuxt-js-template/28452229"&gt;Download&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Brook is a manageable but powerful Vue.js admin template for creating any kind of creative application at a highly accessible rate. Brook comes with different homepages built in it, with different color styles and designs, and each one can be used for your own projects with slight customisations. The template comes with Nuxt modules for page states, seamless page transitions, one-page parallax, contact form, smart integration, and more.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build with latest Vue and Nuxt
&lt;/li&gt;
&lt;li&gt;No jQuery dependency&lt;/li&gt;
&lt;li&gt;Dynamic blog&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Thanks for reading, and if you have more resources to suggest, please feel free to share them below.&lt;/p&gt;

</description>
      <category>vue</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
    </item>
  </channel>
</rss>
