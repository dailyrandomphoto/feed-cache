<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>[Resolução de exercícios]</title>
      <author>Thomas Lincoln</author>
      <pubDate>Fri, 22 Oct 2021 13:13:13 +0000</pubDate>
      <link>https://dev.to/samoht/resolucao-de-exercicios-568k</link>
      <guid>https://dev.to/samoht/resolucao-de-exercicios-568k</guid>
      <description>&lt;p&gt;Bom, para hoje irei mostrar como eu faria os exercícios que propus, no &lt;a href="https://dev.to/samoht/o-que-e-javascript-38b0"&gt;post passado&lt;/a&gt;. Tendo em mente que a programação não é algo com uma única solução, não se sintam mal caso esteja diferente da sua solução. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jbJRXMbG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media2.giphy.com/media/zOvBKUUEERdNm/giphy.gif%3Fcid%3Decf05e47klo9ua8nth8cgike8gzwkja6yg50y3ftw8whpk81%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jbJRXMbG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media2.giphy.com/media/zOvBKUUEERdNm/giphy.gif%3Fcid%3Decf05e47klo9ua8nth8cgike8gzwkja6yg50y3ftw8whpk81%26rid%3Dgiphy.gif%26ct%3Dg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exerc%C3%ADcio-1"&gt;
  &lt;/a&gt;
  Exercício 1
&lt;/h2&gt;

&lt;p&gt;Nesse eu deveria criar variáveis para informações e atributos de um personagem de rpg. Então, &lt;em&gt;let's code&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const nome;
let altura;
let xp;
let nivel;
let força;
let velocidade;
let inteligencia;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#exerc%C3%ADcio-2"&gt;
  &lt;/a&gt;
  Exercício 2
&lt;/h2&gt;

&lt;p&gt;Enfim, o segundo era para procurar a diferença entre const, let e var. Essa questão eu provavelmente irei fazer um post separado sobre futuramente (&lt;em&gt;caso eu esqueça podem me cobrar que eu faço)&lt;/em&gt;, me aprofundando mais no assunto.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mas-qual-a-diferen%C3%A7a"&gt;
  &lt;/a&gt;
  Mas qual a diferença?
&lt;/h3&gt;

&lt;p&gt;Bem, começando pelo var (&lt;em&gt;ou variable&lt;/em&gt;), é uma variável simples, porém é pouco usada devido a alguns erros que ela pode gerar.&lt;/p&gt;

&lt;p&gt;O const (&lt;em&gt;ou constant&lt;/em&gt;), é uma variável que como o nome diz é constante, ela não muda, independente da situação. Caso você tente modificar o valor de uma const, irá possivelmente retornar um erro (&lt;em&gt;com algumas excessões&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;O let é uma variável que substitui o var por assim dizer, ela aceita ser modificada, porém ela evita os erros que o var causa.&lt;/p&gt;

&lt;p&gt;Assim sendo o let e o const as declarações mais usadas em Js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exerc%C3%ADcio-3"&gt;
  &lt;/a&gt;
  Exercício 3
&lt;/h2&gt;

&lt;p&gt;Nesse eu pedi para você pesquisar os tipos de variáveis do Js, vou apenas listá-los, pois possivelmente irei fazer posts explicando cada um deles.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Strings&lt;/li&gt;
&lt;li&gt;Numbers (integer, float, double, etc.)&lt;/li&gt;
&lt;li&gt;Booleans&lt;/li&gt;
&lt;li&gt;Arrays&lt;/li&gt;
&lt;li&gt;Objects&lt;/li&gt;
&lt;li&gt;Function (sim, variáveis podem armazenar funções também)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Futuramente irei tentar dedicar um post para cada um deles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#por-hoje-%C3%A9-s%C3%B3-pessoal"&gt;
  &lt;/a&gt;
  Por hoje é só pessoal
&lt;/h2&gt;

&lt;p&gt;Até um outro dia, estou tentando fazer posts diários, eles são mais uma forma pra eu conseguir guardar melhor o conhecimento, mas caso você que esteja lendo tenha alguma dúvida, eu farei o possível para saná-la&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Ensinar é aprender duas vezes.&lt;br&gt;
 -Joseph Roubert&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fGu_1d1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/35EsMpEfGHkVoHbNTU/giphy.gif%3Fcid%3Decf05e47cwl0cm9nd17sourzqmnmlecxr7a4loo03iw0lqdq%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fGu_1d1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/35EsMpEfGHkVoHbNTU/giphy.gif%3Fcid%3Decf05e47cwl0cm9nd17sourzqmnmlecxr7a4loo03iw0lqdq%26rid%3Dgiphy.gif%26ct%3Dg"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>braziliandevs</category>
    </item>
    <item>
      <title>Introduction to Data (Databases, Analytics, Blockchain) with AWS  Part - 1</title>
      <author>Adit Modi</author>
      <pubDate>Fri, 22 Oct 2021 13:10:25 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-data-databases-analytics-blockchain-with-aws-part-1-2hnn</link>
      <guid>https://dev.to/aws-builders/introduction-to-data-databases-analytics-blockchain-with-aws-part-1-2hnn</guid>
      <description>&lt;p&gt;Data is a strategic asset of every organisation. As data continues to grow, databases are becoming increasingly pivotal to understanding data and converting it to valuable insights. IT leaders and entrepreneurs need to look at different flavours of data and based on it look for ways to get more value from their data. With the rapid growth of data — Not just in volume and velocity but also in flavours, complexity and interconnectedness — the needs of data analytics and its corresponding databases have changed.&lt;/p&gt;

&lt;p&gt;In this blog post, we will discuss some of the most important AWS analytics services that are built to handle large amounts of data at scale and automate many manual and time-consuming tasks. This services are purpose-built to give you the best performance, scale, and cost for your needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iv615fOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o75qds6xhf8by98buvzl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iv615fOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o75qds6xhf8by98buvzl.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The Introduction to AWS&lt;/strong&gt; is a Series containing different articles that provide a basic introduction to different aws topics/categories. Each article covers the detailed guide on how to work with particular topic/category . This series aims at providing "A Getting Started Guide on Different aws topics / categories ."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#aws-analytics-services"&gt;
  &lt;/a&gt;
  AWS Analytics Services
&lt;/h1&gt;

&lt;p&gt;AWS is the fastest and most cost-effective place to store and analyze data. AWS provides a comprehensive set of tools that go beyond standard security functionality, like encryption and access control, to offer unified security policy management and proactive monitoring. AWS offers built-in ML integration as part of our purpose-built analytics services.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-athena"&gt;
  &lt;/a&gt;
  Amazon Athena
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lWkgwFhi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/drigofz9l0dhlkvkboj4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lWkgwFhi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/drigofz9l0dhlkvkboj4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Athena is an interactive query service that makes it easy to analyze data in Amazon S3 using standard SQL. Athena is serverless, so there is no infrastructure to manage, and you pay only for the queries that you run.&lt;/p&gt;

&lt;p&gt;Athena is easy to use. Simply point to your data in Amazon S3, deﬁne the schema, and start querying using standard SQL. Most results are delivered within seconds. With Athena, there’s no need for complex extract, transform, and load (ETL) jobs to prepare your data for analysis. This makes it easy for anyone with SQL skills to quickly analyze large-scale datasets.&lt;/p&gt;

&lt;p&gt;Athena is out-of-the-box integrated with AWS Glue Data Catalog, allowing you to create a unified metadata repository across various services, crawl data sources to discover schemas and populate your Catalog with new and modified table and partition definitions, and maintain schema versioning. You can also use Glue’s fully-managed ETL capabilities to transform data or convert it into columnar formats to optimize cost and improve performance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-emr"&gt;
  &lt;/a&gt;
  Amazon EMR
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RUvglvQW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bwpubkmlhgv3p5q0ek3q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RUvglvQW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bwpubkmlhgv3p5q0ek3q.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon EMR provides a managed Hadoop framework that makes it easy, fast, and cost-eﬀective to process vast amounts of data across dynamically scalable Amazon EC2 instances. You can also run other popular distributed frameworks such as Apache Spark, HBase, Presto, and Flink in Amazon EMR, and interact with data in other AWS data stores such as Amazon S3 and Amazon DynamoDB. EMR Notebooks, based on the popular Jupyter Notebook, provide a development and collaboration environment for ad hoc querying and exploratory analysis.&lt;/p&gt;

&lt;p&gt;Amazon EMR securely and reliably handles a broad set of big data use cases, including log analysis, web indexing, data transformations (ETL), machine learning, ﬁnancial analysis, scientiﬁc simulation, and bioinformatics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-cloudsearch"&gt;
  &lt;/a&gt;
  Amazon CloudSearch
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5QzvWr9_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4wbqt8u0hbcic7erbn2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5QzvWr9_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4wbqt8u0hbcic7erbn2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon CloudSearch is a managed service in the AWS Cloud that makes it simple and cost-effective to set up, manage, and scale a search solution for your website or application. Amazon CloudSearch supports 34 languages and popular search features such as highlighting, autocomplete, and geospatial search.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-elasticsearch-service"&gt;
  &lt;/a&gt;
  Amazon Elasticsearch Service
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lw3-KrBR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97kzqg16jga5xr6d4wrv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lw3-KrBR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97kzqg16jga5xr6d4wrv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Elasticsearch Service makes it easy to deploy, secure, operate, and scale Elasticsearch to search, analyze, and visualize data in real-time. With Amazon Elasticsearch Service, you get easy-to-use APIs and real-time analytics capabilities to power use-cases such as log analytics, full-text search, application monitoring, and clickstream analytics, with enterprise-grade availability, scalability, and security. The service oﬀers integrations with open-source tools like Kibana and Logstash for data ingestion and visualization. It also integrates seamlessly with other AWS services such as Amazon Virtual Private Cloud (Amazon VPC), AWS Key Management Service (AWS KMS), Amazon Kinesis Data Firehose, AWS Lambda, AWS Identity and Access Management (IAM), Amazon Cognito, and Amazon CloudWatch, so that you can go from raw data to actionable insights quickly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-kinesis"&gt;
  &lt;/a&gt;
  Amazon Kinesis
&lt;/h2&gt;

&lt;p&gt;Amazon Kinesis makes it easy to collect, process, and analyze real-time, streaming data so you can get timely insights and react quickly to new information. Amazon Kinesis offers key capabilities to cost-effectively process streaming data at any scale, along with the flexibility to choose the tools that best suit the requirements of your application. With Amazon Kinesis, you can ingest real-time data such as video, audio, application logs, website clickstreams, and IoT telemetry data for machine learning, analytics, and other applications. Amazon Kinesis enables you to process and analyze data as it arrives and respond instantly instead of having to wait until all your data is collected before the processing can begin.&lt;/p&gt;

&lt;p&gt;Amazon Kinesis currently oﬀers four services: Kinesis Data Firehose, Kinesis Data Analytics, Kinesis Data Streams, and Kinesis Video Streams.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#amazon-kinesis-data-firehose"&gt;
  &lt;/a&gt;
  Amazon Kinesis Data Firehose
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L7ywoPU1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5dszm1u0misr2kk4i72.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L7ywoPU1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5dszm1u0misr2kk4i72.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Kinesis Firehose is the easiest way to reliably load streaming data into data stores and analytics tools. It can capture, transform, and load streaming data into Amazon S3, Amazon Redshift, Amazon Elasticsearch Service, and Splunk, enabling near real-time analytics with existing business intelligence tools and dashboards you’re already using today. It is a fully managed service that automatically scales to match the throughput of your data and requires no ongoing administration. It can also batch, compress, transform, and encrypt the data before loading it, minimizing the amount of storage used at the destination and increasing security.&lt;/p&gt;

&lt;p&gt;You can easily create a Firehose delivery stream from the AWS Management Console, conﬁgure it with a few clicks, and start sending data to the stream from hundreds of thousands of data sources to be loaded continuously to AWS—all in just a few minutes. You can also configure your delivery stream to automatically convert the incoming data to columnar formats like Apache Parquet and Apache ORC, before the data is delivered to Amazon S3, for cost-effective storage and analytics.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#amazon-kinesis-data-analytics"&gt;
  &lt;/a&gt;
  Amazon Kinesis Data Analytics
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XZ-TthsD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0hx3ewv2fg8ysjvq0ex.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XZ-TthsD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0hx3ewv2fg8ysjvq0ex.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Kinesis Data Analytics is the easiest way to analyze streaming data, gain actionable insights, and respond to your business and customer needs in real time. Amazon Kinesis Data Analytics reduces the complexity of building, managing, and integrating streaming applications with other AWS services. SQL users can easily query streaming data or build entire streaming applications using templates and an interactive SQL editor. Java developers can quickly build sophisticated streaming applications using open source Java libraries and AWS integrations to transform and analyze data in real-time.&lt;/p&gt;

&lt;p&gt;Amazon Kinesis Data Analytics takes care of everything required to run your queries continuously and scales automatically to match the volume and throughput rate of your incoming data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#amazon-kinesis-data-streams"&gt;
  &lt;/a&gt;
  Amazon Kinesis Data Streams
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yf-3lG8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhryhl2t3daifdmbh4na.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yf-3lG8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhryhl2t3daifdmbh4na.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Kinesis Data Streams is a massively scalable and durable real-time data streaming service. KDS can continuously capture gigabytes of data per second from hundreds of thousands of sources such as website clickstreams, database event streams, financial transactions, social media feeds, IT logs, and location-tracking events. The data collected is available in milliseconds to enable real-time analytics use cases such as real-time dashboards, real-time anomaly detection, dynamic pricing, and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#amazon-kinesis-video-streams"&gt;
  &lt;/a&gt;
  Amazon Kinesis Video Streams
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WhxAdgtl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrgyzzj9645fhrp3cs7e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WhxAdgtl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrgyzzj9645fhrp3cs7e.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Kinesis Video Streams makes it easy to securely stream video from connected devices to AWS for analytics, machine learning (ML), playback, and other processing. Kinesis Video Streams automatically provisions and elastically scales all the infrastructure needed to ingest streaming video data from millions of devices. It also durably stores, encrypts, and indexes video data in your streams, and allows you to access your data through easy-to-use APIs. Kinesis Video Streams enables you to playback video for live and on-demand viewing, and quickly build applications that take advantage of computer vision and video analytics through integration with Amazon Recognition Video, and libraries for ML frameworks such as Apache MxNet, TensorFlow, and OpenCV.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-redshift"&gt;
  &lt;/a&gt;
  Amazon Redshift
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hz3Kz2kg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hiutpiufatxhexhsu7cy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hz3Kz2kg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hiutpiufatxhexhsu7cy.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Redshift is a fast, scalable data warehouse that makes it simple and cost-effective to analyze all your data across your data warehouse and data lake. Redshift delivers ten times faster performance than other data warehouses by using machine learning, massively parallel query execution, and columnar storage on high-performance disk. You can setup and deploy a new data warehouse in minutes, and run queries across petabytes of data in your Redshift data warehouse, and exabytes of data in your data lake built on Amazon S3. You can start small for just $0.25 per hour and scale to $250 per terabyte per year, less than one-tenth the cost of other solutions.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#amazon-quicksight"&gt;
  &lt;/a&gt;
  Amazon QuickSight
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3MsmoXVc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/igv4cb2ei5ag1trye5ef.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3MsmoXVc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/igv4cb2ei5ag1trye5ef.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon QuickSight is a fast, cloud-powered business intelligence (BI) service that makes it easy for you to deliver insights to everyone in your organization. QuickSight lets you create and publish interactive dashboards that can be accessed from browsers or mobile devices. You can embed dashboards into your applications, providing your customers with powerful self-service analytics. QuickSight easily scales to tens of thousands of users without any software to install, servers to deploy, or infrastructure to manage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-data-pipeline"&gt;
  &lt;/a&gt;
  AWS Data Pipeline
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--shQw2pWl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l1ad84y0vvfxa5n1xb3h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--shQw2pWl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l1ad84y0vvfxa5n1xb3h.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Data Pipeline is a web service that helps you reliably process and move data between diﬀerent AWS compute and storage services, as well as on-premises data sources, at speciﬁed intervals. With AWS Data Pipeline, you can regularly access your data where it’s stored, transform and process it at scale, and eﬃciently transfer the results to AWS services such as Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon EMR.&lt;/p&gt;

&lt;p&gt;AWS Data Pipeline helps you easily create complex data processing workloads that are fault tolerant, repeatable, and highly available. You don’t have to worry about ensuring resource availability, managing inter-task dependencies, retrying transient failures or timeouts in individual tasks, or creating a failure notification system. AWS Data Pipeline also allows you to move and process data that was previously locked up in on-premises data silos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-glue"&gt;
  &lt;/a&gt;
  AWS Glue
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u3C9UHrr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jkwxj5mb3a876neksih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u3C9UHrr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jkwxj5mb3a876neksih.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Glue is a fully managed extract, transform, and load (ETL) service that makes it easy for customers to prepare and load their data for analytics. You can create and run an ETL job with a few clicks in the AWS Management Console. You simply point AWS Glue to your data stored on AWS, and AWS Glue discovers your data and stores the associated metadata (e.g. table definition and schema) in the AWS Glue Data Catalog. Once cataloged, your data is immediately searchable, queryable, and available for ETL.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-lake-formation"&gt;
  &lt;/a&gt;
  AWS Lake Formation
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MRo0-wiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0lor1g58vhqttk383wbz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MRo0-wiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0lor1g58vhqttk383wbz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Lake Formation is a service that makes it easy to set up a secure data lake in days. A data lake is a centralized, curated, and secured repository that stores all your data, both in its original form and prepared for analysis. A data lake enables you to break down data silos and combine different types of analytics to gain insights and guide better business decisions.&lt;/p&gt;

&lt;p&gt;However, setting up and managing data lakes today involves a lot of manual, complicated, and time-consuming tasks. This work includes loading data from diverse sources, monitoring those data flows, setting up partitions, turning on encryption and managing keys, defining transformation jobs and monitoring their operation, re-organizing data into a columnar format, configuring access control settings, deduplicating redundant data, matching linked records, granting access to data sets, and auditing access over time.&lt;/p&gt;

&lt;p&gt;Creating a data lake with Lake Formation is as simple as defining where your data resides and what data access and security policies you want to apply. Lake Formation then collects and catalogs data from databases and object storage, moves the data into your new Amazon S3 data lake, cleans and classifies data using machine learning algorithms, and secures access to your sensitive data. Your users can then access a centralized catalog of data which describes available data sets and their appropriate usage. Your users then leverage these data sets with their choice of analytics and machine learning services, like Amazon EMR for Apache Spark, Amazon Redshift, Amazon Athena, SageMaker, and Amazon QuickSight.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-managed-streaming-for-apache-kafka-amazon-msk"&gt;
  &lt;/a&gt;
  Amazon Managed Streaming for Apache Kafka (Amazon MSK)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--07srlY_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/desbyzwcnnqx2lwkagst.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--07srlY_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/desbyzwcnnqx2lwkagst.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Managed Streaming for Apache Kafka (Amazon MSK) is a fully managed service that makes it easy for you to build and run applications that use Apache Kafka to process streaming data. Apache Kafka is an open-source platform for building real-time streaming data pipelines and applications. With Amazon MSK, you can use Apache Kafka APIs to populate data lakes, stream changes to and from databases, and power machine learning and analytics applications.&lt;/p&gt;

&lt;p&gt;Apache Kafka clusters are challenging to setup, scale, and manage in production. When you run Apache Kafka on your own, you need to provision servers, configure Apache Kafka manually, replace servers when they fail, orchestrate server patches and upgrades, architect the cluster for high availability, ensure data is durably stored and secured, setup monitoring and alarms, and carefully plan scaling events to support load changes. Amazon MSK makes it easy for you to build and run production applications on Apache Kafka without needing Apache Kafka infrastructure management expertise. That means you spend less time managing infrastructure and more time building applications.&lt;/p&gt;

&lt;p&gt;With a few clicks in the Amazon MSK console you can create highly available Apache Kafka clusters with settings and configuration based on Apache Kafka’s deployment best practices. Amazon MSK automatically provisions and runs your Apache Kafka clusters. Amazon MSK continuously monitors cluster health and automatically replaces unhealthy nodes with no downtime to your application. In addition, Amazon MSK secures your Apache Kafka cluster by encrypting data at rest.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;AWS provides the broadest selection of analytics services that fit all your data analytics needs and enables organizations of all sizes and industries to reinvent their business with data. From data movement, data storage, data lakes, big data analytics, and machine learning (ML) to anything in between, AWS offers purpose-built services that provide the best price performance, scalability, and lowest cost.&lt;/p&gt;

&lt;p&gt;Hope this guide helps you understand on Introduction to Data (Databases, Analytics, Blockchain) with AWS  Part - 1. In the Next Blog Post, we will discuss more about Different Database and Blockchain Services that are available with AWS.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section 👇&lt;br&gt;
And if you haven't yet, make sure to follow me on below handles:&lt;/p&gt;

&lt;p&gt;👋 &lt;strong&gt;connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🤓 &lt;strong&gt;connect with me on &lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🐱‍💻 &lt;strong&gt;follow me on &lt;a href="https://github.com/AditModi"&gt;github&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
✍️ &lt;strong&gt;Do Checkout &lt;a href="https://aditmodi.hashnode.dev"&gt;my blogs&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Like, share and follow me 🚀 for more content.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__497987"&gt;
  
    .ltag__user__id__497987 .follow-action-button {
      background-color: #000000 !important;
      color: #fa6c00 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/aditmodi" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYJrtrA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mUzXbt1U--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497987/edde8513-7308-4a4d-9592-2be160d074d2.png" alt="aditmodi image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/aditmodi"&gt;Adit Modi&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/aditmodi"&gt;Cloud Engineer | AWS Community Builder | 8x AWS Certified | 3x Azure Certified | Author of Cloud Tech , DailyDevOps &amp;amp; BigDataJournal | DEV moderator&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>aws</category>
      <category>database</category>
      <category>blockchain</category>
      <category>analytics</category>
    </item>
    <item>
      <title>How to make your Flutter App feel more professional with Adaptive icons</title>
      <author>Keff</author>
      <pubDate>Fri, 22 Oct 2021 12:47:47 +0000</pubDate>
      <link>https://dev.to/nombrekeff/how-to-make-your-flutter-app-feel-more-professional-with-adaptive-icons-31jj</link>
      <guid>https://dev.to/nombrekeff/how-to-make-your-flutter-app-feel-more-professional-with-adaptive-icons-31jj</guid>
      <description>&lt;p&gt;Hey there 👋&lt;/p&gt;

&lt;p&gt;In this post, I will show you how to create and use adaptive icons for Android Apps built with Flutter. Adaptive icons can make your app feel more professional (&lt;em&gt;you still need a good logo and app though 😉&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*Note that adaptive icons only work for Android.&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-are-adaptive-icons"&gt;
  &lt;/a&gt;
  What are adaptive icons?
&lt;/h2&gt;

&lt;p&gt;This is what the people at Android say about them:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Adaptive launcher icons can display a variety of shapes across different device models. For example, an adaptive launcher icon can display a circular shape on one OEM device, and display a squircle on another device. Each device OEM provides a mask, which the system then uses to render all adaptive icons with the same shape. Adaptive launcher icons are also used in shortcuts, the Settings app, sharing dialogs, and the overview screen.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D5YK3FbV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5suxn376shnql5kw1fp8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D5YK3FbV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5suxn376shnql5kw1fp8.gif" alt="Adaptive icon visualization"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-are-they-created"&gt;
  &lt;/a&gt;
  How are they created?
&lt;/h2&gt;

&lt;p&gt;Well as opposed to normal icons, adaptive icons are built from 2 layers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;background&lt;/strong&gt; layer is an image that can be anything from a solid color to a random pattern! Though I would suggest keeping it simple.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;foreground&lt;/strong&gt; layer should contain your app icon, and should not have a background.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Layers must follow these guidelines:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Both layers must be sized at 108 x 108 dp.&lt;/li&gt;
&lt;li&gt;The inner 72 x 72 dp of the icon appears within the masked viewport.&lt;/li&gt;
&lt;li&gt;The system reserves the outer 18 dp on each of the 4 sides to create interesting visual effects, such as parallax or pulsing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can check the guide on &lt;a href="https://medium.com/google-design/designing-adaptive-icons-515af294c783"&gt;how to design adaptive icons&lt;/a&gt; by &lt;strong&gt;google-design&lt;/strong&gt; over on medium for an in-depth guide.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#layers-example"&gt;
  &lt;/a&gt;
  Layers example
&lt;/h2&gt;

&lt;p&gt;This is how the layers look for one of my apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Background layer&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pACXvWB5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bcz8yd8boqbvshno9tt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pACXvWB5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bcz8yd8boqbvshno9tt.png" alt="Adaptive icon bg layer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that in Flutter we can provide a hex code for the background layer instead of an image.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Foreground layer&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kcoOKjZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jwvi2x2jwwsejsnlnfy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kcoOKjZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jwvi2x2jwwsejsnlnfy.png" alt="Adaptive icon fg layer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The foreground should be transparent (apart from the icon of course). &lt;em&gt;I had to add the checker pattern as the icon was white and would not be shown on white background pages like here on DEV.to.&lt;/em&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#setting-it-up-in-flutter"&gt;
  &lt;/a&gt;
  Setting it up in Flutter
&lt;/h2&gt;

&lt;p&gt;The first thing we will need is to add the &lt;a href="https://pub.dev/packages/flutter_launcher_icons#mag-attributes"&gt;flutter_launcher_icons&lt;/a&gt; dependency to our project.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pubspec.yml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;dev_dependencies&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;flutter_launcher_icons&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;^0.9.2"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%C2%A0save-the-icon-layers-in-the-assets-folder"&gt;
  &lt;/a&gt;
   Save the icon layers in the assets folder
&lt;/h3&gt;

&lt;p&gt;For example under &lt;code&gt;/assets/launcher_icon&lt;/code&gt;. This folder will contain:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background.png&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;foreground.png&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#config-for-raw-flutterlaunchericons-endraw-"&gt;
  &lt;/a&gt;
  Config for &lt;code&gt;flutter_launcher_icons&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Now that we have installed &lt;strong&gt;flutter_launcher_icons&lt;/strong&gt;, and have the layers stored in the assets folder, we can add the appropriate configuration. This can be done in a couple of ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adding it to the &lt;code&gt;pubspec.yml&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Or creating a file only containing the flutter_launcher_icons configuration &lt;code&gt;flutter_launcher_icons.yaml&lt;/code&gt; as explained &lt;a href="https://pub.dev/packages/flutter_launcher_icons#book-guide"&gt;here&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;There is also support for different icons per flavor (&lt;a href="https://pub.dev/packages/flutter_launcher_icons#flavor-support"&gt;read more&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In any of the cases the contents would be the same:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;span class="na"&gt;flutter_icons&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;android&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;launcher_icon"&lt;/span&gt;
  &lt;span class="na"&gt;ios&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
  &lt;span class="na"&gt;image_path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;assets/ios_icon.png"&lt;/span&gt; &lt;span class="c1"&gt;# Provide icon for ios &lt;/span&gt;
  &lt;span class="na"&gt;adaptive_icon_background&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;assets/launcher_icon/background.png"&lt;/span&gt;
  &lt;span class="na"&gt;adaptive_icon_foreground&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;assets/launcher_icon/foreground.png"&lt;/span&gt;
&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As mentioned previously, we could also provide a hex color code instead of the background:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;span class="na"&gt;flutter_icons&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;...&lt;/span&gt;
  &lt;span class="s"&gt;adaptive_icon_background&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;#ed1e79"&lt;/span&gt;
&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#run-raw-flutterlaunchericons-endraw-"&gt;
  &lt;/a&gt;
  Run &lt;code&gt;flutter_launcher_icons&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;With the configuration setup, we can run &lt;code&gt;flutter_launcher_icons&lt;/code&gt; and let it set up all the things it needs (generate the drawables and resources needed) by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ flutter pub run flutter_launcher_icons:main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it, let's see how that looks shall we?&lt;/p&gt;

&lt;p&gt;This is how it, now we can re-launch our Flutter app and check how it looks!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#more-resources"&gt;
  &lt;/a&gt;
  More resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/google-design/understanding-android-adaptive-icons-cee8a9de93e2"&gt;Understanding Android Adaptive Icons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/google-design/designing-adaptive-icons-515af294c783"&gt;Designing Adaptive Icons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive"&gt;Android Adaptive icons guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dev/packages/flutter_launcher_icons"&gt;flutter_launcher_icons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Hope you found this useful! Until next time 👊&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Setting up a free PostgreSQL database on Heroku</title>
      <author>Chris Bongers</author>
      <pubDate>Fri, 22 Oct 2021 12:26:03 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/setting-up-a-free-postgresql-database-on-heroku-10o1</link>
      <guid>https://dev.to/dailydevtips1/setting-up-a-free-postgresql-database-on-heroku-10o1</guid>
      <description>&lt;p&gt;Recently I wanted to explore Postgres databases for a specific use case. However, this use case needed the database to be hosted online.&lt;/p&gt;

&lt;p&gt;Then I found out you can quickly set up a free Postgres database on Heroku!&lt;/p&gt;

&lt;p&gt;In this article, I'll show you how you can also create your own free Postgres database.&lt;/p&gt;

&lt;p&gt;Do note this database will be limited to the free plan. It's easy for prototyping but might be too limited for your existing apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-up-heroku-and-your-first-app"&gt;
  &lt;/a&gt;
  Set up Heroku and your first app
&lt;/h2&gt;

&lt;p&gt;First of all, we need to create or log into our Heroku account. Do todo this head over to their website and follow the login/signup process.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://id.heroku.com/login"&gt;Heroku website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once your login, add a new app by clicking the "new" button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--byju-InP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634015661134/0ghl_rPa1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--byju-InP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634015661134/0ghl_rPa1.png" alt="Heroku add new app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give this app a name and pick a region that works for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hdqz6P7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634015743108/4Ep29LId_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hdqz6P7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634015743108/4Ep29LId_.png" alt="Heroku new app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once your app is set up, we need to visit the resource panel and search for 'Postgres' to add this add-on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wx_IGIkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634015864103/pgrXYktQJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wx_IGIkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634015864103/pgrXYktQJ.png" alt="Add Postgres to Heroku"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the next step, it's crucial to pick the hobby tier as this is the only free one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IxlWHrlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634015908670/XajK7DgYm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IxlWHrlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634015908670/XajK7DgYm.png" alt="Hobby tier Postgres on Heroku"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#viewing-the-database-credentials"&gt;
  &lt;/a&gt;
  Viewing the database credentials
&lt;/h2&gt;

&lt;p&gt;To find the database credentials click on the Postgres add-on in your resource overview.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SK-UFB6j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634016013250/p1VIV_34A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SK-UFB6j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634016013250/p1VIV_34A.png" alt="Open up Postgres details"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will open up a new page where you can view the actual Postgres database in more detail.&lt;br&gt;
To find the credentials open up the settings menu.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BwNzXjyK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634016085277/yW4MwU3fz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BwNzXjyK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634016085277/yW4MwU3fz.png" alt="Credentials for Postgres on Heroku"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use these credentials in a &lt;a href="https://daily-dev-tips.com/posts/top-5-mysql-clients-for-mac/"&gt;database explorer&lt;/a&gt; for instance to connect to it. (I'll be using TablePlus)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K8c0NfpU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634016412652/0ydck_QKn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K8c0NfpU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634016412652/0ydck_QKn.png" alt="Connect to Postgres on Heroku"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there you go, we now have a free Postgres database we can use!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>postgres</category>
      <category>heroku</category>
      <category>database</category>
    </item>
    <item>
      <title>NodeJS + Express part 1: Introduction</title>
      <author>Eric The Coder</author>
      <pubDate>Fri, 22 Oct 2021 12:17:38 +0000</pubDate>
      <link>https://dev.to/ericchapman/nodejs-express-part-1-introduction-314a</link>
      <guid>https://dev.to/ericchapman/nodejs-express-part-1-introduction-314a</guid>
      <description>&lt;p&gt;Here is a series of articles that will allow you to create backend applications with NodeJS + Express.&lt;/p&gt;

&lt;p&gt;This series is the continuation of my series on the basics of NodeJS. If you don't have basic knowledge of NodeJS read this series first: &lt;a href="https://dev.to/ericchapman/create-a-backend-in-javascript-introduction-to-node%20-js-215a"&gt;Introduction to NodeJS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Node.js is today a must, so it is essential for a developer to master it.&lt;/p&gt;

&lt;p&gt;So I will publish a new article about every two days and little by little you will learn everything there is to know about Node.js + Espress&lt;/p&gt;

&lt;p&gt;To not miss anything follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;https://twitter.com/EricTheCoder_&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#reminder-what-is-a-web-server"&gt;
  &lt;/a&gt;
  Reminder: What is a web server?
&lt;/h3&gt;

&lt;p&gt;A web server is a set of hardware and software that allow access to hosted files, web page and database stored on a computer.&lt;/p&gt;

&lt;p&gt;The web server also consists of an HTTP server. HTTP server is software that understands / receives URLs and requests via the HTTP protocol (the protocol used by the browser to display web pages).&lt;/p&gt;

&lt;p&gt;At the simplest level, whenever a browser needs a file or other hosted on a web server, the browser makes the request to the server (it is said to send an HTTP request). When the request reaches the server, the HTTP server processes it and returns the response.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KI6BAhvi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2efhol0cof1mhkerg8xl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KI6BAhvi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2efhol0cof1mhkerg8xl.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In summary, the bottom line is that although an HTTP server may seem complicated, in fact it is just a succession of requests and responses. You will see here below that NodeJS + Express allows you very easily to create an HTTP server and that it is very easy to read a request and send a response.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-expressjs"&gt;
  &lt;/a&gt;
  What is ExpressJS
&lt;/h2&gt;

&lt;p&gt;EspressJS is a NodeJS framework that makes it easier to create web applications. Indeed, why re-invent the wheel? With ExpressJS you have access to several functions that will facilitate and reduce the development time of your web application. Creating an HTTP server with Express is very easy.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-a-new-application"&gt;
  &lt;/a&gt;
  Creating a new application
&lt;/h3&gt;

&lt;p&gt;To fully demonstrate the potential of ExpressJS and fully understand all the concepts, we are going to build a complete new web application.&lt;/p&gt;

&lt;p&gt;First create a folder to host your application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;demo-express
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;demo-express
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first step is to create the package.json file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then install the ExpressJS package and nodemon&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;nodemon&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that as you learn in the NodeJS series, the nodemon package allows you to reload the server each time our code is modified.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#api-vs-ssr"&gt;
  &lt;/a&gt;
  API vs SSR
&lt;/h3&gt;

&lt;p&gt;Express can be used to create JSON API or a website with server side rendering. Today, we are going to create an API, it is by far the type of application most created with Express.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-an-api"&gt;
  &lt;/a&gt;
  What is an API?
&lt;/h3&gt;

&lt;p&gt;API stands for Application Programming Interface.&lt;/p&gt;

&lt;p&gt;In short, it is a program that can be used by another program, in order to allow applications to communicate with each other.&lt;/p&gt;

&lt;p&gt;An API allows the server and the client to communicate with each other and exchange information.&lt;/p&gt;

&lt;p&gt;For example, a customer requests a specific customer page on the server: [&lt;a href="http://www.example.com/customers/3814"&gt;www.example.com/customers/3814&lt;/a&gt; Danemark(&lt;a href="http://www.example.com/customers/3814"&gt;http://www.example.com/customers/3814&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Can the server know how to handle this request? He can't. He won't know what to do with the request. That's why we need to create an API. This is a server application that will determine how to respond to various requests for a specific resource. In this case, return the customer information.&lt;/p&gt;

&lt;p&gt;The API that you created can find record 3814 in the customer database, convert that information to JSON (structured text) format, and return this response to the customer.&lt;/p&gt;

&lt;p&gt;Note that all requests to servers are made through HTTP actions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#http-requests"&gt;
  &lt;/a&gt;
  HTTP requests
&lt;/h3&gt;

&lt;p&gt;The action you want to take on the specified resource. Although nouns are also encountered, these methods are often referred to as HTTP verbs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-are-the-most-commonly-used-http-verbs-actions"&gt;
  &lt;/a&gt;
  Here are the most commonly used HTTP verbs / actions
&lt;/h3&gt;

&lt;p&gt;GET: GET requests are only used to retrieve data.&lt;/p&gt;

&lt;p&gt;POST: GET requests are used to send new data.&lt;/p&gt;

&lt;p&gt;PUT: PUT requests are used to modify data.&lt;/p&gt;

&lt;p&gt;PATCH: PATCH requests are used to partially modify data.&lt;/p&gt;

&lt;p&gt;DELETE: DELETE requests deletes the specified data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rest-architecture"&gt;
  &lt;/a&gt;
  REST architecture
&lt;/h3&gt;

&lt;p&gt;When the client and the server are talking to each other, it can quickly get out of hand.&lt;/p&gt;

&lt;p&gt;For example, the customer can make a request like this: &lt;a href="http://www.example/send-me-customer-3804-file"&gt;http://www.example/send-me-customer-3804-file&lt;/a&gt; or a delete request like this: &lt;a href="http://www.example.com/delete-customer=3815"&gt;http://www.example.com/delete-customer=3815&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How can the server understand these different requests? To have successful communication, we need standards and conventions.&lt;/p&gt;

&lt;p&gt;This is the role of the REST architecture. REST is a set of standards for creating an API that both client and server will use.&lt;/p&gt;

&lt;p&gt;Today we won't learn everything about REST, but you can search the web for more information if you need to.&lt;/p&gt;

&lt;p&gt;For newbies, the important thing is to know that the way we build our API is not based on personal tastes or opinions, but on the REST architecture standard. So follow them and you will be fine.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#crud-routes-conventions"&gt;
  &lt;/a&gt;
  CRUD routes conventions
&lt;/h3&gt;

&lt;p&gt;One of those REST conventions is how routes are defined. There are standards for each CRUD course of action.&lt;/p&gt;

&lt;p&gt;CRUD stands for Create, Read, Update, and Delete.&lt;/p&gt;

&lt;p&gt;When we are dealing with an API resource. For example Customer. Each Client resource has its own CRUD routes.&lt;/p&gt;

&lt;p&gt;Here is an example of these REST CRUD routes:&lt;/p&gt;

&lt;p&gt;Create: POST &lt;a href="http://www.example.com/customers"&gt;http://www.example.com/customers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read: GET &lt;a href="http://www.example.com/customers/3814"&gt;http://www.example.com/customers/3814&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Update: PUT &lt;a href="http://www.example.com/customers/3814"&gt;http://www.example.com/customers/3814&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Destroy: DELETE &lt;a href="http://www.example.com/customer/3814"&gt;http://www.example.com/customer/3814&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So now you have a more precise idea of ​​what an API is.&lt;/p&gt;

&lt;p&gt;On the server, the API will expose all of these routes and features. On the front-end, the client web application will ask these APIs to get the desired data.&lt;/p&gt;

&lt;p&gt;Maybe for now the concept is still a bit hazy but things will become clearer when we build our own API.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#your-first-api-with-express"&gt;
  &lt;/a&gt;
  Your first API with Express
&lt;/h3&gt;

&lt;p&gt;Create the app.js file and add the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;server is listening on port 5000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;650&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iWatch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;750&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this code, the app.listen() will create an HTTP server and read incoming requests&lt;/p&gt;

&lt;p&gt;The app.get() defines a URL path that returns a JSON product list.&lt;/p&gt;

&lt;p&gt;You can test this app with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npx nodemon app.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Navigate to &lt;a href="http://localhost:%205000/api/products"&gt;localhost:5000/api/products&lt;/a&gt;, you should see a JSON representation of the product list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"iPhone"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"iPad"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;650&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"iWatch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;750&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Congratulations, you have just created your first API with NodeJS + Express&lt;/p&gt;

&lt;p&gt;In the next articles we will learn step by step all the details on how to create a NodeJS + Express API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's all for today, follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;https://twitter.com/EricTheCoder_&lt;/a&gt; to be notified of the publication of the next article (within two days).&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>express</category>
      <category>beginners</category>
    </item>
    <item>
      <title>AWS EKS - Launch Template Of Node Group</title>
      <author>🚀  Vu Dao 🚀 </author>
      <pubDate>Fri, 22 Oct 2021 12:07:19 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-eks-launch-template-of-node-group-6a4</link>
      <guid>https://dev.to/aws-builders/aws-eks-launch-template-of-node-group-6a4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#abstract"&gt;
  &lt;/a&gt;
  Abstract
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Managed node groups are always deployed with an Amazon EC2 Auto Scaling Group launch template. If you don't specify your own launch template to use when creating a managed node group, the Amazon EKS API creates a launch template with default values in your account.&lt;/li&gt;
&lt;li&gt;In order join a managed node group to EKS cluster, we need to care about the IAM role attached to nodegroup&lt;/li&gt;
&lt;li&gt;This blog describes about using CDK to create AWS Nodegroup with launch template for an existing EKS cluster and some notes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#Managing-users-or-IAM-roles-for-your-cluster"&gt;Managing users or IAM roles for your cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Launch-template-%E2%80%93-Prohibited"&gt;Launch template – Prohibited&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-to-update-mapRoles-for-EKS-nodegroup"&gt;How to update mapRoles for EKS nodegroup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Create-ASG-and-Launch-template-using-CDK-Typescript"&gt;Create ASG and Launch-template using CDK Typescript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#managing-users-or-iam-roles-for-your-cluster"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Managing users or IAM roles for your cluster&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;When you create an Amazon EKS cluster, the IAM entity user or role, such as a &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers.html"&gt;federated user&lt;/a&gt; that creates the cluster, is automatically granted &lt;code&gt;system:masters&lt;/code&gt; permissions in the cluster's RBAC configuration in the control plane. This IAM entity does not appear in the &lt;code&gt;ConfigMap&lt;/code&gt;, or any other visible configuration, so make sure to keep track of which IAM entity originally created the cluster.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To grant additional AWS users or roles the ability to interact with your cluster, you must edit the &lt;code&gt;aws-auth&lt;/code&gt; ConfigMap within Kubernetes.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: v1
kind: ConfigMap
metadata:
  name: aws-auth
  namespace: kube-system
data:
  mapRoles: |
    - rolearn: &amp;lt;ARN of instance role (not instance profile)&amp;gt;
      username: system:node:{{EC2PrivateDNSName}}
      groups:
        - system:bootstrappers
        - system:nodes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Ref: &lt;a href="https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html"&gt;add-user-role&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#launch-template-prohibited"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Launch template – Prohibited&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e17Nyc_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/troubleshoot/asg-launch-template/images/lt.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e17Nyc_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/troubleshoot/asg-launch-template/images/lt.png%3Fraw%3Dtrue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Some of the settings in a launch template are similar to the settings used for managed node configuration. When deploying or updating a node group with a launch template, some settings must be specified in the node group configuration or the launch template, &lt;strong&gt;but not both&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Launch template – Prohibited&lt;/th&gt;
&lt;th&gt;Amazon EKS node group configuration&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IAM instance profile under Advanced details&lt;/td&gt;
&lt;td&gt;Node IAM Role under Node Group configuration on the Configure Node Group page&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;CDK &lt;code&gt;Nodegroup&lt;/code&gt; Auto-generated IAM role if not specified, so if we also specify IAM role in the launch template it will get following error
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;7:08:28 PM | CREATE_FAILED        | AWS::EKS::Nodegroup            | AirflowPet2Asg8F88D116
Launch template eks-airflow-nodegroup-pet-2-lt should not specify an instance profile. The noderole in your request will be used to construct an instance profile. (Service:AmazonEKS; Status Code: 400; Error Code: InvalidParameterException; Request ID: 477ced9d-69c0-4c4e-a2bc-40116052e769; Proxy: null)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#how-to-update-raw-maproles-endraw-for-eks-nodegroup"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;How to update &lt;code&gt;mapRoles&lt;/code&gt; for EKS nodegroup&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The Amazon EKS worker node &lt;code&gt;kubelet daemon&lt;/code&gt; makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through&lt;br&gt;
an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The role must have at least policies: &lt;code&gt;['AmazonEC2ContainerRegistryReadOnly', 'AmazonEKSWorkerNodePolicy', 'AmazonS3ReadOnlyAccess', 'AmazonEKS_CNI_Policy']&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When we assign the role to nodegroup, &lt;code&gt;aws-cdk/aws-eks&lt;/code&gt; uses custom resource &lt;code&gt;Custom::AWSCDK-EKS-KubernetesResource&lt;/code&gt;  to add mapRoles automatically. The managed nodegroups update the &lt;code&gt;aws-auth&lt;/code&gt; on creation&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    if (this.cluster instanceof Cluster) {
    // see https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html
    this.cluster.awsAuth.addRoleMapping(this.role, {
        username: 'system:node:{{EC2PrivateDNSName}}',
        groups: [
        'system:bootstrappers',
        'system:nodes',
        ],
    });
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; that if you assign a specific role to the managed node group, please be careful that it will not automatically add the required IAM policy for you. &lt;a href="https://github.com/aws/aws-cdk/blob/6e2a3e0f855221df98f78f6465586d5524f5c7d5/packages/%40aws-cdk/aws-eks/lib/managed-nodegroup.ts#L364-L375"&gt;Source code&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    if (!props.nodeRole) {
    const ngRole = new Role(this, 'NodeGroupRole', {
        assumedBy: new ServicePrincipal('ec2.amazonaws.com'),
    });

    ngRole.addManagedPolicy(ManagedPolicy.fromAwsManagedPolicyName('AmazonEKSWorkerNodePolicy'));
    ngRole.addManagedPolicy(ManagedPolicy.fromAwsManagedPolicyName('AmazonEKS_CNI_Policy'));
    ngRole.addManagedPolicy(ManagedPolicy.fromAwsManagedPolicyName('AmazonEC2ContainerRegistryReadOnly'));
    this.role = ngRole;
    } else {
    this.role = props.nodeRole;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#create-asg-and-launchtemplate-using-cdk-typescript"&gt;
  &lt;/a&gt;
  🚀 Create ASG and Launch-template using CDK Typescript &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Here is an example of create Auto scaling group (ASG) with template and join the managed nodegroup to existing EKS cluster&lt;/li&gt;
&lt;li&gt;Pre-requiset: EKS cluster, the cluster VPC, VPC security group (optional, depends on the ESK cluster)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
  asg.ts
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  import { Stack, App, Tags, StackProps} from '@aws-cdk/core';
  import { Cluster, Nodegroup, CapacityType, TaintEffect } from '@aws-cdk/aws-eks'
  import { Role, ServicePrincipal, ManagedPolicy, PolicyStatement, Effect, IRole } from '@aws-cdk/aws-iam';
  import * as ec2 from '@aws-cdk/aws-ec2';


  export class AsgStack extends Stack {
      public eks_cluster: any;
      public worker_role: any;
      public SG: any;
      public eksCluserName: string;
      public launchTemplate: any;
      public vpcSg: any;
      public vpc: ec2.IVpc;

      constructor(public scope: App, id: string, props?: StackProps) {
          super(scope, id, props);

          this.vpcSg = ec2.SecurityGroup.fromLookup(this, 'VPCSG', 'sg-0c8461ab50fd7bf54');

          this.vpc = ec2.Vpc.fromLookup(this, 'EfsVPC', {
              isDefault: false,
              vpcId: 'vpc-ecb25394'
          });

          this.eksCluserName = 'us-eks'

          // EKS cluster
          this.eks_cluster = Cluster.fromClusterAttributes(
              this, 'EksCluster', {
                  this.vpc,
                  clusterName: this.eksCluserName
              }
          );

          this.launchTemplate = this.createLaunchTemplate();

          // SG to workers
          this.SG = this.createSG();

          this.worker_role = this.createWorkerRole();

          this.createAsgPet();
      };

      createWorkerRole(): IRole {
          // IAM worker role
          const worker_role = new Role(
              this, 'IamRole', {
                  assumedBy: new ServicePrincipal('ec2.amazonaws.com'),
                  roleName: `${this.eksCluserName}-role`
              }
          );
          const attachPolicies = ['AmazonEC2ContainerRegistryReadOnly', 'AmazonEKSWorkerNodePolicy', 'AmazonS3ReadOnlyAccess', 'AmazonEKS_CNI_Policy'];
          for (var policy of attachPolicies) {
              worker_role.addManagedPolicy(ManagedPolicy.fromAwsManagedPolicyName(policy))
          }
          Tags.of(worker_role).add('Name', `${this.eksCluserName}`)
          Tags.of(worker_role).add('env', 'us-prod')

          const autoscalingStatement = new PolicyStatement({
              sid: 'AutoScalingGroup',
              actions: [
                  "autoscaling:DescribeAutoScalingGroups",
                  "autoscaling:DescribeAutoScalingInstances",
                  "autoscaling:DescribeLaunchConfigurations",
                  "autoscaling:DescribeTags",
                  "autoscaling:CreateOrUpdateTags",
                  "autoscaling:UpdateAutoScalingGroup",
                  "autoscaling:TerminateInstanceInAutoScalingGroup",
                  "ec2:DescribeLaunchTemplateVersions",
                  "elasticfilesystem:*",
                  "tag:GetResources",
              ],
              effect: Effect.ALLOW,
              resources: ['*'],
              conditions: {
                  'StringEquals': {"aws:RequestedRegion": 'us-east-1'}
              }
          });

          worker_role.addToPolicy(autoscalingStatement);

          return worker_role;
      };

      createSG(): any {
          /**
          *  security group
          */
          const asgSG = new ec2.SecurityGroup(this, 'SG', {
              vpc: this.vpc,
              securityGroupName: 'priv-sg',
              description: 'Security group to access to worker in private vpc',
              allowAllOutbound: true
          });
          asgSG.connections.allowFrom(asgSG, ec2.Port.allTcp(), 'Allow node to communicate with each other');
          asgSG.connections.allowFrom(this.vpcSg, ec2.Port.allTcp(), 'Allow nodes in another ASG communicate to nodes');
          asgSG.connections.allowFrom(this.eks_cluster.connections, ec2.Port.allTcp(), 'Allow EKS Control Plane to to access Node');

          Tags.of(asgSG).add('Name', 'priv');
          Tags.of(asgSG).add('env', 'us-prod');

          return asgSG;
      };

      createLaunchTemplate(): any {
          /**
          * More about launch-templates: https://github.com/awsdocs/amazon-eks-user-guide/blob/master/doc_source/launch-templates.md
          * Notes:
          * - Nodegroup auto-generates role if not specify
          * - Launch template node group automatically add the worker role to aws-auth configmap
          */
          const LaunchTemplate = new ec2.LaunchTemplate(this, 'LaunchTemplate-lt', {
              launchTemplateName: 'asg-lt',
              securityGroup: this.SG,
              blockDevices: [{
                  deviceName: '/dev/xvda',
                  volume: ec2.BlockDeviceVolume.ebs(20)
              }],
              keyName: 'us-pem'
          });
          Tags.of(LaunchTemplate).add('Name', 'asg-lt');
          Tags.of(LaunchTemplate).add('env', 'us-prod');

          return LaunchTemplate;
      }

      createAsgPet() {
          /**
          * ASG Pet is used to assign deployments. Due to using spot instances so recommendation min size 2
          */
          const asgPet = new Nodegroup(this, 'PetAsg', {
              nodegroupName: 'eks-nodegroup-pet',
              subnets: this.eks_cluster.vpc.selectSubnets({subnetType: ec2.SubnetType.PRIVATE}),
              cluster: this.eks_cluster,
              capacityType: CapacityType.SPOT,
              nodeRole: this.worker_role,
              instanceTypes: [
                  new ec2.InstanceType('c5a.xlarge'),
                  new ec2.InstanceType('c5.xlarge')
              ],
              minSize: 1,
              maxSize: 2,
              labels: {
                  'role': 'pet',
                  'type': 'stateless',
                  'lifecycle': 'spot'
              },
              taints: [
                  {
                      effect: TaintEffect.NO_SCHEDULE,
                      key: 'dedicated',
                      value: 'pet'
                  }
              ],
              tags: {
                  'Name': 'eks-nodegroup-pet',
              },
              launchTemplateSpec: {
                  id: this.launchTemplate.launchTemplateId!
              }
          });
      };
  }

  const coreEnv = {
      account: process.env.CDK_DEFAULT_ACCOUNT,
      region: process.env.CDK_DEFAULT_REGION,
  };

  const app = new App();

  new AsgStack(app, 'eks-asg-lab', { env: coreEnv });

  app.synth();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;




&lt;div class="ltag__user ltag__user__id__512906"&gt;
  
    .ltag__user__id__512906 .follow-action-button {
      background-color: #000000 !important;
      color: #62df88 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/vumdao" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bGwkUMWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ugeYdWM---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/512906/2472752c-cfd5-4e02-b3d8-55b790178884.png" alt="vumdao image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/vumdao"&gt;🚀  Vu Dao 🚀 &lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/vumdao"&gt;Awesome Devops || AWS SA || CloudOpz&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;




&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vumdao"&gt;
        vumdao
      &lt;/a&gt; / &lt;a href="https://github.com/vumdao/vumdao"&gt;
        vumdao
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>aws</category>
      <category>asg</category>
      <category>cloudopz</category>
      <category>devops</category>
    </item>
    <item>
      <title>Dev Protocol - Open Source Community for Blockchain technology is now Open!</title>
      <author>Vincent Villafuerte</author>
      <pubDate>Fri, 22 Oct 2021 12:03:25 +0000</pubDate>
      <link>https://dev.to/web3community/dev-protocol-open-source-community-for-blockchain-technology-is-now-open-114b</link>
      <guid>https://dev.to/web3community/dev-protocol-open-source-community-for-blockchain-technology-is-now-open-114b</guid>
      <description>&lt;p&gt;Dev Protocol is now open to Open Source Community, everyone can join on &lt;a href="https://github.com/dev-protocol/community/issues/new?assignees=&amp;amp;labels=github-invitation&amp;amp;template=invitation.yml&amp;amp;title=Please+invite+me+to+the+community"&gt;GitHub organization&lt;/a&gt; and chat on their &lt;a href="https://discord.com/invite/VwJp4KM"&gt;Discord server&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We are making the &lt;a href="https://github.com/web3community"&gt;Web3 Community&lt;/a&gt; an educational platform for aspiring blockchain developers and we will still continue creating open-source projects. &lt;a href="https://github.com/dev-protocol"&gt;Dev Protocol&lt;/a&gt; is where you can contribute to real decentralized applications (dApps) so you can utilize and enhance your skills.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What’s next?
&lt;/h3&gt;

&lt;p&gt;Dev Protocol will be having a hackathon, volunteering program, and many exciting programs in the near future.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>opensource</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What sells the most on Amazon?</title>
      <author>Jyoti</author>
      <pubDate>Fri, 22 Oct 2021 11:55:15 +0000</pubDate>
      <link>https://dev.to/jyoti_/what-sells-the-most-on-amazon-gl5</link>
      <guid>https://dev.to/jyoti_/what-sells-the-most-on-amazon-gl5</guid>
      <description>&lt;p&gt;&lt;a href="https://www.amazon.com/"&gt;Amazon&lt;/a&gt; is the most popular marketplace around the world with around 12 million live products. Moreover, it occupies over 49% of the eCommerce market in the US alone, beating eBay and Walmart. And, with the advent of technology and eCommerce growth, product categories are also increasing.&lt;br&gt;
So, if you want to be successful in this marketplace, you must know which products sell the most on Amazon.&lt;/p&gt;

&lt;p&gt;Here is a complete list of all items that are trending on the marketplace:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-selling-items-on-amazon"&gt;
  &lt;/a&gt;
  Top Selling Items on Amazon
&lt;/h2&gt;

&lt;p&gt;Here are the top five trending items on Amazon that you shouldn’t miss this 2021:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-games-and-accessories"&gt;
  &lt;/a&gt;
  Video Games and Accessories
&lt;/h3&gt;

&lt;p&gt;The video game industry is one of the fastest-growing industries around the world. And, it is likely to reach the worth of $200 billion by 2023. Another reason for the fast growth of this industry is the presence of 2.7 million gamers worldwide.&lt;br&gt;
Under this category, the following sell the most on Amazon:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Consoles and Controllers&lt;/li&gt;
&lt;li&gt;Gaming Headgear&lt;/li&gt;
&lt;li&gt;Gift Cards (Xbox and PS)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#books"&gt;
  &lt;/a&gt;
  Books
&lt;/h3&gt;

&lt;p&gt;Amazon controls over 50% of the entire book sales in the US and around 83% of the sales of eBooks. According to another impressive stat, over 675 million printed books were sold by this marketplace last year.&lt;br&gt;
Some of the books that recorded higher sales on Amazon include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Power Of Subconscious Mind by Joseph Murphy&lt;/li&gt;
&lt;li&gt;Think and Grow Rich by Napoleon Hill&lt;/li&gt;
&lt;li&gt;The Alchemist by Paulo Coelho&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://cedcommerce.com/magento-2-extensions/amazon-magento-2-multichannel-integration?utm_source=dev.to-magento&amp;amp;utm_medium=jyoti-topitemsamazon"&gt;&lt;em&gt;API connector&lt;/em&gt;&lt;/a&gt; makes selling easy and more efficient on the Amazon marketplace.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#electronics-and-accessories"&gt;
  &lt;/a&gt;
  Electronics and Accessories
&lt;/h3&gt;

&lt;p&gt;Electronics and accessories are evergreen products on this marketplace. And, any seller selling this product will never feel empty-handed as these products are sold every season.&lt;br&gt;
The products that record the highest sales in this category are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amazon Firestick&lt;/li&gt;
&lt;li&gt;Amazon Echo&lt;/li&gt;
&lt;li&gt;Smart Indoor Home Camera&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#health-beauty-and-personal-care"&gt;
  &lt;/a&gt;
  Health, Beauty, and Personal care
&lt;/h3&gt;

&lt;p&gt;This is another booming industry and product category that has recorded the highest sales on Amazon. And, this industry is expected to rise at the rate of 16.4%.&lt;br&gt;
The top-selling products of this category include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Makeup wipes &amp;amp; cleansing towelette&lt;/li&gt;
&lt;li&gt;Hair Trimmers &amp;amp; Clippers&lt;/li&gt;
&lt;li&gt;Yoga Mat&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cell-phones-and-accessories"&gt;
  &lt;/a&gt;
  Cell Phones and Accessories
&lt;/h3&gt;

&lt;p&gt;With technical advancements, mobile phones are also evolving every year. And with this, the demands and craze for these devices are also increasing. So, the sellers selling this product are likely to gain profit on Amazon.&lt;br&gt;
Here are the trending products of this industry:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;iPhone and accessories&lt;/li&gt;
&lt;li&gt;Wireless Earphones&lt;/li&gt;
&lt;li&gt;USB Wall Charger&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selling on Amazon can help you take your online business to the next level and boost your product sales. But with the selection of the right marketplace, it is also important that you sell the right products.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This short blog carries the top five trending product categories on Amazon. To find more details, refer to the article &lt;a href="https://cedcommerce.com/blog/best-selling-items-on-amazon-2021/?utm_source=dev.to-magento&amp;amp;utm_medium=jyoti-topitemsamazon"&gt;&lt;strong&gt;‘Top trending items on Amazon in 2021’&lt;/strong&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>sellonamazon</category>
      <category>amazonseller</category>
      <category>beginners</category>
      <category>sellers</category>
    </item>
    <item>
      <title>Answer: How to write Python Array into Excel Spread sheet</title>
      <author>paul-coder-22</author>
      <pubDate>Fri, 22 Oct 2021 11:47:48 +0000</pubDate>
      <link>https://dev.to/paulcoder22/answer-how-to-write-python-array-into-excel-spread-sheet-1n77</link>
      <guid>https://dev.to/paulcoder22/answer-how-to-write-python-array-into-excel-spread-sheet-1n77</guid>
      <description>&lt;div class="ltag__stackexchange--container"&gt;
  &lt;div class="ltag__stackexchange--title-container"&gt;
    
      &lt;div class="ltag__stackexchange--title"&gt;
        &lt;h1&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gn-iPj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackoverflow-logo-b42691ae545e4810b105ee957979a853a696085e67e43ee14c5699cf3e890fb4.svg" alt=""&gt;
            &lt;a href="https://stackoverflow.com/questions/31909722/how-to-write-python-array-into-excel-spread-sheet/31918108#31918108" rel="noopener noreferrer"&gt;
              &lt;span class="title-flare"&gt;answer&lt;/span&gt; re: How to write Python Array into Excel Spread sheet
            &lt;/a&gt;
        &lt;/h1&gt;
        &lt;div class="ltag__stackexchange--post-metadata"&gt;
          &lt;span&gt;Aug 10 '15&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;a class="ltag__stackexchange--score-container" href="https://stackoverflow.com/questions/31909722/how-to-write-python-array-into-excel-spread-sheet/31918108#31918108" rel="noopener noreferrer"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9mJpuJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-up-eff2e2849e67d156181d258e38802c0b57fa011f74164a7f97675ca3b6ab756b.svg" alt=""&gt;
        &lt;div class="ltag__stackexchange--score-number"&gt;
          11
        &lt;/div&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wif5Zq3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-down-4349fac0dd932d284fab7e4dd9846f19a3710558efde0d2dfd05897f3eeb9aba.svg" alt=""&gt;
      &lt;/a&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--body"&gt;
    
&lt;p&gt;Here is one way to do it using the &lt;a href="https://xlsxwriter.readthedocs.org/" rel="noreferrer"&gt;XlsxWriter&lt;/a&gt; module:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import xlsxwriter

workbook = xlsxwriter.Workbook('arrays.xlsx')
worksheet = workbook.add_worksheet()

array = [['a1', 'a2', 'a3'],
         ['a4', 'a5', 'a6'],
         ['a7', 'a8', 'a9'],
         ['a10', 'a11', 'a12', 'a13', 'a14']]

row = 0

for col, data in enumerate(array):
    worksheet.write_column(row, col, data)

workbook.close()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.stack.imgur.com/oIvr3.png" rel="noreferrer"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MXOmSnm1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/oIvr3.png" alt="enter image description here"&gt;&lt;/a&gt;&lt;/p&gt;

    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--btn--container"&gt;
    
      &lt;a href="https://stackoverflow.com/questions/31909722/how-to-write-python-array-into-excel-spread-sheet/31918108#31918108" rel="noopener noreferrer"&gt;Open Full Answer&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;


</description>
    </item>
    <item>
      <title>Day 14 of 100 Days of Code &amp; Scrum: Dealing with Anxiety and Depression</title>
      <author>Rammina</author>
      <pubDate>Fri, 22 Oct 2021 11:43:47 +0000</pubDate>
      <link>https://dev.to/rammina/day-14-of-100-days-of-code-scrum-dealing-with-anxiety-and-depression-5og</link>
      <guid>https://dev.to/rammina/day-14-of-100-days-of-code-scrum-dealing-with-anxiety-and-depression-5og</guid>
      <description>&lt;p&gt;&lt;small&gt;&lt;cite&gt;Image by &lt;a href="https://pixabay.com/users/ryanmcguire-123690/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=413690"&gt;Ryan McGuire&lt;/a&gt; from &lt;a href="https://pixabay.com/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=413690"&gt;Pixabay&lt;/a&gt;&lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Hello there, everyone!&lt;/p&gt;

&lt;p&gt;Today, I took a break from coding and learning Scrum. I simply did 2 hours of learning for the challenge. After all, I can't always be working nonstop and I also wanted to spend time with my family. I do care about my work-life balance and I don't like neglecting my loved ones. If I was asked whether I'd prioritize my profession or my loved ones, I would always go for the latter first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#offtopic-vent"&gt;
  &lt;/a&gt;
  Off-topic Vent
&lt;/h2&gt;

&lt;p&gt;Actually, I had to provide emotional comfort for my wife and listen to her. She is suffering from debilitating anxiety and depression, but I still love her and want to be with her. Of course, I empathize with her because I deal with similar problems myself. I'm glad we managed to resolve this for today.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1HXZ6FnS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgt66evur0x3sijmuk1y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1HXZ6FnS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgt66evur0x3sijmuk1y.png" alt="Hold Hands"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;cite&gt;Photo by &lt;a href="https://unsplash.com/@priscilladupreez?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Priscilla Du Preez&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/emotional-support?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Anyway, moving on to the meat of the challenge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I finished the draft of the &lt;code&gt;Product Backlog&lt;/code&gt; and &lt;code&gt;Sprint Backlog&lt;/code&gt; section and did some practice questions for Scrum.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I've learned and done today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;did practice quiz questions about Scrum.&lt;/li&gt;
&lt;li&gt;took a break from writing the guide.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I learned about Build-time Schema Validation &amp;amp; Optimizations in GraphQL.&lt;/li&gt;
&lt;li&gt;GraphQL apparently lets you have UI code and data requirements side-by-side.&lt;/li&gt;
&lt;li&gt;GraphQL server lets you send batched requests and batched resolvers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope you don't give up even when times are challenging. &lt;br&gt;
Thank you for reading!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m-2f1-je--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/92920wqfguu0hib2o6lz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m-2f1-je--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/92920wqfguu0hib2o6lz.jpg" alt="Starry Night Sky"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;cite&gt;Image by &lt;a href="https://pixabay.com/photos/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=984050"&gt;Free-Photos&lt;/a&gt; from &lt;a href="https://pixabay.com/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=984050"&gt;Pixabay&lt;/a&gt;&lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.howtographql.com/"&gt;The Fullstack Tutorial for GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/chingu/a-short-introduction-to-the-scrum-methodology-7a23431b9f17"&gt;A Short Introduction to the Scrum Framework by Jim Medlock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Form Validation In ReactJS by building A Reusable Custom hook⚓</title>
      <author>CodeBucks</author>
      <pubDate>Fri, 22 Oct 2021 11:37:32 +0000</pubDate>
      <link>https://dev.to/codebucks/form-validation-in-reactjs-by-building-reusable-custom-hook-1bg7</link>
      <guid>https://dev.to/codebucks/form-validation-in-reactjs-by-building-reusable-custom-hook-1bg7</guid>
      <description>&lt;p&gt;Hi there👋,&lt;/p&gt;

&lt;p&gt;Form📝 handling is an essential part of any website. Since Forms takes the important information from the user. We must create robust form component which can handle inputs and it's validation🚦 easily.&lt;/p&gt;

&lt;p&gt;Here, we're going to create a simple React Hook⚓ to handle form as well as it's validation.&lt;/p&gt;

&lt;p&gt;The advantage of this hook is,&lt;br&gt;
⏭ It is Reusable, so that you can use it anywhere in your website or for other projects.&lt;br&gt;
⏭ You can handle validation easily, You just have to put conditions for input fields you want to validate.&lt;br&gt;
⏭ This hook makes error handling very easy, also you can customize error messages as well.&lt;br&gt;
⏭ Very easy to implement and build&lt;/p&gt;

&lt;p&gt;If you prefer to watch video then here is the video tutorial👇&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/_ePL_Hu_cW4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-start-coding"&gt;
  &lt;/a&gt;
  Let's start coding
&lt;/h3&gt;

&lt;p&gt;First of all makes sure you have created you react app using below command👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app react-form-component
cd react-form-component
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now start your react app using👇&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;1️⃣ Open your project folder in your code editor.&lt;/p&gt;

&lt;p&gt;2️⃣ Clear the unnecessary code from the App.js file.&lt;/p&gt;

&lt;p&gt;3️⃣ Create form with 3 inputs and 1 submit button like below👇&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;4️⃣ Add some css in the App.css file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.App {
  text-align: center;
  margin-top: 20vh;
}

form{
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

input{
  margin: 0.5rem 0;
  padding: 1rem;
  outline: none;
}

.submit{
  border: 2px solid #000 !important;
  cursor: pointer;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;5️⃣ Create &lt;strong&gt;Hooks&lt;/strong&gt; folder in the Src. In this folder create one file called &lt;strong&gt;useForm.js&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To create any custom hook, you can keep different file name but name of the hook should always start from &lt;strong&gt;use&lt;/strong&gt; keyword.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Write basic snippet in this file like below,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const useForm = () =&amp;gt; {

return();

}

export default useForm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;6️⃣ In this hook first we will need two states,&lt;/p&gt;

&lt;p&gt;values =&amp;gt;  A state to store form values, Initially an empty object&lt;br&gt;
errors =&amp;gt; A state to store errors if any, Initially an empty object&lt;/p&gt;

&lt;p&gt;So let's create these states,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    //Form values
    const [values, setValues] = useState({});
    //Errors
    const [errors, setErrors] = useState({});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;7️⃣ Let's create a method to handle form values and set values state.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  //A method to handle form inputs
    const handleChange = (event) =&amp;gt; {
        //To stop default events    
        event.persist();

        let name = event.target.name;
        let val = event.target.value;

        validate(event,name,val);
        //Let's set these values in state

        setValues({
            ...values,   //spread operator to store old values
            [name]:val,
        })

    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This method takes event as an argument and then it will set the values state as [key]:value pair in values object.&lt;/p&gt;

&lt;p&gt;Now to use this methods and state in other components we need to return it.&lt;/p&gt;

&lt;p&gt;Now your code will look like this👇&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;8️⃣ Let's call and use this hook in the App.js file.&lt;br&gt;
Open your App file and paste below code.&lt;/p&gt;

&lt;p&gt;Import useForm hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import useForm from './Hooks/useForm';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Deconstruct states and method from hook.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  //Custom hook call
  const {handleChange, values,errors } = useForm();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Make sure to attach handleChange method with onChange event of each inputs like below👇&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="email" name="email" placeholder="E-mail"  onChange={handleChange}   /&amp;gt;
&amp;lt;input type="password" name="password" placeholder="password" onChange={handleChange}   /&amp;gt;
&amp;lt;input type="text" name="username" placeholder="username"  onChange={handleChange}  /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can check values state by using &lt;code&gt;console.log(values)&lt;/code&gt; inside the App.js file.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#form-validation"&gt;
  &lt;/a&gt;
  Form Validation
&lt;/h3&gt;

&lt;p&gt;9️⃣ Let's create a validation function in useForm hook.&lt;/p&gt;

&lt;p&gt;Open &lt;em&gt;useForm.js&lt;/em&gt; file, and write below code,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const validate = (event, name, value) =&amp;gt; {
    //A function to validate each input values

    switch (name) {
        case 'username':
            if (value.length &amp;lt;= 4) {
                // we will set the error state

                setErrors({
                    ...errors,
                    username: 'Username atleast have 5 letters'
                })
            } else {
// set the error state empty or remove the error for username input

//omit function removes/omits the value from given object and returns a new object
                let newObj = omit(errors, "username");
                setErrors(newObj);

            }
            break;

        default:
            break;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's break down &lt;strong&gt;validate&lt;/strong&gt; function.&lt;/p&gt;

&lt;p&gt;=&amp;gt; This function takes 3 arguments,&lt;br&gt;
&lt;strong&gt;event&lt;/strong&gt; ➡ If you want target element for customization or styling&lt;br&gt;
&lt;strong&gt;name&lt;/strong&gt; ➡  name of the element&lt;br&gt;
&lt;strong&gt;values&lt;/strong&gt; ➡  values of the element&lt;/p&gt;

&lt;p&gt;=&amp;gt; Here we have used &lt;code&gt;Switch&lt;/code&gt; statement for different elements, so that you can validate different elements.&lt;br&gt;
Key of the switch function is the name of the element.&lt;/p&gt;

&lt;p&gt;=&amp;gt; Now for the first case we have username.&lt;br&gt;
So in this case we have a condition that,&lt;br&gt;
if length of the username value is &amp;lt;= 4 then we will set the error state else we will remove that error if exists.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here we have used omit function, since we can not manipulate state object directly. This omit function takes two arguments first is the &lt;strong&gt;object&lt;/strong&gt; and second is the &lt;strong&gt;name of the error&lt;/strong&gt; you want to remove, Now omit function remove that error if it exist then it returns the new object.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now in the &lt;strong&gt;handleChange&lt;/strong&gt; method use validate function and make sure to pass all the arguments.&lt;/p&gt;

&lt;p&gt;Refer below full code👇&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Line no:35&lt;/strong&gt; Here for Email I'm using regular expression to validate the email value. If is is false then if condition becomes true and we will set the error accordingly.&lt;br&gt;
Same for the password.&lt;br&gt;
You can customize this regular function as per your requirements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Line no:82&lt;/strong&gt; In this line we can call &lt;strong&gt;validate&lt;/strong&gt; function which will validate all the inputs.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#handle-submit"&gt;
  &lt;/a&gt;
  Handle Submit
&lt;/h3&gt;

&lt;p&gt;🔟 Let's create handle submit function.&lt;/p&gt;

&lt;p&gt;open App.js file and write below code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  //Final submit function
  const formLogin = () =&amp;gt; {

    console.log("Callback function when form is submitted!");
    console.log("Form Values ", values);
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now this is the function you can customize and will be called when form is submitted.&lt;/p&gt;

&lt;p&gt;Pass this function in the &lt;strong&gt;useForm&lt;/strong&gt; hook as a callback function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  //Custom hook call
  const {handleChange, values,errors,handleSubmit} = useForm(formLogin);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how you can pass your custom functions to the hooks.&lt;/p&gt;

&lt;p&gt;1️⃣1️⃣ Open &lt;strong&gt;useForm.js&lt;/strong&gt; file.&lt;/p&gt;

&lt;p&gt;deconstruct callback function from the props like below👇&lt;br&gt;
&lt;code&gt;const useForm = (callback) =&amp;gt; {&lt;br&gt;
...&lt;br&gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's create handleSubmit function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const handleSubmit = (event) =&amp;gt; {
        if(event) event.preventDefault();

        if(Object.keys(errors).length === 0 &amp;amp;&amp;amp; Object.keys(values).length !==0 ){
            callback();

        }else{
            alert("There is an Error!");
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this function,&lt;br&gt;
If length of errors is 0 and length of values is not zero (values are not empty) then it will call the callback function else it will alert the user.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE: You should customize these conditions as per your requirements.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Don't forget to add &lt;strong&gt;handleSubmit&lt;/strong&gt; function in the return statement.&lt;/p&gt;

&lt;p&gt;1️⃣2️⃣ Open App.js file.&lt;/p&gt;

&lt;p&gt;Deconstruct &lt;strong&gt;handleSubmit&lt;/strong&gt; method from the useForm hook.&lt;br&gt;
&lt;code&gt;const {handleChange, values,errors,handleSubmit} = useForm(formLogin);&lt;br&gt;
&lt;/code&gt;&lt;br&gt;
Connect this method with the form like below,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;br&gt;
 &amp;lt;form onSubmit={handleSubmit}&amp;gt;&lt;br&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#display-the-errors"&gt;
  &lt;/a&gt;
  Display the Errors
&lt;/h3&gt;

&lt;p&gt;Now to display errors you can do something like this,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;      &amp;lt;form onSubmit={handleSubmit}&amp;gt;
      &amp;lt;input type="email" name="email" placeholder="E-mail"  onChange={handleChange}   /&amp;gt;
      {
        errors.email &amp;amp;&amp;amp; &amp;lt;h3&amp;gt;{errors.email}&amp;lt;/h3&amp;gt;
      }
      &amp;lt;input minLength='8' type="password" name="password" placeholder="password"  onChange={handleChange}   /&amp;gt;
      {
        errors.password &amp;amp;&amp;amp; &amp;lt;h3&amp;gt;{errors.password}&amp;lt;/h3&amp;gt;

      }
      &amp;lt;input type="text" minLength='5' required name="username" placeholder="username"  onChange={handleChange}   /&amp;gt;
      {
        errors.username &amp;amp;&amp;amp; &amp;lt;h3&amp;gt;{errors.username}&amp;lt;/h3&amp;gt;

      }
      &amp;lt;input type="submit" value="Submit" className="submit"  /&amp;gt;
      &amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First we will check if there is any error then if it is there then we will display it.&lt;/p&gt;

&lt;p&gt;You can watch the video for manipulating some style of the component based on it's values.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The End
&lt;/h3&gt;

&lt;p&gt;That's the end of this tutorial, &lt;br&gt;
I hope it helped you to learn something.&lt;/p&gt;

&lt;p&gt;Full Code for this tutorial 👉&lt;br&gt;
&lt;a href="https://github.com/codebucks27/React-Form-Component"&gt;https://github.com/codebucks27/React-Form-Component&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you have any question just ask in the comments😉&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks For Reading😄
&lt;/h3&gt;

&lt;p&gt;Feel free to visit my youtube channel: &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#codebucks"&gt;
  &lt;/a&gt;
  [&lt;a class="mentioned-user" href="https://dev.to/codebucks"&gt;@codebucks&lt;/a&gt;
]
&lt;/h4&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>PPSSPP GOLD APK v1.12.3 Download Latest Version 2021</title>
      <author>PPSSPP Gold APP</author>
      <pubDate>Fri, 22 Oct 2021 11:18:24 +0000</pubDate>
      <link>https://dev.to/ppssppgold/ppsspp-gold-apk-v1123-download-latest-version-2021-29dc</link>
      <guid>https://dev.to/ppssppgold/ppsspp-gold-apk-v1123-download-latest-version-2021-29dc</guid>
      <description>&lt;p&gt;Are you a PSP game lover but facing the problem of playing your favorite games on your smartphone? If yes, then PPSSPP Gold will work like a charm emulator in your device that doesn’t require high configuration to launch games. Now, get the ultimate fun of playing high-quality PSP games directly on your smartphone and tablets.&lt;/p&gt;

&lt;p&gt;Download - &lt;a href="http://ppssppgoldapk.app/"&gt;http://ppssppgoldapk.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Introduce about PPSSPP Gold&lt;br&gt;
PPSSPP Gold is one of the highly used PSP emulators for Android devices where you can emulate multiple games in high definition. The game offers lots of amazing features such as simple touch controls, clear sound quality, high definition graphics, easy to customize, and many other things.&lt;/p&gt;

&lt;p&gt;There are dozens of incredible PSP games available to explore but the problem is that they require portable devices to run. But the PPSSPP application launched as a perfect solution to this problem that comes with lots of premium features that can’t be found in any normal emulators.&lt;/p&gt;

&lt;p&gt;In this emulator, you can load multiple games at the same time, but it somehow depends on your device’s capability. One of the best things that I like most about this emulator is its fast processing speed and gameplay stability that eventually make the user satisfied. Although there are lots of gaming emulators such as Drastic DS Emulator, Pizza Boy GBA Pro, and more available for Android devices, no one can provide you with a smooth gameplay experience like PPSSPP.&lt;/p&gt;

&lt;p&gt;Support all android devices&lt;br&gt;
PPSSPP Emulator allows users to store their progress in an online cloud so that they can access it from any other compatible device using the same account. Feel free to load your favorite games directly on your smartphone with the help of this powerful gaming emulator.&lt;/p&gt;

&lt;p&gt;There is no need to create additional accounts if you want to use this emulator on multiple devices. It allows us to use the same credentials on various devices simultaneously that eventually let us continue from where we left off.&lt;/p&gt;

&lt;p&gt;Easy to use functions&lt;br&gt;
Playing PSP games on your smartphone can be a great experience, but it can be hard to get the perfect settings in emulators. The great thing is that PPSSPP lets you play all of these classic games in one place and you don’t need to download and install each game separately.&lt;/p&gt;

&lt;p&gt;This app will allow you to play all of your favorite Playstation portable games in high definition with added features such as improved graphics and sound effects for an enhanced gaming experience. It also includes support for low-end devices so that players can continue their adventures anytime, anywhere.&lt;/p&gt;

&lt;p&gt;Experience smooth gameplay&lt;br&gt;
If you are a PSP fan, then you must have spent hours playing your favorite games. But as time goes by, the performance of old devices is not up to the standard anymore, and it becomes difficult for users to play their favorite games with stability on their device.&lt;/p&gt;

&lt;p&gt;Here the PPSSPP emulator wins the spot for providing the ultimate gaming experience to the users right from their smartphones. With its smooth gameplay and high fps rate, you will be able to get back your childhood memories while enjoying new adventures at once.&lt;/p&gt;

&lt;p&gt;Mod APK Version of PPSSPP Gold&lt;br&gt;
PPSSPP Gold Apk is a paid (patched) version of the paid PPSSPP Gold – PSP Emulator application where you will get access to all the premium features of this paid application without spending a single penny. This means you can free download and use this awesome emulator without any purchase.&lt;/p&gt;

&lt;p&gt;Patched features&lt;br&gt;
Free Download – PPSSPP Gold is a paid application that you can install on your device after spending $2. However, you can download PPSSPP Gold Apk for free from this post and it will provide all similar features as in the official version.&lt;/p&gt;

&lt;p&gt;Download PPSSPP Gold Apk for Android&lt;br&gt;
PPSSPP is undoubtedly the best Android Emulator for playing PSP games on your device without any hassle. You will be happy to know that this emulator is bug-free, but you can still improve as it is kept open source.&lt;/p&gt;

&lt;p&gt;It can run almost any PSP game at full speed with sound, and it works great both in landscape and portrait modes to take the gameplay experience to the next level. With the PPSSPP emulator installed on your smartphone, you will be able to enjoy hours of gaming without feeling bored and getting tired.&lt;/p&gt;

&lt;p&gt;The patched version of the simulator shared in this post comes with the Gold version unlocked, and you can use it for a lifetime. Also, we regularly update modded applications with new features, and you can get notifications of updates by bookmarking PPSSPPGoldApk.app&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
