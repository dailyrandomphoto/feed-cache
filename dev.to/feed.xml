<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>a little less spam and a lot more action</title>
      <author>Matthew</author>
      <pubDate>Fri, 15 Oct 2021 14:33:59 +0000</pubDate>
      <link>https://dev.to/mtfoley/a-little-less-spam-and-a-lot-more-action-if2</link>
      <guid>https://dev.to/mtfoley/a-little-less-spam-and-a-lot-more-action-if2</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/RI4LTRjrVJhTskGtrb/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/RI4LTRjrVJhTskGtrb/giphy.gif" alt="spam"&gt;&lt;/a&gt; This is a follow up to my post a few days ago &lt;a href="https://dev.to/mtfoley/pr-compliance-action-56m0"&gt;pr-compliance-action&lt;/a&gt;.  I had been excited to see how it would behave on a real project, and yesterday I got my wish!&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/open-sauced/open-sauced"&gt;Open Sauced&lt;/a&gt; project is configured to have &lt;a href="https://github.com/dependabot/"&gt;dependabot&lt;/a&gt; run on Thursdays, and my action contribution had gotten implemented last Friday. &lt;a class="mentioned-user" href="https://dev.to/bdougieyo"&gt;@bdougieyo&lt;/a&gt;
 has the Open Sauced discord setup to monitor the GitHub repo for comments and other events and yesterday we got the regular traffic from &lt;code&gt;dependabot&lt;/code&gt;, but for each PR that it opened, &lt;code&gt;pr-compliance-action&lt;/code&gt; jumped in with a comment of its own! This was because of two things - one was by design, and one was a bug in the design.&lt;/p&gt;

&lt;p&gt;By design, &lt;code&gt;pr-compliance-action&lt;/code&gt; is checking for PRs opened that don't refer to an existing issue in the repo.  Dependabot opens PRs that fit that description.  Also by design, &lt;code&gt;pr-compliance-action&lt;/code&gt; is supposed to ignore &lt;code&gt;dependabot&lt;/code&gt; by default.  The bug was in the workflow file for &lt;code&gt;pr-compliance-action&lt;/code&gt;'s &lt;code&gt;ignore-authors&lt;/code&gt; input, using the wrong style of multiline YAML syntax. Easy fix, one character!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/open-sauced/open-sauced/issues/1234"&gt;Open Sauced Issue #1234&lt;/a&gt;&lt;br&gt;
Loving &lt;a class="mentioned-user" href="https://dev.to/0vortex"&gt;@0vortex&lt;/a&gt;
 issue description:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Steps to reproduce&lt;/strong&gt;&lt;br&gt;
Wait for Thursday&lt;br&gt;
Wait for Dependabot to open a pull request&lt;br&gt;
Dependabot gets greeted to join Discord&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The other &lt;em&gt;opportunity for improvement&lt;/em&gt; that became apparent was that &lt;code&gt;pr-compliance-action&lt;/code&gt; didn't discriminate whether a PR author was a repo owner or a team member.  This was a little more involved a feature to implement than a single character change, but I enjoyed it.  This was a matter of leveraging the GitHub's REST API to list out whether the user's orgs included the org that owns the repo in question.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/open-sauced/open-sauced/issues/1240"&gt;Open Sauced Issue #1240&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Two release tags in one day - is that a reason to celebrate? Well I am :-)&lt;/p&gt;

</description>
      <category>github</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How To Make Filterable Portfolio With React.js</title>
      <author>Ammar Yaser</author>
      <pubDate>Fri, 15 Oct 2021 14:01:44 +0000</pubDate>
      <link>https://dev.to/ammarbasuony/how-to-make-filterable-portfolio-with-reactjs-1p27</link>
      <guid>https://dev.to/ammarbasuony/how-to-make-filterable-portfolio-with-reactjs-1p27</guid>
      <description>&lt;p&gt;In the past, it was not easy to control a web application, if you wanted to do a simple function, it required a lot of code, but now with the advancement of technology, it has become easy to do these functions.&lt;/p&gt;

&lt;p&gt;So, I’m coming today with the easiest way to make a filterable portfolio by categories using React.js&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l2Fov7F6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx68efdlq535q7lxct6n.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l2Fov7F6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx68efdlq535q7lxct6n.gif" alt="Final Result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, you need to install &lt;code&gt;create-react-app&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app my-app
cd my-app
npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you have created a react app :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3FL8IbCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfxeszjjuxt44vvn5182.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3FL8IbCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfxeszjjuxt44vvn5182.png" alt="React App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next step is to create a file called &lt;code&gt;portfolio.js&lt;/code&gt; in &lt;code&gt;src/portfolio/portfolio.js&lt;/code&gt;&lt;br&gt;
And configure it in the &lt;code&gt;App.js&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Portfolio&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./pages/Portfolio/Portfolio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; 
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/portfolio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Portfolio&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Switch&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Router&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have an empty file called &lt;code&gt;portfolio.js&lt;/code&gt; let’s create the component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Portfolio&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Portfolio&lt;/span&gt; &lt;span class="nx"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Portfolio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need to create states to control the the portfolio&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;getAllPortfolio: contain all the portfolio items&lt;/li&gt;
&lt;li&gt;portfolio: contain the current state of portfolio (on category change)&lt;/li&gt;
&lt;li&gt;categories: contain our categories&lt;/li&gt;
&lt;li&gt;selectedCategory: contain the selected category
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Portfolio&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;getAllPortfolio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Project 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devices&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Project 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Accessories&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Project 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devices&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Project 4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tools&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Project 5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fruits&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;portfolio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;

        &lt;span class="na"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devices&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Accessories&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tools&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fruits&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shoes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;selectedCategory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Portfolio&lt;/span&gt; &lt;span class="nx"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Portfolio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now this is the time that we will make these states work together and perform the action, we will write a function &lt;code&gt;filterItems()&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;filterItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;selectedCategory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;portfolio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAllPortfolio&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;selectedCategory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;portfolio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAllPortfolio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, let’s render our elements to the DOM&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;portfolioItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;portfolio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;work&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;));&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;categoriesList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;
                &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectedCat&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;active&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filterItems&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;));&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Portfolio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;all-content&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;section&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Portfolio&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;categories&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;categoriesList&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/section&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;works&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;row&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;portfolioItems&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you like it and learn something new :)&lt;br&gt;
You can follow me on &lt;a href="https://twitter.com/EngAmmarYaser"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.behance.net/ammaryaser"&gt;Behance&lt;/a&gt;, &lt;a href="https://dribbble.com/ammaryaser"&gt;Dribbble&lt;/a&gt;, &lt;a href="https://github.com/ammarbasuony"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 15th October 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 15 Oct 2021 13:58:07 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-15th-october-2021-58k3</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-15th-october-2021-58k3</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-robot"&gt;
  &lt;/a&gt;
  1. Robot
&lt;/h3&gt;

&lt;p&gt;A small functional and immutable Finite State Machine library. Using state machines for your components brings the declarative programming approach to application state.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/matthewp"&gt;
        matthewp
      &lt;/a&gt; / &lt;a href="https://github.com/matthewp/robot"&gt;
        robot
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🤖 A functional, immutable Finite State Machine library
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Robot&lt;/h1&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/matthewp/robot-logo/raw/master/logo/robot-green.png"&gt;&lt;img alt="The Robot logo, with green background." src="https://res.cloudinary.com/practicaldev/image/fetch/s--cjxgOxoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/matthewp/robot-logo/raw/master/logo/robot-green.png" width="40%"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;A small functional and immutable Finite State Machine library. Using state machines for your components brings the declarative programming approach to application state.&lt;/p&gt;

&lt;p&gt;See &lt;a href="https://thisrobot.life/" rel="nofollow"&gt;thisrobot.life&lt;/a&gt; for the main documentation.&lt;/p&gt;

&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;createMachine&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;interpret&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;state&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;transition&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'robot3'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-s1"&gt;machine&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;createMachine&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;off&lt;/span&gt;: &lt;span class="pl-en"&gt;state&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;
    &lt;span class="pl-en"&gt;transition&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'toggle'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;'on'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
  &lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;on&lt;/span&gt;: &lt;span class="pl-en"&gt;state&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;
    &lt;span class="pl-en"&gt;transition&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'toggle'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;'off'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
  &lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;service&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;interpret&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;machine&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-en"&gt;render&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
📚 &lt;a href="https://thisrobot.life/" rel="nofollow"&gt;Documentation&lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Please star &lt;a href="https://github.com/matthewp/robot"&gt;the repository&lt;/a&gt; on GitHub.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/matthewp/robot/issues"&gt;File an issue&lt;/a&gt; if you find a bug. Or better yet...&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/matthewp/robot/compare"&gt;Submit a pull request&lt;/a&gt; to contribute.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Testing&lt;/h2&gt;
&lt;p&gt;Tests are located in the &lt;code&gt;test/&lt;/code&gt; folder. Load &lt;code&gt;test/test.html&lt;/code&gt; in your browser of choice with any HTTP server you like (I use &lt;a href="https://www.npmjs.com/package/http-server" rel="nofollow"&gt;http-server&lt;/a&gt;). Tests are written in &lt;a href="https://qunitjs.com/" rel="nofollow"&gt;QUnit&lt;/a&gt; and are…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/matthewp/robot"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#2-ultimate-saas-template"&gt;
  &lt;/a&gt;
  2. Ultimate SAAS template
&lt;/h3&gt;

&lt;p&gt;Template to quickstart a SAAS business. Stop losing time implementing authentication and payment over and over again.&lt;br&gt;
Focus on what brings value to your customers&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/gmpetrov"&gt;
        gmpetrov
      &lt;/a&gt; / &lt;a href="https://github.com/gmpetrov/ultimate-saas-ts"&gt;
        ultimate-saas-ts
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Template to quickstart a SAAS business
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
🚀⚡️🧑‍💻 &lt;em&gt;Ultimate SAAS template Typescript/Next.js/NextAuth.js/Prisma/Stripe/Tailwindcss/Postgresql&lt;/em&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;My template to quickstart a SAAS project&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Stop losing time implementing authentication and payment over and over again.&lt;br&gt;
Focus on what brings value to your customers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://utlimate-saas-js.vercel.app" rel="nofollow"&gt;https://utlimate-saas-js.vercel.app&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Authentication with NextAuth.js (Own Your Data ✅)
&lt;ul&gt;
&lt;li&gt;Email with magic link&lt;/li&gt;
&lt;li&gt;Github&lt;/li&gt;
&lt;li&gt;Many other oauth providers available &lt;a href="https://next-auth.js.org/configuration/providers/oauth-provider" rel="nofollow"&gt;check their docs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Payment with Stripe
&lt;ul&gt;
&lt;li&gt;Stripe checkout&lt;/li&gt;
&lt;li&gt;Stripe billing portal&lt;/li&gt;
&lt;li&gt;Stripe webhooks (products / prices are synced)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Hosted on &lt;a href="https://vercel.com/" rel="nofollow"&gt;vercel&lt;/a&gt; for free&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Stripe&lt;/h2&gt;
&lt;p&gt;Check the stripe section of this &lt;a href="https://github.com/vercel/nextjs-subscription-payments"&gt;repo&lt;/a&gt; as the steps are very similar&lt;/p&gt;
&lt;h2&gt;
Postgresql&lt;/h2&gt;
&lt;p&gt;A postgresql db is needed to deploy the app.&lt;br&gt;
You can have a very small instance for free on &lt;a href="https://www.heroku.com/pricing#data-services" rel="nofollow"&gt;heroku&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Made with&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Typescript&lt;/li&gt;
&lt;li&gt;Next.js&lt;/li&gt;
&lt;li&gt;NextAuth.js&lt;/li&gt;
&lt;li&gt;Prisma&lt;/li&gt;
&lt;li&gt;Postgresql&lt;/li&gt;
&lt;li&gt;Stripe&lt;/li&gt;
&lt;li&gt;Tailwindcss&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Develop&lt;/h2&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;
&lt;pre&gt;&lt;code&gt;# create .env
cp .env.example .env

# install dependencies
yarn

# Launch pgsql and maildev
yarn docker:start

# migrate and seed the database
yarn prisma:migrate:dev

yarn prisma:seed

#&lt;/code&gt;&lt;/pre&gt;…&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/gmpetrov/ultimate-saas-ts"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-pure"&gt;
  &lt;/a&gt;
  3. Pure
&lt;/h3&gt;

&lt;p&gt;A set of small, responsive CSS modules that you can use in every web project.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pure-css"&gt;
        pure-css
      &lt;/a&gt; / &lt;a href="https://github.com/pure-css/pure"&gt;
        pure
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A set of small, responsive CSS modules that you can use in every web project.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Pure&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://purecss.io/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d_ELmq_w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/449779/5291099/1b554cca-7b03-11e4-9157-53a12d91b34a.png" alt="Pure"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A set of small, responsive CSS modules that you can use in every web project
&lt;a href="http://purecss.io/" rel="nofollow"&gt;http://purecss.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/pure-css/pure/actions/workflows/test.yml/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_hl6f9Tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/pure-css/pure/actions/workflows/test.yml/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/pure-css/pure?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This project is looking for maintainers to support and enhance Pure.css. If you are interested please &lt;a href="https://github.com/pure-css/pure/issues/692"&gt;leave a comment&lt;/a&gt; in the Github issue.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;Pure is meant to be a starting point for every website or web app. We take care
of all the CSS work that every site needs, without making it look cookie-cutter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A responsive grid that can be customized to your needs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A solid base built on &lt;a href="http://necolas.github.io/normalize.css/" rel="nofollow"&gt;Normalize.css&lt;/a&gt; to fix cross-browser compatibility
issues.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consistently styled buttons that work with &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Styles for vertical and horizontal menus, including support for dropdown
menus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Useful form alignments that look great on all screen sizes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Various common table styles.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An extremely minimalist look that is super-easy to customize.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Responsive by default, with a non-responsive option.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extremely small file size: &lt;strong&gt;3.7KB minified&lt;/strong&gt;…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pure-css/pure"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-xtermjs"&gt;
  &lt;/a&gt;
  4. Xterm.js
&lt;/h3&gt;

&lt;p&gt;Xterm.js is a front-end component written in TypeScript that lets applications bring fully-featured terminals to their users in the browser. It's used by popular projects such as VS Code, Hyper and Theia.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/xtermjs"&gt;
        xtermjs
      &lt;/a&gt; / &lt;a href="https://github.com/xtermjs/xterm.js"&gt;
        xterm.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A terminal for the web
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="https://xtermjs.org" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zmmtnLOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/xtermjs/xterm.jslogo-full.png" alt="xterm.js logo"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/xtermjs/xterm.js/_build/latest?definitionId=3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aab827773b4c29af6a1ce732fbd6cf697e6c0767da4b741954610dfe2b6551b6/68747470733a2f2f6465762e617a7572652e636f6d2f787465726d6a732f787465726d2e6a732f5f617069732f6275696c642f7374617475732f787465726d6a732e787465726d2e6a73" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Xterm.js is a front-end component written in TypeScript that lets applications bring fully-featured terminals to their users in the browser. It's used by popular projects such as VS Code, Hyper and Theia.&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Terminal apps just work&lt;/strong&gt;: Xterm.js works with most terminal apps such as &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;vim&lt;/code&gt;, and &lt;code&gt;tmux&lt;/code&gt;, including support for curses-based apps and mouse events.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Performant&lt;/strong&gt;: Xterm.js is &lt;em&gt;really&lt;/em&gt; fast, it even includes a GPU-accelerated renderer.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Rich Unicode support&lt;/strong&gt;: Supports CJK, emojis, and IMEs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Self-contained&lt;/strong&gt;: Requires zero dependencies to work.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Accessible&lt;/strong&gt;: Screen reader and minimum contrast ratio support can be turned on.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;And much more&lt;/strong&gt;: Links, theming, addons, well documented API, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
What xterm.js is not&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Xterm.js is not a terminal application that you can download and use on your computer.&lt;/li&gt;
&lt;li&gt;Xterm.js is not &lt;code&gt;bash&lt;/code&gt;. Xterm.js can be connected to processes like &lt;code&gt;bash&lt;/code&gt; and let you interact with…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/xtermjs/xterm.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-timeagojs"&gt;
  &lt;/a&gt;
  5. timeago.js
&lt;/h3&gt;

&lt;p&gt;timeago.js is a nano library(less than 2 kb) used to format datetime with *** time ago statement. eg: '3 hours ago'.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hustcc"&gt;
        hustcc
      &lt;/a&gt; / &lt;a href="https://github.com/hustcc/timeago.js"&gt;
        timeago.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🕗 ⌛ timeago.js is a tiny(2.0 kb) library used to format date with `*** time ago` statement.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
timeago.js&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;timeago.js&lt;/strong&gt; is a nano library(less than &lt;code&gt;2 kb&lt;/code&gt;)  used to format datetime with &lt;code&gt;*** time ago&lt;/code&gt; statement. eg: '3 hours ago'.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;i18n supported.&lt;/li&gt;
&lt;li&gt;Time &lt;code&gt;ago&lt;/code&gt; and time &lt;code&gt;in&lt;/code&gt; supported.&lt;/li&gt;
&lt;li&gt;Real-time render supported.&lt;/li&gt;
&lt;li&gt;Node and browser supported.&lt;/li&gt;
&lt;li&gt;Well tested.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://timeago.org/" rel="nofollow"&gt;Official website&lt;/a&gt;. React version here: &lt;a href="https://github.com/hustcc/timeago-react"&gt;timeago-react&lt;/a&gt;. Python version here: &lt;a href="https://github.com/hustcc/timeago"&gt;timeago&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/timeago.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc383b1ad54ad359a3547ccf2f497c0f53be1d067e1ab70febf3ba3f49a28014/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f74696d6561676f2e6a732e737667" alt="npm Version"&gt;&lt;/a&gt;
&lt;a href="https://unpkg.com/browse/timeago.js/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fa75caa3951e95b91e1c895c2d4d7ff51eed6530d3c6f4fe979f5ca8052c0d02/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f74696d6561676f2e6a733f6c6162656c3d63646e" alt="unpkg"&gt;&lt;/a&gt;
&lt;a href="https://github.com/hustcc/timeago.js/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8TMUgGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/hustcc/timeago.js/workflows/build/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/hustcc/timeago.js?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d82a7fa79c226f3d4c70ca57f5c6f255804f642ad60415493a85f5a992b94e93/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6875737463632f74696d6561676f2e6a732f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status"&gt;&lt;/a&gt;
&lt;a href="https://unpkg.com/timeago.js/dist/timeago.min.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/689b7ecd44c9454570d566107ca04e666cef53538dfc745484f225a8b07b7678/68747470733a2f2f696d672e626164676573697a652e696f2f68747470733a2f2f756e706b672e636f6d2f74696d6561676f2e6a732f646973742f74696d6561676f2e6d696e2e6a733f636f6d7072657373696f6e3d677a6970" alt="Dist gzip"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/timeago.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd1c62295d31daee7fc79553fec87909faa44220f833e33c78035bdc1b579766/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f74696d6561676f2e6a732e737667" alt="npm Download"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/timeago.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a26620b9f38928eab2d47565c2ae8c900be3cbf61280dad08b93f55ab0cf018e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f74696d6561676f2e6a732e737667" alt="npm License"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Such as&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;just now
12 seconds ago
2 hours ago
3 days ago
3 weeks ago
2 years ago
in 12 seconds
in 3 minutes
in 24 days
in 6 months
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;install&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install timeago.js&lt;/pre&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;import&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-ts position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;format&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;render&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;cancel&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;register&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'timeago.js'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;or import with &lt;code&gt;script&lt;/code&gt; tag in html file and access global variable &lt;code&gt;timeago&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;dist/timeago.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;example&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-ts position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// format the time with locale&lt;/span&gt;
&lt;span class="pl-en"&gt;format&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'2016-06-12'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;'en_US'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
CDN&lt;/h2&gt;
&lt;p&gt;Alternatively to NPM, you can also use a…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/hustcc/timeago.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-github-userscripts"&gt;
  &lt;/a&gt;
  6. GitHub userscripts
&lt;/h3&gt;

&lt;p&gt;Userscripts to add functionality to GitHub.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Mottie"&gt;
        Mottie
      &lt;/a&gt; / &lt;a href="https://github.com/Mottie/GitHub-userscripts"&gt;
        GitHub-userscripts
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Userscripts to add functionality to GitHub
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
GitHub userscripts &lt;a href="https://github.com/Mottie/GitHub-userscripts/tags"&gt;&lt;img src="https://camo.githubusercontent.com/04395de2d591dbcb5a9fea56a10549cdf12d3696164aff31ce41bb8041bdbae6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f4d6f747469652f4769744875622d75736572736372697074732e737667" alt="tag"&gt;&lt;/a&gt; &lt;a href="https://github.com/brunocvcunha/awesome-userscripts#readme"&gt;&lt;img src="https://camo.githubusercontent.com/e5d3197f63169393ee5695f496402136b412d5e3b1d77dc5aa80805fdd5e7edb/68747470733a2f2f617765736f6d652e72652f6d656e74696f6e65642d62616467652e737667" alt="Mentioned in Awesome Userscripts"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Userscripts to add functionality to GitHub.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure you have user scripts enabled in your browser (these instructions refer to the latest versions of the browser):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Firefox - install &lt;a href="https://tampermonkey.net/?ext=dhdg&amp;amp;browser=firefox" rel="nofollow"&gt;Tampermonkey&lt;/a&gt; or &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/greasemonkey/" rel="nofollow"&gt;Greasemonkey&lt;/a&gt; (GM v4+ is &lt;strong&gt;not supported&lt;/strong&gt;!).&lt;/li&gt;
&lt;li&gt;Chrome - install &lt;a href="https://tampermonkey.net/?ext=dhdg&amp;amp;browser=chrome" rel="nofollow"&gt;Tampermonkey&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Opera - install &lt;a href="https://tampermonkey.net/?ext=dhdg&amp;amp;browser=opera" rel="nofollow"&gt;Tampermonkey&lt;/a&gt; or &lt;a href="https://addons.opera.com/en/extensions/details/violent-monkey/" rel="nofollow"&gt;Violent Monkey&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Safari - install &lt;a href="https://tampermonkey.net/?ext=dhdg&amp;amp;browser=safari" rel="nofollow"&gt;Tampermonkey&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Dolphin - install &lt;a href="https://tampermonkey.net/?ext=dhdg&amp;amp;browser=dolphin" rel="nofollow"&gt;Tampermonkey&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;UC Browser - install &lt;a href="https://tampermonkey.net/?ext=dhdg&amp;amp;browser=ucweb" rel="nofollow"&gt;Tampermonkey&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get information or install:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Learn more about the userscript by clicking on the named link. You will be taken to the specific wiki page.&lt;/li&gt;
&lt;li&gt;Install a script directly from GitHub by clicking on the "install" link in the table below.&lt;/li&gt;
&lt;li&gt;Install a script from &lt;a href="https://greasyfork.org/en/users/24847-mottie" rel="nofollow"&gt;GreasyFork&lt;/a&gt; (GF) from the userscript site page&lt;/li&gt;
&lt;li&gt;Or, install the scripts from &lt;a href="https://openuserjs.org/users/Mottie/scripts" rel="nofollow"&gt;OpenUserJS&lt;/a&gt; (OU).
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Userscript Wiki&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/Mottie/Octopatcher/master/src/images/icon16.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YA0MBMRz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Mottie/Octopatcher/master/src/images/icon16.png" alt=""&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;Direct&lt;br&gt;Install&lt;/th&gt;
&lt;th&gt;Sites&lt;/th&gt;
&lt;th&gt;Created&lt;/th&gt;
&lt;th&gt;Updated&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Mottie/GitHub-userscripts/wiki/GitHub-code-colors"&gt;GitHub code colors&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/Mottie/GitHub-userscripts/master/github-code-colors.user.js" rel="nofollow"&gt;install&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://greasyfork.org/en/scripts/18141-github-code-colors" rel="nofollow"&gt;GF&lt;/a&gt; &lt;a href="https://openuserjs.org/scripts/Mottie/GitHub_Code_Colors" rel="nofollow"&gt;OU&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;2016.03.20&lt;/td&gt;
&lt;td&gt;2021.07.21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Mottie/GitHub-userscripts/wiki/GitHub-code-folding"&gt;GitHub code folding&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/Mottie/GitHub-userscripts/master/github-code-folding.user.js" rel="nofollow"&gt;install&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://greasyfork.org/en/scripts/26109-github-code-folding" rel="nofollow"&gt;GF&lt;/a&gt; &lt;a href="https://openuserjs.org/scripts/Mottie/GitHub_Code_Folding" rel="nofollow"&gt;OU&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;2016.12.28&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Mottie/GitHub-userscripts"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#7-dom-to-svg"&gt;
  &lt;/a&gt;
  7. DOM to SVG
&lt;/h3&gt;

&lt;p&gt;Library to convert a given HTML DOM node into an accessible SVG "screenshot".&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/felixfbecker"&gt;
        felixfbecker
      &lt;/a&gt; / &lt;a href="https://github.com/felixfbecker/dom-to-svg"&gt;
        dom-to-svg
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Library to convert a given HTML DOM node into an accessible SVG "screenshot".
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
DOM to SVG&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/dom-to-svg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dea409725780dd9b622658b5e599fa984ef0fe98f62981ba1023f120039c1589/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f646f6d2d746f2d737667" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://github.com/felixfbecker/dom-to-svg/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Io8IejV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/felixfbecker/dom-to-svg/workflows/test/badge.svg%3Fbranch%3Dmain" alt="CI status"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6d507c9bef4a9a1651957ff06edec6ccc9fc7f8b2f678d35400860d7f2dfcf80/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f646f6d2d746f2d737667"&gt;&lt;img src="https://camo.githubusercontent.com/6d507c9bef4a9a1651957ff06edec6ccc9fc7f8b2f678d35400860d7f2dfcf80/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f646f6d2d746f2d737667" alt="license: MIT"&gt;&lt;/a&gt;
&lt;a href="https://github.com/semantic-release/semantic-release"&gt;&lt;img src="https://camo.githubusercontent.com/df1fd6655472a008d21057736be3b95a2bced4e9ea6db7c393e7c960a4d9e450/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302532302546302539462539332541362546302539462539412538302d73656d616e7469632d2d72656c656173652d6531303037392e737667" alt="semantic-release"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Library to convert a given HTML DOM node into an accessible SVG "screenshot".&lt;/p&gt;
&lt;h2&gt;
Demo 📸
&lt;/h2&gt;
&lt;p&gt;Try out the &lt;a href="https://chrome.google.com/webstore/detail/svg-screenshot/nfakpcpmhhilkdpphcjgnokknpbpdllg" rel="nofollow"&gt;SVG Screenshots Chrome extension&lt;/a&gt; which uses this library to allow you to take SVG screenshots of any webpage
You can find the source code at &lt;a href="https://github.com/felixfbecker/svg-screenshots"&gt;github.com/felixfbecker/svg-screenshots&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;documentToSVG&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;elementToSVG&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;inlineResources&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;formatXML&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'dom-to-svg'&lt;/span&gt;

&lt;span class="pl-c"&gt;// Capture the whole document&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;svgDocument&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;documentToSVG&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-smi"&gt;document&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;

&lt;span class="pl-c"&gt;// Capture specific element&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;svgDocument&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;elementToSVG&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-smi"&gt;document&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;querySelector&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'#my-element'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;

&lt;span class="pl-c"&gt;// Inline external resources (fonts, images, etc) as data: URIs&lt;/span&gt;
&lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;inlineResources&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;svgDocument&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;documentElement&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;

&lt;span class="pl-c"&gt;// Get SVG string&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;svgString&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;XMLSerializer&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;serializeToString&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;svgDocument&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;The output can be used as-is as valid SVG or easily passed to other packages to pretty-print or compress.&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Does NOT rely on &lt;code&gt;&amp;lt;foreignObject&amp;gt;&lt;/code&gt; - SVGs will…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/felixfbecker/dom-to-svg"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-serverless-examples"&gt;
  &lt;/a&gt;
  8. Serverless Examples
&lt;/h3&gt;

&lt;p&gt;A collection of boilerplates and examples of serverless architectures built with the Serverless Framework on AWS Lambda, Microsoft Azure, Google Cloud Functions, and more.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/serverless"&gt;
        serverless
      &lt;/a&gt; / &lt;a href="https://github.com/serverless/examples"&gt;
        examples
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Serverless Examples – A collection of boilerplates and examples of serverless architectures built with the Serverless Framework on AWS Lambda, Microsoft Azure, Google Cloud Functions, and more.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="http://www.serverless.com" rel="nofollow"&gt;Website&lt;/a&gt; • &lt;a href="http://eepurl.com/b8dv4P" rel="nofollow"&gt;Email Updates&lt;/a&gt; • &lt;a href="https://gitter.im/serverless/serverless" rel="nofollow"&gt;Gitter&lt;/a&gt; • &lt;a href="http://forum.serverless.com" rel="nofollow"&gt;Forum&lt;/a&gt; • &lt;a href="https://github.com/serverless/meetups"&gt;Meetups&lt;/a&gt; • &lt;a href="https://twitter.com/goserverless" rel="nofollow"&gt;Twitter&lt;/a&gt; • &lt;a href="https://www.facebook.com/serverless" rel="nofollow"&gt;Facebook&lt;/a&gt; • &lt;a href="https://github.com/serverless/examplesmailto:hello@serverless.com"&gt;Contact Us&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Serverless Examples&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/43f186880992b837e07f273fc939134cdd092e447d5f6d83ea70d84d1b47b9a5/68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f6173736574732e736974652e7365727665726c6573732e636f6d2f656d61696c2f736c732d67657474696e672d737461727465642e676966"&gt;&lt;img width="300" src="https://camo.githubusercontent.com/43f186880992b837e07f273fc939134cdd092e447d5f6d83ea70d84d1b47b9a5/68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f6173736574732e736974652e7365727665726c6573732e636f6d2f656d61696c2f736c732d67657474696e672d737461727465642e676966"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A collection of ready-to-deploy &lt;a href="https://github.com/serverless/serverless"&gt;Serverless Framework&lt;/a&gt; services.&lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;

Click to expand
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/serverless/examples#serverless-examples"&gt;Serverless Examples&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/examples#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/examples#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/examples#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/examples#community-examples"&gt;Community Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/serverless/examples#contributing"&gt;Contributing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/examples#adding-example-code"&gt;Adding example code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/examples#adding-a-community-example"&gt;Adding a community example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;p&gt;If you are new to serverless, we recommend getting started with by creating an HTTP API Endpoint in &lt;a href="https://github.com/serverless/examples/tree/master/aws-node-simple-http-endpoint"&gt;NodeJS&lt;/a&gt;, &lt;a href="https://github.com/serverless/examples/tree/master/aws-python-simple-http-endpoint"&gt;Python&lt;/a&gt;, &lt;a href="https://github.com/serverless/examples/tree/master/aws-java-simple-http-endpoint"&gt;Java&lt;/a&gt;, or &lt;a href="https://github.com/serverless/examples/tree/master/aws-golang-simple-http-endpoint"&gt;Golang&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Examples&lt;/h2&gt;
&lt;p&gt;Each example contains a &lt;code&gt;README.md&lt;/code&gt; with an explanation about the service and it's use cases.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Have an example?&lt;/strong&gt; Submit a PR or &lt;a href="https://github.com/serverless/examples/issues"&gt;open an issue&lt;/a&gt;. ⚡️&lt;/p&gt;
&lt;p&gt;To install any of these you can run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;serverless install -u https://github.com/serverless/examples/tree/master/folder-name -n my-project&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Runtime&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;a href="https://github.com/serverless/examples/tree/master/aws-dotnet-rest-api-with-dynamodb/src/DotNetServerless.Lambda"&gt;Aws Dotnet Rest Api With Dynamodb&lt;/a&gt; &lt;br&gt; Reading/Writing operations using .NET Core and DynamoDB&lt;/td&gt;
&lt;td&gt;dotnet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/serverless/examples/tree/master/aws-ffmpeg-layer"&gt;Aws Lambda Layer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;nodeJS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;a href="https://github.com/serverless/examples/tree/master/aws-golang-auth-examples"&gt;Aws Golang Auth Examples&lt;/a&gt; &lt;br&gt; These example shows how to&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/serverless/examples"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-dva"&gt;
  &lt;/a&gt;
  9. dva
&lt;/h3&gt;

&lt;p&gt;React and redux based, lightweight and elm-style framework. (Inspired by elm and choo)&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dvajs"&gt;
        dvajs
      &lt;/a&gt; / &lt;a href="https://github.com/dvajs/dva"&gt;
        dva
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🌱 React and redux based, lightweight and elm-style framework. (Inspired by elm and choo)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;English | &lt;a href="https://github.com/dvajs/dva./README_zh-CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
dva&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/dvajs/dva" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b0b4026c2fdedcc3e1ec68ce2140b2c2b5c75c5efc1a9c24d0333d068869a12b/68747470733a2f2f636f6465636f762e696f2f67682f6476616a732f6476612f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/dvajs/dva" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c6e91e4bc7ea4913489284a5a58838ca7d0db63dcf72034bb7ff1c6c5d211e1/68747470733a2f2f636972636c6563692e636f6d2f67682f6476616a732f6476612e7376673f7374796c653d737667" alt="CircleCI"&gt;&lt;/a&gt;
&lt;a href="https://npmjs.org/package/dva" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8a4ef8e9e71a6c81971714419b8ab55ef24411b6369270e72ea9608abca8bc80/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6476612e7376673f7374796c653d666c6174" alt="NPM version"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/dvajs/dva" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f6a61d53fa32fbfdc5e4bf26e7241cef6517d3acf48a83b7a0947360bc3ff0ef/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6476616a732f6476612e7376673f7374796c653d666c6174" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/r/dvajs/dva" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/271599b4dcfca3f867528b4049b89b6449ae23e867e707370e44724235ac7c40/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6476616a732f6476612e7376673f7374796c653d666c6174" alt="Coverage Status"&gt;&lt;/a&gt;
&lt;a href="https://npmjs.org/package/dva" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ffad61a8f870d4f5d33662d413ef1d17b2e60473c8675b98298368dfc3c00e1/687474703a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f6476612e7376673f7374796c653d666c6174" alt="NPM downloads"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/dvajs/dva" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aeb47c8425eff9cbe295a65adf1a5efd0ffe33e0430c83efa1bcf0316a7d8186/68747470733a2f2f64617669642d646d2e6f72672f6476616a732f6476612f7374617475732e737667" alt="Dependencies"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/dvajs/Lobby?utm_source=share-link&amp;amp;utm_medium=link&amp;amp;utm_campaign=share-link" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/06b88b12cb6c365c5f14f524be8b89f00e46fbfd2dc1486e488d5099c59aff29/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f6476616a732f4c6f6262792e7376673f7374796c653d666c6174" alt="Join the chat at https://gitter.im/dvajs/Lobby"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lightweight front-end framework based on &lt;a href="https://github.com/reactjs/redux"&gt;redux&lt;/a&gt;, &lt;a href="https://github.com/redux-saga/redux-saga"&gt;redux-saga&lt;/a&gt; and &lt;a href="https://github.com/ReactTraining/react-router"&gt;react-router&lt;/a&gt;. (Inspired by &lt;a href="http://elm-lang.org/" rel="nofollow"&gt;elm&lt;/a&gt; and &lt;a href="https://github.com/yoshuawuyts/choo"&gt;choo&lt;/a&gt;)&lt;/p&gt;

&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Easy to learn, easy to use&lt;/strong&gt;: only 6 apis, very friendly to redux users, and &lt;strong&gt;API reduce to 0 when &lt;a href="https://umijs.org/guide/with-dva.html" rel="nofollow"&gt;use with umi&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Elm concepts&lt;/strong&gt;: organize models with &lt;code&gt;reducers&lt;/code&gt;, &lt;code&gt;effects&lt;/code&gt; and &lt;code&gt;subscriptions&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Support HMR&lt;/strong&gt;: support HMR for components, routes and models with &lt;a href="https://github.com/dvajs/babel-plugin-dva-hmr"&gt;babel-plugin-dva-hmr&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Plugin system&lt;/strong&gt;: e.g. we have &lt;a href="https://github.com/dvajs/dva/tree/master/packages/dva-loading"&gt;dva-loading&lt;/a&gt; plugin to handle loading state automatically&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Demos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://stackblitz.com/edit/dva-example-count" rel="nofollow"&gt;Count&lt;/a&gt;: Simple count example&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dvajs/dva/tree/master/examples/user-dashboard"&gt;User Dashboard&lt;/a&gt;: User management dashboard&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ant-design/ant-design-pro"&gt;AntDesign Pro&lt;/a&gt;：(&lt;a href="https://preview.pro.ant.design/" rel="nofollow"&gt;Demo&lt;/a&gt;)，out-of-box UI solution for enterprise applications&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dvajs/dva-hackernews"&gt;HackerNews&lt;/a&gt;:  (&lt;a href="https://dvajs.github.io/dva-hackernews/" rel="nofollow"&gt;Demo&lt;/a&gt;)，HackerNews Clone&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/zuiidea/antd-admin"&gt;antd-admin&lt;/a&gt;: (&lt;a href="http://antd-admin.zuiidea.com/" rel="nofollow"&gt;Demo&lt;/a&gt;)，A admin dashboard application demo built upon Ant Design and Dva.js&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sorrycc/github-stars"&gt;github-stars&lt;/a&gt;: (&lt;a href="http://sorrycc.github.io/github-stars/#/?_k=rmj86f" rel="nofollow"&gt;Demo&lt;/a&gt;)，Github star management application&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/yvanwangl/AccountSystem.git"&gt;Account System&lt;/a&gt;: A small inventory management system&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nihgwu/react-native-dva-starter"&gt;react-native-dva-starter&lt;/a&gt;: react-native example integrated dva and react-navigation&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Quick&lt;/h2&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/dvajs/dva"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-pigeon-maps"&gt;
  &lt;/a&gt;
  10. Pigeon Maps
&lt;/h3&gt;

&lt;p&gt;ReactJS Maps without external dependencies&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mariusandra"&gt;
        mariusandra
      &lt;/a&gt; / &lt;a href="https://github.com/mariusandra/pigeon-maps"&gt;
        pigeon-maps
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ReactJS Maps without external dependencies
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Pigeon Maps - ReactJS maps without external dependencies&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/pigeon-maps" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/181bb9ccd4fd5efa128c73430a6d62cb6374a180310c97874a43a21ba02bdb9f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f706967656f6e2d6d6170732e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=pigeon-maps" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4516a1d7edb3573aa4e67e616abcfa6d36ef291a1244219eae49100b711d3e1c/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e2f706967656f6e2d6d617073" alt="minified"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=pigeon-maps" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1a0d5dfa6cd3108e377f35db2aaa024fcdc55c4aacae9c27547bdd3b6d36e9e2/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f706967656f6e2d6d617073" alt="minified + gzipped"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Demo: &lt;a href="https://pigeon-maps.js.org/" rel="nofollow"&gt;https://pigeon-maps.js.org/&lt;/a&gt; (using maps from MapTiler, OSM and Stamen)&lt;/p&gt;
&lt;h2&gt;
What is it?&lt;/h2&gt;
&lt;p&gt;Are you tired of waiting 3 seconds to parse 200kb of Google Maps JavaScript just to display a few tiles and a marker? 140kb of minified Leaflet too much?&lt;/p&gt;
&lt;p&gt;Welcome to the club!&lt;/p&gt;
&lt;p&gt;This project aims to provide a performance-first React-centric extendable map engine.&lt;/p&gt;
&lt;p&gt;We're currently at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bundlephobia.com/result?p=pigeon-maps" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4516a1d7edb3573aa4e67e616abcfa6d36ef291a1244219eae49100b711d3e1c/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e2f706967656f6e2d6d617073" alt="minified"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bundlephobia.com/result?p=pigeon-maps" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1a0d5dfa6cd3108e377f35db2aaa024fcdc55c4aacae9c27547bdd3b6d36e9e2/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f706967656f6e2d6d617073" alt="minified + gzipped"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implemented:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Show tiles&lt;/li&gt;
&lt;li&gt;Arbitrary overlays (markers, etc)&lt;/li&gt;
&lt;li&gt;Move the map by dragging&lt;/li&gt;
&lt;li&gt;Move the map by touch on mobile&lt;/li&gt;
&lt;li&gt;Zooming with the scroll wheel&lt;/li&gt;
&lt;li&gt;Zooming by touch&lt;/li&gt;
&lt;li&gt;Fractional zooming (e.g. to level 12.2)&lt;/li&gt;
&lt;li&gt;Zoom without flickering (keep old tiles until new ones load)&lt;/li&gt;
&lt;li&gt;Smooth animated zooming&lt;/li&gt;
&lt;li&gt;Slide when dragging and letting go&lt;/li&gt;
&lt;li&gt;Event handling (clicks, etc)&lt;/li&gt;
&lt;li&gt;Double click and double tap zooming&lt;/li&gt;
&lt;li&gt;Option to block dragging with one finger and mouse wheel scrolling without holding meta key&lt;/li&gt;
&lt;li&gt;Enable/disable touch and mouse events as…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mariusandra/pigeon-maps"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/louislam/uptime-kuma"&gt;Uptime Kuma&lt;/a&gt; +1,991 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/playwright"&gt;Playwright&lt;/a&gt; +685 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +979 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +641 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +640 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/eBay/nice-modal-react"&gt;Nice Modal React&lt;/a&gt; +63%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/louislam/uptime-kuma"&gt;Uptime Kuma&lt;/a&gt; +38%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/timc1/kbar"&gt;kbar&lt;/a&gt; +36%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/KATT/envsafe"&gt;envsafe&lt;/a&gt; +27%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bregman-arie/devops-resources"&gt;DevOp Resources&lt;/a&gt; +23%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +7,348 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +4,285 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/freeCodeCamp/freeCodeCamp"&gt;Free Code Camp&lt;/a&gt; +3,932 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/louislam/uptime-kuma"&gt;Uptime Kuma&lt;/a&gt; +3,882 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +3,602 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/eBay/nice-modal-react"&gt;Nice Modal React&lt;/a&gt; +138%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/louislam/uptime-kuma"&gt;Uptime Kuma&lt;/a&gt; +118%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/picocss/pico"&gt;Pico&lt;/a&gt; +73%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; +71%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/CHEWCHEWW/react-web-editor"&gt;React Web Editor&lt;/a&gt; +66%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>7 HTML attribute you should know right now!</title>
      <author>CodeOz</author>
      <pubDate>Fri, 15 Oct 2021 13:52:52 +0000</pubDate>
      <link>https://dev.to/codeoz/7-html-attribute-you-should-know-right-now-dfn</link>
      <guid>https://dev.to/codeoz/7-html-attribute-you-should-know-right-now-dfn</guid>
      <description>&lt;p&gt;If you are web developper you are using HTML for sure! You are using a lot of HTML attribute, but today you will learn some news!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bdo"&gt;
  &lt;/a&gt;
  bdo
&lt;/h3&gt;

&lt;p&gt;The  HTML element overrides the current directionality of text, so that the text within is rendered in a different direction ! You can use &lt;code&gt;dir&lt;/code&gt; option to indicate this direction.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ltr&lt;/code&gt; -&amp;gt; Indicates that the text should go in a left-to-right direction&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;rtl&lt;/code&gt; -&amp;gt; Indicates that the text should go in a right-to-left direction.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;bdo&lt;/span&gt; &lt;span class="na"&gt;dir=&lt;/span&gt;&lt;span class="s"&gt;"ltr"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This text will go left to right.&lt;span class="nt"&gt;&amp;lt;/bdo&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;bdo&lt;/span&gt; &lt;span class="na"&gt;dir=&lt;/span&gt;&lt;span class="s"&gt;"rtl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This text will go right to left.&lt;span class="nt"&gt;&amp;lt;/bdo&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mWYm3pk9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rc62txfwj59jns66pg6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mWYm3pk9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rc62txfwj59jns66pg6.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kbd"&gt;
  &lt;/a&gt;
  kbd
&lt;/h3&gt;

&lt;p&gt;If you need to show shortcut to your user, you should use &lt;code&gt;kbd&lt;/code&gt;! It represents a span of inline text denoting textual user input from a keyboard.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Please press &lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;Ctrl&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt; + &lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;Shift&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt; + &lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;R&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt; to re-render a browser page.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EDYkkLCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0y7vjkz864o6evzfsa8c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EDYkkLCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0y7vjkz864o6evzfsa8c.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#details"&gt;
  &lt;/a&gt;
  details
&lt;/h3&gt;

&lt;p&gt;The  HTML element creates a disclosure widget in which information is visible only when the widget is toggled into an "open" state. A summary or label must be provided using the  element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;details&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;Details&lt;span class="nt"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    Something small enough to escape casual notice.
&lt;span class="nt"&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7eG4R_Qw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpdg7kvka9nngdw8jcns.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7eG4R_Qw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpdg7kvka9nngdw8jcns.gif" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contenteditable"&gt;
  &lt;/a&gt;
  contenteditable
&lt;/h3&gt;

&lt;p&gt;The contenteditable attribute specifies whether the content of an element is editable or not!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;contenteditable=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is an editable paragraph.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ej8j17AA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9v4iuq2j0gmby2uxlpn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ej8j17AA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9v4iuq2j0gmby2uxlpn.gif" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#abbr"&gt;
  &lt;/a&gt;
  abbr
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt; tag defines an abbreviation or an acronym, like "HTML", "CSS" and show the complete title when hover this tag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;You can use &lt;span class="nt"&gt;&amp;lt;abbr&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;"Cascading Style Sheets"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;CSS&lt;span class="nt"&gt;&amp;lt;/abbr&amp;gt;&lt;/span&gt; to style your &lt;span class="nt"&gt;&amp;lt;abbr&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;"HyperText Markup Language"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;HTML&lt;span class="nt"&gt;&amp;lt;/abbr&amp;gt;&lt;/span&gt;.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--51BKdzsq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gc1l15vbmhgpca25hul.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--51BKdzsq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gc1l15vbmhgpca25hul.gif" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#translate"&gt;
  &lt;/a&gt;
  translate
&lt;/h3&gt;

&lt;p&gt;Indicate to HTML is this content need to be translated or not (by google translate for example).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;translate=&lt;/span&gt;&lt;span class="s"&gt;"no"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;CodeOz&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#color-picker"&gt;
  &lt;/a&gt;
  color picker
&lt;/h3&gt;

&lt;p&gt;Yes as you just learn, you can easily create a color picker! 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2K8kYxVN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xuoaorxcj8ogrmbnpcmk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2K8kYxVN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xuoaorxcj8ogrmbnpcmk.gif" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;I hope you like this reading!&lt;/p&gt;

&lt;p&gt;🎁 You can get my new book &lt;code&gt;Underrated skills in javascript, make the difference&lt;/code&gt; for FREE if you follow me on &lt;a href="https://twitter.com/code__oz"&gt;Twitter&lt;/a&gt; and MP me 😁&lt;/p&gt;

&lt;p&gt;Or get it &lt;a href="https://codeoz.gumroad.com/l/RXLYp"&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎁 &lt;a href="https://www.getrevue.co/profile/code__oz"&gt;MY NEWSLETTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;☕️ You can &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;SUPPORT MY WORKS&lt;/a&gt; 🙏&lt;/p&gt;

&lt;p&gt;🏃‍♂️ You can follow me on 👇&lt;/p&gt;

&lt;p&gt;🕊 Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👨‍💻 Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can mark 🔖 this article!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Make these 11 Projects (10 JS+1 React) to learn JavaScript and React</title>
      <author>The Nerdy Dev</author>
      <pubDate>Fri, 15 Oct 2021 13:21:55 +0000</pubDate>
      <link>https://dev.to/thenerdydev/make-these-11-projects-10-js1-react-to-learn-javascript-and-react-449a</link>
      <guid>https://dev.to/thenerdydev/make-these-11-projects-10-js1-react-to-learn-javascript-and-react-449a</guid>
      <description>&lt;p&gt;Hey everyone 👋🏻,&lt;/p&gt;

&lt;p&gt;In this article, let us see what 11 Projects I have for you that you can build for learning both &lt;strong&gt;JavaScript&lt;/strong&gt; and &lt;strong&gt;React.js&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2l6_s71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odatp2kxij5cvoukamtz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2l6_s71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odatp2kxij5cvoukamtz.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#projects-that-you-can-build-"&gt;
  &lt;/a&gt;
  Projects that you can build :
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#project-1-creating-a-modal"&gt;
  &lt;/a&gt;
  Project 1 : Creating a Modal
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-2-creating-a-tabs-system"&gt;
  &lt;/a&gt;
  Project 2 : Creating a Tabs System
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-3-creating-a-range-slider"&gt;
  &lt;/a&gt;
  Project 3 : Creating a Range Slider
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-4-creating-a-slideshow"&gt;
  &lt;/a&gt;
  Project 4 : Creating a Slideshow
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-5-creating-a-salary-calculator"&gt;
  &lt;/a&gt;
  Project 5 : Creating a Salary Calculator
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-6-creating-a-scroll-indicator"&gt;
  &lt;/a&gt;
  Project 6 : Creating a Scroll Indicator
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-7-implementing-infinite-scroll-feature-using-intersection-observer-api"&gt;
  &lt;/a&gt;
  Project 7 : Implementing Infinite Scroll Feature using Intersection Observer API.
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-8-playing-with-text"&gt;
  &lt;/a&gt;
  Project 8 : Playing with Text
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-9-creating-a-custom-search-filter"&gt;
  &lt;/a&gt;
  Project 9 : Creating a Custom Search Filter
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-10-creating-a-sticky-navbar"&gt;
  &lt;/a&gt;
  Project 10: Creating a Sticky Navbar
&lt;/h2&gt;

&lt;p&gt;To get a description of these projects, please check out this article : &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/10-javascript-projects-every-beginner-must-try-p19" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;⚡10 JavaScript Projects Every Beginner Should Try &lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Jul 15 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Here is the video where you can together create these projects with me : &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KTGfHmyje5A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Once you are done building these 10 Projects, it's time to learn React. I also have a video on same where we build an &lt;strong&gt;Exercise Planner&lt;/strong&gt; application from scratch using React.js. There I explain all the concepts required to build that simple with thorough explanations. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-project-building-an-exercise-planner-application-using-reactjs-react-router-and-react-hooks"&gt;
  &lt;/a&gt;
  React Project : Building an Exercise Planner Application using React.js, React Router and React Hooks.
&lt;/h2&gt;

&lt;p&gt;Here is the video where you can together create these projects with me : &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iqewbHLKkQk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So this is it for this article. Thanks for reading. &lt;br&gt;
&lt;strong&gt;Don't forget to leave a like if you loved the article. Also share it with your friends and colleagues.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Apr 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Looking to learn React.js with one Full &lt;strong&gt;Project&lt;/strong&gt;, check this out : &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/learn-react-with-one-big-project-notes-included-demo-and-video-link-4fe5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn React with one BIG Project [NOTES included] - Demo and Video Link&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Jun 10 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#100daysofcode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>La razón del por qué renuncie a mi trabajo.</title>
      <author>Carlos Muñoz Bustamante</author>
      <pubDate>Fri, 15 Oct 2021 13:13:53 +0000</pubDate>
      <link>https://dev.to/sarcowww/la-razon-del-por-que-renuncie-a-mi-trabajo-4oed</link>
      <guid>https://dev.to/sarcowww/la-razon-del-por-que-renuncie-a-mi-trabajo-4oed</guid>
      <description>&lt;p&gt;Desde hace mas de 6 años que soy consultor de tecnologías SAP, donde tuve que enfrentar diferentes retos, donde conocí gente maravillosa y pues donde pude practicar lo que era mi principal lenguaje de programación que hasta el día de hoy le tengo cariño, el cual es Javascript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#como-empez%C3%B3-esta-historia"&gt;
  &lt;/a&gt;
  Como empezó esta historia.
&lt;/h2&gt;

&lt;p&gt;Por allá en el año 2016 era un estudiante egresado de la carrera de Analista Programador sin nada de experiencia y buscando opciones para poder comenzar mi carrera. En eso dentro del portal de busquedas laborales de mi instituto encontré una oferta donde se requerian Ingenieros en informática, o la tipica frase, carrera a fín para poder ingresar a la empresa como trainee. Pues a mi parecer era una excelente oferta y decidí postular.&lt;/p&gt;

&lt;p&gt;A eso de unos días me llamaron a mi celular diciendome que si era posible acudir a una entrevista psicologica a la cual accedi ir de manera inmediata (cabe destacar que en ese entonces yo me encontraba en Santiago de Chile desempleado y sin dinero, por lo que me veia en la necesidad de trabajar en cualquier otra cosa para poder subsistir, fue un tiempo dificil jaja). Una vez que acudí a la entrevista, pues fue bastante rapido todo y sencillo, no era algo tan loco como en otras empresas, posterior a eso me llamaron nuevamente para otra entrevista, pero esta vez era con un lider de área el cual me preguntó bastantes cosas sobre programación por ejemplo que lenguajes sabia, con cual me sentia mas comodo y cosas asi mas no me hizo realizar ninguna actividad practica, con eso concluyó esa entrevista. A los días despues me vuelven a llamar para otra entrevista, ahora para otra área dentro de la empresa (eso me dió a entender que al señor no le agrade o quizas que otra cosa) la cual era el área de seguridad de una plataforma que en mi vida habia oido pero que esa misma cambiaria mi vida para siempre, &lt;a href="https://www.sap.com/"&gt;SAP&lt;/a&gt;. el área de seguridad era bastante orientada a ser algo mas funcional que de programación, no me motivaba mucho a estar ahi por el hecho de que claro, no iba a poder realizar lo que yo queria hacer, programar, esa entrevista se dió por concluida. A los días nuevamente me llamaron para otra entrevista en otra área (en este punto yo ya pensaba en que no sabian donde ubicarme y hasta yo me empecé a cuestionar mi existencia) y conocí a quien sería mi mentor, Don Yerlan, un gran programador, pero algo interesante habia sucedido, yo siempre crei que con lo que aprendí en el instituto me bastaba y que esa era la verdad del universo &lt;strong&gt;&lt;em&gt;(alto idiota fuí)&lt;/em&gt;&lt;/strong&gt; pero no, tuve que aprender un nuevo lenguaje el cual hasta el día de hoy detesto pero fue con lo que empecé, el gran y majestuoso &lt;a href="https://es.wikipedia.org/wiki/ABAP"&gt;ABAP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pasaron los días y me llamaron para decirme que había quedado en el trabajo, supieran la felicidad que sentí en ese momento, un joven desempleado, recien egresado que había encontrado su primer trabajo en lo que estudió.&lt;/p&gt;

&lt;p&gt;Ingresé a esta empresa (la cual se me olvidó comentar y es algo importante, esta empresa era una consultora multinacional, omitiré el nombre solo por si a caso) y ahi comenzó mi carrera, me entregaron un libro sobre este desconocido lenguaje para mi ABAP, era practicamente una biblia de 900 páginas el cual no terminé de leer por la sencilla razón de que no tenia tiempo para leerlo, me enviaron a trabajar de una vez. Pero aqui viene lo interesante, en ese entonces esta dichosa plataforma &lt;strong&gt;&lt;em&gt;SAP&lt;/em&gt;&lt;/strong&gt;, estaba haciendo cosas nuevas, estaban dejando un poco de lado lo tradicional para ellos, en ese entonces ABAP puro y duro, dando paso a nuevas herramientas en las cuales me pidieron que me empezace a involucrar, ahi fue donde conocí &lt;a href="https://www.sap.com/latinamerica/products/fiori.html"&gt;SAP FIORI&lt;/a&gt; una nueva UX para SAP el cual revolucionaria todo lo que era experiencia usuario (los que conocen SAP y creo que estarán de acuerdo conmigo, es un &lt;a href="https://es.wikipedia.org/wiki/Sistema_de_planificaci%C3%B3n_de_recursos_empresariales"&gt;ERP&lt;/a&gt; horrible en cuanto a experiencia usuaria) y lo mas genial de todo esto es que gracias a eso aprendería un nuevo lenguaje y dejaria de lado lo ABAP por un buen tiempo, el cual fue &lt;strong&gt;&lt;em&gt;Javascript&lt;/em&gt;&lt;/strong&gt;, por que sí, SAP Fiori funcionaba con Javascript, con un framework que muy poca gente conoce pero que SAP adoptó ve tu a saber por qué, el cual era &lt;a href="https://openui5.org/"&gt;OpenUI5&lt;/a&gt; un framework que nos ayudaria a armar tanto la interfaz como la programación misma de las aplicaciones que se pudieran requerir. Fueron unos duros años, no había documentación, no había mucha información al respecto y la que había estaba esparcida por varios lados, hasta tuve que realizar consultas en StackOverflow ya que no se podía encontrar mucha información sobre UI5 en general (el link de esa pregunta esta &lt;a href="https://stackoverflow.com/questions/42441931/how-to-recover-a-error-message-from-odata-response-sapui5"&gt;aquí&lt;/a&gt; es la pregunta mas famosa que tengo en StackOverflow, 15k de visitas no es menor) con ese framework yo me empezaría a hacer conocido en el mundo &lt;strong&gt;&lt;em&gt;SAP&lt;/em&gt;&lt;/strong&gt; ya que al menos aca en Chile, no es muy grande.&lt;/p&gt;

&lt;p&gt;Para no seguir alargando esta historia, pues lo que paso después era todo muy repetitivo, pasaron los años, fui creciendo como profesional, pero llegó un punto en el que empecé a sentir que la consultoria no era para mi, empecé a enfermarme seguido, dolores de colon, estress, la vida ajetreada de la ciudad, todo eso empezó a pasarme la cuenta. En el periodo de 2016 a 2021 cambie de trabajo 2 veces buscando nuevas oportunidades y menos carga laboral, atender muchos clientes a la vez es algo agotador y claro, es algo en lo cual yo me sentía capaz pero que a largo plazo me pasó la cuenta.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cuales-fueron-las-razones-de-dejar-mi-trabajo"&gt;
  &lt;/a&gt;
  Cuales fueron las razones de dejar mi trabajo.
&lt;/h2&gt;

&lt;p&gt;Hay dos razones por la cual dejé mi trabajo, una médica y otra profesional, mas abajo explicaré ambas.&lt;/p&gt;

&lt;p&gt;En estos 2 ultimos años por mi cuenta estuve indagando en lo que era programación para dispositivos moviles, aprendí algo de React Native y pues lo empecé a poner en práctica, es más, en mi ultimo trabajo pude lograr hacer una aplicación movil en React Native con EXPO gracias al curso de Nicolás Schurmann, estaba un poco desactualizado, pero nada que no se pudiera solventar buscando un poco en la documentación de EXPO o de React Native. En este proceso fue donde me empecé a enamorar de la programación movil, es algo para mi totalmente nuevo y algo que me está llamando tanto la atención que empecé a leer al respecto, &lt;a href="https://www.amazon.com/-/es/Dawn-Griffiths/dp/1491996692"&gt;Head First Kotlin&lt;/a&gt;, si estas interesado en aprender programación movil nativa, te recomiendo ese libro al 100%, no te enseña Android, pero si las bases necesarias para entender el lenguaje Kotlin y poder aplicarlo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recomendar%C3%ADa-a-alguien-dejar-su-trabajo-por-aperender-algo-nuevo"&gt;
  &lt;/a&gt;
  ¿Recomendaría a alguien dejar su trabajo por aperender algo nuevo?.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Por supuesto que no&lt;/em&gt;&lt;/strong&gt;, una parte que no conté en la breve historia de mi carrera mas arriba, es que todo este estress me llevó a acudir a un psiquiatra, por recomendación de este me vi en la obligación de renunciar, si pueden mantener su trabajo y estudiar algo al mismo tiempo haganlo, pero jamás dejen su trabajo si no tienen alguna alternativa en su bolsillo.&lt;/p&gt;

</description>
      <category>android</category>
      <category>kotlin</category>
      <category>discuss</category>
      <category>career</category>
    </item>
    <item>
      <title>How to parse an Excel file in Node.js</title>
      <author>coder4life</author>
      <pubDate>Fri, 15 Oct 2021 13:10:54 +0000</pubDate>
      <link>https://dev.to/coder4_life/how-to-parse-an-excel-file-in-nodejs-hfh</link>
      <guid>https://dev.to/coder4_life/how-to-parse-an-excel-file-in-nodejs-hfh</guid>
      <description>&lt;p&gt;This is a short introduction to reading and parsing Excel (xls, xlsx) files in Node.js. We will be using the npm module "xlsx" (SheetJS) for this example.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/7E5fjN4nwpk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What's So Great About Next.js?</title>
      <author>Brian Rinaldi</author>
      <pubDate>Fri, 15 Oct 2021 12:50:56 +0000</pubDate>
      <link>https://dev.to/launchdarkly/whats-so-great-about-nextjs-21ji</link>
      <guid>https://dev.to/launchdarkly/whats-so-great-about-nextjs-21ji</guid>
      <description>&lt;p&gt;If you're working in web development today, chances are that you're aware of, curious about, or perhaps even used &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Next.js is what's often referred to as a "meta framework," in that it is a framework built upon one or more other frameworks. In the case of Next.js, it is built upon &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As React became the most widely adopted web framework, encompassing over 40% of developers in 2021 &lt;a href="https://www.statista.com/statistics/1124699/worldwide-developer-survey-most-used-frameworks-web/"&gt;according to Statista&lt;/a&gt;, Next.js adoption has also grown dramatically. &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt;, the company that maintains Next.js, &lt;a href="https://venturebeat.com/2021/06/23/vercel-secures-102m-to-accelerate-next-js-adoption/"&gt;cites&lt;/a&gt; over 6 million downloads since its launch and 50% usage growth in the top ten-thousand websites for the period of October 2020 to June 2021 alone.&lt;/p&gt;

&lt;p&gt;A big part of the reason that developers and companies are choosing Next.js for their web application development is because it is a full-stack framework (as in, it handles both the frontend and backend of your application) and offers support for a variety of rendering methods---even mixing and matching those methods as needed. &lt;/p&gt;

&lt;p&gt;Let's take a brief look at how Next.js has evolved and, in particular, how the rendering methods within Next.js have evolved.&lt;/p&gt;

&lt;p&gt;And if you want a more detailed exploration of how to combine Next.js and &lt;a href="https://launchdarkly.com/"&gt;LaunchDarkly&lt;/a&gt; feature management, check out my new guide, "&lt;a href="https://docs.launchdarkly.com/guides/platform-specific/nextjs"&gt;Using LaunchDarkly with Next.js&lt;/a&gt;."&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-evolution-of-nextjs"&gt;
  &lt;/a&gt;
  The Evolution of Next.js
&lt;/h2&gt;

&lt;p&gt;Today, Next.js is frequently associated with the &lt;a href="https://jamstack.org/"&gt;Jamstack&lt;/a&gt; methodology for developing web applications. When it was &lt;a href="https://vercel.com/blog/next"&gt;launched in early 2016&lt;/a&gt;, however, it was originally just for server-side rendered apps. At the time, what made Next.js unique was that it handled both the frontend and the backend of your application and both were built using JavaScript and React. This allows developers to build full-stack applications using a single language and toolset while delivering an improved user experience that typically results in a faster initial render of the page.&lt;/p&gt;

&lt;p&gt;Next.js also gained popularity because it simplified building full-stack applications using React. It provided automatic routing for pages and built-in methods for server-side rendering (SSR) and data fetching. All of these features still exist in Next.js today, but many new features have been added and the existing ones have been dramatically enhanced. In particular, Next.js now handles multiple types of rendering methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rendering-methods-in-nextjs"&gt;
  &lt;/a&gt;
  Rendering Methods in Next.js
&lt;/h2&gt;

&lt;p&gt;As we noted, Next.js started as simply a framework for server-side rendering (SSR) As its capabilities have expanded, even what SSR means in Next.js has changed. Let's look at the various rendering options available in Next.js today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serverside-rendering-ssr"&gt;
  &lt;/a&gt;
  Server-side rendering (SSR)
&lt;/h3&gt;

&lt;p&gt;In SSR, content is generated on the server (which is Node.js) for every single request and then sent to the browser. Starting with the release of &lt;a href="https://nextjs.org/blog/next-8"&gt;Next.js 8&lt;/a&gt;, every server-rendered page became a serverless function (also known as a lambda). For instance, when we call the page at &lt;code&gt;/about&lt;/code&gt;, Next.js calls a serverless function that specifically handles returning the backend data necessary to render the "About" page. The data fetching is encapsulated in the &lt;code&gt;getServerSideProps()&lt;/code&gt; method in Next.js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerendering"&gt;
  &lt;/a&gt;
  Pre-rendering
&lt;/h3&gt;

&lt;p&gt;With pre-rendering---also called static rendering or static site generation (SSG)---the page is rendered during a build that occurs before the application is deployed, usually as part of a CI/CD build process. This was originally added as an option in &lt;a href="https://auth0.com/blog/nextjs-3-release-what-is-new/"&gt;Next.js 3&lt;/a&gt; but the process was very manual. As of &lt;a href="https://nextjs.org/blog/next-6"&gt;Next.js 6&lt;/a&gt;, routes became automatic for both SSR and SSG pages (though dynamic routes still need to provide paths programmatically via the &lt;code&gt;getStaticPaths()&lt;/code&gt; method). &lt;a href="https://nextjs.org/blog/next-9"&gt;Next.js 9&lt;/a&gt; introduced a feature called "Automatic Static Optimization" that automatically determines if a page can be rendered as static. The ability to mix server-side rendered pages/routes and pre-rendered pages/routes was unique to Next.js and has since been adopted by other tools frameworks like &lt;a href="https://www.gatsbyjs.com/"&gt;Gatsby&lt;/a&gt; and &lt;a href="https://nuxtjs.org/"&gt;Nuxt&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deferred-rendering-isr"&gt;
  &lt;/a&gt;
  Deferred rendering (ISR)
&lt;/h3&gt;

&lt;p&gt;Within Next.js, deferred rendering is referred to as Incremental Static Regeneration (ISR), which was initially introduced in &lt;a href="https://nextjs.org/blog/next-9-4"&gt;version 9.4&lt;/a&gt;. It is similar to pre-rendering, though the requested page isn't rendered during the initial build but instead when it is first requested by a user. Subsequent users will see the pre-rendered version of the page either until a new build occurs or until an optional cache timeout has passed. The goal of ISR is to eliminate the extremely long build time that large sites could often face by allowing the developer to defer building lower-trafficked pages. It also has the ability to be selectively used to render pages based upon user-generated content.&lt;/p&gt;

&lt;p&gt;Of course, as with any frontend framework, Next.js also has methods to assist with client-side rendering, where content can be loaded, modified or updated via client-side JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#with-great-power"&gt;
  &lt;/a&gt;
  With Great Power...
&lt;/h2&gt;

&lt;p&gt;The ability to mix and match all of these rendering methods gives developers a lot of power, but it also presents a unique challenge. Developers now have to consider more than just how to render specific content, but &lt;em&gt;when&lt;/em&gt; to render it. While by no means comprehensive, here are a few things to consider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Is this content the same for every user? Then pre-rendering or deferred rendering can offer the best performance.&lt;/li&gt;
&lt;li&gt;  Is this content user-specific or generated dynamically for each request? Then server-side rendering may be the best option, but, in some cases, deferred rendering may be able to achieve similar results.&lt;/li&gt;
&lt;li&gt;  Is this content user/request-specific but lightweight or does it require real-time updates to the page? Then this can probably be loaded via client-side rendering.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This also becomes complicated when integrating a tool like LaunchDarkly. Which SDK(s) should I use? How do I integrate the SDKs into Next.js code? How does LaunchDarkly work with pre-rendered or deferred rendered pages? &lt;/p&gt;

&lt;p&gt;We answer all of these questions and more in my latest guide, "&lt;a href="https://docs.launchdarkly.com/guides/platform-specific/nextjs"&gt;Using LaunchDarkly with Next.js&lt;/a&gt;."&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>jamstack</category>
    </item>
    <item>
      <title>Handle dates and time zone in your code</title>
      <author>Cédric Teyton</author>
      <pubDate>Fri, 15 Oct 2021 12:46:51 +0000</pubDate>
      <link>https://dev.to/promyze/handle-dates-and-time-zone-in-your-code-2n18</link>
      <guid>https://dev.to/promyze/handle-dates-and-time-zone-in-your-code-2n18</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fmv8KMPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcg1f1h2qcryn3hgw827.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fmv8KMPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcg1f1h2qcryn3hgw827.png" alt="I'm late"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Software developers often have to handle &lt;strong&gt;dates&lt;/strong&gt;. Honestly, I’m not sure this is their favorite part of their job 😉 Indeed, date manipulation can lead to various problems of date computation, such as bad management of &lt;strong&gt;time zones&lt;/strong&gt;. This article provides some tips to avoid common issues and handle date operations in your source code. We’ll cover examples with JS dates but the principles introduced here can be applied in any language. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#main-tip-encapsulate-date-operations"&gt;
  &lt;/a&gt;
  Main Tip : Encapsulate date operations
&lt;/h2&gt;

&lt;p&gt;First of all, you should &lt;strong&gt;encapsulate&lt;/strong&gt; all date operations in a class, a service, or a separate module. Trust me: this will definitely save you a lot of time (no pun intended) even if it seems like a waste at first. Such a module will provide all the functionalities needed in your code regarding date operations. No more, no less. Do you need to perform operations with time zones? The module does it for you. Do you need to compute a date? The module does it for you. Do you need to calculate which of the dates in a list is the most recent? Again, the module does it for you. You get the idea. We will recommend you to &lt;strong&gt;only use functionalities&lt;/strong&gt; from this module. Developers shouldn’t have to write source code that performs date operations anywhere else. &lt;/p&gt;

&lt;p&gt;This approach is similar to hiding database implementations of &lt;a href="https://promyze.com/why-read-red-book-domain-driven-design/?utm_source=DevTo"&gt;object repositories&lt;/a&gt; and brings more flexibility. Indeed, in the same way a repository gives you an item without needing to know about how the information is actually stored, here you can request a date without needing to know the implementation specifics of the library used.&lt;/p&gt;

&lt;p&gt;You may (should?) rely on libraries dedicated to that purpose, such as Moment for JS code, or Joda for Java. This is definitely a good idea, in the same way that you should use a database tool (MySQL, Mango, Redis, Etc.). However, calls to these APIs should only appear inside your date module and nowhere else in your code. This will improve your &lt;strong&gt;program’s testability&lt;/strong&gt; and let you focus on setting up a test suite for your module.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#illustration-with-js-dates"&gt;
  &lt;/a&gt;
  Illustration with JS Dates
&lt;/h2&gt;

&lt;p&gt;Here is an extract of a TimeHelper class managing date with Moment, where we can observe that Moment usage is hidden from outside the class :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;isSameDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;other&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TimeHelper&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;thisDate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Moment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toMoment&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_isNextDay&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nx"&gt;thisDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;day&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;otherDate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Moment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toMoment&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;other&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_isNextDay&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nx"&gt;otherDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;day&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;thisDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isSame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;otherDate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#always-check-dates-and-tz"&gt;
  &lt;/a&gt;
  Always check dates and TZ
&lt;/h2&gt;

&lt;p&gt;Assume you develop a calendar application written without taking time zones into account and using a generic &lt;strong&gt;date management library&lt;/strong&gt; (datetime in Python, date in JS/TS, std::chrono in C++, etc.). If you decide to export the application across the world (even in France, which is on the TZ of UTC-10 (Tahiti) until UTC+11 (New Caledonia)), if you don’t have date encapsulation, it is necessary to find ALL dates and enrich them with time zone information.&lt;/p&gt;

&lt;p&gt;Also, anytime you ask a user input containing day and hour, you should always wonder if asking for the &lt;strong&gt;Time Zone&lt;/strong&gt; is necessary. If you’re based in Paris and book for a movie in London for 7pm, you should consider 7pm on London TZ. Also, it’s usually a bad practice to store date format in your DB within any TZ information. You need to know where your 7pm is on Earth !&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yk3wKZWM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrviw4pr7l6hfxocej44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yk3wKZWM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrviw4pr7l6hfxocej44.png" alt="TimeZone"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#control-your-date-formats"&gt;
  &lt;/a&gt;
  Control your date formats
&lt;/h2&gt;

&lt;p&gt;Secondly, another best practice is also to &lt;strong&gt;limit the display formats&lt;/strong&gt; of the dates. It seems quite intuitive that all dates and schedules should look the same across your application. To facilitate this, we can create an &lt;strong&gt;enumeration&lt;/strong&gt;, or global variables, containing the list of different formats used in the application. This way, if we want to use a format, we always have them at hand, and if we don’t find the one we wanted to use, it’s undoubtedly a bad idea to use it. Or at least, this should be validated by your customer.&lt;/p&gt;

&lt;p&gt;Here is an example of enumeration using dates :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;enum&lt;/span&gt; &lt;span class="nx"&gt;TimeFormats&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;HH_mm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;HH:mm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;HH_h_mm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;HH[h]mm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;HH_mm_ss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;HH:mm:ss&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;enum&lt;/span&gt; &lt;span class="nx"&gt;DateFormats&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;DD_MM_YYYY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DD/MM/YYYY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;YYYY_MM_DD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YYYY-MM-DD&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;dddd_LL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dddd LL&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;DD_MM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DD/MM&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;dddd_DD_MMMM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dddd DD MMMM&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;dddd_DD_MMMM_YYYY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dddd DD MMMM YYYY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;ddd_DD_MMM_YYYY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ddd DD MMM YYYY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#anticipate-the-situation"&gt;
  &lt;/a&gt;
  Anticipate the situation
&lt;/h2&gt;

&lt;p&gt;Thirdly, the best way to get by with date management is to prepare the software. Indeed, the sooner we become aware of the use cases of dates, the sooner it is possible to implement them appropriately in the project. It can even be interesting to create this module, this service, this class from a prototype/MVP. Because you never know, some people already saw an MVP going into production… ;)&lt;/p&gt;

&lt;p&gt;The last recommendation is to &lt;strong&gt;gather all best practices&lt;/strong&gt; related to date management into &lt;a href="https://promyze.com?utm_source=DevTo"&gt;Promyze&lt;/a&gt; to make it clear for anyone in the team and any newcomer.&lt;/p&gt;

</description>
      <category>date</category>
      <category>javascript</category>
      <category>programming</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Free React Dashboards - Chakra, M-UI and Ant Design</title>
      <author>Sm0ke</author>
      <pubDate>Fri, 15 Oct 2021 12:43:11 +0000</pubDate>
      <link>https://dev.to/sm0ke/free-react-dashboards-chakra-m-ui-and-ant-design-3328</link>
      <guid>https://dev.to/sm0ke/free-react-dashboards-chakra-m-ui-and-ant-design-3328</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents a curated list with open-source &lt;strong&gt;&lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt;&lt;/strong&gt; styled with different &lt;code&gt;super-popular&lt;/code&gt; components libraries: &lt;code&gt;Chakra-UI&lt;/code&gt;, &lt;code&gt;M-UI&lt;/code&gt;, and &lt;code&gt;Ant.Design&lt;/code&gt;. All templates are released under permissive licenses that allow unlimited copied for hobby and commercial projects. For newcomers, &lt;strong&gt;React&lt;/strong&gt; is an &lt;strong&gt;open-source&lt;/strong&gt; JavaScript library for coding user interfaces baked by Facebook.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://www.admin-dashboards.com/"&gt;Admin Dashboards&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/purity-ui-dashboard"&gt;React Dashboard Purity&lt;/a&gt; - styled with &lt;code&gt;Chakra UI&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://berrydashboard.io/"&gt;React Dashboard Berry&lt;/a&gt; - &lt;code&gt;Material-UI&lt;/code&gt; design from CodedThemes&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-react"&gt;React Dashboard Soft&lt;/a&gt; - styled with &lt;code&gt;M-UI&lt;/code&gt; (ex. Material-UI)&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/muse-ant-design-dashboard"&gt;React Dashboard Muse&lt;/a&gt; - styled with &lt;code&gt;Ant Design&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#react-dashboard-purity"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://www.creative-tim.com/product/purity-ui-dashboard"&gt;React Dashboard Purity&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Designed for those who like modern UI elements and beautiful websites &lt;strong&gt;Purity Dashboard&lt;/strong&gt; is made of hundreds of elements, designed blocks, and fully coded pages. Purity UI Dashboard is built with over 70 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, that you can easily modify using Chakra's style props.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/purity-ui-dashboard"&gt;React Dashboard Purity&lt;/a&gt; - &lt;strong&gt;product page&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://demos.creative-tim.com/purity-ui-dashboard/#/admin/dashboard"&gt;React Dashboard Purity&lt;/a&gt; - &lt;strong&gt;LIVE Demo&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4jyehW0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53lwd2lv50eiph4en3wi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4jyehW0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53lwd2lv50eiph4en3wi.gif" alt="Animated presentation of Purity Template, a free React Dashboard crafted on top of Chakra UI. "&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-dashboard-soft"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-react"&gt;React Dashboard Soft&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Built with Soft UI Design system, probably the most innovative design system from Creative-Tim. This FREE Material-UI Dashboard is coming with prebuilt design blocks, so the development process is seamless, switching from our pages to the real website is very easy to be done.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-react"&gt;React Dashboard Soft&lt;/a&gt; - &lt;strong&gt;product page&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://demos.creative-tim.com/soft-ui-dashboard-react/#/dashboard"&gt;React Dashboard Soft&lt;/a&gt; - &lt;strong&gt;LIVE Demo&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aYhOqjbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjozpg24mncpdlmw6qml.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aYhOqjbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjozpg24mncpdlmw6qml.png" alt="Sample Page of Soft UI Template, a free React Dashboard crafted on top of Materui UI components library. "&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-dashboard-berry"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://berrydashboard.io/"&gt;React Dashboard Berry&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Berry is a creative open-source admin dashboard template build using React and Material-UI library. It is a complete game-changer React Dashboard Template with an easy and intuitive responsive design as on retina screens or laptops.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://berrydashboard.io/"&gt;Berry Dashboard&lt;/a&gt; - &lt;strong&gt;product page&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://github.com/codedthemes/berry-free-react-admin-template"&gt;Berry Dashboard&lt;/a&gt; - &lt;strong&gt;source code&lt;/strong&gt; (published on Github)&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://berrydashboard.io/free/dashboard/default"&gt;Berry Dashboard&lt;/a&gt; - &lt;strong&gt;LIVE Demo&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This free product might be a good choice for your next project based on the modern UI aesthetics, rich set of UI components, modern tooling, and a simple, intuitive codebase structure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TdMxIcLL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5sa8tv1ku9mbxrxuk8d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TdMxIcLL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5sa8tv1ku9mbxrxuk8d.png" alt="Dashboard Page of Berry Template, a free React Dashboard crafted on top of Materui UI components library. "&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-dashboard-muse"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://www.creative-tim.com/product/muse-ant-design-dashboard"&gt;React Dashboard Muse&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Muse Ant Design Dashboard is a free Admin Template based on two popular front-end technologies: Ant Design &amp;amp; React. It was built to simplify the developer's work and is comes with a fresh design inspired by Ant Design. All its components are built to fit perfectly with each other while aligning to the Ant Design concepts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/muse-ant-design-dashboard"&gt;React Dashboard Muse&lt;/a&gt; - &lt;strong&gt;product page&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://demos.creative-tim.com/muse-ant-design-dashboard/#/dashboard"&gt;React Dashboard Muse&lt;/a&gt; - &lt;strong&gt;LIVE Demo&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This beautiful React Admin Template comes with 5 color filter choices for both the sidebar and the cards (blue, green, red, yellow, and black), an option to have a transparent or fill sidebar, and an option to have a fixed navbar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VE-guYHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ynvtek4hnqs06qaqgf5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VE-guYHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ynvtek4hnqs06qaqgf5.png" alt="Dashboard Page of Muse Template, a free React Dashboard crafted on top of Ant.Design components library. "&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;Free &lt;strong&gt;&lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt;&lt;/strong&gt; - article published on Dev.to.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://appseed.us/apps/react"&gt;React Apps&lt;/a&gt;&lt;/strong&gt; - a curated list with &lt;code&gt;full-stack starters&lt;/code&gt;. &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>opensource</category>
      <category>webdev</category>
      <category>dashboards</category>
    </item>
    <item>
      <title>Code Quality Software That Makes A Difference!</title>
      <author>Loreley</author>
      <pubDate>Fri, 15 Oct 2021 12:35:18 +0000</pubDate>
      <link>https://dev.to/msoblivion/code-quality-software-that-makes-a-difference-98k</link>
      <guid>https://dev.to/msoblivion/code-quality-software-that-makes-a-difference-98k</guid>
      <description>&lt;p&gt;&lt;em&gt;"There is no single question to what does best quality mean? However, one proven approach is comparing how well a given code interacts with its neighbors in the same technical domain."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the world of software development, code quality often comes to mean a certain level of complexity in a code. The code that is too complex for users or developers to understand or use easily is considered low in quality. Sometimes this means that the code is too complex for even the programmers to understand.&lt;/p&gt;

&lt;p&gt;In the rest of this article, we'll take a quick look at why it's crucial to understand code quality, what constitutes "quality" in the broadest sense and how to measure code quality using some of the best software.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is code quality?&lt;/strong&gt;&lt;br&gt;
The core question arises what makes good code? Code quality refers to describing behaviors of code through descriptive names, concise comments, and style guides. A quality code meets the stated standards of coding when put into code quality check.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why does code quality matter?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Security of software cannot be ignored:&lt;/p&gt;

&lt;p&gt;High programming quality is crucial for all software teams today. And it is essential for those building security-critical applications. Professional code editors generally compile Security-critical code; these code quality tools do not allow for errors.&lt;/p&gt;

&lt;p&gt;Additionally, great code will resist future attacks, which can give you the competitive edge you need. It helps improve coding quality in terms of code maintenance and reusability, which can also reduce engineering costs.&lt;/p&gt;

&lt;p&gt;The usability and readability depends on code quality:&lt;/p&gt;

&lt;p&gt;Quite simply, excellent code quality improves overall software quality because it compiles cleanly, consistently, and with minimal defects. Therefore, it will run the same way in any environment.&lt;/p&gt;

&lt;p&gt;High-quality code carries Low Technical Debt:&lt;/p&gt;

&lt;p&gt;It also tends to prevent technical debt, which can cause you to lose money if you have to hire a professional service to fix the problems. So it's essential to make sure your team practices high-quality coding.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Measure Code Quality?&lt;/strong&gt;&lt;br&gt;
The question on the minds of many experienced software developers is, "How can I improve my code quality?"&lt;br&gt;
There are many different ways of measuring code quality. They range from traditional inspection of the code's structure to more modern methods like code translation or high-level languages like Java.&lt;/p&gt;

&lt;p&gt;Code correctness and code readability:&lt;/p&gt;

&lt;p&gt;In web development, code quality refers to two separate but related ideas: code correctness and code readability.&lt;br&gt;
Good code quality ensures that clients can easily understand the code; low-quality code may lead to unexpected results, incorrect behavior, and security vulnerabilities. It is why comprehensive web code review and testing are essential for every web application development project.&lt;br&gt;
Good quality code communicates every bit of its intent to developers and customers clearly and brings down the risk of misinterpretation and mistakes.&lt;/p&gt;

&lt;p&gt;Code Reliability:&lt;/p&gt;

&lt;p&gt;It's also imperative that it meets technical debt requirements. If you've spent weeks or months following a specific design, then you're well aware of how it interacts with existing code.&lt;/p&gt;

&lt;p&gt;Code Re-usability:&lt;/p&gt;

&lt;p&gt;It means that the same application can be used in different environments, and this will decrease program delays and technical debt.&lt;/p&gt;

&lt;p&gt;Code Maintainability:&lt;/p&gt;

&lt;p&gt;Maintainability measures how easily the application is changed and maintains the existing functionality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to improve code quality?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What is an efficient way to ensure that the code is working? One method is to make sure your developers are up to date on what's happening in the field, so they can provide input on ways to solve bugs. These software quality assurance best practices ensure consistency in maintaining better code throughout the project.&lt;br&gt;
Another method is of improving code quality is to ensure that your team members understand the nature of the problems they are attempting to solve.&lt;/p&gt;

&lt;p&gt;Finally, make sure your team members understand how to use the right tools and techniques to analyze code quality metrics and other tools to help them improve the quality of the code they write.&lt;/p&gt;

&lt;p&gt;Moreover, make sure to include the following steps in your code improvement plan:&lt;/p&gt;

&lt;p&gt;Routine Manual or automated code reviews:&lt;/p&gt;

&lt;p&gt;While manual reviews are recommended for relatively simple projects, computerized devices can be beneficial in tackling more complex projects with a heavier debt burden. One approach developers often don't consider when they're building a web application is whether the complexity of the resulting application is reflected in the complexity of the coding base.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How Easily can New Features be added?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the biggest challenges facing developers today is adding new features to a project without adding code complexity. One solution developers face is not refactor code to maintain clarity, maintainability, and quality throughout the project.&lt;/p&gt;

&lt;p&gt;It is often difficult to determine what code changes will have the most significant impact on maintainability when adding new features. Yet, it is often necessary to change the existing code to accommodate the new feature. While refactoring is possible, maintaining quality throughout the project is a real challenge.&lt;/p&gt;

&lt;p&gt;Measuring Code Smells:&lt;/p&gt;

&lt;p&gt;One of the biggest challenges facing developers today is the ability to measure code smells correctly. Code smells are described as "an accepted and expected code type or structure" that typically results from an implementation detail that falls outside the developers' understanding scope. Code smells can result from various factors, including code formatting errors, redundant code, overly broad inputs, and missing return values.&lt;br&gt;
It is especially difficult to measure quality characteristics when the code is too complex. Code professionals who focus on code quality must first understand the nature of the problem and then invest the time to develop testing methods and techniques to detect code smells more reliably and consistently.&lt;/p&gt;

&lt;p&gt;Code Quality Software:&lt;/p&gt;

&lt;p&gt;Various softwares are available nowadays for code quality analysis, locating bugs and defects, communicating the changes, knowledge sharing, and code documentation.  Most organizations are using them to understand the code quality standards before they release their software. They can also reduce the time spent maintaining high-quality software.&lt;/p&gt;

</description>
      <category>codereview</category>
      <category>software</category>
      <category>projectmanagement</category>
    </item>
    <item>
      <title>Naming conventions for easy identification of StyledComponent and ReactComponent</title>
      <author>itouoti12</author>
      <pubDate>Fri, 15 Oct 2021 12:27:40 +0000</pubDate>
      <link>https://dev.to/itouoti12/naming-conventions-for-easy-identification-of-styledcomponent-and-reactcomponent-49fk</link>
      <guid>https://dev.to/itouoti12/naming-conventions-for-easy-identification-of-styledcomponent-and-reactcomponent-49fk</guid>
      <description>&lt;h2&gt;
  &lt;a href="#do-you-have-a-good-idea-for-a-naming-convention-that-makes-it-easy-to-distinguish-between-styledcomponent-and-reactcomponent"&gt;
  &lt;/a&gt;
  Do you have a good idea for a naming convention that makes it easy to distinguish between StyledComponent and ReactComponent?
&lt;/h2&gt;

&lt;p&gt;I'm using StyledComponent in my current job.&lt;br&gt;
In the source code, StyledComponent and ReactComponent have the same naming conventions, making it difficult to determine which type of component it is at a glance.&lt;/p&gt;

&lt;p&gt;As my refactoring, I changed the naming as follows.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;before&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;return (
  &amp;lt;ScheduleContainer&amp;gt;
    &amp;lt;Header&amp;gt;
      &amp;lt;Date&amp;gt;
        Hello!
      &amp;lt;/Date&amp;gt;
      &amp;lt;TypeSelectorContainer&amp;gt;
        &amp;lt;TypeSelector /&amp;gt;
      &amp;lt;/TypeSelectorContainer&amp;gt;
    &amp;lt;/Header&amp;gt;
  &amp;lt;/ScheduleContainer&amp;gt;
);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;after&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;return (
  &amp;lt;Div_ScheduleContainer&amp;gt;
    &amp;lt;Header&amp;gt;   // &amp;lt;-React component
      &amp;lt;H2_Date&amp;gt;
        Hello!
      &amp;lt;/H2_Date&amp;gt;
      &amp;lt;Div_TypeSelectorContainer&amp;gt;
        &amp;lt;TypeSelector /&amp;gt;  // &amp;lt;-React component
      &amp;lt;/Div_TypeSelectorContainer&amp;gt;
    &amp;lt;/Header&amp;gt;  // &amp;lt;-React component
  &amp;lt;/Div_ScheduleContainer&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, this refactoring violates react/jsx-pascal-case in ESLint.&lt;/p&gt;

&lt;p&gt;Do you have any better ideas than this?&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>react</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
