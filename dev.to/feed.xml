<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>TAURI FEATURE FREEZE AND SECURITY AUDIT</title>
      <author>nothingismagick</author>
      <pubDate>Tue, 24 Aug 2021 07:53:49 +0000</pubDate>
      <link>https://dev.to/tauri/tauri-feature-freeze-and-security-audit-1ml1</link>
      <guid>https://dev.to/tauri/tauri-feature-freeze-and-security-audit-1ml1</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Security Audit Begins&lt;/li&gt;
&lt;li&gt;Code Freeze In Place&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tauri-apps/tauri/tree/next"&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; Branch in Progress&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At a certain point in the lifecycle of software, you have to just stop and smell the roses. Or in this case, hunt for code smell. And that is what the Tauri team is doing. We will no longer be accepting any feature requests for the forthcoming 1.0 and only accepting bug reports. All new features will then be addressed in the &lt;a href="https://github.com/tauri-apps/tauri/tree/next"&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; branch.&lt;/p&gt;

&lt;p&gt;Why would we do this, you might be asking yourself. Well, before we can declare Tauri safe to use, we need to put it through the proverbial ringer - and gain confidence that it is not only architected properly, but also that common attack vectors are mitigated against and boundaries are protected.&lt;/p&gt;

&lt;p&gt;After you've been spending years in the forest of your project, it is obvious that you might not see all the trees - or even its place in the greater ecosystem.&lt;/p&gt;

&lt;p&gt;To this end, we are pleased to announce that the Tauri Programme within the &lt;a href="https://commonsconservancy.org/programmes/"&gt;Commons Conservancy&lt;/a&gt; has teamed up with the non-profit group of penetration testing experts at &lt;a href="https://www.radicallyopensecurity.com/"&gt;Radically Open Security&lt;/a&gt; to help us gain not only deeper insight into the entire project, but also acquire the confidence we need to recommend using Tauri in production.&lt;/p&gt;

&lt;p&gt;The Audit consists of both a horizontal and vertical investigation. The horizontal audit will look into all of the crates and libraries that compose Tauri, as well as its tooling and pipelines. The vertical audit will investigate an example application (our examples/api app) on all three platforms to verify that it is safe to use and our security posture is both appropriate and safe.&lt;/p&gt;

&lt;p&gt;At the conclusion of the audit, we will publish the findings and lock our 1.0 release to maintenance such as dependency updates and urgent fixes in case bugs are found. As mentioned above, all further work on new features like mobile and additional API's will be undertaken in the @next branch which will graduate to 2.0 upon its completed audit.&lt;/p&gt;

&lt;p&gt;One last word of caution: Security audits are a regular practice of due diligence and they are not guarantees that everything is safe. Your app's security will have as much (if not more) to do with your coding practices than with Tauri's underlying security. If you are doing anything with private data or using cryptography, you would do well to have your project audited as well. &lt;/p&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Disclaimer: It is important to understand the limits of the
Tauri team and Radically Open Security's services. The Tauri
team and Radically Open Security do not (and cannot) give
guarantees that something is secure. It remains the
responsibility of downstream engineers to ensure the 
security of the(ir) projects that use Tauri.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://www.radicallyopensecurity.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dBnDGN_c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/I0TVhJO.png" alt="ROS"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tauri</category>
      <category>security</category>
    </item>
    <item>
      <title>29 Largest icon libraries to use in 2021</title>
      <author>devbookmark</author>
      <pubDate>Tue, 24 Aug 2021 07:38:23 +0000</pubDate>
      <link>https://dev.to/devbookmark/29-largest-icon-libraries-to-use-in-2021-5d67</link>
      <guid>https://dev.to/devbookmark/29-largest-icon-libraries-to-use-in-2021-5d67</guid>
      <description>&lt;p&gt;Typography assumes a major part in a wide range of plans, from item bundling to versatile applications and then some. Today we're investigating the best places to discover free textual styles, and take your plan work to another level.&lt;/p&gt;

&lt;p&gt;There are many spots you can download an extraordinary looking text style for nothing. We limited the rundown to the best 29 sites for discovering free text styles. See.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#react-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/react-icons/react-icons"&gt;React Icons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9M7DcndK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209298216/_m_-5tdbo.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9M7DcndK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209298216/_m_-5tdbo.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;svg react icons of popular icon packs&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flag-icons-css"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/lipis/flag-icon-css"&gt;Flag icons CSS&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0unFE__d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209317678/rxecqAfk3.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0unFE__d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209317678/rxecqAfk3.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üéè A collection of all country flags in SVG ‚Äî plus the CSS for easier integration&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iconshock"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.iconshock.com/"&gt;IconShock&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D5sSvxmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209354512/QEiWvRuEs.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D5sSvxmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209354512/QEiWvRuEs.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;free icons and premium icon packs.  Flat icons, Material icons, Glyph icons, iOS icons, Font icons, and more design styles. Vector files, including PNG and SVG icons. Ready for apps, web or social media projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#orion-icon"&gt;
  &lt;/a&gt;
  &lt;a href="https://orioniconlibrary.com/"&gt;Orion Icon&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0VwFUPHs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209503566/hBKZ_oxf5.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0VwFUPHs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209503566/hBKZ_oxf5.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;6014 Free SVG Vector Icons, &lt;br&gt;
Advanced Interactive, &lt;br&gt;
Web App. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tabler-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/tabler/tabler-icons"&gt;Tabler Icons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jLauaX-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209420688/GmBBcL7qp.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jLauaX-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209420688/GmBBcL7qp.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A set of over 1250 free MIT-licensed high-quality SVG icons for you to use in your web projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#weather-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/erikflowers/weather-icons"&gt;Weather Icons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--veiJ3Lf5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209404693/b_-oblXVX.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--veiJ3Lf5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209404693/b_-oblXVX.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;215 Weather Themed Icons and CSS&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-noun-project"&gt;
  &lt;/a&gt;
  &lt;a href="https://thenounproject.com/"&gt;The Noun Project&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iDKszKPx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209564999/3jQiApqjX.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iDKszKPx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209564999/3jQiApqjX.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Icons and Photos For Everything&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#streamlinehq"&gt;
  &lt;/a&gt;
  &lt;a href="https://streamlinehq.com/"&gt;StreamLineHQ&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R3f3YK1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209586005/2y9-n2Q4v.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R3f3YK1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209586005/2y9-n2Q4v.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;100,000 icons, illustrations and emoji for all your projects. Customize them to your brand in seconds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#icono"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/saeedalipoor/icono"&gt;Icono&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FZJdaQNJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209735941/-04QJp8_mp.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FZJdaQNJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209735941/-04QJp8_mp.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One tag One icon, no font or svg, Pure CSS&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#smashicons"&gt;
  &lt;/a&gt;
  &lt;a href="https://smashicons.com"&gt;Smashicons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--stueFfnh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209655301/ZQPiJHN7y.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--stueFfnh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629209655301/ZQPiJHN7y.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Smashicons is the world's largest and most complete icon set with over 342,450 icons for designers and developers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fontisto"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/kenangundogan/fontisto"&gt;Fontisto&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The iconic font and CSS toolkit. Fontisto gives you scalable vector icons that can instantly be customized: size, color, drop shadow and anything that can be done with the power of CSS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#png-tree"&gt;
  &lt;/a&gt;
  &lt;a href="https://pngtree.com/so/icon"&gt;PNG Tree&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fvbbDOGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629212376320/gSXejykGf.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fvbbDOGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629212376320/gSXejykGf.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pngtree provides free download of png, png images, backgrounds and vector. Millions of high quality free png images, PSD, AI and EPS Files are available.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#system-uicons"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/CoreyGinnivan/system-uicons"&gt;System UICons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IoFT4rjq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629212391670/RECoAkY_q.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IoFT4rjq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629212391670/RECoAkY_q.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;System UIcons is an icon library design for systems and products. Use how you want, without attribution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nucleyo"&gt;
  &lt;/a&gt;
  &lt;a href="https://nucleoapp.com/"&gt;Nucleyo&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FyWH8Dwt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629212426909/ULxHCyqRS.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FyWH8Dwt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629212426909/ULxHCyqRS.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nucleo is a Mac/Windows app to organize, customize and export all your icons, and a library of 31467 icons.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pixellove"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.pixellove.com/"&gt;PixelLove&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IrQGtu2o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629212530426/yNzFCv6GM.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IrQGtu2o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629212530426/yNzFCv6GM.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download 15,000 icons in 6 distictive styles made for professionals&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iconstore"&gt;
  &lt;/a&gt;
  &lt;a href="https://iconstore.co/"&gt;IconStore&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pa5zYFBS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629212474796/HNynHK9Th.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pa5zYFBS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629212474796/HNynHK9Th.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;br&gt;
The IconStore is a library of free, vector (SVG) icons created by talented designers to download for commercial use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#feather"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/feathericons/feather"&gt;Feather&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0shAxrcS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213374368/K4uDZBWOQ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0shAxrcS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213374368/K4uDZBWOQ.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simply beautiful open source icons&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iconmostr"&gt;
  &lt;/a&gt;
  &lt;a href="https://iconmonstr.com/"&gt;Iconmostr&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F8jYBeeW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213399179/q5Nu5ycVY.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F8jYBeeW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213399179/q5Nu5ycVY.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Discover 4512+ free icons in 316 collections. Free simple icons for your next project&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#material-design-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://materialdesignicons.com"&gt;Material Design Icons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DLljIHiM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213508412/YV7xdwA3a.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DLljIHiM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213508412/YV7xdwA3a.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;View all the Material Design Icons and more from the community. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#evil-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://evil-icons.io/"&gt;Evil Icons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TnYMNqR4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213575606/Q9mtV8YOO.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TnYMNqR4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213575606/Q9mtV8YOO.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple and clean SVG icon pack with the code to support Rails, Sprockets, Node.js, Gulp, Grunt and CDN.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useiconic"&gt;
  &lt;/a&gt;
  &lt;a href="https://useiconic.com/open"&gt;useIconic&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NbTBVxi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213728826/wojaYm8rQ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NbTBVxi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213728826/wojaYm8rQ.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An open source icon set with 223 marks in SVG, webfont and raster formats&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ionicons"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/ionic-team/ionicons"&gt;Ionicons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z5PxkaCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213759968/UjBOBhf5Q.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z5PxkaCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213759968/UjBOBhf5Q.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Premium hand-crafted icons built by Ionic, for Ionic apps and web apps everywhere üåé&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#freeicons"&gt;
  &lt;/a&gt;
  &lt;a href="https://freeicons.io"&gt;FreeIcons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--22ByKQV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214045089/hAKJCB1zp.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--22ByKQV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214045089/hAKJCB1zp.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;THE LARGEST DATABASE OF FREE ICONS&lt;br&gt;
Available in PNG, SVG, EPS, PSD and BASE 64 formats.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iconfactory"&gt;
  &lt;/a&gt;
  &lt;a href="https://freeware.iconfactory.com/icons"&gt;IconFactory&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UMQTjawj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214088262/_UJUIdc2x.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UMQTjawj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214088262/_UJUIdc2x.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our freeware is only for personal use and all copyrights remain the property of their respective holders. We have amazing Design Services for commercial projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cssgg"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/astrit/css.gg"&gt;CSS.gg&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lyKDfyVR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628141423667/IYKAjoHiku.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lyKDfyVR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628141423667/IYKAjoHiku.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;700+ Pure CSS, SVG &amp;amp; Figma UI Icons Available in SVG Sprite, styled-components, NPM &amp;amp; API&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dribbble-free-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://dribbble.com/tags/free_icons"&gt;Dribbble - Free Icons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4dHrZ1fz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214238490/xw66MX7rY.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4dHrZ1fz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214238490/xw66MX7rY.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Discover 500+ Free Icons designs on Dribbble. Your resource to discover and connect with designers worldwide.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ux-wing"&gt;
  &lt;/a&gt;
  &lt;a href="https://uxwing.com"&gt;UX Wing&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sGXC0OxH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214293058/rh0qW3BDX.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sGXC0OxH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214293058/rh0qW3BDX.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Exclusive collection of free icons download, Free icons SVG and PNG that can use for commercial use no attribution. For websites, PowerPoint, android apps, etc. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#entypo"&gt;
  &lt;/a&gt;
  &lt;a href="http://www.entypo.com/"&gt;Entypo&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OS2ke3-Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214304616/7Fn8jcbGY.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OS2ke3-Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214304616/7Fn8jcbGY.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Entypo is a suite of 411 carefully crafted premium pictograms by Daniel Bruce.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootstrap-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/twbs/icons"&gt;Bootstrap Icons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4XS6h0ci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628141343800/vuEGp357G.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4XS6h0ci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628141343800/vuEGp357G.png%3Fauto%3Dcompress" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Official open source SVG icon library for Bootstrap.&lt;/p&gt;




&lt;p&gt;Consequently, these were the absolute best hotspots for investigating free text styles. Choosing the right textual style is vital to the accomplishment of any business. &lt;/p&gt;

&lt;p&gt;The clarity of the textual style is likewise significant notwithstanding the plan. It is significant that you get your work done well and chooses the best. Good luck!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>developer</category>
      <category>design</category>
    </item>
    <item>
      <title>How I passed the AWS Certified Developer exam</title>
      <author>Jing</author>
      <pubDate>Tue, 24 Aug 2021 07:07:17 +0000</pubDate>
      <link>https://dev.to/jingjing142/how-i-passed-the-aws-certified-developer-exam-35ii</link>
      <guid>https://dev.to/jingjing142/how-i-passed-the-aws-certified-developer-exam-35ii</guid>
      <description>&lt;p&gt;This week I took and passed the AWS Certified Developer ‚Äì Associate exam ü•≥ Since then, some people have asked me which resources I used, so I thought I'd spend some time writing about my experience and approach, including the resources I used. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;If you're completely new to the cloud, I suggest you start with &lt;a href="https://www.digitalocean.com/community/tutorials/a-general-introduction-to-cloud-computing"&gt;this article&lt;/a&gt;. It's a general introduction to cloud computing that tells you what it actually is and something about its history, benefits and drawbacks. &lt;/p&gt;

&lt;p&gt;After that, it's good to spend some time on the &lt;a href="https://aws.amazon.com/getting-started/fundamentals-core-concepts/?e=gs2020&amp;amp;p=fundoverview&amp;amp;p=gsrc&amp;amp;c=fo"&gt;AWS Fundamentals course&lt;/a&gt; to go over some core concepts and mental models that AWS is built on, which I wish I had done before I had dived into the material below. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-course"&gt;
  &lt;/a&gt;
  The Course
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.udemy.com/course/aws-certified-developer-associate-dva-c01/?couponCode=AUG_21_GET_STARTED"&gt;The AWS Certified Developer Associate course&lt;/a&gt; by Stephane Maarek &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The exam was part of an AWS study group at work, and this is the course that it was structured around. The course is divided into around 30 sections based on different AWS services and each section consists of a theoretical part and a hands on session. There is also a practice exam at the end, along with some tips to pass the exam.&lt;/p&gt;

&lt;p&gt;Initially, I followed the pace of the study group by going over around 3h of video material a week, but I and some others eventually fell behind. We still had bi-weekly meetings, where we would discuss the topics we had learnt, but I ended up going over a lot of the material at once in several days instead of gradually week by week. &lt;/p&gt;

&lt;p&gt;If you have the time, I would strongly encourage you to spread it out more, and set smaller goals like one section or one service a week. That way you will have more time to explore a particular service and the concepts associated with it in detail before moving onto the next one.&lt;/p&gt;

&lt;p&gt;If you have less time or are more of a text-based learner, I would suggest going over the lecture slides instead of the videos. The instructor follows the slides quite closely and most of the added context comes from the hands on sessions rather than the theoretical lessons. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#practice-exams"&gt;
  &lt;/a&gt;
  Practice Exams
&lt;/h2&gt;

&lt;p&gt;After completing the course above, I went over two sets of full practice exams, and an official Pearson VUE practice exam.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.udemy.com/course/aws-certified-developer-associate-practice-tests-dva-c01/"&gt;Practice Exams&lt;/a&gt; by Stephane Maarek &amp;amp; Abhishek Singh&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.udemy.com/course/aws-developer-associate-practice-exams/"&gt;Practice Exams&lt;/a&gt; by Neal Davis &amp;amp; Digital Cloud&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pearson VUE practice exam - you can request a free voucher &lt;a href="https://pages.awscloud.com/Globa_traincert_Get_AWS_Certified_Developer_Associate.html"&gt;here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both sets of practice exams are quite good and include detailed explanations as to why an answer is correct and why the others are wrong. There also some repeating questions, but most are unique. Comparing them, I'd say that the first set by Stephane and Abhishek was slightly more difficult. But I could be biased as I did those first and was already familiar with the format when I did the second set. Both sets provided a great preparation for the actual exam.&lt;/p&gt;

&lt;p&gt;It took me around 30-45 minutes to do one practice exam, and I spent a considerable amount of time going over my mistakes afterwards. On Udemy, you can filter your responses to show only the incorrect ones. The explanations also reference the official AWS documentation, so you can continue reading if you need more details. &lt;/p&gt;

&lt;p&gt;I found the practice exams quite difficult and failed most of them on my first attempt. This got me really worried about failing the actual exam, so don't feel discouraged if that happens to you too. I just retook the practice exams I failed until I scored above 80% in all of them. While going over my mistakes, I didn't only pay attention to the correct answer, but also as to why the others were wrong. This helped me eliminate some answers more easily going forward, which also benefitted me in the actual exam.&lt;/p&gt;

&lt;p&gt;The Pearson VUE practice exam only included around 20 questions instead of 65, and no explanations at the end. But it familiarised me with the setup that I had in the actual exam, which included the ability to flag questions to come back to at the end. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cheat-sheets"&gt;
  &lt;/a&gt;
  Cheat Sheets
&lt;/h2&gt;

&lt;p&gt;I used these AWS cheat sheets to review important concepts and details. I only came across them later, after I had already done some practice exams, but I would suggest going over them before you do the practice exams.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://digitalcloud.training/certification-training/aws-developer-associate/"&gt;AWS Certified Developer Cheat Sheets&lt;/a&gt; by Neal Davis &amp;amp; Digital Cloud&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://tutorialsdojo.com/aws-cheat-sheets/"&gt;AWS Cheat Sheets&lt;/a&gt; by Tutorials Dojo&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I primarily used the first set of cheat sheets, but also looked at some of the latter ones. Digital Cloud has several sets of cheat sheets tailored to different exams, so their set is really tailored towards the AWS Certified Developer exam. They also include exam tips that I've found very helpful, as they highlight some details you need to know.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-website"&gt;
  &lt;/a&gt;
  AWS Website
&lt;/h2&gt;

&lt;p&gt;And finally, the official &lt;a href="https://aws.amazon.com/"&gt;AWS website&lt;/a&gt;. I used the documentation, FAQs sites and whitepapers as a reference and went over the AWS Certified Developer exam guide and sample questions &lt;a href="https://aws.amazon.com/certification/certified-developer-associate/"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;A couple of hours before the exam I also went over &lt;a href="https://dannys.cloud/7-tactical-tips-aws-certification-exam"&gt;this article&lt;/a&gt; by Danny Steenman on some tactical tips to increase your chances of passing the exam. Mainly because I was nervous, but I found it quite helpful. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words
&lt;/h2&gt;

&lt;p&gt;And that's it. These are all the resources I've used to prepare for the exam. Overall, it took me around a month of study, a couple hours every evening, to prepare for the exam. But as mentioned, I would highly suggest spreading it out over a longer period. &lt;/p&gt;

&lt;p&gt;Hope that's helpful. Good luck and much success to those of you who are preparing for the exam right now. You can do it üí™üèº&lt;/p&gt;

&lt;p&gt;Cover image by &lt;a href="https://unsplash.com/@dallasreedy?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Dallas Reedy&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/clouds?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
    </item>
    <item>
      <title>Modelling a product catalog in DynamoDB</title>
      <author>Maurice</author>
      <pubDate>Tue, 24 Aug 2021 06:44:02 +0000</pubDate>
      <link>https://dev.to/aws-builders/modelling-a-product-catalog-in-dynamodb-2oak</link>
      <guid>https://dev.to/aws-builders/modelling-a-product-catalog-in-dynamodb-2oak</guid>
      <description>&lt;p&gt;Today we'll talk about a topic I've been interested in for a few months now: data modelling in NoSQL databases, especially DynamoDB. This article assumes basic knowledge of DynamoDB, which you can get from reading &lt;a href="https://aws-blog.de/2021/03/dynamodb-in-15-minutes.html"&gt;DynamoDB in 15 minutes&lt;/a&gt;. I was inspired to write this by a question that I answered on &lt;a href="https://stackoverflow.com/q/65579206/6485881"&gt;stackoverflow&lt;/a&gt; a while ago. This finally gave me an excuse to write about the topic.&lt;/p&gt;

&lt;p&gt;I'm going to introduce you to a user story first, then we're going to discuss the process of data modelling in NoSQL environments. Afterwards we'll move on to building the data model for the user story. Sprinkled throughout this, I'll show you some code examples for your data access layer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#user-story"&gt;
  &lt;/a&gt;
  User Story
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5skaGpwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/toq1yf4t5mvuea1ictqx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5skaGpwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/toq1yf4t5mvuea1ictqx.png" alt="Fromatoz logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fromatoz is a fictional online retailer that offers a platform, where &lt;strong&gt;products&lt;/strong&gt; from different &lt;strong&gt;brands&lt;/strong&gt; across various &lt;strong&gt;product categories&lt;/strong&gt; are being sold. Customers can browse products by brand and have the option to filter the products from the brand by categories. Another way customers can use the product catalog is that they look at a specific category and see the products all brands offer in that category. Since the products have varying kinds of properties, Fromatoz wants to use a NoSQL database because of its flexible schema.&lt;/p&gt;

&lt;p&gt;The customer also wants to track the stockpile for each product. This means that the available stock should be decreased upon purchases made by customers and increased upon arrival of new shipments. The inventory team needs to be able to quickly retrieve the current stock level for a given product.&lt;/p&gt;

&lt;p&gt;Let's talk about the process we can use to turn Fromatoz' requirements into reality.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-modelling-in-nosql-environments"&gt;
  &lt;/a&gt;
  Data modelling in NoSQL environments
&lt;/h2&gt;

&lt;p&gt;The process of data modelling in a non-relational world is somewhat different from traditional data modelling for relational databases. Fortunately there are some steps you can follow to create your data model.&lt;/p&gt;

&lt;p&gt;Since I didn't come up with these steps myself, I'm going to quote from the DynamoDB book by AWS Data Hero &lt;a href="https://alexdebrie.com"&gt;Alex DeBrie&lt;/a&gt;.&lt;br&gt;
The steps are:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Understand your application&lt;/li&gt;
&lt;li&gt;Create an entity-relationship diagram ("ERD")&lt;/li&gt;
&lt;li&gt;Write out all of your access patterns&lt;/li&gt;
&lt;li&gt;Model your primary key structure&lt;/li&gt;
&lt;li&gt;Satisfy additional access patterns with secondary indexes and streams&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;‚Äî &lt;cite&gt;Alex DeBrie, The DynamoDB Book - chapter 7.2&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The first step should seem fairly obvious, we need to have an understanding of the domain we're working in. In our case I've outlined the required information above and since you've most likely used a webshop in the past, you should be good to go.&lt;/p&gt;

&lt;p&gt;Creating an entity-relationship-diagram may not seem obvious at first, since we're talking about a non-relational database. Actually the term non-relational database is misleading, in my opinion, because data in it still has relationships. The way these relationships are handled and modelled is just different from relational databases. In order to have a common basis to discuss requirements, query patterns and all of these fancy constructs, an ERD is a good start.&lt;/p&gt;

&lt;p&gt;Once we've gotten an understanding of which entities exist and how they're related, we have to find out and define how these are queried. This step is critical - our access patterns will determine how we store and index our data.&lt;/p&gt;

&lt;p&gt;The next two steps are what makes or breaks our data model: we create the primary key structure to satisfy our primary access patterns and use local and global secondary indexes as well as DynamoDB streams to enable additional access patterns.&lt;/p&gt;

&lt;p&gt;Now that we've talked about the process and introduced the use case along with the challenges it presents, let's move on to step two: the entity relationship diagram.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#entity-relationship-diagram"&gt;
  &lt;/a&gt;
  Entity Relationship Diagram
&lt;/h2&gt;

&lt;p&gt;Here's a simple ERD for our use case (I'm aware it's not up to UML standards, but it's good enough):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-YPY-R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qk4579rfpehecexgrfz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-YPY-R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qk4579rfpehecexgrfz.png" alt="Fromatoz Entity-Relationship-Diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The diagram is fairly simple and consists only of three entities, product, brand and category. Categories can have multiple products and brands can have multiple products. Each product belongs to one brand and one category. This means we're going to have to model two one-to-many relationships (I'll talk about many to many relationships in a future post).&lt;/p&gt;

&lt;p&gt;That takes care of the entity relationship diagram, let's talk about access patterns.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#access-patterns"&gt;
  &lt;/a&gt;
  Access Patterns
&lt;/h2&gt;

&lt;p&gt;In order to understand how we'll access the data in the product catalog, we need to take a closer look at the use case description again. From there we can come up with these access patterns:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Get all brands&lt;/li&gt;
&lt;li&gt;Get all categories&lt;/li&gt;
&lt;li&gt;Get product by id (for the stock level query)&lt;/li&gt;
&lt;li&gt;Decrease stock level for product&lt;/li&gt;
&lt;li&gt;Increase stock level for product&lt;/li&gt;
&lt;li&gt;Get products by brand&lt;/li&gt;
&lt;li&gt;Get products by brand and category&lt;/li&gt;
&lt;li&gt;Get products by category&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Get products by category and brand)&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Access pattern 9 is optional, because the result of a query would be identical to that of access pattern 7. From the perspective of a user interface the difference between 7 and 9 matters, but the data layer would return the same results. We will still model access pattern 9, because, depending on the distribution of the data, it may be advantageous to choose one over the other.&lt;/p&gt;

&lt;p&gt;Now it's time to build a model for these access patterns.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#building-the-model"&gt;
  &lt;/a&gt;
  Building the model
&lt;/h2&gt;

&lt;p&gt;First we take a closer look at the access patterns and structure them for ourselves. We identify the entities affected by each access pattern and the information that will be sent via the parameters to perform the read or write operations.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Entity&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Parameters&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Brand&lt;/td&gt;
&lt;td&gt;Get all&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Category&lt;/td&gt;
&lt;td&gt;Get all&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Product&lt;/td&gt;
&lt;td&gt;Get by id&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; (Product ID)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Product&lt;/td&gt;
&lt;td&gt;Decrease stock&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; + &lt;code&gt;&amp;lt;stockDecrement&amp;gt;&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Product&lt;/td&gt;
&lt;td&gt;Increase stock&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; + &lt;code&gt;&amp;lt;stockIncrement&amp;gt;&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Product&lt;/td&gt;
&lt;td&gt;List by brand&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;&amp;lt;bid&amp;gt;&lt;/code&gt; (Brand ID)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Product&lt;/td&gt;
&lt;td&gt;List by brand and category&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;&amp;lt;bid&amp;gt;&lt;/code&gt; + &lt;code&gt;&amp;lt;cid&amp;gt;&lt;/code&gt; (Category ID)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Product&lt;/td&gt;
&lt;td&gt;List by category&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;cid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Product&lt;/td&gt;
&lt;td&gt;List by category and brand&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;&amp;lt;cid&amp;gt;&lt;/code&gt; + &lt;code&gt;&amp;lt;bid&amp;gt;&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;From this table we can see, that the majority of access patterns affect the product entity, which shouldn't come as a surprise, as this is a product catalog. Before we talk about the more complex entity, let's begin modelling with the brand and category entities, which account for the access patterns 1 and 2.&lt;/p&gt;

&lt;p&gt;Both of them require a list of &lt;strong&gt;all&lt;/strong&gt; entities of that type.&lt;br&gt;
If we recall the APIs available to us, we know that there are three ways to get &lt;strong&gt;multiple&lt;/strong&gt; items out of DynamoDB:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;BatchGetItem&lt;/code&gt;, which batches multiple &lt;code&gt;GetItem&lt;/code&gt; calls together and requires us to know the partition and sort key for all items we want to select.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Query&lt;/code&gt;, which allows us to work on collections of items (those that share the same partition key) and optionally do some filtering on the sort key in the partition.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Scan&lt;/code&gt; is essentially a table scan and by far the slowest and most expensive operation.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Since we don't know all primary keys for all brands or categories, we can rule out &lt;code&gt;BatchGetItem&lt;/code&gt;. We want to avoid &lt;code&gt;Scan&lt;/code&gt; at all costs. So let's see how we can do this using &lt;code&gt;Query&lt;/code&gt;. With &lt;code&gt;Query&lt;/code&gt; we can easily get a whole item collection by querying for a partition key and not filtering on the sort key. This is what we're going to use to enable the access patterns 1 and 2. I have started modelling the table below:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
&lt;strong&gt;PK&lt;/strong&gt; (Partition Key)&lt;/th&gt;
&lt;th&gt;
&lt;strong&gt;SK&lt;/strong&gt; (Sort Key)&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;type&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;brandId&lt;/th&gt;
&lt;th&gt;categoryId&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;BRANDS&lt;/td&gt;
&lt;td&gt;B#1&lt;/td&gt;
&lt;td&gt;BRAND&lt;/td&gt;
&lt;td&gt;Microsoft&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BRANDS&lt;/td&gt;
&lt;td&gt;B#2&lt;/td&gt;
&lt;td&gt;BRAND&lt;/td&gt;
&lt;td&gt;Google&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BRANDS&lt;/td&gt;
&lt;td&gt;B#3&lt;/td&gt;
&lt;td&gt;BRAND&lt;/td&gt;
&lt;td&gt;Tesla&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CATEGORIES&lt;/td&gt;
&lt;td&gt;C#1&lt;/td&gt;
&lt;td&gt;CATEGORY&lt;/td&gt;
&lt;td&gt;Cars&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CATEGORIES&lt;/td&gt;
&lt;td&gt;C#2&lt;/td&gt;
&lt;td&gt;CATEGORY&lt;/td&gt;
&lt;td&gt;Boats&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CATEGORIES&lt;/td&gt;
&lt;td&gt;C#3&lt;/td&gt;
&lt;td&gt;CATEGORY&lt;/td&gt;
&lt;td&gt;Phones&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Our table has a composite primary key, that's made up of &lt;code&gt;PK&lt;/code&gt; as the partition key and &lt;code&gt;SK&lt;/code&gt; as the sort key. I have decided to prefix the sort key values with &lt;code&gt;B#&lt;/code&gt; for brand ids and &lt;code&gt;C#&lt;/code&gt; for category ids. You'll see me doing this throughout the post. This helps with namespacing items in &lt;strong&gt;the&lt;/strong&gt; table, since we're putting all entities in a single table. Another thing you can observe is that the brand ids and category ids are both attributes as well as values for key-attributes. This duplication is introduced on purpose to help distinguish between key-attributes and what I like to call payload-attributes. It makes serialization and deserialization easier. The &lt;code&gt;type&lt;/code&gt; attribute also helps with deserialization.&lt;/p&gt;

&lt;p&gt;To get a list of brands, we can now do a simple query like this one in python, which would return the first three rows of the table - the code for the &lt;code&gt;CATEGORIES&lt;/code&gt; collection would look very similar:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;boto3&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;boto3.dynamodb.conditions&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;conditions&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_all_brands&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"dynamodb"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;KeyConditionExpression&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conditions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"PK"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"BRANDS"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Items"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If there are lots of reads/writes to these partitions you can consider read/write sharding-techniques, but that's beyond the scope of this article. They help avoid hot partitions at the cost of data access layer complexity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Moving on to the &lt;strong&gt;product&lt;/strong&gt; entity. We have seven access patterns to eventually deal with, but we'll tackle them in batches. First we'll model fetching of a product by its product id as well as incrementing and decrementing of stock values. Since a product id is unique, this is an ideal use case for a &lt;code&gt;GetItem&lt;/code&gt; operation, because we only want to fetch one item and know the key information for it. We'll use the same table we already used for the other entities, this is called single-table-design. Because of space constraints the layout of the table is flipped here and only focuses on the product entity.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Attribute&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PK&lt;/td&gt;
&lt;td&gt;P#1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SK&lt;/td&gt;
&lt;td&gt;METADATA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;PRODUCT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;Model 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;productId&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stockLevel&lt;/td&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;categoryId&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;brandId&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;By setting it up this way we can easily request a product by it's ID and also increment and decrement the stock level. Below you can see an example implementation in python for &lt;code&gt;get_product_by_id&lt;/code&gt; and &lt;code&gt;increment_product_stock_level&lt;/code&gt; - the decrement would look very similar.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;boto3&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_product_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"dynamodb"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;"PK"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"P#&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;product_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;"SK"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"METADATA"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Item"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;increment_product_stock_level&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stock_level_increment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"dynamodb"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;"PK"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"P#&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;product_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;"SK"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"METADATA"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;UpdateExpression&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"SET #stock_level = #stock_level + :increment"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;ExpressionAttributeNames&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;"#stock_level"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"stockLevel"&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;ExpressionAttributeValues&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;":increment"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;stock_level_increment&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's take a look at the table we've created so far. The diagram below doesn't contain exactly the same values as the tables above - it's designed to show our key patterns. I suggest that you go through the five query patterns we've implemented so far in your head and try to visualize how they're retrieved from the table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sn2kYCHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vyrxxbofko0obqebm3h7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sn2kYCHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vyrxxbofko0obqebm3h7.png" alt="Intermediary Table"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Now it's time to talk about the remaining four access patterns.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Entity&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Parameters&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Product&lt;/td&gt;
&lt;td&gt;List by brand&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;&amp;lt;bid&amp;gt;&lt;/code&gt; (Brand ID)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Product&lt;/td&gt;
&lt;td&gt;List by brand and category&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;&amp;lt;bid&amp;gt;&lt;/code&gt; + &lt;code&gt;&amp;lt;cid&amp;gt;&lt;/code&gt; (Category ID)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Product&lt;/td&gt;
&lt;td&gt;List by category&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;cid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Product&lt;/td&gt;
&lt;td&gt;List by category and brand&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;&amp;lt;cid&amp;gt;&lt;/code&gt; + &lt;code&gt;&amp;lt;bid&amp;gt;&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;After taking a closer look at them, we can see that these four access patterns can be divided into two groups that are very similar. Patterns 6 and 7 both start with the brand id as a first filter and 7 adds the category as an additional filter to the result from 6. Patterns 8 and 9 are similar - 8 filters based on a category and 9 is an additional filter on the result from 8. That means if we solve either of the combinations, we have a pattern that we can re-use for the other.&lt;/p&gt;

&lt;p&gt;I usually start at the top of the list and work my way downwards, but it doesn't really matter. So let's consider 6 and 7 first. Access pattern 6 essentially requires us to model the one-to-many relationship between a brand and its products. We've already seen a pattern that allows us to do this. Use the partition key for the parent and the sort key for the children, which allows us to query for them. We can use this here as well, but there is a problem. The primary index for our table and the product index is already being used to satisfy the access patterns 3 to 5.&lt;/p&gt;

&lt;p&gt;Since our primary index is already in use, we should take a look at the secondary indexes. A local secondary index would require us to use the same partition key, but we could choose a different sort key. This doesn't help us here, because the product's partition key is its ID and we would need that to be the brand it belongs to. That leaves us with a global secondary index (GSI), which allows us to choose both a different partition and sort key.&lt;br&gt;
Let's add a GSI, which we're going to call &lt;code&gt;GSI1&lt;/code&gt; with &lt;code&gt;GSI1PK&lt;/code&gt; as its partition- and &lt;code&gt;GSI1SK&lt;/code&gt; as its sort key. Generic names again, because we could use them to fulfill multiple access patterns.&lt;br&gt;
The simplified table looks like this.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;PK&lt;/th&gt;
&lt;th&gt;SK&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;GSI1PK&lt;/th&gt;
&lt;th&gt;GSI1SK&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;P#&amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;METADATA&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PRODUCT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;B#&amp;lt;bid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;P#&amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This design allows us to deliver on access pattern 6. If we take a look at access pattern 7, we have already observed that it's essentially another filter on the result of 6. There are multiple ways to implement this, but there is a particular one that I prefer. When using &lt;code&gt;Query&lt;/code&gt; to fetch items from a table, we can do some filtering on the sort key - among others there is a &lt;code&gt;begins_with&lt;/code&gt; operator - which we can use to utilize &lt;code&gt;GSI1&lt;/code&gt; for query pattern 7 as well. To achieve that, we slightly modify our key-schema from above to look like this:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;PK&lt;/th&gt;
&lt;th&gt;SK&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;GSI1PK&lt;/th&gt;
&lt;th&gt;GSI1SK&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;P#&amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;METADATA&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PRODUCT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;B#&amp;lt;bid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;C#&amp;lt;cid&amp;gt;#P#&amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;We prepend the category ID to &lt;code&gt;GSI1SK&lt;/code&gt;, which allows us to use &lt;code&gt;begins_with&lt;/code&gt; on it, while at the same time retaining the ability to do the query for 6. The product ID still needs to be kept as part of the sort key, because we need each product to show up and that only happens, if the products are distinct in the GSI. An implementation in Python for these two might look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;boto3&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;boto3.dynamodb.conditions&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;conditions&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_products_by_brand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;brand_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;

    &lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"dynamodb"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;IndexName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"GSI1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;KeyConditionExpression&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conditions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GSI1PK"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"B#&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;brand_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Items"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_products_by_brand_and_category&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;brand_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;

    &lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"dynamodb"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;IndexName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"GSI1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;KeyConditionExpression&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conditions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GSI1PK"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"B#&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;brand_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; \
            &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;conditions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GSI1SK"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;begins_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"C#&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;category_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;#"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Items"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This takes care of access patterns 6 and 7. I have added a further optimization, which isn't visible in the code, because it relates to &lt;code&gt;GSI1&lt;/code&gt;. When you define a GSI in DynamoDB you can select which attributes should be projected into that index. There are three possible configuration parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;KEYS_ONLY&lt;/code&gt; - only the keys for the GSI are projected into the GSI (least expensive)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;INCLUDE&lt;/code&gt; - you get to specify which attributes are projected into the GSI&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ALL&lt;/code&gt; - projects all attributes into the GSI (most expensive)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since we only really care about the &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;stockLevel&lt;/code&gt; and &lt;code&gt;productId&lt;/code&gt; when we query for products, I chose &lt;code&gt;INCLUDE&lt;/code&gt; as the projection type and only projected these onto the index. This results in GSI1 looking like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gkUFGsCK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wl9ouw0ul2chqn86ktpq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gkUFGsCK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wl9ouw0ul2chqn86ktpq.png" alt="GSI1"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;To implement the remaining two access patterns, we essentially do the same. We can't reuse &lt;code&gt;GSI1&lt;/code&gt; here, because, in this case, our partition key will have to be the category id. That's why we set up &lt;code&gt;GSI2&lt;/code&gt; with the partition and sort keys &lt;code&gt;GSI2PK&lt;/code&gt; and &lt;code&gt;GSI2SK&lt;/code&gt; with the same projection as &lt;code&gt;GSI1&lt;/code&gt;. The data in &lt;code&gt;GSI2&lt;/code&gt; looks very similar to &lt;code&gt;GSI1&lt;/code&gt; as a result of that (except for the primary key).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RrWe1uRh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hm0i36q4rbdubxiuhd08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RrWe1uRh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hm0i36q4rbdubxiuhd08.png" alt="GSI2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Earlier I mentioned that access patterns 7 and 9 are essentially identical in the items they return, but that it's advantageous to use one over the other depending on the data distribution. For this we have to consider how data is layed out in DynamoDB internally. Item collections are assigned to a storage partition depending on their partition key, i.e. all items with the same partition key live on the same storage partition. To improve scalability we try to spread out the load across these partitions evenly. One way to do that is by querying the item collections with many distinct values. If we have many brands but few categories, that means we'll have many brand partitions and using &lt;code&gt;GSI1&lt;/code&gt; for that spreads out the load more evenly. Should we have many more categories than brands, &lt;code&gt;GSI2&lt;/code&gt; will be better suited for this. The data model allows us this flexibility at the cost of a few more bytes in storage space.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Now we've created a table structure that supports all of your nine access patterns!&lt;/strong&gt; Let's check out the final table. First we start with our key structure. The table below shows the attributes each entity needs for the access patterns to work. By now you should be able to see how we can use each of them to fulfill the access patterns.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Entity&lt;/th&gt;
&lt;th&gt;PK&lt;/th&gt;
&lt;th&gt;SK&lt;/th&gt;
&lt;th&gt;GSI1PK&lt;/th&gt;
&lt;th&gt;GSI1SK&lt;/th&gt;
&lt;th&gt;GSI2PK&lt;/th&gt;
&lt;th&gt;GSI2SK&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Brand&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BRANDS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;B#&amp;lt;bid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Category&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CATEGORIES&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;C#&amp;lt;cid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Product&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;P#&amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;METADATA&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;B#&amp;lt;bid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;C#&amp;lt;cid&amp;gt;#P#&amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;C#&amp;lt;cid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;B#&amp;lt;bid&amp;gt;#P#&amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;If we now look at the whole table, we can see that it's starting to get fairly complex. That's part of the reason, why browsing a DynamoDB table based on single-table-design from the console isn't that convenient. I prefer to build a CLI tool, that uses my data access layer, to browse through the table; but that's application specific and a topic for another day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g4UTQon8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dk01fvh4brpm5kntklr0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g4UTQon8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dk01fvh4brpm5kntklr0.png" alt="Final table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;p&gt;Let's wrap this up for today. In this post we have gone through the process of modelling a product catalog in DynamoDB. We started with the use case description, then built an entity relationship diagram, identified our access patterns and then designed our primary key structure as well as secondary indexes to implement the access patterns. We also looked at some code examples of how a data access layer could fetch the data and perform update operations.&lt;/p&gt;

&lt;p&gt;This article has been focused on one-to-many relationships and the different ways they can be modelled as well as the process of turning a use case description into a data model. If you have feedback, questions or want to get in touch to discuss projects, feel free to reach out to me through the social media channels in my bio or leave a comment.&lt;/p&gt;

&lt;p&gt;‚Äî Maurice&lt;/p&gt;

&lt;p&gt;(This article has been first published in March 2021 on &lt;a href="https://aws-blog.de/2021/03/modelling-a-product-catalog-in-dynamodb.html"&gt;our company blog&lt;/a&gt;)&lt;/p&gt;

</description>
      <category>aws</category>
      <category>database</category>
      <category>cloud</category>
      <category>dynamodb</category>
    </item>
    <item>
      <title>Don't overoptimize your React App</title>
      <author>varunprashar5</author>
      <pubDate>Tue, 24 Aug 2021 06:04:09 +0000</pubDate>
      <link>https://dev.to/varunprashar5/don-t-overoptimize-your-react-app-2nba</link>
      <guid>https://dev.to/varunprashar5/don-t-overoptimize-your-react-app-2nba</guid>
      <description>&lt;p&gt;ùó¢ùóΩùòÅùó∂ùó∫ùó∂ùòÄùó∂ùóªùó¥ ùòÜùóºùòÇùóø ùó•ùó≤ùóÆùó∞ùòÅ ùóîùóΩùóΩ&lt;/p&gt;

&lt;p&gt;Do checkout the video for more details:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/2woSmgfUjC8"&gt;https://youtu.be/2woSmgfUjC8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have a parent-child component structure then Whenever the parent state changes it will re-render.&lt;br&gt;
Do you know it will even re-render your child? No matter if your child uses any prop or not it will still re-render.&lt;/p&gt;

&lt;p&gt;Ideally, Child should re-render only if: parent prop or method used inside the child is changed.&lt;/p&gt;

&lt;p&gt;ùóõùóºùòÑ ùòÅùóº ùóΩùóøùó≤ùòÉùó≤ùóªùòÅ ùòÇùóªùóªùó≤ùó∞ùó≤ùòÄùòÄùóÆùóøùòÜ ùóøùó≤-ùóøùó≤ùóªùó±ùó≤ùóøùòÄ ?&lt;br&gt;
The solution is "ùó•ùó≤ùóÆùó∞ùòÅ.ùó∫ùó≤ùó∫ùóº"&lt;/p&gt;

&lt;p&gt;React.memo (is a higher-order component) takes the component and memoizes the rendered output of the wrapped component.&lt;/p&gt;

&lt;p&gt;So whenever there is a re-render in the parent, For a child it will compare the props and if all the props are the same it reuses the memoized result skipping the next rendering.&lt;/p&gt;

&lt;p&gt;ùó¢ùóØùòÄùó≤ùóøùòÉùóÆùòÅùó∂ùóºùóª:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pressing the "click" button, updates the state due to which  re-renders&lt;/li&gt;
&lt;li&gt; is re-rendered every time "Parent" is re-rendered (even it is not using any parent state)&lt;/li&gt;
&lt;li&gt; is not re-rendered when "Parent" is re-rendered (As it is using memoised result)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ùóúùó∫ùóΩùóºùóøùòÅùóÆùóªùòÅ ùóΩùóºùó∂ùóªùòÅùòÄ:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If you are using function as a prop in your child, it will still re-render even if props are the same in comparison (let's discuss it in the next post)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you are thinking to have every component to use React.memo then it may overkill the performance in some scenarios where it will first compare the props if they are not the same it will still do the re-rendering (extra comparison check)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do check the profiler to actually figure out if it will be worth using it&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If a child is re-rendering it doesn't mean it is costly unless it is doing the "commit" phase which actually does the real DOM changes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Before preventing re-renders, Do fix your SLOW renders.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Do share your thoughts in the comments&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>üîµ CSS Responsive Sidebar Navigation.</title>
      <author>Chetan AtrawalkarüëâCA.</author>
      <pubDate>Tue, 24 Aug 2021 05:52:14 +0000</pubDate>
      <link>https://dev.to/chetan_atrawalkar/css-responsive-sidebar-navigation-30h9</link>
      <guid>https://dev.to/chetan_atrawalkar/css-responsive-sidebar-navigation-30h9</guid>
      <description>&lt;p&gt;üíú Today, I‚Äôm going to share a responsive sidebar navigation with a step-by-step implementation guide. This sidebar navigation menu comes with an animated hamburger button to toggle the menu drawer.&lt;/p&gt;

&lt;p&gt;Generally, a hamburger menu requires a small function of JavaScript to toggle the menu drawer. But, it can also functionalize using HTML and pure CSS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html-for-responsive-sidebar-navigation"&gt;
  &lt;/a&gt;
  HTML for Responsive Sidebar Navigation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The HTML consists of three parts, navigation menu, a toggle button and a dummy content that contains navigation links. &lt;/li&gt;
&lt;li&gt;The All div and section are wrapped into main div with class name &lt;code&gt;.container&lt;/code&gt;.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQysDYfg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yant738tgflv4ml4ngvm.png" alt="Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-css-styles"&gt;
  &lt;/a&gt;
  The CSS Styles
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;As the above HTML, first of all, we‚Äôll define some styles for the body and main container. &lt;/li&gt;
&lt;li&gt;After that styles nav using CSS position absolute property, if you want to make it static just remove position attribute. If you want to change its thickness, update the height value. &lt;/li&gt;
&lt;li&gt;Similarly, you are also able to change its background color according to your own theme.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jAF0qHYy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/51rpccs9hh0ee3kbddad.png" alt="css1"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XL4lC33F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/47dh7yb88m3w2uoqv8li.png" alt="css2"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c_12VFzY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5r1aoonj0x8akznj08i8.png" alt="css3"&gt;
&lt;/li&gt;
&lt;li&gt;Add the following CSS code for the dummy content and it's menu.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UU-whNLx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfnme8b3crowtjr5novk.png" alt="css4"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDHeZUQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nfb9ejzfu5suzx8p15iy.png" alt="css6"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#final-result"&gt;
  &lt;/a&gt;
  Final Result:-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K0rhc1oj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmq4qvbgtlv7ed38zoqu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K0rhc1oj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmq4qvbgtlv7ed38zoqu.gif" alt="Result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-you-need-source-code-please-follow-me-on-instagram-codevland"&gt;
  &lt;/a&gt;
  If you need source code please follow me on instagram @codev_land
&lt;/h3&gt;

&lt;p&gt;That‚Äôs all! Let me know by comment below if you have successfully implemented this sidebar navigation menu into your project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-claim-and-just-code-it"&gt;
  &lt;/a&gt;
  Keep Claim And Just Code It üòé
&lt;/h3&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top 5 Best eCommerce Courier Services Provider Companies in Saudi Arabia</title>
      <author>pravinroy867</author>
      <pubDate>Tue, 24 Aug 2021 05:45:44 +0000</pubDate>
      <link>https://dev.to/pravinroy867/top-5-best-ecommerce-courier-services-provider-companies-in-saudi-arabia-1pj8</link>
      <guid>https://dev.to/pravinroy867/top-5-best-ecommerce-courier-services-provider-companies-in-saudi-arabia-1pj8</guid>
      <description>&lt;p&gt;&lt;strong&gt;1)What are eCommerce Courier Services Provider Companies in Saudi Arabia&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For any online business, one of the most important tools that needs to be employed are ecommerce courier services provider companies. With the help of these companies, eCommerce enterprises are able to ensure orders placed by customers are fulfilled within short time frames and with minimal difficulty. This essentially means a good portion of faith and reliance is placed in the hands of ecommerce courier service provider companies in Saudi Arabia to take care of basic order fulfillment needs and manage the delivery experience for customers. To better understand how this partnership works we‚Äôre going to take a closer look at the &lt;a href="https://www.clickpost.ai/blog/top-10-ecommerce-courier-services-companies-in-saudi-arabia"&gt;best ecommerce courier services provider companies in Saudia Arabia&lt;/a&gt; and how to select them. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2)Top 5 Best eCommerce Courier Services Provider Companies in Saudi Arabia&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ecommerce courier services provider companies in Saudi Arabia may look similar on the outset but each one operates in a distinct and unique manner. This means there will likely be a variety of  different services that each one offers. These services and the manner in which they are provided make a huge difference when it comes to being chosen by eCommerce businesses. So you can get a good sense of how a courier services provider company operates based on its popularity among other Ecommerce enterprises. To that end, we've made a list based on the popularity of the top 5 best e-commerce courier services provider companies in Saudi Arabia.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.1)UPS&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;UPS is a long time favourite of ecommerce businesses in 220+ countries across the globe, one of which is Saudi Arabia. This ecommerce courier services provider company offers volume-based shipping services as well as packaging services. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.2)Saudi Post&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Saudi Post is a government-operated ecommerce courier services provider company in Saudi Arabia that enables global and local deliveries at varied rates. Orders are delivered at parcel stations and at customer doorsteps. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.3)Zajil Express&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Zajil Express is an excellent courier services provider company for ecommerce in Saudi Arabia as it offers door-to-door delivery and fast shipment within specific time frames. Special offers are available for priority or urgent deliveries. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.4)Fetchr&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fetchr is one of the most renowned courier services companies in Saudi Arabia for eCommerce, known for hyperlocal and express delivery services. It provides a cloud-enabled platform for order management, delivery and pickup scheduling and carrier monitoring.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.5)Careem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Careen is known for providing lightning fast delivery services, usually completing orders within 60 minutes. It makes use of advanced mapping technology to enable route optimisation and offers volume-based shipping discounts. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3)Choosing the Best eCommerce Courier Services Provider Companies in Saudi Arabia&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The top 5 best ecommerce courier service provider companies in Saudi Arabia that we‚Äôve listed above may seem like a sufficient list for you, but in truth, it may not be. Your ecommerce business may need a wider range of specialised services depending on the locations you‚Äôre delivering to, the goods you‚Äôre delivering and other customer requirements. Accordingly, you‚Äôd want to tie up with a multicarrier integration platform to see the range of other courier services provider companies operating in Saudi Arabia. And then you can narrow down that long list to select the best ecommerce courier services provider companies for you using the criteria listed below. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.1)Reach&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;The reach of an ecommerce courier services provider company refers to the locations it can deliver to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.2)Speed of Delivery&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Since customers prefer speedy delivery services, courier services provider companies in Saudi Arabia that offer express delivery are better. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.3)SLA Terms&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;The service level agreement terms you have with said courier company should be clear and encompass all your needs. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.4)Tracking&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Shipment tracking is vital to order management and must thereby be provided on a real-time basis. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.5)Shipping Rates&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Discounted shipping rates are extremely appealing, but they can result in other hidden costs occurring. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4)Conclusive Thoughts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It may not look this way from the outset, but every ecommerce business is a snowflake, in that it operates in its own unique manner and has its own set of needs, requirements and protocols to be carried out. This makes the job infinitely more difficult for carriers as they need to be adaptive and flexible to meet ecommerce needs. The good news is that most carriers are switching to ecommerce-friendly protocols to ensure they provide services that are most needed by the industry. So to find the top 5 best ecommerce courier services provider companies in Saudi Arabia for you, you can look at the current trending carriers and then turn your sights to the more niche ones to filter them out based on your ecommerce needs. &lt;/p&gt;

</description>
      <category>ecommercecourier</category>
      <category>couriercompanies</category>
      <category>saudiarabia</category>
    </item>
    <item>
      <title>Home Loan Landing Page</title>
      <author>Md Abu Taher</author>
      <pubDate>Tue, 24 Aug 2021 05:44:17 +0000</pubDate>
      <link>https://dev.to/helloabutaher/home-loan-landing-page-12m</link>
      <guid>https://dev.to/helloabutaher/home-loan-landing-page-12m</guid>
      <description>&lt;p&gt;Hello Everyone&lt;br&gt;
Here we come with another design.&lt;br&gt;
Home Loan Landing Page‚ù§Ô∏è&lt;/p&gt;

&lt;p&gt;Your feedback will be appreciated‚ù§Ô∏è.&lt;/p&gt;

&lt;p&gt;Find it on here üëá&lt;br&gt;
&lt;a href="https://www.uihut.com/web-template/template"&gt;Web Template &lt;/a&gt;&lt;br&gt;
Download over 12000+ premium resources &lt;br&gt;
On: &lt;a href="//www.uihut.com"&gt;UIHUT&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Embrace Working From Home</title>
      <author>‚Ç≥GEEK</author>
      <pubDate>Tue, 24 Aug 2021 02:51:10 +0000</pubDate>
      <link>https://dev.to/ageekdev/how-to-embrace-working-from-home-155o</link>
      <guid>https://dev.to/ageekdev/how-to-embrace-working-from-home-155o</guid>
      <description>&lt;p&gt;Even before the COVID-19 pandemic made working from home routine for millions, increasing numbers of people had been saying goodbye to their onerous commute to work. Many kinds of work can be done just as effectively, if not more so, from a home office.&lt;/p&gt;

&lt;p&gt;Whether you are a freelancer, an &lt;a href="https://ageek.dev/become-an-indie-maker"&gt;indie maker&lt;/a&gt;, an indie developer, a company part-timer, or a full-time employee who just doesn't hit the office on certain days or at all, working from home is a way to escape the daily grind.&lt;/p&gt;

&lt;p&gt;For employers, &lt;a href="https://ageek.dev/remote-working"&gt;remote working&lt;/a&gt; can boost productivity, reduce turnover, and lower organizational costs, while employees enjoy perks like flexibility and the lack of a commute.&lt;/p&gt;

&lt;p&gt;Efficiency and flexibility are some of the top reasons that people want to work from home, along with shorter hours.&lt;/p&gt;

&lt;p&gt;But sometimes flexibility is too much of a good thing. When your office is always there, waiting, with that deadline looming over your head, it's pretty hard to just close the door and pretend you've left for the day.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deep-work"&gt;
  &lt;/a&gt;
  Deep Work
&lt;/h2&gt;

&lt;p&gt;Working from home takes a lot of effort to be effective. It's going to be a sizable time commitment. But just how big of a time commitment do I need to find success?&lt;/p&gt;

&lt;p&gt;So how many hours should I work per week? There's no correct answer. The hours I work are a meaningless measure as long as I'm not making money. Popular recommends are extensive work hours, substantial sacrifices, giving up sleep, 60 to 100 hours per week, and on and on.&lt;/p&gt;

&lt;p&gt;You know what I do everyday? Write some code, answer a question, send an email, check Facebook, write some code, check on babies, write some more code!&lt;/p&gt;

&lt;p&gt;Each switch consumes my energy and time, both of which are finite resources. The most critical effect of constant task switching is that I never enter a state of deep focus and concentration.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The bottom line is to work as many hours as I can without harming my personal life, productivity and overall health.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The real question is can I still be successful if I work less hours? No one can promise that, but there are tons of researches show that working intensely (deep work) is better than longer hours (shallow work), and I'll still have a bit of time for myself and my family.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shallow work&lt;/strong&gt; is the present reality for a lot of people, characterized by a distracted work mindset and un-engaging tasks that return mediocre results.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deep work&lt;/strong&gt; involves picking a single task and focusing on it without any distraction, expected to increase productivity and improve work quality.&lt;/p&gt;

&lt;p&gt;Scientists generally agree that the ideal daily working time is around 6 hours, and more concentrated in the morning. This is what being practiced in Sweden, and they are currently experiencing significant success.&lt;/p&gt;

&lt;p&gt;To start embracing deep work, I put aside 4 hours of highly-focused distraction-free in the morning for difficult tasks like writing new content or developing new product features. Anything unimportant will be done during rest of the day as shallow work.&lt;/p&gt;

&lt;p&gt;Initially day-to-day attempts at deep work don‚Äôt feel adequate for a goal I'm striving towards; it does take time to change the temptation of long working hours. I often combine deep work with batch working lifestyle, buffering tasks for the whole weeks or months ahead.&lt;/p&gt;

&lt;p&gt;According to my personal tracking statistics, the result surprises me after couple months following deep work strategy, I accomplished more work as twice as before when I worked literally 10 to 12 hours daily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#batch-working"&gt;
  &lt;/a&gt;
  Batch Working
&lt;/h2&gt;

&lt;p&gt;After years of being highly multitasking, I have been feeling so stressful and less productive, harder to achieve something significant, and tend to finish only less important tasks in to-do lists.&lt;/p&gt;

&lt;p&gt;Multitasking has become such a regular part of my life that I believe I do it well, until I found out that this lifestyle can cause brain damage.&lt;/p&gt;

&lt;p&gt;Multitasking might seem like I'm accomplishing multiple things at the same time, but what I'm really doing is quickly shifting my attention and focus from one thing to the next.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Batch working&lt;/strong&gt; is highly-focused, topic-specific forms of working, dividing my workflow into different long time blocks (days, weeks, months) of one topic instead of jumping around from task to task constantly.&lt;/p&gt;

&lt;p&gt;Instead of repeating the same thing day after day, I only have to do it every month or so and then are able to work in a state of focus instead of scrambling.&lt;/p&gt;

&lt;p&gt;Some people like focusing by days, where I prefer to focus by ‚Äúproject‚Äù. However you decide, it will help me become more efficient, free up mental space, creates a feeling of being ‚Äúahead‚Äù, reduces stress, and allows you to think with strategy.&lt;/p&gt;

&lt;p&gt;The main thing that batch working brings to your business is efficiency. When your plan is clear for the day, it is easy to show up, focus in for an hour or two, and get the job DONE. Instead of half-done, or 99% done, it sets the stage for focused work that is wildly efficient. With just a few hours of focused work, you can be done with one task and not have to think about it again.&lt;/p&gt;

&lt;p&gt;I‚Äôve tried batching my days (terrible, I barely got anything ‚Äòbatched‚Äô and barely got through my workload), batching my weeks (I got round to my ‚Äòbatching tasks‚Äô by Thursday, so‚Ä¶. not great) and batching whole months (so far, this one seems to be working pretty well for me).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#worklife-balance"&gt;
  &lt;/a&gt;
  Work-Life Balance
&lt;/h2&gt;

&lt;p&gt;Work-life balance is the state of equilibrium where a person equally prioritizes the demands of one's career and the demands of one's personal life. It has numerous positive effects, including less stress, a lower risk of burnout and a greater sense of well-being.&lt;/p&gt;

&lt;p&gt;But no entity can be optimally efficient at more than one thing. The more limited the goals, the higher one‚Äôs chance of efficiency. A multipurpose machine ‚Äì human or corporate ‚Äì is always going to be less efficient than one which is dedicated to a single purpose.&lt;/p&gt;

&lt;p&gt;Focusing on one thing to the exclusion of all others has its costs. We might well accept a measure of inefficiency ‚Äì in professional and personal life ‚Äì in exchange for diversity and less boredom.&lt;/p&gt;

&lt;p&gt;Some days, you might focus more on work, while other days you might have more time and energy to pursue your hobbies or spend time with your loved ones.&lt;/p&gt;

&lt;p&gt;Work-life balance will mean different things to different people because, after all, we all have different life commitments. In our always-on world, balance is a very personal thing, and only you can decide the lifestyle that suits you best.&lt;/p&gt;

&lt;p&gt;I prefer to prioritize than balance my work-life, balancing seems illusive and temporary to me. I do think the will toward mastery is deeply wired into most of us, it can be deeply uncomfortable along the way and we doubt our ability to become expert.&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>remote</category>
    </item>
    <item>
      <title>4 Ways To Improve Your Website's Accessibility Today</title>
      <author>Nathan</author>
      <pubDate>Tue, 24 Aug 2021 02:46:40 +0000</pubDate>
      <link>https://dev.to/natclark/4-ways-to-improve-your-website-s-accessibility-today-33ad</link>
      <guid>https://dev.to/natclark/4-ways-to-improve-your-website-s-accessibility-today-33ad</guid>
      <description>&lt;p&gt;Often times, web accessibility is talked about as some abstract, intangible concept.&lt;/p&gt;

&lt;p&gt;In reality, there are a few very actionable ways to &lt;em&gt;drastically&lt;/em&gt; improve your website's accessibility - especially when you're just getting started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-using-prefersreducedmotion"&gt;
  &lt;/a&gt;
  1. Using "prefers-reduced-motion"
&lt;/h2&gt;

&lt;p&gt;In CSS, the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion"&gt;prefers-reduced-motion&lt;/a&gt; media query is a powerful way to optimize the way your web pages are styled for users with browsers that request reduced motion.&lt;/p&gt;

&lt;p&gt;It's important to consider that some of your website's users may have motion sickness, may be prone to seizures, or otherwise prefer a more still browsing experience.&lt;/p&gt;

&lt;p&gt;The following snippet of code will, in just four lines, forcefully disable all animations and transitions on the web pages it is installed on for users that request reduced motion:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;transition-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0s&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a standard recognized by most modern browsers, and the browsing experience of all your other users will remain unaffected by this snippet.&lt;/p&gt;

&lt;p&gt;You could add this to the beginning or end of your website's primary CSS file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-adding-alternative-text-to-social-share-images"&gt;
  &lt;/a&gt;
  2. Adding alternative text to social share images
&lt;/h2&gt;

&lt;p&gt;Many web apps and social networks, such as Facebook or Twitter, will display a "rich object" when a link from your site is shared.&lt;/p&gt;

&lt;p&gt;This can be thought of an embedded preview of your site's page.&lt;/p&gt;

&lt;p&gt;It might include the title, the description, your domain name, and an image or video related to the page.&lt;/p&gt;

&lt;p&gt;However, while including an image that other websites can understand in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag has become a quite common practice on many websites, providing alternative text is much less common.&lt;/p&gt;

&lt;p&gt;Alternative text is how screen readers describe images to users, and it's quite common on standard image elements, like this one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"apple.jpg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A red apple ontop of a wooden table."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, to provide alternative text on most rich objects, you must provide the following meta tag in your head &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:image:alt"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Example alternative text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And if you also want to provide alternative text specifically for images shared on Twitter, you must provide this meta tag in your &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"twitter:image:alt"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Example alternative text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-inserting-skip-links-at-the-top-of-your-pages"&gt;
  &lt;/a&gt;
  3. Inserting skip links at the top of your pages
&lt;/h2&gt;

&lt;p&gt;Skip links help screen reader users save time when they navigate the web.&lt;/p&gt;

&lt;p&gt;It allows keyboard users to display a hidden little box that should say something like "Skip to main content", when they first press the tab key on a web page.&lt;/p&gt;

&lt;p&gt;If they then go on to press the enter key, they'll be scrolled immediately &lt;em&gt;past&lt;/em&gt; the site's navigation and onto the main section of the page.&lt;/p&gt;

&lt;p&gt;This way, users with screen readers don't have to listen through the reading of the entire navbar, and can just skip directly to the article.&lt;/p&gt;

&lt;p&gt;Consider the following example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    ...
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#main-content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Skip to main content&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
        ...
    &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;main&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"main-content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        ...
    &lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Skip links must always be placed &lt;em&gt;directly below your &amp;lt;body&amp;gt; tag&lt;/em&gt;, because they must be the first focusable element.&lt;/p&gt;

&lt;p&gt;Screen readers will detect it, even if it's not normally visible to the user.&lt;/p&gt;

&lt;p&gt;Following the hash link will send the user to the element with the matching ID (if it exists). In the provided example, the user will be scrolled by to the &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; element, skipping right past the navigation menu.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-implementing-semantic-html"&gt;
  &lt;/a&gt;
  4. Implementing semantic HTML
&lt;/h2&gt;

&lt;p&gt;Lastly, another great practice for improving your web accessibility and helping screen readers better understand your site, is using semantic HTML tags.&lt;/p&gt;

&lt;p&gt;Semantic HTML tags provide contextual understanding about the way your pages are structured.&lt;/p&gt;

&lt;p&gt;Here are all of the &lt;a href="https://www.w3schools.com/html/html5_semantic_elements.asp"&gt;semantic tags&lt;/a&gt; in HTML5:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sections"&gt;
  &lt;/a&gt;
  Sections
&lt;/h3&gt;

&lt;p&gt;These semantic tags are like &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements, except they provide additional context to screen readers and search engines:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;: A header represents an introduction or opening section to a piece of content, or a collection of navigation links.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;: A &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; tag contains navigation links.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;: This can be used to define a section in the document.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;: Often used to enclose sidebars, the aside tag represents something that is aside from the content it is surrounded by.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;: The main content of the document should be inside the &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;: An article is an independent, isolated, and modular piece of content. For example, this could be something like a product from a search results grid on an E-commerce site, or a blog post preview.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;: A footer represents, well, any portion of a document that is designated to be a footer. It might include things like copyright information.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is one example of each semantic section tag in action:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
        ...
    &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;main&amp;gt;&lt;/span&gt;
            ...
        &lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;aside&amp;gt;&lt;/span&gt;
            ...
        &lt;span class="nt"&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;header&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
            ...
        &lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;header&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
            ...
        &lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
        ...
    &lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Keep in mind, they don't all have to be used! Only use semantic tags when necessary and appropriate.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inline-semantics"&gt;
  &lt;/a&gt;
  Inline semantics
&lt;/h3&gt;

&lt;p&gt;These semantic tags enclose text and are usually used within &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt;: This indicates that enclosed text is a time or date. Often, the &lt;a href="https://www.geeksforgeeks.org/html-datetime-attribute/"&gt;"datetime" attribute&lt;/a&gt; is included to help search engines better understand the document.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;mark&amp;gt;&lt;/code&gt;: This indicates that enclosed text should be highlighted. Many browsers will add a yellow background color to a &lt;code&gt;&amp;lt;mark&amp;gt;&lt;/code&gt; element by default.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's an example of each:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;As of writing this, the time is &lt;span class="nt"&gt;&amp;lt;time&amp;gt;&lt;/span&gt;11:00&lt;span class="nt"&gt;&amp;lt;/time&amp;gt;&lt;/span&gt;, and the date is &lt;span class="nt"&gt;&amp;lt;time&lt;/span&gt; &lt;span class="na"&gt;datetime=&lt;/span&gt;&lt;span class="s"&gt;"2021-08-22"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;August 22&lt;span class="nt"&gt;&amp;lt;/time&amp;gt;&lt;/span&gt;.

&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is some text, but &lt;span class="nt"&gt;&amp;lt;mark&amp;gt;&lt;/span&gt;this is some important text&lt;span class="nt"&gt;&amp;lt;/mark&amp;gt;&lt;/span&gt;.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#semantic-images"&gt;
  &lt;/a&gt;
  Semantic images
&lt;/h3&gt;

&lt;p&gt;These semantic tags are for self-contained images:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt;: Figures contain an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element, and indicate that the underlying image is "self-contained".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt;: Optionally, a &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; element can also contain a &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt; element, as either the first or last child, to visible describe the image.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's an example of a &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; tag with a &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;figure&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ball.jpg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A red ball centered in a grassy field"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;figcaption&amp;gt;&lt;/span&gt;A red ball centered in a grassy field&lt;span class="nt"&gt;&amp;lt;/figcaption&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/figure&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Your &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt; tag does not have to match the &lt;code&gt;alt&lt;/code&gt; attribute of your &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag(s)!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dropdowns"&gt;
  &lt;/a&gt;
  Dropdowns
&lt;/h3&gt;

&lt;p&gt;These last two semantic tags work together to create content with toggled visibility:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;: This tag specifies details that the user can toggle the visibility of. It's sort of like a dropdown, but without JavaScript.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt;: This should be the first child element of any &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; element. It is a visible toggle for the rest of the content in the &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; element.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's an example of how each of these tags would be used:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;details&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;If you click this, the sibling element(s) will be toggled!&lt;span class="nt"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This text is hidden by default, but its visibility can be toggled by the `&lt;span class="nt"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;` tag.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Here is some more text, which is also hidden by default.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Perhaps specific examples for each of these semantic tags will be explored in a future post.&lt;/p&gt;

&lt;p&gt;There's also many subtle rules about some of these tags that are important to follow. For example, no document page should have more than one &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; tag, and a &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; tag should not be a descendant of certain tags, such as &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You made it to the end!&lt;/p&gt;

&lt;p&gt;While the practices enumerated in this article vary in implementation difficulty, they are all quite actionable and produce very tangible results.&lt;/p&gt;

&lt;p&gt;Even just implementing &lt;em&gt;two&lt;/em&gt; of these four practices is a great step in the right direction, demonstrating that your site &lt;em&gt;actually&lt;/em&gt; cares about accessibility, not just "ticking the compliance box".&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Do you (still) code for fun?</title>
      <author>Emmanuel Obogbaimhe</author>
      <pubDate>Tue, 24 Aug 2021 02:18:41 +0000</pubDate>
      <link>https://dev.to/emmanuelobo/do-you-code-for-fun-1ph1</link>
      <guid>https://dev.to/emmanuelobo/do-you-code-for-fun-1ph1</guid>
      <description>&lt;p&gt;So I used to code in my spare time. Working on several side projects, going to hackathons, meetups, etc. I really enjoyed it but part of why I was doing it was to improve my skills, strengthen my portfolio and potentially make a profit if it turned into a success.&lt;/p&gt;

&lt;p&gt;But now I have a great job that challenges me and allows me to be creative in my approach to building tools. &lt;/p&gt;

&lt;p&gt;Lately I've been getting an ich to get back into free-time coding. But I feel like it would be a waste of time now. And I'm at the point in my life where I really need to utilize my time wisely. So if I'm dedicating a chunk of time to something it has to be beneficial.&lt;/p&gt;

&lt;p&gt;What do you guys think? Anyone in a similar situation? Or different, doesn't matter just want to get some thoughts.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>career</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Java Interfaces</title>
      <author>Patricia Nicole</author>
      <pubDate>Tue, 24 Aug 2021 01:26:46 +0000</pubDate>
      <link>https://dev.to/pat_the99/java-interfaces-306o</link>
      <guid>https://dev.to/pat_the99/java-interfaces-306o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#interfaces-in-java"&gt;
  &lt;/a&gt;
  üìå Interfaces in Java
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;An interface is a reference type, similar to a class that can contain &lt;strong&gt;only&lt;/strong&gt; constants, method signatures, default methods, static methods and nested types. &lt;/li&gt;
&lt;li&gt;Interfaces cannot be instantiated - they can only be implemented by classes and extended by other interfaces.&lt;/li&gt;
&lt;li&gt;Note that an interface can extend any number of interfaces. The interface declaration can include a comma-separated list of all the interfaces that it extends.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#the-interface-body"&gt;
  &lt;/a&gt;
  The Interface Body
&lt;/h3&gt;

&lt;p&gt;The interface body can contain &lt;strong&gt;abstract methods, default methods and static methods&lt;/strong&gt;. All of these methods in an interface are &lt;strong&gt;implicitly&lt;/strong&gt; &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;static&lt;/code&gt;, and &lt;code&gt;final&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#implementing-an-interface"&gt;
  &lt;/a&gt;
  Implementing an Interface
&lt;/h4&gt;

&lt;p&gt;A class can implement more than one interface. The &lt;code&gt;implements&lt;/code&gt; keyword is followed by a comma-separated list of the interfaces implemented by the class.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-an-interface-as-a-type"&gt;
  &lt;/a&gt;
  Using an Interface as a Type
&lt;/h3&gt;

&lt;p&gt;When a new interface is defined, a new reference data type is defined. The interface names can be used anywhere a data type can be used. If a variable is assigned an interface type, any object assigned to it must be an instance of a class that implements the interface.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#evolving-interfaces"&gt;
  &lt;/a&gt;
  Evolving Interfaces
&lt;/h3&gt;

&lt;p&gt;To avoid the scenario where implementing classes need to change because of the additions to the implemented interface:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a new interface that extends to the changed interface. In this way, implementing classes only need to change what interface to implement, whether the child or the parent. Now users of the code can choose to continue to use the old interface or to upgrade to the new interface.&lt;/li&gt;
&lt;li&gt;Alternatively, new methods can be defined as default methods. Since implementations are provided for default methods,  users who have classes that implement interfaces enhanced with default or static methods do not have to modify or recompile them to accomodate the additional methods.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#default-methods"&gt;
  &lt;/a&gt;
  Default Methods
&lt;/h3&gt;

&lt;p&gt;Default methods enable one to add new functionality to the interfaces of the library to ensure binary compatibility with code written for older versions of that interfaces.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A default method in an interface is defined with the &lt;code&gt;default&lt;/code&gt; keyword at the beginning of the method signature. All method declarations in an interface, including default methods are implicityly public so the &lt;code&gt;public&lt;/code&gt; modifier can be omitted.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#extending-interfaces-that-contain-default-methods"&gt;
  &lt;/a&gt;
  Extending Interfaces that Contain Default Methods
&lt;/h4&gt;

&lt;p&gt;When an interface with a default method is extended, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;There is no need to mention the default method at all, which lets the extended interface inherit the default method&lt;/li&gt;
&lt;li&gt;The default method can be redeclared which makes it abstract&lt;/li&gt;
&lt;li&gt;The default method can be redefined by overriding it&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#static-methods"&gt;
  &lt;/a&gt;
  Static Methods
&lt;/h3&gt;

&lt;p&gt;A static method can also be defined in an interface. It is a method that is associated with the class in which it is defined rather than with any object. Every instance of the class shares its static methods. Now this helps in organizing helper methods.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#integrating-default-methods-into-existing-libraries"&gt;
  &lt;/a&gt;
  Integrating Default Methods into Existing Libraries
&lt;/h3&gt;

&lt;p&gt;Default methods enable the addition of new functionality to existing interfaces and ensure binary compatibilty with code written for older versions of those interfaces. In particular, default methods enable the addition of methods that accept lambda expressions as parameters to existing interfaces.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;An interface declaration can contain method signatures, default methods, static methods and constant definitions. The only methods that have implementations are default and static methods&lt;/li&gt;
&lt;li&gt;A class that implements an interface must implement all the mothods declared in the interface.&lt;/li&gt;
&lt;li&gt;An interface name can be used anywhere a type can be used.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cheers to continued learning üçª!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  RESOURCES
&lt;/h3&gt;

&lt;p&gt;[1] &lt;a href="https://docs.oracle.com/javase/tutorial/java/concepts/interface.html"&gt;Java Doc, What is an Interface&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>codenewbie</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
