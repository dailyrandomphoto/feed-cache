<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Cool Projects to Help You Learn React JS - Part 1</title>
      <author>Gerald</author>
      <pubDate>Tue, 05 Oct 2021 21:18:15 +0000</pubDate>
      <link>https://dev.to/geraldmuvengei06/cool-projects-to-help-you-learn-react-js-part-1-g19</link>
      <guid>https://dev.to/geraldmuvengei06/cool-projects-to-help-you-learn-react-js-part-1-g19</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-react"&gt;
  &lt;/a&gt;
  What is React
&lt;/h3&gt;

&lt;p&gt;React is a declarative and component-based Javascript Library for building web interfaces. Its developed and maintained by  &lt;a href="https://facebook.com"&gt;Facebook&lt;/a&gt;. Although it's grouped with other "Frameworks" like VueJS and Angular, its termed much as a Library and not a framework. &lt;a href="https://reactjs.org/"&gt;Find out more about React on this link&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-this-article"&gt;
  &lt;/a&gt;
  Why this article?
&lt;/h3&gt;

&lt;p&gt;Personally, when I want to learn a new Framework, I go through the documentation to grasp the basic and core 'Hows and Whys', then I start basic applications to practice the concepts I've learned. This has always worked like magic for me. It goes without saying that learning by doing does a lot when it comes to grasping new concepts. I choose this approach since writing code is like a science, its a creative, intuitive and involving, like Math. Hence, learning by doing does it!&lt;/p&gt;

&lt;p&gt;Let's skip the poetry and head first into Interesting Part of this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interesting-react-projects"&gt;
  &lt;/a&gt;
  Interesting React Projects
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-reactclockfaces-aka-reactcf-a-simple-reactjs-clock-with-many-faces"&gt;
  &lt;/a&gt;
  1. ReactClockFaces A.K.A. ReactCF - A Simple React.Js Clock With Many Faces
&lt;/h3&gt;

&lt;p&gt;For this projects you'll learn these skills. The purpose of the project can be to display a Digital Clock that updates itself after every second, just like an actual digital watch. You can have different styles, or rather faces for displaying your digital clock. &lt;code&gt;Hint: Use Javascript's builtin function: setTimeout()&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React Components&lt;/li&gt;
&lt;li&gt;Reusability&lt;/li&gt;
&lt;li&gt;React DOM and Reactivity&lt;/li&gt;
&lt;li&gt;React Hooks: useEffect, useState&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-stockfoto"&gt;
  &lt;/a&gt;
  2. Stockfoto
&lt;/h3&gt;

&lt;p&gt;However you may call it, the main aim of this project is to consume Unsplash Photos API, which is open source and have fun while doing it. &lt;em&gt;Note: Read through &lt;a href="https://unsplash.com/documentation"&gt;Unsplash API Guildlines&lt;/a&gt; to make sure you're not breaking any rules.&lt;/em&gt; This will be a very interesting project!&lt;br&gt;
The api and interesting endpoints&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Random Picture&lt;/li&gt;
&lt;li&gt;Latest pictures&lt;/li&gt;
&lt;li&gt;Search Pictures&lt;/li&gt;
&lt;li&gt;Get One Picture and download picture
#### What you will learn&lt;/li&gt;
&lt;li&gt;React Components&lt;/li&gt;
&lt;li&gt;Reusability&lt;/li&gt;
&lt;li&gt;React DOM and Reactivity&lt;/li&gt;
&lt;li&gt;React Hooks: useEffect, useState&lt;/li&gt;
&lt;li&gt;React fetchAPI&lt;/li&gt;
&lt;li&gt;ES6&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cool-features-you-could-implement"&gt;
  &lt;/a&gt;
  Cool Features you could implement.
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Lazy loading Images&lt;/li&gt;
&lt;li&gt;Lazy Loading Pagination - Load more images when a user scrolls to the bottom&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll be happy to see what you create!&lt;/p&gt;

&lt;p&gt;As you wait for Part 2.&lt;br&gt;
Regards&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>unsplash</category>
    </item>
    <item>
      <title>An Overview of the AWS Cloud Adoption Framework | AWS White Paper Summary</title>
      <author>Ahmed Adel</author>
      <pubDate>Tue, 05 Oct 2021 20:57:38 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/an-overview-of-the-aws-cloud-adoption-framework-aws-white-paper-summary-144f</link>
      <guid>https://dev.to/awsmenacommunity/an-overview-of-the-aws-cloud-adoption-framework-aws-white-paper-summary-144f</guid>
      <description>&lt;p&gt;üåü Migrating to the cloud is a process. You don't just snap your fingers and have everything magically hosted in AWS. It takes a lot of effort to get applications migrated to AWS and having a successful cloud migration is something that requires expertise. &lt;/p&gt;

&lt;p&gt;üåü Luckily, many people have had successful cloud migrations in the past, so a lot of the knowledge around how to go about hosting on AWS has been captured and shared. &lt;/p&gt;

&lt;p&gt;üåü AWS CAF organizes guidance into six focus areas. We describe these focus areas as Perspectives.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ffi82Fvs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sp7el1bcx8ekhcqp1j55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ffi82Fvs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sp7el1bcx8ekhcqp1j55.png" alt="Perspectives"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üåü Each AWS CAF Perspective is made up of a set of CAF Capabilities, which is a composite of responsibilities. Each Capability describes ‚Äúwhat‚Äù a stakeholder owns or manages in the cloud adoption journey. Each Capability consists of a set of CAF Skills and Processes that provide structure to identify gaps in your existing skills and processes.&lt;/p&gt;

&lt;p&gt;üåü In General, Business, People, and Governance Perspectives focus on business capabilities, and the Platform, Security, and Operations Perspectives focus on technical capabilities.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-%E2%9E%BD-aws-caf-perspectives-"&gt;
  &lt;/a&gt;
  ___________ ‚ûΩ AWS CAF Perspectives: ___________
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#1business-perspective-value-realization"&gt;
  &lt;/a&gt;
  1-Business Perspective: [Value Realization]
&lt;/h2&gt;

&lt;p&gt;‚û§ Focuses on ensuring that IT is aligned with business needs and that IT investments can be traced to demonstrable business results. &lt;br&gt;
‚û§ Engage stakeholders within the Business Perspective to create a strong business case for cloud adoption and ensure that there is a strong alignment between your organization‚Äôs business strategies and goals and IT strategies and goals. &lt;/p&gt;

&lt;p&gt;‚úÖ &lt;strong&gt;Common roles:&lt;/strong&gt; Business Managers, Finance Managers, Budget Owners, and Strategy Stakeholders.&lt;/p&gt;

&lt;p&gt;‚òû &lt;strong&gt;Capability Descriptions:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;IT Finance&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to plan, allocate, and manage the budget for IT expenses given changes introduced with the cloud services consumption model.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;IT Strategy&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to leverage IT as a business enabler. Cloud services provide efficiencies that reduce the need to maintain applications, enabling IT to focus on business alignment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Benefits Realization&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to measure the benefits received from their IT investments. This represents Total Cost of Ownership (TCO) or Return on Investment (ROI) calculations coupled with budget management.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Business Risk Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to understand the business impact of preventable, strategic, and external risks to the organization. For many, these risks stem from the impact of financial and technology constraints on agility. Organizations find that with a move to the cloud, many of these constraints are reduced or eliminated.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#2people-perspective-roles-and-readiness"&gt;
  &lt;/a&gt;
  2-People Perspective: [Roles and Readiness]
&lt;/h2&gt;

&lt;p&gt;‚û§ Provides guidance for stakeholders responsible for people development, training, and communications. Helps stakeholders understand how to update the staff skills and organizational processes they will use to optimize and maintain their workforce, and ensure competencies are in place at the appropriate time. &lt;/p&gt;

&lt;p&gt;‚úÖ &lt;strong&gt;Common roles:&lt;/strong&gt; Human Resources, Staffing, and People Managers.&lt;/p&gt;

&lt;p&gt;‚òû &lt;strong&gt;Capability Descriptions:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Resource Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to project personnel needs and to attract and hire the talent necessary to support the organization‚Äôs goals.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Incentive Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to ensure that workers receive competitive compensation and benefits for the value they bring to your organization.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Career Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to ensure the personal fulfillment of your employees, their career opportunities, and their financial security&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Training Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to ensure employees have the knowledge and skills necessary to perform their roles and comply with organizational policies and requirements.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Organizational Change Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to manage the effects and impacts of business, structural, and cultural change introduced with cloud adoption.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#3governance-perspective-prioritization-and-control"&gt;
  &lt;/a&gt;
  3-Governance Perspective: [Prioritization and Control
&lt;/h2&gt;

&lt;p&gt;‚û§ Provides guidance for stakeholders responsible for supporting business processes with technology. Helps stakeholders understand how to update the staff skills and organizational processes that are necessary to ensure business governance in the cloud and manage and measure cloud investments to evaluate their business outcomes. &lt;/p&gt;

&lt;p&gt;‚úÖ &lt;strong&gt;Common roles:&lt;/strong&gt;CIO, Program Managers, Project Managers, Enterprise Architects, Business Analysts, and Portfolio Managers.&lt;/p&gt;

&lt;p&gt;‚òû &lt;strong&gt;Capability Descriptions:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Portfolio Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to manage and prioritize IT investments, programs, and projects in alignment with your organization‚Äôs business goals.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Program and Project Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to manage one or several related projects to improve organizational performance and complete the projects on time and on budget.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Business Performance Measurement&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to measure and optimize processes in support of your organization‚Äôs goals&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;License Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Defines your organization‚Äôs capability to procure, distribute, and manage the licenses needed for IT systems, services, and software. The cloud consumption model requires that teams develop new skills for procurement and license management and new processes for evaluating license needs.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#4platform-perspective-applications-and-infrastructure"&gt;
  &lt;/a&gt;
  4-Platform Perspective: [Applications and Infrastructure
&lt;/h2&gt;

&lt;p&gt;‚û§ Helps stakeholders understand how to update the staff skills and organizational processes that are necessary to deliver and optimize cloud solutions and services&lt;/p&gt;

&lt;p&gt;‚úÖ &lt;strong&gt;Common roles:&lt;/strong&gt; CTO, IT Managers, and Solution Architects&lt;/p&gt;

&lt;p&gt;‚òû &lt;strong&gt;Capability Descriptions:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Compute Provisioning&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to provide processing and memory in support of enterprise applications. The skills and processes necessary to provision cloud services are very different from the skills and processes needed to provision physical hardware and manage data center facilities.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Network Provisioning&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to provide computing networks to support enterprise applications&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Storage Provisioning&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to provide storage in support of enterprise applications&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Database Provisioning&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to provide database and database management systems in support of enterprise applications&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Systems and Solution Architecture&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to define and describe the design of a system and to create architecture standards for the organization&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Application Development&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to customize or develop applications to support your organization‚Äôs business goals. New skills and processes for Continuous Integration and Continuous Deployment (CI/CD) are a critical part of designing applications that take advantage of cloud services and the agility promised by cloud computing.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#5security-perspective-risk-and-compliance"&gt;
  &lt;/a&gt;
  5-Security Perspective: [Risk and Compliance]
&lt;/h2&gt;

&lt;p&gt;‚û§  Helps stakeholders understand how to update the staff skills and organizational processes that are necessary to ensure that the architecture deployed in the cloud aligns to the organization‚Äôs security control requirements, resiliency, and compliance requirements. &lt;/p&gt;

&lt;p&gt;‚úÖ &lt;strong&gt;Common roles:&lt;/strong&gt; CISO, IT Security Managers, and IT Security Analysts.&lt;/p&gt;

&lt;p&gt;‚òû &lt;strong&gt;Capability Descriptions:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Identity and Access Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on capability to create multiple access control mechanisms and manage the permissions for each of these within your AWS Account. Privileges must be granted before your user community can provision or orchestrate resources.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Detective Control&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on capability for native logging as well as services that you can leverage to provide greater visibility near to real time for occurrences in the AWS environment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Infrastructure Security&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Your AWS environment can be defined and adjusted to evolve with your workload and business requirements. This capability provides the opportunity to shape your AWS security controls in an agile fashion; automating your ability to build, deploy, and operate your security infrastructure&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Data Protection&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on capability to main visibility and control over data, and how it is accessed and used in the organization.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Incident Response&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to respond, manage, reduce harm, and restore operations during and after a security incident&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#6operations-perspective-manage-and-scale"&gt;
  &lt;/a&gt;
  6-Operations Perspective: [Manage and Scale]
&lt;/h2&gt;

&lt;p&gt;‚û§ Helps stakeholders understand how to update the staff skills and organizational processes that are necessary to ensure system health and reliability during the move of operations to the cloud and then to operate using agile, ongoing, cloud computing best practices. &lt;/p&gt;

&lt;p&gt;‚úÖ &lt;strong&gt;Common roles:&lt;/strong&gt; IT Operations Managers and IT Support Managers.&lt;/p&gt;

&lt;p&gt;‚òû &lt;strong&gt;Capability Descriptions:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Service Monitoring&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to detect and respond to issues with the health of IT services and enterprise applications.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Application Performance Monitoring&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to ensure application performance meets its defined requirements&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Resource Inventory Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on capability to align your organization‚Äôs assets in a way that provides the best, most cost-efficient service&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Release Management/Change Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to manage, plan, and schedule changes to the IT environment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Reporting and Analytics&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to ensure compliance with your organization‚Äôs reporting policies and to ensure ongoing analysis and reporting of performance against key KPIs such as service-level agreements (SLAs) and operational-level agreements (OLAs).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Business Continuity/Disaster Recovery (BC/DR)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to operate in the event of a significant failure of IT services and the capability to recover from those failures within the time parameters defined by your organization.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;IT Service Catalog&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization‚Äôs capability to select, maintain, advertise, and deliver an SLA or set of IT services&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;References:&lt;br&gt;
&lt;a href="https://d1.awsstatic.com/whitepapers/aws_cloud_adoption_framework.pdf?did=wp_card&amp;amp;trk=wp_card"&gt;Original paper&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
      <category>agile</category>
    </item>
    <item>
      <title>Node.js &amp; Deno Comparison</title>
      <author>Shreyansh sheth</author>
      <pubDate>Tue, 05 Oct 2021 20:55:53 +0000</pubDate>
      <link>https://dev.to/shreyanshsheth/node-js-deno-comparison-1jhe</link>
      <guid>https://dev.to/shreyanshsheth/node-js-deno-comparison-1jhe</guid>
      <description>&lt;h2&gt;
  &lt;a href="#so-what-is-deno"&gt;
  &lt;/a&gt;
  So what is Deno?
&lt;/h2&gt;

&lt;p&gt;Deno is JavaScript , typescript runtime like node.js but it can run typescript natively and has so many new features related to security and module delivery.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-compare-to-nodejs"&gt;
  &lt;/a&gt;
  Why compare to node.js?
&lt;/h2&gt;

&lt;p&gt;At it‚Äôs core Deno is same as node and they both uses V8 engine for javascript execution and also their creator &lt;a href="https://tinyclouds.org/"&gt;Ryan Dhal&lt;/a&gt; is same but they are completely different how you manage your dependencies and also files.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-you-should-use"&gt;
  &lt;/a&gt;
  Why You Should Use.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#why-you-should-use-deno"&gt;
  &lt;/a&gt;
  Why you should use Deno?
&lt;/h3&gt;

&lt;p&gt;Deno has future because of it‚Äôs growing community and also it has so many features that node is lacking and also it is so much secure and better run time than node.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-you-should-use-node"&gt;
  &lt;/a&gt;
  Why you should use node?
&lt;/h3&gt;

&lt;p&gt;Although Deno is future proof but node has so much bigger community than any other platform and also if you find yourself stuck you can easily find solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-that-are-changed-with-deno"&gt;
  &lt;/a&gt;
  Things that are changed with Deno.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Have to give &lt;a href="https://deno.land/manual/runtime/permission_apis"&gt;permission&lt;/a&gt; for accessing files read and write , net , hrtime , etc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deno.land/manual/linking_to_external_code"&gt;Importing modules&lt;/a&gt; is completely change and now you can import from url and file sitting on CDN&lt;/li&gt;
&lt;li&gt;No-Package Manager / No-Modules Folder. All the modules fetch from URL cache under Deno and you don‚Äôt need to worry about that&lt;/li&gt;
&lt;li&gt;Don‚Äôt worry about different setup for typescript it‚Äôs just works out of the box.&lt;/li&gt;
&lt;li&gt;Deno has different built in APIs than node because all of async calls end up in some sort of promise.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Deno is the future, but node is current the king for JavaScript development thanks to massive size of community and millions of open source package.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>deno</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Integrating Cryptocurrency as a Payment Option: Javascript</title>
      <author>Omolade Ekpeni</author>
      <pubDate>Tue, 05 Oct 2021 20:52:32 +0000</pubDate>
      <link>https://dev.to/omolade11/integrating-cryptocurrency-as-a-payment-option-javascript-1jad</link>
      <guid>https://dev.to/omolade11/integrating-cryptocurrency-as-a-payment-option-javascript-1jad</guid>
      <description>&lt;p&gt;Considering the extent to which cryptocurrency as a medium of payment has evolved, Soon enough your employers will start requesting to integrate multi-currency as a payment option in their platforms or they already did üòè. In this article, &lt;a class="mentioned-user" href="https://dev.to/tkings"&gt;@tkings&lt;/a&gt;
 and I will be sharing a great solution that works for implementing cryptocurrency payment on javascript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M4bzMt8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kf457gzh6p8mjjxyq2bq.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M4bzMt8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kf457gzh6p8mjjxyq2bq.jpeg" alt="Payment Process Flowchart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The diagram above shows the flow of how the implementation will serve the merchant and customer¬†. The steps are outlined in the &lt;a href="https://dev.to/omolade11/integrating-cryptocurrency-as-a-payment-option-html-352i"&gt;previous article&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://coinforbarter.com"&gt;CoinForBarter&lt;/a&gt; gives developers a seamless experience, and they support 11 currencies across multiple chains for customers. To proceed, you will need to &lt;a href="https://dashboard.coinforbarter.com/login"&gt;sign up&lt;/a&gt; with them and &lt;a href="https://dashboard.coinforbarter.com/settings/api"&gt;generate an API KEY&lt;/a&gt; from &lt;a href="https://coinforbarter.com"&gt;CoinForBarter&lt;/a&gt;. &lt;a href="https://coinforbarter.com"&gt;CoinForBarter&lt;/a&gt; like Flutterwave or Stripe provides an implementation method for JavaScript.&lt;/p&gt;

&lt;p&gt;An example of how you can implement cryptocurrency in your javascript is below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form&amp;gt;
&amp;lt;script src="https://checkout.coinforbarter.com/v1/script.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;button type="button" onClick="makePayment()"&amp;gt;Pay Now&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;script&amp;gt;
        function makePayment() {
            CoinForBarterCheckout({
                publicKey: "xxxxxxxxxxxxxxxxxxxxxxx",
                txRef: "RX1",
                amount: 10,
                currency: "BTC",
                redirectUrl: "http://example.com",
                currencies: [], //accept all currencies if you leave it empty
                meta: {
                    consumer_id: 23,
                },
                customer: "example@gmail.com",
                customerPhoneNumber: "+234xxxxxx",
                customerFullName: "John Doe",
                customizations: {
                    title: "My store",
                    description: "Payment for items in cart",
                    logo: "https://assets.example.com/logo.png",
                },
                onError: (data) =&amp;gt; {
                    console.log(data);
                    alert(data.message)
                },
                onSuccess: (data) =&amp;gt; {
                    console.log(data);
                }
            });
        }
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is an &lt;a href="https://github.com/coinforbarter/examples/tree/main/inline-implementation/php"&gt;example implementation for php&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input-names-and-description"&gt;
  &lt;/a&gt;
  Input Names and Description
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;publicKey&lt;/strong&gt;: You can get your publicKey from your CoinForBarter dashboard. It helps identify your transaction.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;customer&lt;/strong&gt;: The email address of the customer to make that payment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;customerPhoneNumber&lt;/strong&gt;: This is the phone number of the customer. It is an optional field.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;customerFullName&lt;/strong&gt;: This is the full name of the customer. It is an optional field.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;txRef&lt;/strong&gt;: This is a random string to help you remember this transaction.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;amount&lt;/strong&gt;: The amount to charge your customer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;currency&lt;/strong&gt;: The currency that you have set the amount in.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;customizations&lt;/strong&gt;: An object to display the title and description to be displayed on the payment page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;redirectUrl&lt;/strong&gt;: A url to redirect the customer to when the transaction ends. This is optional.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;currencies&lt;/strong&gt;: You can have multiple of these fields. It will be a list of the currencies you want to accept for this transaction. It is optional, and if left empty, the customer will pay in any supported currency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;onError&lt;/strong&gt;: A function to handle the data sent back if transactions fails or is cancelled. If provided, it overrides the redirectUrl.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;onSuccess&lt;/strong&gt;¬†: A function to handle the data sent back if transactions is successful. If provided, it overrides the redirectUrl.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Having inserted a user's public key (Tochukwu's) into the above JavaScript code, the 'Pay Now' button leads to this screen below on your website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YNPzuUKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukdq4sx62563527rx4jl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YNPzuUKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukdq4sx62563527rx4jl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gQhUWUyB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqmnz17s3txvhda8tfgv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gQhUWUyB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqmnz17s3txvhda8tfgv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://coinforbarter.com"&gt;CoinForBarter&lt;/a&gt; has a long list of supported currencies and &lt;a href="https://dashboard.coinforbarter.com/payouts/settings"&gt;helps you get settled in your local bank account automatically&lt;/a&gt;. The list of supported currencies can be viewed in the note section of the &lt;a href="https://dev.to/omolade11/integrating-cryptocurrency-as-a-payment-option-html-352i"&gt;previous article&lt;/a&gt;.&lt;br&gt;
In this article, we learnt how to integrate cryptocurrency as a payment option with Javascript. &lt;a class="mentioned-user" href="https://dev.to/tkings"&gt;@tkings&lt;/a&gt;
 and I wrote it. In the future, we will be writing on implementing it using React, React Native and API. We will appreciate your comments, and if you have any questions, do not hesitate to hit either &lt;a href="https://twitter.com/tkings_"&gt;Kingsley&lt;/a&gt; or &lt;a href="https://twitter.com/OmoladeEkpeni"&gt;me&lt;/a&gt; up on Twitter.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>payment</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>Diffrent Ways To Create A React Application</title>
      <author>Shreyansh sheth</author>
      <pubDate>Tue, 05 Oct 2021 20:50:47 +0000</pubDate>
      <link>https://dev.to/shreyanshsheth/diffrent-ways-to-create-a-react-application-55a5</link>
      <guid>https://dev.to/shreyanshsheth/diffrent-ways-to-create-a-react-application-55a5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-createreactapp"&gt;
  &lt;/a&gt;
  1. Create-React-App
&lt;/h2&gt;

&lt;p&gt;Provide a Simple Environment With All The Things Already Setup For You And You Just Have To Write Code.&lt;/p&gt;

&lt;p&gt;Create React App doesn‚Äôt handle backend logic or databases; it just creates a frontend build pipeline, so you can use it with any backend you want. Under the hood, it uses Babel and webpack, but you don‚Äôt need to know anything about them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://create-react-app.dev/"&gt;&lt;strong&gt;CRA Docs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;create new app with create-react-app&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app appName
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-vite"&gt;
  &lt;/a&gt;
  2. Vite
&lt;/h2&gt;

&lt;p&gt;Same As Create-React-App It Provide All Configuration Out Of The Box. Also, It Supports SSR &amp;amp; SSG.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vitejs.dev/"&gt;&lt;strong&gt;Vite Docs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To Create Vite App&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init vite@latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-nextjs"&gt;
  &lt;/a&gt;
  3. Next.js
&lt;/h2&gt;

&lt;p&gt;Currently The Best Tool To Create SSR(server-site-rendered) &amp;amp; SSG(static-site-generation) For React. It Has Inbuilt Optimization That Makes Your App Run So Much Faster &amp;amp; Also If You Want To Add Serverless Function Next.js Also Provides That.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextjs.org/"&gt;&lt;strong&gt;Next.js Docs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To Create Next.js Application&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-next-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-gatsby"&gt;
  &lt;/a&gt;
  4. Gatsby
&lt;/h2&gt;

&lt;p&gt;Gatsby Does SSG And It Has Huge Plugin System To Support Gatsby Compile Your React Code To HTML-CSS So User Don't Have To Wait For Javascript And React To Load&lt;br&gt;
&lt;a href="https://www.gatsbyjs.com/"&gt;&lt;strong&gt;Gatsby Docs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To Create Gatsby App&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init gatsby
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-razzle"&gt;
  &lt;/a&gt;
  5. Razzle
&lt;/h2&gt;

&lt;p&gt;It Is Serverside Rendering Framework As Well And This Provide Much More Flexibility.&lt;br&gt;
&lt;a href="https://razzlejs.org/"&gt;&lt;strong&gt;Razzle Docs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To Create Razzle App&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -g create-razzle-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-raw-ltscriptgt-endraw-tags"&gt;
  &lt;/a&gt;
  6. &lt;code&gt;&amp;lt;Script&amp;gt;&lt;/code&gt; Tags
&lt;/h2&gt;

&lt;p&gt;You Can Use Script Tags For React And After Importing That Your Code May Look Like This.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;liked&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Like&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(&lt;strong&gt;React Docs&lt;/strong&gt;)(&lt;a href="https://reactjs.org/docs/add-react-to-a-website.html"&gt;https://reactjs.org/docs/add-react-to-a-website.html&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I Covered Major Ways To Build React App But You Can Setup Your Own System Like These.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>30DAYS OF PYTHON</title>
      <author>Phylis Jepchumba</author>
      <pubDate>Tue, 05 Oct 2021 20:34:26 +0000</pubDate>
      <link>https://dev.to/phylis/30days-of-python-laj</link>
      <guid>https://dev.to/phylis/30days-of-python-laj</guid>
      <description>&lt;p&gt;Day 1 of the 30 Days Of Python.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What python is.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python programming paradigms: Imperative, Functional, Procedural, Object-oriented paradigms&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Representing data using python data types: Booleans, strings ,lists, tuples, sets, dictionaries.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Applications of Python in Software development and DevOps engineering automation, data science and machine learning.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PEP8 Rules &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Python is an interpreted ,high-level ,general-purpose programming language used in web development, data science and creating software prototypes.&lt;/p&gt;

&lt;p&gt;Python Paradigms.&lt;br&gt;
Programming paradigms is a style or concept by which the methodology of a programming language adheres to.Python supports four programming paradigms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Imperative&lt;/strong&gt;-Python fully implements this paradigm. It uses statements that change a program state and focuses on &lt;strong&gt;how to solve&lt;/strong&gt;.Data structures implement the use of this paradigm.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Functional&lt;/strong&gt;- It is also known as declarative paradigm It treats every statement as a mathematical equation.&lt;br&gt;
in python, lambda and recursion are approaches used to implement functional programming paradigm.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Procedural&lt;/strong&gt;- in this paradigm, computational tasks are treated as step by step iteration and common task grouped as functions.&lt;br&gt;
In python, procedural paradigm favors iterations, selection, sequencing and modularization.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Object-oriented&lt;/strong&gt;- a programming paradigm that relies on concepts of classes and objects and focuses on writing reusable code. Python has object oriented features as  methods, inheritance encapsulation and polymorphism.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;
  &lt;a href="#applications-of-python"&gt;
  &lt;/a&gt;
  Applications of Python.
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;Building desktop applications, including GUI applications, CLI tools, and even games&lt;/li&gt;
&lt;li&gt;Building web and Internet applications- python offers frameworks such as Django and microframeworks such as flask for web developemnt.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Performing DevOps tasks- Python enables DevOps professionals to build, test, deploy, visualize and monitor the DevOps lifecycle with improved, simple custom utilities.DevOps tools such as Ansible is written in python.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Education-Python is a superb language for teaching programming, both at the introductory level and in more advanced courses.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;
  &lt;a href="#representing-data-using-python-data-types"&gt;
  &lt;/a&gt;
  Representing data using python data types.
&lt;/h6&gt;

&lt;p&gt;Python has a handful of built-in data types, such as numbers (integers, floats, complex numbers), Booleans, strings, lists, tuples, dictionaries, and sets.&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#numeric-data-type"&gt;
  &lt;/a&gt;
  Numeric data type.
&lt;/h6&gt;

&lt;p&gt;They represent the data that has a numeric value and can belong to three different numerical types:&lt;br&gt;
Integers: Consists of positive or negative whole numbers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Floats:Are true numbers with floating-point representation specified by a decimal point.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;12.5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Complex numbers: Are numbers with a real part and an imaginary part.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.8j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;4.5j&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#string-datatype"&gt;
  &lt;/a&gt;
  String Datatype.
&lt;/h6&gt;

&lt;p&gt;Strings are pieces of text or sequences of characters that you can define using single, double, or triple quotes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Use single quotes
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hello there!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;'Hello there!'&lt;/span&gt;
&lt;span class="c1"&gt;#Use double quotes
&lt;/span&gt;&lt;span class="n"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Good Evening!"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;'Good Evning!'&lt;/span&gt;
&lt;span class="c1"&gt;# Use triple quotes
&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"""30 Days of Python Challenge!"""&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;'30 Days of Python Challenge!'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;String data type can be used for Concatenation, Slicing, and Repetition.&lt;br&gt;
Concatenation-Joining two or more strings together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"My name is"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"Korir"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output
&lt;/span&gt;&lt;span class="s"&gt;'My name is Korir'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Repetition-It is repeating a sequence of instructions a certain number of times.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'phy'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;phyphyphyphyphy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Slicing- used extract different parts of a string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;String1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Python"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#list-data-type"&gt;
  &lt;/a&gt;
  List Data Type.
&lt;/h6&gt;

&lt;p&gt;Lists are used to store multiple items in a single variables.&lt;br&gt;
Lists are defined in Python by enclosing a comma-separated sequence of objects in square brackets ([]), as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Characteristics of Python Lists.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lists are ordered.&lt;/li&gt;
&lt;li&gt;Lists can contain any arbitrary objects.&lt;/li&gt;
&lt;li&gt;List elements can be accessed by index.&lt;/li&gt;
&lt;li&gt;Lists can be nested to arbitrary depth.&lt;/li&gt;
&lt;li&gt;Lists are mutable.&lt;/li&gt;
&lt;li&gt;Lists are dynamic.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#tuples-data-type"&gt;
  &lt;/a&gt;
  Tuples Data type
&lt;/h6&gt;

&lt;p&gt;Tuples are identical to lists in all respects, except for the following properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tuples are defined by enclosing the elements in parentheses (()) instead of square brackets ([]).&lt;/li&gt;
&lt;li&gt;Tuples are immutable hence cannot be modified&lt;/li&gt;
&lt;li&gt;Execution is faster when manipulating a tuple Here is an example of a tuple:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;tuple1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tuple1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#dictionaries-data-type"&gt;
  &lt;/a&gt;
  Dictionaries Data type
&lt;/h6&gt;

&lt;p&gt;Dictionary in python is an ordered collection, used to store data values.&lt;br&gt;
You can define a dictionary by enclosing a comma-separated list of key-value pairs in curly braces ({}). A colon (:) separates each key from its associated value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;new_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"firstname"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Korir"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"lastname"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Mary"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"DOB"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"lastname"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Mary"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#set-data-type"&gt;
  &lt;/a&gt;
  Set Data Type.
&lt;/h6&gt;

&lt;p&gt;used to store multiple items in a single variable.&lt;br&gt;
Every set element is unique and must be immutable.&lt;br&gt;
Are created by placing all the items inside curly braces {}, separated by comma, or by using the built-in set() function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;new_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_set&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Resources&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(&lt;a href="https://dev.to/phylis/python-101-introduction-to-python-2eh4"&gt;https://dev.to/phylis/python-101-introduction-to-python-2eh4&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;(&lt;a href="https://www.pythontutorial.net/"&gt;https://www.pythontutorial.net/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;(&lt;a href="https://www.python.org/dev/peps/pep-0008/"&gt;https://www.python.org/dev/peps/pep-0008/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;(&lt;a href="https://www.analyticsvidhya.com/blog/2021/05/introduction-to-"&gt;https://www.analyticsvidhya.com/blog/2021/05/introduction-to-&lt;/a&gt;
python-programming-beginners-guide/)&lt;/li&gt;
&lt;li&gt;(&lt;a href="https://dev.to/grayhat/python-101-introduction-to-python-3kg5"&gt;https://dev.to/grayhat/python-101-introduction-to-python-3kg5&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>datascience</category>
      <category>100daysofcode</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Getting started with Playwright E2E testing</title>
      <author>Giannis Koutsaftakis</author>
      <pubDate>Tue, 05 Oct 2021 20:22:58 +0000</pubDate>
      <link>https://dev.to/kouts/getting-started-with-playwright-e2e-testing-mfd</link>
      <guid>https://dev.to/kouts/getting-started-with-playwright-e2e-testing-mfd</guid>
      <description>&lt;p&gt;&lt;a href="https://playwright.dev"&gt;Playwright&lt;/a&gt; is a cross-browser web automation framework by Microsoft. It is also a powerful E2E testing tool with its integrated test runner &lt;code&gt;Playwright Test&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Some of the highlight features of Playwright:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support for 3 browser engines (Chromium, Firefox and WebKit)&lt;/li&gt;
&lt;li&gt;Write tests in &lt;strong&gt;JavaScript&lt;/strong&gt; &amp;amp; TypeScript, Python, .NET and, Java&lt;/li&gt;
&lt;li&gt;Runs tests in parallel using worker processes that run at the same time&lt;/li&gt;
&lt;li&gt;Support for screenshots and videos snapshots taking&lt;/li&gt;
&lt;li&gt;Provides a great set of debugging tools&lt;/li&gt;
&lt;li&gt;Wide range of element selectors (CSS, text, X-path and more)&lt;/li&gt;
&lt;li&gt;Intercept network activity for stubbing and mocking network requests (e.g API calls)&lt;/li&gt;
&lt;li&gt;CLI tool to Record user interactions and generate JavaScript code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;more...&lt;/p&gt;

&lt;p&gt;In this post we' re going to implement two simple E2E test flows for pages that require authentication and look at how we can reuse the login state so that we don't have to repeat the same code across our tests. &lt;/p&gt;

&lt;p&gt;We're going to use &lt;strong&gt;JavaScript&lt;/strong&gt; as our language of choice and the beautiful &lt;a href="https://pixinvent.com/demo/vuexy-vuejs-admin-dashboard-template/landing/"&gt;Vuexy&lt;/a&gt; admin theme as an &lt;em&gt;example&lt;/em&gt; domain for testing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's start!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install dependencies
&lt;/h2&gt;

&lt;p&gt;Playwright and friends&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# install playwright and its test runner&lt;/span&gt;
npm i &lt;span class="nt"&gt;-D&lt;/span&gt; @playwright/test

&lt;span class="c"&gt;# install browser engines - Chromium, Firefox, and Webkit&lt;/span&gt;
npx playwright &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're also going to need the &lt;code&gt;dotenv&lt;/code&gt; package in order to load the login credentials as environment variables from a &lt;code&gt;.env&lt;/code&gt; file into our test.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-D&lt;/span&gt; dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's add some useful commands into the &lt;code&gt;scripts&lt;/code&gt; section of our project's &lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npx playwright test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test-debug"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"PWDEBUG=1 npx playwright test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test-debug-windows"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"set PWDEBUG=1 &amp;amp;&amp;amp; npx playwright test"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;test&lt;/code&gt; runs the tests&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;test-debug&lt;/code&gt; runs the tests in &lt;strong&gt;debug mode&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;test-debug-windows&lt;/code&gt; runs the tests in &lt;strong&gt;debug mode&lt;/strong&gt; on Windows&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#configure"&gt;
  &lt;/a&gt;
  Configure
&lt;/h2&gt;

&lt;p&gt;Playwright uses a global configuration file to specify common settings for each test.&lt;br&gt;
Create &lt;code&gt;playwright.config.js&lt;/code&gt; in your project's root with the contents below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;globalSetup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./tests/global-setup.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;baseURL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://pixinvent.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;headless&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;viewport&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1280&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;720&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;ignoreHTTPSErrors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;only-on-failure&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;30000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are some commonly used options for various scenarios.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;baseURL&lt;/code&gt; Define a common Base URL, this allows us to navigate by using just the path inside our tests. In our example we set it as &lt;code&gt;https://pixinvent.com&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;globalSetup&lt;/code&gt; This file will be required and run before all the tests. We'll use it to setup our login step before every test.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;headless&lt;/code&gt; Playwright runs tests in headless mode by default, change this to &lt;code&gt;false&lt;/code&gt; if you want to view the tests in a "live" browser instance.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;viewport&lt;/code&gt; Controls the size of the viewport for the tests.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ignoreHTTPSErrors&lt;/code&gt; Whether to ignore HTTPS errors during navigation.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;screenshot&lt;/code&gt; Have a screenshot taken when a test fails.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;timeout&lt;/code&gt; Time in milliseconds given to each test.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create a &lt;code&gt;.env&lt;/code&gt; file in the project's root that will hold our login credentials.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;LOGIN_USERNAME=admin@demo.com
LOGIN_PASSWORD=admin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll also need to insert the &lt;code&gt;.env&lt;/code&gt; and &lt;code&gt;tests/state.json&lt;/code&gt; files to our project's &lt;code&gt;.gitignore&lt;/code&gt; file. The &lt;code&gt;tests/state.json&lt;/code&gt; will be used to store the authentication state when our tests run, so we don't want that file to be tracked by Git.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# env file&lt;/span&gt;
.env

&lt;span class="c"&gt;# Login state file&lt;/span&gt;
tests/state.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-the-tests"&gt;
  &lt;/a&gt;
  Create the tests
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;tests&lt;/code&gt; directory will contain our tests and the &lt;code&gt;globalSetup&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tests/globalSetup.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../playwright.config&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;chromium&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@playwright/test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;chromium&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseURL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/demo/vuexy-vuejs-laravel-admin-template/demo-1/login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input[type="text"]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LOGIN_USERNAME&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input[type="password"]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LOGIN_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button:has-text("Sign in")&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;storageState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tests/state.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Playwright uses the &lt;code&gt;globalSetup.js&lt;/code&gt; file to set things up once, before running all tests. In our example we're using it to visit the login page, fill-in the username and password, click on the "Sign in" button and finally, save the authentication state to a &lt;code&gt;state.json&lt;/code&gt; file that is going to be used from inside our tests.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's add some sample tests&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Playwright Test uses the &lt;a href="https://jestjs.io/docs/expect"&gt;expect&lt;/a&gt; library for test assertions, if you have used &lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt; you will find the syntax familiar.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tests/dashboard.spec.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@playwright/test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;storageState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tests/state.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dashboard&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/demo/vuexy-vuejs-laravel-admin-template/demo-1/dashboard/ecommerce&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.card.card-congratulation-medal p.card-text.font-small-3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toContainText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You have won gold medal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this test we' re visiting the Dashboard page and we're checking if the medal card contains the text "You have won gold medal".&lt;br&gt;
Playwright provides many ways to &lt;a href="https://playwright.dev/docs/selectors"&gt;select elements&lt;/a&gt;, in our case we're using CSS selectors to find the card element in the page. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;tests/analytics.spec.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@playwright/test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;storageState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tests/state.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;analytics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/dashboard/analytics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text=Add Record&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h4.invoice-title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toContainText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Invoice&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our second test we visit the Analytics, click on the "Add Record" button and the check if the text "Invoice" appears inside a &lt;code&gt;h4&lt;/code&gt; element on the next page.&lt;br&gt;
Notice that we don't have to write any specific method call for navigation, Playwright auto-waits for the next page.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#run-the-tests"&gt;
  &lt;/a&gt;
  Run the tests
&lt;/h2&gt;

&lt;p&gt;In order to tun our tests we can use the commands we added in our &lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--61ZV5dHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lsfzn8p3j3j9pnzkzche.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--61ZV5dHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lsfzn8p3j3j9pnzkzche.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can also run the tests in &lt;a href="https://playwright.dev/docs/debug#run-in-debug-mode"&gt;debug mode&lt;/a&gt;. This will open up the browsers in headed mode and also start the &lt;a href="https://playwright.dev/docs/debug#playwright-inspector"&gt;Playwright Inspector&lt;/a&gt;. Useful when we want to troubleshoot our tests scripts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# For Linux and MacOS&lt;/span&gt;
npm run test-debug

&lt;span class="c"&gt;# For Windows&lt;/span&gt;
npm run test-debug-windows
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#useful-commands"&gt;
  &lt;/a&gt;
  Useful commands
&lt;/h2&gt;

&lt;p&gt;Here's a list of commands that can be useful when writing and running/debugging our test scripts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Run a single test&lt;/span&gt;
npx playwright &lt;span class="nb"&gt;test &lt;/span&gt;testName

&lt;span class="c"&gt;# Run in headed mode&lt;/span&gt;
npx playwright &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nt"&gt;--headed&lt;/span&gt;

&lt;span class="c"&gt;# Run tests using a specified browser&lt;/span&gt;
npx playwright &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nt"&gt;--browser&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;firefox

&lt;span class="c"&gt;# Run tests using all three browsers&lt;/span&gt;
npx playwright &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nt"&gt;--browser&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;all
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;That's all&lt;/strong&gt;&lt;br&gt;
Thanks for reading and have fun testing with Playwright!&lt;/p&gt;

</description>
      <category>testing</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Enhance your code examples with links to reference docs</title>
      <author>Felix Hild√©n</author>
      <pubDate>Tue, 05 Oct 2021 20:17:13 +0000</pubDate>
      <link>https://dev.to/felixhilden/enhance-your-code-examples-with-links-to-reference-docs-485k</link>
      <guid>https://dev.to/felixhilden/enhance-your-code-examples-with-links-to-reference-docs-485k</guid>
      <description>&lt;p&gt;&lt;a href="https://www.flickr.com/photos/91545223@N00/9250743991"&gt;"Like the Sphinx"&lt;/a&gt; by Benson Kua is licensed with &lt;a href="https://creativecommons.org/licenses/by-sa/2.0/"&gt;CC BY-SA 2.0&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-it-not-everywhere"&gt;
  &lt;/a&gt;
  Why is it not everywhere?
&lt;/h2&gt;

&lt;p&gt;Some time ago when browsing Matplotlib's &lt;a href="https://matplotlib.org/stable/gallery/lines_bars_and_markers/simple_plot.html"&gt;documentation&lt;/a&gt;, I was awestruck: I could click their code examples to get taken to the reference documentation of whatever class or function was used. What a great feature! It makes navigating documentation much easier.&lt;/p&gt;

&lt;p&gt;So I tried to track down where those links were inserted. Turns out it was an extension called Sphinx-Gallery, which converts Python files to RST while capturing the script output. Awesome! But it didn't work for ordinary RST documentation, and it executes the code - two assumptions I didn't want to make with my own documentation. After searching around and slowly realising that it really did not exist, I set out to create a tool of my own! Enter &lt;a href="https://sphinx-codeautolink.readthedocs.io/en/latest/"&gt;sphinx-codeautolink&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-it-does"&gt;
  &lt;/a&gt;
  What it does
&lt;/h2&gt;

&lt;p&gt;As advertised, it matches code example contents to definitions documented elsewhere with Sphinx:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HBIEgslE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2c2ow1oywdkn75fntdi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HBIEgslE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2c2ow1oywdkn75fntdi.png" alt="links example"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Clicking the link would take you to &lt;code&gt;numpy.linspace&lt;/code&gt;'s documentation. Other key features include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Backreference tables: a table of examples where a particular definition is used&lt;/li&gt;
&lt;li&gt;Autodoc integration: insert backreference tables to all definitions documented with autodoc&lt;/li&gt;
&lt;li&gt;Intersphinx integration: as seen in the image above, linking to docs of external libraries is super simple&lt;/li&gt;
&lt;li&gt;Python console example support (&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; prefixed code)&lt;/li&gt;
&lt;li&gt;Invisible imports, example concatenation, simple type hint resolving and more!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-it"&gt;
  &lt;/a&gt;
  How to use it
&lt;/h2&gt;

&lt;p&gt;Easy. I wanted to make it work out of the box for most documentation, so if your examples are valid Python you're most likely already there. I had to add some import statements to my examples. Other than that, it's only a matter of installing the package and adding it to the list of Sphinx extensions!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;sphinx-codeautolink
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# conf.py
&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;...,&lt;/span&gt;
    &lt;span class="s"&gt;"sphinx_codeautolink"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our &lt;a href="https://sphinx-codeautolink.readthedocs.io/en/latest/examples.html"&gt;examples&lt;/a&gt; have a more comprehensive explanation of all the use cases and RST syntax.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h2&gt;

&lt;p&gt;The principle is quite simple: all code blocks are parsed and the names contained in them are traced back to definitions documented with Sphinx elsewhere in the documentation. Sphinx does its thing and after the HTML is written, links are injected to the correct places.&lt;/p&gt;

&lt;p&gt;Naturally I made a few assumptions, some different than the folks at Sphinx-Gallery: it is only usable with HTML documentation and I had to cut some corners with the parsing implementation. I didn't aim to emulate the Python runtime, just provide a correct result for the 99 % case. None of the shortcomings should cause problems with reasonable example code. But Sphinx-Gallery does perform better in some situations. For example where we'd have to analyse complex type hints, Sphinx-Gallery can simply look at the variable's type.&lt;/p&gt;

&lt;p&gt;I've poured my last month on this and really enjoyed the deep dive into Sphinx and docutils. I hope you'll get some use out of it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://sphinx-codeautolink.readthedocs.io/en/latest/"&gt;Documentation&lt;/a&gt;, &lt;a href="https://pypi.org/project/sphinx-codeautolink/"&gt;PyPI&lt;/a&gt;, &lt;a href="https://github.com/felix-hilden/sphinx-codeautolink"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>documentation</category>
      <category>sphinx</category>
    </item>
    <item>
      <title>A cap of tea</title>
      <author>Pato Z</author>
      <pubDate>Tue, 05 Oct 2021 19:56:13 +0000</pubDate>
      <link>https://dev.to/pzavolinsky/a-cap-of-tea-2io5</link>
      <guid>https://dev.to/pzavolinsky/a-cap-of-tea-2io5</guid>
      <description>&lt;p&gt;&lt;em&gt;A story about distributed systems, hype-driven design and the &lt;a href="https://en.wikipedia.org/wiki/Socratic_method"&gt;Socratic hardships&lt;/a&gt; of friendship&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fancy-some-tea"&gt;
  &lt;/a&gt;
  Fancy some tea?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Me: Hey, fancy some tea?&lt;/li&gt;
&lt;li&gt;You: Sure, I'm always up for some tea!&lt;/li&gt;
&lt;li&gt;Me: Cool, let's share a cap of tea&lt;/li&gt;
&lt;li&gt;You: You mean a &lt;em&gt;cup&lt;/em&gt; of tea right?&lt;/li&gt;
&lt;li&gt;Me: No no, I'm talking about a &lt;em&gt;cap&lt;/em&gt; of tea, hear me out. If only there was a way for us to pick the right time to meet and share some tea, right? Wonder no more...&lt;/li&gt;
&lt;li&gt;You: [oh, no, not another pitch] ...&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-pitch"&gt;
  &lt;/a&gt;
  The pitch
&lt;/h2&gt;

&lt;p&gt;"What is more powerful than the synergy of tea? Can we leverage the power of time to accelerate and optimize the engagement of the face time tea experience? Surely we can level up the tea experience to the next gen, to a rockstar, uber viral, vision.", I blurt.&lt;/p&gt;

&lt;p&gt;"Wow, what a load of nonsense", you think, you feel a lot dumber just by having heard all that stuff. Those brain cells are not coming back.&lt;/p&gt;

&lt;p&gt;An idea pops in to your head [Patent pending]: "The BS compressor". A lossy compression algorithm capable of boiling down all that nonsense into a simple "make tea better" or something. You start honing your time warping skills to see if you can start piping your live meetings through the BS compressor and gain precious hours of your life back.&lt;/p&gt;

&lt;p&gt;You keep daydreaming of a better world with less fuzz and start thinking that maybe the problem with the world is that we are using the &lt;a href="https://www.sansbullshitsans.com/"&gt;wrong font&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;"Hey, are you with me?", I say while poking you in the arm.&lt;/p&gt;

&lt;p&gt;"Sure, let's get this over with"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-product"&gt;
  &lt;/a&gt;
  The product
&lt;/h2&gt;

&lt;p&gt;"...as I was saying, we'll have this multi-tiered microservice architecture, where the service mesh communicates via an event bus ripe for enrichment..."&lt;/p&gt;

&lt;p&gt;"Wait a minute, what does this product &lt;em&gt;do&lt;/em&gt;?"&lt;/p&gt;

&lt;p&gt;"What do you mean? The services, the bus, the replicas, the protocols, the consensus...", I trail off, confused. A small tear runs through my cheek.&lt;/p&gt;

&lt;p&gt;"You mentioned tea?"&lt;/p&gt;

&lt;p&gt;"Right tea. There's tea in there somewhere, but did I tell you about the orchestrator?"&lt;/p&gt;

&lt;p&gt;You can feel the pressure building inside your head. The &lt;a href="https://en.wikipedia.org/wiki/User-centered_design"&gt;user-centered&lt;/a&gt; designer in you wants to scream in rage. After some effort you manage to compose yourself.&lt;/p&gt;

&lt;p&gt;"But what about the user experience? What is this product &lt;em&gt;for&lt;/em&gt;? Why would &lt;em&gt;I&lt;/em&gt; use it?" you manage to say while swallowing sadness.&lt;/p&gt;

&lt;p&gt;"Nah, don't worry about that. You know what's the best way to spice a depressing &lt;a href="https://en.wikipedia.org/wiki/Net_promoter_score"&gt;NPS&lt;/a&gt;, to cheer up a sad Kano (no, not the &lt;a href="https://en.wikipedia.org/wiki/Kano_(Mortal_Kombat)"&gt;violent cyborg&lt;/a&gt;, the &lt;a href="https://en.wikipedia.org/wiki/Kano_model"&gt;other one&lt;/a&gt;)? You're right, a beefy architecture diagram. An 8pt Courier New thing of beauty depicting in excruciating detail every little aspect of your architecture! Users love that stuff"&lt;/p&gt;

&lt;p&gt;"Sure, whatever, what makes this idea so unique?"&lt;/p&gt;

&lt;p&gt;"I'm glad you asked!"&lt;/p&gt;

&lt;p&gt;"I bet you are"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-impossible-trifecta"&gt;
  &lt;/a&gt;
  The impossible trifecta
&lt;/h2&gt;

&lt;p&gt;"Unlike previous unsuccessful attempts my idea captures the three fundamental properties of the best tea..."&lt;/p&gt;

&lt;p&gt;"Color, aroma and flavor?"&lt;/p&gt;

&lt;p&gt;"Wrong, you coffee-drinking muggle: consistency, availability and partition-tolerance"&lt;/p&gt;

&lt;p&gt;"That's some powerful tea you're brewing" you say rolling your eyes.&lt;/p&gt;

&lt;p&gt;"I sure am, let me tell you all about these wonderful properties" I reply completely immune to sarcasm.&lt;/p&gt;

&lt;p&gt;"I can't wait"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#parsley-and-wood-chippings"&gt;
  &lt;/a&gt;
  Parsley and wood chippings
&lt;/h2&gt;

&lt;p&gt;"When you've been in the tea industry for as long as I have, you know that that fancy green chai is &lt;em&gt;expensive&lt;/em&gt;. No one in their right mind would serve that to customers.&lt;/p&gt;

&lt;p&gt;Instead we just brew the chai with parsley or, in dire times, with wood chippings and green food coloring.&lt;/p&gt;

&lt;p&gt;But what if two customers approach the counter at the same time and order a green chai? It'd be very bad for business if one of them would get the parsley chai while the other gets the wood chipping chai. That's just &lt;em&gt;wrong&lt;/em&gt;"&lt;/p&gt;

&lt;p&gt;"&lt;em&gt;That&lt;/em&gt;'s what's wrong?" you ask, making a mental note of never &lt;em&gt;ever&lt;/em&gt; drinking my tea. "Anyway, I thought we were talking of a computer system, all that microservice stuff and all, but now it looks like you are opening a tea shop..."&lt;/p&gt;

&lt;p&gt;"Pivot or die, my friend, pivot-or-die"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-guy-named-chad"&gt;
  &lt;/a&gt;
  A guy named Chad
&lt;/h2&gt;

&lt;p&gt;"How can you make sure every server knows which chai recipe to use at any given time?" you ask.&lt;/p&gt;

&lt;p&gt;"Piece of cake, we just have a single server. That guy really loves his tea. He works 24/7 non-stop. When he's feeling drowsy he just takes one on the house. No one knows his name or where he came from so we just call him Chad.&lt;/p&gt;

&lt;p&gt;Whenever we need to change the chai recipe we just tell Chad: hey Chad, we're running low on the good stuff, stop brewing parsley and switch to wood chippings. Sure thing, boss!"&lt;/p&gt;

&lt;p&gt;Not knowing where to begin to express all the kinds of wrong here, you just opt to stay away from it and just ask: "So your solution to the &lt;a href="https://en.wikipedia.org/wiki/Consistency_model"&gt;consistency problem&lt;/a&gt; is having a single Chad?"&lt;/p&gt;

&lt;p&gt;"Clearly, single Chad, zero fuzz"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ouroboros-queue"&gt;
  &lt;/a&gt;
  Ouroboros' queue
&lt;/h2&gt;

&lt;p&gt;"But wait, what happens if it's rush hour and lots of customers want their tea at the same time? Or, even worse if Chad collapses under the pressure." you are truly concerned now.&lt;/p&gt;

&lt;p&gt;"Nah, that Chad has the immune system of a horse with a self-patching kernel. He can take it, but just in case, we are hiring a bunch of other servers, so that in case he's out or something we can still serve our customers"&lt;/p&gt;

&lt;p&gt;Now that's more like it, multiple servers, some redundancy, higher resiliency to Chad nonsense, but you clearly see where things are going, so you ask: "But if you hire multiple servers how can you make sure they all follow the same chai recipe?"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#an-army-of-chads"&gt;
  &lt;/a&gt;
  An army of Chads
&lt;/h2&gt;

&lt;p&gt;"Oh, you're gonna love this! We hired a bunch of servers. They all have colorful back stories, interesting personalities and unique network addresses, but to keep things simple I just call them all Chad.&lt;/p&gt;

&lt;p&gt;Even better, they all have fancy Bluetooth ear pieces that keep them communicated at all times, so I can scream 'Chad, wood chipping time!' in the mic and all of them answer in unison: 'Sure thing, boss!', It's beautiful, I tell you"&lt;/p&gt;

&lt;p&gt;"OK, let me get this straight: your approach to &lt;a href="https://en.wikipedia.org/wiki/Availability"&gt;availabilty&lt;/a&gt; is hiring a bunch of random people, calling them all 'Chad' and relying on some Bluetooth dongles to transmit the stuff you bark over the microphone?"&lt;/p&gt;

&lt;p&gt;"Right you are"&lt;/p&gt;

&lt;p&gt;At this point you are tempted to ask "how do the Chads make sure all of them use the same recipe?" but you know me all too well to fall down this &lt;a href="https://en.wikipedia.org/wiki/Consensus_(computer_science)"&gt;consensus&lt;/a&gt; rabbit hole.&lt;/p&gt;

&lt;p&gt;So instead you ask your original question again: "But wait, you told me your &lt;em&gt;consistency&lt;/em&gt; strategy was 'Single Chad, zero fuzz', but to have proper &lt;em&gt;availability&lt;/em&gt; you now hired an 'Army of Chads', so what happens now?"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ac-dc"&gt;
  &lt;/a&gt;
  AC / DC
&lt;/h2&gt;

&lt;p&gt;"Worry not, that was before, now that my Chads have their Bluetooth pieces the sky is the limit. Bluetooth is flawless, you know"&lt;/p&gt;

&lt;p&gt;"Right, flawless...", you say with more eye rolling. Now that you think about it, your last expression of sarcasm seems like a lifetime ago. "Didn't you mention partition tolerance?"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#denial-as-an-architectural-pattern"&gt;
  &lt;/a&gt;
  Denial as an architectural pattern
&lt;/h2&gt;

&lt;p&gt;"Yeah, partition tolerance, that is &lt;em&gt;so overrated&lt;/em&gt;"&lt;/p&gt;

&lt;p&gt;"Wait, what?!"&lt;/p&gt;

&lt;p&gt;"To be honest, I don't believe in it"&lt;/p&gt;

&lt;p&gt;"Hold on, you don't &lt;em&gt;believe&lt;/em&gt; in network parti..." you trail off. At this point in our friendship you can spot a tangent from miles away so instead you try a more delicate approach.&lt;/p&gt;

&lt;p&gt;"Let's say that a Chad runs out of juice on his Bluetooth dongle, or maybe walks in front of a microwave or something, what happens then?"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-rock-and-a-hard-place"&gt;
  &lt;/a&gt;
  A rock and a hard place
&lt;/h2&gt;

&lt;p&gt;"Hmm, let me think about it... well clearly we'd like to avoid that whole parsley/wood chipping debacle, so that Chad should stop serving tea until he can get his dongle in working condition..."&lt;/p&gt;

&lt;p&gt;"Yeah, that looks like a very &lt;em&gt;consistent&lt;/em&gt; approach, but what about all the angry customers queuing in front of your broken Chad?"&lt;/p&gt;

&lt;p&gt;"Hmm, you're right, perhaps a better approach would be for that Chad to keep using the last known chai recipe, that way we can keep serving customers and everyone is happy..."&lt;/p&gt;

&lt;p&gt;"Ah, the &lt;em&gt;available&lt;/em&gt; approach, I like it. Although theoretically you could be serving two different types of chai at any given moment"&lt;/p&gt;

&lt;p&gt;You can see my face in slow-mo as it dawns on me "so you're saying that because I went for that crappy Bluetooth stuff, that now I must decide between angry tea-less customers and the parsley/wood chipping debacle?"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-crux-of-cap"&gt;
  &lt;/a&gt;
  The crux of CAP
&lt;/h2&gt;

&lt;p&gt;Frankly you are surprised it took me so long to see the writing on the walls.&lt;/p&gt;

&lt;p&gt;Network partitions are unavoidable whether because your Bluetooth ran out of battery, because the mailman was being chased by your neighbor's dog and dropped your letter, because you moved to too far from your wifi access point or because of a faulty network card.&lt;/p&gt;

&lt;p&gt;And, when network partitions &lt;em&gt;do&lt;/em&gt; occur, you are left with a tough choice: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Drop &lt;em&gt;availability&lt;/em&gt; in favor of &lt;em&gt;consistency&lt;/em&gt; and &lt;em&gt;partition tolerance&lt;/em&gt; (what's usually called a &lt;code&gt;CP&lt;/code&gt; system) leaving you with a bunch of angry tea-less customers.&lt;/li&gt;
&lt;li&gt;Drop the &lt;a href="https://en.wikipedia.org/wiki/Strong_consistency"&gt;strong consistency&lt;/a&gt; guarantee leaving you with a system that's both &lt;em&gt;available&lt;/em&gt; and &lt;em&gt;partition tolerant&lt;/em&gt; (i.e. an &lt;code&gt;AP&lt;/code&gt; system) but serves all kinds of weird chai.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the end you feel bad to see me so heartbroken so you give me some kind words of comfort:&lt;/p&gt;

&lt;p&gt;"Hey, don't worry, it's not so bad, I'm sure 'A &lt;a href="https://en.wikipedia.org/wiki/CAP_theorem"&gt;CAP&lt;/a&gt; of tea' will be a big success, you just need to replace that Bluetooth crap with something more reliable, like carrier pigeons"&lt;/p&gt;

</description>
    </item>
    <item>
      <title>React Custom Hooks: useBoolean</title>
      <author>Ludal üöÄ</author>
      <pubDate>Tue, 05 Oct 2021 19:18:39 +0000</pubDate>
      <link>https://dev.to/iamludal/react-custom-hooks-useboolean-3m6c</link>
      <guid>https://dev.to/iamludal/react-custom-hooks-useboolean-3m6c</guid>
      <description>&lt;p&gt;React hooks initially allow you to "hook into" React state and lifecycle features, like we used to do with the &lt;code&gt;componentDidMount&lt;/code&gt; or &lt;code&gt;componentWillUnmount&lt;/code&gt; methods when using class based components. What we'll discover in this article is that we can implement our own custom hooks, using the few primitives hooks React provides us, like &lt;code&gt;useState&lt;/code&gt; and &lt;code&gt;useEffect&lt;/code&gt;. This way, you can drastically reduce the cognitive complexity of your components, by moving away some logic into functions that you will be able to reuse anywhere in the other components of your React applications. Your code will look cleaner, and you're following the Single Responsibility Principle (SRP), which states that each class or function (or, in our case, component) should have responsibility over a single part of a program's functionality, and it should encapsulate that part.&lt;/p&gt;

&lt;p&gt;Enough talk, let's get to work and implement our first custom hook: &lt;code&gt;useBoolean&lt;/code&gt;! üòé&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;First of all, why are we going to implement such a hook? Let's have a look a this simple component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Spoil&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;showSpoil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setShowSpoil&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"spoil"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setShowSpoil&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;showSpoil&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hide&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Show&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;showSpoil&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"spoil-content"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The component receives a &lt;code&gt;content&lt;/code&gt; prop, that only appears once the button gets clicked to show the spoil. Of course, clicking the button again will hide it back, and so on.&lt;/p&gt;

&lt;p&gt;Here, the component is so simple that it is very easy to read, but we could improve its readability by extracting the button &lt;code&gt;onClick&lt;/code&gt; listener to a separate function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Spoil&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;showSpoil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setShowSpoil&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setShowSpoil&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"spoil"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;showSpoil&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hide&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Show&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;showSpoil&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"spoil-content"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's better. We've simplified the return value of our function, but we've added a new line between the state initialization and the return statement. Of course this is not a major problem in our case, but when dealing with more complex components, this can lead to redundant functions declarations.&lt;/p&gt;

&lt;p&gt;In fact, our component could be further simplified if we had a &lt;code&gt;useBoolean&lt;/code&gt; hook, that we would use like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Spoil&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;showSpoil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setShowSpoil&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useBoolean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"spoil"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setShowSpoil&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;showSpoil&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hide&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Show&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;showSpoil&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"spoil-content"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See? We didn't add any extra function, and the &lt;code&gt;onClick&lt;/code&gt; listener is easier to read. Now, let's move into the implement of this simple hook, shall we? üòé&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h2&gt;

&lt;p&gt;First, we define a function in which we can use the &lt;code&gt;useState&lt;/code&gt; hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useBoolean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;‚ö†Ô∏è Be careful: you'll only be able to use the &lt;code&gt;useBoolean&lt;/code&gt; function (or should I say hook) in React components, as it uses the &lt;code&gt;useState&lt;/code&gt; hook.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So far, we've just created an alias for the &lt;code&gt;useState&lt;/code&gt; hook. &lt;/p&gt;

&lt;p&gt;Not very useful...üòÖ&lt;/p&gt;

&lt;p&gt;The interesting part comes now: instead of having the &lt;code&gt;setValue&lt;/code&gt; function in the return array, we will use an object that will contain 3 methods:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;toggle()&lt;/code&gt; to toggle the value&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;on()&lt;/code&gt; to set the value  to &lt;code&gt;true&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;off()&lt;/code&gt; to set the value to &lt;code&gt;false&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our hook now looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useBoolean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updateValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oldValue&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;oldValue&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="na"&gt;off&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here it is, you've just created your first custom hook, congratulations! ü•≥&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Articles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setArticles&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsLoading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useBoolean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useBoolean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setIsLoading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(...)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;setArticles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;setIsError&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;setIsLoading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;off&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;‚ö†Ô∏è Be careful: you can't use &lt;code&gt;setIsLoading(true)&lt;/code&gt; as we don't export a function anymore but an object.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Thanks for reading me. I hope you enjoyed this article, and if that's the case, don't hesitate to have a look at my other ones. Also, feel free to post some comments if you have any questions, or if you just want to say "hi". üòé&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#next-hook-raw-usecounter-endraw-"&gt;
  &lt;/a&gt;
  Next hook: &lt;code&gt;useCounter&lt;/code&gt;
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/hooks-overview.html"&gt;https://reactjs.org/docs/hooks-overview.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Single-responsibility_principle"&gt;https://en.wikipedia.org/wiki/Single-responsibility_principle&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>daisyUI: Tailwind CSS components for reducing markup</title>
      <author>Matt Angelosanto</author>
      <pubDate>Tue, 05 Oct 2021 19:16:42 +0000</pubDate>
      <link>https://dev.to/logrocket/daisyui-tailwind-css-components-for-reducing-markup-1e8m</link>
      <guid>https://dev.to/logrocket/daisyui-tailwind-css-components-for-reducing-markup-1e8m</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/fortuneikechi/"&gt;Fortune Ikechi&lt;/a&gt; ‚úèÔ∏è&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Despite the overwhelming popularity of Tailwind CSS, many developers have struggled to become comfortable with the framework, largely due to a decrease in markup readability as an application scales.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daisyui.com/"&gt;daisyUI&lt;/a&gt; is a customizable Tailwind CSS component library that prevents verbose markup in frontend applications. With a focus on customizing and creating themes for user interfaces, daisyUI uses pure CSS and Tailwind utility classes, allowing developers to write clean HTML.&lt;/p&gt;

&lt;p&gt;In this article, we‚Äôll explore daisyUI by building an image gallery in React that fetches and organizes photos, learning how to achieve Tailwind‚Äôs performance and customization without writing verbose markup.&lt;/p&gt;

&lt;p&gt;To follow along with this tutorial, you‚Äôll need the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Basic knowledge of React and JavaScript&lt;/li&gt;
&lt;li&gt;  Node.js and npm installed on your machine&lt;/li&gt;
&lt;li&gt;  Basic knowledge of Tailwind CSS and utility classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let‚Äôs get started!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The code for the example application in this tutorial can be found on &lt;a href="https://github.com/iamfortune/daisyUI-photo-gallery-app"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#generate-a-new-react-app"&gt;
  &lt;/a&gt;
  Generate a new React App
&lt;/h2&gt;

&lt;p&gt;First, we‚Äôll create a new React application and bootstrap it using Create React App; run the command below in your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app daisyui-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Although I‚Äôve named this example project &lt;code&gt;daisyui-app&lt;/code&gt;, you can swap it with whatever name you choose. Next, navigate into your project directory and start your development server by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;daisyui-app &amp;amp;amp&lt;span class="p"&gt;;&lt;/span&gt;&amp;amp;amp&lt;span class="p"&gt;;&lt;/span&gt; yarn start 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The command above will open a browser tab displaying the default boilerplate application. Finally, you‚Äôll need to &lt;a href="https://blog.logrocket.com/tailwind-css-configure-create-react-app/"&gt;set up Tailwind CSS for your application&lt;/a&gt; following the steps listed in this article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install dependencies
&lt;/h3&gt;

&lt;p&gt;With our new React project generated and Tailwind CSS configured for Create React App, let‚Äôs install the following required dependencies in our application:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  daisyUI: provides components for building and styling our application&lt;/li&gt;
&lt;li&gt;  Tailwind CSS: provides utility classes for our daisyUI components&lt;/li&gt;
&lt;li&gt;  PostCSS: used for styling JavaScript plugins&lt;/li&gt;
&lt;li&gt;  Axios: handles API requests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Run the following code in your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add daisyui tailwindcss postcss axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, navigate to your &lt;code&gt;tailwind.config.js&lt;/code&gt; file and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;daisyui&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above includes daisyUI support in our Tailwind CSS configuration, providing access to Tailwind‚Äôs utility classes, which we'll use to customize our daisyUI component styles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-a-photo-gallery-application"&gt;
  &lt;/a&gt;
  Build a photo gallery application
&lt;/h2&gt;

&lt;p&gt;In this section, we‚Äôll build three components needed for our application: an &lt;code&gt;Intro&lt;/code&gt; component for our application‚Äôs header, a &lt;code&gt;Navbar&lt;/code&gt; component for our application‚Äôs navbar, and a &lt;code&gt;Photo&lt;/code&gt; component for displaying and organizing photos.&lt;/p&gt;

&lt;p&gt;To access images and build components for our application, we‚Äôll use &lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt;. If you don‚Äôt have one already, set up an account.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-intro-endraw-component"&gt;
  &lt;/a&gt;
  &lt;code&gt;Intro&lt;/code&gt; component
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;Intro&lt;/code&gt; component will contain¬†an image URL from Unsplash and a background image for our application‚Äôs landing page. Inside of your &lt;code&gt;components/intro/intro.jsx&lt;/code&gt; file, add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Intro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imgURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://images.unsplash.com/photo-1606819717115-9159c900370b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;amp;ixlib=rb-1.2.1&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=800&amp;amp;q=80&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
            &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"hero h-96"&lt;/span&gt;
            &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;backgroundImage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`url(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;imgURL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"hero-overlay bg-opacity-60"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-center hero-content text-neutral-content"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"w-full"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mb-6 text-5xl font-bold"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                        Hello there, welcome to our daisy gallery
                    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-lg"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                        Built with images from&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;
                            &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"https://unsplash.com/developers"&lt;/span&gt;
                            &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"hover underline mt-8 bg-white px-2 py-1.5 rounded-sm text-black"&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                            Unsplash API
                        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Intro&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, we created an &lt;code&gt;Intro&lt;/code&gt; component; inside, we initialized an &lt;code&gt;imgURL&lt;/code&gt;, which contains the URL for the image on our landing page.&lt;/p&gt;

&lt;p&gt;Next, we customized styles for our application's landing page components using Tailwind CSS classes.¬†We also added a link to the &lt;a href="https://unsplash.com/developers"&gt;Unsplash Developers API&lt;/a&gt;. Now, your app should look like the image below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kIrhBEjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/09/unsplash-developers-api-new-daisyui-app.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kIrhBEjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/09/unsplash-developers-api-new-daisyui-app.png" alt="Unsplash Developers API New Daisyui App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-a-raw-navbar-endraw-component"&gt;
  &lt;/a&gt;
  Building a &lt;code&gt;Navbar&lt;/code&gt; component
&lt;/h3&gt;

&lt;p&gt;Now, let‚Äôs build a simple &lt;code&gt;Navbar&lt;/code&gt; component and add customization using daisyUI‚Äôs component classes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Navbar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;navbar flex-col shadow-lg bg-neutral text-neutral-content&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flex-1 px-2 mx-2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-lg font-bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Daisy&lt;/span&gt; &lt;span class="nx"&gt;Photo&lt;/span&gt; &lt;span class="nx"&gt;Gallery&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Navbar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, we made the fonts for our Navbar bold by using &lt;code&gt;font-bold&lt;/code&gt;, and we specified a large font using the &lt;code&gt;text-leg&lt;/code&gt; component.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-our-raw-photo-endraw-component"&gt;
  &lt;/a&gt;
  Building our &lt;code&gt;Photo&lt;/code&gt; component
&lt;/h3&gt;

&lt;p&gt;Next, we‚Äôll build a simple &lt;code&gt;Photo&lt;/code&gt; component to render images fetched from Unsplash; to render our &lt;code&gt;Photo&lt;/code&gt; component, we‚Äôll wrap it in a &lt;code&gt;figure&lt;/code&gt; component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Photo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;imgURL&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;card&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;figure&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;imgURL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;unsplash img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/figure&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Photo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code block above, we destructured our &lt;code&gt;Photo&lt;/code&gt; component and passed it our Unsplash &lt;code&gt;imgURL&lt;/code&gt;. Next, we created a card for our photos¬†using daisyUI‚Äôs &lt;code&gt;card&lt;/code&gt; component class. Finally, we wrapped our images in the &lt;code&gt;figure&lt;/code&gt; tag, scaling them down to fit our &lt;code&gt;Photo&lt;/code&gt; component container.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fetching-and-organizing-photos"&gt;
  &lt;/a&gt;
  Fetching and organizing photos
&lt;/h2&gt;

&lt;p&gt;Now, we‚Äôll use our components to fetch random photos from our Unsplash API, then create categories to organize them.¬†First, let‚Äôs import our packages by adding the following code block to our &lt;code&gt;App.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Intro&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/Intro/Intro&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Navbar&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/Navbar/Navbar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Photo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/Photo/Photo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, we imported our components, as well as the &lt;code&gt;useState&lt;/code&gt; and &lt;code&gt;useEffect&lt;/code&gt; Hooks. Next, we‚Äôll initialize an &lt;code&gt;app&lt;/code&gt; component by adding the code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;selectedCategory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setSelectedCategory&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RANDOM&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;photos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setPhotos&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RANDOM&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;TECHNOLOGIES&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ARTS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SPORTS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GAMES&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside our &lt;code&gt;app&lt;/code&gt; component, we created states for &lt;code&gt;categories&lt;/code&gt; and &lt;code&gt;Photos&lt;/code&gt; using React‚Äôs &lt;code&gt;useState&lt;/code&gt; variable. Then, we created an array of different categories, including &lt;code&gt;RANDOM&lt;/code&gt;, &lt;code&gt;TECHNOLOGIES&lt;/code&gt;, &lt;code&gt;ARTS&lt;/code&gt;, &lt;code&gt;SPORTS&lt;/code&gt;, and &lt;code&gt;GAMES&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, let‚Äôs write a function to fetch random photos from our Unsplash API:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchRandomPhotos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.unsplash.com/photos/random&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;client_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;REACT_APP_UNSPLASH_ACCESS_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;photoArr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;photo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;photo&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;regular&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;setPhotos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;photoArr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;setPhotos&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code block above, we created the &lt;code&gt;getRandomPhotos&lt;/code&gt; function, which fetches random photos from our Unsplash API. To set all of our images, we mapped the photo array.¬†For authentication, we passed our &lt;code&gt;client_id&lt;/code&gt;, which we got from our Unsplash Developers API dashboard. Lastly, we specified the number of images as &lt;code&gt;count: 12&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, we‚Äôll write a function that returns a photo based on the photo category:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchPhotoBasedonCategory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.unsplash.com/search/photos&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;client_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;REACT_APP_UNSPLASH_ACCESS_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;selectedCategory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;photoArr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;photo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;photo&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;regular&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;setPhotos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;photoArr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;setPhotos&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similar to our &lt;code&gt;getRandomPhotos&lt;/code&gt; function, we specified the categories and used &lt;code&gt;map&lt;/code&gt; to sort through a list of photos, returning only the photos in the category specified by the user. To render an image, we mapped the array of images from Unsplash, setting only the specified number of images.¬†We also logged any errors to the console:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;selectedCategory&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RANDOM&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fetchRandomPhotos&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;fetchPhotoBasedonCategory&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="c1"&gt;// eslint-disable-next-line react-hooks/exhaustive-deps&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;selectedCategory&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Navbar&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mb-10&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Intro&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nav&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tabs mt-10 justify-center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;
                                &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                                &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setSelectedCategory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
                                &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                                &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`tab tab-bordered 
                            &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;selectedCategory&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tab-active&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                            &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                        &lt;span class="p"&gt;))}&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/nav&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;section&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mt-4 mx-auto w-10/12 relative&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;grid grid-cols-3 justify-center gap-3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;photos&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                            &lt;span class="nx"&gt;photos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;photo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Photo&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;photo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;imgURL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;photo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;)
&lt;/span&gt;                        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mt-10 alert alert-info absolute left-1/2 -ml-20&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                                &lt;span class="nx"&gt;No&lt;/span&gt; &lt;span class="nx"&gt;photo&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
                            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                        &lt;span class="p"&gt;)}&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/section&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code block above, we used React‚Äôs &lt;code&gt;useEffect&lt;/code&gt; Hook to specify &lt;code&gt;RANDOM&lt;/code&gt; if a user selects the &lt;code&gt;random&lt;/code&gt; category.¬†If a user specifies a category, the API returns images from the selected category.&lt;/p&gt;

&lt;p&gt;Finally, we rendered¬†our entire application and added an &lt;code&gt;onClick&lt;/code&gt; event to the category sections. Additionally, we added a function to specify that only images from the selected category will be displayed to the user. Lastly, we added a message for when there are no photos available from our API. Though this is highly unlikely, it is good practice.&lt;/p&gt;

&lt;p&gt;If done correctly, our application should look similar to the image below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2tXFCjRo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/09/final-daisyui-unsplash-react-photo-app.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2tXFCjRo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/09/final-daisyui-unsplash-react-photo-app.png" alt="Final Daisyui Unsplash React Photo App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With the addition of component classes like &lt;code&gt;btn&lt;/code&gt;, &lt;code&gt;card&lt;/code&gt;, and &lt;code&gt;footer&lt;/code&gt;, daisyUI significantly improves upon Tailwind CSS by allowing developers to write clean HTML. In this tutorial, we explored building and customizing our own React application with CSS variables and Tailwind CSS utility classes.&lt;/p&gt;

&lt;p&gt;Although our example focused on building an image gallery, you can take the information in this tutorial and apply it to your own application, enjoying Tailwind's styling performance without harming your code's readability as you scale your project. I hope you enjoyed this tutorial!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#full-visibility-into-production-react-apps"&gt;
  &lt;/a&gt;
  Full visibility into production React apps
&lt;/h2&gt;

&lt;p&gt;Debugging React applications can be difficult, especially when users experience issues that are hard to reproduce. If you‚Äôre interested in monitoring and tracking Redux state, automatically surfacing JavaScript errors, and tracking slow network requests and component load time, &lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;try LogRocket&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FGBNR-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2017/03/1d0cd-1s_rmyo6nbrasp-xtvbaxfg.png" alt="LogRocket Dashboard Free Trial Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;LogRocket&lt;/a&gt; is like a DVR for web apps, recording literally everything that happens on your React app. Instead of guessing why problems happen, you can aggregate and report on what state your application was in when an issue occurred. LogRocket also monitors your app's performance, reporting with metrics like client CPU load, client memory usage, and more.&lt;/p&gt;

&lt;p&gt;The LogRocket Redux middleware package adds an extra layer of visibility into your user sessions. LogRocket logs all actions and state from your Redux stores.&lt;/p&gt;

&lt;p&gt;Modernize how you debug your React apps ‚Äî &lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;start monitoring for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Quit Your Job (Even if You Just Started)</title>
      <author>Lani ü™¥</author>
      <pubDate>Tue, 05 Oct 2021 19:12:30 +0000</pubDate>
      <link>https://dev.to/lani/how-to-quit-your-job-even-if-you-just-started-ang</link>
      <guid>https://dev.to/lani/how-to-quit-your-job-even-if-you-just-started-ang</guid>
      <description>&lt;p&gt;By now you‚Äôve surely heard the news...&lt;/p&gt;

&lt;p&gt;We‚Äôre all quitting our jobs at record rates. üëã&lt;/p&gt;

&lt;p&gt;4 million of us left in April, 3.4 million in May, and Elpha's recent &lt;a href="https://elpha.com/resources/should-quit-job-quiz"&gt;should I quit my job quiz&lt;/a&gt; found that 90% of 4,500 respondents scored "speak up" or "start looking," indicating unhappiness with their current role.¬†&lt;/p&gt;

&lt;p&gt;The pandemic gave us all time to think deeper about the future of our careers. More than ever, we‚Äôre wanting to work for companies who share our values. (&lt;em&gt;To instantly match with companies that have the values you care about, check out the &lt;a href="https://elpha.com/talent-pool"&gt;Elpha Talent Pool&lt;/a&gt;.&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;But the truth is, deciding &lt;a href="https://elpha.com/resources/post-covid-career-moves-should-you-stay-or-should-you-go"&gt;when to quit a job&lt;/a&gt; and then going through with it is rarely so straightforward. As Deb Liu, CEO at Ancestry, &lt;a href="https://debliu.substack.com/p/quitting-cutting-the-cord-that-holds"&gt;remarked recently&lt;/a&gt;, ‚Äú&lt;em&gt;Knowing when to quit is just as important as knowing when to double down. So many people cling to situations that aren‚Äôt conducive to their growth and success because they are afraid to quit&lt;/em&gt;.‚Äù The social stigma associated with quitting keeps people stuck in bad jobs.&lt;/p&gt;

&lt;p&gt;We believe that sometimes, quitting is the best thing you can do for your future. It means making a courageous decision to continue developing your career. Or walking away from an unhappy situation knowing you deserve better.&lt;/p&gt;

&lt;p&gt;Even when you know you‚Äôre making the right decision by quitting, tricky situations may come up in those final few weeks. We‚Äôre here to help you navigate them with all the best wisdom from the &lt;a href="https://elpha.com/"&gt;Elpha community&lt;/a&gt; on gracefully quitting your job and moving onto what‚Äôs next.&lt;/p&gt;

&lt;p&gt;We‚Äôll answer these questions and more:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How do you know it‚Äôs time to quit your job?&lt;/li&gt;
&lt;li&gt;Can you quit your job without another job lined up?&lt;/li&gt;
&lt;li&gt;What do you say when quitting a job?&lt;/li&gt;
&lt;li&gt;How much notice should you give when quitting?&lt;/li&gt;
&lt;li&gt;What do you say when people ask why you‚Äôre leaving?&lt;/li&gt;
&lt;li&gt;Can you quit a job you just started?&lt;/li&gt;
&lt;li&gt;How can you stay in touch with people at your company after quitting?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let‚Äôs dive in!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-know-when-its-time-to-quit"&gt;
  &lt;/a&gt;
  How to know when it‚Äôs time to quit
&lt;/h2&gt;

&lt;p&gt;You‚Äôre considering a move but you‚Äôre not sure if you should stay or go. Here are five signs that the time might be right to resign:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. You feel unhappy or upset most days at work.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your happiness is more important than your company's success. Tune into how your work is making you feel. If it‚Äôs mostly negative, it might be time to go.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/lobauman"&gt;Lo&lt;/a&gt;, Communications Manager, shared what this felt like for her, &lt;em&gt;‚ÄúI realized it was time to quit when despite loving my role and the company's mission, I was unhappy, bored, and got overly upset at anything remotely bad that happened. I also noticed my mental health declining because work was upsetting me too much.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/asebold"&gt;Allison&lt;/a&gt;, Developer &amp;amp; Founder, shared:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúIf I've been at a place for around a year and dread going into work, I know it's time for a change. There's no time in life for a job that makes you miserable. If things haven't gotten better within a year's time, it's probably never going to get better.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. You‚Äôre not set up for success by your organization.&lt;/strong&gt;¬†&lt;/p&gt;

&lt;p&gt;At most companies, this looks like clear objectives and milestones for your growth. Do you and your boss agree on your most important deliverables that would represent successful performance? Having a clear understanding of what success looks like in your role is important for your future career growth. &lt;a href="https://elpha.com/members/BeccaCamp"&gt;Becca&lt;/a&gt;, Leadership Coach at Fearless Femmes, shared her thoughts: ‚Äú&lt;em&gt;When there are no shared criteria for success, you will stall as a result--no praise, no feedback, unpredictable advancement, all confusion. Skidaddle&lt;/em&gt;.‚Äù&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. You‚Äôre not learning or growing.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;If you feel like you‚Äôre not learning anything new in your role, or growing towards the next step in your career, it might be time to go.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/juliarieger/"&gt;Julia&lt;/a&gt;, Product Marketer, shares the way she‚Äôs learned to determine whether she‚Äôs stopped learning. ‚Äú&lt;em&gt;I've found it helpful to think about updating my resume or LinkedIn, what new things do I have to add there? What have I learned in the past year? This helps me get out of the rut of just enjoying my coworkers (and what has now become an *easy* job).&lt;/em&gt;‚Äù&lt;/p&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/mayleejacob"&gt;Maylee&lt;/a&gt;, Director of Marketing, made the decision to leave when she felt ‚Äú&lt;em&gt;a lack of alignment at the company, not feeling valued or empowered to do my role, and micromanaged. I didn‚Äôt see a match for my end goals here, so I recognized the need to move on.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Your work environment feels toxic.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;The word ‚Äútoxic‚Äù is thrown around a lot, so sometimes it‚Äôs hard to know if the environment you‚Äôre in fits into this category.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/jenebawint"&gt;Jeneba&lt;/a&gt;, Assistant VP of Content Ops, shared three of her non-negotiables that indicate she‚Äôs in a bad place and it‚Äôs time to leave:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Behavior that violates my boundaries or goes against my values&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;An environment that does not provide an opportunity to grow and expand but instead fosters a culture that causes me to shrink&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;An environment where my ideas are not valued or heard but instead repackaged by someone else, reshared, and repurposed without being credited.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;5. You‚Äôve tried to improve your situation at your current company but it hasn‚Äôt helped.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Think of it as ‚Äúremodeling‚Äù before you ‚Äúmove out.‚Äù&lt;/p&gt;

&lt;p&gt;As &lt;a href="https://elpha.com/members/saracaldwell"&gt;Sara&lt;/a&gt; , Head of Program Operations at Reforge shares, &lt;em&gt;‚ÄúIt is almost always easier to advance internally at an organization... you have all the social capital and institutional knowledge.&lt;/em&gt; &lt;em&gt;&lt;strong&gt;Make sure you've exhausted internal options before starting a search.&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;This starts with discussions with your boss.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/katieholmanoneill"&gt;Katie&lt;/a&gt;, Account Management Lead at Outschool, on how she approaches it, &lt;em&gt;‚ÄúFor roles where it's just obviously a really bad fit (like expectations and reality don't match at all), I've given the opportunity to "make it right.‚Äù If it's clear that the company is unable or unwilling to make good on the expectations that they set (and in the case where I am unable or unwilling to live with the reality), it‚Äôs time to go.‚Äù&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#is-it-okay-to-quit-without-anything-lined-up"&gt;
  &lt;/a&gt;
  Is it okay to quit without anything lined up?
&lt;/h2&gt;

&lt;p&gt;The question of whether to leave your job before you‚Äôve got your next one lined up is tricky. You've likely heard the common advice that doing so is ‚Äúwrong‚Äù.&lt;/p&gt;

&lt;p&gt;The reality is more dependent on your specific situation and how comfortable you are financially. These are the 5 steps we recommend before making a decision. Consider it your ‚ÄúShould I quit ASAP?‚Äù checklist.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Trust your instincts.&lt;/strong&gt; Observe your body's reaction when thinking about work or while at work. How long have you felt that this is not the right job for you and what have you tried to improve the situation?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Assess your financial situation.&lt;/strong&gt; If you‚Äôll be unemployed for a while, the most important question is whether you can support yourself financially. Experts recommend at least 6 months of savings. If you don‚Äôt have that, do you have another skill you could monetize? A partner or family member you could lean on?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Talk to trusted people in your life.&lt;/strong&gt; Ask the people who have your best interest in mind for their honest input. Share the facts of your current situation and ask what they‚Äôd suggest.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Start browsing opportunities.&lt;/strong&gt; Without making a decision yet, start scoping out other jobs and companies. Are there other potential opportunities out there that seem exciting or more aligned with your career trajectory?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Consider talking to a mental health professional.&lt;/strong&gt; If you‚Äôre feeling really stuck and burnt-out, or if you feel you‚Äôre in a toxic job environment, this can really help guide your decision.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sometimes taking action and leaving before you have your next step planned out is helpful for your future career. &lt;a href="https://elpha.com/members/SarahMarling"&gt;Sarah M&lt;/a&gt; shared how having a break between jobs helped her be more deliberate about her next move.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúHaving time and space to finish up the role and not go straight into a new role really helped me to work through my experience and to understand what I wanted next, without my decisions being reactively based on the experience I had just left.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Another reason to quit before securing your next move is if your current job is significantly slowing down your search. As &lt;a href="https://elpha.com/members/MWags"&gt;Meaghan&lt;/a&gt;, Career Development Coach, advises,&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúJob hunting, when done right, is at least a very draining part-time job. If you're already unhappy at work, adding a job hunt to your nights and weekends is a fast track to misery and exhaustion. And trying to engage with an unsatisfying job will drain the creativity and confidence needed to network and put yourself out in the job market authentically.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you are in a role that involves lengthy interview processes (eg. an engineer), consider whether you have the bandwidth while working to also prep for interviews. &lt;a href="https://elpha.com/resources/how-to-prepare-for-and-ace-your-software-engineering-interview"&gt;Engineering interviewing&lt;/a&gt; is a separate skill from the job itself, so having the time to brush up before you start interviews is important.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/saracaldwell"&gt;Sara&lt;/a&gt;, Head of Program Operations at Reforge, agrees;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúI found that trying to run a search while fully employed at a high level wasn't feasible for me -- it meant that I was splitting my attention between two really important aspects of my career and not executing at a high level at either.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But, it‚Äôs also important to consider the additional stress that leaping into the unknown without anything lined up can bring.¬†&lt;/p&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/kelliemason"&gt;Kellie&lt;/a&gt;, Product Manager, had this experience:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúI quit a job without having one lined up and it was not the right decision for me. I had some money reserved but it felt I was jobless longer than I actually was. I was really scared and depressed because I was getting rejection after rejection and I know I wouldn't have taken them so personally if I was working and looking for something new.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you can't or don't want to risk a break in employment, one solution is to set a deadline for yourself by which you‚Äôd like to transition. This can help motivate you to look for new opportunities. &lt;a href="https://elpha.com/members/anapantelic"&gt;Ana&lt;/a&gt; , Chief of Social Policy a.i. at UNICEF, shared how this worked for her:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúI decided to set a hard deadline for myself, using my contract renewal date as the benchmark. I started exploring the market and cast a wide net, scoping both open opportunities and interesting organizations about six months before my deadline, to get a sense of what was out there, and didn't mentally commit to that deadline until about 3 months later.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*&lt;/em&gt; The exception here is if you feel like your physical and mental health are at a breaking point. Then, it‚Äôs best to get out ASAP and lean on those in your life to help you through. As &lt;a href="https://elpha.com/members/laurenvriens"&gt;Lauren&lt;/a&gt; reminds us, ‚Äú&lt;em&gt;It's just work, after all, which no one ever mentions on their deathbed as something they wish they did more of.&lt;/em&gt;‚Äù&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-do-you-quit-your-job"&gt;
  &lt;/a&gt;
  How do you quit your job?
&lt;/h2&gt;

&lt;p&gt;You‚Äôve determined it‚Äôs time to say move on. How do you share the news? Here‚Äôs the order we recommend:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Prepare.&lt;/strong&gt; Know what you‚Äôll say, the reasons you‚Äôll share for leaving, and how much notice you‚Äôll give. (more on that below)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Plan.&lt;/strong&gt; Book a time to share the news with your manager, face-to-face or via video chat if working remotely.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Communicate.&lt;/strong&gt; After talking to your manager, come up with a communications plan to the rest of the team/company together, if possible.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Accept.&lt;/strong&gt; Be ready for an expedited departure, the possibility of a counteroffer, and/or potential questions from your team.¬†&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Transition.&lt;/strong&gt; As you move on from your position, support your team by putting together a transition document. Also, be ready for an exit interview on your final day.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The first thing to do is prepare for those final conversations. It can be really helpful to write out what you‚Äôll say and practice in advance with someone you trust (not from your company). Be sure to do this when you‚Äôre in a rational, calm state instead of emotionally charged after a workday.&lt;/p&gt;

&lt;p&gt;Here are some powerful statements that are truthful and succinct:¬†&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; &lt;em&gt;There's no easy way to say this so I'll be direct... I‚Äôve found a role elsewhere.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; &lt;em&gt;I'm so grateful for the time I spent at [Company].&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;¬† &lt;em&gt;I‚Äôve decided that it‚Äôs best for me to move on from [Company].&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; &lt;em&gt;I'm going to be pursuing my career somewhere that better aligns with my aspirations.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;gt;&amp;gt;&amp;gt; I'm putting in my two weeks notice. My last day will be [date].&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once you‚Äôve come up with what you‚Äôll say, schedule a chat with your manager. &lt;a href="https://elpha.com/members/dianasingkornrat"&gt;Diana&lt;/a&gt; , Portfolio Marketing Manager, suggests you touch on these three things in your conversation with your manager:&lt;/p&gt;

&lt;p&gt;1. &lt;strong&gt;Appreciation&lt;/strong&gt; for the opportunity and experience you‚Äôve had at the company&lt;/p&gt;

&lt;p&gt;2. &lt;strong&gt;Your decision&lt;/strong&gt; to move on to a new opportunity&lt;/p&gt;

&lt;p&gt;3. &lt;strong&gt;An explanation&lt;/strong&gt; that your decision is based on personal and professional growth&lt;/p&gt;

&lt;p&gt;It‚Äôs up to you what reasons you want to share when leaving. But generally, we recommend framing your decision so it‚Äôs &lt;strong&gt;not&lt;/strong&gt; about the shortcomings of your current employer, and instead is focused on your own career growth. If you do have feedback you want to share, keep that for your exit interview (more on that below!)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/ninaherndon"&gt;Nina&lt;/a&gt; , Director of Communications, says to also practice follow-up questions that you think might arise.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Q: ‚ÄúWhy would you leave at such a busy time when we don‚Äôt have anyone to replace you and so much work?‚Äù&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;A: I understand that it‚Äôs a very stressful time, and I‚Äôll continue to support the project/team until [LAST DAY].‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;They may ask what they can do to make you stay. Be prepared to reiterate that your decision is based on personal and professional growth, or whatever the reasons are that you‚Äôve already shared.&lt;/p&gt;

&lt;p&gt;They may also ask where you‚Äôre going next. If you‚Äôre not sure, or not ready to share, you don‚Äôt have to! You can simply reply, "&lt;em&gt;I will share how we can stay in touch once I am settled&lt;/em&gt;."&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resignation Letters&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After talking to your manager, you‚Äôll likely need to follow up with a resignation letter via email. That email could look something like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Hi X,&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Confirming what we spoke about earlier: I'll be moving on from [Company] and [date] will be my last day.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thank you again for the opportunity to be a part of [Company] team -- I‚Äôve learned so much in my time here.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I‚Äôll be working to hand off my ongoing projects. Let me know if there‚Äôs anything else I can do to help make this transition smoother.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/rachelserwetz"&gt;Rachel&lt;/a&gt; , CEO at WOKEN, suggests offering any support you're willing to give, like help finding a replacement for your position. But be sure to set boundaries here, so you make your decision clear and stick to it.¬†&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#possibility-of-a-counteroffer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Possibility of a Counteroffer&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Be ready to respond to a counteroffer. If you‚Äôre clear on why you‚Äôre leaving, you‚Äôll know if a counteroffer (and of what amount) would be enough to make you stay.&lt;/p&gt;

&lt;p&gt;In general, while more money is great in the short term, the same problems will still be there. So unless salary &lt;em&gt;&lt;strong&gt;is&lt;/strong&gt;&lt;/em&gt; your main reason for quitting, we don‚Äôt recommend staying for a counteroffer.¬†&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#transition-document"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Transition Document&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Putting together a robust transition document is a great way to build bridges even as you exit. Make it as easy as possible for people to take over your work. We‚Äôve created a template for a transition document that will be constructive and helpful to your team.&lt;/p&gt;

&lt;p&gt;As one Elpha remarked, &lt;em&gt;People may remember your last weeks and the legacy that you leave behind for them more than they will remember your history of accomplishments with the company.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exit-interviews"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Exit Interviews&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Right before you move on, you‚Äôll likely have an exit interview and your company will ask for feedback. Now‚Äôs the time to share more in-depth, &lt;a href="https://matterapp.com/blog/constructive-feedback"&gt;constructive feedback&lt;/a&gt; , if you‚Äôre comfortable and if you feel your company will be receptive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/Lindapham"&gt;Linda&lt;/a&gt; , Group Product Manager at &lt;a href="https://elpha.com/companies/webflow"&gt;Webflow&lt;/a&gt; , shared how one of her exit interviews went:¬†&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúIn my exit interview, I took the opportunity to have a constructive but candid conversation with the founders on some of the more prominent problems that I saw. These are hard conversations and are much easier coming from someone that will no longer have direct ties to the company.‚Äù&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-much-notice-should-you-give-when-quitting"&gt;
  &lt;/a&gt;
  How much notice should you give when quitting?
&lt;/h2&gt;

&lt;p&gt;Two weeks of notice is generally standard in the US. But if you‚Äôre in a more senior role or you know it‚Äôll take your company longer to transition, giving some extra time is often appreciated.&lt;/p&gt;

&lt;p&gt;Some Elphas shared that they‚Äôd given an extra week of notice, or even a few months. &lt;a href="https://elpha.com/members/EmilyClay"&gt;Emily&lt;/a&gt; shared:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúI gave 6 weeks notice at a job I'd had for 5.5 years. I did this as a courtesy so that I would have time to get all the signed contracts that I could and set them up for success.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/Lindapham"&gt;Linda&lt;/a&gt; shared her approach:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúI gave my manager and my founders three months of notice. I knew that my institutional knowledge was not written down and needed to be and that I had 1-2 unfinished products that I wanted to ship. I had no ill will towards the company and I wanted to make sure that I did what I could to set them up for success while also clearly establishing expectations.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You should also be prepared for an expedited departure. &lt;a href="https://elpha.com/members/ninaherndon"&gt;Nina&lt;/a&gt; shared her boss‚Äôs reaction to her submitting her notice:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúMy boss said, ‚ÄòI think it‚Äôs better if today is your last day. I‚Äôll pay you for two weeks but today should be your last day.‚Äô Everything in me wanted to hang my head in shame, become invisible, and run out the door never to show my face again. But at that moment I had a choice: I could let my toxic boss write the ending to my story, or I could write my ending. And I chose to write my ending.‚Äù üëè&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-do-you-say-to-people-who-ask-why-youre-leaving"&gt;
  &lt;/a&gt;
  What do you say to people who ask why you‚Äôre leaving?
&lt;/h2&gt;

&lt;p&gt;Once your news has been shared, you‚Äôll likely be asked by coworkers why you‚Äôre quitting. People are naturally curious and may want to find out the ‚Äúgossip.‚Äù Here‚Äôs what to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Be honest and straightforward&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/camieee"&gt;Camille&lt;/a&gt; , Content Writer, suggests speaking truthfully and honestly. ‚Äú&lt;em&gt;I won't lie about why I'm leaving as I don't think it helps anybody. I don't mean that I'm rude, but more so that I don't hide when something isn't working for me.&lt;/em&gt;‚Äù&lt;/p&gt;

&lt;p&gt;How transparent you decide to be with coworkers is completely up to you. Many people will likely ask where you‚Äôre going next. If you're comfortable, be honest about your future direction, interests, and goals - you never know how they can help you in your next steps.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Keep it focused &amp;amp; future-oriented&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No matter what your personal reasons might be for leaving, keep the reason you share purely focused on your professional and career goals.&lt;/p&gt;

&lt;p&gt;If you‚Äôre a manager, share the news with your direct reports, individually if possible. Let them know you still believe in your team‚Äôs future, and be clear that your reasons for leaving are about your own desire to explore a new challenge, rather than about them. Explain what they can expect next and who their next manager will be. This will help the transition go smoothly for them and keep their morale high.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/laurenvriens"&gt;Lauren&lt;/a&gt; , National Strategy &amp;amp; Business Operations at Revel, suggests you say something like, ‚Äú&lt;em&gt;I'm ready to start my next phase of growth, take on more responsibility, or try something different&lt;/em&gt;.‚Äù&lt;/p&gt;

&lt;p&gt;Another great way to put it is, &lt;em&gt;‚ÄúI got an opportunity that perfectly fits where I see myself headed, but I‚Äôll miss everyone here.‚Äù&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Stick to only one story&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://elpha.com/members/saracaldwell"&gt;Sara&lt;/a&gt; , Head of Program Operations at Reforge, says you should have one story, and tell it that way, to everyone. It's tempting -- especially when you have close relationships or you're leaving for complicated reasons -- to let people in on the juicy details. But don't.¬†&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"If you have a single story or phrase, and repeat that in every conversation, there's no chance that alternative narratives start circulating. Tech is super small and you want to be able to call people again without hesitation."&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#can-you-quit-a-job-you-just-started"&gt;
  &lt;/a&gt;
  Can you quit a job you just started?
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs say you started a job recently and have only been there for a month or two. But you‚Äôre having doubts about whether your new role was the right choice. Can you quit even though you just started?¬†&lt;/p&gt;

&lt;p&gt;If it‚Äôs only been weeks, or months, &lt;a href="https://elpha.com/members/teresaman"&gt;Teresa&lt;/a&gt; , Community Lead at Elpha, recommends staying for a little longer to ensure you‚Äôve done all the due diligence you can and give them (and yourself) enough time to evaluate the situation. She suggests identifying what your non-negotiables and important questions are and the timeline in which you‚Äôd like to finish evaluating. Then, you can see how things stack up after that amount of time so your decision is better informed.&lt;/p&gt;

&lt;p&gt;With that said, here are three reasons you might want to move on, however long it‚Äôs been:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;The job is very different from what you expected.&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maybe your role as it was described to you in interviews is very different from what your day-to-day actually looks like. If there is a major misalignment in what you were brought in to do vs. what you‚Äôre actually being asked to do, you may need to move on.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Your instincts are telling you this role is wrong for you.&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A bad situation can impact your mental health and self-confidence, and it‚Äôs not worth it. It‚Äôs okay to acknowledge you made the best choice at the time you took the job, knowing what you knew then, and that now it might be time to make a different choice.&lt;/p&gt;

&lt;p&gt;One Elpha who left her job after six weeks shared her experience: &lt;em&gt;‚ÄúLife is too short to stay in unhealthy jobs, and I personally wanted to leave before it started to impact me and my self-confidence.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Your job isn‚Äôt covering your most important ‚Äújob must-haves.‚Äù&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Remember, everything is a learning opportunity. Take the time to write out ‚Äì daily, if you can ‚Äì the details that are bringing you to this decision. Maybe it‚Äôs unsupportive teammates or not trusting management. This understanding can be helpful when you're looking for your next step. If you do decide to leave soon after starting, in your future job search, you have options for how to talk about your decision.¬†&lt;/p&gt;

&lt;p&gt;You could choose to not mention this job on your resume or in interviews.¬†&lt;/p&gt;

&lt;p&gt;Or, you can say it was an opportunity that helped you figure out what you really want. You can honestly share your story, talk through what did and did not work well in the role, and describe how the experience helped you clarify who you are as an employee and what the right workplace looks like for you.&lt;/p&gt;

&lt;p&gt;To avoid a similar situation in the future, take some advice from &lt;a href="https://elpha.com/members/elizabethpietrzak"&gt;Elizabeth&lt;/a&gt; , who says, ‚Äú&lt;em&gt;When I interview for new jobs I always ask the hiring manager or recruiter to give me 3 references to speak to within the company... It absolutely sucks to go through a honeymoon, 90 days, to discover things you probably could have found out if you were allowed to speak to the team upfront. If a company can ask for references, so can you!‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Read more about leaving a job soon after starting in &lt;a href="https://elpha.com/posts/klcd66fv/how-soon-is-too-soon-to-leave-a-new-job"&gt;this members-only conversation&lt;/a&gt; .&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#how-can-you-stay-in-touch-with-people-at-your-company-after-quitting"&gt;
  &lt;/a&gt;
  How can you stay in touch with people at your company after quitting?
&lt;/h3&gt;

&lt;p&gt;Before you leave, and assuming it‚Äôs OK with your company, ask for personal emails or social handles from people you‚Äôd like to keep in touch with. You can also send out an email to colleagues and provide your contact info.&lt;/p&gt;

&lt;p&gt;You‚Äôre definitely not obliged to stay in touch, but if you feel you‚Äôve formed important connections, you don‚Äôt have to say goodbye just because you‚Äôre moving on from the company.&lt;/p&gt;

&lt;p&gt;As Career Coach &lt;a href="https://elpha.com/members/anemari"&gt;Anemari&lt;/a&gt; says, ‚Äú&lt;em&gt;As a general rule, putting the effort into building long-lasting relationships with people is always worth it, professionally and personally. You never know what the future might bring.&lt;/em&gt;‚Äù&lt;/p&gt;

&lt;p&gt;Here are 3 unique ways to set up a recurring relationship with the people you care about before you leave:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;¬†&lt;strong&gt;Get feedback from them before you leave.&lt;/strong&gt; As one Elpha shared, &lt;em&gt;I‚Äôve found that people will give me great feedback in the last few days/weeks, and it‚Äôs been helpful to set up informal time from cross-functional partners to ensure a smooth exit and to get their feedback. This can also be an opportunity to identify future references if you're applying to jobs in the future.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ask your boss or executives to join your "&lt;/strong&gt; &lt;a href="https://www.forbes.com/sites/forbescoachescouncil/2018/02/20/everyone-needs-a-personal-board-of-directors/?sh=128d0ec72bbc"&gt;&lt;strong&gt;board of directors&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;"&lt;/strong&gt; and let them know that you'd love to have a monthly or quarterly call to check in. If this feels natural to your situation, &lt;a href="https://elpha.com/members/saracaldwell"&gt;Sara&lt;/a&gt; suggests owning that calendar invite and agenda.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Create an alumni Slack channel&lt;/strong&gt; - if you‚Äôre at a big enough company and one doesn‚Äôt exist already! This is an easy way to stay in touch with those you‚Äôve worked with.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Quitting a job takes a lot of courage. If you‚Äôre in this process right now, take care of yourself! Remind yourself often of all your successes and the skills you‚Äôve learned so far. Celebrate your tiny wins! And for more support in finding your next role, &lt;a href="https://elpha.com/talent-pool?modal=quiz"&gt;join the Talent Pool&lt;/a&gt; to connect with companies that are a match for &lt;em&gt;&lt;strong&gt;your&lt;/strong&gt;&lt;/em&gt; cultural values and skills.&lt;/p&gt;

</description>
      <category>motivation</category>
      <category>womenintech</category>
      <category>career</category>
      <category>leadership</category>
    </item>
  </channel>
</rss>
