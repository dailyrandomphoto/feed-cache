<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Introduction to java.util Package</title>
      <author>Ritvik Dubey</author>
      <pubDate>Sun, 12 Sep 2021 10:45:39 +0000</pubDate>
      <link>https://dev.to/ritvikdubey27/introduction-to-java-util-package-7d5</link>
      <guid>https://dev.to/ritvikdubey27/introduction-to-java-util-package-7d5</guid>
      <description>&lt;p&gt;Hello all👋 I hope you are doing well. This is going to be a short introductory article about the most useful package in Java i.e., &lt;strong&gt;java.util package&lt;/strong&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-begin"&gt;
  &lt;/a&gt;
  Let's begin...
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#lets-first-understand-package"&gt;
  &lt;/a&gt;
  Let's first understand package
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;What is a package?&lt;/strong&gt; &lt;br&gt;
&lt;br&gt;&lt;em&gt;In short a Java package is collection of similar type of classes.&lt;/em&gt; &lt;br&gt;
&lt;br&gt;A Package can be defined as a collection of similar types of classes, interfaces and sub-packages in the form of directory structure. You can read more about packages in one of my article &lt;strong&gt;&lt;em&gt;&lt;a href="https://dev.to/ritvikdubey27/you-must-know-this-about-java-ii-1k21"&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#javautil"&gt;
  &lt;/a&gt;
  java.util
&lt;/h3&gt;

&lt;p&gt;The basic utility classes required to a programmer are present in this package. &lt;em&gt;It contains the collections framework, legacy collection classes, event model, date and time facilities, internationalization, and miscellaneous utility classes (a string tokenizer, a random-number generator, and a bit array).&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To use any class you have to import java.util package at top of the program:-&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;or&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Class_name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;To make it easy let's take an example, let's suppose you want to print date and time in your program you will need to import &lt;strong&gt;java.util&lt;/strong&gt; package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Date&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//or&lt;/span&gt;
&lt;span class="c1"&gt;//import java.util.*;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Demo&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"The date is : "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;You can run your code online &lt;a href="https://www.tutorialspoint.com/compile_java_online.php"&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RWpGvZS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631432248405/oWB1aHLjb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RWpGvZS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631432248405/oWB1aHLjb.png" alt="java.util.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-use-of-javautil-package"&gt;
  &lt;/a&gt;
  What is use of java.util package?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;For Java collections.&lt;/li&gt;
&lt;li&gt;For random number generation.&lt;/li&gt;
&lt;li&gt;For Calendar.&lt;/li&gt;
&lt;li&gt;For string parsing.&lt;/li&gt;
&lt;li&gt;For internationalization support by using the internationalization supported classes from java.util package &lt;strong&gt;(Locale)&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#some-important-and-generally-used-classes"&gt;
  &lt;/a&gt;
  Some important and generally used classes
&lt;/h3&gt;

&lt;p&gt;Some important and generally used classes and interfaces which are present inside the java.util package are:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Arrays :-&lt;/strong&gt; This class contains various methods for manipulating arrays.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ArrayList :-&lt;/strong&gt; This class is resizable-array implementation of the List interface.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Collections :-&lt;/strong&gt; This class consists exclusively of static methods that operate on or return collections.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Date :-&lt;/strong&gt; This class represents a specific instant in time, with millisecond precision.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;EventObject :-&lt;/strong&gt; This class is the root class from which all event state objects shall be derived.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Formatter :-&lt;/strong&gt; An interpreter for printf-style format strings.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;HashMap :-&lt;/strong&gt; The HashMap class Hash table based implementation of the Map interface.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;HashSet :-&lt;/strong&gt; The HashSet class implements the Set interface, backed by a hash table (actually a HashMap instance).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;HashTable :-&lt;/strong&gt; The HashTable class implements a hash table, which maps keys to values.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;LinkedList :-&lt;/strong&gt; The LinkedList class Doubly-linked list implementation of the List and Deque interfaces.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Locale :-&lt;/strong&gt; A Locale object represents a specific geographical, political, or cultural region.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Objects :-&lt;/strong&gt; This class consists of static utility methods for operating on objects.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Random :-&lt;/strong&gt; An instance of this class is used to generate a stream of pseudorandom numbers.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Scanner :-&lt;/strong&gt; A simple text scanner which can parse primitive types and strings using regular expressions. &lt;em&gt;(&lt;a href="https://dev.to/ritvikdubey27/scanner-class-6ba"&gt;Read more&lt;/a&gt;)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;StringTokenizer :-&lt;/strong&gt; The string tokenizer class allows an application to break a string into tokens.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Timer :-&lt;/strong&gt; A facility for threads to schedule tasks for future execution in a background thread.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TimerTask :-&lt;/strong&gt; A task that can be scheduled for one-time or repeated execution by a Timer.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TreeMap :-&lt;/strong&gt; The TreeMap class A Red-Black tree based NavigableMap implementation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TreeSet :-&lt;/strong&gt; The TreeSet class A NavigableSet implementation based on a TreeMap.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources-
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://docs.oracle.com/javase/8/docs/api/java/util/package-summary.html"&gt;Documentation&lt;/a&gt;&lt;/em&gt; ||&lt;br&gt;
&lt;em&gt;&lt;a href="https://www.hudatutorials.com/java/util/"&gt;Tutorial&lt;/a&gt;&lt;/em&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#okay-so-thats-enough-for-now"&gt;
  &lt;/a&gt;
  Okay so that's enough for now.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  &lt;em&gt;Thank you for reading.&lt;/em&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#please-share-your-thoughts-about-it-and-correct-me-if-im-wrong"&gt;
  &lt;/a&gt;
  &lt;em&gt;Please share your thoughts about it and correct me if I'm wrong.&lt;/em&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#i-hope-you-liked-it-and-found-it-helpful"&gt;
  &lt;/a&gt;
  &lt;em&gt;I hope you liked it and found it helpful.&lt;/em&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#cover-rajat-gour"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Cover:- &lt;a href="https://twitter.com/rajatgour20"&gt;Rajat Gour&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#connect-with-me-on-twitter-or-linkedin"&gt;
  &lt;/a&gt;
  &lt;em&gt;Connect with me on &lt;a href="https://twitter.com/ritvikdubey27?s=09"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/in/ritvik-dubey-3bbb22169"&gt;LinkedIn&lt;/a&gt;&lt;/em&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#my-personal-blog-blogritvikdubeycom"&gt;
  &lt;/a&gt;
  &lt;em&gt;My personal blog &lt;a href="https://blog.ritvikdubey.com/"&gt;blog.ritvikdubey.com&lt;/a&gt;&lt;/em&gt;
&lt;/h4&gt;

</description>
      <category>java</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Join us On telegram || Formal</title>
      <author>SHUBHAM </author>
      <pubDate>Sun, 12 Sep 2021 10:25:44 +0000</pubDate>
      <link>https://dev.to/shubham_ingale/join-us-on-telegram-formal-2inh</link>
      <guid>https://dev.to/shubham_ingale/join-us-on-telegram-formal-2inh</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QBaq7IX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8fjqak3e9uy166vzjl80.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QBaq7IX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8fjqak3e9uy166vzjl80.jpg" alt="logo of channel"&gt;&lt;/a&gt;&lt;br&gt;
Hey there we have created a channel where we will building the app with javascript.&lt;br&gt;
If you're interested you should join us and get the alert of every new project created by us.&lt;br&gt;
Join link : &lt;a href="https://telegram.me/FORMALapps"&gt;https://telegram.me/FORMALapps&lt;/a&gt;&lt;br&gt;
Thanks,&lt;br&gt;
Shubham&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What is BEP2 Network? + Introducing the best Bainance chain Tokens</title>
      <author>leon</author>
      <pubDate>Sun, 12 Sep 2021 10:23:22 +0000</pubDate>
      <link>https://dev.to/leondev/what-is-bep2-network-introducing-the-best-bainance-chain-tokens-gel</link>
      <guid>https://dev.to/leondev/what-is-bep2-network-introducing-the-best-bainance-chain-tokens-gel</guid>
      <description>&lt;p&gt;What is the BEP2 network in Baineschin and what is its use? What is the difference between BEP2 and BEP20 networks?&lt;/p&gt;

&lt;p&gt;One of the main features of cryptocurrencies is various blockchain network updates that lead to more users and popularity. Developers are always trying to improve the blockchain situation by making changes to the cryptocurrency transmission network, in which Bainance Exchange has the largest share.&lt;/p&gt;

&lt;p&gt;In this article, we will get acquainted with one of the new and popular networks in the field of blockchain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#definition-of-bep2-network"&gt;
  &lt;/a&gt;
  Definition of BEP-2 network
&lt;/h2&gt;

&lt;p&gt;It is safe to say that Bainance Exchange is one of the best in terms of providing services in the field of blockchain. The innovations made in this exchange every day create different conditions in the field of cryptocurrency. In the latest efforts of this exchange to provide better services, the new BEP2 network has been introduced.&lt;/p&gt;

&lt;p&gt;BEP2 stands for Binance Chain Evolution Proposal2, a technical standard for creating and using new tokens in Binance Chain. The purpose of BEP2 is to establish a set of specific rules for the operation of tokens in the Binance Chain platform.&lt;/p&gt;

&lt;p&gt;The performance of BEP2 is very similar to the famous Atrium network, ERC20.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bep2-network-features"&gt;
  &lt;/a&gt;
  BEP2 Network Features
&lt;/h2&gt;

&lt;p&gt;There are a number of unique features in this network that set it apart from other blockchain networks. In this section, we mention some of these features:&lt;/p&gt;

&lt;p&gt;. Source address where the source address of the token owner is issued.&lt;/p&gt;

&lt;p&gt;. Token name&lt;/p&gt;

&lt;p&gt;. Token symbol recently introduced on the network.&lt;/p&gt;

&lt;p&gt;. The sum of all the tokens provided in the network&lt;/p&gt;

&lt;p&gt;Coins supported in the BEP2 network&lt;br&gt;
Due to the high transfer speed and reasonable fee of BEP2 network, many popular coins in this network can be traded. Almost all world famous cryptocurrencies including Bitcoin, Atrium and even Stable Coin Tetra can be transferred in this network. This is a proof that the network is trustworthy in conducting transactions in the field of cryptocurrency. One of the most popular of these is Ramzarz Cardano. In addition to its independent ADA blockchain network, Cardano can also be ported through the BEP2 network.&lt;/p&gt;

&lt;p&gt;BNB ciphers are also one of the main transfer hubs in this network.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bep2-network-supported-wallets"&gt;
  &lt;/a&gt;
  BEP2 network supported wallets
&lt;/h2&gt;

&lt;p&gt;In the field of hardware wallets, two versions of Ledger Nano X and Ledger Nano S currently support this network.&lt;/p&gt;

&lt;p&gt;Almost all popular software wallets on the market also support this network, such as the Walt Trust Wallet and the Atomic Wallet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deposit-and-withdrawal-in-bep2-network"&gt;
  &lt;/a&gt;
  Deposit and withdrawal in BEP2 network
&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, there are many similarities between the BEP-2 and ERC-20 networks. One of these similarities is how to deposit and withdraw through this network. As with ERC20, you must have some BNB ciphers in your wallet to deposit and withdraw on BEP2.&lt;/p&gt;

&lt;p&gt;The network's native asset is the BNB (Binance Chain) cryptocurrency, which is used to pay fees on the network. You can easily transfer tokens supported by the BNB network via BEP2.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#difference-between-erc20-and-bep2"&gt;
  &lt;/a&gt;
  Difference between ERC20 and BEP2
&lt;/h2&gt;

&lt;p&gt;The main difference between the two networks is in the type of addresses.&lt;/p&gt;

&lt;p&gt;Addresses used in the ERC20 network start with the prefix 0x but in the BEP2 network, as mentioned above, will start with the prefix bnb.&lt;/p&gt;

&lt;p&gt;Another difference is that you often need a tag or MEMO in your wallet to deposit and withdraw on the BEP2 network, while for ERC20 tokens just having a wallet address is enough.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#difference-between-bep2-and-bep20-networks"&gt;
  &lt;/a&gt;
  Difference between BEP2 and BEP20 networks
&lt;/h2&gt;

&lt;p&gt;Another innovation in Binance Exchange was the introduction of Binance Smart Chain (BSC). The purpose of this network was to implement smart contracts in the blockchain network and decentralize activities.&lt;/p&gt;

&lt;p&gt;The BSC network is a complement to the BNB network, both of which are used in the Bainance ecosystem, with the difference that their functions are different from each other.&lt;/p&gt;

&lt;p&gt;So you can't use the BEP2 network to transfer passwords for smart contracts, but under the same conditions, ie transfer to wallets, you can use both networks to your advantage.&lt;/p&gt;

&lt;p&gt;Another difference similar to ERC20 is that there is no need for a tag or MEMO in BEP20 addresses.&lt;/p&gt;

&lt;p&gt;The summary of the difference between deposit and withdrawal of tokens in all three networks ERC20, BEP20 and BEP2 is as follows:&lt;/p&gt;

&lt;p&gt;. ERC20 is an atrium blockchain whose addresses start with 0x.&lt;/p&gt;

&lt;p&gt;. BEP2 is a BNB blockchain whose addresses start with bnb and often requires a tag or MEMO in the wallet.&lt;/p&gt;

&lt;p&gt;. BEP20 is a BSC blockchain whose addresses start with 0x like Atrium, but its network is different from the ERC20 standard.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding remarks
&lt;/h2&gt;

&lt;p&gt;There are many networks for transferring digital assets with different fees and conditions. But which network is more suitable for you depends on factors such as your wallet and even the exchange in which you trade.&lt;/p&gt;

&lt;p&gt;The BEP2 network has convenient features among several transmission networks to facilitate this.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>Time Functionality In Python</title>
      <author>Dennis O'Keeffe</author>
      <pubDate>Sun, 12 Sep 2021 10:15:10 +0000</pubDate>
      <link>https://dev.to/okeeffed/time-functionality-in-python-e55</link>
      <guid>https://dev.to/okeeffed/time-functionality-in-python-e55</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;I write content for AWS, Kubernetes, Python, JavaScript and more. To view all the latest content, be sure to &lt;a href="https://blog.dennisokeeffe.com"&gt;visit my blog&lt;/a&gt; and subscribe to my newsletter. &lt;a href="https://twitter.com/dennisokeeffe92"&gt;Follow me on Twitter&lt;/a&gt;.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is Day 18 of the #100DaysOfPython challenge.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This post will use the &lt;a href="https://docs.python.org/3/library/time.html"&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; module from Python's standard library to explore how we can work with different time capabilities such as getting the local time and sleeping within a program.&lt;/p&gt;

&lt;p&gt;All of the code used in this post can be found in my &lt;a href="https://github.com/okeeffed/hello-python-time-module"&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Familiarity with &lt;a href="https://pipenv.pypa.io/en/latest/"&gt;Pipenv&lt;/a&gt;. See &lt;a href="https://blog.dennisokeeffe.com/blog/2020-07-04-abcs-of-pipenv"&gt;here&lt;/a&gt; for my post on Pipenv.&lt;/li&gt;
&lt;li&gt;Familiarity with &lt;a href="https://ipython.org/"&gt;iPython&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;p&gt;Let's create the &lt;code&gt;hello-python-time-module&lt;/code&gt; directory and install Pillow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight r"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Make the `hello-python-time-module` directory&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c1"&gt;# Init the virtual environment&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pipenv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;three&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pipenv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ipython&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this stage, we are ready to explore using the &lt;code&gt;time&lt;/code&gt; module using &lt;code&gt;iPython&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To do so, run &lt;code&gt;pipenv run ipython&lt;/code&gt; from the command line to open up the REPL.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#importing-the-module"&gt;
  &lt;/a&gt;
  Importing the module
&lt;/h2&gt;

&lt;p&gt;First off, we will want to import the &lt;code&gt;time&lt;/code&gt; module. We can do so from within the REPL with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once imported, we can check that we have access to the &lt;code&gt;time&lt;/code&gt; module by checking the &lt;code&gt;__name__&lt;/code&gt; attribute and playing around with a few methods.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="c1"&gt;# 'time'
&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# 1628200068.664737
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The method &lt;code&gt;time&lt;/code&gt; that we called on the module returns the time in seconds since the epoch as a floating point number.&lt;/p&gt;

&lt;p&gt;On most systems, the epoch is January 1st, 1970 at midnight. This is currently referred to as Unix time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-the-local-time"&gt;
  &lt;/a&gt;
  Getting the local time
&lt;/h2&gt;

&lt;p&gt;We can also use the time module to get the local or GM time, as well as format the time to a more readable format.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# time.struct_time(tm_year=2021, tm_mon=8, tm_mday=6, tm_hour=7, tm_min=46, tm_sec=20, tm_wday=4, tm_yday=218, tm_isdst=0)
&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gmtime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# time.struct_time(tm_year=2021, tm_mon=8, tm_mday=5, tm_hour=21, tm_min=46, tm_sec=32, tm_wday=3, tm_yday=217, tm_isdst=0)
&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asctime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# 'Fri Aug  6 07:51:53 2021'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#formatting-and-parsing"&gt;
  &lt;/a&gt;
  Formatting and parsing
&lt;/h2&gt;

&lt;p&gt;We have control over how we format and parse time with the &lt;a href="https://docs.python.org/3/library/time.html#time.strftime"&gt;&lt;code&gt;strftime&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://docs.python.org/3/library/time.html#time.strptime"&gt;&lt;code&gt;strptime&lt;/code&gt;&lt;/a&gt; functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"30 Nov 00"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"%d %b %y"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# time.struct_time(tm_year=2000, tm_mon=11, tm_mday=30, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=335, tm_isdst=-1)
&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%m/%d/%Y, %H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# '08/06/2021, 07:56:44'
&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d %b %y"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"30 Nov 00"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"%d %b %y"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# '30 Nov 00'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sleep"&gt;
  &lt;/a&gt;
  Sleep
&lt;/h2&gt;

&lt;p&gt;We can use the time module to set a timer and sleep for a certain amount of time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# notice that the REPL does not return until 5 seconds have passed
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This can be useful when looping through intervals based on conditional logic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparing-times"&gt;
  &lt;/a&gt;
  Comparing times
&lt;/h2&gt;

&lt;p&gt;We can use the &lt;a href="https://docs.python.org/3/library/datetime.html"&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module to compare times by converting &lt;code&gt;time&lt;/code&gt; objects to &lt;code&gt;datetime&lt;/code&gt; objects.&lt;/p&gt;

&lt;p&gt;We need to do so with the &lt;code&gt;datetime.datetime.fromtimestamp&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;

&lt;span class="c1"&gt;# Check time now is less than 1 second later
&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# True
# Check time now is after 1 second before
&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# False
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more examples of &lt;code&gt;datetime&lt;/code&gt; comparisons, see my post on &lt;a href="https://blog.dennisokeeffe.com/blog/2021-08-04-datetime-in-python"&gt;Datetime In Python&lt;/a&gt; and more from my series &lt;a href="https://blog.dennisokeeffe.com/blog/series/working-with-dates-and-times-in-python"&gt;Working with dates and times in Python&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Today's post demonstrates some usages of the &lt;a href="https://docs.python.org/3/library/time.html"&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; module from Python's standard library.&lt;/p&gt;

&lt;p&gt;We covered a number of the standard methods and finished with an example on how to compare using the &lt;a href="https://docs.python.org/3/library/datetime.html"&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources-and-further-reading"&gt;
  &lt;/a&gt;
  Resources and further reading
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://blog.dennisokeeffe.com/blog/2020-07-04-abcs-of-pipenv"&gt;The ABCs of Pipenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pipenv.pypa.io/en/latest/"&gt;Pipenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/datetime.html"&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/time.html"&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.dennisokeeffe.com/blog/2021-08-04-datetime-in-python"&gt;Datetime In Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.dennisokeeffe.com/blog/series/working-with-dates-and-times-in-python"&gt;Series: Working with dates and times in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ipython.org/"&gt;iPython&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okeeffed/hello-python-time-module"&gt;GitHub repository with final code&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Photo credit: &lt;a href="https://unsplash.com/@pawel_czerwinski"&gt;&lt;code&gt;pawel_czerwinski&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally posted on my &lt;a href="https://blog.dennisokeeffe.com/blog/2021-08-06-time-functionality-in-python"&gt;blog&lt;/a&gt;. To see new posts without delay, read the posts there and subscribe to my newsletter.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>python</category>
      <category>100daysofpython</category>
    </item>
    <item>
      <title>Binance Clone Script- a guide to provide a platform like binance for entrepreneurs</title>
      <author>giovani</author>
      <pubDate>Sun, 12 Sep 2021 10:06:33 +0000</pubDate>
      <link>https://dev.to/giovanidev/binance-clone-script-a-guide-to-provide-a-platform-like-binance-for-entrepreneurs-2d0a</link>
      <guid>https://dev.to/giovanidev/binance-clone-script-a-guide-to-provide-a-platform-like-binance-for-entrepreneurs-2d0a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#clone-script"&gt;
  &lt;/a&gt;
  Clone script
&lt;/h2&gt;

&lt;p&gt;Clone script is a tested architecture of the existing app that we can use to develop your customized software. With the help of &lt;strong&gt;&lt;a href="https://radindev.com/binance-clone-script/"&gt;Binance clone script&lt;/a&gt;&lt;/strong&gt; you will be able to launch your exchange platform with all the binance features, but you can add the extra features that you want to the platform and build your customized website. Binance clone script, enables the customers to trade directly in a p2p method. With binance clone script you can develop a hassle-free, user-friendly and secure website like Binance in a short time. Stay with us to read about the Binance clone script.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--obSe8hKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-pic-1-1.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--obSe8hKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-pic-1-1.svg" alt="binance clone  script"&gt;&lt;/a&gt;   &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-binance-clone-script"&gt;
  &lt;/a&gt;
  What is Binance clone script?
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency is being more and more accepted by people day by day. A large value of assets are being traded every day and a significant amount of the trading traffic belongs to the Binance exchange. It shows that Binance is popular among traders because of its high security, low transaction fees, and some other advanced features that it has. Binance is a successful, reliable, and secure cryptocurrency exchange platform. This company was founded in 2017 and climbed up the stairs of success so fast as its revenue in 2020 was about $800 M. Based on the reports its &lt;br&gt;
Website Visits was about 251.3 m on May 2021.        This company was established in China in Sep 2017. Binance is a marketplace that supports the exchange of coins like bitcoin, litecoin, ethereum, and more. Traders use Binance to do different tasks on the platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-premium-features-of-binance-that-cause-people-to-choose-binance-exchange"&gt;
  &lt;/a&gt;
  The premium features of binance that cause people to choose binance exchange:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Low fees&lt;/strong&gt;: Binance is one of the exchange websites that costs lower transaction fees than its competitors. Binance charges a fee of 0.1% for transactions.&lt;br&gt;
&lt;strong&gt;Accepts new cryptocurrencies:&lt;/strong&gt; new cryptocurrencies can be added to the list on binance after the completion of the initial coin offerings.&lt;br&gt;
&lt;strong&gt;Bonuses and rewards:&lt;/strong&gt; traders will gain rewards such as free crypto coins. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-binance-exchange"&gt;
  &lt;/a&gt;
  Features of binance exchange
&lt;/h2&gt;

&lt;p&gt;Multilingual support &lt;br&gt;
Live trade chart &lt;br&gt;
Referral program&lt;br&gt;
Powerful trade match engine &lt;br&gt;
Multicurrency support &lt;br&gt;
Perfect UI/UX design &lt;br&gt;
Different trading orders: market, limit , stop, and stop-limit order &lt;br&gt;
P2p trading&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#binance-clone-app"&gt;
  &lt;/a&gt;
  Binance clone app   &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ypmFeqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-app-1.svg" alt="binance clone app script"&gt;
&lt;/h2&gt;

&lt;p&gt;Binance clone app development is the process of creating a fast performing, trading mobile app compatible with ios or android, with similar features to Binance app. Nowadays that each person has a personal smartphone, you can see that they do almost every task via their smartphones. So developing a binance clone app will enable clients to trade anywhere and easily through their smartphones.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-binance-clone-app"&gt;
  &lt;/a&gt;
  Features of binance clone app
&lt;/h3&gt;

&lt;p&gt;• Compatible with IOS and android &lt;br&gt;
• Pin lock features &lt;br&gt;
• Multilingual support &lt;br&gt;
• Real time updates of the assets’ value&lt;br&gt;
• Transaction history &lt;br&gt;
• Live chat&lt;br&gt;
• Faster chat&lt;br&gt;
• Trading orders&lt;br&gt;
• Referral bonuses&lt;br&gt;
• Instant buying and selling &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-binance-clone-script"&gt;
  &lt;/a&gt;
  Features of binance clone script
&lt;/h3&gt;

&lt;p&gt;• Liquid swap &lt;br&gt;
• Smartchain&lt;br&gt;
• Trust wallet integration&lt;br&gt;
• DEX development &lt;br&gt;
• Launchpad&lt;br&gt;
• Launchpool staking &lt;br&gt;
• Bonous and rewards &lt;br&gt;
• Token listing &lt;br&gt;
• Low transaction fee&lt;br&gt;
• Matching trade &lt;br&gt;
• Multi payment method&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--60oq0gFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-white-label.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--60oq0gFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-white-label.svg" alt="white label binance clone script"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-using-a-white-label-binance-clone-script"&gt;
  &lt;/a&gt;
  Benefits of using a white label binance clone script
&lt;/h2&gt;

&lt;p&gt;1.White label crypto exchange platform&lt;br&gt;
reduces the development time and energy needed to develop a website or write script from scratch&lt;br&gt;
2.The white label binance clone script is a pre-made script which doesn’t need that much money to develop a software from zero.&lt;br&gt;
3.The clone scripts have the high success rate because these scripts are powerful. The fact that some other successful websites are using this script and they are working properly are a testament to the good performance of these scripts.&lt;br&gt;
4.Various altcoins are available in this exchange platform. The exchange supports hundreds of cryptocurrency coins and tokens.&lt;br&gt;
5.It is completely customizable, if you want to add some additional features to white label binance clone script it’s possible. &lt;br&gt;
6.It is a bug-free and hassle-free platform and you will not face new problems during the process of deployment. And you can be sure that the platform will work properly because the script is working on other websites.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#white-label-binance-clone-script-feature-for-users-and-admin"&gt;
  &lt;/a&gt;
  White label binance clone script feature for users and admin
&lt;/h2&gt;

&lt;p&gt;White label binance clone script is a ready-made cryptocurrency exchange clone script of a successful exchange platform named binance. Like other clones, it holds all the features of binance platform. Binance white label clone is completely tested. By using a white label clone script you can start your branding faster. And catch the attention of traders to your exchange platform.&lt;/p&gt;

&lt;p&gt;Also, it will help you to enter the market sooner than developing a website from scratch.&lt;br&gt;
Here is the list of the features the white label Binance clone script offers to its users:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Admin:&lt;/strong&gt;&lt;br&gt;
List tokens and crypto pairs as available trading pairs.&lt;br&gt;
Enable number of liquidity APIs based on the market changes.&lt;br&gt;
Trading fee and withdrawal fee on exchange can be updated any time.&lt;br&gt;
Admin URL  login is available with the http access.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt;&lt;br&gt;
The trading order only will be placed after the 2fa and sms  verification.&lt;br&gt;
IP address verification to disable multiple logins&lt;br&gt;
Transaction history &lt;br&gt;
User friendly User dashboard&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-start-a-website-like-binance"&gt;
  &lt;/a&gt;
  Why should you start a website like Binance?
&lt;/h2&gt;

&lt;p&gt;Brand reputation &lt;br&gt;
Potential customer &lt;br&gt;
High amount of transactions&lt;br&gt;
High market cap for users &lt;br&gt;
Users can learn and earn&lt;br&gt;
 the clone script is a replica of a famous website that exist before , which is an assurance that there is already a “demand” for that website. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#security-features-of-binance-clone-script"&gt;
  &lt;/a&gt;
  Security features of Binance clone script
&lt;/h2&gt;

&lt;p&gt;• Email verification &lt;br&gt;
• Users authentication &lt;br&gt;
• Two factor authentication &lt;br&gt;
• Multi sig wallet integration&lt;br&gt;
• Secure cold wallet storage &lt;br&gt;
• Registry lock&lt;br&gt;
• SMS verifications&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-buy-bitcoin-on-the-binance-platform"&gt;
  &lt;/a&gt;
  How to buy Bitcoin on the Binance platform?
&lt;/h3&gt;

&lt;p&gt;The user  must log in to the Binance account &lt;br&gt;
The user must choose the exchange interface either basic or advanced.&lt;br&gt;
Different types of cryptocurrencies such as BNB, USDT, BTC, and ETH are available that user has to select among them. &lt;br&gt;
After choosing the desired bitcoins user must choose the coin that wants to exchange with&lt;br&gt;
As a result, a trading graph will appear for the user that shows how coins are being exchanged with each other. &lt;br&gt;
The user can set conditions for the order types such as limit order, stop-limit order, and more.&lt;br&gt;
The number of coins to be traded can be specified by the user.&lt;br&gt;
 Binance DEX clone script &lt;br&gt;
In the DEX Binance clone script, there is no need for a central authority to control the trade.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-binance-dex-clone-script"&gt;
  &lt;/a&gt;
  Features of Binance DEX Clone Script
&lt;/h2&gt;

&lt;p&gt;Decentralized Order Book&lt;/p&gt;

&lt;p&gt;150+ Cryptocurrencies Support&lt;/p&gt;

&lt;p&gt;Instant Buy &amp;amp; Sell Bitcoins&lt;/p&gt;

&lt;p&gt;Two Factor authentication&lt;/p&gt;

&lt;p&gt;Crypto Wallet Support&lt;/p&gt;

&lt;p&gt;Fiat-Crypto Exchange&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yOUnyOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/like-binance.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yOUnyOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/like-binance.svg" alt="clone a website like binance"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps-for-creating-a-successful-exchange-platform"&gt;
  &lt;/a&gt;
  Steps for creating a successful exchange platform
&lt;/h3&gt;

&lt;p&gt;You know that you can add extra features and customize your exchange website.so use this possibility in the best way you can for developing a user friendly and popular exchange website. &lt;/p&gt;

&lt;p&gt;Read and test all the Binance features&lt;br&gt;
Understand the weakness and strengths of the platform to improve the weakness.&lt;br&gt;
Try to add some extra features to the platform that are useful for users ( you can find these features by asking users opinions )&lt;br&gt;
Search the social Media and users’ feedback to understand the users’ opinions. The features that they like and some extra features that they prefer to be added to the platform understand are the things users don’t like about the platform and solve it in your exchange.&lt;br&gt;
Check your competitors’ websites. Provide new features and updates for your exchange platform users. &lt;br&gt;
Keep updating your security features of the website and the speed of the transaction because these two factors are so important in exchange platforms.&lt;br&gt;
Find a trustworthy company to clone a website like OKEx for you.&lt;br&gt;
Check out the other popular websites and figure out what features do they have that attract the traders.&lt;br&gt;
Think of some rewarding system to attract more users to the platform, like setting some prizes for the first transaction, welcoming prizes for registration, and some other ways.&lt;br&gt;
Add an educational part to the platform. And make it possible for traders to learn and gain. This factor may attract new traders because they are interested in learning about the crypto exchange.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-best-company-to-develop-a-website-like-binance"&gt;
  &lt;/a&gt;
  How to choose the best company to develop a website like Binance?
&lt;/h2&gt;

&lt;p&gt;Support Period.&lt;br&gt;
Customization Option.&lt;br&gt;
Data Backup.&lt;br&gt;
100% Source Code.&lt;br&gt;
Maintenance Cost.&lt;br&gt;
Free Addons&lt;br&gt;
Their customers feed backs&lt;br&gt;
We recommend you request binance clone script from your chosen company before purchasing the script.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>startup</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>How to Reduce Javascript Libraries Loading Time: Best Practice</title>
      <author>Syed Saadullah Shah</author>
      <pubDate>Sun, 12 Sep 2021 09:33:48 +0000</pubDate>
      <link>https://dev.to/wpsyed/how-to-reduce-javascript-libraries-loading-time-best-practice-52f0</link>
      <guid>https://dev.to/wpsyed/how-to-reduce-javascript-libraries-loading-time-best-practice-52f0</guid>
      <description>&lt;p&gt;In this article I’ll explain how to reduce the loading time of Javascript libraries using Auto-Loading, a public but almost unknown new feature of the Google’s AJAX APIs. It may looks a bit tricky, but with some patience won’t be so hard. Anyway, even Google in its official documentation says “This advanced feature can be difficult to implement, depending on the exact situation. Therefore, we recommend that auto-loading only be considered in specific cases when a reduction in latency is crucial.”&lt;/p&gt;

&lt;p&gt;Well, crucial or not I think any kind of websites, from an home-made blog to a critical company’s website, will enjoy shorter loading time.&lt;/p&gt;

&lt;h2&gt;Let’s start&lt;/h2&gt;

&lt;p&gt;Let’s say in our website we use &lt;em&gt;jQuery&lt;/em&gt; and &lt;em&gt;Google Map API&lt;/em&gt;. Normally our code looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;head&amp;gt;
&amp;lt;!-- jQuery 1.3.2 --&amp;gt;
&amp;lt;script type="text/javascript" 
      src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"&amp;gt;
&amp;lt;/script&amp;gt;
&amp;lt;!-- Google Map API V3 --&amp;gt;
&amp;lt;script type="text/javascript" 
     src="http://maps.google.com/maps/api/js?sensor=false"&amp;gt;
&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We could also write the same like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;head&amp;gt;
  &amp;lt;!-- Google's AJAX APIs --&amp;gt;
  &amp;lt;script type="text/javascript" src="http://www.google.com/jsapi"&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;script type="text/javascript"&amp;gt;
    google.load("maps", "3",  {other_params:"sensor=false"});
    google.load("jquery", "1.3.2");
  &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ok. These are both good ways, but our aim is to reduce loading time as best as possible. This means that &lt;strong&gt;everything&lt;/strong&gt; has to be loaded with a single call. Just one call for ALL our needed libraries.&lt;/p&gt;

&lt;h2&gt;Using the Auto-Loading feature&lt;/h2&gt;

&lt;p&gt;First of all we have to write a small configuration script to let Google know what libraries we need. Depending on your need it could be a bit tricky. &lt;strong&gt;Fortunately&lt;/strong&gt; Google gives a free configuration wizard, but &lt;strong&gt;unfortunately&lt;/strong&gt; it currently supports only some main Google libraries, and no external one. For example there’s no jQuery. Too bad. This means we have to write our configuration script by hand. At least it helps us to understand better how thing works.&lt;/p&gt;

&lt;p&gt;Ok, as wrote above in this example we use jQuery and Google Map API, so here is what our configuration script looks like:&lt;/p&gt;

&lt;pre&gt;{
“modules” : [
{
"name" : "jquery",
"version" : "1.3.2"
},
{
"name" : "maps",
"version" : "3",
other_params:"sensor=false"
}
]
}&lt;/pre&gt;

&lt;p&gt;Quite self-explanatory. We are saying we need two modules, the first one is jQuery version 1.3.2, the second one is Google Map API version 3 (note: the &lt;em&gt;sensor&lt;/em&gt; parameter is mandatory, so we must declare it, even if false).&lt;/p&gt;

&lt;p&gt;Good, now we have to compress it:&lt;/p&gt;

&lt;pre&gt;{”modules”:[{"name":"jquery","version":"1.3.2"},
{"name":"maps","version":"3",other_params:"sensor=false"}]}&lt;/pre&gt;

&lt;p&gt;Due to formatting you see the code splitted in two line, &lt;strong&gt;but please consider everything must be on one single line&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now we have to URL encode it: (you can use any free service, like this one)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%7B%22modules%22%3A%5B%7B%22name%22%3A%22jquery%22%2C%22version
%22%3A%221.3.2%22%7D%2C%7B%22name%22%3A%22maps%22%2C%22version%22%3A%223%22%2
Cother_params%3A%22sensor%3Dfalse%22%7D%5D%7D&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And finally we can add this very long string to our HTML:&amp;lt;script type=”text/javascript” src=”http://www.google.com/jsapi?autoload=%7B%22modules&lt;br&gt;%22%3A%5B%7B%22name%22%3A%22jquery%22%2C%22version%22%3A%221.3.2%22%7D%2C%7B%22name&lt;br&gt;%22%3A%22maps%22%2C%22version%22%3A%223%22%2&lt;br&gt;Cother_params%3A%22sensor%3Dfalse%22%7D%5D%7D”&amp;gt;&lt;/p&gt;

&lt;p&gt;Done! If now we load our webpage everything will be there, jQuery and Google Map API, with only one call, as fast as possible. And obviously in the configuration script &lt;em&gt;we can add as many libraries as we need&lt;/em&gt;, at the end will always be a single call in our HTML. How cool is that?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wpsyed.com"&gt;Read more about reducing JS libraries load time&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Any mistake?&lt;/h2&gt;

&lt;p&gt;To trap any mistake in the configuration script, we can take a look at the Google’s response, it will tell us&lt;em&gt;“Error: Invalid autoload”&lt;/em&gt;. It can be tracked with the Firefox’s Error Console, or simply go to the url and see its content, if there’s something like &lt;strong&gt;&lt;em&gt;&lt;code&gt;var error = new Error("Invalid autoload.");&lt;/code&gt;&lt;/em&gt; &lt;/strong&gt;it means you have done some mistake in the configuration script.&lt;/p&gt;

&lt;h2&gt;Going Forward&lt;/h2&gt;

&lt;p&gt;What if we go forward to the initial aim of the Auto-Loading feature? Can we use it for more then reduce our website loading time? Maybe yes…&lt;/p&gt;

&lt;p&gt;Think this scenario. A complex website where there’s only one main global javascript loading script (’cause we don’t want to handle tens or hundreds loading scripts spread in every single HTML file! &lt;/p&gt;

&lt;p&gt;We want / need one single entry point, easy to maintain, easy to update). Every page called need different libraries. One jQuery, another one the Feed API, another one jQuery + Google Map API + Language API to provide a translation service to our end users. &lt;/p&gt;

&lt;p&gt;It could be a little hell.. (think this in a very complex web application). We could use the Auto-Loading feature to simply our life. We can add some custom metatags to each HTML file with informations about which Javascript library it needs to run, and build runtime a dynamic configuration script to load everything needed!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>jslibraries</category>
      <category>loadingtime</category>
    </item>
    <item>
      <title>Easter eggs using Rooks</title>
      <author>Anish De</author>
      <pubDate>Sun, 12 Sep 2021 09:05:00 +0000</pubDate>
      <link>https://dev.to/anishde12020/easter-eggs-using-rooks-4mhp</link>
      <guid>https://dev.to/anishde12020/easter-eggs-using-rooks-4mhp</guid>
      <description>&lt;p&gt;I stumbled upon this great React Hooks library called &lt;a href="https://react-hooks.org/"&gt;Rooks&lt;/a&gt; recently and it has got a lot to offer. We all have discovered various Easter eggs in various apps and sites. It can range anywhere from stumbling upon a Rick-roll when you click a button a certain number of times or enjoying playing snake when you press a hidden button on a 404 page. &lt;/p&gt;

&lt;p&gt;Ok, so let us start making an Easter egg 🥚&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#an-alert-when-you-press-a-certain-key-combination"&gt;
  &lt;/a&gt;
  An alert when you press a certain key combination
&lt;/h3&gt;

&lt;p&gt;Rooks provides us with a very useful &lt;a href="https://react-hooks.org/docs/useKeys"&gt;useKeys hook&lt;/a&gt;. With this, we can trigger an action whenever a certain key combination is pressed. For this example whenever the keys Q, W, E, R, T, and Y are pressed, all together, an alert will be triggered saying the key combination was pressed. This is a simple example and hence a great place to start&lt;/p&gt;

&lt;p&gt;Firstly we need to create a react project (you can use Gatsby, NextJS, etc as well as long as it is React). I am using &lt;a href="https://codesandbox.io/"&gt;Codesandbox&lt;/a&gt; for this tutorial but you can do it locally as well. &lt;/p&gt;

&lt;p&gt;Now we need to install rooks so we can run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i - s rooks
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can following the &lt;a href="https://react-hooks.org/docs/getting-started/"&gt;getting started guide&lt;/a&gt; for rooks.&lt;/p&gt;

&lt;p&gt;Now let us see the code&lt;/p&gt;

&lt;p&gt;Firstly, we need to import the hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useKeys&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to configure the hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useKeys&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;KeyQ&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;KeyW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;KeyE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;KeyR&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;KeyT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;KeyY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;QWERTY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the first parameter is an array of all the keys that need to be pressed. We pass in a callback function which will be triggered if all the keys are pressed as the second parameter. &lt;/p&gt;

&lt;p&gt;Now whenever the 6 keys are pressed together, we will see this alert - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--veLdR35G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631436265132/OOazJ3pmE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--veLdR35G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631436265132/OOazJ3pmE.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Codesandbox - &lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/weathered-wave-gy3s3"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Now we have successfully made our first Easter egg 🥳!!!&lt;/p&gt;

&lt;p&gt;Now it is time for you to explore other &lt;a href="https://react-hooks.org/docs/hooks-list/"&gt;hooks&lt;/a&gt; and come up with some great Easter eggs for your site.&lt;/p&gt;

&lt;p&gt;Feel free to share your creations down in the comments section.&lt;/p&gt;

</description>
      <category>react</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Compare objects in JS</title>
      <author>Gajender Tyagi</author>
      <pubDate>Sun, 12 Sep 2021 08:38:31 +0000</pubDate>
      <link>https://dev.to/sagartyagi121/compare-objects-in-js-41c8</link>
      <guid>https://dev.to/sagartyagi121/compare-objects-in-js-41c8</guid>
      <description>&lt;p&gt;How can you compare to objects with same properties  cause we know both the objects all though same values but sits at different memory location hence they will be not equal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;user1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nerd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;org&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;user2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nerd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;org&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;eq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;user2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// gives false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Taken from Andrei course for Advance Javascript &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well a simple solution could be this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;user1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nerd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;org&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;user2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nerd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;org&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;eq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By converting the objects into sting the values can be compared but we have to be care full of the spaces and cases to be exact in both the objects.&lt;/p&gt;

&lt;p&gt;A deep dive discussion for the same can be found on the stackoverflow page. &lt;a href="https://stackoverflow.com/questions/1068834/object-comparison-in-javascript"&gt;The Page&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Part 1:  Short introduction to RabbitMQ</title>
      <author>TheDailyTechTalk</author>
      <pubDate>Sun, 12 Sep 2021 08:05:29 +0000</pubDate>
      <link>https://dev.to/thedailytechtalk/part-1-short-introduction-to-rabbitmq-52nl</link>
      <guid>https://dev.to/thedailytechtalk/part-1-short-introduction-to-rabbitmq-52nl</guid>
      <description>&lt;p&gt;If you like what I wrote and want to support me, please follow me on &lt;a href="https://twitter.com/TheDailyTechTa1"&gt;Twitter&lt;/a&gt; to learn more about programming and similar topics. Also check out my blog with more details about this topic &lt;a href="//www.thedailytechtalk.com"&gt;here&lt;/a&gt;❤️❤️&lt;/p&gt;

&lt;p&gt;In this blog post, we are going to cover an overview of what RabbitMQ is and give an example of when you would apply this technology.   &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-rabbitmq"&gt;
  &lt;/a&gt;
  What is RabbitMQ?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;RabbitMq is an open source message broker software. sometimes called message-oriented middleware, that originally implemented the Advanced Message Queuing Protocol or &amp;gt;AMQp for short, and has since been extended with a plug-in architecture to support Streaming Text Oriented Messaging Protocol (STOMP), Message Queuing Telemetry &amp;gt;Transport (MQTT), and other protocols.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The simplest way of putting it would be RabbitMQ is used to distribute long-running task that doesn’t require immediate user feedback into a separate process.&lt;/p&gt;

&lt;p&gt;Now since we have a good understanding of the definition let’s dive deep into the components of RabbitMq, it’s topology and how we can use it.&lt;/p&gt;

&lt;p&gt;RabbitMq has 5 different exchanges:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Direct exchange&lt;/li&gt;
&lt;li&gt;Fanout exchange&lt;/li&gt;
&lt;li&gt;Header exchange&lt;/li&gt;
&lt;li&gt;Dead Letter exchange&lt;/li&gt;
&lt;li&gt;Topic exchange&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#basic-components-of-rabbitmq"&gt;
  &lt;/a&gt;
  Basic components of RabbitMq
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#exchanges"&gt;
  &lt;/a&gt;
  Exchanges
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Exchange&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Direct&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Direct exchange&lt;/strong&gt; delivers messages to queues based on a message routing key.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fanout&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Fanout exchange&lt;/strong&gt; routes messages to all of the queues that are bound to it and the routing key is ignored.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Header&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Headers exchange&lt;/strong&gt; routes messages based on arguments containing headers and optional values. Headers exchanges are very similar to topic exchanges, but route messages based on header values instead of routing keys.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Dead Letter Exchange&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Provides the functionality to capture messages that are not deliverable.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Topic&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Topic exchanges&lt;/strong&gt; route messages to queues based on wildcard matches between the routing key and the routing pattern, which is specified by the queue binding. Messages are routed to one or many queues based on a matching between a message routing key and this pattern.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#components"&gt;
  &lt;/a&gt;
  Components
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Exchange&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Binding&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Binding&lt;/strong&gt; is a “link” that you set up to bind a queue to an exchange.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Routing key&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Routing key&lt;/strong&gt; The routing key is a message attribute. The exchange might look at this key when deciding how to route the message to queues (depending on exchange type).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Producers&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Job of the &lt;strong&gt;producer&lt;/strong&gt; is to send a new message to the exchange.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Message&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Message&lt;/strong&gt; represents value you want the consumer to recieve and process.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Queue&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Queues&lt;/strong&gt; are ordered collections of messages.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Exchange&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Exchange&lt;/strong&gt; routes the message to the right queue.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Consumers&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Consumers&lt;/strong&gt; is a client that receives messages.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#direct-exchange"&gt;
  &lt;/a&gt;
  Direct exchange
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZeGMYr_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hh2s0px8uwq6bphimuvc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZeGMYr_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hh2s0px8uwq6bphimuvc.jpg" alt="Direct exchange topology"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A direct exchange delivers messages to queues based on a message routing key. The routing key is a message attribute added to the message header by the producer. Think of the routing key as an "address" that the exchange is using to decide how to route the message. &lt;strong&gt;A message goes to the queue(s) with the binding key that exactly matches the routing key of the message.&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fanout-exchange"&gt;
  &lt;/a&gt;
  Fanout exchange
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--85D1QVrh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikr1ku35qsvejf1b0d3f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--85D1QVrh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikr1ku35qsvejf1b0d3f.png" alt="Fanout exchange topology"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A fan-out topology is when the producer sends a message to the exchange and the exchanges ignore the routing key and just sends the task directly to &lt;strong&gt;all&lt;/strong&gt; of the queues that are available. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#topic-exchange"&gt;
  &lt;/a&gt;
  Topic exchange
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KQmYzAca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qsy29vit1gewdry6xcu1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KQmYzAca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qsy29vit1gewdry6xcu1.png" alt="Topic exchange topology"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The logic behind the topic exchange is similar to a direct one - a message sent with a particular routing key will be delivered to all the queues that are bound with a matching binding key. There are two important special cases for binding keys:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;*&lt;/strong&gt;  can substitute for exactly one word.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;#&lt;/strong&gt;  can substitute for zero or more words.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dead-letter-exchange"&gt;
  &lt;/a&gt;
  Dead Letter exchange
&lt;/h2&gt;

&lt;p&gt;There are three identified situations where a message becomes undeliverable after reaching RabbitMQ:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A message is negatively acknowledged by the consumer&lt;/li&gt;
&lt;li&gt;The TTL of a message expires&lt;/li&gt;
&lt;li&gt;The queue reaches capacity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default, the broker drops these messages. Publishing is successful, however, the RabbitMQ consumer never handles or has a change to handle the message successfully. &lt;/p&gt;

&lt;p&gt;Queues attached to a dead letter exchange collect dropped messages, with the next steps determined by developer. In other words - it's up to you to decide how to handle messages in the dead letter queue. When implemented correctly, information is almost never lost. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#header-exchange"&gt;
  &lt;/a&gt;
  Header exchange
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KlipTnAO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddpjhah35t7vpxd1b6py.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KlipTnAO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddpjhah35t7vpxd1b6py.png" alt="Header exchange topology"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Headers exchange is an exchange which route messages to queues based on message header values instead of routing key. Producer adds some values in a form of key-value pair in message header and sends it to headers exchange. After receiving a message, exchange try to match all or any (based on the value of “x-match”) header value with the binding value of all the queues bound to it.&lt;/p&gt;

&lt;p&gt;If you like what I write and want to support me, please follow me on &lt;a href="https://twitter.com/TheDailyTechTa1"&gt;Twitter&lt;/a&gt; to learn more about programming and similar topics ❤️❤️&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>The Dark Side of Blogging</title>
      <author>Eevis (she/her)</author>
      <pubDate>Sun, 12 Sep 2021 08:04:11 +0000</pubDate>
      <link>https://dev.to/eevajonnapanula/the-dark-side-of-blogging-1kaj</link>
      <guid>https://dev.to/eevajonnapanula/the-dark-side-of-blogging-1kaj</guid>
      <description>&lt;p&gt;Lately, I've seen multiple excellent posts about why developers should blog. They list very good reasons, and I wholeheartedly agree with them. Blogging is good for many things, it's fun, and you learn a lot during the process.&lt;/p&gt;

&lt;p&gt;However, there are downsides to blogging as well, especially if you write about controversial topics. This blog post will discuss some of these downsides, tell my own experiences, and share tips on conquering those not-so-great things. I'm writing the tips for myself as advice I would have needed to hear, so they might not all apply to you, but I hope you'll get at least something out of this post!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-background"&gt;
  &lt;/a&gt;
  Some Background
&lt;/h2&gt;

&lt;p&gt;I started actively blogging about a year ago. My motivator was, at first, to write blog posts 16 weeks in a row to get the 16-weeks badge from Dev. I earned the badge, and if you're interested, I wrote a blog post about what I learned from that journey:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/eevajonnapanula" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FpXj8uGX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CEbP3D7X--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/201004/e005d101-0ca8-4346-86eb-91bf162b30c4.png" alt="eevajonnapanula"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/eevajonnapanula/checkpoint-16-weeks-of-blogging-2ofj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Checkpoint: 16 Weeks of Blogging &lt;/h2&gt;
      &lt;h3&gt;Eevis (she/her) ・ Feb 21 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#writing&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#learning&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#womenintech&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Blogging is something I like a lot. It has given me a way to construct my thoughts through writing and learn in the process. I already have a good archive of articles I've written. It hasn't been once or twice that I've had the opportunity to refer to one of my blog posts in a conversation.&lt;/p&gt;

&lt;p&gt;However, as much I like this, there have been downsides as well. And during the past year, I've been struggling with stuff - as I would imagine most of us have because of Covid and all the isolation it causes. I'm also recovering from a brain injury, which makes me prone to fatigue. So these things have significantly slowed my speed of writing, especially in 2021.&lt;/p&gt;

&lt;p&gt;So, let's have a look at the downsides and some advice!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-quality-content-takes-time"&gt;
  &lt;/a&gt;
  Writing Quality Content Takes Time
&lt;/h2&gt;

&lt;p&gt;If you want to write some quality content, it takes time. Suppose you're creating a tutorial of some sort, building the end result, testing it, and writing the blog post. It can take a long time from the start to publishing it.&lt;/p&gt;

&lt;p&gt;In Dev, I've come across multiple posts that are basically just (short) lists of links. There is time and place for those lists, but at least I like to read longer posts with some actual content, and from the discussions I've seen in Dev, I'm not the only one. And writing longer posts takes more time.&lt;/p&gt;

&lt;p&gt;Editing is another part of the writing process that requires time. Of course, it is possible to just write and then publish. But parts of writing &lt;em&gt;quality&lt;/em&gt; content are editing, proofreading, and all those moments when you might need to delete half of your blog post and start over.&lt;/p&gt;

&lt;p&gt;So, my advice for this would be to &lt;strong&gt;give yourself time&lt;/strong&gt;. In life, all kinds of things can happen. It is okay if you don't write every week, especially if you're writing for yourself and not, for example, as a job. And when you do have time and energy, purposely &lt;strong&gt;book time for writing, editing, and all that&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-pressure"&gt;
  &lt;/a&gt;
  The Pressure
&lt;/h2&gt;

&lt;p&gt;You also might feel pressured to write and publish. For some, this is not an issue, but at least for me, it has been. When I was blogging for 16 weeks, publishing a blog post a week, I often felt pressure in the back of my mind.&lt;/p&gt;

&lt;p&gt;Okay, it was me wanting to keep the streak going, and nobody else was asking me to do anything. Nevertheless, it really stressed me out sometimes. After the 16 weeks passed and I got my Dev-badge, the publishing pace slowed significantly down until, in the summer, I've published maybe a couple of posts. Well, depending on how you define "summer."&lt;/p&gt;

&lt;p&gt;It's also possible that the pressure comes from outside; if you write for a company or a commissioned piece, then it's not just you anymore. There are deadlines, and someone else is depending on you.&lt;/p&gt;

&lt;p&gt;As mentioned, there was no one else pressuring me on this, at least on purpose. I'm the one who makes me feel like I need to write. Sometimes I don't even know why; there is just that nagging feeling that I haven't published anything in ages.&lt;/p&gt;

&lt;p&gt;There is another kind of pressure as well: writing about specific topics. I mean, my blog posts have been mostly about accessibility topics, but there have been some other themes as well. Still, sometimes I feel like I need to "stay in my lane." Now that I think of it, I've actually been told that when writing about equality-related topics. But I think there's richness in being able to explore different themes.&lt;/p&gt;

&lt;p&gt;So what kind of advice would I give to combat the pressure of writing? First of all, &lt;strong&gt;be merciful and compassionate to yourself&lt;/strong&gt;. No one's life is depending on your writing, and it is okay to take your time. And &lt;strong&gt;it is also okay to branch out and write about other topics as well&lt;/strong&gt;. These might feel like a bit obvious pieces of advice, but at least I need to hear them once in a while.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#responses-to-controversial-topics"&gt;
  &lt;/a&gt;
  Responses to Controversial Topics
&lt;/h2&gt;

&lt;p&gt;As I mentioned, I've been mostly writing about accessibility and front-end development. Once in a while, I've thrown in some posts related to controversial topics. Good examples of these are language and being a woman in an industry where women haven't had space for a long time.&lt;/p&gt;

&lt;p&gt;Recently I wrote about why I don't want to be referred to with the phrase "you guys." First, I shared it on LinkedIn, and the response I got was pretty much supportive, with a couple of not-so-supportive comments. I thought, okay, "let's publish this on Dev." I wasn't prepared for the flood of comments it received.&lt;/p&gt;

&lt;p&gt;In the comments, there were some encouraging comments, and then some comments with good critique and conversation. But then the negative comments started coming, and I felt paralyzed. I wanted to answer the ones with encouragement and good commentary, but the negativity just drained me. So I want to apologize to anyone who was waiting for my answer and never got it! I had to draw a line to protect my mental health.&lt;/p&gt;

&lt;p&gt;Some of the negative comments were clear trolls; some of them clearly tried, but it felt like they hadn't read anything more but the title of the blog post. And the mansplaining. Oh, the mansplaining! For those who are offended by the word, I do not mean that all opposing views were mansplaining. As said, some good comments challenged my points, and they definitely don't fall under the term mansplaining. But then again, some comments definitely were mansplaining.&lt;/p&gt;

&lt;p&gt;As said, those comments drained me. I was contemplating removing the whole post from Dev, but in the end, two things kept me from deleting it. First was all the encouraging comments I received in the post, and the second was the support I got from the Dev's team (Thank you again, Michael, for reaching out! It meant a lot!).&lt;/p&gt;

&lt;p&gt;So what I learned from this, and what tips could I give? First, suppose you write about controversial topics and receive a similar reception. In that case, &lt;strong&gt;it is totally okay not to answer the comments&lt;/strong&gt;. You and your health come first. And &lt;strong&gt;it's okay to draw lines and keep them&lt;/strong&gt;. You don't owe anything to anyone. This is especially true for people from a minority, as they tend to get more trolling and negative comments just because of their background.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summing-up-the-tips"&gt;
  &lt;/a&gt;
  Summing Up The Tips
&lt;/h2&gt;

&lt;p&gt;So, to sum up, what I've been discussing, here are the tips from the previous sections:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Give yourself time. &lt;/li&gt;
&lt;li&gt;Book time for the writing process.&lt;/li&gt;
&lt;li&gt;Be merciful to yourself. &lt;/li&gt;
&lt;li&gt;It's okay not to answer all comments.&lt;/li&gt;
&lt;li&gt;Draw lines, and keep them.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@marcobian?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Marco Bianchetti&lt;/a&gt; on &lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>career</category>
      <category>womenintech</category>
      <category>mentalhealth</category>
    </item>
    <item>
      <title>What did you teach this week? </title>
      <author>Aatmaj</author>
      <pubDate>Sun, 12 Sep 2021 07:56:31 +0000</pubDate>
      <link>https://dev.to/aatmaj/what-did-you-teach-this-week-g1c</link>
      <guid>https://dev.to/aatmaj/what-did-you-teach-this-week-g1c</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-did-you-teach-this-week"&gt;
  &lt;/a&gt;
  What did you teach this week?
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;To teach is to learn twice over.&lt;br&gt;
– Joseph Joubert&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Teaching is the best way to reinforce the concepts learnt. Teaching increases our knowledge as well as that of others. We simultaneously learn from others too! So why not give an helping hand in this give and take of knowledge? Let us all begin a wave of positivity by encouraging everyone to teach!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--saZyZyrJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ghar8u2u60vjcn9tdxu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--saZyZyrJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ghar8u2u60vjcn9tdxu.gif" alt="teach-teaching"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whatever you have taught this week, however small, counts as a big help to the entire community!&lt;br&gt;
So please comment below, your teachings in this week!&lt;/p&gt;

</description>
      <category>teachingthisweek</category>
      <category>discuss</category>
      <category>teaching</category>
    </item>
    <item>
      <title>Create a self verifying type library with Zod</title>
      <author>Renato Sinohara</author>
      <pubDate>Sun, 12 Sep 2021 07:35:52 +0000</pubDate>
      <link>https://dev.to/rsinohara/create-a-self-verifying-type-library-with-zod-2l74</link>
      <guid>https://dev.to/rsinohara/create-a-self-verifying-type-library-with-zod-2l74</guid>
      <description>&lt;p&gt;If you use Typescript, you probably wished it could do 2 more tings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Verify at run time if a type matches your schema&lt;/li&gt;
&lt;li&gt;Make sure no unexpected fields exist in objects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#zod"&gt;
  &lt;/a&gt;
  Zod
&lt;/h2&gt;

&lt;p&gt;Zod (&lt;a href="https://github.com/colinhacks/zod"&gt;github&lt;/a&gt;) allows you to do exactly that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zod&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// creating a schema for strings&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;foodNameSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;foodNameSchema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tuna&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; "tuna"&lt;/span&gt;
&lt;span class="nx"&gt;foodNameSchema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; throws ZodError&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Zod can be used to create Typescript types, so we also have all the compile time goodness.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;FoodName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;foodNameSchema&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, some might say parsing will add performance impact. This might matter to you.&lt;br&gt;
But in this article, we show a different usage that dodges that completely.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#self-verifying-type-library"&gt;
  &lt;/a&gt;
  Self verifying type library
&lt;/h2&gt;

&lt;p&gt;Chances are you have an internal library to share your common types. Especially if you are or intend to use micro frontends.&lt;/p&gt;

&lt;p&gt;What we have been doing in my team is to use Zod's parsing to make sure this type library is always up to date with our live formats.&lt;/p&gt;

&lt;p&gt;By ensuring all production types match our schemas exactly, we can rely on our types 100%. Call it contract testing, but we also use the same schemas in our code.&lt;/p&gt;

&lt;p&gt;This also has no runtime impact. In fact, our other projects need not even import Zod.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;p&gt;Any typescript project can import the types or Zod schemas at will. Pure JS projects can also use Zod schemas, if desired.&lt;br&gt;
Zod can be exported to JSON schema, so other languages could also benefit.&lt;/p&gt;

&lt;p&gt;During deployment, the type library crawls and checks the types of API and CSR initial props, making sure the schemas are all correct.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>cicd</category>
      <category>schemavalidation</category>
    </item>
  </channel>
</rss>
