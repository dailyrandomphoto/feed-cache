<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The Beginner-friendly way to learn from FreeCodeCamp on YouTube.</title>
      <author>Piyush Malhotra</author>
      <pubDate>Wed, 17 Nov 2021 12:44:22 +0000</pubDate>
      <link>https://dev.to/piyushmalhotra97/the-beginner-friendly-way-to-learn-from-freecodecamp-on-youtube-37g7</link>
      <guid>https://dev.to/piyushmalhotra97/the-beginner-friendly-way-to-learn-from-freecodecamp-on-youtube-37g7</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt;&lt;/strong&gt; is one of the best places online for anyone who wants to learn programming and computer science concepts from scratch. You don’t need to spend  a dime and they give you over &lt;strong&gt;3000&lt;/strong&gt; hours of tutorials,  exercises, and projects which are surely going to teach you enough to land an entry-level developer job. But how exactly one should learn from FCC on Youtube?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The thing about freecodecamp is - On YouTube, the videos won’t be structured step by step as compared to some other platform, let's say &lt;strong&gt;Udemy&lt;/strong&gt; which follows more of a “Bootcamp-y” method. This might prove overwhelming to some people who want to start learning as it did to me. Now, don’t get me wrong, one can learn a lot by following FCC’s youtube videos, they have a ton of content that is not on their website as well. But for beginners, an unguided approach might be a little daunting.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article acts as a guide for beginners as to where should people start learning from FCC’s youtube channel and gives you some tips to reduce clutter and focus only on the things that you require. But keep in mind that in the future you will require lots of googling and researching so do not limit your learning to just one resource. As of now, let’s dive into it…&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-sort-by-most-popular"&gt;
  &lt;/a&gt;
  1. Sort by “Most Popular”
&lt;/h2&gt;

&lt;p&gt;No, really. Just sort the videos by popularity. The reason for this is that so many people have watched and liked that video so there must be something good in it, right? Precisely. It’s going to declutter the barrage of information in front of you so that you can focus only on what’s important.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sd6031m7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b4fsgfz97tqjhpbw8v3g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sd6031m7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b4fsgfz97tqjhpbw8v3g.png" alt="Sorted by Popularity" width="880" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-choose-a-programming-language-beginner-videos"&gt;
  &lt;/a&gt;
  2. Choose a Programming Language (Beginner Videos)
&lt;/h2&gt;

&lt;p&gt;No doubt in this one, you have to get your feet wet and for that, you need at least one language in your “backpack”. Clearly, with 28 million views, Python is the most popular language (also worldwide) which is easy to learn and beginner-friendly but don’t feel forced if you don’t want to. Do some research, read up some stuff, and choose whatever you think you feel comfortable in. Out of the videos above, you should go first for the beginner videos in Python, Javascript, Java, C, or C++ which are usually considered the “Big 5” of programming languages.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x0N-zJJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nkelx1g37zze73td1pf0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x0N-zJJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nkelx1g37zze73td1pf0.png" alt="Popular languages" width="860" height="472"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-establishing-the-fundamentals"&gt;
  &lt;/a&gt;
  3. Establishing the fundamentals
&lt;/h2&gt;

&lt;p&gt;This is the critical point where everyone usually makes mistakes just like I did. You just watched a 4-hour video on a language and now you feel like you can move on to something else, you’re a geek now, right? Wrong! You cannot learn swimming just by watching someone execute a butterfly stroke ever so graciously. After finishing whatever language you just learned, it is time to apply that knowledge by building something. The best way to do this is to watch a “Build Projects” video from the channel and either code along or recreate it after, either way, you must polish the concepts that you have learned in step 2 (We become better by staying consistent).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--futQBNnv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7yygnoa2xbz4l743c0xb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--futQBNnv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7yygnoa2xbz4l743c0xb.png" alt="Watch, Learn, Practice &amp;amp; Build !!" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Build anything, copy the project's lines while understanding the concept, go back to the video if you’re stuck, do some creative “googling” and keep on making a bunch of stuff until you are confident you can move on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-second-language"&gt;
  &lt;/a&gt;
  4. Second Language
&lt;/h2&gt;

&lt;p&gt;Now it's time to move on to another language and try on those projects that made using this new language. It will teach you how to work with multiple languages and also the basic differences between various syntax and functionalities. More importantly, it will make you more adaptable because, in a professional environment, you are gonna have to work with multiple technologies at one point or another. The main objective of this step is to teach how to understand the syntax of various languages and read different kinds of code properly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-other-essential-skills"&gt;
  &lt;/a&gt;
  5. Other Essential Skills
&lt;/h2&gt;

&lt;p&gt;You probably have enough practice and mini-projects under your belt now that you can start looking at some intermediate as well as advanced skills. It’s time to do more research now and expand your backpack, you could learn about &lt;strong&gt;computer networking, operating systems, database management (SQL), scripting, Linux, version control, data structures, and algorithms,&lt;/strong&gt; and many other tools that help in the development. A simple google search will show you the essential skills required from a software developer apart from programming. Keep in mind that you should be always practicing whatever you are learning currently and, it WILL help you in one way or another as a developer. All these 5 steps should take you about 3–6 months depending on your time, availability, and choice of topics. Study hard and succeed!!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P6SkxF58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xcqocsfw80v1xhswaoqa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P6SkxF58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xcqocsfw80v1xhswaoqa.png" alt="Keep Learning!" width="880" height="586"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-the-world-is-your-oyster-keep-learning"&gt;
  &lt;/a&gt;
  6. The World is your Oyster — Keep Learning
&lt;/h2&gt;

&lt;p&gt;It is time to choose a specialization in which you want to work professionally. Want to create games for a living? Want to design jaw-droppingly beautiful websites? Want to train computers to predict data? The options are in dozens and some of the growing industries include &lt;strong&gt;Web Development, Cybersecurity, DevOps, Full Stack Dev, Game Development, Data Science, Machine Learning, UI/UX, and many more&lt;/strong&gt;. If you are thinking that you need to learn “everything” before having a job, I’m afraid you are wrong. There are so many technologies and tools that are popping up every day it's practically impossible to keep up! You could study for 100 years and still not feel that you know enough (Avoid the Imposter Syndrome).&lt;/p&gt;

&lt;p&gt;Time to do some creative googling again. Do some research, join communities and subreddits about programming, ask questions about industries, start focusing on other resources for learning. Here is a simple roadmap sketch of the whole learning plan.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u0Mq0E9t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjarlaorzkjondc873pg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u0Mq0E9t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjarlaorzkjondc873pg.png" alt="Learning Path" width="880" height="515"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, there you have it, a simple guided plan for those who want to start learning from FreeCodeCamp’s Youtube Channel. What’s the next step? You could probably start tackling some junior developer roles while keeping on improving. Note that people can follow it along with other resources as well, this article is just for those who do not know where to start and prefer using FreeCodeCamp videos.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The resources are endless and my aim to write this article was to help declutter the learning path for the absolute beginners. I’ll put up a bunch of more stuff and resources to follow in the coming future. Thanks for reading folks!! If I missed some important steps then feel free to let me know and I will surely make the changes in the article.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>beginners</category>
      <category>freecodecamp</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>React.js - Virtual DOM </title>
      <author>The Nerdy Dev</author>
      <pubDate>Wed, 17 Nov 2021 12:39:15 +0000</pubDate>
      <link>https://dev.to/thenerdydev/reactjs-virtual-dom-3m68</link>
      <guid>https://dev.to/thenerdydev/reactjs-virtual-dom-3m68</guid>
      <description>&lt;p&gt;Hey guys 👋🏻,&lt;br&gt;
In this post, let us talk about Virtual DOM in React.js.&lt;/p&gt;

&lt;p&gt;For this post we will understand Virtual DOM&lt;br&gt;
✔ What is Virtual DOM ?&lt;br&gt;
✔ Why we need Virtual DOM ?&lt;br&gt;
✔ Why Virtual DOM is faster and more efficient than real DOM ?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r_GJOTfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxogniwdxp9s31063jvq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r_GJOTfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxogniwdxp9s31063jvq.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-virtual-dom-"&gt;
  &lt;/a&gt;
  Why Virtual DOM ?
&lt;/h2&gt;

&lt;p&gt;The DOM as we know represents the UI of your application. Every time there is a change in the &lt;code&gt;state&lt;/code&gt; of your application UI, the DOM gets updated to represent that change. But the problem is that frequently manipulating the DOM affects performance, making it &lt;strong&gt;DEAD&lt;/strong&gt; slow ! &lt;/p&gt;

&lt;p&gt;When changes are made to some element, the updated element and it's children have to be &lt;em&gt;re-rendered&lt;/em&gt; to update the application UI. The re-rendering of the UI is what makes it slow. &lt;/p&gt;

&lt;p&gt;✔ &lt;em&gt;More the UI components you have, more expensive will be the patches to the DOM as they would need to be re-rendered for every DOM update&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;👉🏻 &lt;strong&gt;Hence the need for Virtual DOM in React.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-coming-to-question-what-the-heck-is-virtual-dom-"&gt;
  &lt;/a&gt;
  Now coming to question, what the heck is Virtual DOM 🤔?
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Virtual DOM&lt;/strong&gt; is only a &lt;em&gt;virtual representation&lt;/em&gt; of the DOM. Every time the state of our application changes, the virtual DOM gets updated instead of the real DOM. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#virtual-dom-is-faster-and-more-efficient-"&gt;
  &lt;/a&gt;
  Virtual DOM is faster and more efficient ..
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTSCuA7j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9yoe10he2fr738onc143.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTSCuA7j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9yoe10he2fr738onc143.png" alt="Image description" width="480" height="258"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When new elements are added to the UI, a virtual DOM is created which is a &lt;strong&gt;tree like representation&lt;/strong&gt;. Each element is a node on this tree. If the &lt;code&gt;state&lt;/code&gt; of any of any of these elements changes, a new virtual DOM tree is created. This tree is then compared or &lt;strong&gt;"diffed"&lt;/strong&gt; with the previous &lt;strong&gt;virtual DOM tree&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once this is done, the virtual DOM calculates the &lt;strong&gt;best&lt;/strong&gt; possible method to make these changes to the real DOM. This ensures that there are minimal operations on the real DOM. Hence, reducing the performance cost of updating the real DOM. This updated tree is then batch updated to the real DOM. &lt;/p&gt;

&lt;p&gt;So this is it for this article. Thanks for reading.&lt;br&gt;
&lt;strong&gt;Don't forget to leave a like if you loved the article. Also share it with your friends and colleagues.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" alt="Alt Text" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>React.js - Props </title>
      <author>The Nerdy Dev</author>
      <pubDate>Wed, 17 Nov 2021 12:09:38 +0000</pubDate>
      <link>https://dev.to/thenerdydev/reactjs-props-50kc</link>
      <guid>https://dev.to/thenerdydev/reactjs-props-50kc</guid>
      <description>&lt;p&gt;Hey guys 👋🏻,&lt;br&gt;
In this post, let us cover what actually are &lt;code&gt;props&lt;/code&gt; in React.js &lt;/p&gt;

&lt;p&gt;For this post we will first understand Props&lt;br&gt;
✔ What is Props ?&lt;br&gt;
✔ Understanding Props&lt;br&gt;
✔ Accessing Props in Functional and Class based Components&lt;br&gt;
✔ Examples of Props&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r_GJOTfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxogniwdxp9s31063jvq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r_GJOTfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxogniwdxp9s31063jvq.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction-to-props"&gt;
  &lt;/a&gt;
  Introduction to Props
&lt;/h2&gt;

&lt;p&gt;Props are used to make components &lt;em&gt;configurable&lt;/em&gt;, &lt;em&gt;dynamic&lt;/em&gt; and &lt;em&gt;flexible&lt;/em&gt;. Every HTML element as we know has some attributes like input element has &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;placeholder&lt;/code&gt; etc. It is &lt;strong&gt;dynamic&lt;/strong&gt; content that you can configure from outside. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-props"&gt;
  &lt;/a&gt;
  Understanding Props
&lt;/h2&gt;

&lt;p&gt;Our components which are customized HTML elements can also be passed some arguments in form of &lt;strong&gt;attributes&lt;/strong&gt; known as &lt;code&gt;props&lt;/code&gt; so as to configure just like any other HTML element is configured and it is the &lt;strong&gt;parent&lt;/strong&gt; component that passes these arguments to the &lt;strong&gt;child&lt;/strong&gt; component. &lt;/p&gt;

&lt;p&gt;Every &lt;strong&gt;child&lt;/strong&gt; component receives &lt;code&gt;props&lt;/code&gt; as an argument that is passed to it by React which is an &lt;strong&gt;object&lt;/strong&gt; that holds the arguments that the &lt;strong&gt;parent&lt;/strong&gt; component passed to the &lt;strong&gt;child&lt;/strong&gt; component and that object is known as &lt;code&gt;props&lt;/code&gt;. &lt;code&gt;props&lt;/code&gt; basically means all the properties that a component is receiving from outside. &lt;/p&gt;

&lt;p&gt;When using &lt;strong&gt;functional&lt;/strong&gt; components, you can access the &lt;code&gt;props&lt;/code&gt; using the below syntax : &lt;/p&gt;

&lt;p&gt;&lt;code&gt;props.&amp;lt;propName&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When using &lt;strong&gt;class&lt;/strong&gt; components, you can access the &lt;code&gt;props&lt;/code&gt; using the syntax : &lt;/p&gt;

&lt;p&gt;&lt;code&gt;this.props.&amp;lt;propName&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  EXAMPLES
&lt;/h2&gt;

&lt;p&gt;Passing a &lt;code&gt;prop&lt;/code&gt; of &lt;strong&gt;brand&lt;/strong&gt; to the &lt;code&gt;Computer&lt;/code&gt; component : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--usaj2jid--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aprfv58a36bdqr27df86.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--usaj2jid--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aprfv58a36bdqr27df86.png" alt="Image description" width="880" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Defining our &lt;code&gt;Computer&lt;/code&gt; component which receives the &lt;strong&gt;brand&lt;/strong&gt; prop.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EI2H1PnD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd5e5z3bf7fpqqpjfk1k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EI2H1PnD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd5e5z3bf7fpqqpjfk1k.png" alt="Image description" width="880" height="771"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So this is it for this article. Thanks for reading.&lt;br&gt;
&lt;strong&gt;Don't forget to leave a like if you loved the article. Also share it with your friends and colleagues.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" alt="Alt Text" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>react</category>
    </item>
    <item>
      <title>Três conceitos para um Código Limpo</title>
      <author>Daniel Reis</author>
      <pubDate>Wed, 17 Nov 2021 12:09:00 +0000</pubDate>
      <link>https://dev.to/danielhe4rt/tres-conceitos-para-um-codigo-limpo-3mdo</link>
      <guid>https://dev.to/danielhe4rt/tres-conceitos-para-um-codigo-limpo-3mdo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#pr%C3%B3logo"&gt;
  &lt;/a&gt;
  Prólogo
&lt;/h2&gt;

&lt;p&gt;A pergunta mais constante entre os desenvolvedores que estão querendo sair do nível Júnior para Pleno é "será que meu código tá uma merda?" ou "beleza isso funciona, mas como melhorar esse lixo?" e se questionar sobre a qualidade do produto que você está entregando é um sinal de que você está (digi)evoluindo.&lt;/p&gt;

&lt;p&gt;Na minha jornada como desenvolvedor eu venho cada vez entendendo que no final das contas o importante é a &lt;strong&gt;engenharia&lt;/strong&gt; e não a &lt;strong&gt;ferramenta&lt;/strong&gt;, até porquê você sabe que um CRUD é uma sequencia X que pode ser replicada em TODAS as linguagens, certo? Logo, se você sabe a teoria/engenharia, a pratica só precisa da ferramenta/linguagem.&lt;/p&gt;

&lt;p&gt;Agora, vamos entender sobre conceitos/padrões que podem estar ligados diretamente à qualidade do código entregue, onde nós deveriamos nos preocupar muito mais do que sobre "qual framework usar".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#o-que-vamos-aprender"&gt;
  &lt;/a&gt;
  O que vamos aprender?
&lt;/h2&gt;

&lt;p&gt;Nesse post, quero dar exemplos de conceitos e métodologias para que possamos melhorar nosso código. Sendo eles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DRY (Don't Repeat Yourself)&lt;/li&gt;
&lt;li&gt;Early Return (Anti Hadouken)&lt;/li&gt;
&lt;li&gt;KISS (Keep it Simple Stupid)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#1-dont-repeat-yourself-dry"&gt;
  &lt;/a&gt;
  1. Dont Repeat Yourself (DRY)
&lt;/h3&gt;

&lt;p&gt;O tal do DRY é algo bem visto quando o assunto é abstração. A ideia do principio é você não repetir coisas que podem ser abstraidas pra blocos de códigos únicos. Se você está fazendo o mesmo bloco de código duas vezes, ele é refatorável pra uma função com argumentos. &lt;/p&gt;

&lt;p&gt;Não entendeu? Se liga aqui então:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserRepository&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;createUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$payload&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pdo&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SELECT * FROM users WHERE email = :email'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bindParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;':email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$payload&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="no"&gt;PDO&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;PARAM_STR&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'E-mail já cadastrado'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'INSERT INTO users values (null,:name,:email, :password)'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$email&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;?array&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pdo&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SELECT * FROM users WHERE email = :email'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bindParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;':email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;PDO&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;PARAM_STR&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Usuário inexistente.'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;PDO&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;FETCH_ASSOC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nesse exemplo feito em menos de 5 minutos podemos ver que há uma duplicidade de código quando fazemos a query do &lt;em&gt;createUser&lt;/em&gt; e a query do &lt;em&gt;getUser&lt;/em&gt; e não há necessidade de duplicar isso caso haja uma função pra lidar com esse comportamento.&lt;/p&gt;

&lt;p&gt;Se liga:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserRepository&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;createUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$payload&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getUserByEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$payload&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'E-mail já cadastrado'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'INSERT INTO users values (null,:name,:email, :password)'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$email&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;?array&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getUserByEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Usuário inexistente.'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;PDO&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;FETCH_ASSOC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getUserByEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$email&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;array&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pdo&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SELECT * FROM users WHERE email = :email'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bindParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;':email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;PDO&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;PARAM_STR&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;PDO&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;FETCH_ASSOC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Isolamos uma abstração em uma única função e usamos ela em 2 lugares e o código ainda ficou um pouco mais legível (desde que você dê um nome bacana pra sua função abstraida). Bacana né? Se a galera juninha prestasse atenção nesse tipo de coisa desde o dia zero já teriamos carros voadores :p&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-early-return-statement"&gt;
  &lt;/a&gt;
  2. Early Return Statement
&lt;/h3&gt;

&lt;p&gt;Beleza, agora vamos falar de complexidade de código: tá ligado aquele código que tem um monte de if/else um dentro do outro parecendo um hadouken? Então, isso ai é um PORRE pra gente que vai dar manutenção no futuro e muitas vezes perdemos uns minutos refatorando o negócio. Então, se ensinarmos a rapaziada como não criar esse tipo de código vai ser a maior vitória pros devs que mexem com legado (eu incluso).&lt;/p&gt;

&lt;p&gt;Você não sabe o que é um código hadouken? É isso aqui ó:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AuthRepository&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;adminAuthenticate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$credentials&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$credentials&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Hash&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$credentials&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;isAdmin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nc"&gt;Auth&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;UnauthorizedException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'vc n é um admin seu merda'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;UnauthorizedException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'senha errada seu otário'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;UnauthorizedException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ce nem existe no meu banco wtf'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Acho que nesse exemplo deu pra entender o conceito de hadouken, né? Encadeamos tantos ifs e elses que não fez o menor sentido e só aumentou a complexidade do código. Agora, se entendermos a lógica do &lt;strong&gt;Early Return&lt;/strong&gt; a coisa fica um pouco mais bonita. &lt;/p&gt;

&lt;p&gt;O que é: fazer com que o else seja sempre a condição principal e dar o retorno da função o quanto antes. Ou seja: negar a função e retornar em caso de erro. Não entendeu? Vamos pra prática então:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AuthRepository&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;adminAuthenticate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$credentials&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$credentials&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;UnauthorizedException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ce nem existe no meu banco wtf'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Hash&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$credentials&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;UnauthorizedException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'senha errada seu otário'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;isAdmin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;UnauthorizedException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'vc n é um admin seu merda'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;Auth&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Negamos todas as condicionais pra fazer com que elas retornassem o quanto antes e garantimos uma melhor legibilidade pro código. O Early Return vem sendo cada vez mais citados por devs e empresas como algo obrigatório pra criar um código bacana e saber isso com certeza vai te deixar a frente de uma galera.&lt;/p&gt;

&lt;p&gt;Mas Daniel, não devo usar o else? Bom, isso fica inteiramente pra você. Eu não gosto, mas tem vezes que não dá pra fugir. Fica ai a reflexão :p&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-keep-it-simple-stupid-kiss"&gt;
  &lt;/a&gt;
  3. Keep it Simple Stupid (KISS)
&lt;/h3&gt;

&lt;p&gt;Cara, é bem legal implementar lógicas ao seu software e tudo mais porém chega numa hora que a própria linguagem já tem aquele método ali que você fez pronto, e com toda certeza mais otimizado. Então, pra quê?! As vezes manter as coisas simples são mais vantajosas a longo prazo e isso visto de um lado mais dev da vida onde temos gambiarras pra todo lado, é um puta ponto positivo.&lt;/p&gt;

&lt;p&gt;Vamos um exemplo de um bloco de código zoado e uma versão desse mesmo bloco porém simples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Jeito zoado&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getOAuthProvider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$providerId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$providerId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'twitch'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'discord'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'twitter'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'google'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'facebook'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Jeito simples&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getOAuthProvider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$providerId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$providers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'twitch'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'discord'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'twitter'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'google'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'facebook'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$providers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$providerId&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adicionar um switch case num bloco de código que era só retornar um array não parece engenharia demais? Sempre que você ver algo extremamente complexo, ou ficando grande, tente refatorar pra ficar o mais simples possível.&lt;/p&gt;

&lt;p&gt;Gostou desse post? Clica no coraçãozinho e me siga nas redes sociais!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>php</category>
      <category>braziliandevs</category>
    </item>
    <item>
      <title>10 Best Productive Tools for Web Developer.</title>
      <author>Muthu Annamalai Venkatachalam</author>
      <pubDate>Wed, 17 Nov 2021 12:01:12 +0000</pubDate>
      <link>https://dev.to/muthuannamalai12/10-best-productive-tools-for-web-developer-b0n</link>
      <guid>https://dev.to/muthuannamalai12/10-best-productive-tools-for-web-developer-b0n</guid>
      <description>&lt;p&gt;It takes time to build an appealing and functional website. Web developers are dedicated to delivering fast, reliable, and high-quality websites. Thus, to improve our productivity, we need tools that help us provide the best quality software and make our lives easier at the same time.&lt;/p&gt;

&lt;p&gt;In this article, we will discuss tools that can be used to improve our productivity and manage some of the challenges we face in web development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-animista"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://animista.net/"&gt;Animista&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Animista is a great tool for creating custom CSS animations with various effects. Customize any animation in their collection, including a background, exit, text, etc., with their diverse effects. Once you have done that, you will be able to find the code to create the animation. Then you can integrate it into your website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JDGJAVZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629193933591/JxrL-Uy9o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JDGJAVZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629193933591/JxrL-Uy9o.png" alt="Animista.png" width="880" height="436"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-responsinator"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.responsinator.com/"&gt;Responsinator&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Responsinator is easy to use and free. The tool shows you the most popular screen sizes and shapes for your webpage when you enter the URL of your page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pGWk4GiR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629189828520/KPmtcbfCp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pGWk4GiR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629189828520/KPmtcbfCp.png" alt="Responsinator.png" width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-extractcss"&gt;
  &lt;/a&gt;
  3. &lt;a href="http://extractcss.com/"&gt;ExtractCSS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;By using this tool, you can extract elements' id, class, and inline styles from an HTML document and output them as CSS stylesheets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4fEFtrwp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630429490994/MuJKcwnFIS.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4fEFtrwp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630429490994/MuJKcwnFIS.jpeg" alt="extract-css.jpg" width="580" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-meta-tags"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://metatags.io/"&gt;Meta Tags&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Meta Tag is a tool for debugging and generating meta tags for any website. If you use Meta Tags, you can edit and experiment with your content, then preview the way it appears on Google, Facebook, Twitter, and more!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ph3OTiv5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629193375014/0Q-8X-AkM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ph3OTiv5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629193375014/0Q-8X-AkM.png" alt="meta-tags.png" width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-whatruns"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.whatruns.com/"&gt;WhatRuns&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;With this tool, you can check out other sites' themes, plugins, and server information. WhatRuns is compatible with Chrome and Firefox.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IuOoW3_Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629193326745/OWYB8d91S.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IuOoW3_Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629193326745/OWYB8d91S.png" alt="social.png" width="880" height="469"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-grabient"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://www.grabient.com/"&gt;Grabient&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;For creating linear gradients for your website, Grabient offers an easy-to-use UI. Choose your color and adjust the angles as necessary. After you have the desired gradient, you can apply the gradient CSS to your webpage.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CoaetMTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629190137917/gVCYRBLSd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CoaetMTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629190137917/gVCYRBLSd.png" alt="Grabient.png" width="880" height="434"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-unminify"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://unminify.com/"&gt;Unminify&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It is a Free tool to unminify (unpack, deobfuscate) JavaScript, CSS, HTML, XML, and JSON code, making it readable and pretty.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4H03wuo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629193251347/QULslCDEA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4H03wuo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629193251347/QULslCDEA.png" alt="1.png" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-google-devtools-device-mode"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://developer.chrome.com/docs/devtools/device-mode/"&gt;Google DevTools Device Mode&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;For developers, Google DevTools Device Mode provides an easy way to simulate mobile devices within the Chrome browser. Using the emulator, you can simulate device inputs such as touch, geolocation, and orientation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3hLV54ns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630429626472/DxZ3KT4tE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3hLV54ns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630429626472/DxZ3KT4tE.png" alt="chrome dev tools.png" width="880" height="713"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-browserhacks"&gt;
  &lt;/a&gt;
  9. &lt;a href="http://browserhacks.com/"&gt;Browserhacks&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Browserhacks contains a collection of browser-specific CSS and JavaScript hacks to help you resolve weird and complex issues on your website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--40iuexv7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629190673089/R3J0dD6HFH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--40iuexv7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629190673089/R3J0dD6HFH.png" alt="Browserhacks.png" width="880" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-browser-stack"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://www.browserstack.com/"&gt;Browser Stack&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Browser Stack is one of the top testing tools on the market, offering a full range of feature sets. More than 1,000 mobile and desktop browsers are available for testing with this paid tool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rOLFwkq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629193518848/0RWDW0ykG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rOLFwkq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629193518848/0RWDW0ykG.png" alt="Browser-Stack.png" width="880" height="421"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can now extend your support by buying me a Coffee.😊👇&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/muthuannamalai"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee" width="545" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>React.js - What is State ?</title>
      <author>The Nerdy Dev</author>
      <pubDate>Wed, 17 Nov 2021 11:57:06 +0000</pubDate>
      <link>https://dev.to/thenerdydev/reactjs-what-is-state--9b7</link>
      <guid>https://dev.to/thenerdydev/reactjs-what-is-state--9b7</guid>
      <description>&lt;p&gt;Hey guys 👋🏻,&lt;br&gt;
In this post, let us cover an introduction to State in React.js.&lt;/p&gt;

&lt;p&gt;For this post we will understand&lt;br&gt;
✔What is State in React ?&lt;br&gt;
✔ Example for creating State in React.&lt;br&gt;
✔ Accessing the State&lt;br&gt;
✔ Using setState and understanding its pitfall.&lt;br&gt;
✔ Using setState with callback to resolve the pitfall.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r_GJOTfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxogniwdxp9s31063jvq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r_GJOTfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxogniwdxp9s31063jvq.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction-to-state"&gt;
  &lt;/a&gt;
  Introduction to State
&lt;/h2&gt;

&lt;p&gt;Every component manages its own state. With the introduction of React Hooks, you can also use state in functional components. But in this article, we will discuss about state in class components. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-for-creating-state-"&gt;
  &lt;/a&gt;
  Example for creating state :
&lt;/h2&gt;

&lt;p&gt;We define a &lt;code&gt;state&lt;/code&gt; property inside the &lt;code&gt;constructor&lt;/code&gt; function. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2cqZcD3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pvxzf6c7l6m8d3vj162r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2cqZcD3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pvxzf6c7l6m8d3vj162r.png" alt="Image description" width="880" height="696"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-access-the-state"&gt;
  &lt;/a&gt;
  To access the state
&lt;/h2&gt;

&lt;p&gt;To access the &lt;strong&gt;counter&lt;/strong&gt; property defined in the state, we can access it in our JSX template by saying &lt;br&gt;
&lt;code&gt;this.state.counter&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2oyD7On--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vue8sajrb2y1tmikvgpt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2oyD7On--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vue8sajrb2y1tmikvgpt.png" alt="Image description" width="880" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-mutate-the-state-directly-use-raw-setstate-endraw-"&gt;
  &lt;/a&gt;
  DON'T MUTATE THE STATE DIRECTLY, use &lt;code&gt;setState&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BnDBOMuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kht3z3og6s9mycbpxo6d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BnDBOMuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kht3z3og6s9mycbpxo6d.png" alt="Image description" width="880" height="428"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-there-can-be-a-problem-consider-this-"&gt;
  &lt;/a&gt;
  But there can be a problem, consider this ...
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ScvLas2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t1lqb2j6oosdsi5tk7mo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ScvLas2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t1lqb2j6oosdsi5tk7mo.png" alt="Image description" width="880" height="394"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;setState&lt;/code&gt; does not always immediately update the component. It may batch or defer the update until later. Both the &lt;code&gt;setState&lt;/code&gt; calls are enqueued when the value of counter is 0 thus causing the problem. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-solve-the-above-problem"&gt;
  &lt;/a&gt;
  Let's solve the above problem.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3C9huOBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgqd3812qxpg28l8hnup.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3C9huOBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgqd3812qxpg28l8hnup.png" alt="Image description" width="880" height="394"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use &lt;code&gt;setState&lt;/code&gt; with callback because it is guaranteed to fire after the update has been applied. So first &lt;code&gt;counter&lt;/code&gt; gets incremented by 1 by first &lt;code&gt;setState&lt;/code&gt; call, once it is done, the &lt;code&gt;counter&lt;/code&gt; is then incremented to 2. This update is done in a synchronous manner. &lt;/p&gt;

&lt;p&gt;So this is it for this article. Thanks for reading.&lt;br&gt;
&lt;strong&gt;Don't forget to leave a like if you loved the article. Also share it with your friends and colleagues.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" alt="Alt Text" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>UIHUT2.0 launched on Product Hunt!! Already #1- Support Us🚀</title>
      <author>Hamid Chowdhury</author>
      <pubDate>Wed, 17 Nov 2021 11:53:01 +0000</pubDate>
      <link>https://dev.to/ahamidchowdhury/uihut20-launched-on-product-hunt-already-1-support-us-39hm</link>
      <guid>https://dev.to/ahamidchowdhury/uihut20-launched-on-product-hunt-already-1-support-us-39hm</guid>
      <description>&lt;p&gt;Hey Dev's,&lt;br&gt;
We are announcing that &lt;a href="https://www.uihut.com/"&gt;UIHUT 2.0&lt;/a&gt; is live on the &lt;a href="https://www.producthunt.com/posts/uihut-2-0"&gt;product hunt&lt;/a&gt; community 🥳🥳🥳&lt;/p&gt;

&lt;p&gt;Download thousands of free &amp;amp; premium web design, illustration, bootstrap template, flutter app, icon, 3d illustration, and graphic assets for your UI, UX design project&lt;br&gt;
🌟🌟🌟 Added Design Resources&lt;/p&gt;

&lt;p&gt;❤️ 2000+ Web Templates &amp;amp; Blocks (Figma, Sketch, XD) - ( New 1000+ )&lt;br&gt;
❤️ 1000+ Mobile App UI Kit (Figma, Sketch, XD) - ( New 500+ )&lt;br&gt;
❤️ 1000+ Web App UI Kit (Figma, Sketch, XD) - ( New 900+ )&lt;br&gt;
❤️ 2500+ Illustrations Packs (Figma, Sketch, XD) - ( New 300+ )&lt;br&gt;
❤️ 9000+ Icons (SVG, PNG) - ( New 1000+ )&lt;br&gt;
❤️ 100+ 3D Assets - ( New 100+ )&lt;/p&gt;

&lt;p&gt;Please show your support on ProductHunt ❤️&lt;/p&gt;

</description>
      <category>support</category>
      <category>design</category>
      <category>webdev</category>
    </item>
    <item>
      <title>AI bot that could answer your questions </title>
      <author>Yash Makan</author>
      <pubDate>Wed, 17 Nov 2021 11:44:54 +0000</pubDate>
      <link>https://dev.to/yash_makan/ai-bot-that-could-answer-any-questions-asked-gmn</link>
      <guid>https://dev.to/yash_makan/ai-bot-that-could-answer-any-questions-asked-gmn</guid>
      <description>&lt;p&gt;Hi, I am Yash Makan and am back with another cool episode. Today as I was reading my school textbooks a thought came to my mind that wouldn't that be cool if python program can learn all the questions from my textbook. So in today's blog, we are developing a question answering bot. What this means is that you can feed this bot some data and ask questions from the textbook and the bot will give answers to each question pretty precisely.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h1bqQb1w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/3ogwG2KguRnvcg88KY/giphy.gif%3Fcid%3Decf05e4716o3383s63wehn2lu8bgo4z19ikmpml3ololdsuo%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h1bqQb1w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/3ogwG2KguRnvcg88KY/giphy.gif%3Fcid%3Decf05e4716o3383s63wehn2lu8bgo4z19ikmpml3ololdsuo%26rid%3Dgiphy.gif%26ct%3Dg" alt="answer the questions" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Here we will use a library known as &lt;a href="https://pypi.org/project/transformers/"&gt;transformers&lt;/a&gt;. This library is made by &lt;code&gt;huggingface&lt;/code&gt; and has a lot of models available for different tasks. This library is my favourite and you should check other models out as well. Each model will have a tokenizer which will be in charge of preparing the inputs for a model. This means that whenever you are generating the output you must pass the model and tokenizer. There is also an easy way which is using &lt;code&gt;pipeline()&lt;/code&gt;.  These pipelines are objects that abstract most of the complex code from the library. In this tutorial, we are using the pipeline. For example, in this blog, we are using the &lt;code&gt;question-answering&lt;/code&gt; pipeline. This will clear once we code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;pip install transformers&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-start-small"&gt;
  &lt;/a&gt;
  Let's Start Small
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--spJkDoDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53b0b5z4frqusv78dyxv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--spJkDoDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53b0b5z4frqusv78dyxv.png" alt="source code" width="880" height="452"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code is pretty straightforward. We are first importing pipeline from transformers. Then we are initializing the question_answering pipeline. After that, we input the question and get the result by passing the question and context in the question_answering pipeline. Here the context is the paragraph or the initial text from which the bot finds the answers. At last, the result is printed.&lt;/p&gt;

&lt;p&gt;You see the more you provide the context, the better and widely the bot will return the result.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-else"&gt;
  &lt;/a&gt;
  what else? 🧑🏼
&lt;/h2&gt;

&lt;p&gt;So you see the power with just a few lines of code we achieved a bot that can learn stuff very easily, more accurately and a lot faster than us. But you must be thinking about what can you do to make this better. And the answer is to provide more context. Here are some ideas for this project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scrape &lt;a href="https://pypi.org/project/wikipedia/"&gt;Wikipedia Articles&lt;/a&gt; and feed the data in the script. For example, scrape all the links related to history from Wikipedia(as much as you can) and then scrape the text from each page and put it together. This will create a bot that will know a lot about history I mean a lot...&lt;/li&gt;
&lt;li&gt;Are you a college student? If yes then you can feed your cs book &lt;a href="https://pypi.org/project/pdftotext/"&gt;as pdf&lt;/a&gt; in the script and ask questions. The program will be able to answer your questions. 👨🏼‍🎓&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So you see it's that easy to make a question answering bot. I really hope that you liked this post. If yes then do hit the like button and don't forget to bookmark the post as well. I hope that this post is worth sharing with everyone. If you have any doubts about anything to add then you are welcome to add the message in the discussion below. Will meet with you guys next time till then b-bye!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-articles-by-author"&gt;
  &lt;/a&gt;
  More Articles by Author
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/yash_makan/generate-your-own-favourite-tv-episode-using-python-1pb3"&gt;Generate your own favourite TV episode using python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#my-socials"&gt;
  &lt;/a&gt;
  My Socials
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Yash_Makan"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>machinelearning</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My Experience as a Speaker in Angular-Up, Tel Aviv 🎤 &amp; Excursion to Jerusalem 🕍 [Vlog]</title>
      <author>Eleftheria Batsou</author>
      <pubDate>Wed, 17 Nov 2021 11:36:28 +0000</pubDate>
      <link>https://dev.to/eleftheriabatsou/my-experience-as-a-speaker-in-angular-up-tel-aviv-excursion-to-jerusalem-vlog-1iho</link>
      <guid>https://dev.to/eleftheriabatsou/my-experience-as-a-speaker-in-angular-up-tel-aviv-excursion-to-jerusalem-vlog-1iho</guid>
      <description>&lt;p&gt;&lt;em&gt;Running to catch my flight 🏃‍♀️, speaking in a conference, exploring new places, going through security checks 😨&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hello beautiful people, in this article I’ll describe my last 4-5 days traveling in Israel and attending as a speaker &lt;a href="https://www.angular-up.com/"&gt;Angular-Up&lt;/a&gt;, a tech conference focusing on Angular. While we progress I'll share what I did (tech and non-tech wise) as well as some new experiences.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let the journey begin...&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#content"&gt;
  &lt;/a&gt;
  Content
&lt;/h1&gt;

&lt;h5&gt;
  &lt;a href="#%E2%9C%94day-0-saturday"&gt;
  &lt;/a&gt;
  ✔&lt;a href="#Day0"&gt;Day 0 - Saturday 🏡&lt;/a&gt;
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#%E2%9C%94day-1-greece-to-israel-%E2%9C%88"&gt;
  &lt;/a&gt;
  ✔&lt;a href="#Day1"&gt;Day 1 - Greece to Israel ✈&lt;/a&gt;
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#%E2%9C%94day-2-tel-aviv-conference-angular-up"&gt;
  &lt;/a&gt;
  ✔&lt;a href="#Day2"&gt;Day 2: Tel Aviv, Conference: Angular Up 💻🎤&lt;/a&gt;
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#%E2%9C%94day-3-excursion-to-jerusalem"&gt;
  &lt;/a&gt;
  ✔&lt;a href="#Day3"&gt;Day 3: Excursion to Jerusalem 🕍&lt;/a&gt;
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#%E2%9C%94day-4-returning-flight-tel-aviv-to-greece"&gt;
  &lt;/a&gt;
  ✔&lt;a href="#Day4"&gt;Day 4: Returning flight, Tel Aviv to Greece 🛄&lt;/a&gt;
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#%E2%9C%94conclusion-and-future-plans"&gt;
  &lt;/a&gt;
  ✔&lt;a href="#conclusion"&gt;Conclusion and future plans 🔮&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;P.S. If you are not feeling like reading, watch the &lt;a href="https://youtu.be/_D7L5WeZ6A8"&gt;vlog&lt;/a&gt; 😉.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=_D7L5WeZ6A8"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mp3GW9nx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/_D7L5WeZ6A8/0.jpg" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-0-saturday"&gt;
  &lt;/a&gt;
  Day 0 - Saturday 🏡
&lt;/h2&gt;

&lt;p&gt;On Saturday I was in my hometown preparing for the upcoming trip. The previous day I had done a PCR test (although I'm double vaccinated 💉 it was required by Israel's regulations), so I was simply waiting for the negative results. That morning I went to exchange some money from Euro to Shekel as it would be easier for my transactions... and by night, I had the negative results from the PCR test and my suitcase done. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-1-greece-to-israel-%E2%9C%88"&gt;
  &lt;/a&gt;
  Day 1 - Greece to Israel ✈
&lt;/h2&gt;

&lt;p&gt;The next day my flight was at 7.30AM, guess what time I went to the airport?!  5.30AM. I had a feeling that I was missing something from my papers. To give you some context, there is a lot of bureaucracy to flight to Israel. A lot of papers need to be done. Thankfully, for these papers, I had the help of the organizers. &lt;/p&gt;

&lt;p&gt;Anyway, I went for the check-in, and they told me I was missing a paper, I said to them "that's impossible I have double-checked everything", they insisted that I was missing one of the papers...so they wouldn't allow me to check-in. A local resident (from Israel), came to help me as I started to panic. She told me that a paper should have been sent to me automatically but in my case, it hadn't. After that, I was trying to find the paper or to re-do the procedure to take it. I literally needed more than 90min to find it... so it was time for the airplane to depart and I hadn't even gone through the security check... &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I was panicking... I was about to quit.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I run with my laptop open to the check-in to present the paper as I didn't even have the time to shut it down and pass the paper on my phone... They accepted the paper and I started running! 🏃‍♀️ &lt;/p&gt;

&lt;p&gt;I finally caught my flight. I was now relieved and even sitting in business class for the first time!&lt;/p&gt;

&lt;p&gt;As soon as I reached Tel Aviv's airport I had to do another PCR test inside the airport. Although there were many passengers the procedure was quick.&lt;/p&gt;

&lt;p&gt;After the test, I took a cab and arrived at the hotel. Now, this is another story, a story I'm not proud off 😅, I couldn't find the entrance of the hotel... It was a block of buildings and all them had the same address, so I had no idea how I was supposed to find the entrance of my hotel... Long story short, after 30min walking with my suitcase up and down, I found it.&lt;/p&gt;

&lt;p&gt;The receptionist was very friendly and answered all my questions. That afternoon I visited the mall to buy a SIM card, I walked a bit in the city, arrived back at the hotel, worked for a couple of hours, refreshed myself and went to sleep.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FoouJmpf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637142404393/9IZIFLGaH.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FoouJmpf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637142404393/9IZIFLGaH.jpeg" alt="EleftheriaAtPlayHotel.jpg" width="880" height="1173"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-2-tel-aviv-conference-angular-up"&gt;
  &lt;/a&gt;
  Day 2: Tel Aviv, Conference: Angular Up 💻🎤
&lt;/h2&gt;

&lt;p&gt;The next morning I woke up early, before going to the conference I worked for a couple of hours, eat breakfast and hit the Tel Aviv streets! 😎&lt;/p&gt;

&lt;p&gt;I reached the conference venue at 9.30AM. Everything was very well organized. I met the main organizers, Nur and Assaph from the &lt;a href="https://www.angular-up.com/about-eventhandler/"&gt;EventHandler&lt;/a&gt; and many awesome &lt;a href="https://www.angular-up.com/speakers/"&gt;speakers&lt;/a&gt; from Israel or abroad. I had lovely chats with them, we shared experiences about tech and life. During the lunch break, I took the opportunity to walk around the city, see a few sightseeing and return back to the venue. In the afternoon, there was a closing ceremony with gifts for the participants of the conference. As soon as the ceremony finished, one of the organizers accompanied me to the hospital as I had to make another PCR test (for my returning flight). During the evening the organizers and the speakers had a lovely dinner and cocktails at a beautiful outdoor space. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ejnrQ3G2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637143619817/pOHPE6rZy.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ejnrQ3G2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637143619817/pOHPE6rZy.jpeg" alt="IMG_20211108_182844_1.jpg" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-3-excursion-to-jerusalem"&gt;
  &lt;/a&gt;
  Day 3: Excursion to Jerusalem 🕍
&lt;/h2&gt;

&lt;p&gt;The next day one of the organizers and a few of the speakers (including myself!) went on a private tour in Jerusalem. I don't want to write to much about it as I simply would like to encourage you all to visit that place. It doesn't matter where you're coming from, your culture, or your religion; there is something for everyone. Just wear comfortable shoes and prepare your camera!  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9crEunZh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637143659134/h3IM-kNbQ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9crEunZh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637143659134/h3IM-kNbQ.jpeg" alt="IMG_20211109_165428.jpg" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-4-returning-flight-tel-aviv-to-greece"&gt;
  &lt;/a&gt;
  Day 4: Returning flight, Tel Aviv to Greece 🛄
&lt;/h2&gt;

&lt;p&gt;That was my last day in Tel Aviv. My flight was at 10.30AM, I arrived at the airport at 7.30AM, yes, 3h earlier and trust me, I needed the whole 3h even if I had a fast-track ticket (the advantages of business class, thank you Eventhandler 🥰). The security check lasted hours... they searched everything in an incredibly detailed way... and they were asking weird questions in the passport check... 🙄&lt;/p&gt;

&lt;p&gt;Usually, I like to stroll around the duty-free shops, but this time I didn't have time for that.&lt;/p&gt;

&lt;p&gt;I boarded the plane, I had a nice flight. I returned back home, rested for a bit and then worked until late evening.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GbsfWT9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637146569182/AEbZ7Rvsr.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GbsfWT9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637146569182/AEbZ7Rvsr.jpeg" alt="IMG_20211109_165939.jpg" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-and-future-plans"&gt;
  &lt;/a&gt;
  Conclusion and future plans 🔮
&lt;/h2&gt;

&lt;p&gt;I had a lovely time at the conference, meeting new people and exchanging ideas! I'm looking forward to traveling more and gaining new knowledge on a technical and personal level. I believe these two are connected. When we grow in one area it's easier to grow in the other one too.&lt;/p&gt;

&lt;p&gt;If everything goes according to the plan, you'll see more vlogs and similar articles in the upcoming weeks!&lt;/p&gt;

&lt;p&gt;Where would you like to travel? At which conference would you love to go?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Vlog ⬇&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=_D7L5WeZ6A8"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mp3GW9nx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/_D7L5WeZ6A8/0.jpg" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;👋Hello, I'm Eleftheria, Community Manager at &lt;strong&gt;Hashnode&lt;/strong&gt;, developer, public speaker, and chocolate lover.&lt;/p&gt;

&lt;p&gt;🥰If you liked this post please share.&lt;/p&gt;

&lt;p&gt;🍩Would you care about buying me a coffee? You can do it &lt;a href="https://www.paypal.com/paypalme/eleftheriabatsou"&gt;here&lt;/a&gt; but If you can't that's ok too!&lt;/p&gt;




&lt;p&gt;🙏It would be nice to subscribe to my &lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; channel. It’s free and it helps to create more content.&lt;/p&gt;

&lt;p&gt;🌈&lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; | &lt;a href="https://codepen.io/EleftheriaBatsou"&gt;Codepen&lt;/a&gt; | &lt;a href="https://github.com/EleftheriaBatsou"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/BatsouElef"&gt;Twitter&lt;/a&gt; | &lt;a href="http://eleftheriabatsou.com/"&gt;Site&lt;/a&gt; | &lt;a href="https://www.instagram.com/elef_in_tech"&gt;Instagram&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/eleftheriabatsou/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>programming</category>
      <category>conference</category>
      <category>publicspeaking</category>
    </item>
    <item>
      <title>My first article at freeCodeCamp 🎉</title>
      <author>Gourav Khunger</author>
      <pubDate>Wed, 17 Nov 2021 11:29:01 +0000</pubDate>
      <link>https://dev.to/gouravkhunger/my-first-article-at-freecodecamp-4o0f</link>
      <guid>https://dev.to/gouravkhunger/my-first-article-at-freecodecamp-4o0f</guid>
      <description>&lt;p&gt;Recently I wrote my first ever article for freeCodeCamp. It is an in-depth tutorial on adding swipe animation to an Android view. &lt;/p&gt;

&lt;p&gt;Check it out here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news/add-swipe-animations-to-a-card-view-in-android-app/"&gt;https://www.freecodecamp.org/news/add-swipe-animations-to-a-card-view-in-android-app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What do you think about the article? Let me know in the discussion below 😃&lt;/p&gt;




&lt;p&gt;I usually publish my articles at &lt;a href="https://genicsblog.com"&gt;genicsblog.com&lt;/a&gt; and share them here, if you wanna opt in for my newsletter you can do that on my blog and follow to get notified about new content 😄&lt;/p&gt;

</description>
      <category>android</category>
      <category>animation</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How to implement OAuth2 Login Using (Single Sign-On) Google — Part 1
</title>
      <author>ROHAN KADAM</author>
      <pubDate>Wed, 17 Nov 2021 11:02:04 +0000</pubDate>
      <link>https://dev.to/rohan2596/how-to-implement-oauth2-login-using-single-sign-on-google-part-1-2623</link>
      <guid>https://dev.to/rohan2596/how-to-implement-oauth2-login-using-single-sign-on-google-part-1-2623</guid>
      <description>&lt;h3&gt;
  &lt;a href="#oauth2-google"&gt;
  &lt;/a&gt;
  OAuth2 Google
&lt;/h3&gt;

&lt;p&gt;Hello 👋All, Its &lt;strong&gt;Rohan Kadam😊&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;Today authentication is the backbone of any application we develop. Providing security is of utmost importance for any application. So, to achieve this, today we are going to learn authentication (OAuth2 ) using Google.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tech stack:-&lt;/strong&gt; Java, Spring Boot&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-login-to-httpsconsolecloudgooglecom-using-your-gmail-account"&gt;
  &lt;/a&gt;
  ⚡Step 1:- Login to &lt;a href="https://console.cloud.google.com/"&gt;https://console.cloud.google.com&lt;/a&gt; using your Gmail account.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l-5A_yYN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AdbsCCV35-y_u7M2WukJmCA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l-5A_yYN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AdbsCCV35-y_u7M2WukJmCA.jpeg" alt="Credits For Google Image Search" width="550" height="556"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-create-new-project-for-google-cloud-console"&gt;
  &lt;/a&gt;
  ⚡Step 2:- Create New Project For Google Cloud Console.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mbUE62XE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AykZkJkl_aPBjv03xfoHW6A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mbUE62XE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AykZkJkl_aPBjv03xfoHW6A.png" alt="Google New Project Window" width="880" height="789"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-click-on-api-amp-service-from-google-cloud-console"&gt;
  &lt;/a&gt;
  ⚡Step 3:- Click On API &amp;amp; Service from Google Cloud Console.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j7gSddSC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AXYT9tWwW5y1KxxWpFsQNkA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j7gSddSC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AXYT9tWwW5y1KxxWpFsQNkA.png" alt="API &amp;amp; Service Section" width="452" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-click-on-create-credentials-amp-select-oauth-client-id"&gt;
  &lt;/a&gt;
  ⚡Step 4:- Click on Create Credentials &amp;amp; Select OAuth Client Id.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dF4Sh2cJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AxJJE6LRyoPn-ilKvxYliJQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dF4Sh2cJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AxJJE6LRyoPn-ilKvxYliJQ.png" alt="OAuth Client Id" width="454" height="255"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-on-successful-creation-on-oauth-client-id"&gt;
  &lt;/a&gt;
  ⚡Step 5:- On Successful Creation on Oauth Client Id.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tHj_anbF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/6208/1%2Axoo-3XEcelnDEf7yvTnzEA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tHj_anbF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/6208/1%2Axoo-3XEcelnDEf7yvTnzEA.png" alt="OAuth Client Created" width="880" height="561"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-6-finally-on-successful-creation-you-will-be-able-to-access-the-credentials"&gt;
  &lt;/a&gt;
  ⚡Step 6:- Finally On Successful Creation, you will be able to access the credentials.
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Client Id&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Client Secret&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redirect Uri&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#step-7-we-will-look-into-the-code-for-implementing-oauth-in-the-next-part"&gt;
  &lt;/a&gt;
  ⚡Step 7:- We will look into the Code for implementing OAuth in the next part.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://medium.com/@rohankadam965/how-to-implement-oauth-login-using-google-java-spring-boot-part-2-3bbc02a1d382"&gt;**Google Oauth Login Using Spring Boot Code&lt;/a&gt;**&lt;br&gt;
&lt;a href="https://medium.com/@rohankadam965/how-to-implement-oauth-login-using-google-java-spring-boot-part-2-3bbc02a1d382"&gt;&lt;strong&gt;How to implement OAuth Login using Google &amp;amp;Java(Spring Boot) — Part 2&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  ⚡Conclusion:-
&lt;/h2&gt;

&lt;p&gt;In the article, we tried to answer many questions related to OAuth Login or also called SSO(Single Sign-On) and how to create a setup for the same on google cloud console. Google SSO features are widely been used by many companies such as Medium, Hackerrank and etc.&lt;/p&gt;

&lt;p&gt;Please do share and like if you find the article useful. Follow me on medium &lt;a href="https://dev.toundefined"&gt;Rohan Ravindra Kadam&lt;/a&gt; and on Twitter at &lt;a href="https://twitter.com/rohankadam25"&gt;**rohankadam25&lt;/a&gt;**&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tNroQqiA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/1%2Af9TMjifJVReTlh93qJ845Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tNroQqiA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/1%2Af9TMjifJVReTlh93qJ845Q.png" alt="thank" width="880" height="267"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Do Python One-Liners Make Your Code Faster?</title>
      <author>Naveenkumar M</author>
      <pubDate>Wed, 17 Nov 2021 11:02:03 +0000</pubDate>
      <link>https://dev.to/naveenkumarmd/do-python-one-liners-make-your-code-faster-514f</link>
      <guid>https://dev.to/naveenkumarmd/do-python-one-liners-make-your-code-faster-514f</guid>
      <description>&lt;p&gt;Most Python programmers have a myth that one-liners are the best way of programming and they even think that one-liners make the code faster. Let us check out this thing and analyze how one-liners differ from normal codes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#let-us-consider-some-of-the-five-programs"&gt;
  &lt;/a&gt;
  Let us consider some of the five programs
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Creating an array with zeroes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Selecting the even numbers in a range&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One-liner for if-else statements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Manipulating an array&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Checking palindrome&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We will be using the “time” module to check the time taken to execute the program.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-creating-an-array-with-zeroes"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Creating an array with zeroes&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Let us create a 2-dimensional array of zeroes with a normal iterative method and let’s note the running time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MYLNm959--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A3Nv7G2VUjpYA-tV2vqAbVw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MYLNm959--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A3Nv7G2VUjpYA-tV2vqAbVw.png" alt="" width="840" height="341"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Time taken is: 12.876641988754272&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I have run this program several times and found the maximum value So that we can analyze it easily.&lt;/p&gt;

&lt;p&gt;Let us check the one-liner for doing this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4OeGxQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AaKLpcsMg0KQ3etOMY60FIQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4OeGxQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AaKLpcsMg0KQ3etOMY60FIQ.png" alt="" width="803" height="215"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Time taken is: 4.390255928039551&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-selecting-the-even-numbers-in-a-range"&gt;
  &lt;/a&gt;
  2. Selecting the even numbers in a range
&lt;/h3&gt;

&lt;p&gt;This time I wish to make the time a notable one. So I iterated the loop 99999999 times. The program is quite simple if the number is even I will append it in the array else nothing will happen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9GbJ-4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2Achjhs5jfnCO5FSz9Riy9NQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9GbJ-4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2Achjhs5jfnCO5FSz9Riy9NQ.png" alt="" width="743" height="261"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Time taken is: 21.109660625457764&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One-liner&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wBF8v9qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A2cjLCg_1exkfB5AooTyqyg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wBF8v9qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A2cjLCg_1exkfB5AooTyqyg.png" alt="" width="781" height="167"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Time taken is: 9.88336968421936&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-one-liner-ifelse-with-a-function"&gt;
  &lt;/a&gt;
  3. One liner if-else with a function
&lt;/h3&gt;

&lt;p&gt;Let us find the count of multiples of 3 in a range.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pG63Cq5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AznKS6fM68YSxplTTXsj0sw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pG63Cq5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AznKS6fM68YSxplTTXsj0sw.png" alt="" width="864" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Time taken is: 139.78343963623047&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let us convert the divisibleby3 function and the main function to one-liners to compare the results.You can even convert the divisibleby3 function into a lambda function to make it even complex.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pm6ImR-A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A_W_Wgmkdl1ny35xcgkasCg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pm6ImR-A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A_W_Wgmkdl1ny35xcgkasCg.png" alt="" width="864" height="187"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Time taken is: 56.80164098739624&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-manipulating-an-array"&gt;
  &lt;/a&gt;
  4. Manipulating an array
&lt;/h3&gt;

&lt;p&gt;Let us convert the array of elements to its square values.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CqDguuHw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AZQRIxbKHNuY8Ngc-y3jKeA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CqDguuHw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AZQRIxbKHNuY8Ngc-y3jKeA.png" alt="" width="817" height="184"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Time taken is: 56.80164098739624&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nLDWZggH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AgXZXrD5Ja5Uz1GMs-bIVsg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nLDWZggH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AgXZXrD5Ja5Uz1GMs-bIVsg.png" alt="" width="880" height="88"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Time taken is: 39.76653861999512&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-palindrome-check"&gt;
  &lt;/a&gt;
  5. Palindrome check
&lt;/h3&gt;

&lt;p&gt;This is a function to check whether a number is a palindrome or not.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eMo_zw1e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A0Lu_1ZJfn65xPmxNUZDs9A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eMo_zw1e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A0Lu_1ZJfn65xPmxNUZDs9A.png" alt="" width="867" height="250"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Time taken is: 16.703513860702515&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One liner:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8nnpCs7c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AyBrf2hOJw9LVDs0KlH791A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8nnpCs7c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AyBrf2hOJw9LVDs0KlH791A.png" alt="" width="802" height="146"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Time taken is: 0.16199564933776855&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I’m astonished by the above results.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--78P_ShDa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A_tysjwwkU0t9CWRSH9sPgw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--78P_ShDa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A_tysjwwkU0t9CWRSH9sPgw.png" alt="" width="870" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the above table it is clear that the one liners make the code much faster. It will help you in competitive programming and so on.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
      <category>computerscience</category>
    </item>
  </channel>
</rss>
