<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Como funciona o sistema de inser√ß√£o de dados na BD</title>
      <author>Vinicius Aguiar</author>
      <pubDate>Fri, 28 May 2021 15:32:31 +0000</pubDate>
      <link>https://dev.to/basedosdados/como-funciona-o-sistema-de-insercao-de-dados-na-bd-25dk</link>
      <guid>https://dev.to/basedosdados/como-funciona-o-sistema-de-insercao-de-dados-na-bd-25dk</guid>
      <description>&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Vamos conhecer um pouquinho sobre como funciona a infraestrutura de inser√ß√£o de dados da Base dos Dados e como voc√™ pode melhorar seu portf√≥lio de cientista de dados e/ou desenvolvedor contribuindo com a nossa miss√£o de universalizar o acesso a dados.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-infraestrutura"&gt;
  &lt;/a&gt;
  A Infraestrutura
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pb05ULSa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jldh9w3mafakkiw1vhc1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pb05ULSa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jldh9w3mafakkiw1vhc1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O time de infraestrutura da Base dos Dados √© respons√°vel pelas ferramentas de ingest√£o de dados, que englobam desde o upload de dados at√© a disponibiliza√ß√£o de dados no ambiente de produ√ß√£o; pelo acesso de dados atrav√©s de pacotes em Python e R; e pelo website. Neste cen√°rio o time √© atualmente dividido em v√°rias frentes, tratando da renova√ß√£o do site e da implementa√ß√£o de pesos e contrapesos automatizados.&lt;/p&gt;

&lt;p&gt;Procuramos simplificar e automatizar todos os processos, come√ßando com o &lt;a href="https://basedosdados.github.io/mais/colab_data/"&gt;upload de dados&lt;/a&gt; e inser√ß√£o dos mesmos no &lt;strong&gt;Ambiente de Experimenta√ß√£o&lt;/strong&gt;. Neste ponto o colaborador pode adicionar dados em sua nuvem do Google, limpar e tratar os dados, e ent√£o criar as tabelas locais com a interface de linha de comando desenvolvida pela infra. Por fim, o colaborador pode submeter a base de dados para revis√£o, criando um pull request no &lt;a href="https://github.com/basedosdados/mais/pulls"&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ap√≥s o pull request de revis√£o entra em a√ß√£o o sistema de &lt;strong&gt;Pesos e Contrapesos&lt;/strong&gt;, com o time de dados checando a qualidade dos dados e metadados. Esse ponto √© crucial para manter a qualidade dos dados, um diferencial da BD. O time de infra atua procurando automatizar o m√°ximo poss√≠vel o processo de revis√£o dos dados, realizando a valida√ß√£o de metadados como descri√ß√µes e nomes de colunas; e tipos de dados, como dados chaves prim√°rias.&lt;/p&gt;

&lt;p&gt;Ap√≥s a checagem dos dados, o pull request de inser√ß√£o de dados √© aprovado e os dados entram no &lt;strong&gt;Ambiente de Produ√ß√£o&lt;/strong&gt;. Logo podem ser acessados por uma de nossas ferramentas, como os pacotes em Python e R, ou diretamente pelo BigQuery.&lt;/p&gt;

&lt;p&gt;Paralelamente ao processo de inser√ß√£o de dados, o time de Infra tamb√©m trabalha com a renova√ß√£o do portal, visando oferecer uma interface moderna.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contribuindo-com-dados"&gt;
  &lt;/a&gt;
  Contribuindo com dados
&lt;/h2&gt;

&lt;p&gt;No caminho para se tornar um analista de dados ou desenvolvedor nos encontramos com certas dificuldades de entrada no mercado de trabalho. Por vezes n√£o existe balan√ßo entre estudo e aplica√ß√£o pr√°tica, ou somente a an√°lise de dados de brincadeirinha. Levante a m√£o quem n√£o passou uma √©poca paralisado em bases de dados como o Titanic ou Iris. E apesar dessas bases de dados serem uma boa alternativa para aprender novos m√©todos ou ferramentas, o conhecimento obtido trabalhando com as mesmas n√£o √© transfer√≠vel para o mundo real.&lt;/p&gt;

&lt;p&gt;Uma boa alternativa para lidar com dados reais e melhorar seu portf√≥lio √© ajudar a Base dos Dados com a sua ingest√£o de dados.  No m√≠nimo voc√™ ir√° lidar com a captura de dados, preferencialmente de forma automatizada, a arquitetura de dados, e a limpeza dos mesmos. Tamb√©m vai interagir com ferramentas do dia a dia de um cientista de dados, como interfaces de linha de comando, YAML e BigQuery. A experi√™ncia conquistada pode ser crucial na entrada no mercado de trabalho.&lt;/p&gt;

&lt;p&gt;Descrevemos em detalhes esse processo em &lt;a href="https://basedosdados.github.io/mais/colab_data/"&gt;Colaborando com dados na BD+&lt;/a&gt;. Em resumo o processo √© dividido em quatro partes. Inicialmente voc√™ informa seu interesse para a BD. Ent√£o limpa e trata os dados. Em seguida realiza upload dos dados em seu BigQuery pessoal. E por fim envia os dados para revis√£o.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contribuindo-com-a-infra"&gt;
  &lt;/a&gt;
  Contribuindo com a infra
&lt;/h2&gt;

&lt;p&gt;Ali√°s, outra forma de contribuir e melhorar seu portf√≥lio, mas agora de desenvolvedor, √© colaborando com a infraestrutura da BD.&lt;/p&gt;

&lt;p&gt;A colabora√ß√£o come√ßa conversando conosco, no bate papo da infra ou nas reuni√µes √†s 19h da segunda-feira, ambas nos canais da infra no &lt;a href="https://discord.gg/huKWpsVYx4"&gt;Discord&lt;/a&gt;. Ap√≥s este passo podemos escolher uma feature ou problema para desenvolvimento, isto √©, caso ainda n√£o tenha escolhido algum problema contido nas &lt;a href="https://github.com/basedosdados/mais/issues"&gt;issues&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Como voc√™ pode colaborar? Aqui est√£o algumas ideias:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adicionando novos conjuntos de dados &lt;/li&gt;
&lt;li&gt;Fazendo a revis√£o de submiss√µes de dados&lt;/li&gt;
&lt;li&gt;Aprimorando e criando novas funcionalidades do pacote em Python&lt;/li&gt;
&lt;li&gt;Aprimorando e criando novas funcionalidades do pacote em R&lt;/li&gt;
&lt;li&gt;Criando um pacote em Stata&lt;/li&gt;
&lt;li&gt;Adicionando checagens autom√°ticas de dados&lt;/li&gt;
&lt;li&gt;Adicionando checagens autom√°ticas de metadados&lt;/li&gt;
&lt;li&gt;Desenvolvendo novas features para o site&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;Nosso projeto j√° te ajudou de alguma forma?&lt;/strong&gt; Saiba como nos ajudar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apoia.se/basedosdados"&gt;Apoie o projeto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://basedosdados.github.io/mais/colab_data/"&gt;Seja um(a) colaborador(a) de dados na BD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/basedosdados/mais"&gt;Colabore com nossos pacotes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Compartilhe nas redes sociais!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Texto produzido por &lt;a href="https://github.com/vncsna"&gt;Vinicius&lt;/a&gt; e &lt;a href="https://github.com/fernandascovino"&gt;Fernanda&lt;/a&gt;, com apoio de &lt;a href="https://github.com/d116626"&gt;Diego&lt;/a&gt;, &lt;a href="https://github.com/JoaoCarabetta"&gt;Jo√£o&lt;/a&gt; e &lt;a href="https://github.com/Hellcassius"&gt;Caio&lt;/a&gt; do time de Infra da Base dos Dados üíö&lt;/p&gt;

</description>
      <category>database</category>
      <category>systems</category>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>Unit test your knowledge üí°</title>
      <author>Jean-Michel Fayard üá´üá∑üá©üá™üá¨üáßüá™üá∏üá®üá¥</author>
      <pubDate>Fri, 28 May 2021 15:23:46 +0000</pubDate>
      <link>https://dev.to/jmfayard/unit-test-your-knowledge-13j</link>
      <guid>https://dev.to/jmfayard/unit-test-your-knowledge-13j</guid>
      <description>&lt;p&gt;Next time you have to learn a programming language, or a set of libraries from an ecosystem, put your learning under unit tests. It has 7 amazing advantages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-story"&gt;
  &lt;/a&gt;
  My story
&lt;/h2&gt;

&lt;p&gt;Learning programming things by unit testing them is something I've done three times.&lt;/p&gt;

&lt;p&gt;The first time and the original inspiration for this idea is the Kotlin Koans, a much believed way for Java developers to start learning Kotlin by running failing tests and fixing them one by one.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Kotlin"&gt;
        Kotlin
      &lt;/a&gt; / &lt;a href="https://github.com/Kotlin/kotlin-koans-edu"&gt;
        kotlin-koans-edu
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Kotlin Koans for Educational Plugin and play.kotl.in
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b044da88664180ea9ad36112161507223610b3bd229f10a67e47145edf94a8f5/68747470733a2f2f6a622e67672f6261646765732f6f6666696369616c2d706c61737469632e737667" alt="official JetBrains project"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
kotlin-koans-edu&lt;/h1&gt;
&lt;p&gt;Kotlin Koans are a series of exercises to get you familiar with the Kotlin Syntax.
Each exercise is created as a failing unit test and your job is to make it pass.
You can work with Kotlin Koans in one of the following ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can play with Koans online: &lt;a href="https://play.kotlinlang.org/koans/overview" rel="nofollow"&gt;https://play.kotlinlang.org/koans/overview&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can solve the tasks right inside IntelliJ IDEA or Android Studio by
&lt;a href="https://www.jetbrains.com/help/education/install-edutools-plugin.html?section=IntelliJ%20IDEA" rel="nofollow"&gt;installing the EduTools plugin&lt;/a&gt;
and &lt;a href="https://www.jetbrains.com/help/education/learner-start-guide.html?section=Kotlin%20Koans" rel="nofollow"&gt;choosing Kotlin Koans course&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You don't need this project if you want to solve the tasks. Install the educational plugin or do it online.
This project contains the task content, so if you want to contribute any changes to the existing tasks or new tasks, please submit new pull request.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Kotlin/kotlin-koans-edu"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;Later, I realized that while I had mastered the language, there was behind it a huge eco-system of Java and Kotlin libraries, and I had no structured way of learning them. I was messing up inside my employer's main projects - and its 3 minutes compilation times - with my messed-up first attempts at understanding the library, and that does not count as a structured approach !&lt;/p&gt;

&lt;p&gt;I remembered the experience of learning from the Kotlin Koans and wanted to have something similar. The &lt;code&gt;kotlin-libraries-playgound&lt;/code&gt; project came out of this simple idea, and grew and grew. Today it contains samples for &lt;a href="https://github.com/LouisCAD/kotlin-libraries-playground/tree/main/kotlin-jvm/src/main/kotlin/playground"&gt;Apollo,  CliKt, Kodein DI, Kodein DB, Exposed, Fuel, Hoplite, Klaxon, Konad,  Konf, Kotlin Collections, Kotlin  Faker, Kotlin IO, Kotlinpoet, Kotlin  Statistics, Kotlinx Serialization, Ktor Client, Mordant, Moshi, OkHttp,  OkIO, Picnic, Retrofit, Skrapeit, SqlDelight, Statemachine, ...&lt;/a&gt;, &lt;a href="https://github.com/LouisCAD/kotlin-libraries-playground/tree/main/kotlin-testing/src/test/kotlin/testing"&gt;KoTest, Mockk, Spek, Strikt, Mockito, Junit-Jupiter, ...&lt;/a&gt; ...&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/LouisCAD"&gt;
        LouisCAD
      &lt;/a&gt; / &lt;a href="https://github.com/LouisCAD/kotlin-libraries-playground"&gt;
        kotlin-libraries-playground
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A playground to gain a wider and deeper knowledge of the libraries in the Kotlin ecosystem. Also the official sample for gradle refreshVersions.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Kotlin Libraries Playground&lt;/h1&gt;
&lt;p&gt;A playground to gain a wider and deeper knowledge of the libraries in the Kotlin ecosystem&lt;/p&gt;
&lt;p&gt;Also the official sample for &lt;a href="https://github.com/jmfayard/refreshVersions"&gt;gradle refreshVersions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=VhYERonB8co" title="Gradle refreshVersions" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H0DTZ6s3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/93568735-ddcc9300-f990-11ea-952b-1c9a461f8e14.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;Run all the samples&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;$ ./gradlew :kotlin-jvm:run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run all the tests&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;$ ./gradlew :kotlin-testing:test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test tests called FailingXXX are expected to fail&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/459464/116738577-edb25800-a9f2-11eb-9a63-96805bb59cf4.png"&gt;&lt;img width="522" alt="kotlin-libraries-playground_‚Äì_versions_properties__kotlin-libraries-playground__and_GitHub_Desktop" src="https://res.cloudinary.com/practicaldev/image/fetch/s--TBuvxhYm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/116738577-edb25800-a9f2-11eb-9a63-96805bb59cf4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
‚ù§Ô∏è Contributors welcome! #hacktoberfest&lt;/h2&gt;
&lt;p&gt;We want to collect sample usage of Kotlin libraries, and the more the better!&lt;/p&gt;
&lt;p&gt;You are very welcome to contribute your own library sample.&lt;/p&gt;
&lt;p&gt;==&amp;gt; &lt;a href="https://github.com/LouisCAD/kotlin-libraries-playground/blob/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
ü§îHow do you keep up with all the new stuff?&lt;/h3&gt;
&lt;p&gt;There are &lt;a href="https://dev.to/jmfayard/best-ways-to-learn-kotlin-from-scratch-or-from-java-with-books-or-tutorials-online-or-in-the-ide-52cm" rel="nofollow"&gt;great resources to learn Kotlin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But once you master the language, you are not done just yet.&lt;/p&gt;
&lt;p&gt;You now face another challenging task: become familiar with its ecosystem of libraries.&lt;/p&gt;
&lt;p&gt;With time, you want to both acquire:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a &lt;strong&gt;wider&lt;/strong&gt; knowledge of what good libraries are available in the ecosystem in general&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;deeper&lt;/strong&gt; knowledge of some specific‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/LouisCAD/kotlin-libraries-playground"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;But it was my third attempt that really cemented in my mind this practice.&lt;/p&gt;

&lt;p&gt;This time, I needed to learn a new programming language and its huge ecosystem : Typescript and Node. Again I chose to learn by writing unit tests. You can find my project here:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jmfayard"&gt;
        jmfayard
      &lt;/a&gt; / &lt;a href="https://github.com/jmfayard/node-playground"&gt;
        node-playground
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;Unit-testing my learning of Typescript and Node.js.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://dev.to/jmfayard/unit-test-your-knowledge-13j" rel="nofollow"&gt;https://dev.to/jmfayard/unit-test-your-knowledge-13j&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
What is in?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.chaijs.com/" rel="nofollow"&gt;Chai&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.chaijs.com/api/bdd/" rel="nofollow"&gt;Expect / Should - Chai&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://mochajs.org/" rel="nofollow"&gt;Mocha - the fun, simple, flexible JavaScript test framework&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Libraries&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jsdom/jsdom"&gt;jsdom/jsdom: A JavaScript implementation of various web standards, for use with Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gcanti/fp-ts"&gt;gcanti/fp-ts: Functional programming in TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gcanti.github.io/fp-ts/" rel="nofollow"&gt;Introduction - fp-ts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/pluralize" rel="nofollow"&gt;pluralize  -  This module uses a pre-defined list of rules, applied in order, to singularize or pluralize a given word. There are many cases where this is useful, such as any automation based on user input.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/showdown" rel="nofollow"&gt;showdown  -  Showdown is a Javascript Markdown to HTML converter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/lodash" rel="nofollow"&gt;lodash  -  A modern JavaScript utility library delivering modularity, performance &amp;amp; extras. Exposes many useful methods on JavaScript arrays, objects and other data structures.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://nodejs.org/dist/latest-v14.x/docs/api/index.html" rel="nofollow"&gt;Node.js v14.17.0 Documentation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/dist/latest-v14.x/docs/api/process.html" rel="nofollow"&gt;Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/dist/latest-v14.x/docs/api/http.html" rel="nofollow"&gt;HTTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/dist/latest-v14.x/docs/api/fs.html" rel="nofollow"&gt;File system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/dist/latest-v14.x/docs/api/child_process.html" rel="nofollow"&gt;Child process&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/intro.html" rel="nofollow"&gt;TypeScript: Handbook - The TypeScript Handbook&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/2/narrowing.html" rel="nofollow"&gt;Narrowing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/2/objects.html" rel="nofollow"&gt;Object Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html" rel="nofollow"&gt;Everyday Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/typescript/typescript_arrays.htm" rel="nofollow"&gt;TypeScript - Arrays - Tutorialspoint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jmfayard/node-playground"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;Again I was delighted by the experience and I will try to explain why.&lt;/p&gt;

&lt;p&gt;It starts with a simple mental switch.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-log-verify"&gt;
  &lt;/a&gt;
  Don't log, verify
&lt;/h2&gt;

&lt;p&gt;When you follow the documentation of a programming language or library, you will typically read a piece of code that takes some input and transform it, before printing it to the console.&lt;/p&gt;

&lt;p&gt;If you are like me, &lt;em&gt;reading is not enough&lt;/em&gt;. The tutorial may explain things well, but only you can do the job of understanding it, and that usually require getting your fingers dirty playing with the code.&lt;/p&gt;

&lt;p&gt;Now the issue if you use &lt;code&gt;console.log()&lt;/code&gt; like in the tutorial is that as soon as you have logged the result once, it's gone, you are on the next thing. Whereas if you make a unit test out of it, you have a self-validating piece of code that you can execute over and over.&lt;/p&gt;

&lt;p&gt;So don't stay here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-05-21 15:20:04&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;formattted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MMMM Do YYYY, h:mm:ss a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;formatted&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// May 21st 2021, 3:20:04 pm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do this instead :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;format dates&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-05-21 15:20:04&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MMMM Do YYYY, h:mm:ss a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;May 21st 2021, 3:20:04 pm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#get-started-with-a-pairprogramming-session"&gt;
  &lt;/a&gt;
  Get started with a pair-programming session
&lt;/h2&gt;

&lt;p&gt;I started my node-playground repository by doing a pair-programming session with a friend.&lt;/p&gt;

&lt;p&gt;I highly recommend it since it got for me many questions out of the way:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Can you walk me through this package.json? What do I need to know?&lt;/li&gt;
&lt;li&gt;How do I add a library and its types?&lt;/li&gt;
&lt;li&gt;How do I add and configure typescript?&lt;/li&gt;
&lt;li&gt;I don't understand how imports work, can you explain?&lt;/li&gt;
&lt;li&gt;How do I setup a test runner? (mocha)&lt;/li&gt;
&lt;li&gt;Can you setup the tests in watch mode? (Yes)&lt;/li&gt;
&lt;li&gt;Which library do you recommend for the assertions? (chai)&lt;/li&gt;
&lt;li&gt;Can we write together a simple unit test for a library? (Moment.js)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Configuration gets in the way when you are getting started, so ask a human for help!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-practical-experience-of-writing-the-code-in-the-ide"&gt;
  &lt;/a&gt;
  Get practical experience of writing the code in the IDE
&lt;/h2&gt;

&lt;p&gt;Some learning websites have their own embedded text editors.&lt;/p&gt;

&lt;p&gt;While this has its advantages (zero config), at the end of the day you must develop the skill of writing code in the your IDEA of choice - Visual Studio Code, or Webstorm in my case -. Using this approach will get you plenty of practice.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-feedback"&gt;
  &lt;/a&gt;
  Quick feedback
&lt;/h2&gt;

&lt;p&gt;A big advantage of this approach is that you have a fast feedback loop.&lt;/p&gt;

&lt;p&gt;The quick feedback loop inherent to this practice helps you get in the zone, as defined by Mihaly Csikszentmihalyi&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In positive psychology, a &lt;strong&gt;flow state&lt;/strong&gt;, also known colloquially as being &lt;strong&gt;in&lt;/strong&gt; &lt;strong&gt;the zone&lt;/strong&gt;, is the mental state in which a person performing some activity is fully immersed in a  feeling of energized focus, full involvement, and enjoyment in the  process of the activity. In essence, flow is characterized by the  complete absorption in what one does, and a resulting transformation in  one's sense of time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Flow_(psychology)"&gt;https://en.wikipedia.org/wiki/Flow_(psychology)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You advance slowly but surely, test by step, stone by stone, in reversible steps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#practice-testing-from-day-1"&gt;
  &lt;/a&gt;
  Practice testing from day 1
&lt;/h2&gt;

&lt;p&gt;A credibility issue that junior programmers have - and sadly even non-junior programmers - is that they have little experience with testing. "Getting" testing is an important hallmark on the way to professionalism. &lt;/p&gt;

&lt;p&gt;But is testing hard? &lt;/p&gt;

&lt;p&gt;I think it's important the &lt;a href="https://www.infoq.com/presentations/Simple-Made-Easy/"&gt;distinction from Rich Hickey: Simple is not Easy&lt;/a&gt;. Testing is a simple practice once you get it, but it's not easy in the sense that junior programmers don't have lots of experience with it, if at all. &lt;/p&gt;

&lt;p&gt;But if you practice testing from day 1, it sure won't feel that hard the day you are hired!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-mentor-can-easily-review-your-work"&gt;
  &lt;/a&gt;
  A mentor can easily review your work
&lt;/h2&gt;

&lt;p&gt;Another advantage of having your learning contained in a GitHub repository is that it makes it easy for a mentor to review your work. Add them as collaborator to your project and ask them what they would change in your codebase. Then look at the diff together, it's a great way to start a conversation about what you need to learn next.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keep-your-knowledge-uptodate"&gt;
  &lt;/a&gt;
  Keep your knowledge up-to-date
&lt;/h2&gt;

&lt;p&gt;This one especially applies to unit tests for libraries like in the kotlin-libraries-playground project. Since the code is self-validating, you can update the dependencies and see what has changed and what was broken. Yes, it's work, but it's useful work. It keep your validated knowledge fresh.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-the-repository-for-bug-reports"&gt;
  &lt;/a&gt;
  Use the repository for bug reports
&lt;/h2&gt;

&lt;p&gt;The Kotlin libraries playground has also been very effective for me  to report bugs. When I was facing an issue with an external dependency, I created a new branch and added the minimum amount of code that allows to reproduce the problem. Having reproducing steps helps the maintainer to provide you a fix quicker.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#proof-of-knowledge-for-job-interviews"&gt;
  &lt;/a&gt;
  Proof of knowledge for job interviews
&lt;/h2&gt;

&lt;p&gt;This one is big. You know the traditional dilemma : you want to have your first programming job with $LANGAUGE, but you are getting rejected because you don't have experience in it yet.&lt;/p&gt;

&lt;p&gt;The way out of this non-sense is to &lt;strong&gt;show&lt;/strong&gt; that you have acquired enough knowledge with it. Sure enough, having a public repository that demonstrates your knowledge is a great way to do that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Writing unit tests on what you are currently learning provides for a great developer experience, similar to what professional developers do. With time it becomes a public repository of your validated knowledge, which can stay up-to-date, and is useful for getting feedback, reporting bugs or demonstrating your skills in the context of a job interview.&lt;/p&gt;

&lt;p&gt;It goes hand in hand with the good tip of writing and publishing real projects. Putting out a new project is like assembling a new puzzle. Writing unit tests is all about understanding better what each piece of the puzzle does.&lt;/p&gt;

&lt;p&gt;If you want to contact me, read my standing invitation at &lt;a href="https://jmfayard.dev/contact/"&gt;https://jmfayard.dev/contact/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>career</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Knowledge test</title>
      <author>Eduardo Car√≠sio</author>
      <pubDate>Fri, 28 May 2021 14:56:13 +0000</pubDate>
      <link>https://dev.to/eduardocp/knowledge-test-3kfm</link>
      <guid>https://dev.to/eduardocp/knowledge-test-3kfm</guid>
      <description>&lt;p&gt;I did a knowledge test where I received a link with 3 steps, unfortunately, I stayed stucked at second step.&lt;/p&gt;

&lt;p&gt;The first step ask for to get te middle char of any word.&lt;br&gt;
If the word has a even length, return 2 middle digits otherwise, the middle digit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nf"&gt;GetMiddle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;isEven&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;%&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// I remove 1 digit because de array is 0 index;&lt;/span&gt;
  &lt;span class="c1"&gt;// I always round up for de odd words, even words the division is exact&lt;/span&gt;
  &lt;span class="c1"&gt;// rounding up odd words, i dont need to handle with even/odd on the 1 subtraction&lt;/span&gt;
  &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;middleDigit&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Ceiling&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;middleDigit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;isEven&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, everything is ok.&lt;/p&gt;




&lt;p&gt;The second step asked to me for count the notes of an ATM dispenser just with notes of values: 100, 50 and 20.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Withdrawals&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$260&lt;/li&gt;
&lt;li&gt;$40&lt;/li&gt;
&lt;li&gt;$230&lt;/li&gt;
&lt;li&gt;$250&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Outputs&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;{2, 0, 3}&lt;/li&gt;
&lt;li&gt;{0, 0, 2}&lt;/li&gt;
&lt;li&gt;{1, 1, 4}&lt;/li&gt;
&lt;li&gt;{2, 1, 0}&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="nf"&gt;Withdraw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;note100Result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note100Result&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;remainValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note100Result&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remainValue&lt;/span&gt; &lt;span class="p"&gt;%&lt;/span&gt; &lt;span class="m"&gt;50&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remainValue&lt;/span&gt; &lt;span class="p"&gt;%&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;note100Result&lt;/span&gt;&lt;span class="p"&gt;--;&lt;/span&gt;

    &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;note100Result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note100Result&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="p"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;note100Result&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;note50Result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note50Result&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;remainValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note50Result&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remainValue&lt;/span&gt; &lt;span class="p"&gt;%&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;note50Result&lt;/span&gt;&lt;span class="p"&gt;--;&lt;/span&gt;

    &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;note50Result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note50Result&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="p"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;note50Result&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;note20Result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note20Result&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;note20Result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;The logic is:&lt;/strong&gt; you just can proceed to another note if the remaining value is fully divisible for &lt;em&gt;ANY ONE&lt;/em&gt; of the other notes, otherwise,&lt;br&gt;
you need to subtract 1 note of the current note counter.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Of course, this can be done in other ways, with a loop and Linq as example, but I preferred to do like this to be more explainable.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;As I didn't finish the second step, I even couldn't see the third step :(&lt;/p&gt;




&lt;p&gt;As I said earlier, I stayed stucked at this step. I did this test after a long day of work, so my brain was not okay to do tasks like this.&lt;/p&gt;

&lt;p&gt;My tip for this tests:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do this in a unstressed moment, after take a snap or a good sleep night (if you can choice this moments obviously)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>csharp</category>
    </item>
    <item>
      <title>The Why of TDD</title>
      <author>Chris James</author>
      <pubDate>Fri, 28 May 2021 14:42:37 +0000</pubDate>
      <link>https://dev.to/quii/the-why-of-tdd-3e6f</link>
      <guid>https://dev.to/quii/the-why-of-tdd-3e6f</guid>
      <description>&lt;p&gt;Many people have false starts with test-driven development (TDD). When I discuss it with people I feel many people have some misunderstandings around the method, in particular the motivations behind it.&lt;/p&gt;

&lt;p&gt;I believe if developers have a better understanding of why to use it, they‚Äôll have a better chance of practicing TDD more effectively and get more value out of it.&lt;/p&gt;

&lt;p&gt;This posts explores the reasons for using TDD and offers some guidance as to how to practice it more effectively.&lt;/p&gt;

&lt;p&gt;I was invited to speak about this topic at the GoSG, a meet-up for the Go programming enthusiasts in Singapore. &lt;a href="https://www.youtube.com/watch?v=-VKs3rrSHF8&amp;amp;t=2714s"&gt;You can find the recording on YouTube&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.growing-object-oriented-software.com"&gt;This post quotes Growing Object-Oriented Software Guided by Tests (GOOS)&lt;/a&gt; (written by Steve Freeman and Nat Pryce) extensively as it aligns very closely with how I was taught TDD. I strongly suggest grabbing a copy and giving it a read. Ignore that the examples are in Java, the main lessons from the book are broadly language-agnostic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;If you‚Äôre new to software development, there‚Äôs several knowledge hurdles you need to leap over. The one you‚Äôll be judged on the most is your ability to use the tools in front of you to get stuff working and get it to the customers. How well you do this and how delightful the result can be referred to as &lt;strong&gt;external quality&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once you get proficient at this, the main challenges facing mid-level and above are to do with &lt;strong&gt;internal quality&lt;/strong&gt;. This focuses on your ability to work on and design systems so that the cost of change is reasonable. This is important because if a system is useful, it will have to change over its lifetime.&lt;/p&gt;

&lt;p&gt;When talking to non-technical folk about this, you can use an analogy of the quality of a factory, and its equipment. If parts of your machinery are unreliable or hard to deal with, the factory will begin to grind to a halt. This is also true of software. &lt;strong&gt;If internal quality declines, the ability to affect the external quality of the software will decline too&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;There are a lot of software developers out there who can bash the code out enough to make useful software. A problem in our industry is we‚Äôre often incentivised and praised by our ability to work through ‚Äútickets‚Äù quickly and trying to hit (often arbitrary) deadlines. Frequently though, the internal quality gets neglected, and we hear these stories over and over again:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Why is the estimate for changing the system 3 weeks? It should be 3 days!&lt;/p&gt;

&lt;p&gt;We need to spend a month re-writing the Foobar module.&lt;/p&gt;

&lt;p&gt;I can‚Äôt stand to work on this legacy system again. Please let me move to a different project, or I‚Äôll find somewhere else to work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are fewer developers who can write software that can live for many years without painful re-writes and staggering maintenance costs. The reason simply is, it‚Äôs really hard. It requires effort and study. I‚Äôve been writing software for over 15 years and I still find it hard and feel the need to keep studying and reflecting.&lt;/p&gt;

&lt;p&gt;There are developers and stakeholders who have advanced skills in justifying reasons for not caring about internal quality. They‚Äôll say things like:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The only thing that matters is working software&lt;/p&gt;

&lt;p&gt;What about time to market?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;All&lt;/em&gt; worthwhile systems have to be changed (see &lt;a href="https://en.wikipedia.org/wiki/Lehman's_laws_of_software_evolution"&gt;Lehman‚Äôs laws of software evolution&lt;/a&gt;). &lt;strong&gt;‚ÄúAll that matters is working software‚Äù can‚Äôt be used as an excuse for poor internal quality today when you will have to change the external quality tomorrow.&lt;/strong&gt; People tend to under-estimate the costs of poor internal quality and &lt;em&gt;over-estimate&lt;/em&gt; the cost of keeping internal quality high.&lt;/p&gt;

&lt;p&gt;You need to be thinking about the design of your system because the problem you are solving is different to everyone else‚Äôs. Domain knowledge (or lack-of) has a giant impact on what designs are suitable, so no single blog post can tell you how to design &lt;em&gt;your&lt;/em&gt; system. It‚Äôs your responsibility as an engineer.&lt;/p&gt;

&lt;p&gt;Many developers work in environments which have a real fear around speed of delivery, and you can get tempted in to short-term promises of productivity. A new programming language! &lt;a href="https://dev.to/gypsydave5/why-you-shouldnt-use-a-web-framework-3g24"&gt;A shiny new framework&lt;/a&gt;. Even folder structures in the Go community seem to be endlessly discussed as some kind of silver-bullet to good software. Chasing these things is a distraction and is not equipping you to strengthen your skills at writing software with high internal quality, you‚Äôre just learning &lt;em&gt;another thing&lt;/em&gt; that will be unfashionable in a few years.&lt;/p&gt;

&lt;p&gt;This is why I think TDD is such a valuable method. It gives you a structured way to confront and think about the internal quality of &lt;strong&gt;your&lt;/strong&gt; system. TDD is a skill which can work in any context, &lt;a href="https://twitter.com/quii/status/1396731981698842625"&gt;even on Mars&lt;/a&gt;. It is an excellent tool for training yourself and your team to design better software.&lt;/p&gt;

&lt;p&gt;TDD can be seen as a developer frivolity that slows teams down. This is true when you are first learning it (like any skill) but with practice and training, you‚Äôll find yourself working at a sustainable pace and consistently delivering value. &lt;strong&gt;High internal quality will facilitate improvements to external quality&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/adamluzsi"&gt;Adam Luzsi¬†&lt;/a&gt;points out:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚Ä¶ most people who start to learn TDD, are also in the process of learning software design implicitly through TDD. And this causes the feeling of "this slows me down".&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;High internal quality is not exclusive to practitioners of TDD but if you‚Äôre on the fence about TDD I hope this post encourages you to take another look. Maybe at least make you reflect on your own methods for writing great software.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tdd"&gt;
  &lt;/a&gt;
  What is TDD?
&lt;/h2&gt;

&lt;p&gt;Test-driven development is conceptually simple to follow:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Write a test for a small, desired behaviour&lt;/li&gt;
&lt;li&gt;See it fail&lt;/li&gt;
&lt;li&gt;Write just enough code to make it pass&lt;/li&gt;
&lt;li&gt;Refactor&lt;/li&gt;
&lt;li&gt;Go to 1 for next increment of behaviour&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Yet, there appears to be many developers diverging a lot from what was described by Kent Beck and others.&lt;/p&gt;

&lt;p&gt;This inconsistency makes discussing the merits of TDD difficult because every so often what someone believed to be a typical TDD process seemed to be following a TDD-like process but getting key parts of it wrong.&lt;/p&gt;

&lt;p&gt;Why does this happen? I think tech in general suffers a problem of being extremely faddy and people not really understanding &lt;em&gt;why&lt;/em&gt; they are adopting a particular framework or technique. &lt;strong&gt;If you don‚Äôt understand what TDD is for, you‚Äôre unlikely to practice it effectively.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-why-testdriven-development"&gt;
  &lt;/a&gt;
  So, why test-driven development?
&lt;/h2&gt;

&lt;p&gt;Here are the typical answers you‚Äôll get:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Prevent defects&lt;/li&gt;
&lt;li&gt;Good test coverage&lt;/li&gt;
&lt;li&gt;Confidence to refactor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rightly some will argue:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;These benefits are not unique to writing tests first&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-write-tests-first"&gt;
  &lt;/a&gt;
  Why write tests &lt;strong&gt;first?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;It‚Äôs worth exploring the why of TDD in detail as I believe it helps clarify &lt;strong&gt;how to use the method effectively&lt;/strong&gt;. Many people have false starts with TDD.&lt;/p&gt;

&lt;p&gt;GOOS picks up on this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúWe‚Äôve seen teams that write tests and code at about the same time where the code is a mess and the tests just raise the cost of maintenance. They‚Äôd made a start but hadn‚Äôt yet learned that the trick ‚Ä¶ to let the tests guide development.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#you-have-to-know-what-behaviour-youre-trying-to-build-to-write-a-test"&gt;
  &lt;/a&gt;
  You have to know what behaviour you‚Äôre trying to build to write a test
&lt;/h3&gt;

&lt;p&gt;Developers go too fast, diving in to code and letting their imaginations run wild.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/jocrossick"&gt;Jo Crossick on Twitter&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When I write tests first, it's because I know that I'm itching to write over-complicated, over-ambitious code that is destined to become a hot mess, and tests is the only thing that can hold me back from creating instant technical debt&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A lack of method to the design process can lead to software designed against loose, ill-defined requirements. This design can quickly become a drag on the team‚Äôs productivity. It can confuse developers, baking-in to your system assumptions that are untrue and behaviours that aren‚Äôt actually needed.&lt;/p&gt;

&lt;p&gt;Writing a test first &lt;strong&gt;demands you precisely define, and focus on what you‚Äôre trying to achieve; this is a key part of the design process&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Writing a test first means you have to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;remove any ambiguity, meaning you have to &lt;strong&gt;really understand the behaviour you need&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;cut down the scope to a small piece of useful functionality, &lt;strong&gt;liberating you from having to design the whole system&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rather than having to be somehow clever enough to know all the requirements the system would ever need and committing to a design, instead you design code for behaviour you have precisely defined. You design, for one thing at a time, and you do it properly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-offers-a-fast-and-continuous-feedback-loop-on-your-design"&gt;
  &lt;/a&gt;
  It offers a fast and continuous feedback loop on your design
&lt;/h3&gt;

&lt;p&gt;Writing a test gives you a sense of the design of a particular unit &lt;strong&gt;at the beginning&lt;/strong&gt;. Many developers will dive in, creating types and abstractions for hours on end and only when they plug it all together and run their application do they begin to see the flaws in their design. &lt;strong&gt;Until code is executed and the behaviours observed, the design has had no &lt;em&gt;real&lt;/em&gt; validation&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;With TDD you get feedback at the start and as you iterate through more behaviour you will keep getting guidance from your tests. There is no faster way of getting feedback on your design than by declaring what success looks like at the start.&lt;/p&gt;

&lt;p&gt;You will have a sense of progress as you take small, validated steps toward your goal. If practiced well, you won‚Äôt end up in situations of having to throw hours or days worth of code away.&lt;/p&gt;

&lt;p&gt;Whilst not being unique to &lt;strong&gt;test-first&lt;/strong&gt;, tests reflect your design back at you. If a test is difficult to read or write, it is telling you something. A key skill for practicing TDD well is to &lt;strong&gt;listen to your tests&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-gives-you-momentum-and-by-focusing-on-internal-quality-will-help-you-continue-to-change-your-software-cheaply"&gt;
  &lt;/a&gt;
  It gives you momentum and by focusing on internal quality will help you continue to change your software cheaply.
&lt;/h3&gt;

&lt;p&gt;Many developers ‚Äúspin many plates‚Äù, darting from one part of the code to the other, changing different bits of code and in general working in a fairly chaotic way. This way of working makes life difficult and more prone to error and re-work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Writing a test first acts as a stabiliser&lt;/strong&gt;. This sets you a clear, short-term objective and lets you focus on doing one thing well, rather than worrying about competing concerns.&lt;/p&gt;

&lt;p&gt;The refactoring step improves your chances of maintaining good internal quality which is &lt;em&gt;essential&lt;/em&gt; for a system to be malleable. We‚Äôve all worked on systems where the internal quality is terrible and how frustrating it is how difficult it can be to make a seemingly simple change.&lt;/p&gt;

&lt;p&gt;The iterative nature of TDD means you keep working on achieving one small improvement at a time.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#it-does-not-slow-you-down"&gt;
  &lt;/a&gt;
  It does not slow you down
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.geepawhill.org/2018/04/14/tdd-the-lump-of-coding-fallacy/"&gt;https://www.geepawhill.org/2018/04/14/tdd-the-lump-of-coding-fallacy/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GeePaw has an excellent video which dispels the idea that TDD slows you down. In fact, it's the opposite when you forget about the silly idea that software development's bottleneck is simply typing code. &lt;strong&gt;Thinking is the bottleneck&lt;/strong&gt;, we work in a knowledge-based field and TDD offers us a way to think with clarity.&lt;/p&gt;

&lt;p&gt;It‚Äôs true that when you first practice TDD you will go slower than before. In cases where maybe your design skills aren‚Äôt as strong as you think, TDD may feel frustrating, but you can use it as a tool to improve your ability to write modular code.&lt;/p&gt;

&lt;p&gt;It‚Äôs a skill that has to be learned and practiced but with time you‚Äôll find yourself working quicker, confidently and with more focus.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-qualities-required-to-make-code-unittestable-are-good-qualities-in-themselves"&gt;
  &lt;/a&gt;
  The qualities required to make code unit-testable are good qualities in themselves
&lt;/h3&gt;

&lt;p&gt;GOOS:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚Äú‚Ä¶the effort of writing a test first also gives us rapid feedback about the quality of our design ideas‚Äîthat making code accessible for testing often drives it towards being cleaner and more modular.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Modular code is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to repurpose and re-use within different contexts&lt;/li&gt;
&lt;li&gt;Focused&lt;/li&gt;
&lt;li&gt;Simple to test&lt;/li&gt;
&lt;li&gt;Small, with clear responsibility&lt;/li&gt;
&lt;li&gt;Easy to understand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many developers have a healthy skepticism to premature abstraction, but it can go too far.&lt;/p&gt;

&lt;p&gt;It is not good to have that &lt;em&gt;what&lt;/em&gt; and the &lt;em&gt;how&lt;/em&gt; of code mixed up within a function featuring 100s of lines of code, with mixed up and complected concerns. Rich Hickey covers the topic of easiness vs simplicity in his incredible talk &lt;a href="https://www.infoq.com/presentations/Simple-Made-Easy/"&gt;Simple Made Easy&lt;/a&gt;. Having all your code in one method is ‚Äúeasy‚Äù, but it is not simple.&lt;/p&gt;

&lt;p&gt;Systems built up of modular, &lt;em&gt;cohesive&lt;/em&gt; units are simpler to understand and easier to change.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#its-easier-to-write-good-tests-beforehand"&gt;
  &lt;/a&gt;
  It‚Äôs easier to write good tests beforehand
&lt;/h3&gt;

&lt;p&gt;Writing tests after the code is written is challenging to get right. You can end up with tests that may not fail when you want them to, have cryptic error messages or simply not have good coverage. You‚Äôll also fall in to the trap of testing your design, rather than the behaviour (more on this later).&lt;/p&gt;

&lt;p&gt;Writing tests first and seeing them fail helps you validate their usefulness and helps you focus on testing from the consumer‚Äôs point of view, rather than the person who wrote it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-requires-you-to-constantly-refactor"&gt;
  &lt;/a&gt;
  It requires you to constantly refactor
&lt;/h3&gt;

&lt;p&gt;A key, but often skipped step by novices is the refactoring step. It is far easier and more sustainable to do frequent, small refactors around the code you‚Äôre actually working on throughout the day, rather than leaving it for ‚Äúa refactoring/technical-debt sprint‚Äù.&lt;/p&gt;

&lt;p&gt;Ill-factored code makes the system harder to re-design. Often the &lt;em&gt;act&lt;/em&gt; of refactoring reveals designs. As you consolidate code and DRY things up you start to ‚Äúsee‚Äù abstractions that can simplify matters.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#digression-refactoring-sprints-are-an-absurd-idea-and-point-to-some-real-team-disfunction"&gt;
  &lt;/a&gt;
  Digression: Refactoring sprints are an absurd idea and point to some real team disfunction
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;You want the benefits of increased internal quality &lt;strong&gt;now&lt;/strong&gt;, not in 3 weeks time.&lt;/li&gt;
&lt;li&gt;Everyone knows they are hard to do and frequently fail to give the pay-off you‚Äôd hope for.&lt;/li&gt;
&lt;li&gt;It‚Äôs your job to maintain internal quality because &lt;strong&gt;that‚Äôs what helps you deliver external quality at a reasonable cost&lt;/strong&gt;. Don‚Äôt ask for permission to do your job.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0how-to-use-tdd"&gt;
  &lt;/a&gt;
  ¬†How to use TDD
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#work-iteratively-in-small-positive-steps"&gt;
  &lt;/a&gt;
  Work iteratively, in small positive steps
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Working on a single, small, well-defined thing is simple, and you‚Äôre more likely to succeed. You‚Äôll get fast feedback on whether you‚Äôre going in the right direction.&lt;/li&gt;
&lt;li&gt;Working on many, large, loosely defined things at once is difficult, and you‚Äôre more likely to make mistakes. The feedback loop is slow.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When practicing TDD you should always be thinking about how to reach the vague end-state with specific, achievable steps. If you‚Äôre writing a unit test that you know will take hours of effort to make it pass, you need to rethink your approach.&lt;/p&gt;

&lt;p&gt;It can be challenging to break work down into small steps, and it will also challenge your design skills but working this way means you are more likely to succeed, and you‚Äôll reduce waste.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#when-tdd-feels-right"&gt;
  &lt;/a&gt;
  When TDD feels right
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Constant, small progress throughout the day. Never feels slow, feels deliberate.&lt;/li&gt;
&lt;li&gt;Frequent commits to source control per hour.&lt;/li&gt;
&lt;li&gt;Work feels ‚Äúsafe‚Äù, less chaotic than maybe you‚Äôre used to.&lt;/li&gt;
&lt;li&gt;Mistakes are rarely large. Happy to revert changes if you realise you‚Äôve gone down a wrong path.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#writing-the-test-first"&gt;
  &lt;/a&gt;
  Writing the test first
&lt;/h3&gt;

&lt;p&gt;There‚Äôs a difference between knowing to write a test first and doing it in a way that helps you design your software.&lt;/p&gt;

&lt;p&gt;GOOS:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúWe want each test to be as clear as possible an expression of the behaviour to be performed by the system or object. While writing the test, we ignore the fact that the test won‚Äôt run, or even compile, and just concentrate on its text‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Rather than worrying about &lt;em&gt;how&lt;/em&gt; the code will work at this point, &lt;strong&gt;concentrate on the behaviour, particularly from the user‚Äôs point of view&lt;/strong&gt;. It‚Äôs essential you block out implementation detail from your head at this point in the process because you‚Äôre just trying to nail down exactly &lt;em&gt;what&lt;/em&gt; you want to achieve.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;what and the how are two separate design activities&lt;/strong&gt; which are too often mixed up, which makes coherent decision-making more difficult than it needs to be.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Focus on being precise and limited in scope&lt;/strong&gt;, this will help you uncover assumptions and help you keep focused.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TDD is an iterative approach to development&lt;/strong&gt;. When you are writing your tests you should be mindful of how to keep the work moving with fast feedback loops and small positive steps.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#start-from-the-top-down-for-new-features"&gt;
  &lt;/a&gt;
  Start from the top down for new features
&lt;/h3&gt;

&lt;p&gt;TDD is focused on letting you design for the behaviour you precisely need, iteratively. When starting on a new area you need to identify a key, important behaviour and then aggressively cut scope.&lt;/p&gt;

&lt;p&gt;From there you want to take a ‚Äútop down‚Äù approach, starting with an acceptance test (AT) that exercises the behaviour from the outside. This will act as a north-star for your efforts. All you should be focused on is making that test pass. This test will likely be failing for a while whilst you develop enough code to make it pass.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t2n2TnRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/pxTaYu4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t2n2TnRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/pxTaYu4.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have your AT set up you can then break into the TDD process to drive out enough units to make the AT pass. The trick is to not worry too much about design at this point, just get enough code to make the AT pass because at this point you‚Äôre still learning and exploring the problem.&lt;/p&gt;

&lt;p&gt;Taking this first step is often bigger than you think, setting up web-servers, routing, configuration e.t.c, which is why keeping the scope of the work small is important. We want to make that first positive step on our blank canvas, have it backed by a passing AT so that we can then continue to iterate quickly and safely.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7vRauYFe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/t5y5opw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7vRauYFe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/t5y5opw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you develop, listen to your tests, and they should give you signals to help you push your design in a better direction but again, anchored to the behaviour rather than our imagination.&lt;/p&gt;

&lt;p&gt;Typically, your first ‚Äúunit‚Äù that does the hard work to make the AT pass will grow too big to be comfortable, even for this small amount of behaviour. This is when you can start thinking about how to break the problem down and introduce new collaborators.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zo8WInbW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/UYqd7Cq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zo8WInbW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/UYqd7Cq.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is where test-doubles are very useful because most of the complexity that lives internally within software doesn‚Äôt usually reside in implementation detail, but ‚Äúbetween‚Äù the units and how they interact with each other.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/*
The design "outside the braces" is what often has 
the biggest impact on internal quality
*/

func NewStockCheckHandler(
    stockChecker StockChecker, 
    productStore ProductStore,
) http.Handler {

/* 
implementation detail inside the braces is usually 
low thrills and simple to test
*/

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We can use test-doubles to explore the interactions between our collaborators with a much tighter feedback loop than if we tried to design and develop units isolated and then integrate them later.&lt;/p&gt;

&lt;p&gt;For further iterations we may not need to write a new AT, we can simply add new behaviours to our existing units at a faster pace than the first one. We‚Äôve made our first step, and we‚Äôre confident that we‚Äôre not developing them blindly because the units are integrated with the rest of the system.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#on-tdding-a-design"&gt;
  &lt;/a&gt;
  On ‚ÄúTDD-ing a design‚Äù
&lt;/h4&gt;

&lt;p&gt;Too often people assert that TDD is only compatible with a ‚Äúbottom-up‚Äù approach where you imagine a bunch of abstractions up-front and then you ‚ÄúTDD them‚Äù.&lt;/p&gt;

&lt;p&gt;This is called ‚ÄúTDD-ing a design‚Äù. You‚Äôre not using TDD as a design method, merely a way of writing tests around some code. This often results in classes or functions being overly developed in isolation for extended periods and then only when you try to integrate them into the system and use them you realise the design is wrong.&lt;/p&gt;

&lt;p&gt;This is the point where people declare TDD to be a poor design tool when in practice, they already had a design in their head and just added a very long feedback loop to it, exhaustively testing code and various edge-cases before &lt;em&gt;using it in their actual system&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Remember that TDD demands we start with a test for a desired &lt;em&gt;behaviour,&lt;/em&gt; not a &lt;em&gt;design&lt;/em&gt;. This is very much ‚Äútop down‚Äù development. When done correctly you stop ‚Äúover-designing‚Äù and you write and design the code you actually need.&lt;/p&gt;

&lt;p&gt;By TDD-ing a design you can fall into the trap of tests being tightly coupled to implementation rather than behaviour. This becomes extremely problematic when you want to change your implementation detail and your tests will become a burden. &lt;a href="https://quii.dev/The_Tests_Talk"&gt;I talk about this in detail in ‚ÄúThe Tests Talk‚Äù.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#listen-to-your-tests"&gt;
  &lt;/a&gt;
  Listen to your tests
&lt;/h3&gt;

&lt;p&gt;If you follow the TDD process well you should end up with modular, loosely coupled, cohesive units within your system. This journey is rarely smooth. As requirements and knowledge changes your design will have to evolve with it.&lt;/p&gt;

&lt;p&gt;Tests can offer you a &lt;em&gt;focused lens&lt;/em&gt; into areas in your system where you can view the impact of your design isolated, which makes it far easier to appraise. &lt;strong&gt;Tests reflect your design back at you&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here are some common test smells to look out for. Commit them to memory, and you‚Äôll be able to raise some interesting questions about your design to answer.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#high-number-of-testdoubles-mocks-complicated-setup"&gt;
  &lt;/a&gt;
  High number of test-doubles (mocks), complicated setup
&lt;/h4&gt;

&lt;p&gt;This is telling you that the unit under test has to collaborate with many things, this pain in your test world will be multiplied in all the cases you want to use this unit.&lt;/p&gt;

&lt;p&gt;This pain can sometimes feel hidden in the ‚Äúreal‚Äù usages but comes apparent when you start to change things and feel the pain of the tight and inappropriate coupling. You should be asking yourself why this unit has to collaborate with so many other things.&lt;/p&gt;

&lt;p&gt;It points to leaky abstractions which could be remedied by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Look at the test doubles. Are you having to mock out lots of methods? Perhaps you can consolidate this interaction into another more cohesive unit

&lt;ul&gt;
&lt;li&gt;Maybe the unit itself has too many, unrelated behaviours. See if you can come up with a more cohesive design.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#unclear-intent"&gt;
  &lt;/a&gt;
  Unclear intent
&lt;/h4&gt;

&lt;p&gt;Does your test &lt;em&gt;really&lt;/em&gt; explain the code‚Äôs behaviour and why?&lt;/p&gt;

&lt;p&gt;GOOS:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A test called testBidAccepted() tells us what it does, but not what it‚Äôs for.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If the test is unclear it could mean the responsibilities of the unit being tested is unclear and warrants a redesign.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#wide-scope"&gt;
  &lt;/a&gt;
  Wide scope
&lt;/h4&gt;

&lt;p&gt;This points to a lack of focus. Perhaps you need to break the problem down in to smaller parts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#value-the-quality-of-your-tests"&gt;
  &lt;/a&gt;
  Value the quality of your tests
&lt;/h3&gt;

&lt;p&gt;Start being more attentive about the quality of your test code. This will result in you writing tests that are cheaper to maintain and will challenge you to write more focused, modular code resulting a better designed system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Writing high-quality tests is cheaper than maintaining poorly written ones&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In a high-performing team where it must respond to client needs quickly and cheaply, good tests will enable them to have a productive experience. The opposite is also true.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Write the tests you want to see&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The easiest, most generic feedback I give to my colleagues is asking them to explain their tests out-loud. Often it‚Äôs harder than they imagine, even when the tests appear terse; and then an interesting conversation about the design almost always follows.&lt;/p&gt;

&lt;p&gt;Reflect on the tests you have now. Do they express the intent of the behaviour well? Do they describe the &lt;em&gt;why&lt;/em&gt; clearly? If not, what would it take? Is it a simple refactoring of your tests or does it require some redesign?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#be-attentive-when-you-watch-the-test-fail"&gt;
  &lt;/a&gt;
  Be attentive when you watch the test fail
&lt;/h3&gt;

&lt;p&gt;Be sure it fails the way you expect and that it fails with a clear message. If you skip this step you may be glossing over design decisions, or perhaps you don‚Äôt understand the requirements clearly enough.&lt;/p&gt;

&lt;p&gt;Usually making the test fails ‚Äúnicely‚Äù is a multi-step process, but it‚Äôs important to go through the steps until you get a satisfactory failure message due to your code not exhibiting the failure you need.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#view-being-in-the-red-as-something-to-get-out-of-as-soon-as-possible"&gt;
  &lt;/a&gt;
  View being in ‚Äúthe red‚Äù as something to get out of as soon as possible
&lt;/h3&gt;

&lt;p&gt;You should be running your unit tests extremely frequently, which is why it‚Äôs important they run quickly and don‚Äôt depend on slow things like the network or file-system.&lt;/p&gt;

&lt;p&gt;If at any point your tests are failing (so you‚Äôre in the red), you should be thinking about the shortest path to get back to ‚Äúgreen‚Äù.&lt;/p&gt;

&lt;p&gt;Often the safest way to do this is to revert your changes. By working in small increments this should never feel like a big deal.&lt;/p&gt;

&lt;p&gt;It is forbidden to refactor or redesign code in the red state because your feedback loop as to whether the changes are valid is broken.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#commit-your-work-frequently"&gt;
  &lt;/a&gt;
  Commit your work frequently
&lt;/h3&gt;

&lt;p&gt;To be able to use your tests to help you guide your design they need to be green, but it‚Äôs inevitable that sometimes you‚Äôll go down the wrong path and want to get back to safety. It‚Äôs therefore critical that you practice good source control practices and commit your work frequently.&lt;/p&gt;

&lt;p&gt;I usually commit my work once I‚Äôve made the test pass and that means if I get into a bad state during refactoring I can easily get back to working software again.&lt;/p&gt;

&lt;p&gt;So much of applying TDD is working in small, safe steps, so your mind is freer to think about the design of your system rather than juggling multiple concerns at once.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#refactor-aggressively-when-in-the-green"&gt;
  &lt;/a&gt;
  Refactor aggressively when in the green
&lt;/h3&gt;

&lt;p&gt;Most of the time your system should be in a state when you can refactor freely.&lt;/p&gt;

&lt;p&gt;Ill-factored code is problematic because it becomes hard to understand, which makes it harder to re-design. The process of refactoring in general will reveal improvements in the design for you.&lt;/p&gt;

&lt;p&gt;Read Martin Fowler‚Äôs refactoring book and get in to the habit of applying common refactors. A lot of code I observe is not well-factored, but the good news is it‚Äôs a relatively easy skill to learn and once you‚Äôre proficient takes a matter of seconds or minutes to perform; in particular with help from your IDE.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;If you don‚Äôt practice TDD, what is your method for designing software? You do you! Can you describe your method to someone else, so they can follow a similar approach? It‚Äôs healthy to retrospect on how you work, to see if there are ways to improve.&lt;/p&gt;

&lt;p&gt;No matter your design method, internal quality is essential for the productivity of your team. So many systems suffer from poor productivity and high costs because some developers and teams will neglect internal quality. It‚Äôs a false-economy to ignore internal quality and the pace at which you will be able to affect the external quality of the system will decrease quickly if you do.&lt;/p&gt;

&lt;p&gt;It is of course possible to have software with high internal quality without practicing TDD, but I am not especially clever and want an easy life.&lt;/p&gt;

&lt;p&gt;When I design up front:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it‚Äôs often wrong&lt;/li&gt;
&lt;li&gt;I have to think about too many things at once&lt;/li&gt;
&lt;li&gt;I design for things I don‚Äôt need&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TDD offers a methodical, incremental way of designing code which feels like a simpler, more evidence-based way of creating useful, malleable software.&lt;/p&gt;

&lt;p&gt;Stick to the simple TDD process, listen to your tests and practice. This should result in you designing software, verified against concrete desired behaviours; rather than your imagination.   &lt;/p&gt;

</description>
      <category>tdd</category>
      <category>testing</category>
      <category>design</category>
    </item>
    <item>
      <title>Short Polling vs Long Polling</title>
      <author>Bibek</author>
      <pubDate>Fri, 28 May 2021 14:28:12 +0000</pubDate>
      <link>https://dev.to/bibekkakati/short-polling-vs-long-polling-2fme</link>
      <guid>https://dev.to/bibekkakati/short-polling-vs-long-polling-2fme</guid>
      <description>&lt;p&gt;Hello everyoneüëã&lt;/p&gt;

&lt;p&gt;Before proceeding, I am assuming, you are aware of the request-response architecture of a basic web application. To build a real-time application like a chat application we can't use the basic request-response architecture, but we can use it with a &lt;code&gt;polling&lt;/code&gt; mechanism to achieve the real-time behaviour. Apart from the polling mechanism we also have &lt;code&gt;SSE(server-side event)&lt;/code&gt; and &lt;code&gt;WebSocket&lt;/code&gt; to achieve real-time behaviour.&lt;/p&gt;

&lt;p&gt;In this article, I am going to discuss two types of polling techniques i.e, &lt;code&gt;long polling&lt;/code&gt; and &lt;code&gt;short polling&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First, we need to know, what is &lt;code&gt;polling&lt;/code&gt;?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#polling"&gt;
  &lt;/a&gt;
  Polling
&lt;/h3&gt;

&lt;p&gt;Polling is a technique in which the client sends a request to the server asking for data in an interval of time.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The response from the server can be empty or any kind of data.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#short-polling"&gt;
  &lt;/a&gt;
  Short Polling
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Short Polling&lt;/code&gt; is a technique in which the client sends a request to the server asking for data at fixed delays after getting a response from the previously sent request.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Client&lt;/strong&gt; sends a request to the &lt;strong&gt;Server&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Server&lt;/strong&gt; responds with an empty response or data, if available.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Client&lt;/strong&gt; will wait for the specified delay after receiving the response and continues the same request-response process again.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This technique is very simple and doesn't consume server resources, but event notifications are not so instant and there will be some delay.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h4&gt;

&lt;p&gt;A client sends a request to the server asking for data, but the data is not available at that time and the server responds with an empty response.&lt;/p&gt;

&lt;p&gt;The client will wait for 5 seconds before sending the next request. That means if, in that interval of time (5 seconds), any data is available the client will not be notified about this. &lt;/p&gt;

&lt;p&gt;The client will be able to get the data when it sends the next request.&lt;/p&gt;

&lt;p&gt;So this technique is not so instant, and there will some delay.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#long-polling"&gt;
  &lt;/a&gt;
  Long Polling
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Long Polling&lt;/code&gt; is a technique in which the client sends a request to the server asking for data, but the server doesn't respond instantly if no data is available, rather it waits for a specific amount of time. If in that interval of time, any event happens or data become available, the server will respond with that data and in case of no events or data, the server will respond with an empty response after the specified timeout.&lt;/p&gt;

&lt;p&gt;This technique is more complex and does consume server resources, but it can notify the client without any delay so it can give a better real-time experience.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Originally published on &lt;a href="https://blog.bibekkakati.me/short-polling-vs-long-polling"&gt;blog.bibekkakati.me&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Thank you for reading üôè&lt;/p&gt;

&lt;p&gt;If you enjoyed this article or found it helpful, give it a thumbs-up üëç&lt;/p&gt;

&lt;p&gt;Feel free to connect üëã&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/kakatibibek"&gt;Twitter&lt;/a&gt; | &lt;a href="https://instagram.com/bibekkakati"&gt;Instagram&lt;/a&gt; | &lt;a href="https://linkedin.com/in/bibekkakati"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you like my work and want to support it, you can do it here. I will really appreciate it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/bibekkakati"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7pOmeWpX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520coffee%26emoji%3D%26slug%3Dbibekkakati%26button_colour%3DFFDD00%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3Dffffff"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>node</category>
      <category>javascript</category>
      <category>architecture</category>
    </item>
    <item>
      <title>DotNetDates</title>
      <author>fischgeek</author>
      <pubDate>Fri, 28 May 2021 14:25:47 +0000</pubDate>
      <link>https://dev.to/fischgeek/dotnetdates-4ok1</link>
      <guid>https://dev.to/fischgeek/dotnetdates-4ok1</guid>
      <description>&lt;p&gt;I made a little diddy I wanted to share with you all. It's nothing too grand or impressive. I just really like how it turned out and even more happy with the cleanliness of the code.&lt;/p&gt;

&lt;p&gt;It's a simple form to play around with date formats in .NET. Here's the &lt;a href="https://github.com/fischgeek/DotNetDates"&gt;GitHub&lt;/a&gt; and a screenshot.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dLbI4_bS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10i3ea3bopl660s0x0cu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dLbI4_bS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10i3ea3bopl660s0x0cu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It was all written with F# (minus the C# Forms project bit). What is neat though is I only laid out the basic locations of where I wanted things to go using FlowLayoutPanels.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4R1g3XUA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bik38ht2aekvynhavwox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4R1g3XUA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bik38ht2aekvynhavwox.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then passed those to my F# to handle the rest.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Windows.Forms&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;DotNetDates.FSharp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;DotNetDates&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;partial&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Form1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Form&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Form1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nf"&gt;InitializeComponent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;FormBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flpFormatMethods&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flpFormatSpecifiers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flpCustomFormats&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flpCreateYourOwn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flpCreateYourOwnResult&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm curious to read what you think and thanks for checking it out!&lt;/p&gt;

</description>
      <category>fsharp</category>
      <category>dotnet</category>
      <category>dates</category>
    </item>
    <item>
      <title>What's New in Codesphere Version 1.11.2</title>
      <author>Saji Wang</author>
      <pubDate>Fri, 28 May 2021 14:17:08 +0000</pubDate>
      <link>https://dev.to/codesphere/what-s-new-in-codesphere-version-1-11-2-29d1</link>
      <guid>https://dev.to/codesphere/what-s-new-in-codesphere-version-1-11-2-29d1</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The latest Codesphere updates!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#whats-new"&gt;
  &lt;/a&gt;
  What's New?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;App Monitoring&lt;/li&gt;
&lt;li&gt;Code Search&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Starting today, Codesphere has a new interface to &lt;strong&gt;monitor your app&lt;/strong&gt;! The new feature will allow you to make sure that your app is running as expected, and let you know if you're under or over-estimating your computing needs.&lt;/p&gt;

&lt;p&gt;We're also happy to announce that you can now find a &lt;strong&gt;search bar&lt;/strong&gt; above your file tree, which gives you the ability to search through your codebase. &lt;/p&gt;

&lt;p&gt;In addition, we‚Äôve improved &lt;strong&gt;Python support&lt;/strong&gt; as we understand that more and more developers are building their web apps in python-based frameworks like Django and Flask.&lt;/p&gt;

&lt;p&gt;To get a better idea of all our new feature releases, take a look at our new video on our &lt;a href="https://link.codesphere.com/I"&gt;YouTube channel&lt;/a&gt;! &lt;/p&gt;

&lt;p&gt;At Codesphere, we‚Äôve been hard at work bringing you the next generation cloud platform so that you can spend less time configuring and more time doing what you do best: Actually Coding.&lt;/p&gt;

&lt;p&gt;If there is a feature we haven‚Äôt released yet that you‚Äôd like to see, comment down below! Otherwise, stay tuned for future releases!&lt;/p&gt;

&lt;p&gt;As always, thanks for using Codesphere.&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

</description>
      <category>changelog</category>
      <category>webdev</category>
      <category>monitoring</category>
      <category>python</category>
    </item>
    <item>
      <title>What is Cookies All about HTTP(Part 2)</title>
      <author>Nikhil Bobade </author>
      <pubDate>Fri, 28 May 2021 14:14:19 +0000</pubDate>
      <link>https://dev.to/nikhil27b/what-is-cookies-all-about-http-part-2-3l0l</link>
      <guid>https://dev.to/nikhil27b/what-is-cookies-all-about-http-part-2-3l0l</guid>
      <description>&lt;h3&gt;
  &lt;a href="#http-cookies"&gt;
  &lt;/a&gt;
  HTTP Cookies
&lt;/h3&gt;

&lt;p&gt;HTTP cookies are known as a web cookie, Internet cookies, browser cookies. in the cookie, we can store a small piece of data that server send to your browser.&lt;/p&gt;

&lt;p&gt;Cookies are useful for Auth cookie tokens, to store in small text files, user preferences, color themes, game scores for many things you can use HTTP cookies. Its very easy to create cookies and delete cookies with JavaScript, PHP, NodeJS &amp;amp; Python etc. &lt;/p&gt;

&lt;p&gt;In cookies, we have many options like Expires, Domain, Path, Secure, Name they are used when we create a cookie or read a cookie.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;1.Expire: we can use it to set the date the cookie will expire.&lt;br&gt;
2.Secure: a browser only use HTTP. &lt;br&gt;
3.Domain: The domain name of your site.&lt;br&gt;
4.Path: The path to the directory or web page that set the cookie. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#how-to-set-cookies-with-js"&gt;
  &lt;/a&gt;
  How to set cookies with JS?
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NLYPqeyM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arjgicagn8y6jujkwyn0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NLYPqeyM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arjgicagn8y6jujkwyn0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For NodeJS, you need to require HTTP in your code and directly use cookies.&lt;/p&gt;

&lt;p&gt;If you find this useful in a post like and save this post also comments about your thoughts. For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Pulumi - IaC in your favorite programming language!</title>
      <author>Techworld with Nana</author>
      <pubDate>Fri, 28 May 2021 14:13:04 +0000</pubDate>
      <link>https://dev.to/techworld_with_nana/pulumi-iac-in-your-favorite-programming-language-3i1m</link>
      <guid>https://dev.to/techworld_with_nana/pulumi-iac-in-your-favorite-programming-language-3i1m</guid>
      <description>&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLy7NrYWoggjztwSskGu59O38gL5v0LjUT"&gt;DevOps tool of the month&lt;/a&gt; is a series, where each month I introduce one new useful DevOps tool in 2021 üôåüèº&lt;/p&gt;

&lt;p&gt;For May I chose: &lt;a href="https://www.pulumi.com/"&gt;&lt;strong&gt;Pulumi&lt;/strong&gt;&lt;/a&gt; üéâ - a modern Infrastructure as Code Tool for Developers.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-youtube-vijeidcsr3q-"&gt;
  &lt;/a&gt;
  &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vIjeiDcsR3Q"&gt;
&lt;/iframe&gt;

&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#what-is-pulumi-and-how-its-different-from-other-iac-tools"&gt;
  &lt;/a&gt;
  What is Pulumi and how it's different from other IaC tools üí°
&lt;/h2&gt;

&lt;p&gt;When writing IaC scripts using other tools, you usually have to use a DSL (like HCL in case of Terraform) of that tool or YAML or JSON which is a format that many tools use. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem with YAML or JSON:&lt;/strong&gt; &lt;br&gt;
It's easy to read and easy to define resources you want to create and that is great.&lt;/p&gt;

&lt;p&gt;But what if we need to add some logic in there, like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;conditionals, "create this EC2 instance, if xyz"&lt;/li&gt;
&lt;li&gt;or use loops, like "I want to create 20 EC2 Instances with the same configuration"&lt;/li&gt;
&lt;li&gt;or what about re-using logic? Like, "all 20 instances with this shared config, plus some specific configs"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It gets pretty complex in such formats. So all these logical operations, loops, reusing blocks of code is a natural part of any programming language, right? &lt;/p&gt;

&lt;p&gt;So writing the same infrastructure as code logic in a programming language would obviously make writing more complex code easier and cleaner. And that's exactly what Pulumi did. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Pulumi allows you to write infrastructure as code in a programming language&lt;/strong&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now which programming language is that? ü§î Well, you can actually choose whichever language you want to use Pulumi. You can write it in Node.js, Python, .net etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w26iiwiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ryr4w2aho4xr83hvkxo1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w26iiwiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ryr4w2aho4xr83hvkxo1.png" alt="Pulumi - choose favorite language"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So instead of having to learn a new syntax or DSL or a new language, you can use the language you are most proficient in and use it for writing infrastructure as code. üëç&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#main-benefits-of-using-a-programming-language-of-your-choice"&gt;
  &lt;/a&gt;
  Main Benefits of using a Programming Language of your choice ü§©
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1) Use the same Programming Tools you know for Infrastructure&lt;/strong&gt;&lt;br&gt;
If you are coding in Python for example, you probably have the most fitting IDE for it, like PyCharm, you have installed all the plugins for that languages, you have configured linters that tell you immediately if you have an error in the code or warning in your code quality. You know all the main libraries you can use in your code etc. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So you know the whole eco-system of that language. And that means you can &lt;strong&gt;use&lt;/strong&gt; all that same eco-system and your &lt;strong&gt;expertise for now writing infrastructure as code&lt;/strong&gt;. And this can make your work much more efficient.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_mXZjkna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bd3jaiwrxbi8macvelsf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_mXZjkna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bd3jaiwrxbi8macvelsf.png" alt="Use Programming Expertise for Infrastructure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2) Treat Infrastructure as Code as Application Code&lt;/strong&gt;&lt;br&gt;
Another thing that we see emerging and becoming a standard is &lt;strong&gt;treating our infrastructure as code exactly the same way as our application code&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zQ9zfNdq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r962ers9e2jt6cfwn4c8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQ9zfNdq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r962ers9e2jt6cfwn4c8.png" alt="One Pipeline for Everyone"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That includes e.g. testing the code. Having unit tests, integration tests etc. So with YAML and JSON format or DSL, like HCL that Terraform uses, it's pretty difficult to write tests for these scripts. &lt;/p&gt;

&lt;p&gt;With Pulumi obviously you have the advantage of simply writing tests for you IaC as for your application code, using the same test libraries, same language, same editor etc. üôåüèº&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-pulumi-works-in-practice"&gt;
  &lt;/a&gt;
  How Pulumi works in Practice üë©üèª‚Äçüíª
&lt;/h2&gt;

&lt;p&gt;Check out the video to see how Pulumi works in practice. I will show you how to write a simple Pulumi project to first create an S3 bucket in an AWS account and then a more realistic example of provisioning an EKS cluster:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iYtr48z5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj9zjuaz9rnth1vloftv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iYtr48z5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj9zjuaz9rnth1vloftv.png" alt="Pulumi Demo"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;More awesome tools coming up next on this series, so stay tuned for it! üé¨ üòä&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; üòç for more content:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/groups/techworldwithnana"&gt;Private FB group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Njuchi_"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCdngmbVKX1Tgre699-XLlUA?sub_confirmation=1"&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.instagram.com/techworld_with_nana/"&gt;Instagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="//linkedin.com/in/nana-janashia"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>pulumi</category>
      <category>devops</category>
      <category>iac</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>üöÄ10 Trending projects on GitHub for web developers - 28th May 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 28 May 2021 14:07:27 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-28th-may-2021-2411</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-28th-may-2021-2411</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-comlink"&gt;
  &lt;/a&gt;
  1. Comlink
&lt;/h3&gt;

&lt;p&gt;Comlink makes WebWorkers enjoyable. Comlink is a tiny library (1.1kB), that removes the mental barrier of thinking about postMessage and hides the fact that you are working with workers.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/GoogleChromeLabs"&gt;
        GoogleChromeLabs
      &lt;/a&gt; / &lt;a href="https://github.com/GoogleChromeLabs/comlink"&gt;
        comlink
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Comlink makes WebWorkers enjoyable.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Comlink&lt;/h1&gt;
&lt;p&gt;Comlink makes &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API" rel="nofollow"&gt;WebWorkers&lt;/a&gt; enjoyable. Comlink is a &lt;strong&gt;tiny library (1.1kB)&lt;/strong&gt;, that removes the mental barrier of thinking about &lt;code&gt;postMessage&lt;/code&gt; and hides the fact that you are working with workers.&lt;/p&gt;
&lt;p&gt;At a more abstract level it is an RPC implementation for &lt;code&gt;postMessage&lt;/code&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy" rel="nofollow"&gt;ES6 Proxies&lt;/a&gt;.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;$ npm install --save comlink
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/234957/54164510-cdab2d80-4454-11e9-92d0-7356aa6c5746.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a5AND5Af--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/234957/54164510-cdab2d80-4454-11e9-92d0-7356aa6c5746.png" alt="Comlink in action"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Browsers support &amp;amp; bundle size&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/2b5ac9008c756586e4b3a81b353c7f418ed2d682138bdf2daa5dad927d193384/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4368726f6d652d35362b2d677265656e2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/2b5ac9008c756586e4b3a81b353c7f418ed2d682138bdf2daa5dad927d193384/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4368726f6d652d35362b2d677265656e2e7376673f7374796c653d666c61742d737175617265" alt="Chrome 56+"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3569d071249b186d1e2e98f769d1b54804f1831348473cfcd2f3552843701722/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f456467652d31352b2d677265656e2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/3569d071249b186d1e2e98f769d1b54804f1831348473cfcd2f3552843701722/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f456467652d31352b2d677265656e2e7376673f7374796c653d666c61742d737175617265" alt="Edge 15+"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/bc5c4e8d51314885275132fd2c4d1c069fbeaba3e7191d28c53649d16e110213/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f46697265666f782d35322b2d677265656e2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/bc5c4e8d51314885275132fd2c4d1c069fbeaba3e7191d28c53649d16e110213/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f46697265666f782d35322b2d677265656e2e7376673f7374796c653d666c61742d737175617265" alt="Firefox 52+"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/97af1095338c0f506af508370ec25906f6b40d887cc03639e097f8899d7bb4dc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4f706572612d34332b2d677265656e2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/97af1095338c0f506af508370ec25906f6b40d887cc03639e097f8899d7bb4dc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4f706572612d34332b2d677265656e2e7376673f7374796c653d666c61742d737175617265" alt="Opera 43+"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e4655ea7b05e0cbb29ab1c3c88c2d9049f7968f89291331a5a30e486e9a4cac2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361666172692d31302e312b2d677265656e2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/e4655ea7b05e0cbb29ab1c3c88c2d9049f7968f89291331a5a30e486e9a4cac2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361666172692d31302e312b2d677265656e2e7376673f7374796c653d666c61742d737175617265" alt="Safari 10.1+"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c8c6b46d7716aef4978ecc35a105a6176ccc5a59b79ca0b1ba844b66eaa285f0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53616d73756e675f496e7465726e65742d362e302b2d677265656e2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/c8c6b46d7716aef4978ecc35a105a6176ccc5a59b79ca0b1ba844b66eaa285f0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53616d73756e675f496e7465726e65742d362e302b2d677265656e2e7376673f7374796c653d666c61742d737175617265" alt="Samsung Internet 6.0+"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Browsers without &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy" rel="nofollow"&gt;ES6 Proxy&lt;/a&gt; support can use the &lt;a href="https://github.com/GoogleChrome/proxy-polyfill"&gt;proxy-polyfill&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Size&lt;/strong&gt;: ~2.5k, ~1.2k gzip‚Äôd, ~1.1k brotli‚Äôd&lt;/p&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;On mobile phones, and especially on low-end mobile phones, it is important to keep the main thread as idle as possible so it can respond to user interactions quickly and provide a jank-free experience. &lt;strong&gt;The UI thread ought to be for UI work only&lt;/strong&gt;. WebWorkers are a web API that allow you to run code in a separate thread. To communicate with another thread, WebWorkers offer the &lt;code&gt;postMessage&lt;/code&gt; API. You can send JavaScript objects‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/GoogleChromeLabs/comlink"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-notion-sdk-for-javascript"&gt;
  &lt;/a&gt;
  2. Notion SDK for JavaScript
&lt;/h3&gt;

&lt;p&gt;Official Notion JavaScript Client. A simple and easy to use client for the Notion API&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/makenotion"&gt;
        makenotion
      &lt;/a&gt; / &lt;a href="https://github.com/makenotion/notion-sdk-js"&gt;
        notion-sdk-js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Official Notion JavaScript Client
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
    &lt;h1&gt;
Notion SDK for JavaScript&lt;/h1&gt;
    &lt;p&gt;
        &lt;b&gt;A simple and easy to use client for the &lt;a href="https://developers.notion.com" rel="nofollow"&gt;Notion API&lt;/a&gt;&lt;/b&gt;
    &lt;/p&gt;
    &lt;br&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/makenotion/notion-sdk-js/actions/workflows/ci.yml/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3hKQ6rRp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/makenotion/notion-sdk-js/actions/workflows/ci.yml/badge.svg" alt="Build status"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/notion-api-js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ac83c30fe3fecb1bf50fc69548837d1ade41ce2ec69df29bde4ce5c1b1d1ec4/68747470733a2f2f62616467652e667572792e696f2f6a732f2534306e6f74696f6e6871253246636c69656e742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install @notionhq/client
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Before getting started, &lt;a href="https://www.notion.com/my-integrations" rel="nofollow"&gt;create an integration&lt;/a&gt; and find the token.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developers.notion.com/docs/authorization" rel="nofollow"&gt;‚Üí Learn more about authorization&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Import and initialize a client using an &lt;strong&gt;integration token&lt;/strong&gt; or an OAuth &lt;strong&gt;access token&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; Client &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"@notionhq/client"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-c"&gt;// Initializing a client&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;notion&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;Client&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;auth&lt;/span&gt;: &lt;span class="pl-s1"&gt;process&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;env&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;NOTION_TOKEN&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Make a request to any Notion API endpoint.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See the complete list of endpoints in the &lt;a href="https://developers.notion.com/reference" rel="nofollow"&gt;API reference&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;listUsersResponse&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-s1"&gt;notion&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;users&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;list&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Each method returns a &lt;code&gt;Promise&lt;/code&gt; which resolves the response.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;listUsersResponse&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-c"&gt;// {&lt;/span&gt;
&lt;span class="pl-c"&gt;//   results: [&lt;/span&gt;
&lt;span class="pl-c"&gt;//     {&lt;/span&gt;
&lt;span class="pl-c"&gt;//       object: 'user',&lt;/span&gt;
&lt;span class="pl-c"&gt;//       id: 'd40e767c-d7af-4b18-a86d-55c61f1e39a4',&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/makenotion/notion-sdk-js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-capacitor"&gt;
  &lt;/a&gt;
  3. Capacitor
&lt;/h3&gt;

&lt;p&gt;Build cross-platform Native Progressive Web Apps for iOS, Android, and the Web&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ionic-team"&gt;
        ionic-team
      &lt;/a&gt; / &lt;a href="https://github.com/ionic-team/capacitor"&gt;
        capacitor
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Build cross-platform Native Progressive Web Apps for iOS, Android, and the Web ‚ö°Ô∏è
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;br&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/236501/105104854-e5e42e80-5a67-11eb-8cb8-46fccb079062.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vo4cYwor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/236501/105104854-e5e42e80-5a67-11eb-8cb8-46fccb079062.png" width="560"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div&gt;
  ‚ö°Ô∏è Cross-platform apps with JavaScript and the Web ‚ö°Ô∏è
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;
  &lt;a href="https://github.com/ionic-team/capacitor/actions?query=workflow%3ACI"&gt;&lt;img src="https://camo.githubusercontent.com/80a89c1088e45d3fa4c84258c3b90e3da15d1f9d3cd0d4d2e9930d303802d20a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f696f6e69632d7465616d2f636170616369746f722f43493f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/@capacitor/core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ee4248f7822f6dfcb2257859a2c6e07361e82e44d6ace083738cdb0316840cba/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f40636170616369746f722f636f72653f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/@capacitor/core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34618a581b834ec2e254fea9ebb00ad879cd5d40d3696d49cd703b39853001d9/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40636170616369746f722f636f72653f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/@capacitor/core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ecf120ab0c8806383b975e32a3109c2f95a2ec1011ab47e2167a503855517a1/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f40636170616369746f722f636f72653f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://capacitorjs.com/docs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a1b82b4dd666f8e1bf46aebf14940e392b8f002bcd622dcba763e1699aa8e5c8/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d646f6373266d6573736167653d676574636170616369746f722e636f6d26636f6c6f723d626c7565267374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
  &lt;a href="https://twitter.com/capacitorjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b6cd3e8719a17593e5353e632a760d5ffc60c4d45bc3b577e0feca005d565ec0/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f636170616369746f726a73"&gt;&lt;/a&gt;
&lt;/p&gt;




&lt;p&gt;Capacitor is a cross-platform API and code execution layer that makes it easy to call Native SDKs from web code and to write custom native plugins that your app may need. Additionally, Capacitor provides first-class Progressive Web App support so you can write one app and deploy it to the app stores &lt;em&gt;and&lt;/em&gt; the mobile web.&lt;/p&gt;

&lt;p&gt;Capacitor comes with a Plugin API for building native plugins. Plugins can be written inside Capacitor apps or packaged into an npm dependency for community use. Plugin authors are encouraged to use Swift to develop plugins in iOS and Kotlin (or Java) in Android.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
Capacitor 3.0 development has begun! ‚ú® üöÄ ‚≠ê
&lt;/h3&gt;
&lt;p&gt;Interested in following Capacitor 3 development? We'd love your feedback! Use the &lt;a href="https://github.com/ionic-team/capacitor/issues/3133"&gt;Capacitor 3 planning issue&lt;/a&gt; as a starting point. &lt;a href="https://github.com/ionic-team/capacitor/discussions"&gt;Open a discussion&lt;/a&gt; if you have questions or suggestions.&lt;/p&gt;
&lt;p&gt;We'd love to hear‚Ä¶&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ionic-team/capacitor"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-daisyui"&gt;
  &lt;/a&gt;
  4. daisyUI
&lt;/h3&gt;

&lt;p&gt;Tailwind CSS Components. Adds component classes like btn, card and more to Tailwind CSS&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/saadeghi"&gt;
        saadeghi
      &lt;/a&gt; / &lt;a href="https://github.com/saadeghi/daisyui"&gt;
        daisyui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ‚≠êÔ∏è ‚≠êÔ∏è ‚≠êÔ∏è ‚≠êÔ∏è ‚≠êÔ∏è ‚ÄÉTailwind Components
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://daisyui.com/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jfkeQZVB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/saadeghi/files/main/daisyui/logo-4.svg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tailwind CSS Components&lt;/strong&gt;&lt;br&gt;
Adds component classes like &lt;code&gt;btn&lt;/code&gt;, &lt;code&gt;card&lt;/code&gt; and more to Tailwind CSS&lt;/p&gt;
&lt;p&gt;[ &lt;a href="https://daisyui.com/" rel="nofollow"&gt;See all components&lt;/a&gt; ]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/intent/tweet?text=DaisyUI%20%0D%0AUI%20Components%20for%20Tailwind%20CSS%20%0D%0Ahttps://github.com/saadeghi/daisyui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29fac89587877ec8a3a32105190daa6a3af3dedb188155969bc83efc0745bcb7/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f7374796c653d736f6369616c2675726c3d68747470732533412532462532466769746875622e636f6d253246736161646567686925324664616973797569" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://daisyui.com/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JR6AuU_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/saadeghi/files/main/daisyui/card-3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
DaisyUI&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/saadeghi/daisyui/actions"&gt;&lt;img src="https://camo.githubusercontent.com/3504ee2b680b251161a01f7375a976dc759b0bcdd1b99b997615060dabd0999d/68747470733a2f2f62616467656e2e6e65742f6769746875622f636865636b732f73616164656768692f646169737975693f6c6162656c3d6275696c64" alt=""&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/daisyui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15fbb89ac7479d8557fed67e5e7bc60b74daa577e741142a6ae7fb4190d4a32f/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f646169737975693f6c6162656c3d76657273696f6e26636f6c6f723d707572706c65" alt=""&gt;&lt;/a&gt; &lt;a href="https://daisyui.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9c04579dcda204c68a51d63a501053f358f6d707b344d96950ac878410e0d3b3/68747470733a2f2f62616467656e2e6e65742f62616467652f636f6d706f6e656e747325323061646465642f33352f707572706c65" alt=""&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=daisyui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/934d91cf9d1c868464506437f481f1b8caece33878886cd45100000cfb70997c/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f646169737975693f6c6162656c3d696e7374616c6c25323073697a6526636f6c6f723d707572706c65" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.npmjs.com/package/daisyui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f15017255c1ec3f292925732ef70d46e76c251db0fd700765cd9bfd3cc45ac98/68747470733a2f2f62616467656e2e6e65742f6e706d2f64742f646169737975693f69636f6e3d6e706d26636f6c6f723d707572706c65" alt=""&gt;&lt;/a&gt; &lt;a href="https://github.com/saadeghi/daisyui"&gt;&lt;img src="https://camo.githubusercontent.com/bb93f08cade5dfa97b307135e47db775dbb896d1d4bc303ff3b4976dcaba571d/68747470733a2f2f62616467656e2e6e65742f6769746875622f6c6173742d636f6d6d69742f73616164656768692f646169737975693f69636f6e3d67697468756226636f6c6f723d707572706c65" alt=""&gt;&lt;/a&gt; &lt;a href="https://github.com/saadeghi/daisyui/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/eea24b8e2419fcb676dd49f4a160b3f8f4a5f8b319909a2cde4f3efc37ee912b/68747470733a2f2f62616467656e2e6e65742f6769746875622f6c6963656e73652f73616164656768692f646169737975693f636f6c6f723d707572706c65" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
üëâ [ &lt;a href="https://daisyui.com/" rel="nofollow"&gt;See all components&lt;/a&gt; ]&lt;/li&gt;
&lt;li&gt;
üìò Documents: &lt;a href="https://daisyui.com/" rel="nofollow"&gt;daisyui.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
üé≤ Try it online: &lt;a href="https://play.tailwindcss.com/5du2H2Kyvq" rel="nofollow"&gt;Tailwind Play&lt;/a&gt; | &lt;a href="https://codepen.io/saadeghi/pen/gOwWKvv" rel="nofollow"&gt;Codepen&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
üì¶ Source: &lt;a href="https://github.com/saadeghi/daisyui"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.npmjs.com/package/daisyui" rel="nofollow"&gt;NPM&lt;/a&gt; | &lt;a href="https://unpkg.com/browse/daisyui/" rel="nofollow"&gt;Unpkg&lt;/a&gt; | &lt;a href="https://www.jsdelivr.com/package/npm/daisyui" rel="nofollow"&gt;JSdeliver&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
üåº Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Tailwind CSS plugin&lt;/strong&gt;
DaisyUI is a Tailwind CSS plugin. Install it, add it to your &lt;code&gt;tailwind.config.js&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Component classes&lt;/strong&gt;
Adds component classes to Tailwind. Classes like &lt;code&gt;btn&lt;/code&gt;, &lt;code&gt;card&lt;/code&gt;,‚Ä¶ So you will end up with a cleaner HTML.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Semantic color names&lt;/strong&gt;
Adds color names like &lt;code&gt;primary&lt;/code&gt;, &lt;code&gt;secondary&lt;/code&gt;, &lt;code&gt;accent&lt;/code&gt;,‚Ä¶.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Customizable&lt;/strong&gt;
You can customize the design of components with Tailwind utility classes and CSS variables.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Themeable&lt;/strong&gt;
Add multiple themes and customize colors. You can even set a theme for a specific section of your page.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;RTL supported&lt;/strong&gt;
Enable &lt;code&gt;rtl&lt;/code&gt; config for right to left layouts.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pure CSS&lt;/strong&gt;
No script‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/saadeghi/daisyui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-notistack"&gt;
  &lt;/a&gt;
  5. Notistack
&lt;/h3&gt;

&lt;p&gt;Highly customizable notification snackbars (toasts) that can be stacked on top of each other&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/iamhosseindhv"&gt;
        iamhosseindhv
      &lt;/a&gt; / &lt;a href="https://github.com/iamhosseindhv/notistack"&gt;
        notistack
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Highly customizable notification snackbars (toasts) that can be stacked on top of each other
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://iamhosseindhv.com/" rel="nofollow"&gt;&lt;img width="756" src="https://camo.githubusercontent.com/a320de56f9816818e980df675a1d2b2b32c94e9eaafc5eba5c0206cfeebcd518/68747470733a2f2f69616d686f737365696e6468762e636f6d2f7374617469632f70726f6a656374732f6e6f7469737461636b2d62616e6e65722e706e67" alt="notistack logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://iamhosseindhv.com/notistack" rel="nofollow"&gt;&lt;strong&gt;Notistack&lt;/strong&gt;&lt;/a&gt; is a notification library which makes it extremely easy to display notifications on your web apps. It is highly customizable and enables you to stack snackbars/toasts on top of one another
&lt;br&gt;
&lt;strong&gt;Visit &lt;a href="https://iamhosseindhv.com/notistack/demos" rel="nofollow"&gt;documentation website&lt;/a&gt; for demos&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/notistack" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/122ab235a35ffa8baf922c0e466f75263d763b65c2d1f47d73266222ac0ba747/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6e6f7469737461636b2e7376673f6c6162656c3d76657273696f6e" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/notistack" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0556473afe6fa6f6406e2d5da49bd53e111f7f7969f7eebdffcdae9a1dc53fce/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f6e6f7469737461636b2e737667" alt="npm downloads"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/notistack" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f65ca3764c4fb7f0e5c7fe54170fa99425b3852bbcb09ca4db750ce6be1fe67/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f6e6f7469737461636b2e737667" alt="package license"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Stacking behaviour&lt;/th&gt;
&lt;th&gt;Dismiss oldest when reached maxSnack (3 here)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/44e563d6ac25f8b9ee63d9be0a4a47c3810156ad6fabeb5a646116a19c599ff9/68747470733a2f2f692e696d6775722e636f6d2f4d74696a76414b2e676966"&gt;&lt;img width="400" src="https://camo.githubusercontent.com/44e563d6ac25f8b9ee63d9be0a4a47c3810156ad6fabeb5a646116a19c599ff9/68747470733a2f2f692e696d6775722e636f6d2f4d74696a76414b2e676966"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f4c9a60c00f7a73326d22c8a6354dd7dcb03ab9ae30e23b77548bf535dc5e8c0/68747470733a2f2f692e696d6775722e636f6d2f7572583437576e2e676966"&gt;&lt;img width="400" src="https://camo.githubusercontent.com/f4c9a60c00f7a73326d22c8a6354dd7dcb03ab9ae30e23b77548bf535dc5e8c0/68747470733a2f2f692e696d6775722e636f6d2f7572583437576e2e676966"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamhosseindhv/notistack/master/#how-to-use"&gt;How to use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamhosseindhv/notistack/master/#online-demo"&gt;Online demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iamhosseindhv.com/notistack/api" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamhosseindhv/notistack/master/#redux-and-mobx-support"&gt;Redux / Mobx support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;p&gt;Use your preferred package manager:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install notistack
yarn add notistack
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
How to use&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1:&lt;/strong&gt; Wrap your app inside a &lt;code&gt;SnackbarProvider&lt;/code&gt; component: (see &lt;a href="https://iamhosseindhv.com/notistack/api" rel="nofollow"&gt;docs&lt;/a&gt; for a full list of available props)
&lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; If you're using material-ui &lt;code&gt;ThemeProvider&lt;/code&gt;, make sure &lt;code&gt;SnackbarProvider&lt;/code&gt; is a child of it.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;SnackbarProvider&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'notistack'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;SnackbarProvider&lt;/span&gt; &lt;span class="pl-c1"&gt;maxSnack&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;App&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;SnackbarProvider&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2:&lt;/strong&gt; Export any component that needs to send notification using &lt;code&gt;withSnackbar&lt;/code&gt;. By doing this, you'll have access to‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/iamhosseindhv/notistack"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-dragula"&gt;
  &lt;/a&gt;
  6. Dragula
&lt;/h3&gt;

&lt;p&gt;Drag and drop so simple it hurts&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bevacqua"&gt;
        bevacqua
      &lt;/a&gt; / &lt;a href="https://github.com/bevacqua/dragula"&gt;
        dragula
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üëå Drag and drop so simple it hurts
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="markdown"&gt;
&lt;p&gt;&lt;a href="http://bevacqua.github.io/dragula/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oKglSyw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/bevacqua/dragula/raw/master/resources/logo.png" alt="logo.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/bevacqua/dragula" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7a1bb90f0b8140d5fa8b6f243fcf4d610f1ee14141aa42449f7df755f1b07201/68747470733a2f2f7472617669732d63692e6f72672f62657661637175612f64726167756c612e737667" alt="Travis CI"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/bevacqua/dragula" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e2920caf13c763080a4b97b7e96377604331b9eea637c320008d9e97cfe0130b/68747470733a2f2f64617669642d646d2e6f72672f62657661637175612f64726167756c612e737667" alt="Dependencies"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/bevacqua/dragula#info=devDependencies" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/824fa726bfbfc72fd2f19fd72f9285727b45f260db63ba8ff959dc9b7322a003/68747470733a2f2f64617669642d646d2e6f72672f62657661637175612f64726167756c612f6465762d7374617475732e737667" alt="Dev Dependencies"&gt;&lt;/a&gt;
&lt;a href="https://patreon.com/bevacqua" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb5a8f85d80eeab6d06596b6baf5837144f57a30306c72d77ca86b33c465b2b2/68747470733a2f2f7261776769742e636f6d2f62657661637175612f64726167756c612f6d61737465722f7265736f75726365732f70617472656f6e2e737667" alt="Patreon"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Drag and drop so simple it hurts&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Browser support includes every sane browser and &lt;strong&gt;IE7+&lt;/strong&gt;. &lt;em&gt;(Granted you polyfill the functional &lt;code&gt;Array&lt;/code&gt; methods in ES5)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Framework support includes vanilla JavaScript, Angular, and React.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Official &lt;a href="https://github.com/bevacqua/angularjs-dragula"&gt;Angular bridge&lt;/a&gt; for &lt;code&gt;dragula&lt;/code&gt; &lt;a href="http://bevacqua.github.io/angularjs-dragula/" rel="nofollow"&gt;&lt;em&gt;(demo)&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Official &lt;a href="https://github.com/valor-software/ng2-dragula"&gt;Angular 2 bridge&lt;/a&gt; for &lt;code&gt;dragula&lt;/code&gt; &lt;a href="http://valor-software.com/ng2-dragula/index.html" rel="nofollow"&gt;&lt;em&gt;(demo)&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Official &lt;a href="https://github.com/bevacqua/react-dragula"&gt;React bridge&lt;/a&gt; for &lt;code&gt;dragula&lt;/code&gt; &lt;a href="http://bevacqua.github.io/react-dragula/" rel="nofollow"&gt;&lt;em&gt;(demo)&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
Demo&lt;/h1&gt;

&lt;p&gt;&lt;a href="http://bevacqua.github.io/dragula/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H_WUqfU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/bevacqua/dragula/raw/master/resources/demo.png" alt="demo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try out the &lt;a href="http://bevacqua.github.io/dragula/" rel="nofollow"&gt;demo&lt;/a&gt;!&lt;/p&gt;

&lt;h1&gt;
Inspiration&lt;/h1&gt;

&lt;p&gt;Have you ever wanted a drag and drop library that just works? That doesn't just depend on bloated frameworks, that has great support? That actually understands where to place the elements when they are dropped? That doesn't need you to do a zillion things to get it to work? Well, so did I!&lt;/p&gt;

&lt;h1&gt;
Features&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Super easy to set up&lt;/li&gt;
&lt;li&gt;No bloated dependencies&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Figures out sort order&lt;/strong&gt; on its own&lt;/li&gt;
&lt;li&gt;A shadow where the item would be dropped offers &lt;strong&gt;visual feedback&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Touch events!&lt;/li&gt;
&lt;li&gt;Seamlessly handles clicks &lt;em&gt;without any configuration&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
Install&lt;/h1&gt;

&lt;p&gt;You can‚Ä¶&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bevacqua/dragula"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#7-simplebar"&gt;
  &lt;/a&gt;
  7. SimpleBar
&lt;/h3&gt;

&lt;p&gt;SimpleBar does only one thing: replace the browser's default scrollbar with a custom CSS-styled one without losing performances.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Grsmto"&gt;
        Grsmto
      &lt;/a&gt; / &lt;a href="https://github.com/Grsmto/simplebar"&gt;
        simplebar
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Custom scrollbars vanilla javascript library with native scroll, done simple, lightweight, easy to use and cross-browser.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/527559/66231995-3cd0c380-e6be-11e9-8782-c50c834aac93.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9bBG_1CY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/527559/66231995-3cd0c380-e6be-11e9-8782-c50c834aac93.png" width="520" alt="SimpleBar"&gt;&lt;/a&gt;
&lt;/p&gt;



&lt;p&gt;
  &lt;a href="https://npmjs.org/package/simplebar" rel="nofollow"&gt;&lt;img alt="NPM version" src="https://camo.githubusercontent.com/d3aec392b24bea2050f038410c00e77aa7bd0ba43999ce0e813e5cec662b421e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f73696d706c656261722e7376673f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
  &lt;a href="https://npmjs.org/package/simplebar" rel="nofollow"&gt;&lt;img alt="NPM downloads" src="https://camo.githubusercontent.com/14db5165d61fd904e1ac406d7e4dc6974c6b159bdbdb2ef1d8f6f25b4ad5e02d/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f73696d706c656261722e7376673f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
  &lt;a href="https://travis-ci.org/grsmto/simplebar" rel="nofollow"&gt;&lt;img alt="Build Status" src="https://camo.githubusercontent.com/4982e79a58d18ee11567188b89ede140751c6379a7719efc2fe5c3663497ebc5/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6772736d746f2f73696d706c656261722f6d61737465722e7376673f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
  &lt;a href="https://automate.browserstack.com/public-build/amtTU2pEa1FjNmpabTBCbUh2b3FpbFZQaXhNd1Q3bEg0L1dlSzd2SGN2Zz0tLWpjK1ZwWWRNWnVGQWI4OXphWGRISEE9PQ==--39b14340be576db5bd01b020627cd17414003bfb%" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9a0d1030c0fc732efb1625e019a45f0440970634104a1af41614c7e282afd269/68747470733a2f2f6175746f6d6174652e62726f77736572737461636b2e636f6d2f62616467652e7376673f62616467655f6b65793d616d7454553270456131466a4e6d706162544243625568326233467062465a516158684e64315133624567304c31646c537a643253474e325a7a30744c57706a4b315a775757524e576e5647515749344f587068574752495345453950513d3d2d2d3339623134333430626535373664623562643031623032303632376364313734313430303362666225"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
SimpleBar does only one thing: replace the browser's default scrollbar with a custom CSS-styled one without losing performances&lt;br&gt;
Unlike some popular plugins, SimpleBar doesn't mimic scroll with Javascript, causing janks and strange scrolling behaviours&lt;br&gt;
You keep the awesomeness of native scrolling...with a custom scrollbar&lt;/p&gt;

&lt;p&gt;SimpleBar &lt;strong&gt;does NOT implement a custom scroll behaviour&lt;/strong&gt;. It keeps the &lt;strong&gt;native&lt;/strong&gt; &lt;code&gt;overflow: auto&lt;/code&gt; scroll and &lt;strong&gt;only&lt;/strong&gt; replace the scrollbar visual appearance.&lt;/p&gt;

&lt;h4&gt;
Design it as you want&lt;/h4&gt;
&lt;p&gt;SimpleBar uses pure CSS to style the scrollbar. You can easily customize it as you want! Or even have multiple style on the same page...or just keep the default style ("Mac OS" scrollbar style).&lt;/p&gt;
&lt;h4&gt;
Lightweight and performant&lt;/h4&gt;
&lt;p&gt;Only 6kb minified. SimpleBar doesn't use Javascript to handle scrolling. You keep the performances/behaviours of the native scroll.&lt;/p&gt;
&lt;h4&gt;
Supported everywhere&lt;/h4&gt;
&lt;p&gt;SimpleBar has been tested on the following browsers: Chrome, Firefox, Safari, Edge, IE11.&lt;/p&gt;
&lt;h3&gt;
Getting started&lt;/h3&gt;
&lt;p&gt;The easiest way to use SimpleBar‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Grsmto/simplebar"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-govukreact"&gt;
  &lt;/a&gt;
  8. govuk-react
&lt;/h3&gt;

&lt;p&gt;An implementation of the GOV.UK Design System in React using CSSinJS&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/govuk-react"&gt;
        govuk-react
      &lt;/a&gt; / &lt;a href="https://github.com/govuk-react/govuk-react"&gt;
        govuk-react
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An implementation of the GOV.UK Design System in React using CSSinJS
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
govuk-react&lt;/h1&gt;
&lt;p&gt;An implementation of the &lt;a href="https://govuk-design-system-production.cloudapps.digital" rel="nofollow"&gt;GOV.UK Design System&lt;/a&gt; in &lt;a href="https://reactjs.org" rel="nofollow"&gt;React&lt;/a&gt; using &lt;a href="https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660" rel="nofollow"&gt;CSSinJS&lt;/a&gt; using Object notation (with &lt;a href="https://www.styled-components.com/docs/advanced#style-objects" rel="nofollow"&gt;styled-components&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/govuk-react/govuk-react" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db96a2eaccb11b848b4ff367b3ff2e387a2ddacbe6e8d4de65d8562681944b8a/68747470733a2f2f636f6465636f762e696f2f67682f676f76756b2d72656163742f676f76756b2d72656163742f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://spectrum.chat/govuk-react" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3aaae7abc6655c1485b607bd83b732aec0d7316f84511c9c7471c4641d4679f2/68747470733a2f2f77697468737065637472756d2e6769746875622e696f2f62616467652f62616467652e737667" alt="Join the community on Spectrum"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We aim to track the following projects (in priority order) as to which components to implement and how they should look/behave. Where possible we are using the existing CSS as a guide. When we need to modify to suit custom markup, we aim to provide a comment in our code as to why this was done.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alphagov/govuk-frontend"&gt;GOV.UK Frontend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://design-system.service.gov.uk" rel="nofollow"&gt;GOV.UK Design System&lt;/a&gt; (&lt;a href="https://github.com/alphagov/govuk-design-system"&gt;source&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alphagov/govuk-design-system-backlog"&gt;GOV.UK Design System Backlog&lt;/a&gt; (where there are open tickets in the backlog that reference patterns/components in existing govuk sites)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alphagov/govuk_elements"&gt;GOV.UK/elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://govuk-publishing-components.herokuapp.com/component-guide" rel="nofollow"&gt;GOV.UK Publishing Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Any other established govuk pattern&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install govuk-react styled-components --save&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;Button&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'govuk-react'&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-v"&gt;MyComponent&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;title&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-s1"&gt;title&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Button&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/govuk-react/govuk-react"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-htmx"&gt;
  &lt;/a&gt;
  9. htmx
&lt;/h3&gt;

&lt;p&gt;htmx allows you to access AJAX, CSS Transitions, WebSockets and Server Sent Events directly in HTML, using attributes, so you can build modern user interfaces with the simplicity and power of hypertext&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bigskysoftware"&gt;
        bigskysoftware
      &lt;/a&gt; / &lt;a href="https://github.com/bigskysoftware/htmx"&gt;
        htmx
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      &amp;lt;/&amp;gt; htmx - high power tools for HTML
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://htmx.org" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XWS3T8B1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bigskysoftware/htmx/master/www/img/htmx_logo.1.png" alt="&amp;lt;/&amp;gt; htmx" title="high power tools for HTML"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;high power tools for HTML&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://htmx.org/discord" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e8a1cc18e105a260610b9a3aae188d24da3e369ed8cf2cdfa5fe99268f7044bb/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f373235373839363939353237393333393532" alt="Discord"&gt;&lt;/a&gt;
&lt;a href="https://app.netlify.com/sites/htmx/deploys" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/27e33042040a920b02b4ae2624ad08f02a01f35f0cc16b93b83d2b816f4141ca/68747470733a2f2f696d672e736869656c64732e696f2f6e65746c6966792f64626133666338352d643963392d343736612d613335612d653532613633326365663738" alt="Netlify"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=htmx.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3fc614061d34d8d7289f4fd93744e76fd024828d06de3668b8c785480ad413e/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f646570656e64656e63792d636f756e742f68746d782e6f7267" alt="Bundlephobia"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=htmx.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/04c42e3c2427879b9827f72d872350310bbe4864b8e6242a88a1b52bac07cef7/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f68746d782e6f7267" alt="Bundlephobia"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
introduction&lt;/h2&gt;
&lt;p&gt;htmx allows you to access  &lt;a href="https://htmx.org/docs#ajax" rel="nofollow"&gt;AJAX&lt;/a&gt;, &lt;a href="https://htmx.org/docs#css_transitions" rel="nofollow"&gt;CSS Transitions&lt;/a&gt;
&lt;a href="https://htmx.org/docs#websockets" rel="nofollow"&gt;WebSockets&lt;/a&gt; and &lt;a href="https://htmx.org/docs#sse" rel="nofollow"&gt;Server Sent Events&lt;/a&gt;
directly in HTML, using &lt;a href="https://htmx.org/reference#attributes" rel="nofollow"&gt;attributes&lt;/a&gt;, so you can build
&lt;a href="https://htmx.org/examples" rel="nofollow"&gt;modern user interfaces&lt;/a&gt; with the &lt;a href="https://en.wikipedia.org/wiki/HATEOAS" rel="nofollow"&gt;simplicity&lt;/a&gt; and
&lt;a href="https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm" rel="nofollow"&gt;power&lt;/a&gt; of hypertext&lt;/p&gt;
&lt;p&gt;htmx is small (&lt;a href="https://unpkg.com/htmx.org/dist/" rel="nofollow"&gt;~10k min.gz'd&lt;/a&gt;)
&lt;a href="https://github.com/bigskysoftware/htmx/blob/master/package.json"&gt;dependency-free&lt;/a&gt;
&lt;a href="https://htmx.org/extensions" rel="nofollow"&gt;extendable&lt;/a&gt; &amp;amp;
IE11 compatible&lt;/p&gt;
&lt;h2&gt;
motivation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Why should only &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; be able to make HTTP requests?&lt;/li&gt;
&lt;li&gt;Why should only &lt;code&gt;click&lt;/code&gt; &amp;amp; &lt;code&gt;submit&lt;/code&gt; events trigger them?&lt;/li&gt;
&lt;li&gt;Why should only GET &amp;amp; POST be available?&lt;/li&gt;
&lt;li&gt;Why should you only be able to replace the &lt;em&gt;entire&lt;/em&gt; screen?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By removing these arbitrary constraints htmx completes HTML as a
&lt;a href="https://en.wikipedia.org/wiki/Hypertext" rel="nofollow"&gt;hypertext&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
quick start&lt;/h2&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;  &lt;span class="pl-c"&gt;&amp;lt;!-- Load from unpkg --&amp;gt;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://unpkg.com/htmx.org@1.4.0&lt;/span&gt;" &lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;&amp;lt;!-- have a button POST a click via AJAX --&amp;gt;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;button&lt;/span&gt; &lt;span class="pl-c1"&gt;hx-post&lt;/span&gt;="&lt;span class="pl-s"&gt;/clicked&lt;/span&gt;" &lt;span class="pl-c1"&gt;hx-swap&lt;/span&gt;="&lt;span class="pl-s"&gt;outerHTML&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
    Click Me
  &lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;button&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;The‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bigskysoftware/htmx"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#10-vuestic-ui"&gt;
  &lt;/a&gt;
  10. Vuestic UI
&lt;/h3&gt;

&lt;p&gt;Free and Open Source UI Library for Vue 3&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/epicmaxco"&gt;
        epicmaxco
      &lt;/a&gt; / &lt;a href="https://github.com/epicmaxco/vuestic-ui"&gt;
        vuestic-ui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Free and Open Source UI Library for Vue 3 ü§ò
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
    &lt;a href="https://vuestic.dev" rel="nofollow"&gt;
        &lt;img alt="Vuestic UI Logo" width="500" src="https://res.cloudinary.com/practicaldev/image/fetch/s--05zg_iss--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/epicmaxco/vuestic-ui/develop/./packages/ui/src/assets/vuestic-ui-logo.png"&gt;
    &lt;/a&gt;
        &lt;br&gt;
    Vue.js 3.0 UI Library
    &lt;br&gt;
    Developed by &lt;a href="https://epicmax.co" rel="nofollow"&gt;Epicmax&lt;/a&gt;. Designed by
    &lt;a href="https://xxsavitski.com/" rel="nofollow"&gt;Vasili Savitski&lt;/a&gt;
    &lt;br&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;a href="https://app.circleci.com/pipelines/github/epicmaxco/vuestic-ui" rel="nofollow"&gt;
      &lt;img src="https://camo.githubusercontent.com/996783b1ec3cd470b5b7294407929329dcb6f79ce4210724ef5a137024625413/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f6275696c642f6769746875622f657069636d6178636f2f767565737469632d75692f646576656c6f70" alt="CI badge"&gt;
    &lt;/a&gt;
    &lt;a href="https://github.com/epicmaxco/vuestic-ui/blob/develop/LICENSE.MD"&gt;
      &lt;img src="https://camo.githubusercontent.com/593cd9bc275e0f79b962c1419c99a532c34c6d1a50cdf7727ddf3fd450b3c75e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f767565737469632d75692e737667" alt="License"&gt;
    &lt;/a&gt;
    &lt;a href="https://www.npmjs.com/package/vuestic-ui" rel="nofollow"&gt;
      &lt;img src="https://camo.githubusercontent.com/310781ddb643fb108035db5a1e25a42e7e9ff240ad5dca5248a97da50bbcdf35/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7061636b6167652d6a736f6e2f762f657069636d6178636f2f767565737469632d7569" alt="Version"&gt;
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;a href="https://vuestic.dev/" rel="nofollow"&gt;Documentation&lt;/a&gt;
    |
    &lt;a href="https://discord.gg/u7fQdqQt8c" rel="nofollow"&gt;Discord&lt;/a&gt;
  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Vuestic UI is forever free and open to contributions. See our
&lt;a href="https://github.com/epicmaxco/vuestic-ui/issues"&gt;issues&lt;/a&gt;
&lt;a href="https://vuestic.dev/en/contribution/guide" rel="nofollow"&gt;contributing guide&lt;/a&gt; and join discussions on our
&lt;a href="https://discord.gg/u7fQdqQt8c" rel="nofollow"&gt;Discord&lt;/a&gt; to help us improve Vuestic UI experience.&lt;/p&gt;
&lt;/blockquote&gt;
  &lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/epicmaxco/vuestic-ui/develop/./packages/ui/src/assets/vuestic-ui-image.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fE5kz4jf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/epicmaxco/vuestic-ui/develop/./packages/ui/src/assets/vuestic-ui-image.jpg"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;h3&gt;
Why use Vuestic UI?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Vue.js 3.0 compatible&lt;/li&gt;
&lt;li&gt;MIT license&lt;/li&gt;
&lt;li&gt;Feature-rich: more than 52 customizable components&lt;/li&gt;
&lt;li&gt;Two built-in color scheme presets&lt;/li&gt;
&lt;li&gt;Powerful configurations
&lt;ul&gt;
&lt;li&gt;Local - configure components in-depth&lt;/li&gt;
&lt;li&gt;Global - configure framework overall&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cross-browser and responsive&lt;/li&gt;
&lt;li&gt;i18n-ready&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Installation&lt;/h3&gt;
&lt;p&gt;First, make sure you have all prerequisites installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://nodejs.org/en/" rel="nofollow"&gt;Node.js&lt;/a&gt; ( &amp;gt;=14.*)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/get-npm" rel="nofollow"&gt;npm&lt;/a&gt; version 3+ (
or &lt;a href="https://yarnpkg.com/lang/en/docs/install" rel="nofollow"&gt;yarn&lt;/a&gt; version 1.16+)
and &lt;a href="https://git-scm.com" rel="nofollow"&gt;Git&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After checking the prerequisites, install Vuestic UI via npm/yarn:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install vuestic-ui
//or
yarn add vuestic-ui&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Quick start&lt;/h3&gt;
&lt;p&gt;Make sure you're imported both styles and plugin into your entry file:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;//main.js&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;createApp&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'vue'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;App&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'./App.vue'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;VuesticPlugin&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'vuestic-ui'&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/epicmaxco/vuestic-ui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing üìà
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/appwrite/appwrite"&gt;Appwrite&lt;/a&gt; +1,890 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +1,234 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cdr/code-server"&gt;code-server&lt;/a&gt; +1,103 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/withfig/autocomplete"&gt;Fig&lt;/a&gt; +926 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +908 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/cassiozen/useStateMachine"&gt;useStateMachine&lt;/a&gt; +164%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/withfig/autocomplete"&gt;Fig&lt;/a&gt; +69%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/appwrite/appwrite"&gt;Appwrite&lt;/a&gt; +27%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/FormidableLabs/renature"&gt;renature&lt;/a&gt; +7%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hauptrolle/chakra-templates"&gt;Chakra TemplatesÔ∏è&lt;/a&gt; +7%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +5,557 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +5,500 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +3,678 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nextapps-de/winbox"&gt;WinBox.js&lt;/a&gt;  +3,668 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +3,609 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/nextapps-de/winbox"&gt;WinBox.js&lt;/a&gt; +653%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/github/github-elements"&gt;github-elements&lt;/a&gt; +160%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/withfig/autocomplete"&gt;Fig&lt;/a&gt; +159%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/supabase/realtime"&gt;Supabase Realtime&lt;/a&gt; +42%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/supabase/supabase"&gt;Supabase&lt;/a&gt; +36%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Introduction to Promises in JavaScript.</title>
      <author>Abhishek Jain</author>
      <pubDate>Fri, 28 May 2021 13:46:15 +0000</pubDate>
      <link>https://dev.to/abhishekjain35/introduction-to-promises-in-javascript-3cd4</link>
      <guid>https://dev.to/abhishekjain35/introduction-to-promises-in-javascript-3cd4</guid>
      <description>&lt;p&gt;I promise that you will have a good understanding of promises by the end of the article üòÅ.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-promise"&gt;
  &lt;/a&gt;
  What is a Promise
&lt;/h2&gt;

&lt;p&gt;A promise in javascript is just like a promise we make in our lives. It refers to an event that will occur in the future.&lt;br&gt;
Promises in javascript are used to handle asynchronous operations. Promises have three possible states -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pending (Initial State)&lt;/li&gt;
&lt;li&gt;Fulfilled (Successful)&lt;/li&gt;
&lt;li&gt;Rejected (Failed)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cmHD6qIB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gokowel8p73wuh407x87.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cmHD6qIB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gokowel8p73wuh407x87.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we make a promise, its state will be pending till either it is fulfilled or rejected. If fulfilled, its value will be the value it resolves with, and if it encounters any error, its value will be the value it rejects with (the error object).&lt;/p&gt;

&lt;p&gt;For example, when we make API requests to the server, it immediately returns a promise with &lt;em&gt;pending&lt;/em&gt; state. If the API call is successful, the state of promise changes from &lt;strong&gt;pending&lt;/strong&gt; to &lt;strong&gt;fulfilled&lt;/strong&gt;, and if the API request fails, then its state changes from &lt;strong&gt;pending&lt;/strong&gt; to &lt;strong&gt;rejected&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-a-promise-in-javascript"&gt;
  &lt;/a&gt;
  Creating a Promise in Javascript
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promiseExample&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Resolve with Any type of data (objects, arrays, strings, etc...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error description.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So, we can create a promise by using the &lt;code&gt;new Promise()&lt;/code&gt; constructor. It takes a function as an argument. This function takes two callback functions, &lt;code&gt;resolve&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt;. Whenever you want to fulfill the promise, you can call the &lt;code&gt;resolve&lt;/code&gt; callback function and pass the value to it. To reject a promise, call the &lt;code&gt;reject&lt;/code&gt; callback, providing some error message.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#using-the-promise"&gt;
  &lt;/a&gt;
  Using the Promise
&lt;/h2&gt;

&lt;p&gt;We can use the above promise creation example.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#then"&gt;
  &lt;/a&gt;
  .then()
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promiseExample&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Promise Fulfilled.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Promise Rejected.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;promiseExample&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Promise Fulfilled.&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So, the &lt;code&gt;.then()&lt;/code&gt; method takes a callback function that executes whenever the promise resolves (or is fulfilled). The callback itself takes a parameter to store the actual result returned from the promise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;.then&lt;/code&gt; also takes a second parameter, a callback function, to handle errors, but there's a better way.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#catch"&gt;
  &lt;/a&gt;
  .catch()
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promiseExample&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Promise Rejected.&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;.catch()&lt;/code&gt; method also takes a callback that executes whenever the promise rejects (or fails). This callback takes an error parameter to catch the error information.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#chaining-of-promises"&gt;
  &lt;/a&gt;
  Chaining of Promises
&lt;/h2&gt;

&lt;p&gt;Suppose we have to perform multiple asynchronous tasks. In that case, we use promise chaining.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Resolve promise after 1 sec&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promiseExample&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;data of 1st Promise&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;promiseExample&lt;/span&gt;
  &lt;span class="c1"&gt;// 1st .then()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;dataOfFirstPromise&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dataOfFirstPromise&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// data of 1st Promise&lt;/span&gt;

    &lt;span class="c1"&gt;// simulating API call which resolves after 1 sec.&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;data of 2nd Promise&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="c1"&gt;// 2nd .then()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;dataOfSecondPromise&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dataOfSecondPromise&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// data of 2nd Promise&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Few things to note here - &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;.then()&lt;/code&gt; and &lt;code&gt;.catch()&lt;/code&gt; methods always returns a promise so that we can again use &lt;code&gt;.then()&lt;/code&gt; and &lt;code&gt;.catch()&lt;/code&gt; on them and chain the promises.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the above example, we use two &lt;code&gt;.then()&lt;/code&gt; methods. So, to consume the result of the first &lt;code&gt;.then()&lt;/code&gt; method, we always need to return that value from it. In this case, we &lt;code&gt;return&lt;/code&gt; a promise from the first &lt;code&gt;.then()&lt;/code&gt; method.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We use &lt;code&gt;.catch()&lt;/code&gt; to catch the error if it occurs in any of the promises. This is the main reason we use &lt;code&gt;.catch()&lt;/code&gt; instead of the second parameter of &lt;code&gt;.then()&lt;/code&gt;. The &lt;code&gt;.catch()&lt;/code&gt; method always catches the error either if it occurs in promise or the &lt;code&gt;.then()&lt;/code&gt; method.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the above example, we first create a promise which resolves after 1 second. After that, we call &lt;code&gt;.then&lt;/code&gt; on the promise and get the result of the first promise in parameter &lt;code&gt;dataOfFirstPromise&lt;/code&gt;. Now, if we want to fire another API request only after the 1st promise resolves, we can do that here. So we simulate API request with 2nd promise that resolves after 1 second, and we can get the result of 2nd promise in the 2nd &lt;code&gt;.then()&lt;/code&gt; method. You can chain as many &lt;code&gt;.then() 's and&lt;/code&gt;.catch() 's as you want.&lt;/p&gt;

&lt;p&gt;That is all about Promise chaining.&lt;/p&gt;

&lt;p&gt;Well, this was a brief introduction to promises. Thanks for reading.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/13HgwGsXF0aiGY/source.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/13HgwGsXF0aiGY/source.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Quasar Brand Refresh and New Partnership</title>
      <author>Razvan Stoenescu</author>
      <pubDate>Fri, 28 May 2021 13:35:39 +0000</pubDate>
      <link>https://dev.to/quasar/quasar-brand-refresh-and-new-partnership-ao1</link>
      <guid>https://dev.to/quasar/quasar-brand-refresh-and-new-partnership-ao1</guid>
      <description>&lt;p&gt;Hi everyone,&lt;/p&gt;

&lt;p&gt;As part of our journey to improve Quasar with each passing day, &lt;strong&gt;we're proud to announce a new partnership with &lt;a href="https://dreamonkey.com/"&gt;Dreamonkey&lt;/a&gt;&lt;/strong&gt; (who is also an important sponsor of our framework).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Dreamonkey Team will be helping us with the next steps in the evolution of Quasar&lt;/strong&gt; and in particular refreshing its brand and supporting content, which in turn will help everyone better understand what Quasar is, how it works, and how it can benefit you and the company you work for. &lt;/p&gt;

&lt;p&gt;Getting everyone to this understanding is not an easy task, as Quasar is not the everyday, run-of-the-mill Vue framework that you often come across. Nope. Quasar not only entails an extensive set of performance-oriented components and directives (the Quasar UI library). It also supplies a massive build architecture (with the Quasar CLI), which will get you and your ideas up and running and building apps in record time. The CLI starts with an awesome development experience and ends with deployment builds for practically any platform (i.e. SPA/SSR - PWA/SSR - Hybrid Mobile with Cordova or Capacitor - Desktop with Electron - and even BEX - Browser Extensions). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We've had this (successful) approach for a few years and we can ensure that all of the parts work together flawlessly and with incredible performance, yet final builds with all of the best practices in modern web development built-in and with the smallest possible package footprint&lt;/strong&gt;. All of our efforts with the CLI allows you to focus on the functionality of your products, instead of the often complex marriage and compatibility of the underlying technologies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quasar has partnered with Dreamonkey in our endeavor to better express why Quasar is one of the best alternatives to frontend application development out there&lt;/strong&gt;, along with expressing what our core values and principles are. &lt;/p&gt;

&lt;p&gt;Aside from the great cooperation we have with Dreamonkey, we also have a progressive rollout schedule in place. So stay tuned for lots of exciting new things in the coming weeks. We'll start with an improved logo and brand guide and work our way up to significant improvements to the Quasar docs website, which will help developers learn to use ALL of Quasar's exceptional value.&lt;/p&gt;

&lt;p&gt;You can read more about how Dreamonkey designed the new logo and more brand-related insights by reading their &lt;a href="https://dreamonkey.com/en/blog/the-new-official-quasar-logo"&gt;press release article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We have more exciting announcements to make for this quarter&lt;/strong&gt;. Along with the brand updates, we have some interesting times ahead for Quasar and we'd love to take you all with us on our incredible journey to make Quasar the best frontend application framework ever. ;)&lt;/p&gt;

&lt;p&gt;-&lt;br&gt;
Razvan Stoenescu, creator and team lead of Quasar Framework&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
