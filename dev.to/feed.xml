<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How To Improve Your Programming Skills As Developers and Non-Developers</title>
      <author>jenniferfu0811</author>
      <pubDate>Wed, 03 Nov 2021 09:13:09 +0000</pubDate>
      <link>https://dev.to/jenniferfu0811/how-to-improve-your-programming-skills-as-developers-and-non-developers-38f2</link>
      <guid>https://dev.to/jenniferfu0811/how-to-improve-your-programming-skills-as-developers-and-non-developers-38f2</guid>
      <description>&lt;p&gt;Whether you’re a developer, designer, or even a marketing specialist, learning how to code and improving your programming skills can be critical to your career growth. With that said, the path you take to improve your technical knowledge will differ based on your background and familiarity with programming. &lt;/p&gt;

&lt;p&gt;In this blog post, we'll dig into why people from all sorts of backgrounds—especially developers—want to get better at programming and what “getting better at programming” means. We’ll then outline the best ways to learn programming depending on your backgrounds and goals.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-improve-your-programming-skills-what-does-that-mean"&gt;
  &lt;/a&gt;
  Why improve your programming skills? What does that mean?
&lt;/h2&gt;

&lt;p&gt;From personal to work projects, from passion to career, from curiosity to practicality, there are many reasons why you may want to improve your programming skills. While a common reason people choose to learn programming is to become a developer, that is not the only reason. Non-developers, such as designers and business owners, might also want to learn programming to add to their skill set. &lt;/p&gt;

&lt;p&gt;In this article, we’ll look at three groups of people who may want to improve their programming skills:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Developers from all levels of seniority&lt;/li&gt;
&lt;li&gt;Students and aspiring developers&lt;/li&gt;
&lt;li&gt;Non-developers (e.g. designers, marketers, business analysts, etc.).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To help you figure out how to improve your skills, we want to expand on what improving your programming skills might mean. We ran a survey to better understand what people mean when they say they want to “improve their programming skills” and will use that as a starting point. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pnmpvHxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/b4950714-54bd-49f1-b3ed-7cd1fe861e5d/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pnmpvHxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/b4950714-54bd-49f1-b3ed-7cd1fe861e5d/" alt="improve programming skills" width="880" height="406"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As shown above, the top three scenarios people need help with to get better at programming are: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get hands-on guidance to solve specific tasks or eliminate blockers&lt;/li&gt;
&lt;li&gt;Learn basic programming skills&lt;/li&gt;
&lt;li&gt;Deepen my understanding of technical concepts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first scenario applies to &lt;em&gt;both developers and non-developers&lt;/em&gt;, the second scenario to &lt;em&gt;students, aspiring developers, and non-developers&lt;/em&gt;, and the third scenario to &lt;em&gt;mid-level and senior developers&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let's dig deeper into each scenario to see which scenario fits your needs best.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-handson-guidance-to-help-me-solve-specific-tasks-or-eliminate-blockers"&gt;
  &lt;/a&gt;
  Get hands-on guidance to help me solve specific tasks or eliminate blockers
&lt;/h3&gt;

&lt;p&gt;Developers, regardless of seniority, usually look for targeted learning that caters to specific problems or blockers they’re facing. They seek out coding mentors to &lt;strong&gt;show them how to identify and solve problems so that they can do it themselves in the future.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I can watch how they solve my issue and then when I have a similar issue I can solve it by myself. - Robert, bachelor’s student in Computer Science&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What about non-developers? Their intentions are almost identical to that of developers, regardless of whether they’re business analysts, marketing specialists, UX designers, or even CEOs. They have specific projects they’re working on and the project requires programming skills that are beyond their current abilities. Rather than simply outsourcing their projects, these users want to learn programming languages that’ll give them more autonomy and power to deliver  projects and strengthen their careers.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By working with my mentors I learned how to approach the problems and find solutions to them. - Philip, Founder and Product Manager&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#learn-basic-coding-skills"&gt;
  &lt;/a&gt;
  Learn basic coding skills
&lt;/h3&gt;

&lt;p&gt;Another major user group is aspiring programmers who identify as students, at the beginning of their coding journey. Oftentimes, these are students who are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;getting a Bachelor’s or Master’s degree in Computer Science&lt;/li&gt;
&lt;li&gt;taking online classes, or &lt;/li&gt;
&lt;li&gt;in coding bootcamps.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of the above provide coding lessons and coding training. However, many students still look for mentor, despite having professors, peers, and sometimes, even mentors to assist them in their coding bootcamps. Jared, a current coding bootcamp student, explained why he sought mentorship outside of his bootcamp:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We’re assigned a mentor but we’re usually only able to talk with them once a week. It’s hard to get help immediately when I’m stuck. Another thing is that my mentor doesn’t always know what I’m struggling with and they only assist with projects and concepts that are taught in the syllabus. I feel like mentors here can identify what I &lt;strong&gt;really really need to know&lt;/strong&gt; to be able to become a good developer in the real world.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What &lt;a href="//https:www.codementor.io?ref=ImproveProgrammingDevTo"&gt;1-on-1 mentorships&lt;/a&gt; provide that other structured courses don’t provide include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Personalized diagnoses from senior developers&lt;/li&gt;
&lt;li&gt;Individualized coding training based on one’s existing knowledge&lt;/li&gt;
&lt;li&gt;Track your progress, provide you with extra resources, and tailor your learning experience as you grow&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In other words, students use mentorship as an additional resource to enhance their learning experience. The mentorship relationship often extends beyond their programs as students eventually become developers, and continue to grow and learn through &lt;a href="https://www.codementor.io/long-term-experts?ref=ImproveProgrammingDevTo"&gt;long-term mentorships&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deepen-my-understanding-of-technical-concepts"&gt;
  &lt;/a&gt;
  Deepen my understanding of technical concepts
&lt;/h3&gt;

&lt;p&gt;Last but not least, a lot of developers want to deepen their understanding of technical concepts. Some of the questions and requests developers post include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Would like to meet weekly to discuss process in iOS dev, clarifying principles in Swift&lt;/li&gt;
&lt;li&gt;Help learning Vue.js and advanced JavaScript, also help with backend&lt;/li&gt;
&lt;li&gt;Need someone to personally coach me DS Algorithms in Java&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, many programmers in this category already have some understanding of the tech stacks and technology they’re working with but want to take their skills to the next level. &lt;/p&gt;

&lt;p&gt;For mid-level developers, structured courses are unhelpful as they’re looking to dive deep into specific areas not typically covered by online classes or bootcamps. Through working directly with coding mentors, the learning process can be tailored to each developer’s needs.&lt;/p&gt;

&lt;p&gt;With all that said, we want to highlight some ways to help you improve your programming skills, depending on which stage of the coding journey you’re at and what your goals are.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview-of-different-ways-to-improve-your-programming-skills"&gt;
  &lt;/a&gt;
  Overview of different ways to improve your programming skills
&lt;/h2&gt;

&lt;p&gt;Different people learn differently. Depending on your skill level, goals, and availability, you may want to consider coding training that is structured, semi-structured, or unstructured. Generally speaking, structured learning is most suitable for aspiring developers, semi-structured learning is more fitting for non-developers, and unstructured learning is more effective for mid to senior level developers. We’ll talk more about which approach may fit you better and what resources are available to you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#structured-learning"&gt;
  &lt;/a&gt;
  Structured Learning
&lt;/h3&gt;

&lt;p&gt;If you don’t have any coding foundation and want to become a developer, structured and comprehensive coding training that has dedicated instructors, detailed projects, and hard deadlines may be the most effective for you. These programs are highly intensive, require high levels of commitment, and can be quite pricey. Your options include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Four-year or two-year degrees from universities and community colleges&lt;/li&gt;
&lt;li&gt;Coding certification programs&lt;/li&gt;
&lt;li&gt;Online or in-person coding bootcamps. Some examples include:

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Software Development (Web Development)&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Codesmith: Full-time Software Engineering Immersive (USD $19,350)&lt;/li&gt;
&lt;li&gt;Tech Elevator: Coding Bootcamp Program (USD $15,950)&lt;/li&gt;
&lt;li&gt;Hack Reactor: Coding Bootcamp (USD $17,980)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mobile Applications Development&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;The Tech Academy: Mobile App Developer Bootcamp ($9,540 - $11,900)&lt;/li&gt;
&lt;li&gt;Devmountain: iOS Development Course ($7,900)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If becoming a software developer and pursuing full-time programming careers are not your goals, a comprehensive bootcamp may be an overkill. Instead, you can choose semi-structured learning that aligns with your needs and goals. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#semistructured-learning"&gt;
  &lt;/a&gt;
  Semi-Structured Learning
&lt;/h3&gt;

&lt;p&gt;If you simply want to learn one or two programming languages or tech stacks, online courses are a good alternative as they often focus on specific topics and languages. Most online courses are semi-structured, meaning you will be given a syllabus and structured lessons, but no dedicated instructors, hard deadlines, and sometimes, not even hands-on projects. You’ll have more freedom but less guidance and built-in accountability. If this sounds like something you prefer, here are some examples:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data Science&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Harvard University’s online courses&lt;/li&gt;
&lt;li&gt;Udacity&lt;/li&gt;
&lt;li&gt;Datacamp&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frontend Development&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Udemy&lt;/li&gt;
&lt;li&gt;FreeCodeCamp&lt;/li&gt;
&lt;li&gt;Khan Academy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Backend Development&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FreeCodeCamp &lt;/li&gt;
&lt;li&gt;University of Michigan’s online courses&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Coding courses online are accessible and flexible. However, there are some possible downsides:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The courses can sometimes be outdated&lt;/li&gt;
&lt;li&gt;There is little to no accountability &lt;/li&gt;
&lt;li&gt;May be too theory-heavy with little focus on application&lt;/li&gt;
&lt;li&gt;No available mentors to reach out to when questions arise&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you do choose semi-structured courses, we’d suggest &lt;a href="//https:www.codementor.io?ref=ImproveProgrammingDevTo"&gt;finding a mentor&lt;/a&gt; to help guide you along the way. You can take full control over your learning by asking a coding mentor to explain concepts that are hard to grasp, keep you accountable, and provide you with hands-on guidance on how to apply the theories in real-world settings.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unstructured-learning"&gt;
  &lt;/a&gt;
  Unstructured Learning
&lt;/h3&gt;

&lt;p&gt;If you’re starting from scratch, we wouldn’t suggest going the unstructured route. While there is a plethora of coding resources available, it can be hard to know where to start. Without a solid foundation or a good grasp of the help or answer you’re looking for, finding the right books, blog posts, and YouTube videos can be like searching for a needle in a haystack. Even worse, you could go down a rabbit hole that may be misleading.&lt;/p&gt;

&lt;p&gt;With that said, unstructured learning is the most common way experienced developers continue to grow their programming skills. Developers are known to be resourceful, community-oriented, and driven learners. If you already have the foundations you need and know what you’re looking for, here are some generic resources you may find useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Stack Overflow&lt;/li&gt;
&lt;li&gt;GitHub

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/lauragift21/awesome-learning-resources"&gt;Awesome Learning Resources&lt;/a&gt; (lauragift21)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/GDGAhmedabad/Awesome-Learning-Resources"&gt;Awesome Learning Resources&lt;/a&gt; (GDGAhmedabad)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ashleymcnamara/learn_to_code"&gt;Learn to code&lt;/a&gt; (ashleymcnamara)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Xtremilicious/projectlearn-project-based-learning"&gt;ProjectLearn: Project Based Learning&lt;/a&gt; (Xtremilicious)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Reddit

&lt;ul&gt;
&lt;li&gt;r/learnprogramming&lt;/li&gt;
&lt;li&gt;r/ProgrammingBuddies&lt;/li&gt;
&lt;li&gt;r/cscareerquestions&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;YouTube&lt;/li&gt;
&lt;li&gt;Projects &amp;amp; games

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codementor.io/projects?ref=ImproveProgrammingDevTo"&gt;DevProjects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Conferences and webinars&lt;/li&gt;
&lt;li&gt;Meetups&lt;/li&gt;
&lt;li&gt;Book Clubs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With a solid enough foundation, you can find any resource that’ll help you learn. However, as you grow as a developer, you'll also have less time dedicated to learning new technologies. This is where coding mentors could be helpful. &lt;/p&gt;

&lt;p&gt;Richa, a senior developer with 13+ years of experience said:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I am a developer and trying to learn more tech stacks. Now there's just not enough time to schedule a time for dedicated learning like I used to do during my learning days 13 years ago. Pair programming sessions at Codementor have reduced that learning time dramatically for me. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Communities like Stack Overflow, dev.to, and GitHub are crucial to the continuous growth of every developer and coding mentors can help you navigate through the programming knowledge shared in these communities.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#will-working-with-a-mentor-help-improve-my-programming-skills"&gt;
  &lt;/a&gt;
  Will working with a mentor help improve my programming skills?
&lt;/h2&gt;

&lt;p&gt;We’ve briefly discussed the benefits of having a coding mentor in your coding journey throughout the process but what is coding mentorship? Coding mentors are senior developers who act as your advisor and coach to help you learn new technologies, personal skills, and career guidance.&lt;/p&gt;

&lt;p&gt;Here are some hard and soft skills that coding mentors can provide:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Help kickstart your programming professional development &lt;/li&gt;
&lt;li&gt;Understand your unique pain points and cater to your individual needs&lt;/li&gt;
&lt;li&gt;Impart knowledge and wisdom through their working and coding experience&lt;/li&gt;
&lt;li&gt;Hold you accountable to achieve your goals&lt;/li&gt;
&lt;li&gt;Discover and hone your leadership skills&lt;/li&gt;
&lt;li&gt;Boost your confidence and problem-solving abilities&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Regardless of whether you decide to take the structured, semi-structured, or unstructured route to learn how to code and reach your goals, having a &lt;a href="//https:www.codementor.io?ref=ImproveProgrammingDevTo"&gt;coding mentor&lt;/a&gt; (or two!) can help you grow technically, personally, and professionally.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;There is no right way to go about learning how to code just as there is also no right track for those who choose to learn to code. &lt;/p&gt;

&lt;p&gt;If you’re figuring out which learning style is the best for you, one of the most important things is to identify what your goal is. Once you’ve identified your short term and long term goals, you can mix and match the learning styles that fit your needs the best.&lt;/p&gt;

&lt;p&gt;If you’re unsure what you need to achieve your goals, finding a mentor is a great place to start. Mentors can help you identify and clarify your goals. They would also provide you with the best resource to help you learn according to your skill level and learning style. &lt;/p&gt;

&lt;p&gt;There is no cookie cutter approach and no shortcut to improve your programming skills. Getting the results and reaching the goals you have takes strategizing and the right kind of help. We hope this article will help you find what suits you best.&lt;/p&gt;

&lt;p&gt;If you have any questions, thoughts, or experience to share about honing your programming skills, leave a comment below!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>career</category>
    </item>
    <item>
      <title>How to Promote Yourself as a Freelance Web Designer on Social Media</title>
      <author>Kyle Prinsloo</author>
      <pubDate>Wed, 03 Nov 2021 08:18:12 +0000</pubDate>
      <link>https://dev.to/study_web_dev/how-to-promote-yourself-as-a-freelance-web-designer-on-social-media-5baf</link>
      <guid>https://dev.to/study_web_dev/how-to-promote-yourself-as-a-freelance-web-designer-on-social-media-5baf</guid>
      <description>&lt;p&gt;The &lt;a href="https://blog.hubspot.com/marketing/web-design-stats-for-2020"&gt;website design industry&lt;/a&gt; is expected to generate over $40 billion in the US alone this year.&lt;/p&gt;

&lt;p&gt;And that number is only going to increase.&lt;/p&gt;

&lt;p&gt;But with that increase, comes more competition :)&lt;/p&gt;

&lt;p&gt;So, how will you promote yourself as a &lt;a href="https://studywebdevelopment.com/start-freelance-web-design-business.html"&gt;Freelance Web Designer&lt;/a&gt; to stand out from others?&lt;/p&gt;

&lt;p&gt;There are so many ways, but in this article I'll walk through using social media.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#promoting-yourself-on-different-social-media-networks"&gt;
  &lt;/a&gt;
  Promoting Yourself on Different Social Media Networks
&lt;/h1&gt;

&lt;p&gt;Social media has provided us with great opportunities, one of which is the opportunity for free promotion. It can be a decisive part of your success, but &lt;a href="https://studywebdevelopment.com/branding-freelance-developer.html"&gt;marketing yourself&lt;/a&gt; is often a challenge for many freelancers.&lt;/p&gt;

&lt;p&gt;Let's get started:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#facebook"&gt;
  &lt;/a&gt;
  Facebook
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Create a business page focused on freelancing/your agency.&lt;/li&gt;
&lt;li&gt;What do you post? Share what you're working on.&lt;/li&gt;
&lt;li&gt;Share videos/screen recordings of web design tips for businesses.&lt;/li&gt;
&lt;li&gt;Join Facebook groups in your desired niche or create your own one, then eventually promote your services.&lt;/li&gt;
&lt;li&gt;Promote your client testimonials - you can boost the posts.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#twitter"&gt;
  &lt;/a&gt;
  Twitter
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Optimize your bio and header image to be focused on what business owners want to see. Are you available for work? Say so.&lt;/li&gt;
&lt;li&gt;Post daily tips on what businesses could do to improve their sales.&lt;/li&gt;
&lt;li&gt;Share your work. That's what &lt;a href="https://twitter.com/dan_spratling"&gt;Dan&lt;/a&gt; does, and he's dominating it.&lt;/li&gt;
&lt;li&gt;Engage with other business/web design tweets.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#linkedin"&gt;
  &lt;/a&gt;
  LinkedIn
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Complete and optimize your profile.&lt;/li&gt;
&lt;li&gt;Connect with relevant business owners or your desired niche.&lt;/li&gt;
&lt;li&gt;Post tips and share what you're working on.&lt;/li&gt;
&lt;li&gt;Use the InMail ads to get client leads - these are effective (if done right).&lt;/li&gt;
&lt;li&gt;Apply &lt;a href="https://www.youtube.com/watch?v=SG5Sb5WTV_g"&gt;Danny's tips&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#instagram"&gt;
  &lt;/a&gt;
  Instagram
&lt;/h1&gt;

&lt;p&gt;With a massive number of daily active users, Instagram is a perfect platform for website designers since it's an image-based platform.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make sure it's clear business owners can hire you in your bio.&lt;/li&gt;
&lt;li&gt;Post helpful carousel tips for businesses.&lt;/li&gt;
&lt;li&gt;Create short stories with your tips.&lt;/li&gt;
&lt;li&gt;Record your design process and talk about it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#youtube"&gt;
  &lt;/a&gt;
  YouTube
&lt;/h1&gt;

&lt;p&gt;YouTube is great for showcasing your knowledge and expertise and it's also a good SEO platform to help your content rank on Google.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create videos on what businesses want to learn about, like how to grow their business with web design + marketing, etc.&lt;/li&gt;
&lt;li&gt;Showcase your case studies on what you've done for other business and their results, then promote it.&lt;/li&gt;
&lt;li&gt;Talk about your design process and common mistakes businesses make that costs them $.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#tiktok"&gt;
  &lt;/a&gt;
  TikTok
&lt;/h1&gt;

&lt;p&gt;TikTok is booming, so it's a good platform to be on if you're good at video.&lt;/p&gt;

&lt;p&gt;These are short videos, but you can follow the same guideline as YouTube above.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#other-platforms"&gt;
  &lt;/a&gt;
  Other Platforms
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#behance"&gt;
  &lt;/a&gt;
  Behance
&lt;/h2&gt;

&lt;p&gt;If your design skills are next level, you need to showcase it, and Behance is a great platform to do this.&lt;/p&gt;

&lt;p&gt;Many clients reach out to top talent there, so share your work and watch the leads come in!&lt;/p&gt;

&lt;p&gt;Present it the best way possible, and you can do that by showing your process. To grow your engagement, make sure you appreciate others' work by commenting and liking them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quora"&gt;
  &lt;/a&gt;
  Quora
&lt;/h2&gt;

&lt;p&gt;Promoting yourself is like building up your reputation. Many business owners, thought leaders, and industry experts are using this platform to build their reputations.&lt;/p&gt;

&lt;p&gt;Through Quora, you can showcase your expertise in website design since it is one of the most prominent Question &amp;amp; Answer sites on the web. If you want a quality, generic, and reliable results, Quora is an ideal platform for that.&lt;/p&gt;

&lt;p&gt;In fact, my brother, who is also a freelancer, got a few clients from being active here.&lt;/p&gt;

&lt;p&gt;All he does is replies to business owner questions - as simple as that!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#other-ways-to-promote-yourself-as-a-freelance-web-designer"&gt;
  &lt;/a&gt;
  Other Ways to Promote Yourself as a Freelance Web Designer
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#create-a-portfolio"&gt;
  &lt;/a&gt;
  Create A Portfolio
&lt;/h2&gt;

&lt;p&gt;Relevant skills and abilities are the keys to getting the right clients. An online portfolio website allows you to show what you've done, not just tell what you can do.&lt;/p&gt;

&lt;p&gt;The advantages a professional portfolio gives you are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It helps build your credibility&lt;/li&gt;
&lt;li&gt;It can set you apart from other website designers.&lt;/li&gt;
&lt;li&gt;It helps people visualize working with you.&lt;/li&gt;
&lt;li&gt;It shows consistency between what you do and what you say.&lt;/li&gt;
&lt;li&gt;It gives you the freedom to show your creativity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://studywebdevelopment.com/portfolio-tips-freelance-developer.html"&gt;Read this&lt;/a&gt; for detailed tips on creating a winning portfolio.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-blog"&gt;
  &lt;/a&gt;
  Create A Blog
&lt;/h2&gt;

&lt;p&gt;Starting a blog is another way where you can self-promote.&lt;/p&gt;

&lt;p&gt;The point of having a blog is this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It showcases your expertise.&lt;/li&gt;
&lt;li&gt;It helps with SEO.&lt;/li&gt;
&lt;li&gt;Clients search for a problem, this shows you know the solution.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#networking"&gt;
  &lt;/a&gt;
  Networking
&lt;/h2&gt;

&lt;p&gt;Networking is absolutely a great way to self-promote. Some people don't like stepping out of their comfort zone (I was one of them), but just start small.&lt;/p&gt;

&lt;p&gt;Chat to friends, your local coffee shop owner, and when you get more confident, start attending local business meetups where you can talk to business owners and offer your services.&lt;/p&gt;

&lt;p&gt;There are a lot more ways to get clients, which you can read &lt;a href="https://studywebdevelopment.com/how-to-get-clients-freelance-developer.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Branding and promotion requires confidence.&lt;/p&gt;

&lt;p&gt;Work on your skills, and let your work do the selling for you.&lt;/p&gt;

&lt;p&gt;Now it's time to apply all of this, and get the clients :)&lt;/p&gt;

&lt;p&gt;Until next time,&lt;/p&gt;

&lt;p&gt;Kyle&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>codenewbie</category>
      <category>html</category>
    </item>
    <item>
      <title>Cryptocurrency Exchange Software: Every Thing About It</title>
      <author>sebastian tiger</author>
      <pubDate>Wed, 03 Nov 2021 08:17:09 +0000</pubDate>
      <link>https://dev.to/sebastiantiger6/cryptocurrency-exchange-software-every-thing-about-it-l5e</link>
      <guid>https://dev.to/sebastiantiger6/cryptocurrency-exchange-software-every-thing-about-it-l5e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#cryptocurrency-exchange-software"&gt;
  &lt;/a&gt;
  Cryptocurrency exchange software
&lt;/h2&gt;

&lt;p&gt;A cryptocurrency exchange is a platform where users can trade cryptocurrencies or fiat currency. Currently, the cryptocurrency trading/exchange market is growing has gained the attention of many people and businesses. As the number of people joins the crypto community the demands for exchange platforms will significantly grow because these individuals will need a safe and secure platform for their trading there.&lt;br&gt;
Cryptocurrency exchange software is a software solution for buying, selling, trading, and other actions related to digital assets. The platform should allow users to borrow and lend some funds, for margin trading with ETH/BTC, BTC/EUR, and ETH/USD pairs.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HrD2UtHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5p4np5bai5p3isw7j0j6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HrD2UtHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5p4np5bai5p3isw7j0j6.png" alt="the process of developing crypto exchange software" width="800" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-process-of-cryptocurrency-exchange-development"&gt;
  &lt;/a&gt;
  What is the process of cryptocurrency exchange development?
&lt;/h2&gt;

&lt;p&gt;The steps for developing the best exchange platform:&lt;br&gt;
&lt;strong&gt;Research and analyze&lt;/strong&gt;&lt;br&gt;
the first step is to analyze the current demand for digital currencies to gather the info and make a clear concept of your exchange platform. This will help to predict the measure of the risks in the development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Design&lt;/strong&gt;&lt;br&gt;
The next step is to design the front-end development that is attractive to be engaging for the clients and also be easy to use for any level of clients from a basic person to advanced traders. In recent years the platforms with the best user experience have gained the most considerable trading volume.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Development&lt;/strong&gt;&lt;br&gt;
developers develop a secure cryptocurrency trading platform that is fully functional and useful and it reaches the customers' demands. There are different methods for developing a website that we have mentioned in the following text.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Testing&lt;/strong&gt;&lt;br&gt;
Before launching the platform to the market, do the various test on the platform to be completely trustworthy and secure for the clients to do their transactions. They are going to invest all their hard-earned money into that platform so security comes first.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-we-mention-the-types-of-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  Here we mention the types of cryptocurrency exchange:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Centralized exchange&lt;/strong&gt;: Centralized exchange acts as a mediator during the whole process. They have complete control over the transaction and store the money and funds and purchase the cryptocurrency from the trader's account until the end of the transaction process. Binance is one of the most known centralized exchanges in the world.&lt;br&gt;
&lt;strong&gt;Decentralized exchanges&lt;/strong&gt;: DEX stands for decentralized exchanges. The peer-to-peer exchange has tried to solve the problem of storing the users' funds and assets. In these kinds of exchanges, the traders execute the transactions directly with each other without the presence of a third party.&lt;br&gt;
&lt;strong&gt;Hybrid&lt;/strong&gt;: the hybrid exchange was developed to cover all the problems with the DEX and CEX exchange. It combines all the positive features of centralized and decentralized exchanges. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-important-features-to-build-the-cryptocurrency-exchange-software"&gt;
  &lt;/a&gt;
  What are the important features to build the cryptocurrency exchange software?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Wallets&lt;/strong&gt;: a wallet is a place where traders store their valuable assets. One of the features that any exchange website should pay attention to is the secure and fast wallet. The wallet must support multiple cryptocurrencies that the traders don't need any other wallets.&lt;br&gt;
&lt;strong&gt;Liquidity management&lt;/strong&gt;: The fundamental part of starting any exchanges to start the operation is to arrange the liquidity. A different method can be used to create liquidity. The large volume of trading is a good indicator for crypto exchange, the ability to fulfill the users' order at any time no matter if the order is big or small is a positive aspect.&lt;br&gt;
&lt;strong&gt;Trading engine&lt;/strong&gt;: the trading engine is a feature of any cryptocurrency. The trading engine should have the features like the live chart of the price, volatility index indicators, and calculative tools for professional traders. If the decentralized want to stand out in the market the smart contract and trading engine need to be built. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5RxnQ7PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp5mx7hsv90q5xhoouil.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5RxnQ7PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp5mx7hsv90q5xhoouil.png" alt="crypto exchange app for mobile deveopment" width="800" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#mobile-apps-and-mobile-web-app-development"&gt;
  &lt;/a&gt;
  Mobile apps and mobile web app development
&lt;/h4&gt;

&lt;p&gt;The crypto market is rising itself and the following we have the rise in the number of apps downloads that shows traders are attracted to the crypto apps because they prefer to have access to their account everywhere and every time so besides the cryptocurrency exchange software development as a business owner you have to consider developing a crypto exchange mobile app. So don't miss The opportunity to create your very own crypto exchange platform and its synced mobile application to shine among your competitors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-features-that-a-cryptocurrency-exchange-software-can-have"&gt;
  &lt;/a&gt;
  some features that a Cryptocurrency exchange software can have
&lt;/h3&gt;

&lt;p&gt;Multicurrency support&lt;br&gt;
Backend features&lt;br&gt;
Front end features &lt;br&gt;
Order matching and management &lt;br&gt;
KYC/AML &lt;br&gt;
Margin trading&lt;br&gt;
Hot and cold wallet&lt;br&gt;
Multi-language support&lt;br&gt;
User dashboard&lt;br&gt;
Admin panel &lt;br&gt;
Support various Payment options:&lt;br&gt;
Support deposits in any fiat currency&lt;br&gt;
Support of withdrawals&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#methods-of-developing-an-exchange-website"&gt;
  &lt;/a&gt;
  Methods of developing an exchange website
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Developing from scratch:&lt;/strong&gt;&lt;br&gt;
Develop the website on your own: You decide to develop your exchange from scratch the first thing you need is a team of experts including developers, blockchain experts, and designers then you have to pick a strategy for developing the website. Also, you have to keep in mind you may face some unpredicted problems and bugs so must be ready to fix these problems before launching them to the market. This method will cost less but it's a time-consuming process and because you have to take care of everything it will need a lot of energy and effort. Now if you think you are ready hit the road.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;hire Cryptocurrency Exchange Development Company:&lt;/strong&gt;&lt;br&gt;
you have another choice for developing an exchange software. You can hire one of the trustworthy blockchain development companies to develop your exchange platform for you. Before choosing the company pay attention to the number of their employees, their user's feedback, and check their background by checking the websites they have developed previously. Keep in mind that if you hire a company to develop an exchange for you they have to constantly keep in touch with you and implement your idea into the software, they have to be on time, using the latest technology for developing a website is so important and make sure they provide the customer support after purchase. This method also needs time and money the time it needs vary for each website based on the features and functions you want the website to have. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;White label solutions:&lt;/strong&gt;&lt;br&gt;
 There is another way available for developing an exchange platform and it's using a white label exchange platform. This method is the fastest way to develop an exchange platform. First, let's see what is a white label crypto exchange? The white label exchange is a readymade software that is fully customizable on every side you can change the front end based on the design you have in your mind for your brand also you can add the extra features and functions to your website based on your business requirements. As I mentioned above the white label software is pre-coded so it doesn't need all the time that is needed for developing a website from scratch, I have to add that you can build your exchange platform and launch it to the market in a week. Also one of the advantages of using a white label exchange is that it is pre-tested so the possibility to face the bugs and problems is so low. The only problem with the white label is that you may face some minor limitations in the customization.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8BfP1TSO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp9c0razcamnydedoar0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8BfP1TSO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp9c0razcamnydedoar0.png" alt="crypto exchange software working" width="800" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-crypto-exchange-software-work"&gt;
  &lt;/a&gt;
  How does crypto exchange software work?
&lt;/h2&gt;

&lt;p&gt;The first step is registration, the user provides the required info and signs in to his/her account.&lt;br&gt;
Get an individual crypto wallet&lt;br&gt;
Store the crypto in the wallet and place the sell order.&lt;br&gt;
Sell Order will find its matched buying order&lt;br&gt;
The cryptocurrency will transfer according to the exchange rules &lt;br&gt;
Crypto or that fiat currency is sold  then it will be purchased&lt;br&gt;
The seller can receive the fund from the bank in their preferred currency even the fiat currency.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-security-features-that-you-must-search-for-in-a-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  The security features that you must search for in a cryptocurrency exchange:
&lt;/h3&gt;

&lt;p&gt;Escrow system&lt;br&gt;
DDoS anti denial of service&lt;br&gt;
Jail login&lt;br&gt;
Two-factor authentication &lt;br&gt;
Anti-fraud management&lt;br&gt;
Time out session&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>blockchain</category>
      <category>software</category>
    </item>
    <item>
      <title>code every day with me</title>
      <author>duccanhole</author>
      <pubDate>Wed, 03 Nov 2021 08:01:22 +0000</pubDate>
      <link>https://dev.to/coderduck/code-every-day-with-me-1o8k</link>
      <guid>https://dev.to/coderduck/code-every-day-with-me-1o8k</guid>
      <description>&lt;h2&gt;
  &lt;a href="#day-14"&gt;
  &lt;/a&gt;
  --DAY 14--
&lt;/h2&gt;

&lt;p&gt;Hi, I am going to make #100DaysOfCode Challenge. Everyday I will try solve 1 problem from leetcode or hackerrank. Hope you can go with me until end.&lt;br&gt;
&lt;strong&gt;Now let's solve problem today:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Problem: Pascal's Triangle&lt;/li&gt;
&lt;li&gt;Detail: &lt;a href="https://leetcode.com/problems/pascals-triangle/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;My solution (javascript):
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var generate = function(n) {
    if(n==1) return [[1]];
    if(n==2) return [[1],[1,1]];
    let arr=[[1],[1,1]];
    for(let i=2;i&amp;lt;n;i++){
        arr[i]=[1];
        for(let j=1;j&amp;lt;i;j++){
            arr[i].push(arr[i-1][j-1]+arr[i-1][j]);
        }
        arr[i].push(1);
    }
    return arr;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>programming</category>
      <category>100daysofcode</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>White Label Crypto Exchange</title>
      <author>tara tierreni</author>
      <pubDate>Wed, 03 Nov 2021 07:53:37 +0000</pubDate>
      <link>https://dev.to/tierreni/white-label-crypto-exchange-3fcn</link>
      <guid>https://dev.to/tierreni/white-label-crypto-exchange-3fcn</guid>
      <description>&lt;p&gt;In this guide, we will analyze in detail all the characteristics of White-Label Crypto Exchange.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iyPopKeq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quvyr4zyzpfd589x0h6j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iyPopKeq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quvyr4zyzpfd589x0h6j.png" alt="White Label Crypto Exchange" width="880" height="513"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-what-is-white-label-products"&gt;
  &lt;/a&gt;
  First, what is white label products?
&lt;/h2&gt;

&lt;p&gt;White-label products are sold with their own branding and logo, but the products themselves are manufactured by a third party. White labeling happens when the manufacturer of an item uses the branding requested by the purchaser, or marketer, instead of its own. The end product appears as though it has been produced by the purchaser. In other words, a White label is a business model in which one company produces a finished product but is sold by another company with its name attached to that product.&lt;br&gt;
Another way around, in this model, the manufacturing and the selling of a product is carried out by two different brands. The manufacturer makes a profit by making the product, whereas the seller makes a profit by marketing and selling the end product in the market.&lt;br&gt;
Let’s see Advantages and disadvantages using of white-label products&lt;br&gt;
Advantages: &lt;br&gt;
• Reduced Crypto Exchange Development Costs: Using a white-label means that you don’t need to get coding resources. Whether in the form of an in-house software development team, or an outsourced development company, the costs of software production quickly mount up. A white label avoids this process almost entirely.&lt;br&gt;
• Large contracts: Third-party producers get huge contracts, which could come with guaranteed sales and revenue.&lt;br&gt;
• Discounted sales: Stores can boost revenue by selling white-label products at a discount relative to national brands.&lt;br&gt;
• Quality. White-label brands can be just as good as national brands, as they often use the same producers; high quality creates satisfied customers.&lt;br&gt;
• Save your development time.&lt;/p&gt;

&lt;p&gt;Disadvantages:&lt;br&gt;
• Copycatting. Using very similar packaging among brands is called copycatting, which can be illegal in some cases. Private label brands must differentiate themselves sufficiently so as not to mislead consumers.&lt;br&gt;
• Barriers to entry. The growing dominance of white label brands could make it hard for new firms to enter the market, reducing overall competition.&lt;br&gt;
• Only a few companies offer core customization, which is hardly enough for a decent feature.&lt;/p&gt;

&lt;p&gt;Typically, the White-Label Agreement contains the following terms and is not limited to:&lt;br&gt;
• Relationship between the manufacturer and reseller&lt;br&gt;
• Rights and obligations of both parties&lt;br&gt;
• Product manufacturing details&lt;br&gt;
• Packaging and documentation&lt;br&gt;
• Product or service warranties&lt;br&gt;
• Quality control&lt;br&gt;
• Fees, pricing&lt;br&gt;
• Payment terms&lt;br&gt;
• Customer support&lt;br&gt;
• And more&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-crypto-exchanges"&gt;
  &lt;/a&gt;
  Types of crypto exchanges:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IOjfSK8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5ysuwl3ovs8stvs4bzz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IOjfSK8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5ysuwl3ovs8stvs4bzz.png" alt="Types of crypto exchanges" width="880" height="692"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#centralized-crypto-exchange"&gt;
  &lt;/a&gt;
  Centralized Crypto exchange
&lt;/h3&gt;

&lt;p&gt;This is the most common type of exchange. Such exchanges have a centralized operator who is responsible for security, updates, and functionality. Centralized exchanges manage order books, which record all buy and sell orders. The weak point of this type is that coins are stored in the services themselves, which increases the likelihood of losing your funds due to hacker attacks. Therefore, centralized exchanges work hard to ensure the proper level of security.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#decentralized-crypto-exchange"&gt;
  &lt;/a&gt;
  Decentralized crypto exchange
&lt;/h3&gt;

&lt;p&gt;Decentralized exchanges provide transfers of funds directly between users' wallets. This reduces the potential for theft from exchange hacking since the exchange never actually stores cryptocurrency. However, you should keep in mind that in such exchanges, the lack of moderating third-party shifts all responsibility for errors and security to the users themselves&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#white-label-crypto-exchange"&gt;
  &lt;/a&gt;
  White label Crypto exchange
&lt;/h3&gt;

&lt;p&gt;A customer saves up their time as the platform is ready-made. In fact, the characteristics and the work ability are already tested and used by various other traders.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#peertopeer-exchanges"&gt;
  &lt;/a&gt;
  Peer-to-peer exchanges
&lt;/h3&gt;

&lt;p&gt;P2P exchanges provide the sale and purchase of cryptocurrency directly between users. Traders leave their orders as on a bulletin board, and other network participants can respond to the offers and agree on the terms of buy/sale.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G07Gy3BI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xg1tpyt3xg5lhg93oec3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G07Gy3BI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xg1tpyt3xg5lhg93oec3.png" alt="Improved accuracy and efficiency" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-white-label-crypto-exchange"&gt;
  &lt;/a&gt;
  What is a White label crypto exchange?
&lt;/h2&gt;

&lt;p&gt;generally, ‘White Label’ refers to a customizable product and, or service that is developed by one company and sold to another. In other words, the development company sells the rights of a white-label solution to its client company, either fully or partially. Apart from being time-saving, such solutions prove to be economical for businesses. A white-label exchange is a market-ready solution with ready-to-deploy back-end and easy-to-customize front-end. The UI/UX can be easily customized as per brand requirements and the software can be quickly launched into the market.&lt;br&gt;
When you start your own white label for crypto exchange, do everything possible to secure the deposits and the user’s data. This is even more important if you want to develop a decentralized exchange. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yfmd90YM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/of2onz90coa1jms9zykf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yfmd90YM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/of2onz90coa1jms9zykf.png" alt="Features of white label crypto exchange" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-white-label-crypto-exchange"&gt;
  &lt;/a&gt;
  Features of white label crypto exchange
&lt;/h3&gt;

&lt;p&gt;• Liquidity&lt;br&gt;
• Immaculate exchanging motor&lt;br&gt;
• Wallet coordination&lt;br&gt;
• High amount of transactions per second&lt;br&gt;
• Security highlights&lt;br&gt;
• Exchange of advanced resources&lt;br&gt;
• Escrow&lt;br&gt;
• Referral program&lt;br&gt;
• Staking&lt;br&gt;
• Crypto payment gateway integration&lt;br&gt;
• IEO module&lt;br&gt;
• Admin panel&lt;br&gt;
• Intelligent analytic outlines&lt;br&gt;
• Trading Bot&lt;br&gt;
• KYC and AML&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-features-of-white-label-crypto-exchange"&gt;
  &lt;/a&gt;
  Security features of White label crypto exchange:
&lt;/h3&gt;

&lt;p&gt;• Denial of service defense (DoS).&lt;br&gt;
• HTTP-parameters pollution protection&lt;br&gt;
• Distributed denial of service defense (DDoS)&lt;br&gt;
• Cross-site request forgery protection (CSRF)&lt;br&gt;
• Two-factor and HTTPS authentications&lt;br&gt;
• Biometrical authentication&lt;br&gt;
• Data encryption&lt;br&gt;
• SQL injection&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-launch-a-crypto-exchange-using-a-white-label-solution"&gt;
  &lt;/a&gt;
  How to launch a crypto exchange using a white label solution?
&lt;/h2&gt;

&lt;p&gt;For launching a cryptocurrency exchange using a white label solution, you need to understand the pros and cons of having a white label cryptocurrency exchange.&lt;br&gt;
Pros:&lt;br&gt;
• A white label cryptocurrency exchange avoids all the extra time, development and effort required for building an exchange from scratch. &lt;br&gt;
• It can be customized as per your requirements. &lt;br&gt;
• It offers a higher return on investment (ROI). &lt;br&gt;
• Enables you to instantly launch a ready-made exchange platform within minutes. &lt;br&gt;
Cons:&lt;br&gt;
• Since it is a ready-made solution, in-depth customization is hard.&lt;br&gt;
• You will need upfront short-term capital to buy the white-label crypto exchange.&lt;br&gt;
• License: There can be complicated licenses and compliance (depending on the country).&lt;br&gt;
• Long-term support long-term: Depending on what solution you use; the provider may not provide support.&lt;br&gt;
• Control: Since the tech is outsourced you will have to give up some control.&lt;br&gt;
• Flexibility: There can be difficulty changing from one white-label exchange to another after building the business. This is why it is important for you to choose the best white-label provider.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zq9kHsyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7p44g22wjxmn46ab1j2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zq9kHsyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7p44g22wjxmn46ab1j2.png" alt="The benefits of white label crypto exchange" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-benefits-of-white-label-crypto-exchange-are"&gt;
  &lt;/a&gt;
  The benefits of white label crypto exchange are:
&lt;/h3&gt;

&lt;p&gt;• Easy to deploy products&lt;br&gt;
• Customizable UI/UX&lt;br&gt;
• Market analysis&lt;br&gt;
• Time efficient transactions&lt;br&gt;
• Cost effective crypto exchange&lt;br&gt;
• Multiple payment methods&lt;br&gt;
• No need for an expert technician&lt;br&gt;
• Reliable crypto exchange&lt;br&gt;
• Improved accuracy and efficiency&lt;br&gt;
• Multiple device access&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#to-start-a-white-label-crypto-exchange-is"&gt;
  &lt;/a&gt;
  To start a white label crypto exchange is:
&lt;/h3&gt;

&lt;p&gt;• Trading engine. This module is responsible for checking wallet balance, determining the order of buying and selling assets, counting the balances, merging with liquidity pools and payment gateways, and counting rates and commissions.&lt;br&gt;
• User-friendly interface. The user interface includes branding, personalization and software customization. You need to work on naming, logos, design settings, features, and more.&lt;br&gt;
• Security system. In this section, security measures, licenses, privacy and anti-hacking are set by the platform owner.&lt;br&gt;
• Payment system. The payment system is responsible for revenue generation, fees, deposits and withdrawals.&lt;br&gt;
• Support. One of the most important issues of digital currency exchange is the constant support of the software.&lt;br&gt;
• Admin console: Designing a panel for the user and site administrator is one of the requirements for a white label crypto exchange.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-much-does-it-cost-to-create-a-white-label-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  How much does it cost to create a white label cryptocurrency exchange:
&lt;/h2&gt;

&lt;p&gt;The cost for white-label exchange software varies from $3,000 on the low-end, up to $1,000,000 for enterprise solutions. Here is a breakdown of the costs:&lt;br&gt;
$3,000 for low-end (often tagged with a monthly cloud cost or revenue share)&lt;br&gt;
$100,000s mid-range&lt;br&gt;
$1,000,000s enterprise solution&lt;br&gt;
Some major steps involved in the development of a white label cryptocurrency exchange are listed as follows-&lt;br&gt;
• Deciding on the business needs: The first thing is deciding on the exchange in which you will be willing to do the business. It must be a platform for all the opportunities to come together.&lt;br&gt;
• Fulfilling the legal formalities: After choosing the exchange, the next step is completing all the legal formalities. The rules and regulations vary from place to place. So be sure of the legal formalities you must satisfy.&lt;br&gt;
• Choosing a banking partner: A banking partner is necessary for completing the finances in fiat currency. Likewise, select a trustworthy bank that provides adequate digital services to help the business.&lt;br&gt;
• Choose an exchange providing liquidity: Liquidity must feature to create a white label cryptocurrency exchange. Join a network that helps in improving liquidity.&lt;br&gt;
• Be sure the platform goes live after beta testing: Firstly, do the Beta testing and then go online. Further, Beta testing helps to bring all the flaws out that have occurred while developing the software.&lt;br&gt;
• Have an active customer support team: There should be an active customer support team to help the customers in times of need. With constant development, the support team will also grow.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-long-does-it-take-to-launch-a-whitelabel-crypto-exchange"&gt;
  &lt;/a&gt;
  How long does it take to launch a white-label crypto exchange?
&lt;/h3&gt;

&lt;p&gt;Launching a white-label exchange should take the shortest time possible. Most white-label exchanges can be launched in between 1–4 weeks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;Launching a white label cryptocurrency exchange software is the best crypto business option right now. Make sure that you have reached the best white-label crypto exchange solutions provider to create your exchange platform. You must decide whether you can afford to keep the development team once the exchange is completed, or if it is better to employ a solution that has already been designed and tested by others. Consider the time it takes to initiate the exchange, which translates to a delay in profits.&lt;br&gt;
One method to calculate if a white-label exchange solution is worth it is to estimate your team’s ability to build a regular website from scratch.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>webdev</category>
    </item>
    <item>
      <title>javaScript's Array Methods.</title>
      <author>Hamza Ali</author>
      <pubDate>Wed, 03 Nov 2021 07:42:53 +0000</pubDate>
      <link>https://dev.to/hat52/javascripts-array-methods-53lm</link>
      <guid>https://dev.to/hat52/javascripts-array-methods-53lm</guid>
      <description>&lt;p&gt;Array is a data structure whichcontains a set of elements. Each element take up one index of an array. Generally all element of the array are of same type e.g string, integer etc but this is not the case in JavaScript. You can literally add any type of element in an array.&lt;br&gt;
example : &lt;strong&gt;[1,2,"Hello",3.5,"world"]&lt;/strong&gt; this is doable in JavaScript. &lt;br&gt;
After discussing what array is lets move on to the methods of array in JavaScript.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;PUSH&lt;/strong&gt;
method adds elements to the end of an array and return a new length of an array. It mutates the original array.
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3]
arr.push("newElement")
//it will push the newElement string to the end of the array.
console.log(arr)
//output
[1,2,3,'newElement']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;POP&lt;/strong&gt;
as push inserts the new element in the array pop removes the last element of the array. It mutates the original array.
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3]
arr.pop()
//it will remove the last element of the array which id 3 in this case
console.log(arr)
//output
[1,2]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;shift&lt;/strong&gt; removes the first element of the array and return the removed element and also mutates the original array and its length.
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3]
arr.shift()
//it will remove the first element of the array which in this case is 1
console.log(arr)
//output
[2,3]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;unshift&lt;/strong&gt;
as shift removes the first element of the array unshift add the new element in the start of the array and return the new length of the array.
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3]
arr.unshift(4)
//it will add the new element 4 in the start of array and will return the new length of array
console.log(arr)
//output
[4,1,2,3]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;slice&lt;/strong&gt; returns selected elements of an array as a new array without mutating the main array. it accepts one or two arguments. slice method also accepts both positive and negative arguments.
positive will start from the start of an array and negative will start from the end of an array
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4]
//signal argument
let newArray1 = arr.slice(2)
//it will return the element from the second index to the last index
console.log(newArray1)
//output 
[3,4]
//Two arguments
let newArray2 = arr.slice(1,3)
//it will return element starting from the start argument to the end argument but does not include the end argument.
console.log(newArray2)
//output 
[2,3]

//Negative argument
//singal argument
let newArray3 = arr.slice(-3)
console.log(newArray3)
//output
[2,3,4]

//Two arguments
let newArray4 = arr.slice(-3,-1)
console.log(newArray4)
//output
[2,3]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;splice&lt;/strong&gt; add/removes elements in an array at specified place. It mutates the original array.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//Add items to array
const arr = [1,2,3,4]
arr.splice(2,0,5)
//it will add 5 after 3 

console.log(arr)
//output
[1,2,5,3,4]

//remove elements from an array
let arr =[1,2,3,4,5,6]
arr.splice(2,1)
//first argument is the position and the second argument is the number of element you want to remove pass 0 if you don't want to remove any element.

console.log(arr)
//output
[1,2,4,5,6]

//add and remove item at same time

let arr =[1,2,3,4,5,6]
arr.splice(3,1,9,10)
//it will remove one item from third index and add two items there.

console.log(arr)

//output

[1,2,3,9,10,5,6]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;join&lt;/strong&gt; return a new string of an array elements either separated by comma or specified separator.
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5]
const joinString = arr.join()
//it will return a string of array elements separated by ,
console.log(joinString)
//output
"1,2,3,4,5"

//specifying a separator

const withOperator = arr.join('with')
//output
"1with2with3with4with5" 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;toString&lt;/strong&gt; converts an array into string separated by comma. This method is not specific for array only it can be found in every object.
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5]
const arrayString = arr.toString()
//output
"1,2,3,4,5"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;forEach&lt;/strong&gt; loops through each element of an array and executes the callback function for each element of an array.
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5]
var sum = 0
arr.forEach(function(element){
sum = sum + element //element = 1,2,3,4,5
})
console.log(sum)
//output 
15
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;**Explanation&lt;/em&gt;*&lt;br&gt;
For each iteration of forEach element's value will be changed. for first iteration its value will be 1 then for next iteration its value will be 2 and so on and each value will be added to sum.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;filter&lt;/strong&gt; returns a new array that filters out the elements of an array. If an element satisfies the condition of callback then it is added to the new array.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;**Example&lt;/em&gt;*&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5,6]
var filteredArray = arr.filter(function(element){
//it will only add those elements to the new array which are either equal to 3 or greater than 3
return element &amp;gt;= 3
})
console.log(filteredArray)
//output
[3,4,5]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;includes&lt;/strong&gt; check if an array contains the element passed to the method. It only returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. Keep in mind includes() is &lt;code&gt;case sensetive&lt;/code&gt;.
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = ['red','blue','yellow','green']
const check = arr.includes('red')
console.log(check)
//output
true

const check2 = arr.includes('white')
console.log(check2)
// output 
false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;map&lt;/strong&gt; iterates through each array elements and call the provided callback function for each element of array. It returns a new array and does not alter the main array.
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5]
var newArray = arr.map((element)=&amp;gt;
element*2
)
//it will multiply 2 with each element of array and store it in the new array.

console.log(newArray)

//output
[2,4,6,8,10]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;from&lt;/strong&gt; creates and array from an object which have length property or is iterate able.
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arr = Array.from('12345')
//It will create a new array from the string provided in the from //parameter
console.log(arr)

//output
['1','2','3','4','5']

//from also accepts a map function 

const arrMap = Array.from('12345',(x)=&amp;gt;x*2)
//it will first create an array from the provided string and then //it will run map function on it.

console.log(arrMap)

//output
[2,4,6,8,10]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;concat&lt;/strong&gt; Merges two or more array into a new single array. This method does not alters the existing array instead it returns the new array.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr1 =[1,2], arr2 = [3,4]

const concatedArray = arr1.concate(arr2)
//this will add both the array in new array. 
console.log(concatedArray)

//output
[1,2,3,4]

//if you want to merge more than two array

const concatedArrayMultiple = arr1.concate(arr2,['hello','world' )
console.log(concatedArrayMultiple)

//output 
[1,2,3,4,'hello,'world']

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;reverse&lt;/strong&gt; reverses the order of the elements of array, first element becomes the last and last element becomes the first element.&lt;code&gt;it alters the original array&lt;/code&gt;.
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5]
arr.reverse()
//it will reverse the array 

console.log(arr)

//output 

[5,4,3,2,1]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;sort&lt;/strong&gt; It sorts the array according to the provided function if the function is not provided then its sorts the array in ascending of UTF-16. &lt;code&gt;It alters the original array and return the sorted array&lt;/code&gt;. &lt;code&gt;Sort is also case sensitive&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,5,4,3]

arr.sort()
//this will sort the array in ascending order

console.log(arr)

//output
[1,2,3,4,5]

// to sort the array in descending order we have to provide a function to it

let arr1 = [1,2,4,5,6,3]
arr1.sort(function(a,b){return b-a})
//it will sort the array in descending order

console.log(arr1)

//output

[6,5,4,3,2,1]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;every&lt;/strong&gt; tests weather all the elements of an array pass the test implemented by the provided function. If an element fails the test it will return &lt;code&gt;false&lt;/code&gt; and will not run the test for the remaining elements. If all the elements pass the test then it will return &lt;code&gt;true&lt;/code&gt;. it does not alter the original array.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5,6]
const value  = arr.every(function(element){
return element &amp;lt;=3
// It will return false because not all the elements are less than or equal to 3 . it will return false after it check 4 because 4 does not passes the test
})

console.log(value)
//output
false

//What if all elements pass the test

const value2 = arr.every(function(element){
return element &amp;lt; 7 
//it will return true because all the elements in the array are less than 7.
})

console.log(value2)

//output
true

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;some&lt;/strong&gt; tests whether any element of an array pass the test implemented by the provided function. It returns &lt;code&gt;true&lt;/code&gt; if an element of an array pass the test and returns &lt;code&gt;false&lt;/code&gt; if no element of an array pass the test. If an element passes the test then it will not test the remaining elements.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5]

const value = arr.some(function(element){
return element &amp;gt; 7
//it will return false because no element in the given array is greater than 7
})

console.log(value)

//output 
false

//What if an element passes the test

const value1 = arr.some(function(element){
return element === 3 
// it will return true because 3 is present in the array and after finding 3it will not test the remaining elements
})

console.log(value1)
//output
true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;reduce&lt;/strong&gt; executes user provided &lt;code&gt;reducer&lt;/code&gt; callback function for each element of an array. It passes the return value of previous elements callback function to the next elements callback function and in the end it returns a single value.
The easiest way to understand this is to get the sum of an array's element using reducer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5,6]

const sum = arr.reduce(function(prevValue,currentValue){
return prevValue + currentValue
})

console.log(sum)
//output
21
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;findIndex&lt;/strong&gt; it returns the index of the first element of an array that satisfies the provided callback function. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5]
const index = arr.findIndex(function(element){
return element = 3
//it will return the `index` of 3 if it finds it in the array otherwise it will return `-1`
})

console.log(index)
//output
2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Conclusion&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Did you guys find the methods that I have listed above useful. If you have any suggestion leave them in the comments.&lt;/p&gt;

&lt;p&gt;That's all from me! Bye!&lt;br&gt;
&lt;a href="https://i.giphy.com/media/vwvWkWVaoWFsxFXy9y/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/vwvWkWVaoWFsxFXy9y/giphy.gif" width="600" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>React context API state management with typescript</title>
      <author>Orinda Felix Ochieng</author>
      <pubDate>Wed, 03 Nov 2021 07:33:16 +0000</pubDate>
      <link>https://dev.to/forinda/react-context-api-state-management-with-typescript-193f</link>
      <guid>https://dev.to/forinda/react-context-api-state-management-with-typescript-193f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#initial-setup"&gt;
  &lt;/a&gt;
  Initial setup
&lt;/h2&gt;

&lt;p&gt;We will use the default &lt;code&gt;npx create-react-app app_name --template typescript --use-npm&lt;/code&gt; for anyone with both &lt;code&gt;npm&lt;/code&gt; and &lt;code&gt;yarn&lt;/code&gt; installed in the system or &lt;code&gt;npx create-react-app app_name&lt;/code&gt; for just &lt;code&gt;npm&lt;/code&gt;  to setup our initial project&lt;br&gt;
I'll call my app &lt;code&gt;client&lt;/code&gt; for the start&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#my-directory-structure"&gt;
  &lt;/a&gt;
  My directory structure
&lt;/h2&gt;

&lt;pre&gt;
client
|-node_modules
|- public
|- src
|      ├── App.css
|      ├── App.tsx
|      ├── index.tsx
|      ├── react-app-env.d.ts
|      ├── components
│      |    ├── Header.tsx
│      |    └── Home.tsx
|      |
|      |
|      └── state
|      |    ├── ActionTypes.tsx
|      |    ├── AppProvider.tsx
|      |    ├── interfaces.tsx
|      |    └── reducers
|      |        ├── themeReducer.tsx
|      |        └── userReducer.tsx

&lt;/pre&gt;

&lt;p&gt;First we'll create a directory in the &lt;code&gt;src&lt;/code&gt; folder named &lt;code&gt;state&lt;/code&gt; for keeping all files related to our global state. For &lt;code&gt;reducer&lt;/code&gt; functions we'll create a folder in the state named reducers.&lt;br&gt;
In the AppProvider we'll import &lt;code&gt;createContext&lt;/code&gt; from react to create a context instance for holding our global state and sharing the state value across all children bellow it.&lt;/p&gt;

&lt;p&gt;In the handling of different states it's good if we keep the reducers to handle only a concerning section of the state for easy maintainance. In my state I have two states i.e &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;theme&lt;/code&gt;.&lt;br&gt;
I have defined all types for the AppState already in the interfaces.tsx.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;combined reducer&lt;/code&gt; function takes in a given state and passess it to the appropriate &lt;code&gt;reducer&lt;/code&gt; function. We destructure the state in the &lt;code&gt;combinedReducer&lt;/code&gt; arguments and return the state after any update.&lt;/p&gt;

&lt;p&gt;To keep a persistent state in the application we use localstorage to store our data. I have set up an &lt;code&gt;APP_STATE_NAME&lt;/code&gt; variable to ensure consistency and ease of access to the localstorage varible.&lt;br&gt;
We first check if there is an existing state in the localstorage, if there is no state registered we use the default state value after.&lt;/p&gt;

&lt;p&gt;For syncing state in the AppProvider we import the &lt;code&gt;useReducer&lt;/code&gt; hook from &lt;code&gt;react&lt;/code&gt; for dispatching events on our state.&lt;br&gt;
We pass the state to the AppContext as value. In addition to ensure we keep the app state in sync we use the &lt;code&gt;useEffect&lt;/code&gt; hook to watch for changes in the state and refresh the state in case of any change.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#appprovidertsx"&gt;
  &lt;/a&gt;
  AppProvider.tsx
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * AppProvider.tsx
 */&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Dispatch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useReducer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;IState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;IThemeAction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StateActions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;UserActions&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./interfaces&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;themeReducer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./reducers/themeReducer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;userReducer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./reducers/userReducer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;APP_STATE_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;testing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//Check if state already exist and take the instance or set a default value&lt;/span&gt;
&lt;span class="c1"&gt;//in case there is no state in the localstorage&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;APP_STATE_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;APP_STATE_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AppContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IState&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Dispatch&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StateActions&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;combinedReducers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;IState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;UserActions&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;IThemeAction&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;themeReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AppProvider&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReactNode&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;combinedReducers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// Watches for any changes in the state and keeps the state update in sync&lt;/span&gt;
  &lt;span class="c1"&gt;//Refresh state on any action dispatched&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//Update the localstorage after detected change&lt;/span&gt;
    &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;APP_STATE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AppContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/AppContext.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;AppProvider&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;AppProvider&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#interfaces"&gt;
  &lt;/a&gt;
  interfaces
&lt;/h2&gt;

&lt;p&gt;Defining my types&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * interfaces.tsx
 */&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;LOGOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;THEME&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./ActionTypes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;IUser&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;ITheme&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;IState&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IUser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ITheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;IUserLogin&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IUser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;IUserLogout&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;LOGOUT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;IThemeAction&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;THEME&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;UserActions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;IUserLogin&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;IUserLogout&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;StateActions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;UserActions&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;IThemeAction&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#action-types"&gt;
  &lt;/a&gt;
  Action types
&lt;/h3&gt;

&lt;p&gt;My action types&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * ActionTypes.tsx
 */&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LOGIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;LOGIN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LOGOUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;LOGOUT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;THEME&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// const LOGIN = "LOGIN"&lt;/span&gt;
&lt;span class="c1"&gt;// const LOGIN = "LOGIN"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;freeze&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;LOGOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;THEME&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;LOGOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;THEME&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#themereducertsx"&gt;
  &lt;/a&gt;
  themeReducer.tsx
&lt;/h3&gt;

&lt;p&gt;A reducer function that only handles state concerning the state theme&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;THEME&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../ActionTypes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ITheme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StateActions&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../interfaces&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;themeReducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ITheme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;StateActions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="na"&gt;THEME&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;themeReducer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#userreducertsx"&gt;
  &lt;/a&gt;
  userReducer.tsx
&lt;/h3&gt;

&lt;p&gt;A reducer function that only handles state concerning the state user&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;LOGOUT&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../ActionTypes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;IUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StateActions&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../interfaces&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userReducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;StateActions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="na"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="na"&gt;LOGOUT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;userReducer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#indextsx"&gt;
  &lt;/a&gt;
  index.tsx
&lt;/h3&gt;

&lt;p&gt;For us to get access to the global state we have to wrap out app with the &lt;code&gt;AppProvider&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * index.tsx
 */&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;AppProvider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./state/AppProvider&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AppProvider&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/AppProvider&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#headertsx"&gt;
  &lt;/a&gt;
  header.tsx
&lt;/h2&gt;

&lt;p&gt;In our header we can aacess the state of the app via a &lt;code&gt;useContext&lt;/code&gt;  hook to get access to the state and pass our &lt;code&gt;AppContext&lt;/code&gt; instance to get current state of the application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * Header.tsx
 */&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../state/AppProvider&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AppContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;LOGO&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;right&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;My&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;active&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/header&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#hometsx"&gt;
  &lt;/a&gt;
  Home.tsx
&lt;/h2&gt;

&lt;p&gt;In the &lt;code&gt;Home.tsx&lt;/code&gt; using the &lt;code&gt;useContext&lt;/code&gt; hook we can destructure the context value object to get access to the state and the dispatch method for invoking our reducers&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * Home.tsx
 */&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;LOGOUT&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../state/ActionTypes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../state/AppProvider&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AppContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hendleLogin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hendleLogout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;LOGOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;home-container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;active&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;No user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;
          &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="p"&gt;{...(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;active&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;})}&lt;/span&gt;
          &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;hendleLogin&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Login&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;
          &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;logout&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="p"&gt;{...(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;active&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;})}&lt;/span&gt;
          &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;hendleLogout&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Logout&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#apptsx"&gt;
  &lt;/a&gt;
  App.tsx
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * App.tsx
 */&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/Header&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thank you so much for reading and hope you learn from this. Here is a link to the code on github &lt;a href="https://github.com/forinda/dev-blog-react-context-state.git"&gt;Code sample&lt;/a&gt;&lt;br&gt;
For any queries just give in the comments below&lt;/p&gt;

</description>
      <category>react</category>
      <category>contextapi</category>
      <category>typescript</category>
      <category>reactstate</category>
    </item>
    <item>
      <title>HTML tags | textarea</title>
      <author>Carlos Espada</author>
      <pubDate>Wed, 03 Nov 2021 07:27:31 +0000</pubDate>
      <link>https://dev.to/carlosespada/html-tags-textarea-344m</link>
      <guid>https://dev.to/carlosespada/html-tags-textarea-344m</guid>
      <description>&lt;p&gt;It is used to &lt;strong&gt;represent a multi-line plain-text editing control&lt;/strong&gt;, useful when you want to allow users to enter a sizeable amount of free-form text, for example a comment on a review or feedback form.&lt;/p&gt;

&lt;p&gt;The content is entered between the opening and closing tags. &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; does not support the &lt;code&gt;value&lt;/code&gt; attribute.&lt;/p&gt;

&lt;p&gt;It can hold an unlimited number of characters and its size is specified by the &lt;code&gt;&amp;lt;cols&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;rows&amp;gt;&lt;/code&gt; attributes (or with CSS).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#autocomplete"&gt;
  &lt;/a&gt;
  autocomplete
&lt;/h3&gt;

&lt;p&gt;This attribute indicates whether the value of the control can be automatically completed by the browser. Possible values are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;off&lt;/strong&gt;: The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method; the browser does not automatically complete the entry.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;on&lt;/strong&gt;: The browser can automatically complete the value based on values that the user has entered during previous uses.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the &lt;code&gt;autocomplete&lt;/code&gt; attribute is not specified on a &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element, then the browser uses the &lt;code&gt;autocomplete&lt;/code&gt; attribute value of the &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element's form owner. The form owner is either the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element that this &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element is a descendant of or the form element whose &lt;code&gt;id&lt;/code&gt; is specified by the &lt;code&gt;form&lt;/code&gt; attribute of the input element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#autofocus"&gt;
  &lt;/a&gt;
  autofocus
&lt;/h3&gt;

&lt;p&gt;This Boolean attribute lets you specify that a form control should have input focus when the page loads. Only one form-associated element in a document can have this attribute specified.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cols"&gt;
  &lt;/a&gt;
  cols
&lt;/h3&gt;

&lt;p&gt;The visible width of the text control, in average character widths. If it is specified, it must be a positive integer. If it is not specified, the default value is &lt;code&gt;20&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disabled"&gt;
  &lt;/a&gt;
  disabled
&lt;/h3&gt;

&lt;p&gt;This Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt;; if there is no containing element when the disabled attribute is set, the control is enabled.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#form"&gt;
  &lt;/a&gt;
  form
&lt;/h3&gt;

&lt;p&gt;The form element that the &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element is associated with (its "form owner"). The value of the attribute must be the &lt;code&gt;id&lt;/code&gt; of a form element in the same document. If this attribute is not specified, the &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element must be a descendant of a form element. This attribute enables you to place &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; elements anywhere within a document, not just as descendants of form elements.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#maxlength"&gt;
  &lt;/a&gt;
  maxlength
&lt;/h3&gt;

&lt;p&gt;The maximum number of characters (UTF-16 code units) that the user can enter. If this value isn't specified, the user can enter an unlimited number of characters.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#minlength"&gt;
  &lt;/a&gt;
  minlength
&lt;/h3&gt;

&lt;p&gt;The minimum number of characters (UTF-16 code units) required that the user should enter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#name"&gt;
  &lt;/a&gt;
  name
&lt;/h3&gt;

&lt;p&gt;The name of the control.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#placeholder"&gt;
  &lt;/a&gt;
  placeholder
&lt;/h3&gt;

&lt;p&gt;A hint to the user of what can be entered in the control. Carriage returns or line-feeds within the placeholder text must be treated as line breaks when rendering the hint.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Placeholders should only be used to show an example of the type of data&lt;/strong&gt; that should be entered into a form; they are not a substitute for a proper &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element tied to the input.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#readonly"&gt;
  &lt;/a&gt;
  readonly
&lt;/h3&gt;

&lt;p&gt;This Boolean attribute indicates that the user cannot modify the value of the control. Unlike the &lt;code&gt;disabled&lt;/code&gt; attribute, the &lt;code&gt;readonly&lt;/code&gt; attribute does not prevent the user from clicking or selecting in the control. The value of a read-only control is still submitted with the form.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#required"&gt;
  &lt;/a&gt;
  required
&lt;/h3&gt;

&lt;p&gt;This attribute specifies that the user must fill in a value before submitting a form.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rows"&gt;
  &lt;/a&gt;
  rows
&lt;/h3&gt;

&lt;p&gt;The number of visible text lines for the control.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#spellcheck"&gt;
  &lt;/a&gt;
  spellcheck
&lt;/h3&gt;

&lt;p&gt;Specifies whether the &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; is subject to spell checking by the underlying browser/OS. The value can be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;true&lt;/strong&gt;: Indicates that the element needs to have its spelling and grammar checked.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;default&lt;/strong&gt;: Indicates that the element acts according to a default behavior, possibly based on the parent element's own &lt;code&gt;spellcheck&lt;/code&gt; value.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;false&lt;/strong&gt;: Indicates that the element should not be spell checked.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#wrap"&gt;
  &lt;/a&gt;
  wrap
&lt;/h3&gt;

&lt;p&gt;Indicates how the control wraps text. Possible values are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;hard&lt;/strong&gt;: The browser automatically inserts line breaks (CR+LF) so that each line has no more than the width of the control; the &lt;code&gt;cols&lt;/code&gt; attribute must also be specified for this to take effect.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;soft&lt;/strong&gt;: The browser ensures that all line breaks in the value consist of a CR+LF pair, but does not insert any additional line breaks. This is the default value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In most browsers, &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;s are resizable — you'll notice the drag handle in the right hand corner, which can be used to alter the size of the element on the page. This is controlled by the &lt;code&gt;resize&lt;/code&gt; CSS property — resizing is enabled by default, but you can explicitly disable it using a resize value of none:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;textarea {
  resize: none;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Valid and invalid values of a &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element (e.g. those within, and outside the bounds set by &lt;code&gt;minlength&lt;/code&gt;, &lt;code&gt;maxlength&lt;/code&gt; or &lt;code&gt;required&lt;/code&gt;) can be highlighted using the &lt;code&gt;:valid&lt;/code&gt; and &lt;code&gt;:invalid&lt;/code&gt; pseudo-classes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type: &lt;em&gt;inline-block&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Self-closing: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Semantic value: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/tags/tag_textarea.asp"&gt;Definition&lt;/a&gt; | &lt;a href="https://www.w3schools.com/tags/tryit.asp?filename=tryhtml_textarea"&gt;Example&lt;/a&gt; | &lt;a href="https://caniuse.com/mdn-html_elements_textarea"&gt;Support&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>tags</category>
      <category>textarea</category>
    </item>
    <item>
      <title>Improving your reasoning with Arrays in java</title>
      <author>DALLINGTON ASINGWIRE</author>
      <pubDate>Wed, 03 Nov 2021 07:21:05 +0000</pubDate>
      <link>https://dev.to/dallington256/improving-your-reasoning-with-arrays-in-java-5b1j</link>
      <guid>https://dev.to/dallington256/improving-your-reasoning-with-arrays-in-java-5b1j</guid>
      <description>&lt;p&gt;&lt;b&gt;QUESTION:&lt;/b&gt;&lt;br&gt;
&lt;b&gt;Write a function that takes an array of integers as an argument and returns a value based on the sums of the even and odd numbers in the array. Let X = the sum of the odd numbers in the array and let Y = the sum of the even numbers. The function should return X-Y&lt;/b&gt;&lt;br&gt;
&lt;b&gt;The signature of the function is&lt;/b&gt;: int f(int [] a)&lt;/p&gt;

&lt;p&gt;Examples&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;if input array is&lt;/th&gt;
    &lt;th&gt;return&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
  &lt;tr&gt;
    &lt;td&gt;{1}&lt;/td&gt;
    &lt;td&gt;1&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;{1, 2}&lt;/td&gt;
    &lt;td&gt;-1&lt;/td&gt;
  &lt;/tr&gt;
 &lt;tr&gt;
    &lt;td&gt;{1, 2, 3}&lt;/td&gt;
    &lt;td&gt;2&lt;/td&gt;
  &lt;/tr&gt;
 &lt;tr&gt;
    &lt;td&gt;{1, 2, 3, 4}&lt;/td&gt;
    &lt;td&gt;-2&lt;/td&gt;
  &lt;/tr&gt;
 &lt;tr&gt;
    &lt;td&gt;{3, 3, 4, 4}&lt;/td&gt;
    &lt;td&gt;-2&lt;/td&gt;
  &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;{3, 2, 3, 4}&lt;/td&gt;
    &lt;td&gt;0&lt;/td&gt;
  &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;{4, 1, 2, 3}&lt;/td&gt;
    &lt;td&gt;-2&lt;/td&gt;
  &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;{1, 1}&lt;/td&gt;
    &lt;td&gt;2&lt;/td&gt;
  &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;{}&lt;/td&gt;
    &lt;td&gt;0&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;ANSWER:&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ArraySum&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="no"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// initialization for sum of odd numbers in an array&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="no"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// initialization for sum of even numbers in an array&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="no"&gt;X&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="no"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;   
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="nc"&gt;ArraySum&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArraySum&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;D&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;E&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;F&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;G&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;H&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;I&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{};&lt;/span&gt;

        &lt;span class="c1"&gt;// Printing results on the screen&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Result for array A "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;&lt;span class="s"&gt;" is "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Result for array B "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;B&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;&lt;span class="s"&gt;" is "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;B&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Result for array C "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;C&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;&lt;span class="s"&gt;" is "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;C&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Result for array D "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;D&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;&lt;span class="s"&gt;" is "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;D&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Result for array E "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;E&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;&lt;span class="s"&gt;" is "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;E&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Result for array F "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;F&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;&lt;span class="s"&gt;" is "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;F&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Result for array G "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;G&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;&lt;span class="s"&gt;" is "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;G&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Result for array H "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;H&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;&lt;span class="s"&gt;" is "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;H&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Result for array I "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;I&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;&lt;span class="s"&gt;" is "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;I&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Result for array A [1] is 1
Result for array B [1, 2] is -1
Result for array C [1, 2, 3] is 2
Result for array D [1, 2, 3, 4] is -2
Result for array E [3, 3, 4, 4] is -2
Result for array F [3, 2, 3, 4] is 0
Result for array G [4, 1, 2, 3] is -2
Result for array H [1, 1] is 2
Result for array I [] is 0

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's one of examples in java arrays that can improve your reasoning, practice as many challenges as you can to better your programming skills. Thank you for taking time to read through this post.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Flutter ListView and Features</title>
      <author>Baransel</author>
      <pubDate>Wed, 03 Nov 2021 06:57:30 +0000</pubDate>
      <link>https://dev.to/baransel/flutter-listview-and-features-ifn</link>
      <guid>https://dev.to/baransel/flutter-listview-and-features-ifn</guid>
      <description>&lt;p&gt;Hello, in this lesson we will cover Flutter &lt;code&gt;ListView&lt;/code&gt; and Features, &lt;code&gt;Listview&lt;/code&gt; comparison on Android. When creating &lt;code&gt;ListView&lt;/code&gt; in Android, especially when creating lists with images, we needed extra model class, but when creating &lt;code&gt;ListView&lt;/code&gt; in Flutter we don't need any model class. For this, it is quite simple to create a listview in flutter.&lt;/p&gt;

&lt;p&gt;First, let's examine a simple &lt;code&gt;ListView&lt;/code&gt; structure consisting of only texts and make an example. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-what-is-the-structure-we-call-listview"&gt;
  &lt;/a&gt;
  So what is the structure we call ListView?
&lt;/h3&gt;

&lt;p&gt;We can think of &lt;code&gt;ListView&lt;/code&gt; as lists with multiple elements. This list can be composed of only articles, or it can be created with mixed data. &lt;code&gt;ListView&lt;/code&gt; takes children because it consists of multiple widgets.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;ListView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;ListTile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Baransel.dev"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;ListTile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Flutter"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;ListTile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Courses"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="o"&gt;],&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We created each element inside the &lt;code&gt;ListView&lt;/code&gt; widget, which we saw above, by adding the &lt;code&gt;ListTile&lt;/code&gt; widget. Here, just using the title property as text, we get the following output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mqyGwYkj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-listview.png" class="article-body-image-wrapper"&gt;&lt;img alt="Listview Example for Flutter" src="https://res.cloudinary.com/practicaldev/image/fetch/s--mqyGwYkj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-listview.png" width="880" height="694"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, &lt;code&gt;ListTile&lt;/code&gt;, which is one of the most used widgets in &lt;code&gt;ListView&lt;/code&gt;, has other features.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bMi3W--E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-ListTile-properties.png" class="article-body-image-wrapper"&gt;&lt;img alt="ListTile properties for Flutter" src="https://res.cloudinary.com/practicaldev/image/fetch/s--bMi3W--E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-ListTile-properties.png" width="362" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just like we add a title, we can explain it by adding a subtitle with &lt;code&gt;subtitle&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;ListTile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Baransel.dev"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="nl"&gt;subtitle:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://baransel.dev"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yTlC8RUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-subtitle-ListTile.png" class="article-body-image-wrapper"&gt;&lt;img alt="ListTile subtitle" src="https://res.cloudinary.com/practicaldev/image/fetch/s--yTlC8RUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-subtitle-ListTile.png" width="880" height="832"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we want, we can customize it further and place icons at the beginning or end of our articles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;ListView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
            &lt;span class="n"&gt;ListTile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Baransel.dev"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;subtitle:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://baransel.dev"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;leading:&lt;/span&gt;
                  &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;arrow_forward_ios_rounded&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;//icon in the beginning&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;ListTile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Flutter"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;subtitle:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://baransel.dev"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;trailing:&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;auto_awesome&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;//icon in the end&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;ListTile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Courses"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;subtitle:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://baransel.dev"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;trailing:&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;audiotrack&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;//icon in the end&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;],&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5TQNZAZa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-ListTile-icon.png" class="article-body-image-wrapper"&gt;&lt;img alt="ListTile Icon" src="https://res.cloudinary.com/practicaldev/image/fetch/s--5TQNZAZa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-ListTile-icon.png" width="880" height="858"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blog for more &lt;a href="https://baransel.dev/"&gt;baransel.dev&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>flutter</category>
    </item>
    <item>
      <title>Weekly web development resources #94</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 03 Nov 2021 06:50:20 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-94-4mo2</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-94-4mo2</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#lt-browser"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.lambdatest.com/lt-browser"&gt;LT Browser&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.lambdatest.com/lt-browser"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ehk0ovu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/94/lt-browser.jpg" alt="LT Browser" width="880" height="494"&gt;&lt;/a&gt;&lt;br&gt;
A browser build to build, test &amp;amp; debug mobile websites..&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#image-component"&gt;
  &lt;/a&gt;
  &lt;a href="https://web.dev/image-component/"&gt;Image Component&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://web.dev/image-component/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---vIkM3S0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/94/img-component.jpg" alt="Image Component" width="880" height="587"&gt;&lt;/a&gt;&lt;br&gt;
A nice article on building an effective  image component for best practices and optimized images.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#life-of-discipline"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.lifeofdiscipline.com/"&gt;Life of Discipline&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.lifeofdiscipline.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Mn0q01G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/94/life-of-discipline.jpg" alt="Life of Discipline" width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
A habit tracking tool with a GitHub-like view.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#iconsax"&gt;
  &lt;/a&gt;
  &lt;a href="https://iconsax.io/"&gt;iconsax&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://iconsax.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BPg0XxGY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/94/iconsax.jpg" alt="iconsax" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A website with the the official icons of the Vuesax framework &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#nicewaves"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/gVguy/nice-waves"&gt;nice-waves&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/gVguy/nice-waves"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X-c6JFyv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/94/waves.jpg" alt="nice-waves" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A Vanilla JS library for creating animated waves.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#blobity"&gt;
  &lt;/a&gt;
  &lt;a href="https://blobity.dev"&gt;Blobity&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://blobity.dev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2ttS8Nb4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/94/blobity.jpg" alt="Blobity" width="880" height="460"&gt;&lt;/a&gt;&lt;br&gt;
A library to customize the look and behaviour of the cursor.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#100-best-free-fonts-for-designers-in-2021"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.awwwards.com/best-free-fonts.html"&gt;100 Best Free Fonts for Designers in 2021&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.awwwards.com/best-free-fonts.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M0vmYM8q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/94/free-fonts.jpg" alt="100 Best Free Fonts for Designers in 2021" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A nice list by the people of awwwards.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#npkill"&gt;
  &lt;/a&gt;
  &lt;a href="https://npkill.js.org/"&gt;npkill&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://npkill.js.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kMcrabjz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/94/npkill.jpg" alt="npkill" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A CLI to easily find and remove old and heavy node_modules folders.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-new-css-reset"&gt;
  &lt;/a&gt;
  &lt;a href="https://elad2412.github.io/the-new-css-reset/"&gt;The New CSS Reset&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://elad2412.github.io/the-new-css-reset/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JbBGJbf5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/94/css-reset.jpg" alt="The New CSS Reset" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A simple and light CSS reset using the new CSS features.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mangodb"&gt;
  &lt;/a&gt;
  &lt;a href="https://getmango.jimdofree.com/"&gt;MangoDB&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://getmango.jimdofree.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KNp6on0s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/94/mangodb.jpg" alt="MangoDB" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A truly Open Source MongoDB alternative.&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>weekly</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Git basics: What is Git?</title>
      <author>Chris Bongers</author>
      <pubDate>Wed, 03 Nov 2021 06:07:26 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/git-basics-what-is-git-2k7h</link>
      <guid>https://dev.to/dailydevtips1/git-basics-what-is-git-2k7h</guid>
      <description>&lt;p&gt;&lt;strong&gt;Statement:&lt;/strong&gt; Git is the most powerful tool in modern development.&lt;/p&gt;

&lt;p&gt;It doesn't matter in what language you develop.&lt;br&gt;
If you work on any development, you need Git!&lt;/p&gt;

&lt;p&gt;Let's have a look at what Git even is and why it's so important.&lt;/p&gt;

&lt;p&gt;This is a series around Git, Git commands, GitHub, and more ❤️&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-git"&gt;
  &lt;/a&gt;
  What is Git?
&lt;/h2&gt;

&lt;p&gt;Git is a free open source VCS (Version Control System), which means it's a way to keep track of every change in your software.&lt;/p&gt;

&lt;p&gt;There are more VCS in existence like CVS, SVN, and more. However, Git is by far the most used one.&lt;/p&gt;

&lt;p&gt;You can even use Git locally on your computer to keep track of changes you make throughout the code.&lt;br&gt;
This is a great way to maintain a good overview of certain things that break over time.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-do-i-need-git"&gt;
  &lt;/a&gt;
  Why do I need Git?
&lt;/h2&gt;

&lt;p&gt;But far more important is that it can be distributed, meaning you can host your Git repository on an external system like GitHub, GitLab, etc.&lt;/p&gt;

&lt;p&gt;When you do this, you can give other developers, colleagues, teammates the option to develop asynchronous with you and see the changes you have made.&lt;/p&gt;

&lt;p&gt;This makes Git a perfect system for developers to collaborate and work together on one codebase.&lt;/p&gt;

&lt;p&gt;Within this series, we'll also look at branching, merging, and all those fancy terms which make Git even more powerful!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#a-git-use-case"&gt;
  &lt;/a&gt;
  A Git use case
&lt;/h2&gt;

&lt;p&gt;To conclude the important, let's take a look at how things were before Git.&lt;/p&gt;

&lt;p&gt;Chris would have some large project he is maintaining. Then Paul also wanted to work on the system.&lt;/p&gt;

&lt;p&gt;Chris would have to put his system on an FTP, USB or transfer it via a link.&lt;/p&gt;

&lt;p&gt;Paul would then start working, but during this time, both Chris and Paul might have changed the same file, but in a slightly different way.&lt;/p&gt;

&lt;p&gt;By the time they are both done, the files will be shared back again, but which file is the right one now?&lt;br&gt;
There should be some combination, right!&lt;/p&gt;

&lt;p&gt;Well, that's a massive problem.&lt;/p&gt;

&lt;p&gt;With Git, this would have been prevented as Paul would have been able to get the codebase from a distributed Git provider, and Git would have kept track of all changes.&lt;/p&gt;

&lt;p&gt;When both would need to merge the code, Git would tell them which lines are conflicting.&lt;/p&gt;

&lt;p&gt;A lifesaver, thank you, Git!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-install-git"&gt;
  &lt;/a&gt;
  How to install Git?
&lt;/h2&gt;

&lt;p&gt;Git is super easy to install on any system. I've written down how to install Git for the following platforms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;OSX&lt;/strong&gt;: &lt;code&gt;brew install git&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Windows&lt;/strong&gt;: &lt;a href="https://gitforwindows.org/"&gt;Download the installer&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Linux (apt)&lt;/strong&gt;: &lt;code&gt;sudo apt-get install git&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Linux (yum)&lt;/strong&gt;: &lt;code&gt;sudo yum install git&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you follow these steps, run the following command to check if Git is installed correctly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It should return a specific Git version like: &lt;code&gt;git version 2.33.0&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Git is a free and open-source way to keep track of your code changes.&lt;br&gt;
Git is also a way for multiple developers to work on the same code base in an asynchronous manner.&lt;br&gt;
Git can be used locally, but the real power lies in a managed solution like GitHub, GitLab, etc.&lt;/p&gt;

&lt;p&gt;I hope you learned the importance of Git. Keep an eye out for the next article in this series! 👀&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
