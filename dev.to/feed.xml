<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Terraform Scripting Concepts: Part 2 of 2</title>
      <author>SerDigital64</author>
      <pubDate>Fri, 31 Dec 2021 01:25:02 +0000</pubDate>
      <link>https://dev.to/serdigital64/terraform-scripting-concepts-part-2-of-2-36nl</link>
      <guid>https://dev.to/serdigital64/terraform-scripting-concepts-part-2-of-2-36nl</guid>
      <description>&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;This is the second part of the tutorial. If not done already, please read the first part: &lt;a href="https://dev.to/serdigital64/terraform-scripting-concepts-part-1-of-2-484f"&gt;Terraform Scripting Concepts: Part 1 of 2&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-functions"&gt;
  &lt;/a&gt;
  Using functions
&lt;/h2&gt;

&lt;p&gt;Another particular characteristic of the &lt;strong&gt;Terraform Language&lt;/strong&gt; is that it doesn't support user-defined functions. Instead, it provides groups of built-in functions that can be used when assigning value to variables and attributes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Numeric&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;Collection&lt;/li&gt;
&lt;li&gt;Encoding&lt;/li&gt;
&lt;li&gt;Filesystem&lt;/li&gt;
&lt;li&gt;Date and Time&lt;/li&gt;
&lt;li&gt;Hash and Crypto&lt;/li&gt;
&lt;li&gt;Networking&lt;/li&gt;
&lt;li&gt;Type conversion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use the following template for calling functions: &lt;code&gt;FUNCTION_NAME(PARAMETER1, PARAMETER2, PARAMETERN)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="nx"&gt;locals&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;# Find the maximum value from a list of numbers&lt;/span&gt;
  &lt;span class="nx"&gt;numeric_max&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;# Find the minimum value from a list of numbers&lt;/span&gt;
  &lt;span class="nx"&gt;numeric_min&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;# Conver string to lowercase&lt;/span&gt;
  &lt;span class="nx"&gt;string_lower&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"ServerX.DomainY"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;# Extrat dir from path&lt;/span&gt;
  &lt;span class="nx"&gt;filesystem_dir&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/full/path/to/file"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;# Extrat file name from path&lt;/span&gt;
  &lt;span class="nx"&gt;filesystem_file&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/full/path/to/file"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;# Record timestamp&lt;/span&gt;
  &lt;span class="nx"&gt;date_time_timestamp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#managing-infrastructure"&gt;
  &lt;/a&gt;
  Managing infrastructure
&lt;/h2&gt;

&lt;p&gt;Up until now, the script takes no action. In order for &lt;strong&gt;Terraform&lt;/strong&gt; to actually manage the target infrastructure and make changes to reach the required end-state, the script needs providers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Terraform&lt;/strong&gt; defines the following block types for working with the target infrastructure:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;terraform&lt;/code&gt;: used to set workspace-wide run-time options.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;required_providers&lt;/code&gt;: used to declare what providers will be used&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;provider&lt;/code&gt;: used to define provider-specific options.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;resource&lt;/code&gt;: used to create a logical representation of the managed resource. Each provider will further specialize the resource with attributes and subtypes.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;data&lt;/code&gt;: optional block that is used to query infrastructure resources managed by the provider. The query result is then made available for other blocks to use as variables.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#declare-providers"&gt;
  &lt;/a&gt;
  Declare Providers
&lt;/h3&gt;

&lt;p&gt;Providers are declared by adding a &lt;code&gt;required_providers&lt;/code&gt; nested block to the &lt;code&gt;terraform&lt;/code&gt; block. Each provider will be assigned to an attribute of type map:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Map name: used to reference the provider from other blocks.&lt;/li&gt;
&lt;li&gt;Attribute &lt;code&gt;version&lt;/code&gt;: used to define version requirements.&lt;/li&gt;
&lt;li&gt;Attribute &lt;code&gt;source&lt;/code&gt;: defines from where the provider will be downloaded.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additional provider-specific attributes can be defined by using the &lt;code&gt;provider&lt;/code&gt; block. The block will use the same label as the map name in &lt;code&gt;required_providers&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The following example declares two providers: &lt;code&gt;aws&lt;/code&gt; and &lt;code&gt;azure&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;terraform&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;required_providers&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;aws&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;gt;= 3.0.0"&lt;/span&gt;
      &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hashicorp/aws"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;azurerm&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;gt;= 2.0.0"&lt;/span&gt;
      &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hashicorp/azurerm"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"aws"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;region&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"us-east-1"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"azurerm"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;features&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#define-managed-resources"&gt;
  &lt;/a&gt;
  Define Managed Resources
&lt;/h3&gt;

&lt;p&gt;Once the provider has been declared, it will make available additional &lt;code&gt;resource&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; types. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provider: AWS

&lt;ul&gt;
&lt;li&gt;Resource Type: &lt;code&gt;aws_instance&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Data Type: &lt;code&gt;aws_ami&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Provider: Azure

&lt;ul&gt;
&lt;li&gt;Resource Type: &lt;code&gt;azurerm_linux_virtual_machine&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Data Type: &lt;code&gt;azurerm_image&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use the following template to define blocks:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="s2"&gt;"RESOURCE_TYPE"&lt;/span&gt; &lt;span class="s2"&gt;"RESOURCE_LABEL"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ATTRIBUTE1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VALUE&lt;/span&gt;
  &lt;span class="nx"&gt;ATTRIBUTEN&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VALUE&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"RESOURCE_TYPE"&lt;/span&gt; &lt;span class="s2"&gt;"RESOURCE_LABEL"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ATTRIBUTE1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VALUE&lt;/span&gt;
  &lt;span class="nx"&gt;ATTRIBUTEN&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VALUE&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The data and resource blocks can be used together to improve automation. In the following example, the &lt;code&gt;data&lt;/code&gt; block is used to query AWS for a particular AMI and then the &lt;code&gt;resource&lt;/code&gt; block will use the resulting AMI ID to create the VM instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="s2"&gt;"aws_ami"&lt;/span&gt; &lt;span class="s2"&gt;"coreos"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;most_recent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;    &lt;span class="c1"&gt;# Return the latest one if more than one result is available&lt;/span&gt;

  &lt;span class="nx"&gt;filter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;              &lt;span class="c1"&gt;# Look for fedora coreos v35&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"name"&lt;/span&gt;
    &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"fedora-coreos-35**"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;filter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;              &lt;span class="c1"&gt;# Look for HVM virtualization&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"virtualization-type"&lt;/span&gt;
    &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"hvm"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;owners&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"125523088429"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="c1"&gt;# CentOS / Fedora account that owns AMIs&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_instance"&lt;/span&gt; &lt;span class="s2"&gt;"aws_test_instance"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ami&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aws_ami&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coreos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;    &lt;span class="c1"&gt;# Use the AMI that was found in the data query&lt;/span&gt;
  &lt;span class="nx"&gt;instance_type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"t2.micro"&lt;/span&gt;      &lt;span class="c1"&gt;# Select the instance size&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;Explore Terraform resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Source code: &lt;a href="https://github.com/hashicorp/terraform"&gt;GitHUB Repository&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Tool documentation: &lt;a href="https://www.terraform.io/docs"&gt;Manual&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn advanced features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.terraform.io/language/functions"&gt;Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.terraform.io/language/expressions"&gt;Expresions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.terraform.io/language/values/variables#custom-validation-rules"&gt;Custom validation rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.terraform.io/language/functions"&gt;Built-in Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.terraform.io/language/modules"&gt;Modules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Understand provider-specific implementation details:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://registry.terraform.io/"&gt;Providers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#copyright-information"&gt;
  &lt;/a&gt;
  Copyright information
&lt;/h2&gt;

&lt;p&gt;This article is licensed under a &lt;a href="http://creativecommons.org/licenses/by/4.0/"&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;. For copyright information on the product or products mentioned inhere refer to their respective owner.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  Disclaimer
&lt;/h2&gt;

&lt;p&gt;Opinions presented in this article are personal and belong solely to me, and do not represent people or organizations associated with me in a professional or personal way. All the information on this site is provided "as is" with no guarantee of completeness, accuracy or the results obtained from the use of this information.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Terraform Scripting Concepts: Part 1 of 2</title>
      <author>SerDigital64</author>
      <pubDate>Fri, 31 Dec 2021 01:23:54 +0000</pubDate>
      <link>https://dev.to/serdigital64/terraform-scripting-concepts-part-1-of-2-484f</link>
      <guid>https://dev.to/serdigital64/terraform-scripting-concepts-part-1-of-2-484f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.terraform.io/"&gt;Terraform&lt;/a&gt; is an automation tool focused on infrastructure provisioning. The product is developed by HashiCorp, and the command line version is provided as an Open Source Project available on GitHub.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Terraform&lt;/strong&gt; has the following core components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Terraform CLI&lt;/strong&gt;: stand-alone app that provides the run-time environment for &lt;strong&gt;Terraform Scripts&lt;/strong&gt; and maintains build-state information of &lt;strong&gt;Managed Resources&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Terraform Script&lt;/strong&gt;: text file with &lt;strong&gt;Terraform Language&lt;/strong&gt; code used to describe the required end-state of the &lt;strong&gt;Managed Resources&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Managed Resource&lt;/strong&gt;: logical representation of a real infrastructure resource in the target infrastructure.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Terraform Provider&lt;/strong&gt;: stand-alone apps (plugins) that are used by the &lt;strong&gt;Terraform CLI&lt;/strong&gt; to interact with &lt;strong&gt;Managed Resources&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Terraform Workspace&lt;/strong&gt;: working directory where &lt;strong&gt;Terraform Scripts&lt;/strong&gt; are located and where the &lt;strong&gt;Terraform CLI&lt;/strong&gt; stores data files (state, temporary, plugins, etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#using-terraform"&gt;
  &lt;/a&gt;
  Using Terraform
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#cli-installation"&gt;
  &lt;/a&gt;
  CLI Installation
&lt;/h3&gt;

&lt;p&gt;The recommended method for production environments is to add &lt;a href="https://www.terraform.io/downloads"&gt;HashiCorp's package repository&lt;/a&gt; to the OS package manager and install it using native tools.&lt;/p&gt;

&lt;p&gt;For more relaxed environments the binary package provides a simpler alternative that does not require root privilege:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Create the installation repository&lt;/span&gt;
&lt;span class="nv"&gt;INSTALL_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/terraform-cli"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;INSTALL_PATH&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;INSTALL_PATH&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="c"&gt;# Download the binary package&lt;/span&gt;
curl &lt;span class="nt"&gt;-LO&lt;/span&gt; https://releases.hashicorp.com/terraform/1.1.2/terraform_1.1.2_linux_amd64.zip
&lt;span class="c"&gt;# Uncompress the binary package&lt;/span&gt;
&lt;span class="nv"&gt;ZIP_PACKAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'terraform_1.1.2_linux_amd64.zip'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; unzip &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ZIP_PACKAGE&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ZIP_PACKAGE&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#running-scripts"&gt;
  &lt;/a&gt;
  Running scripts
&lt;/h3&gt;

&lt;p&gt;The execution process of &lt;strong&gt;Terraform Scripts&lt;/strong&gt; is divided into stages:&lt;/p&gt;

&lt;p&gt;1) &lt;code&gt;init&lt;/code&gt;: prepares the &lt;strong&gt;Terraform Workspace&lt;/strong&gt;, sets run-time parameters, downloads, and installs providers.&lt;br&gt;
2) &lt;code&gt;plan&lt;/code&gt;: creates/updates state information of managed resources and executes a dry-run to create the change plan. For already existing resources, if the provider is unable to modify attributes on the fly it will propose a destructive change (remove and recreate the resource with the new end-state).&lt;br&gt;
3) &lt;code&gt;apply&lt;/code&gt;: executes the change plan, and updates resource state information. The provider will modify the target infrastructure by creating, updating and removing resources until the end-state is reached.&lt;/p&gt;

&lt;p&gt;To execute the script the &lt;strong&gt;Terraform&lt;/strong&gt; CLI must be already inside the workspace directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;WORKSPACE_PATH
&lt;span class="c"&gt;# Initialize the workspace&lt;/span&gt;
terraform init
&lt;span class="c"&gt;# Prepare and review the action plan&lt;/span&gt;
terraform plan
&lt;span class="c"&gt;# Execute the action plan&lt;/span&gt;
terraform apply
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that the user running the process doesn't need root privilege, just write permissions to the workspace path.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#script-structure"&gt;
  &lt;/a&gt;
  Script structure
&lt;/h2&gt;

&lt;p&gt;The first thing to understand about &lt;strong&gt;Terraform Scripts&lt;/strong&gt; is that the &lt;strong&gt;Terraform Language&lt;/strong&gt; is not for general-purpose development. Based on HCL (&lt;a href="https://github.com/hashicorp/hcl"&gt;Hashicorp Configuration Language&lt;/a&gt;), it's specifically designed to describe infrastructure resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Terraform Scripts&lt;/strong&gt; are developed by defining blocks: a complex data structure that describes a configuration object through its attributes.&lt;/p&gt;

&lt;p&gt;Use the following template for declaring blocks:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="nx"&gt;BLOCK_TYPE&lt;/span&gt; &lt;span class="s2"&gt;"RESOURCE_TYPE"&lt;/span&gt; &lt;span class="s2"&gt;"RESOURCE_LABEL1"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;ATTRIBUTE1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VALUE&lt;/span&gt;
  &lt;span class="nx"&gt;ATTRIBUTE2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VALUE&lt;/span&gt;
  &lt;span class="nx"&gt;ATTRIBUTEN&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VALUE&lt;/span&gt;

  &lt;span class="c1"&gt;# Nested block&lt;/span&gt;
  &lt;span class="nx"&gt;BLOCK_TYPE&lt;/span&gt; &lt;span class="s2"&gt;"RESOURCE_TYPE"&lt;/span&gt; &lt;span class="s2"&gt;"RESOURCE_LABEL2"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ATTRIBUTE&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VALUE&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;BLOCK_TYPE&lt;/strong&gt;: defines what type of configuration object is going to be described. Notice that Blocks can have any number of attributes and other blocks (nested).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;RESOURCE_TYPE&lt;/strong&gt;: optional field used to select object subtypes. Not all objects will require one.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;RESOURCE_LABEL&lt;/strong&gt;: optional field to assign a label (ID) to the object.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ATTRIBUTE&lt;/strong&gt;: name of the object's attribute.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;VALUE&lt;/strong&gt;: value that will be assigned to the object's attribute.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following list shows common built-in block types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;variable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additional types and subtypes are implemented through &lt;strong&gt;Terraform Providers&lt;/strong&gt;. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest"&gt;&lt;code&gt;aws&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://registry.terraform.io/providers/hashicorp/google/latest"&gt;&lt;code&gt;google&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://registry.terraform.io/providers/hashicorp/azurerm/latest"&gt;&lt;code&gt;azurerm&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://registry.terraform.io/providers/hashicorp/kubernetes/latest"&gt;&lt;code&gt;kubernetes&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Scripts can have comments anywhere:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;//&lt;/code&gt;: single-line comment. Anything at the right is ignored.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#&lt;/code&gt;: single-line comment. Anything at the right is ignored.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;/* */&lt;/code&gt;: multi-line comment. Anything between the delimiters is ignored.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a good practice, after the script is created/updated run the built-in linter and code-formatter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;WORKSPACE_PATH
terraform &lt;span class="nb"&gt;fmt
&lt;/span&gt;terraform validate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-variables"&gt;
  &lt;/a&gt;
  Using Variables
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#declaration"&gt;
  &lt;/a&gt;
  Declaration
&lt;/h3&gt;

&lt;p&gt;As everything in &lt;strong&gt;Teraform&lt;/strong&gt;, variables are also a block type. Use the following template to declare variables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="nx"&gt;locals&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;VARIABLE_NAME&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VALUE&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#data-types"&gt;
  &lt;/a&gt;
  Data Types
&lt;/h3&gt;

&lt;p&gt;Both variables and attributes have types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;string&lt;/code&gt;: a sequence of Unicode characters.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;number&lt;/code&gt;: integer or float numbers.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;bool&lt;/code&gt;: boolean values.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;list&lt;/code&gt;: indexed sequence of values. The index is numerical and starts at cero. VALUEs can be of any type.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;map&lt;/code&gt;: group of key + value pairs. VALUEs can be of any type.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;null&lt;/code&gt;: empty value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Types are inferred from the value (i.e. no explicit data type declaration). For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="nx"&gt;locals&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;test_string&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"abc123"&lt;/span&gt;
  &lt;span class="nx"&gt;test_number_integer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;
  &lt;span class="nx"&gt;test_number_float&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;15.1&lt;/span&gt;
  &lt;span class="nx"&gt;test_bool&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;test_list&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"value 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;100&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;test_map&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;key1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"value 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;key2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;p&gt;Parameters are variables that are used to provide run-time data to &lt;strong&gt;Terraform Scripts&lt;/strong&gt;. They are declared using the &lt;code&gt;variable&lt;/code&gt; block type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"PARAMETER_NAME"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;# Optional parameter attributes&lt;/span&gt;
  &lt;span class="nx"&gt;ATTRIBUTE&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VALUE&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;They are different from regular variables as they allow attributes to further describe the parameter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;default&lt;/code&gt;: value that is assigned if none is provided.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;description&lt;/code&gt;: text message that is used to describe the parameter.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;type&lt;/code&gt;: expected variable type. This is not used to declare the type, but rather to constrain the provided value.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;validation&lt;/code&gt;: validation block used to perform additional checks.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;sensitive&lt;/code&gt;: flag to restrict script output. Used to mask sensitive values such as passwords.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;nullable&lt;/code&gt;: flag to indicate if the value can be null.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"aws_region"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
  &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"us-west-1a"&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"target AWS region"&lt;/span&gt;
  &lt;span class="nx"&gt;nullable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="nx"&gt;sensitive&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"xaas_test_api_secret"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"API secret for the Test API"&lt;/span&gt;
  &lt;span class="nx"&gt;nullable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="nx"&gt;sensitive&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h3&gt;

&lt;p&gt;In addition to the &lt;code&gt;local&lt;/code&gt; and &lt;code&gt;variable&lt;/code&gt; block types &lt;strong&gt;Terraform&lt;/strong&gt; provides the &lt;code&gt;output&lt;/code&gt; type to define variables that will be exported and made available to external apps and scripts. The following attributes are available:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;value&lt;/code&gt;: the value assigned to the variable.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;description&lt;/code&gt;: describe what the value represents.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;sensitive&lt;/code&gt;: flag to restrict script output. Used to mask sensitive values such as passwords.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;output&lt;/span&gt; &lt;span class="s2"&gt;"sysadmin_key"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"secret-api-key"&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"API secret for the new service"&lt;/span&gt;
  &lt;span class="nx"&gt;sensitive&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#retreive-variables-value"&gt;
  &lt;/a&gt;
  Retreive variable's value
&lt;/h3&gt;

&lt;p&gt;In general, any block attribute can be referenced from within other blocks by using the following structure: &lt;code&gt;BLOCK_TYPE.ATTRIBUTE&lt;/code&gt; or &lt;code&gt;BLOCK_TYPE.BLOCK_LABEL.ATTRIBUTE&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In addition to the generic format there are special cases to consider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Locals: use &lt;code&gt;local&lt;/code&gt; instead of &lt;code&gt;locals&lt;/code&gt;: &lt;code&gt;local.ATTRIBUTE&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Parameters: use the short form &lt;code&gt;var&lt;/code&gt; instead of the full type name &lt;code&gt;variable&lt;/code&gt;: &lt;code&gt;var.ATTRIBUTE&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Outputs: requires the module name where the output is declared: &lt;code&gt;module.MODULE NAME.OUTPUT_NAME&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Variables can also be used in &lt;strong&gt;String Templates&lt;/strong&gt; (simple programming code that can be embedded inside string declarations): &lt;code&gt;"${BLOCK_TYPE.ATTRIBUTE}"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The following example shows the three variable types seen so far:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="nx"&gt;locals&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;api_secret_seed&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"abc123"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"new_service_name"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
  &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"new_service_name"&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"What name will the new service have"&lt;/span&gt;
  &lt;span class="nx"&gt;nullable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="nx"&gt;sensitive&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;output&lt;/span&gt; &lt;span class="s2"&gt;"service_secret"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="kd"&gt;local&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api_secret_seed&lt;/span&gt;&lt;span class="k"&gt;}${&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_service_name&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"API secret for the new service"&lt;/span&gt;
  &lt;span class="nx"&gt;sensitive&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;Continue reading the second part of the tutorial: &lt;a href="https://dev.to/serdigital64/terraform-scripting-concepts-part-2-of-2-36nl"&gt;Terraform Scripting Concepts: Part 2 of 2&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#copyright-information"&gt;
  &lt;/a&gt;
  Copyright information
&lt;/h2&gt;

&lt;p&gt;This article is licensed under a &lt;a href="http://creativecommons.org/licenses/by/4.0/"&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;. For copyright information on the product or products mentioned inhere refer to their respective owner.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  Disclaimer
&lt;/h2&gt;

&lt;p&gt;Opinions presented in this article are personal and belong solely to me, and do not represent people or organizations associated with me in a professional or personal way. All the information on this site is provided "as is" with no guarantee of completeness, accuracy or the results obtained from the use of this information.&lt;/p&gt;

</description>
      <category>terraform</category>
      <category>devops</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>2022 Opportunities Tech outlook</title>
      <author>Victory Tuduo</author>
      <pubDate>Fri, 31 Dec 2021 00:51:23 +0000</pubDate>
      <link>https://dev.to/victorytuduo/2022-opportunities-tech-outlook-5a6j</link>
      <guid>https://dev.to/victorytuduo/2022-opportunities-tech-outlook-5a6j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;With 2021 gradually rolling away with just less than 24 hours to go, 2022 is right before us. This year may have been a good year for some in tech, possibly landing a gig, building a cool app or simply advancing knowledge to be able to be a better developer in the field of choice. With 2022 close by, some people may be looking to venture into the tech industry and are wondering: where to start? Where can I fit in? Probably there may be some looking to do something not actually coding related but is still cool and profiting.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#goals"&gt;
  &lt;/a&gt;
  Goals
&lt;/h2&gt;

&lt;p&gt;At the end of this tutorial readers will be aware of some opportunities present in the tech industry and will be able to pick a place to fit in come 2022.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tech"&gt;
  &lt;/a&gt;
  What is Tech?
&lt;/h2&gt;

&lt;p&gt;Amazing how one word could mean lots of different things when defined from different perspectives. A simple definition of Tech in relation to it as a career is that tech relates to a field that makes use of tools and set of skills or knowledge geared towards creating products or services that satisfy a particular need. &lt;/p&gt;

&lt;p&gt;Would the tech industry be beneficial as a career path? The answer is pretty much a big YES! While tech jobs are really interesting to get into, statistics also show steady increases in demand in the tech sector and well grossing pay for various tech fields. Best tech jobs are projected to pay even more than the average median wage of $34,750. Here's a list of some tech jobs and their pay gotten from &lt;a href="https://www.zdnet.com/article/tech-jobs-these-are-the-highest-paying-roles-and-heres-where-to-find-them/"&gt;zdnet.com&lt;/a&gt;, The 10 fastest-growing salaries by occupation also included:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Technical support engineer ($68,651, +8.2%)&lt;/li&gt;
&lt;li&gt;Cloud engineer ($136,479, +6.3%)&lt;/li&gt;
&lt;li&gt;Business analyst ($97,633 +5.3%)&lt;/li&gt;
&lt;li&gt;Web developer ($81,550, +4.9%)&lt;/li&gt;
&lt;li&gt;Data engineer ($118,621, +4.7%&lt;/li&gt;
&lt;li&gt;Cybersecurity engineer ($134,340, +4.3%) &lt;/li&gt;
&lt;li&gt;Data architect ($133,064, +3.2%)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#some-fields-in-the-tech-industry"&gt;
  &lt;/a&gt;
  Some fields in the Tech Industry
&lt;/h2&gt;

&lt;p&gt;With tech covering a wide range of skill sets, there are a lot of fields one can get into depending on interest or goal of venturing into tech. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-developers"&gt;
  &lt;/a&gt;
  Web Developers
&lt;/h3&gt;

&lt;p&gt;This set of people are concerned with building scalable web applications. These applications may vary in terms of usage. Web development over recent years has been growing more popular and there's always an increasing demand for people in this field. If you have no problems with learning programming languages or writing codes and have always been fascinated about web pages and wondered how you can make one, well guess you just found your choice field :). Being such a broad field, web development is further divided into two parts, namely: front-end and back-end web development. The former deals with designing the user interface of the website probably in accordance to design specifications while the later deals with developing the applications back-end which may consist of the app's data management, provide authentication for users and much more. These are primarily things that occur but are not directly visible to the user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-designers"&gt;
  &lt;/a&gt;
  Web Designers
&lt;/h3&gt;

&lt;p&gt;Interested in the web but don't enjoy writing code? Well, these guys are responsible for everything users see on a site. They design the workflow of websites which are then designed by the developers. These design cover choices of fonts, animations and the application layout.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#software-developers"&gt;
  &lt;/a&gt;
  Software Developers
&lt;/h3&gt;

&lt;p&gt;These guys write and ship large amount of codes which in turn developsp software used on a daily basis by individuals or companies. They develop applications, system softwares, operating systems among others.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-page-builders"&gt;
  &lt;/a&gt;
  Web Page Builders
&lt;/h3&gt;

&lt;p&gt;They develop web applications, but what makes them different from the web developers mentioned earlier? Unlike web developers, these set of people make use of Content Management Systems (such as WordPress) – basically just using pre-existing tools to create a website without having to hard program.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ux-ui-designer"&gt;
  &lt;/a&gt;
  UX / UI designer
&lt;/h3&gt;

&lt;p&gt;UX focuses on the overall feel of a product and how customers interact using the application, while UI is focused on how the product is laid out. This covers the design of the product while maintaining consistency specified by the UX. UI designs can be on web sites, system applications layouts e.t.c&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#technical-writer"&gt;
  &lt;/a&gt;
  Technical writer
&lt;/h3&gt;

&lt;p&gt;This set of people are concerned with authoring manuals or technical specifications on various topics which will be beneficial to their readers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#game-engineer"&gt;
  &lt;/a&gt;
  Game Engineer
&lt;/h3&gt;

&lt;p&gt;Interested in the field of gaming? Here are some choices you can choose from in tech:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Game designer –&lt;/strong&gt; works on developing the game concept – characters, setting, storyline, levels, animations. Basically the general idea behind the game&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Game developer –&lt;/strong&gt; has the technical skills required to turn the game idea into reality, by converting the sketches and storyline into a playable product&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Game tester –&lt;/strong&gt; the most fun job of them all – working to test the games thoroughly to uncover potential bugs and give insight on areas where the game can be further improved before being released to the public&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#project-manager"&gt;
  &lt;/a&gt;
  project manager
&lt;/h3&gt;

&lt;p&gt;Organizes and manages a team of professionals while taking the job of building a product or service. Make sure team members meet their quotas, resources are well managed and product is shipped timely.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphics-designer"&gt;
  &lt;/a&gt;
  Graphics Designer
&lt;/h3&gt;

&lt;p&gt;Makes use of computer graphics software to create beautiful illustrations, design logos, fliers, UIs among others. A field that's easy to fall in love with if you have an apt for pretty designs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3d-modelling-and-animations"&gt;
  &lt;/a&gt;
  3d Modelling and Animations
&lt;/h3&gt;

&lt;p&gt;Concerned with creating character and environmental models for use in animations, games or other purposes. Makes use of animation software to create nice moving motion pictures or animations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tech-recruiter"&gt;
  &lt;/a&gt;
  Tech recruiter
&lt;/h3&gt;

&lt;p&gt;Identify potential job candidates for IT positions, reviews and submits these information to hiring managers for consideration.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloud-engineer"&gt;
  &lt;/a&gt;
  Cloud Engineer
&lt;/h3&gt;

&lt;p&gt;This set of people comprises of IT professionals responsible for any technological duties associated with cloud computing. These include design, planning, management, maintenance and support.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cybersecurity-engineer"&gt;
  &lt;/a&gt;
  Cybersecurity engineer
&lt;/h3&gt;

&lt;p&gt;People in this category are concerned with internet security and prevention of cyber crimes. They are sometimes called information security engineers. They identify threats and vulnerabilities in systems and software then use their skills to develop and implement high-tech solutions to defend against hacking, malware and ransomware, insider threats e.t.c&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;There are a lot of fields in the tech industry which would be a good fit for your choice of skill sets or interest, finding the right one to indulge in is the first step in taking a tech career.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>career</category>
      <category>design</category>
    </item>
    <item>
      <title>Year 2 of the Art of Destroying a USB</title>
      <author>Jonyk56</author>
      <pubDate>Thu, 30 Dec 2021 23:53:33 +0000</pubDate>
      <link>https://dev.to/jonyk56/year-2-of-the-art-of-destroying-a-usb-e1m</link>
      <guid>https://dev.to/jonyk56/year-2-of-the-art-of-destroying-a-usb-e1m</guid>
      <description>&lt;p&gt;Whaddup folks! It's that time of year again where I do the very very very terrible decision of going to a shooting range and explosives field to destroy USBS and man this year was fun, I got to mess with A C I D and a few toxic folks from tiktok (No you won't get my tiktok, ever) to give suggestions on how to destroy, mangle, melt and vaporize my USBS this year... those were some terrible choices, glad I brought earplugs haha.&lt;/p&gt;

&lt;p&gt;So first off, I decided I'd use music to my advantage and I got a very special type of chemical in my posession that quite literally acts like an acid when you sing or play a Bb next to it.&lt;/p&gt;

&lt;p&gt;For the rest of my USBS, I decided I'd go ahead and use a sniper rifle on half, and explode the rest using low grade C4 (learned my lesson from last year using high grade!) and man was that fun!&lt;/p&gt;

&lt;p&gt;I can't say too much about the rest but I will probably post an image or two to twitter later!&lt;/p&gt;

&lt;p&gt;Jonyk5 OUT!&lt;/p&gt;

&lt;p&gt;(&lt;a href="https://twitter.com/Jonyk5_dev"&gt;Ma Twitta&lt;/a&gt;)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>December Developer Digest: A year in review</title>
      <author>Dawn Lambeth</author>
      <pubDate>Thu, 30 Dec 2021 23:18:48 +0000</pubDate>
      <link>https://dev.to/stripe/december-developer-digest-a-year-in-review-pbi</link>
      <guid>https://dev.to/stripe/december-developer-digest-a-year-in-review-pbi</guid>
      <description>&lt;p&gt;📩 We're sharing our most recent developer digest here on DEV! If you're interested in subscribing to monthly developer updates, sign up &lt;a href="https://go.stripe.global/dev-digest"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C-0wFJ7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XRaNCJc4--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kwi5h27a7elyignm8iie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C-0wFJ7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XRaNCJc4--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kwi5h27a7elyignm8iie.png" alt="Horizontal rule" width="818" height="3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2021-wrapup"&gt;
  &lt;/a&gt;
  2021 wrap-up
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--atvy6lwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/w0XmZSAABqyRVo4ynamYp-oPyWE8Mxk5gpLAqzvj6w0DN784jpEmg8ZQ09KaLPmTCYIpwiuPV75SLlEr_vwdPGU0kBPDzbJ2n37M-XRE1p8XZeh1zxXASe1jDvoVJeA41xzODw5S" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--atvy6lwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/w0XmZSAABqyRVo4ynamYp-oPyWE8Mxk5gpLAqzvj6w0DN784jpEmg8ZQ09KaLPmTCYIpwiuPV75SLlEr_vwdPGU0kBPDzbJ2n37M-XRE1p8XZeh1zxXASe1jDvoVJeA41xzODw5S" alt="2021 wrap-up: a year in review" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this special edition of the Developer Digest, we’re highlighting some of the most important product releases, video series, and community contributions of 2021. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stay-updated"&gt;
  &lt;/a&gt;
  Stay updated
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Payment Element:&lt;/strong&gt; The new &lt;a href="https://stripe.com/docs/payments/payment-element?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;Payment Element&lt;/a&gt; lets you build a custom payment flow that supports &lt;a href="https://stripe.com/docs/payments/payment-methods/integration-options?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;18+ payment methods&lt;/a&gt; with a single integration. Once integrated, you can add additional payment methods with no front-end changes. Explore our &lt;a href="https://stripe.com/docs/payments/quickstart?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;code samples&lt;/a&gt; or learn how to &lt;a href="https://stripe.com/docs/payments/payment-element/migration?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;migrate from an existing integration&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Payment Links:&lt;/strong&gt; Use &lt;a href="https://stripe.com/docs/payments/payment-links?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;Payment Links&lt;/a&gt; to sell a product or subscription in minutes. Create a full payment page in just a few clicks and embed the link or share it with your customers—no code required. &lt;a href="https://www.youtube.com/watch?v=RXuPWuI7JXE"&gt;Learn how to set up a payment link&lt;/a&gt; in our video or &lt;a href="https://dashboard.stripe.com/payment-links/create?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;get started now&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stripe Tax:&lt;/strong&gt; &lt;a href="https://stripe.com/docs/tax?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;Stripe Tax&lt;/a&gt; simplifies tax calculation and collection. If you’re looking to incorporate Stripe Tax into your integration or learn more about the three steps you need to get started, &lt;a href="https://youtu.be/3psLlebNl5w/"&gt;watch our guide on YouTube&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stripe for VS Code:&lt;/strong&gt; With our &lt;a href="https://stripe.com/docs/stripe-vscode?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;VS Code extension&lt;/a&gt;, you can stream logs and webhook events from the Stripe API to your local development machine, quickly access the API reference by hovering over resource methods, easily get started with one of &lt;a href="https://github.com/stripe-samples"&gt;Stripe’s sample apps&lt;/a&gt;, and much more. &lt;a href="https://www.youtube.com/watch?v=fATvgUMWLzU"&gt;Learn more&lt;/a&gt; in our video or &lt;a href="https://stripe.com/docs/stripe-vscode?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264#installation"&gt;get started now&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stripe React Native SDK:&lt;/strong&gt; The official &lt;a href="https://github.com/stripe/stripe-react-native"&gt;Stripe React Native SDK&lt;/a&gt; is now in public beta to help you build delightful payment experiences using React Native. Watch our video guides on &lt;a href="https://www.youtube.com/watch?v=qiEwO_UrOro"&gt;adding the SDK to a React Native app&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=SH2bi-1MUNM"&gt;accepting a payment&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn"&gt;
  &lt;/a&gt;
  Learn
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Developer Foundations series:&lt;/strong&gt;  In this video series, you'll learn the fundamentals of topics like authentication, making requests, adding metadata, and more. Check out the playlist for &lt;a href="https://www.youtube.com/watch?v=8Db0nTVlKM0&amp;amp;list=PLy1nL-pvL2M50RmP6ie-gdcSnfOuQCRYk"&gt;&lt;/a&gt;&lt;a href="https://www.youtube.com/watch?v=8Db0nTVlKM0&amp;amp;list=PLy1nL-pvL2M50RmP6ie-gdcSnfOuQCRYk"&gt;Ruby&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=gRvlMeBks6k&amp;amp;list=PLy1nL-pvL2M55YVn0mGoQ5r-39A1-ZypO"&gt;Python&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=CeufP46S5BI&amp;amp;list=PLy1nL-pvL2M6cUbiHrfMkXxZ9j9SGBxFE"&gt;PHP&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=R5RoYDEIhCI&amp;amp;list=PLy1nL-pvL2M5xNIuNapwmABwEy2uifAlY"&gt;Node&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=oJRPV07bVS0&amp;amp;list=PLy1nL-pvL2M5eqpSBR9KL7K0lcnWo0V0a"&gt;Go&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=t4iJ07E_tA8&amp;amp;list=PLy1nL-pvL2M5TnSGVjEHTTMgdnnHi-KPg"&gt;Java&lt;/a&gt;, or &lt;a href="https://www.youtube.com/watch?v=N20T0rXAWsc&amp;amp;list=PLy1nL-pvL2M4cNNoUtjWevYSci4ubsbhC"&gt;.NET&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Global payment video series&lt;/strong&gt;: Watch our &lt;a href="https://www.youtube.com/playlist?list=PLy1nL-pvL2M5naBTFxHkj3TNGFhHkVRSu"&gt;series of videos&lt;/a&gt; that walks through how to get started accepting payments on Stripe using local payment methods.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stripe Postman video series:&lt;/strong&gt; Learn how to use the new &lt;a href="https://www.postman.com/stripedev/workspace/stripe-developers/overview"&gt;Stripe Postman collection&lt;/a&gt; to try API requests without writing any code. You can now learn how to &lt;a href="https://youtu.be/Mxsmcsvhq9s"&gt;install the collection&lt;/a&gt;, set up &lt;a href="https://youtu.be/ZFJ_z8v35e8"&gt;authentication&lt;/a&gt;, make &lt;a href="https://youtu.be/5SzRdPuZVR0"&gt;basic&lt;/a&gt; and &lt;a href="https://youtu.be/EsOLI6h9XBY"&gt;advanced&lt;/a&gt; requests, &lt;a href="https://youtu.be/9sIkxX2CiE8"&gt;paginate lists&lt;/a&gt;, send &lt;a href="https://youtu.be/DPDsCo3sh98"&gt;versions&lt;/a&gt; and &lt;a href="https://youtu.be/PyOWJliOpjE"&gt;metadata&lt;/a&gt;, &lt;a href="https://youtu.be/1Uyeouge66U"&gt;expand responses&lt;/a&gt;, and work with &lt;a href="https://youtu.be/wTHgZji6zHk"&gt;idempotency keys&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h2&gt;

&lt;p&gt;Thank you to our top open-source contributor of 2021: &lt;a href="https://github.com/hibariya"&gt;hibariya&lt;/a&gt;.   &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=385cpCpGRC0"&gt;Build a full stack ecommerce store&lt;/a&gt; with Next.js, Strapi, Magic, and Stripe [video from &lt;a href="https://www.youtube.com/channel/UCMguCMq25nEqlHlr17iINNw"&gt;Alex the Entreprenerd&lt;/a&gt;]
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/385cpCpGRC0"&gt;
&lt;/iframe&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.billflow.io/ultimate-stripe-tax-guide-for-saas/"&gt;Ultimate Stripe Tax Guide for SaaS&lt;/a&gt; [blog post from Ben Sears of &lt;a href="https://www.billflow.io/"&gt;Billflow&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=XnjA8PlwFIc"&gt;Stripe integration for eCommerce app in React Native &amp;amp; AWS Amplify&lt;/a&gt; [video from &lt;a href="https://www.youtube.com/channel/UCYSa_YLoJokZAwHhlwJntIA"&gt;Vadim Savin&lt;/a&gt; of &lt;a href="https://www.notjust.dev/"&gt;notJustDevelopment&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Learn how to &lt;a href="https://www.youtube.com/watch?v=P0Udy2Gi7n8"&gt;set up subscription payments with Stripe, Next.js, and Firebase&lt;/a&gt; [video from &lt;a href="https://www.youtube.com/channel/UCJae_agpt9S3qwWNED0KHcQ"&gt;Jarrod Watts&lt;/a&gt;]
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/P0Udy2Gi7n8"&gt;
&lt;/iframe&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#stay-connected"&gt;
  &lt;/a&gt;
  Stay connected
&lt;/h2&gt;

&lt;p&gt;💬 &lt;a href="https://twitter.com/stripedev"&gt;Follow us at @StripeDev on Twitter&lt;/a&gt; for updates and answers to your developer questions. Let us know what you’re working on with the Stripe API!&lt;br&gt;
👾 &lt;a href="https://stripe.com/go/developer-chat"&gt;Join the Stripe Discord server&lt;/a&gt; to chat live with other developers.&lt;br&gt;
📺 &lt;a href="https://www.youtube.com/stripedevelopers"&gt;Subscribe to Stripe Developers on YouTube&lt;/a&gt; for office hours, live streams, and online technical workshops.&lt;br&gt;
📚 &lt;a href="https://dev.to/stripe"&gt;Add us on DEV&lt;/a&gt; for how-to articles and past editions of this developer digest.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C-0wFJ7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XRaNCJc4--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kwi5h27a7elyignm8iie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C-0wFJ7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XRaNCJc4--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kwi5h27a7elyignm8iie.png" alt="Horizontal rule" width="818" height="3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What would you like to see more (or less) of? Let us know by replying to this email. If you have questions, comments, or need help with code, we’re here to help &lt;a href="https://support.stripe.com/contact/login"&gt;via email&lt;/a&gt;, or on &lt;a href="https://stripe.com/go/developer-chat"&gt;Discord&lt;/a&gt;, &lt;a href="https://twitter.com/StripeDev"&gt;Twitter&lt;/a&gt;, and &lt;a href="https://stackoverflow.com/tags/stripe-payments/info"&gt;Stack Overflow&lt;/a&gt;. View our &lt;a href="https://github.com/stripe-samples"&gt;code samples&lt;/a&gt; on GitHub.&lt;/p&gt;

&lt;p&gt;—The Stripe team&lt;/p&gt;

</description>
    </item>
    <item>
      <title>2021 reflections and what's next in 2022</title>
      <author>Anuradha</author>
      <pubDate>Thu, 30 Dec 2021 23:12:24 +0000</pubDate>
      <link>https://dev.to/anuradhakumari/2021-reflections-and-whats-next-in-2022-4jha</link>
      <guid>https://dev.to/anuradhakumari/2021-reflections-and-whats-next-in-2022-4jha</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;a href="https://www.anuradhakumari.com/blog/2021-year-in-review"&gt;Originally published at anuradhakumari.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hi everyone, today is the last day of year 2021 and I wanted to do a year end review and also share my plans for the next year with you all.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2021-plans-and-goals"&gt;
  &lt;/a&gt;
  2021 plans and goals
&lt;/h2&gt;

&lt;p&gt;Amidst all the chaos of pandemic that 2020 brought upon us, I did not plan extensively for 2021 but instead I focused on a theme.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I wanted the year of 2021 to be my year of YES.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I decided to not hesitate when new opportunities come up and go for exploring new things in life.&lt;/p&gt;

&lt;p&gt;There were three high-level things which I wrote to focus on 1st January 2021 in my journal, they were: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Health&lt;/li&gt;
&lt;li&gt;Career&lt;/li&gt;
&lt;li&gt;Growth &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#health"&gt;
  &lt;/a&gt;
  Health
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#in-2021"&gt;
  &lt;/a&gt;
  In 2021
&lt;/h3&gt;

&lt;p&gt;I had multiple health issues and I wanted to focus on improving it. &lt;/p&gt;

&lt;p&gt;What did I do about it? &lt;/p&gt;

&lt;p&gt;I did meditation, walking and kept my diet in check for most of the days. And also took consultation from a Doctor whose medication turned out to be effective for me. &lt;/p&gt;

&lt;p&gt;As of today my health conditions have improved by around 70% and it is a huge win for me. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-2022"&gt;
  &lt;/a&gt;
  For 2022
&lt;/h3&gt;

&lt;p&gt;My first and most important goal again is to focus on my health. &lt;/p&gt;

&lt;p&gt;Everything else is secondary.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#career"&gt;
  &lt;/a&gt;
  Career
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#in-2021"&gt;
  &lt;/a&gt;
  In 2021
&lt;/h3&gt;

&lt;p&gt;I wanted to take my career to next level and get a relocation job. &lt;/p&gt;

&lt;p&gt;I started my job search in Jan 2021, accepted the job offer for my current company in April and then moved to Netherlands in end of September.&lt;/p&gt;

&lt;p&gt;This was not an easy decision for me. &lt;/p&gt;

&lt;p&gt;I was pretty anxious and scared, this was a huge step for my life and I was pushing myself way out of my comfort zone. &lt;/p&gt;

&lt;p&gt;But today I can say proudly that I'm glad that I took this decision and did not step back due to the fear of unknown. &lt;/p&gt;

&lt;p&gt;I just tried to &lt;em&gt;live by my theme of saying yes&lt;/em&gt; to every opportunity that I felt could be a good step for me instead of doubting myself. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-2022"&gt;
  &lt;/a&gt;
  For 2022
&lt;/h3&gt;

&lt;p&gt;I plan to take my career to even more heights by exploring new technologies and working towards being a better developer and developer advocate.&lt;/p&gt;

&lt;p&gt;I specifically want to explore more and more about accessibility and continue sharing my learnings and spread more awareness about it in the tech community.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#growth"&gt;
  &lt;/a&gt;
  Growth
&lt;/h2&gt;

&lt;p&gt;The third focus for me was on growth - in whatever I was already doing. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-2021"&gt;
  &lt;/a&gt;
  In 2021
&lt;/h3&gt;

&lt;p&gt;I wanted to do more conferences and grow my technical expertise. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#speaking-in-events"&gt;
  &lt;/a&gt;
  Speaking in events
&lt;/h4&gt;

&lt;p&gt;I aimed to participate in at least one event per month and I ended up speaking at 20 events in 2021. &lt;/p&gt;

&lt;p&gt;Among these were two workshops for college students where I taught web development and React JS. &lt;/p&gt;

&lt;p&gt;I also spoke at JS World conference which was attended by around 50,000 people and it is the biggest conference I have ever been part of till now. &lt;/p&gt;

&lt;p&gt;I also got the chance to &lt;a href="https://www.anuradhakumari.com/talks"&gt;speak at some amazing events&lt;/a&gt; like Google I/O extended UK and Ireland event, at DevFest India, Next JS conference and React India conference. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#mcing-at-conferences"&gt;
  &lt;/a&gt;
  MCing at conferences
&lt;/h4&gt;

&lt;p&gt;I also wanted to try hosting an event and I got an opportunity to &lt;a href="https://twitter.com/miracle_404/status/1468908365250273283"&gt;MC at the GraphQL Galaxy conference&lt;/a&gt; in December 2021. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-2022"&gt;
  &lt;/a&gt;
  For 2022
&lt;/h3&gt;

&lt;p&gt;I absolutely loved being Master of Ceremonies and for 2022, I would like to MC for more events. &lt;/p&gt;

&lt;p&gt;For speaking apsirations, in 2022, my goal is to deliver talks in few in-person conferences (of course only if the travelling is safe). &lt;/p&gt;

&lt;p&gt;I would like to meet more people in tech in person and I also want to try giving a keynote talk at a conference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wins-in-2021"&gt;
  &lt;/a&gt;
  Wins in 2021
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#gde-and-mde"&gt;
  &lt;/a&gt;
  GDE and MDE
&lt;/h3&gt;

&lt;p&gt;Among my most favourite wins of 2021 is that I became a Google Developers Expert for Web technologies and also a Cloudinary Media Developer Expert. &lt;/p&gt;

&lt;p&gt;These titles definitely boost my confidence and motivate me to contribute more and more towards helping the developer community. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#started-youtube-channel"&gt;
  &lt;/a&gt;
  Started YouTube Channel
&lt;/h3&gt;

&lt;p&gt;And last but not the least, I wanted to start my YouTube channel but I procrastinated for almost 11 months out of 12 months in 2021 before actually starting &lt;a href="https://www.youtube.com/channel/UCzv8q9-tSIQuTDzgB1BgXMQ"&gt;my YouTube channel&lt;/a&gt; on 29 November 2021. &lt;/p&gt;

&lt;p&gt;I have posted three videos on my channel till now and in 2022 my plan is to create a lot more content on YouTube channel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reading-books"&gt;
  &lt;/a&gt;
  Reading books
&lt;/h3&gt;

&lt;p&gt;I also did a lot of reading in 2021. I started with a goal of reading 15 books and I ended up reading &lt;a href="https://www.goodreads.com/review/list/105616872-anuradha-kumari?ref=nav_mybooks&amp;amp;shelf=read"&gt;21 books in 2021&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Now for 2022 I want to make a reading a daily habit, even if it's just for 30 minutes daily but I would like to start my day with reading a book. &lt;/p&gt;

&lt;p&gt;And my goal for 2022 is reading at least 25 books. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#journaling"&gt;
  &lt;/a&gt;
  Journaling
&lt;/h3&gt;

&lt;p&gt;In 2021, one of the best things I did was to &lt;a href="https://twitter.com/miracle_404/status/1457316830477959178?s=20"&gt;journal daily&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So I have my whole 2021 written out at a high level in my journal and due to this I was able to reflect throughout my days in the year.&lt;/p&gt;

&lt;p&gt;I like to go back to it and re-read on the days I am feeling low and I try to remind myself that it's okay I'm doing good and that i do not need to push myself a lot. &lt;/p&gt;

&lt;p&gt;I have prompts written in my journal to take rest, breathe and just pause for some time. &lt;/p&gt;

&lt;p&gt;This was very effective for me, and I would continue this journaling habit in 2022 as well. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#people-and-connections"&gt;
  &lt;/a&gt;
  People and connections
&lt;/h3&gt;

&lt;p&gt;I met some wonderful people from different parts of the world, and made new friends ❤️.&lt;/p&gt;




&lt;p&gt;So these were my reflections for year 2021 - on what were my goals and wins and also what I plan to do in 2022 on a very high level. &lt;/p&gt;

&lt;p&gt;Now I would also like to take some moments to share what did not went well and what learnings I have to take from 2021 into the New Year 2022. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-did-not-went-well-in-2021"&gt;
  &lt;/a&gt;
  What did not went well in 2021
&lt;/h2&gt;

&lt;p&gt;A few things which did not work for me were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;despite not having a good health, I was still not able to meditate and exercise consistently and hence I had some really tough days both physically and mentally.&lt;/li&gt;
&lt;li&gt;I wanted to write more technical blogs but I was not able to contribute much via the writing medium.&lt;/li&gt;
&lt;li&gt;I had so many plans for my YouTube channel, but they are yet to be executed.&lt;/li&gt;
&lt;li&gt;I struggled with the sudden drop in the temperature when I moved from India to Netherlands. It was pretty harsh encounter and I had a tough time adapting to the new climate. Also, some of the experiences would have gone smoother if I had planned better. But it's all good now.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#inconsistency"&gt;
  &lt;/a&gt;
  Inconsistency
&lt;/h3&gt;

&lt;p&gt;I see inconsistency in my habits and due to this I have seen some of my plans drop and also I have procrastinated and started something is very late.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-my-learnings-takeaways-from-these"&gt;
  &lt;/a&gt;
  What are my learnings/ takeaways from these?
&lt;/h2&gt;

&lt;p&gt;I'm trying currently to meditate daily and go out for walks and runs at least three times a week because I want to be in good health.&lt;/p&gt;

&lt;p&gt;I'm also trying to plan out my days and weeks so that I stay consistent and do not procrastinate on what I want to do.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#theme-for-2022"&gt;
  &lt;/a&gt;
  Theme for 2022
&lt;/h2&gt;

&lt;p&gt;I would also like to share with you my theme for the year 2022. &lt;/p&gt;

&lt;p&gt;And it will be the &lt;strong&gt;year of saying NO.&lt;/strong&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-i-want-to-say-no-to"&gt;
  &lt;/a&gt;
  What do I want to say no to?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I want to say no to devaluing myself. I often play myself down, and my achievements, and it diminishes my confidence. I just don't want to do that anymore.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I also want to say no to the self-deprecating thoughts which always holds me back from doing something new.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I also want to say no to apologising for dreaming big and going all in on whatever I want to achieve.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I often feel that I am not doing good enough and in 2022, I want to say no to this feeling of not feeling competent enough.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And I want to say no to anything and everything that can have a negative impact on my physical and mental well being.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#towards-a-better-year"&gt;
  &lt;/a&gt;
  Towards a better year
&lt;/h2&gt;

&lt;p&gt;So, these were some of my reflections of the year that 2021 was and what goals I have in mind for the year 2022. &lt;/p&gt;

&lt;p&gt;Do let me know in comments what are some of the goals and plans that you have made for year 2022. &lt;/p&gt;

&lt;p&gt;I pray for the pandemic to end this year. &lt;strong&gt;Let’s welcome the new year with hope of good health, blessings and happiness for everyone.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Happy New Year! Take care, stay safe and healthy!&lt;/p&gt;

</description>
      <category>yearinreview</category>
      <category>reflections</category>
      <category>life</category>
    </item>
    <item>
      <title>Getting started with gatsby cloud</title>
      <author>Kumar Kalyan </author>
      <pubDate>Thu, 30 Dec 2021 23:04:50 +0000</pubDate>
      <link>https://dev.to/kumarkalyan/getting-started-with-gatsby-cloud-119b</link>
      <guid>https://dev.to/kumarkalyan/getting-started-with-gatsby-cloud-119b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;Gatby js is on of the most fastest static site generator open source  web framework made by combining React Graphql and web pack  and today we gonna learn how to create a gatsby site  and deploying  it to gatsby cloud &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Although this  article is beginner friendly but it’s better for the readers to have basic knowledge of Javascript &amp;amp; JSON(JavaScript object notation), Html , css, React styling components  to understand the topics that will be explained &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Latest version of Nodejs and npm&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic knowledge if git and Github&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;gatsby cli &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;gatsby cloud account&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Code editor(I am using vs code )&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#the-most-important"&gt;
  &lt;/a&gt;
  the most important
&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The patience to read the full article &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  setup
&lt;/h2&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install node js &lt;a href="https://nodejs.dev/download"&gt;link&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install git and git bash from &lt;a href="https://git-scm.com/downloads"&gt;link&lt;/a&gt;&lt;br&gt;
= Now open the terminal and use &lt;br&gt;
&lt;code&gt;npm install -g gatsby-cli&lt;/code&gt;&lt;br&gt;
This will install gatsby cli globally on your local machine  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now open the terminal follow the steps &lt;br&gt;
Type &lt;code&gt;gatsby new&lt;/code&gt;&lt;br&gt;
Enter an site name "Gatsby Tutorial" (By default it will show &lt;code&gt;My Gatsby Site&lt;/code&gt;)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kmB51anJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1px4lan11djzzkmqxf6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kmB51anJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1px4lan11djzzkmqxf6g.png" alt="create" width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
We will now use any modification in this tutorial&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z5SUrS80--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1f6jgdp0kv8b70omhtri.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z5SUrS80--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1f6jgdp0kv8b70omhtri.png" alt="clone" width="880" height="442"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Schrsubs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4xy21p0kupy7dnzdnjv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Schrsubs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4xy21p0kupy7dnzdnjv.png" alt="done" width="880" height="461"&gt;&lt;/a&gt;&lt;br&gt;
Our gatsby project is successfully created now use &lt;br&gt;
&lt;code&gt;cd &amp;lt;project name &amp;gt;&lt;/code&gt; then hit &lt;code&gt;gatsby develop&lt;/code&gt; to see our changes locally at &lt;code&gt;localhost:8000&lt;/code&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rfJl6r7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z91rs1hson11u05cjyql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rfJl6r7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z91rs1hson11u05cjyql.png" alt="develop" width="880" height="534"&gt;&lt;/a&gt;&lt;br&gt;
now let's navigate to our project folder in our code editor &lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iCyMrf11--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s22j3msqdlf2km9wit20.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iCyMrf11--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s22j3msqdlf2km9wit20.png" alt="navigate" width="237" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;this is how our gatsby file structure looks like &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c_CrPsmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70c1y4jtl66xubervqp4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c_CrPsmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70c1y4jtl66xubervqp4.png" alt="localhost" width="880" height="479"&gt;&lt;/a&gt;&lt;br&gt;
this is how our project looks locally &lt;/p&gt;

&lt;p&gt;Now we are done with our setup , so let's make cahnges to our project . In the begining lets's delete all the markup and let's start from scratch&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZCD-moq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymtnffkcv7pn3spyh4xp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZCD-moq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymtnffkcv7pn3spyh4xp.png" alt="reder" width="549" height="363"&gt;&lt;/a&gt;&lt;br&gt;
Here the &lt;code&gt;Indexpage&lt;/code&gt; will render all the hml markup written within the  tag (you can also use &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; here instead of &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;)&lt;br&gt;
Now let's add some html and see what happens to our page&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as React from 'react';
const IndexPage = () =&amp;gt; {
  return (
    &amp;lt;main&amp;gt;
      &amp;lt;title&amp;gt;My Gatsby tutorial&amp;lt;/title&amp;gt;
      &amp;lt;h1&amp;gt;Hi, there I am gatsby app&amp;lt;/h1&amp;gt;
      &amp;lt;h4&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Et ducimus
        labore magni facere est autem eum provident expedita laudantium. Magni
        vitae quia impedit delectus quo iste aliquam rerum, ipsa natus. Lorem
        ipsum dolor sit amet, consectetur adipisicing elit. Consequatur ex
        accusantium deleniti et sint perspiciatis similique deserunt, molestias
        nam, quas cumque id! Esse necessitatibus animi eos quibusdam sunt ad
        dignissimos! Lorem ipsum, dolor sit amet consectetur adipisicing elit.
        Soluta itaque delectus in, inventore, voluptatem at ab beatae pariatur
        magni eum omnis! Voluptatum quo dicta nostrum. Sit numquam
        exercitationem asperiores quibusdam.
        &amp;lt;br /&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloremque,
        necessitatibus? Sunt dolorem corporis provident vero molestiae. Natus
        inventore velit assumenda quis accusantium beatae, quaerat molestias
        sapiente quos? Atque, quia saepe.
        &amp;lt;hr /&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima
        assumenda veniam distinctio delectus molestiae, itaque nemo cupiditate
        sint sequi ad, dolorum asperiores magnam accusamus. Molestiae dicta
        alias recusandae nostrum numquam.
      &amp;lt;/h4&amp;gt;
    &amp;lt;/main&amp;gt;
  );
};

export default IndexPage;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E0k-N-kR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l39uh49wge2hs627cbsr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E0k-N-kR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l39uh49wge2hs627cbsr.png" alt="demo1" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now lets add some styles&lt;br&gt;
for styling purpose we will define style objects lets see&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as React from 'react';
let sytles = {
  mainStyle: {
    color: 'blue',
    padding:'30px',
    font:"Arial, Helvetica, sans-serif"
   },
};
const IndexPage = () =&amp;gt; {
  return (
    &amp;lt;main style={sytles.mainStyle}&amp;gt;
      &amp;lt;title&amp;gt;My Gatsby tutorial&amp;lt;/title&amp;gt;
      &amp;lt;h1&amp;gt;Hi, there I am gatsby app&amp;lt;/h1&amp;gt;
      &amp;lt;h4&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Et ducimus
        labore magni facere est autem eum provident expedita laudantium. Magni
        vitae quia impedit delectus quo iste aliquam rerum, ipsa natus. Lorem
        ipsum dolor sit amet, consectetur adipisicing elit. Consequatur ex
        accusantium deleniti et sint perspiciatis similique deserunt, molestias
        nam, quas cumque id! Esse necessitatibus animi eos quibusdam sunt ad
        dignissimos! Lorem ipsum, dolor sit amet consectetur adipisicing elit.
        Soluta itaque delectus in, inventore, voluptatem at ab beatae pariatur
        magni eum omnis! Voluptatum quo dicta nostrum. Sit numquam
        exercitationem asperiores quibusdam.
        &amp;lt;br /&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloremque,
        necessitatibus? Sunt dolorem corporis provident vero molestiae. Natus
        inventore velit assumenda quis accusantium beatae, quaerat molestias
        sapiente quos? Atque, quia saepe.
        &amp;lt;hr /&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima
        assumenda veniam distinctio delectus molestiae, itaque nemo cupiditate
        sint sequi ad, dolorum asperiores magnam accusamus. Molestiae dicta
        alias recusandae nostrum numquam.
      &amp;lt;/h4&amp;gt;
    &amp;lt;/main&amp;gt;
  );
};

export default IndexPage;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have defined a variable named &lt;code&gt;styles&lt;/code&gt; and within it we have defied a property named &lt;code&gt;main style&lt;/code&gt; and we are passing it as an expression to in the style attribute.&lt;/p&gt;

&lt;p&gt;now let's add some images to our application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as React from 'react';
let sytles = {
  mainStyle: {
    color: 'blue',
    padding:'30px',
    font:"Arial, Helvetica, sans-serif"
   },
   imagsStyle:{
     width:"400px",
     radius:"10px"
   }
};
const IndexPage = () =&amp;gt; {
  return (
    &amp;lt;main style={sytles.mainStyle}&amp;gt;
      &amp;lt;title&amp;gt;My Gatsby tutorial&amp;lt;/title&amp;gt;
      &amp;lt;h1&amp;gt;Hi, there I am gatsby app&amp;lt;/h1&amp;gt;
      &amp;lt;h4&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Et ducimus
        labore magni facere est autem eum provident expedita laudantium. Magni
        vitae quia impedit delectus quo iste aliquam rerum, ipsa natus. Lorem
        ipsum dolor sit amet, consectetur adipisicing elit. Consequatur ex
        accusantium deleniti et sint perspiciatis similique deserunt, molestias
        nam, quas cumque id! Esse necessitatibus animi eos quibusdam sunt ad
        dignissimos! Lorem ipsum, dolor sit amet consectetur adipisicing elit.
        Soluta itaque delectus in, inventore, voluptatem at ab beatae pariatur
        magni eum omnis! Voluptatum quo dicta nostrum. Sit numquam
        exercitationem asperiores quibusdam.
        &amp;lt;br /&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloremque,
        necessitatibus? Sunt dolorem corporis provident vero molestiae. Natus
        inventore velit assumenda quis accusantium beatae, quaerat molestias
        sapiente quos? Atque, quia saepe.
        &amp;lt;hr /&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima
        assumenda veniam distinctio delectus molestiae, itaque nemo cupiditate
        sint sequi ad, dolorum asperiores magnam accusamus. Molestiae dicta
        alias recusandae nostrum numquam.
      &amp;lt;/h4&amp;gt;
      &amp;lt;img src={'https://picsum.photos/200/300'} alt="an image" style={sytles.imagsStyle} /&amp;gt;
    &amp;lt;/main&amp;gt;
  );
};

export default IndexPage;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we are ready with our gatsby app. let's deploy it to gatsby cloud &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h2&gt;

&lt;p&gt;create a git repo and push your code to gihub &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bUQiFijX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0d5khr20rp5hurq4469.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bUQiFijX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0d5khr20rp5hurq4469.png" alt="git push" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
now we have pushed our code to github &lt;br&gt;
open your gatsby cloud dashboard and click on &lt;code&gt;add a site&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JhmuVz8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reh0dmq3290h9tms8com.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JhmuVz8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reh0dmq3290h9tms8com.png" alt="gatsby cloud" width="880" height="379"&gt;&lt;/a&gt;&lt;br&gt;
 now choose your repo and click on import&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FyYOCeJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fvlc16ksnmxopiozirf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FyYOCeJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fvlc16ksnmxopiozirf.png" alt="choose" width="880" height="411"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;now click on next as we don't have any configurations&lt;br&gt;
&lt;a href="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qbswacru1z44cuku90sm.png"&gt;next&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and then click on build site&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ezRSEmUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8nyw7kacly16d8nm73k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ezRSEmUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8nyw7kacly16d8nm73k.png" alt="build" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
see how fast it is , deployed in just 0.26 seconds &lt;br&gt;
you can checkout my site here &lt;br&gt;
&lt;a href="https://gatsbytutorialmain64558.gatsbyjs.io/"&gt;my site&lt;/a&gt; &lt;br&gt;
and &lt;a href="https://github.com/kum9748ar/gatsby-tutorial-"&gt;github repo&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;so this was all about creating a basic gatsby js application and deploying to gatsby js cloud. If you love this article share it with your peers and don't hesitate to hit a ❤️ .&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect"&gt;
  &lt;/a&gt;
  Connect
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://linktr.ee/kumarkalyan"&gt;&lt;br&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wgrai2sU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.jsdelivr.net/npm/simple-icons%40v3/icons/twitter.svg" width="24" height="24"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>gatsby</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Remote pair programming - What are YOUR best practices? 🧑‍💻👩🏽‍💻</title>
      <author>Pascal Thormeier</author>
      <pubDate>Thu, 30 Dec 2021 22:47:05 +0000</pubDate>
      <link>https://dev.to/thormeier/remote-pair-programming-what-are-your-best-practices-592e</link>
      <guid>https://dev.to/thormeier/remote-pair-programming-what-are-your-best-practices-592e</guid>
      <description>&lt;p&gt;The certain situation the world has been in for the past almost two years has affected a lot of us devs all around the globe. This hasn't stopped us from delivering amazing software and do good deeds though - Au contraire! Think of global remote hackathons, local efforts to create services that help people in need, providing schools with old laptops, the list goes on. &lt;/p&gt;

&lt;p&gt;Arguably, the tech industry has adapted rather quickly. Video calls became a widespread norm, employees of some companies, like Twitter, &lt;a href="https://blog.twitter.com/en_us/topics/company/2020/keeping-our-employees-and-partners-safe-during-coronavirus"&gt;can now work from home forever if they want&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(As a little disclaimer: I'll use the word "remote" in this post to describe non-onsite things in general, even if you're in the same town as your peers.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With the new remote situation came a few hurdles, though. And in this post I want to discuss some of these hurdles, and more specifically, how to overcome them. A specific topic I'd like to look at today is &lt;strong&gt;pair programming&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Pair programming is a very helpful technique. It helps to onboard new team members to an existing application, give juniors an opportunity to learn from more senior devs (and vice versa!), discussing ideas and concepts. A popular approach to pair programming involves two roles: A driver and a navigator. While the driver is doing the actual coding, the navigator tries to keep the overview and give directions to the driver. Both people get to discuss their ideas and find the best solution together.&lt;/p&gt;

&lt;p&gt;From my experience, two people are usually working on the same computer. They come up with a plan together, write down open questions and then get going. I've done this with peers for weeks on end. However, the remote situation has made pair programming rather rare, at least in my team. It can be rather tedious. Screen sharing works, don't get me wrong, but it's easier to point on something on screen with your finger than to figure out the lines (and read them aloud at the same time!) of some blurry editor while the other person is scrolling along. I've played around with IntelliJ's pair programming feature for a bit, but not everyone uses IntelliJ either. For me, coding together on the same machine still feels a lot more productive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, what are your experiences? What tools do you use? What are your best practices when it comes to remote pair programming?&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;I hope you enjoyed reading this article as much as I enjoyed writing it! If so, leave a&lt;/em&gt; ❤️ &lt;em&gt;or a&lt;/em&gt; 🦄&lt;em&gt;! I write tech articles in my free time and like to drink coffee every once in a while.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to support my efforts,&lt;/em&gt; &lt;a href="http://buymeacoffee.com/pthormeier"&gt;&lt;em&gt;you can offer me a coffee&lt;/em&gt; ☕&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a href="https://twitter.com/pthormeier"&gt;&lt;em&gt;follow me on Twitter&lt;/em&gt; 🐦&lt;/a&gt;&lt;em&gt;!&lt;/em&gt; &lt;em&gt;You can also support me directly via &lt;a href="https://www.paypal.me/pthormeier"&gt;Paypal&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://buymeacoffee.com/pthormeier"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc4mYYLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/x55hp6jopwyy161d8e2u.png" alt="Buy me a coffee button" width="262" height="60"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>productivity</category>
      <category>discuss</category>
      <category>programming</category>
    </item>
    <item>
      <title>Create a blog using Next.js and Markdown/MDX</title>
      <author>usedevjet</author>
      <pubDate>Thu, 30 Dec 2021 21:42:13 +0000</pubDate>
      <link>https://dev.to/usedevjet/create-a-blog-using-nextjs-and-markdownmdx-4pem</link>
      <guid>https://dev.to/usedevjet/create-a-blog-using-nextjs-and-markdownmdx-4pem</guid>
      <description>&lt;p&gt;In this article, we are going to learn how to build a blog and or add a blog section to an already existing &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; project. To create the content of the blog we are going to be using an extension of the Markdown syntax: &lt;a href="https://mdxjs.com/"&gt;MDX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When using Markdown in a website, there is always a compile step in which all the syntax markdown is converted into the HTML that the browser can understand. The problem with using plain Markdown is that you are limited to the handful amount of HTML elements that markdown is aware of. With MDX, you can extend those elements with your custom &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; components. It looks something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;import {Chart} from './snowfall.js'
export const year = 2018

&lt;span class="gh"&gt;# Last year's snowfall In {year}, the snowfall was above average.&lt;/span&gt;

It was followed by a warm spring which caused flood conditions in many of the nearby rivers.
&lt;span class="nt"&gt;&amp;lt;Chart&lt;/span&gt; &lt;span class="na"&gt;year=&lt;/span&gt;&lt;span class="s"&gt;{year}&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;"#fcb32c"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this post, we're going to show you two ways of integrating MDX into your project to create blog pages. The traditional way is the one with which we are going to get started, and a &lt;a href="#bonus"&gt;bonus to show you how to get the job done in no time&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-our-app"&gt;
  &lt;/a&gt;
  Setting up our app
&lt;/h2&gt;

&lt;p&gt;First, you'll need to have Node.js installed on your computer. For this project we used Node.js 16 but anything up to 10.3 is going to be okay.&lt;br&gt;
If you have already created your app and just want to add the blog section to it, skip this section, otherwise, create your app with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-next-app app-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should generate a new Next.js app that follows the following folder structure&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;src
├── components
├── pages
|  ├── index.js
|  └── _app.js
├── next.config.js
├── package.json
├── README.md
└── yarn.lock
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-the-necessary-files"&gt;
  &lt;/a&gt;
  Create the necessary files
&lt;/h2&gt;

&lt;p&gt;Now that we have an app to work with, let's get started with the routes and components that are going to make up our blog:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;pages/blog&lt;/code&gt; - where our blog posts are stored&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pages/blog/index.js&lt;/code&gt; - the page that lists all the blog posts that we have written and later redirects our readers to the corresponding pages&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pages/blog/post-1/index.mdx&lt;/code&gt; - a simple example post&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;next.config.js&lt;/code&gt; - to work with mdx we have to tell nextjs how to work with the mdx pages, that's done here.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;utils/getAllPosts.js&lt;/code&gt; - to retrieve all the blog posts data from the &lt;code&gt;pages/blog&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;components/BlogPost.js&lt;/code&gt; - the blog post itself&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;components/PostCard.js&lt;/code&gt; - a simple card to display post meta data used to index all posts &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can start opening and creating these files, we'll come back later. First, we need to install the required dependencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-the-necessary-dependencies"&gt;
  &lt;/a&gt;
  Install the necessary dependencies
&lt;/h2&gt;

&lt;p&gt;To enable MDX in our app, we need to install the &lt;code&gt;@mdx-js/loader&lt;/code&gt; library. To do so navigate to the root folder and in a console run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @mdx-js/loader
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's generic to mdx, now we have to add a dependency exclusive to the nextjs framework. Just like before run the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @next/mdx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are fundamental to the functionality that we want to provide. For our case we also want to add some styling with &lt;a href="https://tailwindcss.com/"&gt;Tailwindcss&lt;/a&gt; so install:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the paths to all of your template files in your &lt;code&gt;tailwind.config.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./pages/**/*.{js,ts,jsx,tsx}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/**/*.{js,ts,jsx,tsx}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the &lt;code&gt;@tailwind&lt;/code&gt; directives for each of Tailwind's layers to your &lt;code&gt;./styles/globals.css&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll also we using the &lt;a href="https://tailwindcss.com/docs/typography-plugin"&gt;Tailwind CSS Typography plugin&lt;/a&gt; so let's install it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @tailwindcss/typography --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And add it to your &lt;code&gt;tailwdind.config.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//…&lt;/span&gt;
&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tailwindcss/typography&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="c1"&gt;//…&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#add-mdx-support"&gt;
  &lt;/a&gt;
  Add mdx support
&lt;/h2&gt;

&lt;p&gt;By default, Next.js will just pick &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.jsx&lt;/code&gt; files as routes from our pages directory, that's why we need to edit the &lt;code&gt;next.config.js&lt;/code&gt;, to make all our content visible to Next.js.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;withMDX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@next/mdx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)({&lt;/span&gt;
  &lt;span class="na"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;mdx&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;withMDX&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;pageExtensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;md&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mdx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now Next.js can not only render the &lt;code&gt;js&lt;/code&gt; and &lt;code&gt;jsx&lt;/code&gt; files inside our pages directory but also &lt;code&gt;.md&lt;/code&gt; and &lt;code&gt;.mdx&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fetch-the-blog-posts"&gt;
  &lt;/a&gt;
  Fetch the blog posts
&lt;/h2&gt;

&lt;p&gt;To render our &lt;code&gt;pages/blog/index.js&lt;/code&gt; we'll need an array with all the pages that we've written and the links to them. To create it, in our &lt;code&gt;utils/getAllPosts.js&lt;/code&gt; file add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;importAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="sr"&gt;index&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;mdx$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;importAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../pages/blog/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;mdx$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#building-the-components"&gt;
  &lt;/a&gt;
  Building the components
&lt;/h2&gt;

&lt;p&gt;Now that we have an array containing all the information about our pages, we are ready to create the &lt;code&gt;pages/blog/index.js&lt;/code&gt; page so that users can navigate trough them, but first let's abstract our posts cards in the PostCard component&lt;/p&gt;

&lt;p&gt;The PostCard component is just the component that we'll use to render metadata about the post and create a link straight to the post. You will later learn how to create the metadata for each post, but for now let's asume that we already have it. So in &lt;code&gt;components/PostCard.js&lt;/code&gt; add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PostCard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"my-4"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-xl font-bold text-center text-gray-900"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mt-4 mb-6"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-center prose-p"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mt-2 text-center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-sm text-gray-800"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;
            &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-sm text-gray-800"&lt;/span&gt;
            &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"img"&lt;/span&gt;
            &lt;span class="na"&gt;aria&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"one coffee"&lt;/span&gt;
          &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            ☕ &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readTime&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; min read&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flex justify-center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/blog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"font-bold text-blue-500"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-sm underline uppercase"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Read more&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case you want to add the styles yourself here is the unstyled version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PostCard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;☕ &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readTime&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; min read&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/blog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Read more&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have how to render each post card, we can take all the posts information that we retrived with getAllPosts and render them all togheter in the &lt;code&gt;blog/index.js&lt;/code&gt; page to let the reader explore the available posts. Let's do it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PostCard&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../components/PostCard&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../utils/getAllPosts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"max-w-3xl min-h-screen mx-auto"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-4 py-12"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-3xl font-bold text-center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mt-4 text-lg text-center text-gray-800"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            All the lastest Devjet news from the devjet team itself
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-4"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-300"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PostCard&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;post&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-300"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the unstyled version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PostCard&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../components/PostCard&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../utils/getAllPosts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PostCard&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;post&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good news!! we are almost there. We just have to create the BlogPost component and write some content.&lt;br&gt;
Now, we previously talked about the metadata that each post would carry on, here is where we define it. Each post is going to look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;BlogPost&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../../components/BlogPost&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MdxCodeBlock&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../../components/MyMdxComponents&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Create your blog with Next.js and MDX&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque maximus pellentesque dolor non egestas. In sed tristique elit. Cras vehicula, nisl vel ultricies gravida, augue nibh laoreet arcu, et tincidunt augue dui non elit. Vestibulum semper posuere magna.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dec 04, 2021&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;readTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BlogPost&lt;/span&gt; &lt;span class="na"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;BlogPost&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;

&lt;span class="nx"&gt;Lorem&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;dolor&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;consectetur&lt;/span&gt; &lt;span class="nx"&gt;adipiscing&lt;/span&gt; &lt;span class="nx"&gt;elit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Quisque&lt;/span&gt; &lt;span class="nx"&gt;maximus&lt;/span&gt; &lt;span class="nx"&gt;pellentesque&lt;/span&gt; &lt;span class="nx"&gt;dolor&lt;/span&gt; &lt;span class="nx"&gt;non&lt;/span&gt; &lt;span class="nx"&gt;egestas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;In&lt;/span&gt; &lt;span class="nx"&gt;sed&lt;/span&gt; &lt;span class="nx"&gt;tristique&lt;/span&gt; &lt;span class="nx"&gt;elit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Cras&lt;/span&gt; &lt;span class="nx"&gt;vehicula&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;nisl&lt;/span&gt; &lt;span class="nx"&gt;vel&lt;/span&gt; &lt;span class="nx"&gt;ultricies&lt;/span&gt; &lt;span class="nx"&gt;gravida&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;augue&lt;/span&gt; &lt;span class="nx"&gt;nibh&lt;/span&gt; &lt;span class="nx"&gt;laoreet&lt;/span&gt; &lt;span class="nx"&gt;arcu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;et&lt;/span&gt; &lt;span class="nx"&gt;tincidunt&lt;/span&gt; &lt;span class="nx"&gt;augue&lt;/span&gt; &lt;span class="nx"&gt;dui&lt;/span&gt; &lt;span class="nx"&gt;non&lt;/span&gt; &lt;span class="nx"&gt;elit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Vestibulum&lt;/span&gt; &lt;span class="nx"&gt;semper&lt;/span&gt; &lt;span class="nx"&gt;posuere&lt;/span&gt; &lt;span class="nx"&gt;magna&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nx"&gt;Sed&lt;/span&gt; &lt;span class="nx"&gt;vehicula&lt;/span&gt; &lt;span class="nx"&gt;libero&lt;/span&gt; &lt;span class="nx"&gt;pulvinar&lt;/span&gt;
&lt;span class="nx"&gt;tincidunt&lt;/span&gt; &lt;span class="nx"&gt;ligula&lt;/span&gt; &lt;span class="nx"&gt;non&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;luctus&lt;/span&gt; &lt;span class="nx"&gt;massa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Vestibulum&lt;/span&gt; &lt;span class="nx"&gt;ante&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;primis&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;faucibus&lt;/span&gt; &lt;span class="nx"&gt;orci&lt;/span&gt; &lt;span class="nx"&gt;luctus&lt;/span&gt; &lt;span class="nx"&gt;et&lt;/span&gt; &lt;span class="nx"&gt;ultrices&lt;/span&gt; &lt;span class="nx"&gt;posuere&lt;/span&gt; &lt;span class="nx"&gt;cubilia&lt;/span&gt; &lt;span class="nx"&gt;Curae&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;Maecenas&lt;/span&gt; &lt;span class="nx"&gt;arcu&lt;/span&gt; &lt;span class="nx"&gt;purus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;aliquam&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt; &lt;span class="nx"&gt;molestie&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;luctus&lt;/span&gt; &lt;span class="nx"&gt;eget&lt;/span&gt; &lt;span class="nx"&gt;sem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Sed&lt;/span&gt; &lt;span class="nx"&gt;pellentesque&lt;/span&gt; &lt;span class="nx"&gt;massa&lt;/span&gt; &lt;span class="nx"&gt;eros&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;condimentum&lt;/span&gt; &lt;span class="nx"&gt;commodo&lt;/span&gt; &lt;span class="nx"&gt;ligula&lt;/span&gt; &lt;span class="nx"&gt;cursus&lt;/span&gt; &lt;span class="nx"&gt;ut&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Mauris&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt; &lt;span class="nx"&gt;molestie&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nullam&lt;/span&gt; &lt;span class="nx"&gt;venenatis&lt;/span&gt; &lt;span class="nx"&gt;est&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;purus&lt;/span&gt; &lt;span class="nx"&gt;mollis&lt;/span&gt; &lt;span class="nx"&gt;consectetur&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Phasellus&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;quam&lt;/span&gt; &lt;span class="nx"&gt;ullamcorper&lt;/span&gt; &lt;span class="nx"&gt;aliquet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nunc&lt;/span&gt; &lt;span class="nx"&gt;gravida&lt;/span&gt; &lt;span class="nx"&gt;bibendum&lt;/span&gt; &lt;span class="nx"&gt;placerat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="nx"&gt;My&lt;/span&gt; &lt;span class="nx"&gt;Headline&lt;/span&gt;

&lt;span class="nx"&gt;Fusce&lt;/span&gt; &lt;span class="nx"&gt;lacinia&lt;/span&gt; &lt;span class="nx"&gt;mauris&lt;/span&gt; &lt;span class="nx"&gt;vel&lt;/span&gt; &lt;span class="nx"&gt;massa&lt;/span&gt; &lt;span class="nx"&gt;tincidunt&lt;/span&gt; &lt;span class="nx"&gt;dignissim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Proin&lt;/span&gt; &lt;span class="nx"&gt;tempus&lt;/span&gt; &lt;span class="nx"&gt;nunc&lt;/span&gt; &lt;span class="nx"&gt;sed&lt;/span&gt; &lt;span class="nx"&gt;efficitur&lt;/span&gt; &lt;span class="nx"&gt;porta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nunc&lt;/span&gt; &lt;span class="nx"&gt;ornare&lt;/span&gt; &lt;span class="nx"&gt;tellus&lt;/span&gt; &lt;span class="nx"&gt;scelerisque&lt;/span&gt; &lt;span class="nx"&gt;velit&lt;/span&gt; &lt;span class="nx"&gt;euismod&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ut&lt;/span&gt; &lt;span class="nx"&gt;mollis&lt;/span&gt; &lt;span class="nx"&gt;diam&lt;/span&gt; &lt;span class="nx"&gt;tristique&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Phasellus&lt;/span&gt; &lt;span class="nx"&gt;vel&lt;/span&gt; &lt;span class="nx"&gt;diam&lt;/span&gt; &lt;span class="nx"&gt;egestas&lt;/span&gt; &lt;span class="nx"&gt;augue&lt;/span&gt; &lt;span class="nx"&gt;ullamcorper&lt;/span&gt; &lt;span class="nx"&gt;gravida&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Sed&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="nx"&gt;mattis&lt;/span&gt; &lt;span class="nx"&gt;ligula&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="nx"&gt;suscipit&lt;/span&gt; &lt;span class="nx"&gt;nisl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Ut&lt;/span&gt; &lt;span class="nx"&gt;placerat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MdxCodeBlock&lt;/span&gt;
  &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`const helloWorld = 'hello world'`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;BlogPost&lt;/code&gt; component is the one in charge of rendering each single post, and receives as parameter the metadata and the post content. Here is the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ArrowNarrowLeftIcon&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@heroicons/react/solid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;BlogPost&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"max-w-3xl min-h-screen px-4 mx-auto mb-14"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mt-4 mb-10 cursor-pointer"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/blog"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ArrowNarrowLeftIcon&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"h-4 mr-2"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
              Back to blog
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"py-10"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-3xl font-bold text-center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mt-2 text-sm text-center text-gray-800"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"img"&lt;/span&gt; &lt;span class="na"&gt;aria&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"one coffee"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              ☕ &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readTime&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; min read&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"my-10 text-gray-300"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"max-w-3xl mx-auto prose text-justify"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And without any styles&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;BlogPost&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/blog"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Back to blog&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"img"&lt;/span&gt; &lt;span class="na"&gt;aria&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"one coffee"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          ☕ &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readTime&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; min read&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it!! Your blog is done, just open a console and run &lt;code&gt;npm run dev&lt;/code&gt; to explore it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-how-to-get-the-job-done-in-no-time"&gt;
  &lt;/a&gt;
  Bonus: How to get the job done in no time
&lt;/h2&gt;

&lt;p&gt;If you've been following along the tutorial, you've probably notice how much work it all takes. Even more keeping in mind the fact that our blog is still missing a lot of very common features like sharing options, a search bar, commentary section, posts clasification, newsletter, etc. &lt;/p&gt;

&lt;p&gt;What if i tell you that you integrate all these features and more in minutes instead of hours, just run a couple of commands and get a bunch on code injected in your project codebase to cover all these common solutions. You don't just save a lot of time and resources but also, given the fact that you are in control of the code, there's nothig stopping you from customizing every single bit of it to meet your goals and allow you to focus on what trully makes you unique.&lt;/p&gt;

&lt;p&gt;The tool that allows you to do all that and more is &lt;a href="https://www.usedevjet.com"&gt;devjet&lt;/a&gt; and here we show you how to use it to recreate all the code that we've described along this post and even add more feeatures.&lt;br&gt;
For now we are gonna stick to the blog generators, but feel free to explore the entire catalogue at &lt;a href="https://www.usedevjet.com/#modules"&gt;usedevjet.com/#modules&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Just like with &lt;code&gt;create-next-app&lt;/code&gt; we first have to create our boilerplate app, in this case with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;devjet new nextjs [appname]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that nextjs is not the only base that we can use, there are other very great frameworks as well, like vue or react or nuxt among others.&lt;/p&gt;

&lt;p&gt;We are gonna end up with a codebase similar to the one generated by &lt;code&gt;create-next-app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now to add our blog pages we just have to get into the project folder and type in the console &lt;code&gt;devjet add blog-mdx&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;devjet add blog-mdx
  ? Do you want to use styled components? - No
  ? Where do you want to store your blog posts? - pages/blog
  ? Do you want us to create an example blog or you prefer the docs? - yes
  ✓ Installed dependencies
  ✓ Created pages/blog folder
  ✓ Added utils/devjet/getAllPosts.js
  ✓ Added components/devjet/PostCard.js
  ✓ Added pages/blog/index.js
  ✓ Added components/devjet/BlogPost.js
  ✓ Edited next.config.js
  ✓ Created pages/blog/post-1 folder (example)
  ✓ Added pages/blog/post-1/index.mdx  (example)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's all you need to do to either create a blog from the scratch or add it to your already existing project.&lt;/p&gt;

&lt;p&gt;Also note that in this case we only generated the logic, just in case that you want to add the styles yourself but we also provide some beatifull premade components to make your work even easier.&lt;/p&gt;

&lt;p&gt;The best part, that's not all you can do with devjet's generators, there are hundreds of applications!! Focusing on the blog thematic, these are some generators that you may be interested in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;devjet add mailchimp&lt;/code&gt; To create a &lt;a href="https://mailchimp.com/"&gt;mailchimp&lt;/a&gt; newsletter and let your users get notified when you write new posts &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;devjet add google-analytics&lt;/code&gt; Use &lt;a href="https://analytics.google.com/"&gt;google analytics&lt;/a&gt; get information about your users behaivoir and improve their expirience&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;devjet add algolia&lt;/code&gt; To use &lt;a href="https://www.algolia.com/"&gt;algolia&lt;/a&gt; as a search engine for your posts&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;devjet add google-ads&lt;/code&gt; To monetize your blog with &lt;a href="https://ads.google.com/"&gt;google ads&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;devjet add auth&lt;/code&gt; Add authentication with diferent providers like &lt;a href="https://firebase.google.com/"&gt;firebase&lt;/a&gt; or &lt;a href="https://auth0.com/"&gt;auth0&lt;/a&gt; and let them save posts&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;devjet add share&lt;/code&gt; Components to let your users share your content and even comment on it.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;devjet add blog-mdx-prismjs&lt;/code&gt; Highlight your code blocks with &lt;a href="https://prismjs.com/"&gt;prismjs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;And much much more&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this tutorial we've learned how to create a blog in Nextjs using MDX to add the capability to use custom React components in the markdown syntax. We've also learned that when it comes to web development, "reinventing the wheel" typically takes a lot of time for wich we may have a better use, and so discovered that &lt;a href="https://www.usedevjet.com"&gt;devjet&lt;/a&gt; can help us be much more efficient by generating a lot of the code necessary to achive our gols and surpase them. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>nextjs</category>
      <category>lowcode</category>
    </item>
    <item>
      <title>🤬 What’s your opinion on Linters, Testers, and Prettiers?</title>
      <author>William McGonagle</author>
      <pubDate>Thu, 30 Dec 2021 21:36:37 +0000</pubDate>
      <link>https://dev.to/williammcgonagle/whats-your-opinion-on-linters-testers-and-prettiers-3f1j</link>
      <guid>https://dev.to/williammcgonagle/whats-your-opinion-on-linters-testers-and-prettiers-3f1j</guid>
      <description>&lt;p&gt;I’ve been working on a project recently and a bunch of people suggested that I should start using a testing system. This testing system was working for a while but then someone else suggested that I should start using a linter. The linter ended up breaking all of my testing code, and before long I had spend nearly three hours getting them working together. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/fairfield-programming/backend-server/"&gt;Here was the project if you want to check it out&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, I was told that the code was inconsistently formatted, so I needed to add a prettier system. All of my engineers are now telling me that they have lost countless man-hours battling against this new integration system.&lt;/p&gt;

&lt;p&gt;So, I’m getting rid of it. My entire linter system, code grading, beautifier, etc. is gone. And, I’m replacing it with &lt;a href="https://github.com/fairfield-programming/eaf-linter/"&gt;my own solution&lt;/a&gt;- if you want something done right, you have to do it yourself. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I want to hear what struggles you have had with your “systems to boost efficiency”, or if you think I am completely wrong and should shut up.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Tech trends to know for 2022</title>
      <author>Erin Schaffer</author>
      <pubDate>Thu, 30 Dec 2021 21:35:49 +0000</pubDate>
      <link>https://dev.to/educative/tech-trends-to-know-for-2022-el1</link>
      <guid>https://dev.to/educative/tech-trends-to-know-for-2022-el1</guid>
      <description>&lt;p&gt;We’re less than a month away from the new year, which means it’s a great time to begin investing in yourself and upskilling to prepare yourself for a successful career (or career switch!). Today, we want to spend some time outlining some popular tech trends that are projected to dominate the software development industry in 2022. Not only will we list and explain each trend, but we’ll also provide you with resources to help you get started on your learning journey. &lt;/p&gt;

&lt;p&gt;Let’s get started!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We’ll cover&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#multicloud"&gt;Multi-cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift"&gt;Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cicd"&gt;CI/CD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hadoop"&gt;Hadoop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#virtualization"&gt;Virtualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nextsteps"&gt;Wrapping up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multicloud"&gt;
  &lt;/a&gt;
  Multi-cloud
&lt;/h2&gt;

&lt;p&gt;First on the list is multi-cloud, which is a cloud computing model that leverages two or more cloud platforms. Multi-cloud allows you to take advantage of the resources that different cloud providers offer and helps you lower your cloud cost. Gartner estimates that &lt;strong&gt;over 75% of cloud customers&lt;/strong&gt; will adopt multi-cloud by the end of 2022. &lt;/p&gt;

&lt;p&gt;Hands-on experience with multiple cloud providers will allow you to help an organization shift to a multi-cloud strategy. Cloud experience, in general, is &lt;strong&gt;highly valued in the software engineering industry&lt;/strong&gt;. Most companies currently take advantage of &lt;em&gt;at least one&lt;/em&gt; cloud provider, such as AWS, Microsoft Azure, or Google Cloud Platform. The job market for cloud engineers is vast, with thousands of opportunities to work with cloud architecture, cloud development, and cloud support. The multi-cloud strategy also works closely with container technologies, such as Kubernetes, to simplify the process of implementing a multi-cloud architecture. &lt;/p&gt;

&lt;p&gt;As the cloud continues to dominate the business landscape, the multi-cloud model will continue to increase in popularity. Getting familiar with the model will give you a leg up in your cloud computing journey.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#swift"&gt;
  &lt;/a&gt;
  Swift
&lt;/h2&gt;

&lt;p&gt;The second trend on the list is Swift, a multi-paradigm, general-purpose programming language for iOS development. Apple created this safe, expressive, and powerful language to replace C-based languages for iOS development. Swift has a reputation for being an easy language to learn. Apple created the language with new coders in mind, and they even created &lt;em&gt;Swift Playgrounds&lt;/em&gt;, which is an iPad app that makes it easy for new developers to get started coding with Swift. &lt;/p&gt;

&lt;p&gt;Just like the software industry as a whole, iOS development continues to quickly expand and change. In 2022, iOS development efforts will focus on areas such as machine learning, IoT, mobile payments, and chatbots to continue building newer and smarter applications for all users. &lt;/p&gt;

&lt;p&gt;If you want to get into iOS development, Swift is a great language to learn. If you do choose to get started with Swift, you’ll be in high demand. According to Apple, the company has created about &lt;strong&gt;two million jobs&lt;/strong&gt; in the United States alone, with the average salary sitting at around &lt;strong&gt;$116,804&lt;/strong&gt;.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cicd"&gt;
  &lt;/a&gt;
  CI/CD
&lt;/h2&gt;

&lt;p&gt;CI/CD, or continuous integration/continuous delivery, is a &lt;strong&gt;fundamental DevOps and Agile best practice&lt;/strong&gt;. CI/CD enables software development teams to automate their software development lifecycle. With CI/CD your team can frequently deliver and deploy applications and accelerate your app development process. You can efficiently implement automation and monitor things like code changes, new features, and potential bug fixes.&lt;/p&gt;

&lt;p&gt;Cloud-native CI/CD pipelines are growing in popularity. They allow us to take full advantage of cloud computing services and features, like containerization, going serverless, and implementing a multi-cloud infrastructure. We explored the concept of multi-cloud earlier, and now we can see that it’s a widespread model that can apply to CI/CD and DevOps. &lt;/p&gt;

&lt;p&gt;Learning a CI/CD tool will help you become familiar with the CI/CD pipelines and processes. Popular tools include Jenkins, GitLab, Azure DevOps, and more.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hadoop"&gt;
  &lt;/a&gt;
  Hadoop
&lt;/h2&gt;

&lt;p&gt;Hadoop is an open-source software framework developed by the Apache Software Foundation. Hadoop is built on &lt;strong&gt;Hadoop clusters&lt;/strong&gt;, which are collections of computers, or nodes, that work together to execute computations on data. It allows us to store any kind of data and handle multiple concurrent tasks. Hadoop is **widely used in data science and big data, so if you’re a data scientist (or an aspiring data scientist), Hadoop is a great tool to learn. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#virtualization"&gt;
  &lt;/a&gt;
  Virtualization
&lt;/h2&gt;

&lt;p&gt;The final trend we’ll explore is virtualization. Virtualization allows us to use the features of a physical machine across multiple virtual environments. There are many different types of virtualization, including cloud virtualization, network virtualization, and data virtualization, so depending on your team and organization, you may work with a few different types. &lt;/p&gt;

&lt;p&gt;If you’re looking to work in the cloud space, this is an &lt;strong&gt;important trend to stay on top of&lt;/strong&gt;. Additionally, if you haven’t already, it’s important to become familiar with two additional operating system fundamentals: concurrency and persistence. These three concepts lay the foundation for understanding how operating systems work.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;And there you have it! We explored some of the projected top tech trends for the upcoming year. There’s no better time than now to get started upskilling or learning a new skill to add to your resume. Learning any tool or technology on this list will take your learning to the next level and allow you to stand out to potential employers.&lt;br&gt;
Educative is committed to helping you expand your knowledge and skillset. &lt;/p&gt;

&lt;p&gt;Accelerate your learning and your career with our &lt;a href="https://www.educative.io/trial"&gt;&lt;strong&gt;free 7-day trial&lt;/strong&gt;&lt;/a&gt;. Our free trial grants you access to over 300 curated courses.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>career</category>
      <category>discuss</category>
    </item>
    <item>
      <title>What’s the best programming language to learn first?</title>
      <author>Erin Schaffer</author>
      <pubDate>Thu, 30 Dec 2021 21:30:39 +0000</pubDate>
      <link>https://dev.to/educative/whats-the-best-programming-language-to-learn-first-24oi</link>
      <guid>https://dev.to/educative/whats-the-best-programming-language-to-learn-first-24oi</guid>
      <description>&lt;p&gt;As a beginner programmer, it’s difficult to decide which programming language to learn first. The software development industry is fast-paced, and the market is constantly changing. There are over 700 programming languages in use, and each of those languages has its own advantages, disadvantages, and use cases. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;So, how do you decide where to begin?&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;Well, the good news is that learning &lt;em&gt;any&lt;/em&gt; language will open up doors and create new opportunities for you. In this article, we’ll explore the different types of programming languages, along with how to choose the best first language for your personal and professional goals. Then, we’ll give an overview of some of the most popular languages in use today.&lt;/p&gt;

&lt;p&gt;Let’s get started!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We’ll cover&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#programmingtypes"&gt;Different types of programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#choosingprogramminglanguage"&gt;Choosing the right programming language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#popularprogramminglanguages"&gt;Popular programming languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nextsteps"&gt;Wrapping up and next steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#different-types-of-programming"&gt;
  &lt;/a&gt;
  Different types of programming
&lt;/h2&gt;

&lt;p&gt;Programming languages are used to connect instructions to computers or machines. There are so many different programming languages with different functions. These languages can be categorized based on their functionalities. Popular programming language types include:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#highlevel"&gt;
  &lt;/a&gt;
  High-level
&lt;/h3&gt;

&lt;p&gt;High-level programming languages have strong abstractions from the details of the computer. High-level languages are considered easier to understand and learn because they typically use simple syntax, have better readability, and automate areas of computing systems to make programming easier.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lowlevel"&gt;
  &lt;/a&gt;
  Low-level
&lt;/h3&gt;

&lt;p&gt;Low-level programming languages have little to no abstraction from the instruction set architecture of a computer. These languages are typically described as “closer to the hardware.” They can convert to machine code without an interpreter or compiler. They’re considered to have a steeper learning curve than high-level languages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generalpurpose"&gt;
  &lt;/a&gt;
  General-purpose
&lt;/h3&gt;

&lt;p&gt;General-purpose programming languages are designed to build software in a variety of application domains. These languages lack special features for particular domains.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scripting"&gt;
  &lt;/a&gt;
  Scripting
&lt;/h3&gt;

&lt;p&gt;Scripting languages are programming languages that are interpreted. They’re typically interpreted at runtime rather than compiled. They use a series of commands that can be executed without being compiled. All scripting languages are programming languages, but not all programming languages are scripting languages. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#imperative"&gt;
  &lt;/a&gt;
  Imperative
&lt;/h3&gt;

&lt;p&gt;Imperative programming uses statements to change the state of a program. Imperative programs give commands to the computer to execute. It focuses on explaining &lt;em&gt;how&lt;/em&gt; programs operate. Imperative languages can be broken down into the following subcategories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Procedural&lt;/strong&gt;: Procedural programming languages are based on the concept of procedural calls. These languages follow and carry out a set of ordered steps.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Object-oriented&lt;/strong&gt;: Object-oriented programming languages are based on the concept of &lt;em&gt;objects&lt;/em&gt;, which contain data or code. Object-oriented programs are created by objects that interact with each other. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Parallel&lt;/strong&gt;: Parallel programming languages carry out processes simultaneously. With parallel programming, tasks are typically broken down into several sub-tasks that can be executed independently with all of the results combined afterward. Parallel programming is closely related to and frequently used alongside &lt;em&gt;concurrent programming&lt;/em&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#declarative"&gt;
  &lt;/a&gt;
  Declarative
&lt;/h3&gt;

&lt;p&gt;Declarative programming is typically defined as “any style of programming that is &lt;em&gt;not&lt;/em&gt; imperative.” Declarative programs are non-imperative and describe their desired results without clearly defining commands or steps to be executed. They describe &lt;em&gt;what&lt;/em&gt; the program must accomplish, rather than &lt;em&gt;how&lt;/em&gt; to accomplish it. Declarative languages can be broken down into the following subcategories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Logic&lt;/strong&gt;: Logic programming languages are based on formal logic. Logical programs consist of a set of sentences in a logical order that expresses facts and rules about problem domains.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Functional&lt;/strong&gt;: Functional programming languages apply and compose functions. Function definitions are trees of expressions that map values to other values. In functional programming, functions can be bound to names, passed as arguments, and returned from other functions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Database&lt;/strong&gt;: Database programming languages define and access database information. With database programs, we can control access to data, define and update data, and search for information within our database management system (DBMS).&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#choosing-the-right-programming-language"&gt;
  &lt;/a&gt;
  Choosing the right programming language
&lt;/h2&gt;

&lt;p&gt;There are a few things to take into consideration when choosing a language to learn, or even when deciding on which language to use for a new project. I think the first essential question to ask yourself is: &lt;em&gt;what am I learning a programming language for?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Are you interested in getting into programming? Are you wanting to learn programming as a hobby or just for fun? Are you trying to switch career paths? Do you want to build a website from the ground up? Do you want to design your own mobile application? Do you want to learn the most in-demand, popular language on the market? The questions are endless!&lt;/p&gt;

&lt;p&gt;In short, your personal reasons for learning a language will help guide which language is best for you to learn. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#can-i-choose-the-wrong-programming-language"&gt;
  &lt;/a&gt;
  Can I choose the &lt;em&gt;wrong&lt;/em&gt; programming language?
&lt;/h3&gt;

&lt;p&gt;At the end of the day, learning &lt;em&gt;any&lt;/em&gt; programming language will teach you valuable and transferable skills in the software industry. While all programming languages have their differences, they share similar underlying principles. With any language, you’ll learn more about fundamental programming concepts, computer science, hardware, software, etc. &lt;/p&gt;

&lt;p&gt;It’s also important to remember that you can learn multiple programming languages. Many developers move between different languages throughout the course of their careers. If you end up not aligning with your first language, you can always move on to another one. Once you learn your first language, it’s typically a lot easier to learn another one. Don’t stress yourself out when trying to pick your first language. &lt;/p&gt;

&lt;p&gt;That being said, it’s important to consider what your goals are and what you’re working on when choosing a language. For example, if you want to build an iOS application, a good language option would be Swift, if you want to program a website, you’d want to learn languages like HTML and CSS, and so on.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#popular-programming-languages"&gt;
  &lt;/a&gt;
  Popular programming languages
&lt;/h2&gt;

&lt;p&gt;In this section, we’ll explore a compilation of some of the most popular programming languages to help you get an idea of what language would be best suited for you and your needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#java"&gt;
  &lt;/a&gt;
  Java
&lt;/h3&gt;

&lt;p&gt;Java is a general-purpose, object-oriented, high-level programming language. It’s commonly used as the server-side language for back-end development tasks, including Android application development, big data applications, mobile app development, game development, and more. It’s a relatively simple language that uses automatic memory allocation and garbage collection. It offers class-based object-oriented programming (OOP) and enables reusable code. Java is platform-independent and multi-threaded.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h3&gt;

&lt;p&gt;JavaScript is an interpreted, object-oriented, high-level language. Unlike Java, it’s not class-based. JavaScript is widely used in front-end web development alongside HTML and CSS to build dynamic web pages. JavaScript is a very fast language because it can be run in the client-side browser. It’s known for its simple syntax and rich libraries, frameworks, and technologies, including React, Angular, and Node.js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h3&gt;

&lt;p&gt;​Python is an interpreted, object-oriented, high-level scripting language. It’s widely used in artificial intelligence, machine learning, data science and data analysis, and web development. Python provides rich libraries that include features such as web services tools, operating system interfaces, and more. These features add a lot of functionality to the language, which is one of the reasons why Python is so popular. Many developers recommend that beginner coders &lt;a href="https://www.educative.io/blog/how-to-learn-python-in-5-easy-steps"&gt;learn Python&lt;/a&gt; as their first programming language because of its simple syntax, readability, and extensivity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#swift"&gt;
  &lt;/a&gt;
  Swift
&lt;/h3&gt;

&lt;p&gt;Swift is an open-source, multi-paradigm language developed by Apple. It’s mainly used for iOS development and macOS development. It integrates Objective-C’s object-oriented model and includes a framework infrastructure, debugger, and an advanced compiler. Swift is known for its simple syntax, scalability, and safety features. Your Swift projects can be extended with new features whenever necessary, which makes them easy to scale.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#golang"&gt;
  &lt;/a&gt;
  Golang
&lt;/h3&gt;

&lt;p&gt;Golang, or &lt;em&gt;Go&lt;/em&gt;, is an open-source, general-purpose, and compiled programming language created by Google. It’s a statically-typed and imperative language that includes features of object-oriented programming. Go is &lt;em&gt;hybrid&lt;/em&gt;, using the best features of many languages in a clear, expressive way. It’s used for all different types of software development solutions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C
&lt;/h3&gt;

&lt;p&gt;The C programming language is general-purpose, imperative, and procedural. It’s widely used for scripting system apps and Windows, UNIX, and Linux operating systems. It’s also used for embedded systems, desktop applications, browsers, and databases. C is a low-level language, so it’s “closer to the hardware.” C is a base language for many other languages, so learning it will help you learn and understand other languages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C++
&lt;/h3&gt;

&lt;p&gt;C++ is a general-purpose, generic, object-oriented language. Its portability allows you to easily run your programs on any interface or operating system. For example, if you write a program in Linux and want to switch to Windows, the transition will be smooth. It’s commonly used for video game development, back-end development, and graphical user interface (GUI) applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sql"&gt;
  &lt;/a&gt;
  SQL
&lt;/h3&gt;

&lt;p&gt;SQL, or &lt;em&gt;structured query language&lt;/em&gt;, is a domain-specific language used to manage data in relational databases. It’s the standard language for relational database management systems (RDMS) like MySQL, Postgres, and Microsoft SQL Server. It allows you to embed within other languages using SQL modules, libraries, and pre-compilers. It’s a valuable language for web developers, data scientists and analysts, and even some non-technical roles, such as business analysts, marketers, and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scala"&gt;
  &lt;/a&gt;
  Scala
&lt;/h3&gt;

&lt;p&gt;The Scala programming language combines functional programming and object-oriented programming into one language. It was designed to improve upon Java, so you can call Java methods, inherit from Java classes, and more. Scala is commonly used for strong static systems, machine learning, data science, finance applications, distributed applications, and more. It’s in high demand and is becoming increasingly popular.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#php"&gt;
  &lt;/a&gt;
  PHP
&lt;/h3&gt;

&lt;p&gt;PHP is an open-source server-side scripting language that’s similar to C. It’s widely used for web development and to create dynamic web pages. It’s also used in command-side scripting and GUI design. PHP is known to be beginner-friendly and widely applicable, as it can be used on any operating system or database.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kotlin"&gt;
  &lt;/a&gt;
  Kotlin
&lt;/h3&gt;

&lt;p&gt;Kotlin is an open-source, statically-typed programming language that can transpile to Java bytecode to run on the Java Virtual Machine (JVM) or Android. Currently, Kotlin is most widely used for Android app development and server-side applications. It can also be used to write web applications by transpiling to JavaScript. Learning Kotlin can help you quickly learn other modern languages like TypeScript, Scala, and Swift because they share many common concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html-and-css"&gt;
  &lt;/a&gt;
  HTML and CSS
&lt;/h3&gt;

&lt;p&gt;HTML and CSS are popular languages for front-end developers. HTML is a markup language that’s used to structure web pages and their content. CSS is a style sheet language used to describe the presentation of documents written in markup languages like HTML. The two languages work together alongside JavaScript to build interactive websites.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up-and-next-steps"&gt;
  &lt;/a&gt;
  Wrapping up and next steps
&lt;/h2&gt;

&lt;p&gt;Whether you’re just getting started or you’re just wanting to learn a new programming language, Educative is here to help. Our curated courses and tutorials help you master new coding languages and skills and prepare you for real-world software development. Our courses are hands-on, including interactive code widgets directly in your web browser. Get started with a new language today with one of our &lt;strong&gt;&lt;em&gt;From Scratch&lt;/em&gt;&lt;/strong&gt;  courses. Some options include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/courses/learn-java-from-scratch"&gt;Learn Java from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/courses/learn-cpp-from-scratch"&gt;Learn C++ from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/courses/learn-scala-from-scratch"&gt;Learn Scala from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continue-learning-about-programming"&gt;
  &lt;/a&gt;
  Continue learning about programming
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/algorithms-101-check-string-palindrome"&gt;Algorithms 101: How to check if a string is a palindrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/what-is-an-api"&gt;Beginner API deep dive: What is an API?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/hardware-vs-software-components-computer"&gt;Computer science 101: Hardware vs software components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/performance-testing-tutorial-gatling-jenkins"&gt;Performance testing tutorial: Automation, Gatling, and Jenkins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
      <category>python</category>
    </item>
  </channel>
</rss>
