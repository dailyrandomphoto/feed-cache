<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to automatically clear old files from a folder on Linux</title>
      <author>Seth</author>
      <pubDate>Wed, 14 Jul 2021 13:15:40 +0000</pubDate>
      <link>https://dev.to/saluki/how-to-automatically-clear-old-files-from-a-folder-on-linux-4gmb</link>
      <guid>https://dev.to/saluki/how-to-automatically-clear-old-files-from-a-folder-on-linux-4gmb</guid>
      <description>&lt;p&gt;One of the greatest things about Linux is how easily you can automate it. It gives you a huge amount of flexibility and control over your system, and it allows you to offload all the mundane or repetitive tasks to the system.&lt;/p&gt;

&lt;p&gt;In this guide, I’ll briefly show you how you can periodically clear old files and folders from a directory. I use this to clear down my downloads folder, but you could use it anywhere.&lt;/p&gt;

&lt;p&gt;You can view the guide here: &lt;a href="https://www.saluki.tech/2021/07/14/how-to-automatically-clear-your-downloads-or-any-folder-on-linux/"&gt;https://www.saluki.tech/2021/07/14/how-to-automatically-clear-your-downloads-or-any-folder-on-linux/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>automation</category>
    </item>
    <item>
      <title>How to examine moles at home: Review of the personal mole tracker NOTA</title>
      <author>forktestlab</author>
      <pubDate>Wed, 14 Jul 2021 13:07:18 +0000</pubDate>
      <link>https://dev.to/forktestlab/how-to-examine-moles-at-home-review-of-the-personal-mole-tracker-nota-33da</link>
      <guid>https://dev.to/forktestlab/how-to-examine-moles-at-home-review-of-the-personal-mole-tracker-nota-33da</guid>
      <description>&lt;p&gt;NOTA mole tracker (&lt;a href="https://notamole.com/199?utm_sourse=dev"&gt;https://notamole.com/199?utm_sourse=dev&lt;/a&gt;) - this is another device for the study of moles and the diagnosis of skin cancer, which stands out in a special way among others. For example, a magnifying glass is not attached to the phone, but this is an independent device that uses bioimpedance technology for measurements, i.e. it literally penetrates the skin by 2 mm with a weak electrical pulse and measures the resistance of cells. &lt;/p&gt;

&lt;p&gt;Here I will make a digression: healthy and cancer cells have different resistance (impedance), which is recorded and transmitted to the application on the phone. Here the data is processed and the result is given - whether the mole is dangerous or not.&lt;br&gt;
Bioimpedance can also be found in smart scales that determine body composition, as well as fitness trackers that count calories.&lt;br&gt;
Yes, the device has a fairly high price - $300, but if you compare, for example, with an annual subscription to the SkinVision application, you get $25 versus $45 monthly. And at the same time, the application is installed only on one phone(not every device is suitable), takes up the lion's share of the device's memory and can be used by only one person. NOTA can measure the moles of all family members, and the application for it is free, supported by almost any device and takes up 50 MB of memory.&lt;/p&gt;

&lt;p&gt;After several months of use, I can share my impressions, as well as tell you how quickly moles get injured while being unprotected in the open sun.&lt;/p&gt;

&lt;p&gt;Filling and appearance&lt;br&gt;
Let's start with the fact that NOTA is a small black gadget that looks like a thick handle with a button, on one side of which there are removable heads with 4 electrodes, on the other - a charging connector. The case material is a pleasant-to-touch plastic covered with soft-touch, which prevents the device from sliding in your hand when measuring a mole.&lt;br&gt;
NOTA weighs a little more than 40 grams, takes up little space when carrying, so you can take it with you on long trips or business trips without fear of overweight.&lt;/p&gt;

&lt;p&gt;The kit includes a replaceable head in an individual velvet bag, a USB charging cable(which, by the way, can be replaced by charging from an iPhone), alcohol wipes and a velvet case for storing the device itself.&lt;/p&gt;

&lt;p&gt;Inside the device there is a board, the components of which are produced by the American company Texas Industry.&lt;br&gt;
The sensitive brass electrodes of the device's head, which record changes in the cells, are coated with gold to prevent corrosion and increase the service life. For convenience, the device has 2 heads - a large one for measuring flat or large moles and a small one for measuring nevi protruding above the surface of the skin.&lt;/p&gt;

&lt;p&gt;Cost.&lt;br&gt;
I propose to close this issue immediately. What you need to understand is that you are not buying another gadget, but the opportunity to detect cancer at an early stage and cure it. Even if you have insurance, getting an appointment with an oncoderatologist(especially in California) is still a quest, and your meeting can be scheduled in 4-5 months. You can use the services of applications that analyze moles using AI, but at the end of the review I will clearly show why this is pointless. And if you have more than 100 moles on your body, then using NOTA will pay for itself in the first month and will save you a lot of time and nerves, since you buy the device once and for a long time.&lt;/p&gt;

&lt;p&gt;Maintenance and technical specifications&lt;br&gt;
The NOTA is equipped with a 370 mAh lithium-ion battery, which is enough for an hour of active work, during which you can measure about 180 moles. If we talk about periodic use, then I charged the device only once in 3 months. Full charging via the USB type C connector takes 4 hours, so you can put the device on at night, and actively use it in the morning. One of the huge advantages is that if it is not possible to charge the device completely, and the mole needs to be measured here and now, then you can use the fast charging function: put NOTA to charge for 20 minutes, and then take measurements. This amount of charge is enough for 5-6 scans. You will not be able to use the device while charging.&lt;br&gt;
For the convenience of "communicating" with the device, there is an indicator light near the charging connector that flashes or lights up in different colors and means a particular state. For example, flashing yellow - charging is required, flashing blue-the device is looking for a Bluetooth connection, flashing green quickly - scanning is underway, and so on.&lt;br&gt;
It is required to store Nota, as well as one of the replaceable heads, in a special velvet case in a dry place. Using the device in the bathroom or near the water is possible, but undesirable. Also, you can not immerse the device in water or take measurements of the skin wet from water.&lt;br&gt;
The tracker is made of eco-friendly recyclable plastic.&lt;/p&gt;

&lt;p&gt;Appointment&lt;br&gt;
I should immediately note that this is not a medical device, but its results can be a step towards an early meeting with a dermatologist, which will help get rid of possible skin cancer at an early stage, when treatment is limited only to removing a mole and subsequent observation. I would also like to note that the bioimpedance method used by the NOTA itself was approved by the FDA as a method for non-invasive (i.e., without taking a mole sample - biopsy) detection of skin cancer/melanoma at an early stage. Therefore, I use the NOTA also as a 2-opinion after consulting a dermatologist. Here I want to note as a user: I like the fact that I can measure my moles at any time(for example, the nevus began to itch) and understand whether it is worth worrying about this and looking for an early appointment with a doctor or everything is fine.&lt;/p&gt;

&lt;p&gt;Application&lt;br&gt;
For NOTA to work, need a phone with the NOTA mole tracker application installed, which can be downloaded from the AppStore or Google Play, and Bluetooth.&lt;br&gt;
When I started using the app, I needed to create a personal account that will store all the surveys, and when I replace my phone, I will be able to transfer all the measurement data to a new device.&lt;br&gt;
All moles are stored as a list with brief information - the location of the mole, the time of the last scan, a reminder and an icon with a green or red dot-the result of the last examination. Moles can be sorted by the time of creation, the last scan, and so on.&lt;/p&gt;

&lt;p&gt;To view detailed information, as well as compare photos of moles and the results of all scans, need to click on the desired item from the list of nevi.&lt;/p&gt;

&lt;p&gt;On this screen, in the upper part, we can see the title, the date and time of the study, the number of measurements(here, for example, there are 3 of them)&lt;br&gt;
In the center we see a photo of a mole, and by the arrow to the side can see and compare the previous photos according to the ABCDE rule.&lt;br&gt;
In the lower left part of the screen there is an icon with a part of the body where the nevus is located, as well as 2 buttons: highlighted in green shows the measurement result without decoding, white makes it possible to create a new study of the same mole.&lt;br&gt;
I'll go back a little: there is a green notepad that lights up at the top of the screen. If click it, the result of the selected measurement will open with the possibility of entering feedback from the doctor.&lt;/p&gt;

&lt;p&gt;Here you can also put a reminder about repeated testing and read the result of the survey.&lt;br&gt;
I think that the theoretical part can be finished with this.&lt;/p&gt;

&lt;p&gt;The second part will be devoted to practice, i.e. I will show how the examination takes place and share the data of an interesting experiment from life, which shows how dangerous the sun is for an unprotected mole.&lt;/p&gt;

&lt;p&gt;II. Home examination of moles with the help of a NOTA and an experiment.&lt;/p&gt;

&lt;p&gt;In the first part, we have analyzed the theory, here will be an exclusively practical description of the use of the device. So, let's start with the introductory data of the subject: 30 years old, more than 150 moles on the body. I'm getting a bad tan, the skin type according to Fitzpatrick is 2. New moles appear periodically.&lt;br&gt;
The NOTA is needed to quickly determine whether everything is in order with the old moles and whether the new ones are not malignant.&lt;br&gt;
For an example of the work of the device and the application, I will make a measurement of the birthmark on the right leg, above the knee.&lt;/p&gt;

&lt;p&gt;To start, log in to the application and select the New mole item&lt;/p&gt;

&lt;p&gt;Next, a body map opens, where you can mark the location of the nevus. Gray dots are moles that are already in the application, green is a new mole.&lt;/p&gt;

&lt;p&gt;After clicking Save, the nevus examination process begins with entering the size. For this, I used a soft meter. I will make a digression - the size of the mole affects the number of measurements, but not the quality. If you do not have a ruler at hand, then you can enter the approximate dimensions of the nevus.&lt;/p&gt;

&lt;p&gt;The next screen is a photo of a mole. There is nothing new here - we point the camera at the nevus and take a photo.&lt;/p&gt;

&lt;p&gt;In the same screen, the tools for enlarging the mole appear. We save the photo and proceed to the next stage - connecting NOTA to the phone.&lt;/p&gt;

&lt;p&gt;Everything is simple here - you need to turn on Bluetooth on your phone and hold down the button on the device. While the Note is flashing blue, the device is being searched for, and then the device indicator switches to static blue.&lt;/p&gt;

&lt;p&gt;After connecting the NOTA, you can immediately see which head is connected. Click Done and proceed to scanning the nevus.&lt;/p&gt;

&lt;p&gt;A tip appears on the application screen - wipe the skin with an alcohol napkin and measure the skin next to the nevus. This will be a reference measurement, that is, it will determine how much the cells of the mole differ from the cells of healthy skin.&lt;br&gt;
An alcohol napkin in this case cleanses and slightly moisturizes the skin, making it more sensitive to the signal passing through the electrodes of the device.&lt;/p&gt;

&lt;p&gt;After the reference measurement, the application will offer to measure the mole itself. I also wipe it with an alcohol napkin and apply the NOTA with electrodes to the mole.&lt;/p&gt;

&lt;p&gt;The scanning process&lt;/p&gt;

&lt;p&gt;After about 10 seconds, I see a screen with the result - the mole is fine.&lt;/p&gt;

&lt;p&gt;The next screen provides a transcript, as well as the ability to enter feedback or set a reminder about the next scan.&lt;/p&gt;

&lt;p&gt;That's it, the process of measuring the mole is over and I got the result.&lt;/p&gt;

&lt;p&gt;And now, as promised, I will share the results of an interesting experiment and clearly show how dangerous the sun's rays are for open moles and how useless photo applications are.&lt;/p&gt;

&lt;p&gt;Everyone has heard about the dangers of ultraviolet radiation. And many people know that excessive exposure to the sun can cause skin cancer. But, any person believes that "this will not affect me/ I don't sunbathe/ this is for the benefit/ for the production of vitamin D/ I have a vacation" and everything like that.&lt;br&gt;
Therefore, I wanted to clearly show that even a short stay in the direct sun without protective equipment causes harm, which can be noticed with the help of NOTA.&lt;/p&gt;

&lt;p&gt;To do this, I take a device, an application and choose a mole that is initially healthy. The location is the upper part of the abdomen, that is, the mole is constantly hidden from the sun by clothing.&lt;/p&gt;

&lt;p&gt;Next, I packed my things and went to the place of the experiment - to the river, to take sun and river baths. At the time of collection, the UV-index application showed 6 points, that is, a person with my skin type (according to Fitzpatrick-2) can be in the open sun without protective equipment for no more than 50 minutes.&lt;/p&gt;

&lt;p&gt;It would seem that I will not do this, because the primary desire is to be in the water, and only then in the sun.&lt;/p&gt;

&lt;p&gt;...It took 1.5 hours. I make a measurement of the mole.&lt;/p&gt;

&lt;p&gt;As you can see, the device noticed changes in the mole. And this is despite the fact that most of these one and a half hours I was in the water(ratio: about 60 minutes in the water, 30 minutes in the sun). Additional symptoms: the skin is hot and itches a little near the mole, which means getting a slight sunburn.&lt;/p&gt;

&lt;p&gt;In an additional load, I checked the mole through a photo application with AI.&lt;/p&gt;

&lt;p&gt;Not concerning...And if there is really nothing suspicious outwardly, then the sensations say the opposite!&lt;/p&gt;

&lt;p&gt;Conclusions from the experiment:&lt;/p&gt;

&lt;p&gt;1) The bioimpedance method used by NOTA notices changes in the mole even after a short stay in the sun without protection(sunscreen, clothing).&lt;/p&gt;

&lt;p&gt;2) Applications for detecting changes in moles using photos are ineffective. And if you really want to know the "fate of the mole from the photo" - send the image to the doctor.&lt;/p&gt;

&lt;p&gt;3) Always use sun protection, even if you think that you will not burn in the sun!&lt;/p&gt;

&lt;p&gt;P.S. A day later, when the itching and skin temperature passed, I measured the mole again - everything is fine.&lt;/p&gt;

&lt;p&gt;Be healthy and take care of your moles:)&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>testing</category>
      <category>monitoring</category>
      <category>a</category>
    </item>
    <item>
      <title>How to Trigger an AWS Lambda from Kinesis</title>
      <author>Alex Kates</author>
      <pubDate>Wed, 14 Jul 2021 13:03:17 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-trigger-an-aws-lambda-from-kinesis-5381</link>
      <guid>https://dev.to/aws-builders/how-to-trigger-an-aws-lambda-from-kinesis-5381</guid>
      <description>&lt;p&gt;In this post we are going to use the AWS CDK to build an AWS Lambda Function that triggers from an AWS Kinesis Stream.&lt;/p&gt;

&lt;p&gt;All of the code &lt;a href="https://github.com/alexkates/how-to-trigger-lambda-from-kinesis"&gt;can be found in this repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;We need to run a few commands to setup our CDK app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;how-to-trigger-lambda-from-kinesis
&lt;span class="nb"&gt;cd &lt;/span&gt;how-to-trigger-lambda-from-kinesis
npx cdk init app &lt;span class="nt"&gt;--language&lt;/span&gt; typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should give you the following directory structure.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y3g5EjN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cg1jou7runutz1lf1g4k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y3g5EjN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cg1jou7runutz1lf1g4k.png" alt="Directory structure after running the CDK init command"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also make sure you have your AWS CLI configured. For more information follow &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html"&gt;the AWS CLI quickstart guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-a-kinesis-stream"&gt;
  &lt;/a&gt;
  Create a Kinesis Stream
&lt;/h2&gt;

&lt;p&gt;Install the Kinesis CDK package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @aws-cdk/aws-kinesis
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open &lt;code&gt;lib/how-to-trigger-lambda-from-kinesis-stack.ts&lt;/code&gt;, add a new Kinesis stream, and deploy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;kinesis&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-kinesis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HowToTriggerLambdaFromKinesisStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;kinesis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyKinesisStream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;streamName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyKinesisStream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nice! Let's deploy the stack.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm run cdk deploy&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-lambda"&gt;
  &lt;/a&gt;
  Create a Lambda
&lt;/h2&gt;

&lt;p&gt;Install the Lambda CDK package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @aws-cdk/aws-lambda
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Deploying a Lambda function requires bootstrapping your CDK app which gives us an S3 bucket where our Lambda's source code will live. This is a one time operation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run cdk bootstrap
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create src/index.js and paste the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Records&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Record: %j&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open &lt;code&gt;lib/how-to-trigger-lambda-from-kinesis-stack.ts&lt;/code&gt;, add a new Lambda function, and deploy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;kinesis&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-kinesis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-lambda&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HowToTriggerLambdaFromKinesisStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;kinesis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyKinesisStream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;streamName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyKinesisStream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lambdaFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromAsset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;index.handler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;functionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;KinesisMessageHandler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;runtime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Runtime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODEJS_12_X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Deploy again ...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run cdk deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may need to confirm some IAM changes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N9_MJn3j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wewtlhu4258gagawawm2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N9_MJn3j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wewtlhu4258gagawawm2.png" alt="IAM changes after deploying stack with Lambda function"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-the-event-source"&gt;
  &lt;/a&gt;
  Create the Event Source
&lt;/h2&gt;

&lt;p&gt;Install the Lambda Event Sources CDK package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @aws-cdk/aws-lambda-event-sources
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open lib/how-to-trigger-lambda-from-kinesis-stack.ts, add a new KinesisEventSource to the Lambda Function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;kinesis&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-kinesis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-lambda&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;lambdaEventSources&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-lambda-event-sources&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HowToTriggerLambdaFromKinesisStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;kinesis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyKinesisStream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;streamName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyKinesisStream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lambdaFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromAsset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;index.handler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;functionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;KinesisMessageHandler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;runtime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Runtime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODEJS_12_X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eventSource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;lambdaEventSources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;KinesisEventSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;startingPosition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StartingPosition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TRIM_HORIZON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;lambdaFunction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;eventSource&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One more deployment ...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run cdk deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One last time, you may need to approve IAM changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VPm4YUlb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jkyoi25rqossad8of1f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VPm4YUlb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jkyoi25rqossad8of1f.png" alt="IAM changes approval after deploying the Kinesis event source"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;We are going to make use of the AWS CLI to test our stack.&lt;/p&gt;

&lt;p&gt;First, we need the Stream name of our Kinesis queue, which you can get using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws kinesis list-streams
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, using the Stream name from the previous command, use the AWS CLI to send a new message to &lt;code&gt;MyKinesisStream&lt;/code&gt;. Please refer to &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/kinesis/put-record.html"&gt;the Kinesis docs&lt;/a&gt; for information about these arguments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws kinesis put-record &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--data&lt;/span&gt; &lt;span class="s2"&gt;"aGVsbG8sIHdvcmxk"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--stream-name&lt;/span&gt; MyKinesisStream &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--partition-key&lt;/span&gt; pk1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Verify that the Lambda executed by looking in CloudWatch. Find the LogGroup named &lt;code&gt;/aws/lambda/KinesisMessageHandler&lt;/code&gt; and open up the latest LogStream. You should see some log messages that look similar to this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S6Wc9T1q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alub8zfeac2dg1wqsr4r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S6Wc9T1q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alub8zfeac2dg1wqsr4r.png" alt="CloudWatch results after sending a new Kinesis record"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clean-up"&gt;
  &lt;/a&gt;
  Clean Up
&lt;/h2&gt;

&lt;p&gt;Don't forget to delete your stack when you are finished!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run cdk destroy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for reading! If you found this useful, please follow me here &lt;br&gt;
&lt;a href="https://dev.to/thealexkates"&gt;https://dev.to/thealexkates&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/thealexkates"&gt;https://twitter.com/thealexkates&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>eventdriven</category>
    </item>
    <item>
      <title>Innovation from within the team?</title>
      <author>Lucas Paetow</author>
      <pubDate>Wed, 14 Jul 2021 12:16:08 +0000</pubDate>
      <link>https://dev.to/s2engineers/innovation-from-within-the-team-20co</link>
      <guid>https://dev.to/s2engineers/innovation-from-within-the-team-20co</guid>
      <description>&lt;p&gt;(Photo by &lt;a href="https://unsplash.com/@sunlifter?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Tomasz Frankowski&lt;/a&gt;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-bring-innovation-to-long-term-client-projects"&gt;
  &lt;/a&gt;
  How do you bring innovation to long term client projects?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#can-you-still-be-creative-and-try-crazy-ideas"&gt;
  &lt;/a&gt;
  Can you still be creative and try crazy ideas?
&lt;/h3&gt;

&lt;p&gt;We are working on a big project with many other people for quite some time now and we all will be working there for quite some more time. We have our set meetings, alignments, refinements, plannings, lunch times, reviews, and everything else for a smooth ride. But sometimes I wish I could bring more to the table, add my own ideas to existing stories or create new ones entirely. &lt;/p&gt;

&lt;p&gt;Many of us have some expertise through other &lt;a href="https://dev.to/s2engineers/do-i-need-to-do-private-side-projects-to-be-become-a-professional-web-developer-5137"&gt;(side) projects&lt;/a&gt; or previous jobs and have ideas in that direction. For example, I really enjoy working with &lt;a href="https://dev.to/lptw/series/9148"&gt;animations&lt;/a&gt; and therefore often see opportunities where to add them to increase the usability of the project. If I see some possibility to add them, I could of course write a ticket but it might never see the light of day on the bottom of the backlog (even if it suits the long term goals of the client).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-should-it"&gt;
  &lt;/a&gt;
  But should it?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Is this kind of thinking more of a luxury problem? &lt;/li&gt;
&lt;li&gt;Does the client always know which ticket order is best because in the end, all we can do is give advice to the best of our knowledge and priorities are always shifting anyways?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-about-you"&gt;
  &lt;/a&gt;
  What about you
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Were you able to convince your client to let you bring in your own ideas to even further improve the product? &lt;/li&gt;
&lt;li&gt;If so, how? &lt;/li&gt;
&lt;li&gt;With your own process like an “innovation sprint” or separate backlog? &lt;/li&gt;
&lt;li&gt;Or did you find another solution entirely?&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>discuss</category>
      <category>help</category>
      <category>webdev</category>
      <category>innovation</category>
    </item>
    <item>
      <title>Make your own graphic novel</title>
      <author>Rob OLeary</author>
      <pubDate>Wed, 14 Jul 2021 12:06:59 +0000</pubDate>
      <link>https://dev.to/robole/a-microaction-graphic-novel-concept-1a9g</link>
      <guid>https://dev.to/robole/a-microaction-graphic-novel-concept-1a9g</guid>
      <description>&lt;p&gt;As a child, I was spellbound by the &lt;a href="https://en.wikipedia.org/wiki/2000_AD_(comics)"&gt;2000 AD comics&lt;/a&gt;. It had nonlinear narratives, irreverent humour, countercultural leanings, and fantastic stories. It had some exceptional writers and artists such as Alan Moore, Dave Gibbons, and Grant Morrison who would go on to create landmark graphic novels.&lt;/p&gt;

&lt;p&gt;I couldn't articulate what was so good about the comics at the time, but I just knew it was like nothing else, and I seemed to be the only one that "got it". I always wanted to create something like it myself, but never did. The furthest I got was to draw some of the characters.&lt;/p&gt;

&lt;p&gt;If you are not familiar with 2000 AD, here are a few covers to give you a rough idea. The characters and stories span many genres and have very different tones from comedy to horror, so don't judge it by these covers! 😉&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EDBk8vxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzefq5e4opbrjwj5bx1n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EDBk8vxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzefq5e4opbrjwj5bx1n.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
Photo by &lt;a href="https://www.flickr.com/photos/boyce-d/albums/72157612879165404"&gt;Boyce Duprey&lt;/a&gt;



&lt;p&gt;You can see the evolution of the style. The cheesy jokes remained.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bilToLg7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjtwyj27a4hc2ra2jzw2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bilToLg7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjtwyj27a4hc2ra2jzw2.jpg" alt="2000 AD cover"&gt;&lt;/a&gt;&lt;/p&gt;
Photo by &lt;a href="https://www.flickr.com/photos/boyce-d/albums/72157612879165404"&gt;Boyce Duprey&lt;/a&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cz1h-eBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/24im79amay7hzibc02lt.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cz1h-eBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/24im79amay7hzibc02lt.jpeg" alt="2000 AD cover"&gt;&lt;/a&gt;&lt;/p&gt;
Photo by &lt;a href="https://www.flickr.com/photos/boyce-d/albums/72157612879165404"&gt;Boyce Duprey&lt;/a&gt;



&lt;p&gt;In particular, Arthur Ranson did some stunning artwork that I found captivating.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L8tnN18---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07onuydwl2topuf1zzic.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L8tnN18---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07onuydwl2topuf1zzic.jpeg" alt="2000 AD cover"&gt;&lt;/a&gt;&lt;/p&gt;
Photo by &lt;a href="https://www.flickr.com/photos/boyce-d/albums/72157612879165404"&gt;Boyce Duprey&lt;/a&gt;



&lt;p&gt;As you get older, it's hard to hold onto these creative outlets. I stopped reading comics. I stopped drawing. It didn't fit in with my professional life. Since I had no-one to share the interest with, it kind of became an anti-social hobby. So, it slowly disappeared from my life.&lt;/p&gt;

&lt;p&gt;In the back of my mind, I said I will come back to graphic novels. I will make time for my own artwork. I thought I could make some digital artwork later, if it was tangentially related to my day job, it could be "practice". That never happened. My day job became architecture and backend development, rather than anything in the realm of graphic design. Zero tangents!&lt;/p&gt;

&lt;p&gt;I found my way back to graphic novels much later. I started to read them on my ereader. Some of them look great on an eInk screen. I started drawing again. That lead me to learn SVG. I started to do some front-end development and got around to learning animation in CSS and JavaScript, and was surprised by how much is possible in the browser. It was a gradual process, but finally, I had the skills to try something out on the web! And ironically, it took a global pandemic, probably the most anti-social period in recent history, to give me the time to do it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-webbased-microaction-graphic-novel"&gt;
  &lt;/a&gt;
  A web-based micro-action graphic novel
&lt;/h2&gt;

&lt;p&gt;I wanted to try out something new. I thought I could try to make a cross-breed (mongrel) for the web - let's call it a "web-based micro-action graphic novel". 🤨&lt;/p&gt;

&lt;p&gt;I wanted to try out 2 things in particular, I wanted to add a brief animation (microaction) to each panel (fill in the blank bits I imagine happening), and auto-scrolling to step through each panel at a particular pace. This is my first effort based on a page from Frank Miller's Sin City.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e2PXRzKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmy8sc9sd6gayf46kvcp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e2PXRzKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmy8sc9sd6gayf46kvcp.gif" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can play with &lt;a href="https://www.roboleary.net/lab/sin-city"&gt;the demo&lt;/a&gt; on my website. Clicking on the page will restart the sequence.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-process"&gt;
  &lt;/a&gt;
  The process
&lt;/h3&gt;

&lt;p&gt;Initially, I created each panel as a separate SVG. I measured out the space of each panel, so that combining them would be more-or-less a copy-and-paste job later. I used GSAP for the animation, and worked on the animation for each panel separately. Combining the timelines later is simple also. The net result was one SVG and one timeline in the script. &lt;/p&gt;

&lt;p&gt;This is the final panel with a CSS animation (rerun it if you missed it). It is a simple animation and is just 2 seconds of minimal action. It creates a more immersive narrative when it is combined with the more action-packed panels.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/robjoeol/embed/rNmjrEL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;It took me, on and off, 2 to 3 days to complete the page. Using masking for the "blam" text effects was the most time-consuming part. I wasn't sure if it would work the way I wanted, so I had to experiment. Looking at it again now with fresh eyes, I would like to tweak it more! Nothing is ever done I guess, it is merely abandoned. 😅&lt;/p&gt;

&lt;p&gt;I reckon I could make a full-sized graphic novel in this way in less than 2MB! To distribute a graphic novel as a file, it is just a compressed archive of images, named as a .CBR or .CBZ file. You can see an example of this in the screenshot below, where I opened a 2000 AD comic in the archive manager app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MFkSBs-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j74jplqarg5zxgzpcs14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MFkSBs-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j74jplqarg5zxgzpcs14.png" alt="CBR Example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-you-think"&gt;
  &lt;/a&gt;
  What do you think?
&lt;/h2&gt;

&lt;p&gt;I like the outcome. With the ability to control the speed of the auto-scroll, I would love to read a story this way. It would give me a reason to go through a story twice, it's almost like getting a director's cut of a movie. If you want to read it as a regular comic, you can turn off the animation and auto-scrolling. It's your show.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Given my limited artistic ability, making something similar to Sin City with it's bold, gestalt style would be easiest to pull off. Now, I just need my own story!&lt;/p&gt;

&lt;p&gt;Maybe, I can make a short story of 20 or so pages. It might take 8 weeks worth of work to complete, but it would be a fulfilling project to work on part-time over a longer stretch! 😅  Hopefully, some inspiration will come my way! 💡🙏&lt;/p&gt;

&lt;p&gt;In any case, my 8-year old self is proud of me. 👦&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>JavaScript question #Day 4</title>
      <author>Sooraj S</author>
      <pubDate>Wed, 14 Jul 2021 11:48:02 +0000</pubDate>
      <link>https://dev.to/soorajs98/javascript-question-day-4-el6</link>
      <guid>https://dev.to/soorajs98/javascript-question-day-4-el6</guid>
      <description>&lt;p&gt;&lt;strong&gt;Which one is true ?&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bird&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;small&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mouse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mickey&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;small&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A: &lt;code&gt;mouse.bird.size&lt;/code&gt; is not valid&lt;/li&gt;
&lt;li&gt;B: &lt;code&gt;mouse[bird.size]&lt;/code&gt; is not valid&lt;/li&gt;
&lt;li&gt;C: &lt;code&gt;mouse[bird["size"]]&lt;/code&gt; is not valid&lt;/li&gt;
&lt;li&gt;D: All of them are valid&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;p&gt;In JavaScript, all object keys are strings (unless it's a Symbol). Even though we might not &lt;em&gt;type&lt;/em&gt; them as strings, they are always converted into strings under the hood.&lt;/p&gt;

&lt;p&gt;JavaScript interprets (or unboxes) statements. When we use bracket notation, it sees the first opening bracket &lt;code&gt;[&lt;/code&gt; and keeps going until it finds the closing bracket &lt;code&gt;]&lt;/code&gt;. Only then, it will evaluate the statement.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mouse[bird.size]&lt;/code&gt;: First it evaluates &lt;code&gt;bird.size&lt;/code&gt;, which is &lt;code&gt;"small"&lt;/code&gt;. &lt;code&gt;mouse["small"]&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;However, with dot notation, this doesn't happen. &lt;code&gt;mouse&lt;/code&gt; does not have a key called &lt;code&gt;bird&lt;/code&gt;, which means that &lt;code&gt;mouse.bird&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;. Then, we ask for the &lt;code&gt;size&lt;/code&gt; using dot notation: &lt;code&gt;mouse.bird.size&lt;/code&gt;. Since &lt;code&gt;mouse.bird&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, we're actually asking &lt;code&gt;undefined.size&lt;/code&gt;. This isn't valid, and will throw an error similar to &lt;code&gt;Cannot read property "size" of undefined&lt;/code&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>node</category>
    </item>
    <item>
      <title>JavaScript question #Day 3</title>
      <author>Sooraj S</author>
      <pubDate>Wed, 14 Jul 2021 11:43:27 +0000</pubDate>
      <link>https://dev.to/soorajs98/javascript-question-day-3-3ahk</link>
      <guid>https://dev.to/soorajs98/javascript-question-day-3-3ahk</guid>
      <description>&lt;p&gt;&lt;strong&gt;What's the output ?&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;perimeter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;perimeter&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A: &lt;code&gt;20&lt;/code&gt; and &lt;code&gt;62.83185307179586&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B: &lt;code&gt;20&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C: &lt;code&gt;20&lt;/code&gt; and &lt;code&gt;63&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;D: &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;63&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;p&gt;Note that the value of &lt;code&gt;diameter&lt;/code&gt; is a regular function, whereas the value of &lt;code&gt;perimeter&lt;/code&gt; is an arrow function.&lt;/p&gt;

&lt;p&gt;With arrow functions, the &lt;code&gt;this&lt;/code&gt; keyword refers to its current surrounding scope, unlike regular functions! This means that when we call &lt;code&gt;perimeter&lt;/code&gt;, it doesn't refer to the shape object, but to its surrounding scope (window for example).&lt;/p&gt;

&lt;p&gt;There is no value &lt;code&gt;radius&lt;/code&gt; on that object, which returns &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>node</category>
    </item>
    <item>
      <title>Bridge - School Management System</title>
      <author>Muhammad Shoaib</author>
      <pubDate>Wed, 14 Jul 2021 11:36:53 +0000</pubDate>
      <link>https://dev.to/imuhammadshoaib/bridge-school-management-system-41o6</link>
      <guid>https://dev.to/imuhammadshoaib/bridge-school-management-system-41o6</guid>
      <description>&lt;p&gt;Bridge - School Management System Application&lt;br&gt;
E-school ERP Software is developed as the easy to use and most user-friendly which directly connects &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Admin&lt;/li&gt;
&lt;li&gt; Parents &lt;/li&gt;
&lt;li&gt; Teachers&lt;/li&gt;
&lt;li&gt; Students &lt;/li&gt;
&lt;li&gt; Accountant&lt;/li&gt;
&lt;li&gt; Librarian &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;on a single platform. that has been designed and developed by design technologies.&lt;/p&gt;

&lt;p&gt;Features&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Highly secured multi users login with multiple roles.&lt;/li&gt;
&lt;li&gt;All in one dashboard summary.&lt;/li&gt;
&lt;li&gt;Teachers account management.&lt;/li&gt;
&lt;li&gt;Class and section wise student management.&lt;/li&gt;
&lt;li&gt;Single &amp;amp; Bulk student admission upload forms.&lt;/li&gt;
&lt;li&gt;Student profile and mark sheet view.&lt;/li&gt;
&lt;li&gt;Advance student promotion module.&lt;/li&gt;
&lt;li&gt;Academic online lectures and syllabus.&lt;/li&gt;
&lt;li&gt;Class routine management.&lt;/li&gt;
&lt;li&gt;Study document home work provided by teacher.&lt;/li&gt;
&lt;li&gt;Daily attendance supervision.&lt;/li&gt;
&lt;li&gt;Exam scheduling.&lt;/li&gt;
&lt;li&gt;Exams marks and grade management.&lt;/li&gt;
&lt;li&gt;Exams marks send to parents via SMS notification.&lt;/li&gt;
&lt;li&gt;Tabulation sheet of total school academic result.&lt;/li&gt;
&lt;li&gt;Announcement via SMS notification.&lt;/li&gt;
&lt;li&gt;Internal chat system for Admin, Teachers, Students and Parents.&lt;/li&gt;
&lt;li&gt;Student payment invoice creation.&lt;/li&gt;
&lt;li&gt;Online payment API integration.&lt;/li&gt;
&lt;li&gt;Financial transaction history.&lt;/li&gt;
&lt;li&gt;Library and book management.&lt;/li&gt;
&lt;li&gt;Transport route, fare and vehicle management system.&lt;/li&gt;
&lt;li&gt;Dormitory, Hostel management system.&lt;/li&gt;
&lt;li&gt;School system settings.&lt;/li&gt;
&lt;li&gt;Ten different colorful themes embedded.&lt;/li&gt;
&lt;li&gt;BRIDGE with Twenty One different language phrase customization.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://www.codester.com/items/5583/bridge-school-management-system-php?ref=imuhammadshoaib"&gt;&lt;h3&gt;Buy Now&lt;/h3&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>sql</category>
      <category>schoolsoftware</category>
      <category>erp</category>
    </item>
    <item>
      <title>Document your applications with Docusaurus</title>
      <author>Alexandre Freire</author>
      <pubDate>Wed, 14 Jul 2021 11:25:32 +0000</pubDate>
      <link>https://dev.to/alexandrefreire/document-your-applications-with-docusaurus-33lb</link>
      <guid>https://dev.to/alexandrefreire/document-your-applications-with-docusaurus-33lb</guid>
      <description>&lt;p&gt;Docusaurus will help you ship a beautiful documentation site in no time. Building a custom tech stack is expensive. Instead, focus on your content and just write Markdown files. Use advanced features like versioning, i18n, search and theme customizations.&lt;/p&gt;

&lt;p&gt;Docusaurus is a static-site generator. It builds a single-page application with a fast client-side navigation, leveraging the full power of React to make your site interactive. It provides out-of-the-box documentation features, but can be used to create any kind of site (personal website, product, blog, marketing landing pages, etc).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docusaurus.io/docs"&gt;https://docusaurus.io/docs&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Remote onboarding with the buddy system</title>
      <author>Jelle Smeets</author>
      <pubDate>Wed, 14 Jul 2021 10:45:34 +0000</pubDate>
      <link>https://dev.to/smeetsmeister/remote-onboarding-with-the-buddy-system-2kfk</link>
      <guid>https://dev.to/smeetsmeister/remote-onboarding-with-the-buddy-system-2kfk</guid>
      <description>&lt;p&gt;You can determine how good your documentation is by how fast a new developer is up to speed with your projects. Making sure a new developer feels at home and gets brought up to speed requires time and effort. This can be especially hard in remote times. How can you make sure a new hire does not get lost in the remote onboarding? Simple! Use the buddy system.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-an-onboarding-buddy"&gt;
  &lt;/a&gt;
  What is an onboarding buddy?
&lt;/h3&gt;

&lt;p&gt;An onboarding buddy is a person that is the first point of contact for the new hire. Their primary goal is to make sure the new hire gets all the information they need.&lt;/p&gt;

&lt;p&gt;One of the most important parts of the buddy is being the first point of contact. As a new hire, you have no idea who to contact for what. If you are at the office you can take a walk through the office and meet people. This is more difficult in a remote setting. The buddies goal is to help the new hire with this struggle. Point them to the right people.&lt;/p&gt;

&lt;p&gt;The next part of the duties of a buddy extends from being the point of contact. Making introductions is the next step here. If you have not met any coworkers it can be quite challenging to schedule a meeting with them. As a buddy introduce the new hire to all coworkers they will collaborate with.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5LoYcdB5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/boddrtj6nq3l1wfg2vaj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5LoYcdB5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/boddrtj6nq3l1wfg2vaj.jpg" alt="Introductions being made"&gt;&lt;/a&gt;&lt;br&gt;
Introductions being made&lt;/p&gt;

&lt;p&gt;Every business has its own context. For an outsider, some decisions that were made will make no sense. At my current company, we have some terminology that can be quite confusing. New hires usually struggle with this if someone did not explain it properly. Luckily as a buddy, you can provide the business context on why things are the way they are.&lt;/p&gt;

&lt;p&gt;Even if you have the best documentation, new hires will still have questions. Make sure you can explain how the project works. Help them set up their local environments. And guide them towards a beginner-friendly bug ticket to pick up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  In conclusion
&lt;/h3&gt;

&lt;p&gt;Onboarding during a pandemic is more challenging than usual. An onboarding buddy is a great way to make sure a new hire gets all the help and support they need. Or as we say in the Netherlands "A good start is half the work". With an onboarding buddy, you make sure your new hire is set up for success at your company!&lt;/p&gt;

&lt;p&gt;If you are interested in more of my blog posts, check out the &lt;a href="https://blog.jellesmeets.nl/articles/the-5-stages-of-conflict-and-how-to-successfully-resolve-them/"&gt;5 stages of conflict and how to resolve them&lt;/a&gt; blog post.&lt;/p&gt;

</description>
      <category>career</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>learning</category>
    </item>
    <item>
      <title>I'm Changing How I Review Code</title>
      <author>Dan Goslen</author>
      <pubDate>Wed, 14 Jul 2021 10:43:07 +0000</pubDate>
      <link>https://dev.to/dangoslen/i-m-changing-how-i-review-code-328g</link>
      <guid>https://dev.to/dangoslen/i-m-changing-how-i-review-code-328g</guid>
      <description>&lt;p&gt;I'm a big advocate for code reviews. I've written about my experiences reviewing code, including lists of dos and don'ts, &lt;a href="https://dangoslen.me/blog/surviving-your-first-code-review/"&gt;how to survive your first code review&lt;/a&gt;, and &lt;a href="https://dangoslen.me/blog/whats-the-point-to-code-reviews-anyway/"&gt;why we should review code at all&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My views have been mainly shaped by my experience with a particular kind of code review - the pull request. Like many devs, I've grown accustomed to the pull request model to help facilitate reviews. While it isn't perfect, I've always found it to be a great tool and overall an improvement to formal code review processes or reviews over email.&lt;/p&gt;

&lt;p&gt;Recently, though, I've been seeing thoughts expressing a different sentiment. Many devs are starting to become frustrated with the &lt;a href="https://jessitron.com/2021/03/27/those-pesky-pull-request-reviews/"&gt;pull request model&lt;/a&gt;. There is a sense that pull requests actually might make it &lt;em&gt;too&lt;/em&gt; easy to comment on a line of code. This ease might be leading to the conflicts and hyper-zealous commenting that frustrates many in our industry. &lt;/p&gt;

&lt;p&gt;Another common critique is that the pull requests encourage reviewers to only look at the code. They never even pull down the changes they are reviewing! To be completely transparent, I'm guilty of that myself.&lt;/p&gt;

&lt;p&gt;After reading the article and seeing some related ideas via Twitter, I wondered: are there better ways that I could review code? What could I do differently? &lt;/p&gt;

&lt;p&gt;After asking, I've decided to start making some changes in how I review code. They've been helping me recently, so I think they could help you and your team as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#commenting-on-code-vs-collaborating-on-code"&gt;
  &lt;/a&gt;
  Commenting on Code vs. Collaborating on Code
&lt;/h2&gt;

&lt;p&gt;One of the top thoughts that made me start questioning how I review code comes from the &lt;a href="https://jessitron.com/2021/03/27/those-pesky-pull-request-reviews/"&gt;article above&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pull requests are an improvement on working alone. But not on working together. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That struck a chord. Indeed, pull requests &lt;em&gt;aren't&lt;/em&gt; the primary way to collaborate with people after all.&lt;/p&gt;

&lt;p&gt;Collaborating on code is vital to a team's ability to maintain a codebase. If a single member of a team is left to write an entire codebase without working with other team members, there is a high probability that the rest of the team won't be able to contribute to it after a while. Worse, if left alone, a single team member might even get things wrong or be unable to solve a problem. Therefore, collaborating early and often is a good idea.&lt;/p&gt;

&lt;p&gt;The next question that arises is this: how &lt;em&gt;does&lt;/em&gt; a team collaborate on code? Further, can a team collaborate too early? Too often? &lt;/p&gt;

&lt;p&gt;Many teams seem to have concluded that a pull request is a great place to have collaboration. I don't think they are wrong. First, a team member feels ready to share a version of their code with the rest of the team for direct feedback. Then, like an author writing a book, they submit it for a first review to get feedback. The rest act as editors, ready to help get the draft ready to print.&lt;/p&gt;

&lt;p&gt;There isn't anything wrong with teams seeing pull requests as a place for collaborating. The problem is when teams think collaboration is &lt;em&gt;restricted&lt;/em&gt; only to the code review process. &lt;/p&gt;

&lt;p&gt;Teams should be working together on problems, ideas, and code well before code is submitted for review. Mentors should be advising mentees, peers should be offering help to each other, and pair programming or debugging sessions should be routine. If an author were to send the first draft to their editor without disclosing what the book is about, it would make it harder for the editor. The editor now has more they need to understand to give useful feedback. As a result, the publication date is likely to get pushed later than anticipated.&lt;/p&gt;

&lt;p&gt;Genuine collaboration is more than just leaving a comment or a suggestion. It's discussing alternative solutions, prodding at requirements, and having real-time feedback loops with your team.&lt;/p&gt;

&lt;p&gt;I will be working towards making this form of collaboration more common within my team. I'm hoping to move us beyond collaboration via comments and get back to real-time collaboration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run-the-code"&gt;
  &lt;/a&gt;
  Run. The. Code.
&lt;/h2&gt;

&lt;p&gt;Commenting on and rejecting a pull request without ever running or stepping through the changes made sounds silly when said directly. But many developers - including me! - do this all the time.&lt;/p&gt;

&lt;p&gt;As engineers, we shouldn't evaluate code only by how "clean" it is or how wonderfully abstracted it is. Instead, we still need to measure code by how well it does what it is supposed to do - deliver some value when it runs. &lt;/p&gt;

&lt;p&gt;To drive this point home, when was the last time you looked at Google's source code for Google Search? If you did see it, would it change how well you think it works as a product? Probably not.&lt;/p&gt;

&lt;p&gt;I'm not trying to be hyper-reductionistic here. The quality of code does matter! It should be clean, crisp, mutable, etc. &lt;/p&gt;

&lt;p&gt;But part of what makes that code good is how well it solves a problem. Does it do what it needs to do to meet requirements? Will the end product be better? At the least, all code needs to make the end product better.&lt;/p&gt;

&lt;p&gt;What is the best way to see if the code makes the product better? You have to run it. Treat a pull request as a chance to do a mini-demo of the added or fixed functionality. Use it. Poke at it. Heck, even &lt;em&gt;test&lt;/em&gt; it yourself! &lt;/p&gt;

&lt;p&gt;I've been incredibly guilty about this. I tend to trust our automation that the code changes produced the desired behavior changes without observing the behavior myself! I want to start changing this and running code more frequently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-navigating-and-less-backseat-driving"&gt;
  &lt;/a&gt;
  More Navigating and Less Backseat Driving
&lt;/h2&gt;

&lt;p&gt;When a problem (or even a difference of opinion) is spotted in code, it can be easy for a reviewer to recommend a concrete change right then and there. For example, they might include a block of code in their comment or add a GitHub suggestion of their improved implementation. They might even include citations and links.&lt;/p&gt;

&lt;p&gt;And they do this for every issue they see.&lt;/p&gt;

&lt;p&gt;While there are times adding such comments can be appropriate, it often can feel like the reviewer is attempting to take control. They are dictating what the code &lt;em&gt;should&lt;/em&gt; be rather than providing feedback on the written code. The reviewer is giving directions as if they were a backseat driver. And no one likes backseat drivers.&lt;/p&gt;

&lt;p&gt;Great code reviewers know the difference between being a backseat driver and being a navigator. Both give directions, but one has the destination in mind while the other is trying to control the driver. A navigator knows multiple ways to reach a destination, but a backseat driver complains when the driver takes Martin Street instead of Hampton street - it could have saved one whole minute!&lt;/p&gt;

&lt;p&gt;What does a navigator look like in a code review? Instead of focusing on how to change the code, they are focused on why the code needs changing. They care more about the final outcome rather than the concrete classes that are written. The navigator is primarily focused on understanding where they need to go and to help them get there.&lt;/p&gt;

&lt;p&gt;I want to be more of a navigator. Not every single detail needs commenting, and not every difference of opinion needs to be shared. I want to review code in such a way that I'm helping rather than controlling.&lt;/p&gt;




&lt;p&gt;The goal of all of this is really more than becoming a better code reviewer. It's about becoming a better teammate. Knowledge work isn't just an individual grinding away on an intense thought or task anymore. Knowledge work - or at least meaningful knowledge work - tends to be accomplished by teams.&lt;/p&gt;

&lt;p&gt;And I want to be a great teammate. &lt;/p&gt;




&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://dangoslen.me/blog/changing-how-i-review-code/"&gt;https://dangoslen.me&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@gallarotti?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Francesco Gallarotti&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/prune?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>codereview</category>
      <category>career</category>
      <category>teamwork</category>
    </item>
    <item>
      <title>🌞 Java I/O with java.io Package</title>
      <author>Sahil Bondre</author>
      <pubDate>Wed, 14 Jul 2021 10:30:10 +0000</pubDate>
      <link>https://dev.to/godcrampy/java-i-o-with-java-io-package-lm9</link>
      <guid>https://dev.to/godcrampy/java-i-o-with-java-io-package-lm9</guid>
      <description>&lt;p&gt;In this video, we'll look at the java.io package. This package implements input and output through streams of data.&lt;/p&gt;

&lt;p&gt;I'll go over various classes in the java.io package that allows us to perform operations on data streams. I'll explain the hierarchy of these classes and show how to use them together in a program to perform IO.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/f7PrLM2d6HQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.oracle.com/javase/8/docs/api/java/io/package-summary.html"&gt;Oracle java.io Documentation&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;And that is it, folks. Let me know your takeaways from the video. If you have any other video or article ideas, comment on them too. Oh, BTW, do you want to learn Bash? Here's my crash-course post on Shell Scripting:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/godcrampy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EmTQ5oXB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--DjAO4fT3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/205514/c3ddf55e-e4f9-463e-816a-87d085f9e963.png" alt="godcrampy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/godcrampy/the-missing-shell-scripting-crash-course-37mk" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🚀 The Missing Shell Scripting Crash Course&lt;/h2&gt;
      &lt;h3&gt;Sahil Bondre ・ Apr 21 '20 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#bash&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#linux&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;🌟 I made some &lt;a href="https://github.com/godcrampy/cheat-sheets"&gt;Cheat-Sheets&lt;/a&gt;&lt;br&gt;
🚀 Stalk me on &lt;a href="https://www.youtube.com/c/SahilBondre"&gt;Youtube&lt;/a&gt; | &lt;a href="//github.com/godcrampy"&gt;Github&lt;/a&gt; | &lt;a href="//twitter.com/godcrampy"&gt;Twitter&lt;/a&gt; | &lt;a href="//sahil.surge.sh"&gt;Website&lt;/a&gt;&lt;br&gt;
😄 Have a wonderful day!&lt;/p&gt;

</description>
      <category>java</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
