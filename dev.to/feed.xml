<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 factors to consider before making your next career decision</title>
      <author>Mohit Khare</author>
      <pubDate>Sun, 19 Dec 2021 11:49:06 +0000</pubDate>
      <link>https://dev.to/mkfeuhrer/5-things-to-consider-before-making-your-next-career-decision-1ckj</link>
      <guid>https://dev.to/mkfeuhrer/5-things-to-consider-before-making-your-next-career-decision-1ckj</guid>
      <description>&lt;p&gt;With booming startups and a crazy hiring market, here are 5 things to consider before making your next career decision.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#market"&gt;
  &lt;/a&gt;
  Market üöÄ
&lt;/h2&gt;

&lt;p&gt;What are the growth opportunities in the space? Is it the next big thing or just a new wave? &lt;/p&gt;

&lt;p&gt;Find a domain you're excited about. You'll be investing in them with your time. Choose it wisely!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#learning"&gt;
  &lt;/a&gt;
  Learning üí°
&lt;/h2&gt;

&lt;p&gt;Does this help in growing your skillset? Avoid doing the same work for a longer time. Learn new stuff. Get out of your comfort zone!&lt;/p&gt;

&lt;p&gt;Learning is a lifelong process.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#impact"&gt;
  &lt;/a&gt;
  Impact ‚úÖ
&lt;/h2&gt;

&lt;p&gt;What is the kind of impact you'll be creating with this new role? Are your contributions significant and impact at scale? &lt;/p&gt;

&lt;p&gt;You should be proud and have content about what you work on.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#network"&gt;
  &lt;/a&gt;
  Network üåê
&lt;/h2&gt;

&lt;p&gt;Most people don't really think of this in their career move. Research about the current employees and teams at that company.&lt;/p&gt;

&lt;p&gt;Get in a good network. Grow it! Network effects will kick in later if not now.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#compensation"&gt;
  &lt;/a&gt;
  Compensation üí∏
&lt;/h2&gt;

&lt;p&gt;Most people focus too much on this part. It is definitely an important aspect but shouldn't be the deciding factor. &lt;/p&gt;

&lt;p&gt;Over a longer period, your growth matters. Great companies invest in your career and reward you highly over a longer period.&lt;/p&gt;




&lt;p&gt;Check out more blogs related to programming, tech and productivity at &lt;a href="https://mohitkhare.com/"&gt;mohitkhare.com&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I share regular updates on &lt;a href="https://twitter.com/mkfeuhrer"&gt;Twitter&lt;/a&gt;. Let's connect!&lt;/p&gt;

</description>
      <category>career</category>
      <category>tech</category>
      <category>developers</category>
      <category>hiring</category>
    </item>
    <item>
      <title>Five S3 functionalities that are only available through AWS CLI/SDK</title>
      <author>kasukur</author>
      <pubDate>Sun, 19 Dec 2021 10:58:52 +0000</pubDate>
      <link>https://dev.to/kasukur/five-s3-functionalities-that-are-only-available-through-aws-clisdk-4p4i</link>
      <guid>https://dev.to/kasukur/five-s3-functionalities-that-are-only-available-through-aws-clisdk-4p4i</guid>
      <description>&lt;p&gt;During my learning, I discovered five S3 functionalities that are only available through the AWS CLI:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="#"&gt;1. Configuring S3 MFA delete&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When working with S3 Versioning in Amazon S3 buckets, you can optionally add another layer of security by configuring a bucket to enable MFA (multi-factor authentication) delete. When you do this, the bucket owner must include two forms of authentication in any request to delete a version or change the versioning state of the bucket.&lt;/p&gt;

&lt;p&gt;MFA delete requires additional authentication for either of the following operations:&lt;/p&gt;

&lt;p&gt;üëâ Changing the versioning state of your bucket&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--79v0kq1t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mk7ronc0evotcbo7hlgu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--79v0kq1t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mk7ronc0evotcbo7hlgu.jpg" alt="Suspend bucket versioning" width="880" height="625"&gt;&lt;/a&gt;&lt;br&gt;
üëâ Permanently deleting an object version&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GJwKJpfM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufwvimix8gscqyxkyz6s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GJwKJpfM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufwvimix8gscqyxkyz6s.jpg" alt="Delete a versioned object" width="880" height="217"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MFA delete requires two forms of authentication together:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Your security credentials&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The concatenation of a valid serial number, a space, and the six-digit code displayed on an approved authentication device&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to enable MFA, we need to follow the steps below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Configure AWS Client&lt;/strong&gt;&lt;br&gt;
Create an AWS access key and then execute &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html"&gt;aws configure&lt;/a&gt; to set up your credentials. &lt;br&gt;
üìì This is not best practice for security purposes but we will use this for the current exercise only.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Command to enable MFA&lt;/strong&gt;&lt;br&gt;
üìì 213849 is the authentication token&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[ec2user@some-ip ~]$ aws s3api put-bucket-versioning --profile default --bucket testbucketmfa --versioning-configuration Status=Enabled,MFADelete=Enabled --mfa "arn:aws:iam::XXXXXXXXXXXX:mfa/account-mfa-device 213849"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Command to disable MFA&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[ec2user@some-ip ~]$ aws s3api put-bucket-versioning --profile default --bucket testbucketmfa --versioning-configuration Status=Enabled,MFADelete=Disabled --mfa "arn:aws:iam::XXXXXXXXXXXX:mfa/account-mfa-device 987543"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;a href="#"&gt;2. S3 Pre-signed URLs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All objects in S3 are private by default. Only the object owner has permission to access these objects. However, the object owner can optionally share objects with others by creating a presigned URL, using their own security credentials, to grant time-limited permission to download the objects.&lt;/p&gt;

&lt;p&gt;The commands below are using AWS CLI. We can also generate pre-signed URLs using AWS SDK.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws s3 presign s3://testbucket202119/smiley.jpg --region ap-southeast-2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will generate a URL, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://testbucket202119.s3.amazonaws.com/smiley.jpg?AWSAccessKeyId=AKIAYYDMCK6YRXWASPX2&amp;amp;Expires=1639901714&amp;amp;Signature=VGcqq8ilnCtkd8OTFJP4aMidqI4%3D
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;a href="#"&gt;3. Upload files to S3 Glacier Vault&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;S3 Glacier Vault is a container for storing archives.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Command to create a vault&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws glacier create-vault --vault-name testvault --account-id [AccountId]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Command to upload an archive to a vault&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws glacier upload-archive --account-id [AccountId] --vault-name testvault --body HappyFace.jpg
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;a href="#"&gt;4. S3 Multi Part Upload&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
Multipart upload allows you to upload a single object as a set of parts. Each part is a contiguous portion of the object's data. You can upload these parts in any order. &lt;br&gt;
In general, when your object size reaches 100 MB, you should consider using multipart uploads instead of uploading the object in a single operation.&lt;/p&gt;

&lt;p&gt;We can either use s3 or s3 api. You can find more information at &lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/s3-multipart-upload-cli/"&gt;How do I use the AWS CLI to perform a multipart upload of a file to Amazon S3?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="#"&gt;5. S3 Access point through VPC&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon S3 Access Points, a feature of S3, simplify data access for any AWS service or customer application that stores data in S3. With S3 Access Points, customers can create unique access control policies for each access point to easily control access to shared datasets.&lt;/p&gt;

&lt;p&gt;The S3 console doesn't support accessing bucket resources using a virtual private cloud (VPC) access point. To access bucket resources from a VPC access point, use the AWS CLI, AWS SDK, or Amazon S3 REST API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x7fJdHlK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lsi6en4sq3po0tlgmq9l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x7fJdHlK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lsi6en4sq3po0tlgmq9l.png" alt="S3 Access point through VPC" width="880" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acknowledgements&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.udemy.com/course/ultimate-aws-certified-sysops-administrator-associate/"&gt;Stephane Maarek's- Ultimate AWS Certified SysOps Administrator Associate 2021 on Udemy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=MnzuXBVQgG4"&gt;AWS Tutorial - S3 Glacier Series - Part 2 of 8 - Create Vault using CLI &amp;amp; Console by &lt;br&gt;
NamrataHShah&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/index.html"&gt;AWS Documentation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please let me know your thoughts in the comments.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
    </item>
    <item>
      <title>The Complete Collection of Coursera Data Science</title>
      <author>images.cv</author>
      <pubDate>Sun, 19 Dec 2021 10:47:38 +0000</pubDate>
      <link>https://dev.to/imagescv/the-complete-collection-of-coursera-data-science-4l7k</link>
      <guid>https://dev.to/imagescv/the-complete-collection-of-coursera-data-science-4l7k</guid>
      <description>&lt;p&gt;Becoming a data scientist üë©‚Äçüíª is one of the most in-demand career paths today. And with good reason, too! Data scientists are some of the highest-paid professionals in the tech industry. But how can you get started? &lt;a href="https://www.coursera.org/"&gt;Coursera&lt;/a&gt; has launched their new specialization program for aspiring data scientists called The Complete Collection of Coursera Data Science courses to help answer that question. This blog post will outline some key courses and what they offer students who want to become data scientists.&lt;/p&gt;

&lt;p&gt;In addition, the programs also includes a capstone project that allows students to apply all they have learned in the program to a real-world problem. Students will also have access to expert mentors who can help guide them through the coursework as well as career advice. And if you are not sure if data science is the right career path for you, don‚Äôt worry! The program offers a free trial so that you can explore all of the courses before making a decision.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4LDH3Bhc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hsqdsqpk6bnlv5jsoz0m.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4LDH3Bhc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hsqdsqpk6bnlv5jsoz0m.jpeg" alt="Image description" width="880" height="378"&gt;&lt;/a&gt;&lt;br&gt;
üî•üî•üî•&lt;strong&gt;So what are you waiting for?&lt;/strong&gt;&lt;br&gt;
Get started on your journey to becoming a data scientist today with The Complete Collection of Coursera Data Science courses!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-courses-in-the-complete-collection-of-coursera-data-science-are"&gt;
  &lt;/a&gt;
  The courses in The Complete Collection of Coursera Data Science are:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.coursera.org/specializations/introduction-data-science?"&gt;Introduction to Data Science Specialization&lt;/a&gt; &lt;strong&gt;by IBM&lt;/strong&gt;: In this course, students will learn about the basics of data science, including working with data sets in Python, performing statistical analysis, and using machine learning algorithms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.coursera.org/projects/wrangling-data-for-data-analysts-with-python?"&gt;Data Wrangling with Python&lt;/a&gt; &lt;strong&gt;by Omnya Khaled&lt;/strong&gt;: This course teaches students how to take raw data and clean it up so that it is ready for further analysis. Students will use the Python programming language to do this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.coursera.org/specializations/compstats"&gt;Introduction to Computational Statistics for Data Scientists Specialization&lt;/a&gt; &lt;strong&gt;by Dr. Srijith Rajamohan&lt;/strong&gt;: This course covers the basics of statistical inference, which is a key skill for data scientists. Students will learn about concepts such as hypothesis testing and confidence intervals.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.coursera.org/learn/microsoft-azure-machine-learning-for-data-scientist?"&gt;Microsoft Azure Machine Learning for Data Scientists&lt;/a&gt; &lt;strong&gt;by Microsoft&lt;/strong&gt;: In this course, students will learn how to use machine learning algorithms to make predictions from data sets. They will also learn about important concepts such as bias and variance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.coursera.org/learn/practical-time-series-analysis?="&gt;Practical Time Series Analysis&lt;/a&gt; &lt;strong&gt;by Tural Sadigov&lt;/strong&gt;: Time series analysis the process of analyzing data that changes over time. In this course, students will learn how to use time series analysis algorithms to make predictions from data sets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.coursera.org/specializations/data-mining"&gt;Data Mining Specialization&lt;/a&gt; &lt;strong&gt;by John C. Hart&lt;/strong&gt;: This course teaches students about the text mining process and how it can be used in real-world applications such as marketing campaigns. Students will also explore natural languages processing concepts such as sentiment analysis and topic modeling.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.coursera.org/specializations/data-science-foundations-r"&gt;Data Science: Foundations using R Specialization&lt;/a&gt; &lt;strong&gt;by Jeff Leek, PhD&lt;/strong&gt;: In this course, students will practice using predictive modeling tools available in the programming language R to analyze data sets and make predictions based on them. They‚Äôll also get a chance to work with advanced topics like machine learning libraries that support random forests models and boosting methods.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.coursera.org/learn/cluster-analysis"&gt;Cluster Analysis in Data Mining&lt;/a&gt; &lt;strong&gt;by Jiawei Han&lt;/strong&gt;: Cluster analysis is the process of grouping data into clusters so that it can be more easily analyzed. This course teaches students how to use cluster analysis algorithms to group data sets. They will also learn about unsupervised machine learning, which is a type of machine learning algorithm that does not require any training data.&lt;/p&gt;




&lt;p&gt;So there you have it! The Complete Collection of Coursera Data Science courses. These courses will teach you everything you need to know to become a data scientist. And if you want to explore even more courses on data science, don‚Äôt forget to check out our other collections: Intro To Data Science and Machine Learning For Data Scientists.&lt;/p&gt;

&lt;p&gt;Get started on your journey today with The Complete Collection of Coursera Data Science courses!&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Log4j 2: DoS „Å´Èñ¢„Çè„ÇãÊñ∞„Åü„Å™ËÑÜÂº±ÊÄß (2.16.0 „Å®„Åù„Çå‰ª•Ââç„ÅÆ„Éê„Éº„Ç∏„Éß„É≥)</title>
      <author>Heddi Nabbisen</author>
      <pubDate>Sun, 19 Dec 2021 10:45:58 +0000</pubDate>
      <link>https://dev.to/nabbisen/log4j-2-dos-niguan-waruxin-tanacui-ruo-xing-2160-tosoreyi-qian-nobaziyon-4067</link>
      <guid>https://dev.to/nabbisen/log4j-2-dos-niguan-waruxin-tanacui-ruo-xing-2160-tosoreyi-qian-nobaziyon-4067</guid>
      <description>&lt;p&gt;&lt;a href="https://logging.apache.org/log4j/2.x/"&gt;Log4j&lt;/a&gt; 2.17.0 „Åå„Çª„Ç≠„É•„É™„ÉÜ„Ç£Âêë„ÅëÊõ¥Êñ∞„ÅÆ„Åü„ÇÅ„Å´„É™„É™„Éº„Çπ„Åï„Çå„Åæ„Åó„Åü„ÄÇ2.16.0 „Å®„Åù„Çå‰ª•Ââç„ÅÆ 2 Á≥ª„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„Å´Â≠òÂú®„Åô„Çã DoS ËÑÜÂº±ÊÄß„Çí‰øÆÊ≠£„Åó„Åæ„Åô„ÄÇ&lt;/p&gt;

&lt;p&gt;„Åì„ÅÆÊñ∞„Åü„Å™ DoS (denial-of-service) ËÑÜÂº±ÊÄß„Å´„Å§„ÅÑ„Å¶„ÄÅÊ¨°„ÅÆÂ†¥Âêà„ÅØÂÆâÂÖ®„Åß„Åô: „É≠„Ç∞Ë®≠ÂÆö„Åß„ÄÅ&lt;code&gt;$${ctx:loginId}&lt;/code&gt; „ÅÆ„Çà„ÅÜ„Å™ Context Lookup Ë®≠ÂÆö„Åå‰Ωø„Çè„Çå„Å¶„ÅÑ„Å™„ÅÑ„ÄÅ„Éá„Éï„Ç©„É´„Éà„ÅÆ Pattern Layout „ÅÆÂ†¥Âêà„ÄÇ&lt;br&gt;
„Åù„ÅÜ„Åß„Å™„ÅÑÂ†¥Âêà„ÅØ„ÄÅCVSS „Çπ„Ç≥„Ç¢„Åå 7.5 „Åß„ÅÇ„Çä„ÄÅÊ∑±ÂàªÂ∫¶„ÅØÈ´ò„ÅÑ„Åß„Åô„ÄÇ&lt;/p&gt;

&lt;p&gt;Log4j 2 „Åß„ÄÅ&lt;code&gt;$${ctx:loginId}&lt;/code&gt; „ÅÆ„Çà„ÅÜ„Å™ Context Lookup Ë®≠ÂÆö„ÇíÊåÅ„Å§„ÄÅ„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åï„Çå„Å¶„ÅÑ„Çã Pattern Layout „ÅÆ„ÇÇ„ÅÆ„Å´Èñ¢„Åó„Å¶„ÅØ„ÄÅ„Éê„Éº„Ç∏„Éß„É≥„Çí 2.17.0 „Å´Êõ¥Êñ∞„Åô„Çã„Åì„Å®„ÅåÊé®Â•®„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ&lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45105"&gt;CVE-2021-45105&lt;/a&gt; „Å®Âëº„Å∞„Çå„ÇãÊú¨ËÑÜÂº±ÊÄß„Çí‰øÆÊ≠£„Åô„Çã„Åü„ÇÅ„Åß„Åô„ÄÇ„Çµ„Éº„Éì„Çπ„ÉÄ„Ç¶„É≥„ÇíÂºï„ÅçËµ∑„Åì„Åï„Çå„ÇãÂç±Èô∫„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ&lt;/p&gt;

&lt;p&gt;„Åù„Çå„ÅåÈõ£„Åó„ÅÑÂ†¥Âêà„ÅØ„ÄÅÊ¨°„ÅÆÊñπÊ≥ï„ÅßÁ∑©Âíå„Åô„Çã„Åì„Å®„ÅåÂèØËÉΩ„Åß„Åô„ÄÇLog4j 2 „ÅÆÈùû„Éá„Éï„Ç©„É´„Éà„ÅÆ Context Lookup Ë®≠ÂÆö„Çí Thread Context Map „Éë„Çø„Éº„É≥ (%X, %mdc, or %MDC) „Å´ÁΩÆ„ÅçÊèõ„Åà„Çã„ÄÅ„ÅÇ„Çã„ÅÑ„ÅØ„ÄÅË®≠ÂÆö„ÅÆ‰∏≠„Åß„Åù„Çå„Çâ„ÅÆË®≠ÂÆö„Å∏„ÅÆÂèÇÁÖß„ÇíÂâäÈô§„Åó„Åæ„Åô„ÄÇ&lt;br&gt;
&lt;a href="https://www.apache.org/"&gt;The Apache Software Foundation&lt;/a&gt; „Åã„ÇâÊÉÖÂ†±„ÅåÊèê‰æõ„Åï„Çå„Å¶„ÅÑ„Åæ„Åô:&lt;br&gt;
&lt;a href="https://logging.apache.org/log4j/2.x/security.html"&gt;https://logging.apache.org/log4j/2.x/security.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>log4j</category>
      <category>vulnerability</category>
      <category>security</category>
      <category>dos</category>
    </item>
    <item>
      <title>How to build AdonisJS API to store your Raspberry Pi Temperature</title>
      <author>Bobby Iliev</author>
      <pubDate>Sun, 19 Dec 2021 10:32:01 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/how-to-build-adonisjs-api-to-store-your-raspberry-pi-temperature-5c6a</link>
      <guid>https://dev.to/bobbyiliev/how-to-build-adonisjs-api-to-store-your-raspberry-pi-temperature-5c6a</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;I have a few Raspberry Pi devices at home and I wanted to be able to collect the data from their temperature sensors on a regular interval and store that data in a Postgres database. Later on, I could use that data for some analytics together with &lt;a href="https://materialize.com"&gt;Materialize&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this tutorial we will use AdonisJS to build a simple API that will collect the data from the sensors and store it in a Postgres database as shown in the following image:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jr2BWKyD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21223421/146649083-8cb5dca2-ccfb-439f-81cd-120b2d455294.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jr2BWKyD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21223421/146649083-8cb5dca2-ccfb-439f-81cd-120b2d455294.png" alt="AdonisJS Simple API" width="880" height="176"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This can be used to collect the temperature data of a large number of Raspberry Pi devices.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;Before you get started, you would need to make sure that you have the following installed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/en/download/package-manager/"&gt;Install Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.postgresql.org/download/"&gt;Install Postgres&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#what-is-adonisjs"&gt;
  &lt;/a&gt;
  What is AdonisJS
&lt;/h1&gt;

&lt;p&gt;AdonisJS is a Node.js framework that is used to create RESTful APIs along with full-stack web applications. It is a great tool to build web applications that can be deployed to any platform. It feels a lot like Laravel, but it is based on Node.js rather than PHP.&lt;/p&gt;

&lt;p&gt;If you are not familiar with AdonisJS, no worries, you would still be able to follow along! However, if you want to learn more about AdonisJS make sure to check out this tutorial here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdojo.com/tnylea/adonisjs-for-beginners"&gt;AdonisJS for Beginners&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-install-adonisjs"&gt;
  &lt;/a&gt;
  How to install AdonisJS
&lt;/h1&gt;

&lt;p&gt;To install AdonisJS you would need to run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init adonis-ts-app@latest raspberry-pi-adonisjs-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you run that, you will be asked to select a project structure. You will be able to choose between an API, Web App, and a minimal possible AdonisJS app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CUSTOMIZE PROJECT
‚ùØ Select the project structure ‚Ä¶  Press &amp;lt;ENTER&amp;gt; to select
‚ùØ api   (Tailored for creating a REST API server)
  web   (Traditional web application with server-rendered templates)
  slim  (A smallest possible AdonisJS application)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For this tutorial let's go with the API option! Using your arrow keys select web and hit enter.&lt;/p&gt;

&lt;p&gt;After that you will be asked to choose a name for the project, I will leave this as &lt;code&gt;raspberry-pi-adonisjs-app&lt;/code&gt; but feel free to choose a different name.&lt;/p&gt;

&lt;p&gt;I will then press enter and say yes to the rest of the settings:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚ùØ Enter the project name ¬∑ raspberry-pi-adonisjs-app
‚ùØ Setup eslint? (y/N) ¬∑ y
‚ùØ Configure webpack encore for compiling front-end assets? (y/N) ‚Ä∫ y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once that is done, you can switch to the new project directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd raspberry-pi-adonisjs-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And once in there, start the webserver:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node ace serve --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;ace&lt;/code&gt; command is very similar to the &lt;code&gt;artisan&lt;/code&gt; command in Laravel. It is a command-line interface for running AdonisJS commands. The &lt;code&gt;node ace serve&lt;/code&gt; command will start the webserver and watch for changes to your code.&lt;/p&gt;

&lt;p&gt;To check all of the ace commands, you can run: &lt;code&gt;node ace&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-lucid"&gt;
  &lt;/a&gt;
  Installing Lucid
&lt;/h2&gt;

&lt;p&gt;Similar to Laravel Eloquent, AdonisJS provides an ORM. The ORL is called Lucid and we will be using it today.&lt;/p&gt;

&lt;p&gt;Lucid comes with an Active Record ORM, Query Builder, Migrations, Seeds, and Factories.&lt;/p&gt;

&lt;p&gt;To install Lucid, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i @adonisjs/lucid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once done, you would need to do a quick configuration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuring-lucid"&gt;
  &lt;/a&gt;
  Configuring Lucid
&lt;/h2&gt;

&lt;p&gt;In order to configure Lucid, you need to run the following ace command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node ace configure @adonisjs/lucid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be asked to select the database driver that you want to use. Here, make sure to select PostgreSQL!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c9fs4umL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21223421/142431728-ac88085b-34cb-4ebb-83c7-b0cae9fb455d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c9fs4umL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21223421/142431728-ac88085b-34cb-4ebb-83c7-b0cae9fb455d.png" alt="AdonisJS lucid configuration" width="880" height="174"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, you will be asked to select where you want to display the configuration instructions. I chose &lt;code&gt;In the terminal&lt;/code&gt;, which prints out the necessary environment variables that you have to add to your &lt;code&gt;.env&lt;/code&gt;file.&lt;/p&gt;

&lt;p&gt;Make sure to update the &lt;code&gt;DB_DATABASE&lt;/code&gt; and &lt;code&gt;DB_USERNAME&lt;/code&gt; and &lt;code&gt;DB_PASSWORD&lt;/code&gt; variables in your &lt;code&gt;.env&lt;/code&gt; file accordingly so that you can connect to your database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-a-mode-and-a-migration"&gt;
  &lt;/a&gt;
  Add a mode and a migration
&lt;/h2&gt;

&lt;p&gt;To add a model and a migration, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node ace make:model Sensor -m
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a new model and a migration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CREATE: database/migrations/1639847090390_sensors.ts
CREATE: app/Models/Sensor.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the migration file and update the file so that it looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import BaseSchema from '@ioc:Adonis/Lucid/Schema'

export default class Sensors extends BaseSchema {
  protected tableName = 'sensors'

  public async up () {
    this.schema.createTable(this.tableName, (table) =&amp;gt; {
      table.increments('id')
      table.string('device')
      table.string('temperature')
      table.string('timestamp')
      /**
       * Uses timestamptz for PostgreSQL and DATETIME2 for MSSQL
       */
      table.timestamp('created_at', { useTz: true })
      table.timestamp('updated_at', { useTz: true })
    })
  }

  public async down () {
    this.schema.dropTable(this.tableName)
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We basically added 3 extra columns that will store the name of the device, the temperature, and the timestamp when the data was recorded.&lt;/p&gt;

&lt;p&gt;To run the migration, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node ace migration:run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create the sensors table in your database with the columns we specified.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-a-controller"&gt;
  &lt;/a&gt;
  Creating a Controller
&lt;/h1&gt;

&lt;p&gt;Next, we will create a controller. This is where we will add the functionality that will allow us to store the Raspberry Pi data in our Postgres database.&lt;/p&gt;

&lt;p&gt;Again we will be using the &lt;code&gt;ace&lt;/code&gt; command to create a new controller:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node ace make:controller SensorsController
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a controller file at:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app/Controllers/Http/SensorsController.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, let's create the routes that we would need!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#adding-our-methods"&gt;
  &lt;/a&gt;
  Adding our methods
&lt;/h1&gt;

&lt;p&gt;As we are going to use this API to store the data from our Raspberry Pi devices, we will add just a single method to our controller.&lt;/p&gt;

&lt;p&gt;With your favorite text editor, open the &lt;code&gt;SensorsController.ts&lt;/code&gt; file and add the following method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Route from '@ioc:Adonis/Core/Route'
import Database from '@ioc:Adonis/Lucid/Database'

// import { HttpContextContract } from '@ioc:Adonis/Core/HttpContext'

export default class SensorsController {
    public async store ({ request }) {

        let name = 'raspberry-1';
        if (request.qs().name != null) {
            name = request.qs().name;
        }

        let timestamp = '2021-11-21 19:52:49';
        if (request.qs().timestamp != null) {
            timestamp = request.qs().timestamp;
        }

        let temperature = '41.1';
        if (request.qs().temperature != null) {
            temperature = request.qs().temperature;
        }

        console.log(name, timestamp, temperature)

        await Database
        .insertQuery()
        .table('sensors')
        .insert({ device: name, timestamp: timestamp, temperature: temperature})

        return {
            message: 'Successfully added sensor data'
        }
    }
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are a few things to note here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;import&lt;/code&gt; statement is importing the &lt;code&gt;Route&lt;/code&gt; and &lt;code&gt;Database&lt;/code&gt; from the &lt;code&gt;@ioc:Adonis/Core/Route&lt;/code&gt; and &lt;code&gt;@ioc:Adonis/Lucid/Database&lt;/code&gt; packages.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;await&lt;/code&gt; keyword is used to wait for the database query to finish.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;request.qs()&lt;/code&gt; method is used to get the query string parameters from the request. That way we will be able to get the name, timestamp, and temperature sent by the Raspberry Pi devices.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#creating-the-adonisjs-routes"&gt;
  &lt;/a&gt;
  Creating the AdonisJS routes
&lt;/h1&gt;

&lt;p&gt;Your routes file is stored at &lt;code&gt;start/routes.ts&lt;/code&gt;. In there we can specify our application URLs and map them to different controllers and methods!&lt;/p&gt;

&lt;p&gt;We do not yet have the methods ready, but we know that we would need the following routes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GET /temperature&lt;/code&gt;: This route will store the data sent by the Raspberry Pi devices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Open your routes file at &lt;code&gt;start/routes.ts&lt;/code&gt; and update it so that it has the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Route from '@ioc:Adonis/Core/Route'

Route.get('/temperature', 'SensorsController.store')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#adding-authentication"&gt;
  &lt;/a&gt;
  Adding authentication
&lt;/h1&gt;

&lt;p&gt;For the sake of this tutorial, I would not be implementing a full-blown authentication as the API would be running locally on my network and would not have any sensitive data.&lt;/p&gt;

&lt;p&gt;However if you want to take this one step further, you can follow the steps from the documentation here on how to implement this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.adonisjs.com/guides/auth/api-tokens-guard#tokens-storage"&gt;AdonisJS Authentication Docs&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#adding-cron-jobs-to-the-raspberry-pi-devices"&gt;
  &lt;/a&gt;
  Adding cron jobs to the Raspberry Pi devices
&lt;/h1&gt;

&lt;p&gt;Now that we have our controller and routes, we can add a cron job to the Raspberry Pi devices which will send the data to the API and store it in our database.&lt;/p&gt;

&lt;p&gt;Let's create a small bash script which we will run every minute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/bash

# AdonisJS API URL - Make sure to change this to your API URL
api_url="http://localhost:3333/temperature"

# Specify the name of the Raspberry Pi device:
name="raspberry-1"

if [[ -z ${NAME} ]] ; then
    name="raspberry"
fi

# Get the temperature from the Raspberry Pi device:
function temperature(){
    temperature=$(/opt/vc/bin/vcgencmd measure_temp | tr -d temp=\'C)
    echo ${temperature}
}

# Get the current time
function timestamp(){
    time=$(date +%s)
    echo ${time}
}

echo ${name},$(timestamp),$(temperature)

curl -X GET "${api_url}?name=${name}-${i}&amp;amp;timestamp=$(timestamp)&amp;amp;temperature=$(temperature)"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure to change the URL to your AdonisJS API. If you are running this on the same Raspbery Pi, you can leave it as &lt;code&gt;localhost&lt;/code&gt;, if not you could use the IP of the device that you are running the API on.&lt;/p&gt;

&lt;p&gt;Save the script as &lt;code&gt;temperature.sh&lt;/code&gt; and make it executable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chmod +x temperature.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then edit your &lt;code&gt;crontab&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo crontab -e
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the following line to your &lt;code&gt;crontab&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* * * * * /home/pi/temperature.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will run the script every minute and send the data to the API.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;You can find the code for this tutorial here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/materialize-tutorials/tree/main/mz-raspberry-pi-temperature/temperature_api_mock"&gt;AdonisJS API - Raspberry Pi Temperature&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the second part of this tutorial, we will use Materialize to run streaming SQL queries on the data collected by the API. We are going to build the following setup:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pc5ybAMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21223421/143457800-6ad3b46a-8520-41ce-baf0-f6a1ea6c20e7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pc5ybAMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21223421/143457800-6ad3b46a-8520-41ce-baf0-f6a1ea6c20e7.png" alt="Materialize - Raspberry Pi Temperature Sensors Demo" width="880" height="449"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to learn more about AdonisJS I could suggest checking out this tutorial here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/bobbyiliev/building-a-real-time-web-application-with-materialize-and-adonisjs"&gt;Building a real-time web application with Materialize and AdonisJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;–¢–æ learn more about Materialize make sure to check out this tutorial here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdojo.com/bobbyiliev/learn-materialize-by-running-streaming-sql-on-your-nginx-logs"&gt;Learn Materialize by running streaming SQL on your nginx logs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope that this helps!&lt;/p&gt;

</description>
      <category>node</category>
      <category>database</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Log4j 2: New vulnerability on DoS in 2.16.0 and below</title>
      <author>Heddi Nabbisen</author>
      <pubDate>Sun, 19 Dec 2021 10:22:23 +0000</pubDate>
      <link>https://dev.to/nabbisen/log4j-2-new-vulnerability-on-dos-in-2160-and-below-2cpm</link>
      <guid>https://dev.to/nabbisen/log4j-2-new-vulnerability-on-dos-in-2160-and-below-2cpm</guid>
      <description>&lt;p&gt;&lt;a href="https://logging.apache.org/log4j/2.x/"&gt;Log4j&lt;/a&gt; 2.17.0 was released due to security reason. It fixes DoS vulnerability in 2.16.0 and below on v2.&lt;/p&gt;

&lt;p&gt;As to the new vulnerability on DoS (denial-of-service), it's safe with a default Pattern Layout where a Context Lookup such as &lt;code&gt;$${ctx:loginId}&lt;/code&gt; are NOT used in logging configuration.&lt;br&gt;
Otherwise, the CVSS score is 7.5 and the severity is high.&lt;/p&gt;

&lt;p&gt;On Log4j 2 with custom Pattern Layout with Context Lookups such as &lt;code&gt;$${ctx:loginId}&lt;/code&gt;, updating its version to 2.17.0 is recommended to fix the vulnerability called &lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45105"&gt;CVE-2021-45105&lt;/a&gt;. It can cause service down.&lt;/p&gt;

&lt;p&gt;Alternatively, it can be mitigated to replace Log4j 2 non-default Context Lookups with Thread Context Map patterns (%X, %mdc, or %MDC) or to reduce references to them in configuration,&lt;br&gt;
thanks to &lt;a href="https://www.apache.org/"&gt;The Apache Software Foundation&lt;/a&gt; effort and information:&lt;br&gt;
&lt;a href="https://logging.apache.org/log4j/2.x/security.html"&gt;https://logging.apache.org/log4j/2.x/security.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>log4j</category>
      <category>vulnerability</category>
      <category>security</category>
      <category>dos</category>
    </item>
    <item>
      <title>Random Background On clicking button in JS || 50 JS Project Challenge #1</title>
      <author>VECTOR3Studio</author>
      <pubDate>Sun, 19 Dec 2021 10:01:49 +0000</pubDate>
      <link>https://dev.to/vector3studio/random-background-on-clicking-button-in-js-50-js-project-challenge-1-1o7m</link>
      <guid>https://dev.to/vector3studio/random-background-on-clicking-button-in-js-50-js-project-challenge-1-1o7m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello"&gt;
  &lt;/a&gt;
  Hello üëã
&lt;/h2&gt;

&lt;p&gt;In this post I will show you how to make Random Background, when you click a button in JavaScript.&lt;/p&gt;

&lt;p&gt;This is Part 1 of the 50 JS Project Challenge.&lt;/p&gt;

&lt;p&gt;So let's get into it.&lt;/p&gt;

&lt;p&gt;First, here is the video tutorial:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0qmonH9goN8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-lets-start-coding"&gt;
  &lt;/a&gt;
  So let's start coding.
&lt;/h3&gt;

&lt;p&gt;First, we need to create 3 files in our folder.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;index.html&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;style.css&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;home.js&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once we have those files created, we can start coding.&lt;/p&gt;

&lt;p&gt;Here is the code for index.html:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;button"&amp;gt;Click Me&amp;lt;/button&amp;gt;
    &amp;lt;script src="home.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are just creating a basic HTML structure and a Button. We need to link our CSS and JS files too.&lt;/p&gt;

&lt;p&gt;Now, let's do style.css.&lt;br&gt;
Here is the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body{
    background-color: red;
    display: flex;
    justify-content: center;
    align-items: center;
}
button{
    padding: 14px 24px;
    font-size: 24px;
    border: none !important;
    outline: none !important;
    border-radius: 20px;
    background: white;

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In CSS, we are just styling our body and a button.&lt;/p&gt;

&lt;p&gt;And finally, let's make our JavaScript.&lt;br&gt;
Add this code to your home.js:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function changeBg(){
    document.body.style.backgroundColor = 'rgb(' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ')';
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What this code does is make a function, and in this function is setting and body Background Color to RGB(Random, Random, Random). And that is how we can achieve a Random Color Generation.&lt;/p&gt;

&lt;p&gt;We ain't done yet, we need to add this function to our button, so when we click, a background color will be randomly chosen.&lt;br&gt;
You can achieve this simply by adding a onclick fucntion to the button in our index.html.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;button onclick="changeBg()"&amp;gt;Click Me&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pkZp71LV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opf3pfwfli90huoyln4f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pkZp71LV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opf3pfwfli90huoyln4f.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And now we are done! You should see a color change every time you click a button. Great Work.&lt;/p&gt;

&lt;p&gt;Thanks for reading my post, and I hope I will see you next Time.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Convert Array to Object Keys</title>
      <author>Calvin T</author>
      <pubDate>Sun, 19 Dec 2021 09:43:47 +0000</pubDate>
      <link>https://dev.to/calvin087/convert-array-to-object-keys-58p3</link>
      <guid>https://dev.to/calvin087/convert-array-to-object-keys-58p3</guid>
      <description>&lt;p&gt;&lt;a href="https://www.calvintorra.com/blog/convert-array-to-object-keys"&gt;Original Post and more here&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;I wanted to take an array of elements and turn them into an object. The elements in the array would need to be the keys of the object with some default empty strings as the values to be changed later.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;age&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;city&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;town&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;country&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;town&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// end result I was looking for&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the end I discovered that we could use Array.reduce (which I used to avoid before learning how to use it).&lt;/p&gt;

&lt;p&gt;We can create an empty object, pass over the array items and use them to dynamically create object keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userChoices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;age&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;city&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;town&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;country&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userChoices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;

&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;calvin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// { name: 'calvin', age: '', city: '', town: '', country: '' }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The empty object is used as the accumulator which is passed back into the function and filled with the next item in the array.&lt;/p&gt;

&lt;p&gt;acc is the thing we‚Äôre trying to fill up and return while curr is the current item we‚Äôre working with in the data that we‚Äôre iterating over.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Deep Dive to Train, Deploy and Evaluate a Model in Amazon SageMaker</title>
      <author>GargeeBhatnagar</author>
      <pubDate>Sun, 19 Dec 2021 09:27:15 +0000</pubDate>
      <link>https://dev.to/aws-builders/deep-dive-to-train-deploy-and-evaluate-a-model-in-amazon-sagemaker-35i0</link>
      <guid>https://dev.to/aws-builders/deep-dive-to-train-deploy-and-evaluate-a-model-in-amazon-sagemaker-35i0</guid>
      <description>&lt;p&gt;‚ÄúProblems faced to train a model as it is complex and time consuming‚Äù. Amazon SageMaker makes a task easy and quick to train, deploy and evaluate a model. It is also secured and cost optimized.&lt;/p&gt;

&lt;p&gt;Amazon SageMaker is a managed service in the Amazon Web Services (&lt;a href="https://searchaws.techtarget.com/definition/Amazon-Web-Services"&gt;AWS&lt;/a&gt;) public cloud. It provides the tools to build, train and deploy machine learning (&lt;a href="https://www.techtarget.com/searchenterpriseai/definition/machine-learning-ML"&gt;ML&lt;/a&gt;) models for predictive analytics applications. The platform automates the tedious work of building a production-ready artificial intelligence (AI) pipeline. Machine learning has a range of uses and benefits. Among them are advanced analytics for customer data and back-end security threat detection. Deploying ML models is challenging, even for experienced application developers. Amazon SageMaker aims to simplify the process. It uses common algorithms and other tools to accelerate the machine learning process.&lt;/p&gt;

&lt;p&gt;In this post, you will get to know how to train, deploy and evaluate a model in Amazon Sagemaker. Here I have created a sagemaker notebook instance and created a jupyter notebook where I have run python to train, deploy and evaluate a model with Amazon S3. Also checked the logs and metrics in cloudwatch.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#architecture-overview"&gt;
  &lt;/a&gt;
  Architecture Overview
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--keRgJsli--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jifbx875as0po7ybbryo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--keRgJsli--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jifbx875as0po7ybbryo.png" alt="Image description" width="880" height="400"&gt;&lt;/a&gt;&lt;br&gt;
The architecture diagram shows the overall deployment architecture with data flow, Amazon SageMaker, Amazon S3.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#solution-overview"&gt;
  &lt;/a&gt;
  Solution overview
&lt;/h1&gt;

&lt;p&gt;The blog post consists of the following phases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a Amazon SageMaker Notebook Instance&lt;/li&gt;
&lt;li&gt;Create a Jupyter Notebook and also Download, Explore and Transform a Dataset&lt;/li&gt;
&lt;li&gt;Check of IAM role created and Train a Model &lt;/li&gt;
&lt;li&gt;Deploy the Model to SageMaker Hosting Services as Amazon EC2 and Evaluate the Model&lt;/li&gt;
&lt;li&gt;Check of Log Streams in Cloudwatch Log Groups for SageMaker and other parameters in Metrics of Cloudwatch&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#phase-1-create-a-amazon-sagemaker-notebook-instance"&gt;
  &lt;/a&gt;
  Phase 1: Create a Amazon SageMaker Notebook Instance
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Open the Amazon SageMaker console and then click on create a notebook instance. Given the notebook name as Notebook-demo and instance type as ml.t2.medium. Choose the platform identifier as notebook-al1-V1 and leave the other options as default. Create a new IAM role as for any s3 buckets. And then create a notebook instance. Once the notebook instance status is InService, we can check the configurations of the instance as per given. We can also modify the instance type and volume size after stopping the notebook instance. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UmU70ddM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8w52kpdfchnft9f1zlue.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2vpM8NQG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eeevicddeun54077uygo.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HrreaDjq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vtont2c9wdo4uxuq87m.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bS_Jaxaq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/inltxjn8zm3dwcns2ryx.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HibpfamC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nt02l5znnegjx7ctqrjz.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KDG0hsrB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/axkpa6oar8dtfdy5xej7.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L94PM7nt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qa4z7pzht4ptcggfcjqi.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yAKTy11r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yflvhrltsq5hx9ypxw68.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pLapFUQU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqzg8o8ho432o93jpnqa.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P8BJ6U1K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqac78hvb72c6qrvvcs8.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nn31Zqe2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqyawa9fi9gw6f3ifoxe.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fQabZPfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hhbeqiuranb7qp9hmxps.png" alt="Image description" width="880" height="495"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#phase-2-create-a-jupyter-notebook-and-also-download-explore-and-transform-a-dataset"&gt;
  &lt;/a&gt;
  Phase 2: Create a Jupyter Notebook and also Download, Explore and Transform a Dataset
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Open the JupyterLab then choose conda_python3 and save the notebook as test-notebook-demo.ipynb. And download, explore and transform a dataset by running python lines. Also able to restart the kernel by clicking the restart option on the upside bar.  You are able to train, validate and test the data in it. Also able to see the csv files for train and validation in s3 bucket.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d1X7mmK3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nkevk5df4gwywlmtsppi.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lKsJRi1K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bsehl2bcad8raamoy4do.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VeB-YLy3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mnxp4nqoec2fb56ne42e.png" alt="Image description" width="880" height="452"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XG8L5E__--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtfb0bzo0y0cvurjp0d3.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pxI_GCFm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ypvc6dqbcpa7l4nzicl.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5m_YM8pK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6487dih1vd5bowmq733.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aYN75V51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/agojsmhtakdumecb83z3.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H2Yd3-IS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjr5spikblvjn6x7z8gf.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CZIqWEp8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hbf31rools7yokpb032.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b9G8d-8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9ykva4apekio8gcjif5.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xVKVmkXJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/too7wq7azplty2mu0m07.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--42I9rX3G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1l1too4trtv4lkskhvzj.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CVd5PK-s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sb261baam48o5ht139li.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--teLwXN4m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bmxj5dkj241kp6010qd4.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1eogizQ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yamjakzpub3hn1lfa5fu.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jZPZ37vO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8g6aeq2dbt9acnhz2aqr.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ew42lc_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/272r35ifbnr9ikezys30.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rwqL8Uto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/51wqd551xpzfq3kqt3ze.png" alt="Image description" width="880" height="495"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#phase-3-check-of-iam-role-created-and-train-a-model"&gt;
  &lt;/a&gt;
  Phase 3: Check of IAM role created and Train a Model
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Check the permissions in the IAM role for sagemaker and create a folder in s3 bucket named as testdemo_model. And also run of python lines to train a model. Once the model gets trained, you are able to see the model artifact in s3 bucket.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GynOH-eb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1p8338dsmetl508g0a2s.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0tu-WggW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xycfk4oeigpncf17ekz6.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_IZ91lLX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vrk6wibs6c3yivkgj7uo.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tgKWc9dO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjzjat1mn2nj79io4qj2.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hFXy3CBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2fndugxbivzz7rl25asx.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GX7MEo33--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1kn95oye0fb0azb265q.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vhqaexxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lb5otwng3nkpxse3fsnj.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NWBgF3pz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8z0zdcvkvajrwrrs1sx.png" alt="Image description" width="880" height="495"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#phase-4-deploy-the-model-to-sagemaker-hosting-services-as-amazon-ec2-and-evaluate-the-model"&gt;
  &lt;/a&gt;
  Phase 4: Deploy the Model to SageMaker Hosting Services as Amazon EC2 and Evaluate the Model
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Run the python lines to deploy and evaluate the model. And can see the training jobs, models, endpoint configurations, endpoints in sagemaker console.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ADSN_HS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tas9j3e6pwm2gigtwkpq.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z5xWtZud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05c0uutimasduzulotmr.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7b8I-xBj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8f12nc79vtrnsu96ryw.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Luj8SoXF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5sgnhgdrsnfx1uhjzq7v.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X5qUd6AM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7o1d3dghggfjrofcn5eu.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e9xVTqu---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/coqz0w3p8kz7pb0wxnox.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EjEnK4ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dnsi5bmre1s2z9eoayax.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xfAfMtnO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdx48cm6230rehyqnsky.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qwt6cl6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8h7flwuauqcfkt8gupho.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xF0FfvDG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j3sdteiig28ksn5svbv.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iGhR8rD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7fhuott39ad003s0gzz.png" alt="Image description" width="880" height="495"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mEMj-bGw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ju54jnngcanvjpm4uhjh.png" alt="Image description" width="880" height="448"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#phase-5-check-of-log-streams-in-cloudwatch-log-groups-for-sagemaker-and-other-parameters-in-metrics-of-cloudwatch"&gt;
  &lt;/a&gt;
  Phase 5: Check of Log Streams in Cloudwatch Log Groups for SageMaker and other parameters in Metrics of Cloudwatch
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yCSbRT8V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mf6bo1ksvse6mz290hv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yCSbRT8V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mf6bo1ksvse6mz290hv.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X9_bpCGJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7guogrbs34lg74af8262.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X9_bpCGJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7guogrbs34lg74af8262.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a-sMx7cz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbmhfafzve2yi0v1ytxo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a-sMx7cz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbmhfafzve2yi0v1ytxo.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ojqMbsGT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0ncyfaidp0t045oc815.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ojqMbsGT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0ncyfaidp0t045oc815.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uaoYHu7c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4qy9gd4z9qsv57oubanm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uaoYHu7c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4qy9gd4z9qsv57oubanm.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rlUDu1zk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7cycuq50aie75xcb805.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rlUDu1zk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7cycuq50aie75xcb805.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8be5kkGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97p98fzajsuhgdk3igni.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8be5kkGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97p98fzajsuhgdk3igni.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cbNiLsv4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubjmsnqz9xrm917x7ktd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cbNiLsv4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubjmsnqz9xrm917x7ktd.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wVCh55Jd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ovi0opklk1rvfnff33l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wVCh55Jd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ovi0opklk1rvfnff33l.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x8-GIafR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kms91qwqy0uz2107rllc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x8-GIafR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kms91qwqy0uz2107rllc.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nWQG_KON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xs5duqj0iyrzioc1kbr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nWQG_KON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xs5duqj0iyrzioc1kbr.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cleanup"&gt;
  &lt;/a&gt;
  Clean-up
&lt;/h1&gt;

&lt;p&gt;Delete Amazon SageMaker, Amazon Simple Storage Service, IAM, Cloudwatch Log group.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h1&gt;

&lt;p&gt;I review the pricing and estimated cost of this example. &lt;br&gt;
Cost of Sagemaker ‚Üí &lt;br&gt;
Amazon Sagemaker createvolume-Gp2 = $0.02 &lt;br&gt;
Amazon Sagemaker Invoke-Endpoint = $0.0&lt;br&gt;
Amazon Sagemaker RunInstance = $0.77&lt;br&gt;
Total = ($0.02+$0.0+$0.77) =$0.79&lt;br&gt;
Cost of Simple Storage Service = $0.04 &lt;br&gt;
Total Cost = $(0.79+0.04) = $0.83&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h1&gt;

&lt;p&gt;In this post, I showed ‚Äúhow to train, deploy and evaluate a Model in Amazon SageMaker‚Äù.&lt;/p&gt;

&lt;p&gt;For more details on Amazon SageMaker, Checkout Get started Amazon SageMaker, open the &lt;a href="https://ap-south-1.console.aws.amazon.com/sagemaker/home?region=ap-south-1#/landing"&gt;Amazon SageMaker console&lt;/a&gt;. To learn more, read the &lt;a href="https://docs.aws.amazon.com/sagemaker/?id=docs_gateway"&gt;Amazon SageMaker documentation&lt;/a&gt;. For more details on Amazon S3, Checkout Get started Amazon S3, open the &lt;a href="https://s3.console.aws.amazon.com/s3/home?region=ap-south-1"&gt;Amazon S3 console&lt;/a&gt;. To learn more, read the &lt;a href="https://docs.aws.amazon.com/s3/?id=docs_gateway"&gt;Amazon S3 documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Connect with me: &lt;a href="https://www.linkedin.com/in/gargee-bhatnagar-6b7223114"&gt;Linkedin&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dhTH-GM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38sdi4nsp89fnui8h7dk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dhTH-GM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38sdi4nsp89fnui8h7dk.png" alt="Image description" width="78" height="64"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>awssagemaker</category>
      <category>awsiam</category>
      <category>awss3</category>
    </item>
    <item>
      <title>How I made my own text editor</title>
      <author>SnowBit</author>
      <pubDate>Sun, 19 Dec 2021 09:09:50 +0000</pubDate>
      <link>https://dev.to/snowbit/how-i-made-my-own-text-editor-2aj8</link>
      <guid>https://dev.to/snowbit/how-i-made-my-own-text-editor-2aj8</guid>
      <description>&lt;p&gt;&lt;code&gt;Hello World!&lt;/code&gt; I am back with a new article üéâ....&lt;/p&gt;

&lt;p&gt;Today, I am going to talk about the editor which I have made üëâ &lt;strong&gt;tiny editor&lt;/strong&gt;; which is very helpful to write code on web browser and many more..&lt;/p&gt;

&lt;p&gt;So, &lt;strong&gt;How I made?&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#libraries-frameworks"&gt;
  &lt;/a&gt;
  Libraries / Frameworks
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;React JS&lt;/li&gt;
&lt;li&gt;CodeMirror&lt;/li&gt;
&lt;li&gt;Monaco Editor&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/tiny-unique-id"&gt;tiny-unique-id&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;FontAwesome Icons&lt;/li&gt;
&lt;li&gt;react-sandbox-editor&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#database-to-save-code-and-auth"&gt;
  &lt;/a&gt;
  Database (to save code and auth)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Cloud Firestore (Firebase)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-i-made-code-input-editor"&gt;
  &lt;/a&gt;
  How I made code input / editor?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;To make the Editor / Input I have used &lt;strong&gt;CodeMirror&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CtC1bjen--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no9nx2s8w2vmd9wn22z1.png" alt="Classic Editor" width="880" height="425"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ControlledEditor&lt;/span&gt; 
            &lt;span class="nx"&gt;onBeforeChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;code-mirror-wrapper&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
                &lt;span class="na"&gt;lineWrapping&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;lint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;language&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;material&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;lineNumbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;autoCloseBrackets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;matchBrackets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;autoCloseTags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;matchTags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And for VSCode Editor, I have used Monaco Editor
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YoXh-g4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w51jf9yuehjsv15ckzz7.png" alt="VS Code Editor" width="880" height="428"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Editor&lt;/span&gt;
     &lt;span class="nx"&gt;defaultLanguage&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
     &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vs-dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
     &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setJs&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;editor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
   &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-output-is-shown"&gt;
  &lt;/a&gt;
  How output is shown
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;To show output, I have used &lt;code&gt;iframe&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;iframe&lt;/span&gt;
      &lt;span class="nx"&gt;srcDoc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;srcDoc&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;output&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
       &lt;span class="nx"&gt;sandbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;allow-forms allow-popups allow-scripts allow-same-origin allow-modals&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
       &lt;span class="nx"&gt;frameBorder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
       &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
       &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-code-saves-update"&gt;
  &lt;/a&gt;
  How code saves / update?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;To save the code, I have used &lt;strong&gt;Cloud Firestore (Firebase)&lt;/strong&gt; which saves the code in &lt;strong&gt;JSON&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DcmNmcCA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9cpc7w0gl7reqjv6awl.png" alt="Cloud Firestore" width="880" height="284"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is how I made my own text editor like VSCODE.&lt;/p&gt;




&lt;p&gt;I have made a video on showcasing it, so make sure to check out the video and don't forget to check out my &lt;a href="https://www.youtube.com/channel/UCNTKqF1vhFYX_v0ERnUa1RQ"&gt;Youtube Channel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/dF_ysbWp9d8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Create a Marquee in HTML/CSS!</title>
      <author>Ustariz Enzo</author>
      <pubDate>Sun, 19 Dec 2021 08:51:03 +0000</pubDate>
      <link>https://dev.to/ziratsu/how-to-create-a-marquee-in-htmlcss-2m68</link>
      <guid>https://dev.to/ziratsu/how-to-create-a-marquee-in-htmlcss-2m68</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Learn how to create a &lt;em&gt;marquee in HTML/CSS&lt;/em&gt; only in less than a minute!&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TEUPVZVX4Mg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-html-structure"&gt;
  &lt;/a&gt;
  1. The HTML structure.
&lt;/h2&gt;

&lt;p&gt;Create a basic HTML structure with a container and then a "p" with some text inside:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"marquee-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"marquee"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        LONDON - PARIS - SYDNEY - TOKYO - NEW YORK - BERLIN - ROME
    &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-style-the-page"&gt;
  &lt;/a&gt;
  2. Style the page.
&lt;/h2&gt;

&lt;p&gt;Start by styling the container by making sure its overflow is hidden:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.marquee-container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#25284c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then style the text however you want, but most importantly create an animation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.marquee&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;marquee&lt;/span&gt; &lt;span class="m"&gt;3.5s&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* notice the infinite */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add a pseudo element ::after with the exact same text as the one in the "p" :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.marquee&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"LONDON - PARIS - SYDNEY - TOKYO - NEW YORK - BERLIN - ROME"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-create-the-animation"&gt;
  &lt;/a&gt;
  3. Create the animation.
&lt;/h2&gt;

&lt;p&gt;Now create the animation itself:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;marquee&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will make the div containing the text go to the left, you can put 50% if you want to animate it to the right.&lt;/p&gt;

&lt;p&gt;After 50% of the width it will reset to the beginning of the animation without a flinch, thus starting the animation again and again.&lt;/p&gt;

&lt;p&gt;This, indeed, can only work if we are using the same text in the p tag and the after.&lt;/p&gt;

&lt;p&gt;There you go, you've now created a nice smooth marquee!&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>It's the most insecure code in the world</title>
      <author>Anders Bj√∂rkland</author>
      <pubDate>Sun, 19 Dec 2021 08:33:05 +0000</pubDate>
      <link>https://dev.to/andersbjorkland/its-the-most-insecure-code-in-the-world-1anb</link>
      <guid>https://dev.to/andersbjorkland/its-the-most-insecure-code-in-the-world-1anb</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Just the Gist&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
A not uncommon criticism of PHP is that it lacks in security. The sad part is, we can't argue against it. It's too broad of a criticism which can be leveraged against most languages, as most have some way a secret can be leaked. Modern PHP and modern coding practices exists to mitigate this. But today, we are going to take a look at one very basic security flaw example, and a way we could mitigate it. It's what could happen if we don't run a web server but still have our php-files public.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Say that we have an &lt;code&gt;index.php&lt;/code&gt; located in a public-folder. This file is protecting the identity of the secret santa until Christmas Day. It may look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 

&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SECRET_SANTA'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Olaf ‚õÑ"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;The Secret Santa is a secret!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;You have to wait until Christmas Day to know who it is.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

    &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 

    &lt;span class="nv"&gt;$today&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"now"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$christmas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"2021-12-25"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$today&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nv"&gt;$christmas&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;p&amp;gt;The Secret Santa is "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="no"&gt;SECRET_SANTA&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"!&amp;lt;/p&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;p&amp;gt;The Secret Santa is still a secret.&amp;lt;/p&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As long as we have a web server service active (such as Apache), this will be interpreted correctly and we would have the following output:&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rx4hqgYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0f8ku1k3rvbzmskknbxz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rx4hqgYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0f8ku1k3rvbzmskknbxz.png" alt="The website display that the secret santa is still a secret." width="452" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But what would happen if the service was down and we had visitors to the website? Instead of parsing the PHP file and rendering the correct output, we would serve the file as simple text. All our code would be visible and any one could see that it's Olaf! üò±&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0YJOrW9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1u665j2xs5wtbsgyd2u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0YJOrW9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1u665j2xs5wtbsgyd2u.png" alt="The website display all the code and any one can see that Olaf is the secret santa." width="537" height="436"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So how could we protect ourselves from this happening? We could move our secrets out of the public folder (or the web-root) and into a folder that is not accessible by visitors. Say that we have the following structure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/
  |-- public-folder
  |   |-- index.php
  |   
  |-- private-folder
      |-- SecretSanta.php
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our visitors would be unable to see the contents of the &lt;code&gt;SecretSanta.php&lt;/code&gt; file, but they would be able to see the &lt;code&gt;index.php&lt;/code&gt; file. So here's how we could do this.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;SecretSanta.php&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SecretSanta&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="no"&gt;SECRET_SANTA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Olaf ‚õÑ'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getSecretSanta&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"now"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"2021-12-25"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;SECRET_SANTA&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This class declares a constant with the identity of the Secret Santa. It's private so no other file has access to it. We must use the static function &lt;code&gt;getSecretSanta()&lt;/code&gt; to access the secret santa. This function will return the secret santa if it's on or after Christmas Day, otherwise it will return &lt;code&gt;false&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Going back to the &lt;code&gt;index.php&lt;/code&gt; file, we can now get the secret santa by calling the static function on the class (&lt;code&gt;SecretSanta::getSecretSanta()&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 

&lt;span class="k"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'../private/SecretSanta.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;The Secret Santa is a secret!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;You have to wait until Christmas Day to know who it is.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

    &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;SecretSanta&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;getSecretSanta&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;p&amp;gt;The Secret Santa is "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nc"&gt;SecretSanta&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;getSecretSanta&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"!&amp;lt;/p&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;p&amp;gt;The Secret Santa is still a secret.&amp;lt;/p&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We would still get the same output as before when the web server service is running, but now we can see that the secret santa is not visible to the public if the service is down. This is but one example of how it may be a good idea to have your application logic and secrets outside of the public folder. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is so much more to keep track of when it comes to security. This article hasn't covered even a fraction of it. And many of the issues are not specific to PHP. There are Cross Origin Resource Forgery (CSRF) attacks, SQL Injection, Cross Site Scripting (XSS), and many more. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-about-you"&gt;
  &lt;/a&gt;
  What about you?
&lt;/h2&gt;

&lt;p&gt;Perhaps you have some good insight into good security practices within the PHP ecosystem, please share! Have you encountered projects with bad security? What are your best security recommendations to web developers building their first couple of PHP projects? Comment below and let us know what you think ‚úç&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;PHP Manual on Security: &lt;a href="https://www.php.net/manual/en/security.php"&gt;https://www.php.net/manual/en/security.php&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Zend on how to handle security risks: &lt;a href="https://www.zend.com/blog/managing-security-risks-php-engine-and-web-applications"&gt;https://www.zend.com/blog/managing-security-risks-php-engine-and-web-applications&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>php</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
