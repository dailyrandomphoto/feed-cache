<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>I‚Äôm joining Postman, focusing on Open Source üë©üèº‚ÄçüöÄ</title>
      <author>Alejandra Quetzalli üêæ</author>
      <pubDate>Mon, 30 Aug 2021 14:53:10 +0000</pubDate>
      <link>https://dev.to/alejandra_quetzalli/i-m-joining-postman-focusing-on-open-source-2986</link>
      <guid>https://dev.to/alejandra_quetzalli/i-m-joining-postman-focusing-on-open-source-2986</guid>
      <description>&lt;p&gt;Well‚Ä¶ the unexpected happened!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vib3oArc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5hrj7a5ilqpggcvzgkz7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vib3oArc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5hrj7a5ilqpggcvzgkz7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I joined Postman to focus on &lt;strong&gt;Open Source&lt;/strong&gt; technologies. &lt;/p&gt;

&lt;p&gt;(I've been informed this makes me a &lt;em&gt;Postmanaut&lt;/em&gt; üë©üèº‚ÄçüöÄ.)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XzPVJpCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tu9wrq4jikfmuw1p457y.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XzPVJpCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tu9wrq4jikfmuw1p457y.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fKy78R7C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quvif5txxnlvm6401ki7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fKy78R7C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/quvif5txxnlvm6401ki7.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q1TzlRGo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfv1am0ocsuu2nyaph95.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q1TzlRGo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfv1am0ocsuu2nyaph95.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-new-job-about"&gt;
  &lt;/a&gt;
  What is the new job about?
&lt;/h2&gt;

&lt;p&gt;Being hired onto the Open Source (OSS) side of the Postman spaceship means I was &lt;strong&gt;not&lt;/strong&gt; hired to work on the Postman product docs. (So joining Postman all-hands meetings or events are &lt;strong&gt;not&lt;/strong&gt; required, cause I‚Äôm in one of the partner OSS teams.) &lt;/p&gt;

&lt;p&gt;Rather, I was hired directly by the OSS project maintainer team that owns the &lt;strong&gt;&lt;a href="https://www.asyncapi.com/"&gt;AsyncAPI&lt;/a&gt;&lt;/strong&gt; OSS initiative, which &lt;a href="https://www.linuxfoundation.org/en/press-release/linux-foundation-will-host-asyncapi-to-support-growth-and-collaboration-for-industrys-fastest-growing-api-spec/#:~:text=Menu%20Menu-,Linux%20Foundation%20Will%20Host%20AsyncAPI%20to%20Support%20Growth%20and,Industry's%20Fastest%2DGrowing%20API%20Spec&amp;amp;text=SAN%20FRANCISCO%2C%20Calif.%2C%20March,will%20host%20the%20AsyncAPI%20Initiative."&gt;moved under the Linux Foundation&lt;/a&gt;. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're curious to learn more, Postman‚Äôs CEO and co-founder Abhinav Asthana wrote a &lt;a href="https://blog.postman.com/asyncapi-joins-forces-with-postman-future-of-apis/"&gt;blog post&lt;/a&gt; in 2020 to announce their partnership with AsyncAPI.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My job here as Senior Technical Writer will be to own the &lt;a href="https://www.asyncapi.com/docs/getting-started"&gt;documentation for AsyncAPI&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;That said, I‚Äôll delve in a &lt;a href="https://www.youtube.com/asyncapi"&gt;few streams&lt;/a&gt; or conference talks as well, despite not being their DevRel person. New boss just happened to suggest the idea and I decided to remain open to it since it would be only OSS community focused events. (I‚Äôve been taking a purposeful break from corporate/startup conference talks for over a year because I needed and wanted a &lt;strong&gt;damn break&lt;/strong&gt;.) &lt;/p&gt;

&lt;p&gt;Thank you for the neat swag, Postman! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wZEEqQLc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddiwdjvz18d19cluidca.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZEEqQLc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddiwdjvz18d19cluidca.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8gSO_rmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j90uxpe7xi0al9vju1bt.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8gSO_rmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j90uxpe7xi0al9vju1bt.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---MJeZdjK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlhmfkfx2uat3ixvlprx.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---MJeZdjK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlhmfkfx2uat3ixvlprx.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#butim-also-awaiting-my-asyncapi-swag-to-arrive-soon"&gt;
  &lt;/a&gt;
  But...I'm also awaiting my &lt;strong&gt;AsyncAPI swag&lt;/strong&gt; to arrive soon!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tt6i2KRF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4bgn8cv2wp3ucnyl18g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tt6i2KRF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4bgn8cv2wp3ucnyl18g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gIwbGIv0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pj81b3tbafoic77d52f7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gIwbGIv0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pj81b3tbafoic77d52f7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z-8oJ3a---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3h0r68sk5q6iw6fsf3ha.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z-8oJ3a---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3h0r68sk5q6iw6fsf3ha.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wait-does-postman-offer-any-cool-benefits"&gt;
  &lt;/a&gt;
  Wait, does Postman offer any cool benefits?
&lt;/h3&gt;

&lt;p&gt;Ooh you bet they do! üöÄüë©üèº‚ÄçüöÄ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;$240/month lunch stipend: ergo, &lt;strong&gt;FREE lunch for as long as I work here&lt;/strong&gt; üòúüçïüçï&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Up to $600/year reimbursed for wellness and health programs; I‚Äôm using mine for kickboxing &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Asynchronous communication via Slack&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remote WFH&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very flexible schedule &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unlimited PTO&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Full medical benefits/401K account; they hope to start matching this year or next ü§ûüèΩ &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Charity/Foundation donation matching for an organization of your choice ü•∞; I will be choosing &lt;strong&gt;&lt;a href="https://womenforafghanwomen.org/"&gt;Women for Afghan Women&lt;/a&gt;&lt;/strong&gt;, because we need to continue supporting Afghan Women during the current humanitarian crisis unrolling in Afghanistan this year.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-asyncapi"&gt;
  &lt;/a&gt;
  What is AsyncAPI?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.asyncapi.com/"&gt;AsyncAPI&lt;/a&gt; is an OSS initiative that seeks to improve Event-Driven Architectures (EDAs), asynchronous API standardization, and asynchronous API developer tools. &lt;/p&gt;

&lt;p&gt;AsyncAPI was created to describe APIs that &lt;strong&gt;don‚Äôt&lt;/strong&gt; use HTTP. AsyncAPI has a specification similar to OpenAPI: it uses JSON schema for modeling published and subscribed objects. &lt;/p&gt;

&lt;p&gt;EDAs like AsyncAPI are broker-centric. A broker is a piece of infrastructure in charge of &lt;strong&gt;receiving messages&lt;/strong&gt; and &lt;strong&gt;delivering them&lt;/strong&gt;. Brokers can store messages until they are delivered, making EDAs quite resilient to failures. Some examples of brokers are &lt;em&gt;RabbitMQ&lt;/em&gt;, &lt;em&gt;Apache Kafka&lt;/em&gt;, &lt;em&gt;Solace&lt;/em&gt;, etc.&lt;/p&gt;

&lt;p&gt;Wanna try an AsyncAPI playground?&lt;br&gt;
&lt;a href="https://playground.asyncapi.io"&gt;https://playground.asyncapi.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZTIf2H5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2xwsrdbvqo75zq5q66h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZTIf2H5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2xwsrdbvqo75zq5q66h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XNDQRrb9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky4a65x33zozto7rnl8d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XNDQRrb9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky4a65x33zozto7rnl8d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;asyncapi: '2.1.0'
info:
  title: Count Signups
  version: 1.0.0
  description: This service counts user signups
channels:
  user/signedup:
    subscribe:
      message:
        $ref: '#/components/messages/UserSignedUp'
components:
  messages:
    UserSignedUp:
      payload:
        type: object
        properties:
          displayName:
            type: string
            description: user name
          email:
            type: string
            format: email
            description: user email
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tRLZGp5D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqvbjb7ta3m632s3w9ov.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tRLZGp5D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqvbjb7ta3m632s3w9ov.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PhPEW5Iq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zobk3hzcjvxux6fy6628.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PhPEW5Iq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zobk3hzcjvxux6fy6628.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-am-i-excited-about-joining-a-oss-team"&gt;
  &lt;/a&gt;
  Why am I excited about joining a üíØ% OSS team?
&lt;/h2&gt;

&lt;p&gt;Honestly, I am most excited about &lt;em&gt;not&lt;/em&gt; having a Product Owner that feels pressured by an Engineering organization. &lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It‚Äôs been my experience that when Product Managers (PMs) or Engineering orgs own Technical Writer (TW) teams, Developer Documentation often suffers by getting caught between the conflicting priorities of opposite  teams.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Engineering orgs tend to assume dev audiences know at least some basics. (&lt;strong&gt;For the love of donuts üç© üç© üç©... can we stop assuming what readers do or don‚Äôt know, have or haven‚Äôt installed, and have or haven't tested before?!?!&lt;/strong&gt;) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Engineering orgs tend to be arrogant in their programming knowledge and not place enough value on detailed and beginner guides. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Engineering orgs tend to forget that DevDocs need to make sense to non-programmers. (i.e. Not all PMs know how to program and not all readers are developers. I mean, do you &lt;strong&gt;want&lt;/strong&gt; your Sales team empowered for success or don‚Äôt you?) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PMs tend to be too opinionated on voice, which consistently leads to stifling a tech writer‚Äôs individual style. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PMs can also focus too much on feature driven development that brings in more business vs prioritizing what the actual community freaking asked for.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PMs can lose perspective and forget that documentation should help ANYONE. That includes developers whose first language is &lt;em&gt;not&lt;/em&gt; English. Forcing TWs who learnt English as their &lt;strong&gt;second language&lt;/strong&gt; to ‚ú®‚ú® magically ‚ú®‚ú® write only in mind for USA audiences or English grammar enthusiasts is the &lt;strong&gt;opposite&lt;/strong&gt; of inclusion and diversity. PMs need to understand that it‚Äôs a balancing act to tackle DevDocs and that keeping it simple to read matters!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Having TW teams report into PM (or Engineering) orgs removes true ownership from TWs. TW teams need to have sole jurisdiction to do the job right. As long as TWs are reporting to &lt;em&gt;another&lt;/em&gt; department, Developer Documentation goals will always be in competition with the parent org.  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for coming to my TED talk.üé§&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NzIHWyCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k27m6uml95z79y46t8z2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NzIHWyCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k27m6uml95z79y46t8z2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What‚Äôs next?
&lt;/h2&gt;

&lt;p&gt;I‚Äôm available for blog posts, articles, workshops, &lt;a href="https://www.youtube.com/asyncapi"&gt;videos&lt;/a&gt;, and talks about AsyncAPI, the AsyncAPI community, and how you too can &lt;a href="https://github.com/asyncapi"&gt;contribute to AsyncAPI&lt;/a&gt;.‚ô•Ô∏è &lt;/p&gt;

&lt;p&gt;My main focus is &lt;a href="https://www.asyncapi.com/docs/getting-started"&gt;writing our Docs&lt;/a&gt;, but new boss supports variety, so I‚Äôm open to it.üòÉüëçüèΩ &lt;/p&gt;

&lt;p&gt;I'll also make a point to help with community questions that come through our &lt;a href="https://asyncapi.slack.com/join/shared_invite/enQtNDY3MzI0NjU5OTQyLTM5NTlkYzFmZDQyMGVkNzVkOTRhMGU2N2VmMWRlOTdkNWE0YzdjMGQ2NzRlOWU1NGJkYjUyZDEzMzM3ZGYzYzM#/shared-invite/email"&gt;AsyncAPI Slack channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lastly, we hold &lt;a href="https://github.com/asyncapi/community"&gt;biweekly OSS AsyncAPI interest community meetings&lt;/a&gt; on Tuesdays at 6:00pm CET. If you'd like to join me, all you have to do is &lt;a href="https://calendar.google.com/calendar?cid=dGJyYmZxNGRlNWJjbmd0OG9rdmV2NGxzdGtAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ"&gt;add our calendar&lt;/a&gt; or &lt;a href="https://groups.google.com/forum/#!forum/asyncapi-users"&gt;join our mailing list&lt;/a&gt; to get an invite to the next meeting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---wQOsn6s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10vx5lgng835h6ag1z4o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---wQOsn6s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10vx5lgng835h6ag1z4o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#let-me-know-how-i-can-help"&gt;
  &lt;/a&gt;
  Let me know how I can help!
&lt;/h2&gt;

&lt;p&gt;If you already have some &lt;strong&gt;AsyncAPI&lt;/strong&gt; questions to send my way, I'm only a DM away here and in my social media. &lt;/p&gt;

&lt;p&gt;I can't wait to meet and support all of you awesome OSS community members!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ELtrwHzY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ke1944y0nl0hag86cdwc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ELtrwHzY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ke1944y0nl0hag86cdwc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LU6_cOA3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8aaq0kxump80okvwwzwf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LU6_cOA3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8aaq0kxump80okvwwzwf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>career</category>
      <category>eventdriven</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Backend Operations in PHP from 0 to Hero(Pt. 2 passing variables and user input)</title>
      <author>Code_Jedi</author>
      <pubDate>Mon, 30 Aug 2021 14:28:56 +0000</pubDate>
      <link>https://dev.to/code_jedi/backend-operations-in-php-from-0-to-hero-pt-2-passing-variables-and-user-input-23gi</link>
      <guid>https://dev.to/code_jedi/backend-operations-in-php-from-0-to-hero-pt-2-passing-variables-and-user-input-23gi</guid>
      <description>&lt;p&gt;In the &lt;a href="https://dev.to/code_jedi/backend-operations-in-php-from-0-to-hero-pt-1-simple-operations-pop"&gt;last tutorial&lt;/a&gt;, we made a PHP script that performs simple backend operations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In part 2, we'll be making a PHP script that will perform customizable backend operations by getting user input and passing it to our backend script&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started!
&lt;/h3&gt;

&lt;p&gt;First, let's create a form that will accept a &lt;code&gt;url&lt;/code&gt; and a &lt;code&gt;tag&lt;/code&gt; parameter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;title&amp;gt;Simple operations&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
  &amp;lt;form method="post" action="results.php"&amp;gt;
  url: &amp;lt;input type="text" name="url"&amp;gt;&amp;lt;br&amp;gt;
  tag: &amp;lt;input type="text" name="tag"&amp;gt;&amp;lt;br&amp;gt;
  &amp;lt;button type="submit" &amp;gt;Submit&amp;lt;/button&amp;gt;
  &amp;lt;/form&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Once these parameters are accepted, they will passed-on to &lt;code&gt;results.php&lt;/code&gt;, here's how it will look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
$url = $_POST["url"];
$tag = $_POST["tag"];
$output = exec("python3 op1.py $url $tag");
echo("&amp;lt;h1&amp;gt;$output&amp;lt;/h1&amp;gt;");
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;What's going on here?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, &lt;code&gt;results.php&lt;/code&gt; defines the &lt;code&gt;$url&lt;/code&gt; and &lt;code&gt;$tag&lt;/code&gt; variables as the ones passed-on by the form we made earlier.&lt;/li&gt;
&lt;li&gt;It then executes &lt;code&gt;op1.py&lt;/code&gt; using the &lt;a href="https://www.php.net/manual/en/function.exec.php"&gt;exec function&lt;/a&gt; and passes the &lt;code&gt;$url&lt;/code&gt; and &lt;code&gt;$tag&lt;/code&gt; variables to &lt;code&gt;op1.py&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;It finally echos the output of this exec function inside an &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#heres-where-the-magic-happens"&gt;
  &lt;/a&gt;
  Here's where the magic happens
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;results.php&lt;/code&gt; passes the &lt;code&gt;$url&lt;/code&gt; and &lt;code&gt;$tag&lt;/code&gt; variables to &lt;code&gt;op1.py&lt;/code&gt;, executes the python script and returns it's output.&lt;/p&gt;

&lt;p&gt;One big question you might have is: &lt;br&gt;
&lt;em&gt;&lt;strong&gt;"How is python able to work with PHP variables?"&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a1LDqGKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nis82hah8kjn48ruzer.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a1LDqGKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nis82hah8kjn48ruzer.gif" alt="What?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; Using the &lt;code&gt;sys&lt;/code&gt; library.&lt;br&gt;
Let me show you:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import sys
import requests
from bs4 import BeautifulSoup

url=sys.argv[1]
response = requests.get(url)

soup = BeautifulSoup(response.text, 'html.parser')
element = soup.find('body').find(sys.argv[2])
print(element)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a python script which scrapes webpages for certain HTML tags such as &lt;code&gt;h1&lt;/code&gt; &lt;code&gt;div&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt;, and outputs the text contents within the first occurrence of the specified HTML tag within the webpage.&lt;/p&gt;

&lt;p&gt;As you might remember, &lt;code&gt;results.php&lt;/code&gt; passed first the &lt;code&gt;$url&lt;/code&gt; variable, then the &lt;code&gt;$tag&lt;/code&gt; variable, therefor, when we define the &lt;code&gt;url&lt;/code&gt; variable in our python script, we call &lt;code&gt;sys.argv[1]&lt;/code&gt; to in turn get the first variable that was passed by the PHP script, which is the &lt;code&gt;$url&lt;/code&gt; variable.&lt;/p&gt;




&lt;p&gt;Next, when defining the tag which we want to scrape for text contents within the specified URL's webpage, we call &lt;code&gt;sys.argv[2]&lt;/code&gt; to get the second variable passed by &lt;code&gt;results.php&lt;/code&gt;, which is the &lt;code&gt;$tag&lt;/code&gt; variable.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-same-can-be-done-with-nodejs-like-so"&gt;
  &lt;/a&gt;
  The same can be done with Node.js like so:
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;results.php&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
$url = $_POST["url"];
$tag = $_POST["tag"];
$output = exec("url=$url tag=$tag node op1.js");
echo("&amp;lt;h1&amp;gt;$output&amp;lt;/h1&amp;gt;");
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;op1.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log('URL: ' + process.env.url + ' | tag: ' + process.env.tag)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S5LGicE_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1s2jvnljb5dntxctch70.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S5LGicE_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1s2jvnljb5dntxctch70.png" alt="Node.js output"&gt;&lt;/a&gt;&lt;/p&gt;





&lt;p&gt;Full code:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;index.php&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;title&amp;gt;Simple operations&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
  &amp;lt;form method="post" action="results.php"&amp;gt;
  url: &amp;lt;input type="text" name="url"&amp;gt;&amp;lt;br&amp;gt;
  tag: &amp;lt;input type="text" name="tag"&amp;gt;&amp;lt;br&amp;gt;
  &amp;lt;button type="submit" &amp;gt;Submit&amp;lt;/button&amp;gt;
  &amp;lt;/form&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;results.php&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
$url = $_POST["url"];
$tag = $_POST["tag"];
$output = exec("python3 op1.py $url $tag");
echo("&amp;lt;h1&amp;gt;$output&amp;lt;/h1&amp;gt;");
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;op1.py&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import sys
import requests
from bs4 import BeautifulSoup

url=sys.argv[1]
response = requests.get(url)

soup = BeautifulSoup(response.text, 'html.parser')
element = soup.find('body').find(sys.argv[2])
print(element)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Now if you open a terminal in your project's directory, run &lt;code&gt;php -S localhost:8000&lt;/code&gt; and open the respective url in your browser, here's how our code should work:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HVXNgf-3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azuydiuqysatn25xn7m3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HVXNgf-3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azuydiuqysatn25xn7m3.png" alt="index.php"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;These form parameters are passed on to &lt;code&gt;results.php&lt;/code&gt; which the user is then redirected to&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dlltY5vY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7jzw48v76p692ol2zq9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dlltY5vY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7jzw48v76p692ol2zq9.png" alt="results.php"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;&lt;code&gt;results.php&lt;/code&gt; then takes those parameters, passes them to &lt;code&gt;op1.py&lt;/code&gt;, executes the respective python script and returns it's output inside an &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag which in this case is "PHP tutorial".&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;If you were to change the tag parameter to &lt;code&gt;p&lt;/code&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nty7NSUh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4p58r0oibfo7hw793rpm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nty7NSUh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4p58r0oibfo7hw793rpm.png" alt="p parameter"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;op1.py&lt;/code&gt; will then scrape the first &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag within the specified URL:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LwoxNdTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/490hpaw60p0d1h0jx8kr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LwoxNdTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/490hpaw60p0d1h0jx8kr.png" alt="p element"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#you-can-now-experiment"&gt;
  &lt;/a&gt;
  You can now experiment!
&lt;/h3&gt;

&lt;p&gt;You can now implement this method of performing user customizable backend operations into your projects and PHP scripts when trying to perform backend operations.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Stick around for part 3 to learn about more complex, memory and time intensive backend operations in PHP!&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;Byeeeeüëã&lt;/p&gt;

</description>
      <category>php</category>
      <category>devops</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Get Weather {Day -17}</title>
      <author>Al Siam</author>
      <pubDate>Mon, 30 Aug 2021 14:21:54 +0000</pubDate>
      <link>https://dev.to/alsiamworld/get-weather-day-17-384j</link>
      <guid>https://dev.to/alsiamworld/get-weather-day-17-384j</guid>
      <description>&lt;h1&gt;
  &lt;a href="#100daysofcode-day-17-"&gt;
  &lt;/a&gt;
  100daysofcode { Day - 17 }
&lt;/h1&gt;

&lt;p&gt;Today I created a common temperature site using the OpenWeatherMap API. Just enter the name of your city and see the temperature.&lt;/p&gt;

&lt;p&gt;Preview: &lt;a href="https://alsiamworld.github.io/get-temperature"&gt;https://alsiamworld.github.io/get-temperature&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j1Z_kCvh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1zigbf6t131npq4qt14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j1Z_kCvh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1zigbf6t131npq4qt14.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-programming-devcommunity-webdev"&gt;
  &lt;/a&gt;
  javascript #programming #devcommunity #webdev
&lt;/h1&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Cool Button Hover Effect Using HTML &amp; CSS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Mon, 30 Aug 2021 14:20:53 +0000</pubDate>
      <link>https://dev.to/nikhil27b/cool-button-hover-effect-using-html-css-2n7e</link>
      <guid>https://dev.to/nikhil27b/cool-button-hover-effect-using-html-css-2n7e</guid>
      <description>&lt;p&gt;Hello, today I created an Amazing button hover Using HTML &amp;amp; CSS. I hope you like this also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/RwgrRqQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How the 7 deadly sins üëø will make you an Accessibility Expert! üòá</title>
      <author>InHuOfficial</author>
      <pubDate>Mon, 30 Aug 2021 14:16:42 +0000</pubDate>
      <link>https://dev.to/inhuofficial/how-the-7-deadly-sins-will-make-you-an-accessibility-expert-27c7</link>
      <guid>https://dev.to/inhuofficial/how-the-7-deadly-sins-will-make-you-an-accessibility-expert-27c7</guid>
      <description>&lt;p&gt;I am a sinner, it is far more fun than being good. So let's see how we can use the 7 deadly sins to our advantage when it comes to accessibility.&lt;/p&gt;

&lt;p&gt;Inspired by &lt;a href="https://levelup.gitconnected.com/7-capital-sins-of-a-software-developer-7cb66f6abeca"&gt;https://levelup.gitconnected.com/7-capital-sins-of-a-software-developer-7cb66f6abeca&lt;/a&gt;, but I thought being on the side of evil would be more fun!&lt;/p&gt;

&lt;p&gt;So let's jump in and see how being a sinner can be a good thing (oh and as this is one of my rants (sort of), be aware that any anger etc. is just for fun!)&lt;/p&gt;

&lt;p&gt;
  &lt;strong&gt;Trigger warnings, click to expand&lt;/strong&gt;
  &lt;br&gt;
This article is a humorous take on Christianity, evil and the seven deadly sins. 

&lt;p&gt;If you are deeply religious you may find some things offensive in this article and I would suggest you leave now. &lt;/p&gt;

&lt;p&gt;Additionally there are some dark jokes and sexuality related content, just in case you are sensitive to that. &lt;/p&gt;

&lt;p&gt;Finally there is a link to a website that uses a lot of profanity at the end of the "Wrath" section, although there is no swearing in the article itself be careful of that link (it has a warning on it!) &lt;/p&gt;

&lt;p&gt;It is all safe for work, but just a heads up!&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pride"&gt;
  &lt;/a&gt;
  Pride
&lt;/h2&gt;

&lt;p&gt;Ah, pride, we should be humble and practice humility as accessibility experts surely?&lt;/p&gt;

&lt;p&gt;Nope!&lt;/p&gt;

&lt;p&gt;Building accessible products and services takes thought and a little bit of extra effort. &lt;/p&gt;

&lt;p&gt;So when you have built something that is accessible, boast about it, be proud! &lt;/p&gt;

&lt;p&gt;Tell the world how you built something that is better than that built by other "developers" (as how can you call yourself a developer and build things that don't work for everyone?!).&lt;/p&gt;

&lt;p&gt;I mean &lt;a href="https://www.vatican.va/content/vatican/en.html"&gt;God's own website (the Vatican official website)&lt;/a&gt; has 1157 detectable accessibility errors in Axe DevTools - that must be some kind of record! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NSUQUuee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thcm2qf6jsbh5gn7bdi9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NSUQUuee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thcm2qf6jsbh5gn7bdi9.jpg" alt="Axe DevTools reports 1157 accessibility errors on the Vatican website home page (in English)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So as pride is considered the greatest of all the sins, I am happy to say "I am proud that I did not build the Vatican website".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#greed"&gt;
  &lt;/a&gt;
  Greed
&lt;/h2&gt;

&lt;p&gt;I want a big house and a nice car, I like material possessions.&lt;/p&gt;

&lt;p&gt;Building an accessible website (and business) means that more people can access it, and spend money there!&lt;/p&gt;

&lt;p&gt;As 1 in 6 people have a disability and 1 in 10 people have a disability that affects the way they interact with your website it is a massive market that is going ignored!&lt;/p&gt;

&lt;p&gt;The &lt;a href="http://www.clickawaypound.com/downloads/cap19final0502.pdf"&gt;Click-Away Pound report&lt;/a&gt; estimates that UK businesses lose over ¬£17 billion a year to their more accessible competitors (notice I say more accessible, nobody is getting it right it is just some sites have fewer barriers!).&lt;/p&gt;

&lt;p&gt;Imagine if just one site was fully accessible, that site could become a power house and grab all of that money! &lt;/p&gt;

&lt;p&gt;So be greedy! Build a product that is better than everyone else's and have thousands of people with disabilities flock to your site as they move away from your inaccessible competition!&lt;/p&gt;

&lt;p&gt;Watch your bank balance grow and your material wealth increase. &lt;/p&gt;

&lt;p&gt;According to the heavenly virtues, we should be charitable not greedy. Well &lt;a href="https://www.christianaid.org.uk/"&gt;Christian Aid's website&lt;/a&gt; has 40 accessibility errors, so I choose greed and 0 accessibility errors every day of the week!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j4MzH7gY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1xslt84jj6qersygnjr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j4MzH7gY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1xslt84jj6qersygnjr.png" alt="Axe DevTools reports 40 accessibility errors including 6 critical ones on the Christian Aid website home page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrath"&gt;
  &lt;/a&gt;
  Wrath
&lt;/h2&gt;

&lt;p&gt;Get angry when you see inaccessible websites. &lt;/p&gt;

&lt;p&gt;I recently had a &lt;a href="https://dev.to/inhuofficial/wethe15-great-shame-about-the-website-though-3k24"&gt;rant about the #WeThe15 website&lt;/a&gt; as it is a campaign about including people with disabilities, that had a completely inaccessible website. (It has improved a little after some guidance from a certain sinner who sent an angry email and how to fix things, but it still not great!)&lt;/p&gt;

&lt;p&gt;We are meant to be kind apparently. &lt;/p&gt;

&lt;p&gt;Well what has kindness brought? &lt;/p&gt;

&lt;p&gt;Over 25 years of little progress in the UK towards equality (over 30 years in the USA with the ADA). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://webaim.org/projects/million/#wcag"&gt;97.4% of website have accessibility issues that are detectable automatically&lt;/a&gt;...it seems that asking nicely and being forgiving and kind to people's ignorance and the barriers it creates is not the answer.&lt;/p&gt;

&lt;p&gt;So let out your inner rage monster and call out these inaccessible websites!&lt;/p&gt;

&lt;p&gt;Saying that, if the &lt;a href="https://www.disabilityrightsuk.org/"&gt;Disability Rights UK website&lt;/a&gt; can't get it right, what hope is there...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OXs-FEgj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93134t3u17dyhretrkb3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OXs-FEgj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93134t3u17dyhretrkb3.png" alt="Axe DevTools reports 72 accessibility errors on the Disability Rights UK website home page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, &lt;a href="https://ultimatemotherfuckingwebsite.com"&gt;I can build an evil site with 0 accessibility errors (warning, site contains many many swears so don't visit if you are offended by swearing!)&lt;/a&gt; quite easily.&lt;/p&gt;

&lt;p&gt;I choose the side of the sinners, as the sinners are winning!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#envy"&gt;
  &lt;/a&gt;
  Envy
&lt;/h2&gt;

&lt;p&gt;I am envious. Envious of companies who have managed to convince people that they are helping with crap products. &lt;/p&gt;

&lt;p&gt;AccessiBe is one of those companies, telling people that their accessible overlay will fix all of their problems (it makes things worse!). &lt;/p&gt;

&lt;p&gt;I am envious that I cannot get the reach they have in order to educate people that a website needs to be built with accessibility in mind, that it should be part of your Minimal Viable Product (MVP).&lt;/p&gt;

&lt;p&gt;I am envious that they can persuade people that they are helping, when they are actually making things worse.&lt;/p&gt;

&lt;p&gt;So bad in fact that the disabled community created &lt;a href="https://www.accessibyebye.org/"&gt;a plugin that blocks AccessiBe and other overlays&lt;/a&gt; as they cause so many issues!&lt;/p&gt;

&lt;p&gt;I use my envy as a source of power, unlocking the secrets these companies use to get the positive coverage they do not deserve.&lt;/p&gt;

&lt;p&gt;Then I can spin their techniques for my evil ways of actually building things that are accessible! üò±&lt;/p&gt;

&lt;p&gt;Apparently I am meant to be patient rather than envious, pfff.&lt;/p&gt;

&lt;p&gt;I will not be patient any longer, I want to make change happen quickly!&lt;/p&gt;

&lt;p&gt;I mean, if I told you I built accessible websites, and had 405 accessibility errors on my home page, would you listen?...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DwGSSpnM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqcqwb4xuo53merymdqf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwGSSpnM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqcqwb4xuo53merymdqf.png" alt="Axe DevTools reports 405 accessibility errors on the AccessiBe website home page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lust"&gt;
  &lt;/a&gt;
  Lust
&lt;/h2&gt;

&lt;p&gt;Well disability just isn't sexy enough for lust right? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkZ9vVN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55dufmd3h3o9uaz91rkd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkZ9vVN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55dufmd3h3o9uaz91rkd.png" alt="very attractive woman with double below knee amputations and prosthetic legs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I mean, I am sure many people would give their right arm for a woman like that. (and yes, that was a dark joke, I am evil remember?)&lt;/p&gt;

&lt;p&gt;But when it comes to lust and accessibility I am talking about a lust for power.&lt;/p&gt;

&lt;p&gt;This obviously links back to the greed and money part in some ways, but power is different. &lt;/p&gt;

&lt;p&gt;Imagine how much power you could wield if you had the backing of the &lt;strong&gt;1 billion disabled people&lt;/strong&gt; around the world.&lt;/p&gt;

&lt;p&gt;I want that backing, I lust after the power that brings, the power to shape the direction humanity is taking. The power to persuade politicians and business owners to listen.&lt;/p&gt;

&lt;p&gt;I want to use that power to force websites to be accessible or take them offline (imagine how quickly you would fix accessibility issues if that was a possibility...and if you build websites in the UK then you may want to start preparing...I am serious, I have something quite scary lined up!).&lt;/p&gt;

&lt;p&gt;I want to use that power to give the legal requirements (that already exists for websites to be accessible) some teeth, to force barriers to be removed in society! &lt;/p&gt;

&lt;p&gt;Yes, I am a monster, I lust after power and I lust after influence to make change happen. &lt;/p&gt;

&lt;p&gt;So I encourage you to also lust after influence, so that you can change people's thought process on accessibility.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gluttony"&gt;
  &lt;/a&gt;
  Gluttony
&lt;/h2&gt;

&lt;p&gt;Be a glutton! &lt;/p&gt;

&lt;p&gt;Over-consume accessibility articles and everything related to accessibility and disability.&lt;/p&gt;

&lt;p&gt;The more you consume on the subject the better your development practices will become. &lt;/p&gt;

&lt;p&gt;You will start thinking about people with Vestibular Disorders (e.g. sensitivity to movement), mobility impairments (e.g. accuracy issues with a mouse so they use a keyboard), people who use &lt;a href="http://www.inclusive.co.uk/articles/eye-gaze-say-it-with-your-eyes-a490"&gt;Eye Gaze technology&lt;/a&gt;, people who use dual or &lt;a href="https://www.nbt.nhs.uk/bristol-centre-enablement/services-at-centre/bristol-communication-aid-service/aac-switch-scanning"&gt;single switches to navigate your site&lt;/a&gt;, screen readers and people who use braille.&lt;/p&gt;

&lt;p&gt;Along the way you will learn about &lt;a href="https://www.w3.org/WAI/standards-guidelines/aria/"&gt;WAI-ARIA&lt;/a&gt;, semantic HTML etc. &lt;/p&gt;

&lt;p&gt;This will help you build sites that are SEO friendly (as you will structure things correctly), fast (as you will stop using bloated libraries, frameworks etc. that get in the way of accessibility) and more.&lt;/p&gt;

&lt;p&gt;So over-indulge, eat up all the accessible content you can!&lt;/p&gt;

&lt;p&gt;If you want a big juicy article to sink your teeth into to get you started, how does a 16,500 word listicle sound?:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/101-digital-accessibility-tips-and-tricks-4728" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;101 Digital Accessibility (a11y) tips and tricks&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial „Éª Jul 30 „Éª 68 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#sloth"&gt;
  &lt;/a&gt;
  Sloth
&lt;/h2&gt;

&lt;p&gt;It is good to be lazy!&lt;/p&gt;

&lt;p&gt;Accessibility is centred around using semantic elements and simplifying things to make the User Experience (UX) better (for everyone!). &lt;/p&gt;

&lt;p&gt;If you use native and semantic elements your life becomes 100 times easier as a developer, someone else has done all the hard work for you. &lt;/p&gt;

&lt;p&gt;Instead of hundreds of lines of code to build an accordion, use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details"&gt;&lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;&lt;/a&gt;, they have all the functionality baked in and fall back gracefully in the few browsers that don't support them!&lt;/p&gt;

&lt;p&gt;For buttons, instead of using a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and having to add &lt;code&gt;tabindex="0"&lt;/code&gt;, handlers for keyboard interactions etc., &lt;a href="https://dev.to/inhuofficial/they-just-won-t-learn-a-button-is-a-lt-button-gt-accessibility-rants-k1b"&gt;just use a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thousands of developers have done most of the hard work for you. &lt;/p&gt;

&lt;p&gt;So engage the principles of sloth, be lazy, use what others have done before you so you have to work less!&lt;/p&gt;

&lt;p&gt;The only time you should be diligent (the opposite of sloth!) is ensuring that you apply accessible principles consistently, but there are &lt;a href="https://www.a11yproject.com/checklist/"&gt;checklists for that sort of thing&lt;/a&gt; to make life easy so you don't have to exert too much effort!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#father-forgive-me-for-i-have-sinned-and-will-continue-to"&gt;
  &lt;/a&gt;
  Father, forgive me for I have sinned! (and will continue to)
&lt;/h2&gt;

&lt;p&gt;This was a silly article (and I really had to stretch on a couple of the sins!), but with a serious message.&lt;/p&gt;

&lt;p&gt;You can make accessibility &lt;strong&gt;work for you&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Remember that making things that are accessible benefits you as much as it does everyone else, you can do it for selfish reasons and still do some good!&lt;/p&gt;

&lt;p&gt;So go on, be a devil, put accessibility as your top priority and make it part of your MVP today!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#one-final-bit-of-evil-"&gt;
  &lt;/a&gt;
  One final bit of evil üëø!
&lt;/h3&gt;

&lt;p&gt;So this article can use the JavaScript tag (so people actually see it), here is a JS snippet!üòã&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;evilWin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>a11y</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Introduction to AWS CloudFormation üìú</title>
      <author>Anuj Bansal</author>
      <pubDate>Mon, 30 Aug 2021 13:56:09 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-aws-cloudformation-4po2</link>
      <guid>https://dev.to/aws-builders/introduction-to-aws-cloudformation-4po2</guid>
      <description>&lt;p&gt;Deploying more than just a handful of services on AWS and setting each one up manually can get quite tedious. Having to configure each AWS resource by hand also leaves you at a much higher risk of making errors or introducing inconsistencies.&lt;/p&gt;

&lt;p&gt;Enter AWS CloudFormation.&lt;/p&gt;

&lt;p&gt;CloudFormation is a service that provides an easy way to create and manage a collection of AWS resources in a controlled and predictable way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-aws-cloudformation-work"&gt;
  &lt;/a&gt;
  How does AWS CloudFormation work?
&lt;/h2&gt;

&lt;p&gt;The key concepts in CloudFormation are templates, stacks, and change sets.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Template:&lt;/strong&gt; A template is a description of your infrastructure, written in JSON or YAML, that can be interpreted by CloudFormation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Stack:&lt;/strong&gt; Infrastructure created by CloudFormation using a template is known as a stack.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Change Set:&lt;/strong&gt; A summary of proposed changes to your stack that will allow you to see how those changes might impact your existing resources before implementing them&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first thing you do is to create a CloudFormation template in JSON or YAML format.&lt;/p&gt;

&lt;p&gt;You then deploy the template using the CloudFormation console, API, or AWS CLI. CloudFormation provisions and configures resources by making calls to the AWS services that are described in your template.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dZbHFsEa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630061730047/_VLhDFzO7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dZbHFsEa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630061730047/_VLhDFzO7.png" alt="Screenshot 2021-08-27 at 4.20.14 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After all the resources have been created, CloudFormation reports that your stack has been created. If stack creation fails, CloudFormation rolls back your changes by deleting the resources that it created.&lt;/p&gt;

&lt;p&gt;To update a stack, create a change set by submitting a modified version of the original stack template, different input parameter values, or both. CloudFormation compares the modified template with the original template and generates a change set. You can then view the changes that will be deployed before you decide to execute the change.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BD_nlTAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630061748879/gtgSI8Cf8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BD_nlTAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630061748879/gtgSI8Cf8.png" alt="Screenshot 2021-08-27 at 4.18.09 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#template-basics"&gt;
  &lt;/a&gt;
  Template Basics
&lt;/h2&gt;

&lt;p&gt;The template can consist of the following sections:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Format Version:&lt;/strong&gt; The AWS CloudFormation template version that the template conforms to.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Description:&lt;/strong&gt; A text string that describes the template.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Metadata:&lt;/strong&gt; Arbitrary JSON or YAML objects that provide additional information about the template.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Parameters:&lt;/strong&gt; Values to pass to your template at runtime.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Rules:&lt;/strong&gt; Validates a parameter or a combination of parameters passed to a template during stack creation or stack update.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mappings:&lt;/strong&gt; A mapping of keys and associated values that you can use to specify conditional parameter values, similar to a lookup table.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Conditions:&lt;/strong&gt; Conditions that control whether certain resources are created or whether certain resource properties are assigned a value during stack creation or update.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Transform:&lt;/strong&gt; Set of macros to process your template. Basically creates a processed version of your template.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Resources:&lt;/strong&gt; AWS resources that you want to include in your stack.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Outputs:&lt;/strong&gt; Declares output values that you can import into other stacks, return in response (to describe stack calls), or view in the console.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is what a basic template looks like üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UPjIFacP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630061768889/EtshsE9jH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UPjIFacP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630061768889/EtshsE9jH.png" alt="Screenshot 2021-08-27 at 10.08.00 AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's go a bit more in-depth on some of the sections.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;p&gt;Parameters are used to customize a template with values. They give us the flexibility to change settings without having to modify the template code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ku3RgA53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630061782160/e6Cw6ltIGm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ku3RgA53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630061782160/e6Cw6ltIGm.png" alt="Screenshot 2021-08-27 at 12.38.02 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;p&gt;This is the bulk of the template. Here is where we define and configure the resources that CloudFormation will manage for us. When defining resources, you need to know about the type and that type‚Äôs properties.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---FakJ0Xg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630061816994/T44l8NEDN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---FakJ0Xg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630061816994/T44l8NEDN.png" alt="Screenshot 2021-08-27 at 12.38.59 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#outputs"&gt;
  &lt;/a&gt;
  Outputs
&lt;/h3&gt;

&lt;p&gt;These are like return values for the template. We use them to make it easy to find some of the resources that CloudFormation will create for us.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vpR82UjA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630061829480/EpSSoaMHGp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vpR82UjA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630061829480/EpSSoaMHGp.png" alt="Screenshot 2021-08-27 at 12.39.16 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intrinsic-functions"&gt;
  &lt;/a&gt;
  Intrinsic Functions
&lt;/h2&gt;

&lt;p&gt;CloudFormation has several intrinsic functions that you can use to refer to other resources and their properties. You can use them to assign values to properties that are not available until runtime.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Fn::Base64&lt;/strong&gt; - returns the Base64 representation of the input string&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fn::Cidr&lt;/strong&gt; - returns an array of CIDR address blocks&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Condition functions&lt;/strong&gt; - Used to conditionally create stack resources. These are Fn::And, Fn::Equals, Fn::If, Fn::Not and Fn::Or.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fn::FindInMap&lt;/strong&gt; - returns the value corresponding to keys in a two-level map that's declared in the Mappings section&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fn::GetAtt&lt;/strong&gt; - returns the value of an attribute from a resource in the template&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fn::GetAZs&lt;/strong&gt; - returns an array that lists Availability Zones for a specified region in alphabetical order&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fn::ImportValue&lt;/strong&gt; - returns the value of an output exported by another stack&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fn::Join&lt;/strong&gt; - appends a set of values into a single value, separated by the specified delimiter&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fn::Select&lt;/strong&gt; - returns a single object from a list of objects by index&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fn::Split&lt;/strong&gt; - split a string into a list of string values using a delimiter&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fn::Sub&lt;/strong&gt; - substitutes variables in an input string with values that you specify&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fn::Transform&lt;/strong&gt; - specifies a macro to perform custom processing on part of a stack template&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ref&lt;/strong&gt; - returns the value of the specified parameter or resource&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CloudFormation allows you to either use the full function name (Fn::Sub) or the short form (!Sub).&lt;/p&gt;

&lt;p&gt;This is what a sample template would look like with intrinsic functions üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;AWSTemplateFormatVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;2010-09-09'&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Creating&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;an&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;EC2&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;instance&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;using&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;security&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;group&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;that&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;has&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;already&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;been&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;created&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;or&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;new&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;security&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;group'&lt;/span&gt;

&lt;span class="na"&gt;Parameters&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;ExistingSecurityGroup&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
    &lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;An existing security group ID (optional).&lt;/span&gt;
    &lt;span class="na"&gt;Default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;NONE&lt;/span&gt;
    &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;String&lt;/span&gt;

&lt;span class="na"&gt;Conditions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;CreateNewSecurityGroup&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!Equals&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;!Ref&lt;/span&gt; &lt;span class="nv"&gt;ExistingSecurityGroup&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;NONE&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;Resources&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;MyInstance&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;AWS::EC2::Instance"&lt;/span&gt;
    &lt;span class="na"&gt;Properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
      &lt;span class="na"&gt;ImageId&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ami-0ff8a91507f77f867"&lt;/span&gt;
      &lt;span class="na"&gt;SecurityGroups&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!If&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;CreateNewSecurityGroup&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;!Ref&lt;/span&gt; &lt;span class="nv"&gt;NewSecurityGroup&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;!Ref&lt;/span&gt; &lt;span class="nv"&gt;ExistingSecurityGroup&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
            &lt;span class="na"&gt;Tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Name&lt;/span&gt;
                &lt;span class="na"&gt;Value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!Sub&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${AWS::StackName}-webserver'&lt;/span&gt;

  &lt;span class="na"&gt;NewSecurityGroup&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;AWS::EC2::SecurityGroup"&lt;/span&gt;
    &lt;span class="na"&gt;Condition&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CreateNewSecurityGroup&lt;/span&gt;
    &lt;span class="na"&gt;Properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;GroupDescription&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Enable HTTP access via port &lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;
      &lt;span class="na"&gt;SecurityGroupIngress&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;IpProtocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;tcp&lt;/span&gt;
          &lt;span class="na"&gt;FromPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;
          &lt;span class="na"&gt;ToPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;
          &lt;span class="na"&gt;CidrIp&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;0.0.0.0/0&lt;/span&gt;

&lt;span class="na"&gt;Outputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;SecurityGroupId&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;The group ID of the security group used.&lt;/span&gt;
    &lt;span class="na"&gt;Value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!If&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;CreateNewSecurityGroup&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;!Ref&lt;/span&gt; &lt;span class="nv"&gt;NewSecurityGroup&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;!Ref&lt;/span&gt; &lt;span class="nv"&gt;ExistingSecurityGroup&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;By leveraging an IaC tool such as CloudFormation, you can streamline the AWS deployment process. You can define your resource configurations once, then deploy them as many times as you need. You can manage anything from a single Amazon EC2 instance to a complex multi-tier multi-region application.&lt;/p&gt;

&lt;p&gt;Feel free to reach out to me on &lt;a href="https://twitter.com/anuj_bansal_"&gt;Twitter&lt;/a&gt;! üòä&lt;/p&gt;

</description>
      <category>aws</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Building Zero Trust with an API Gateway and Service Mesh</title>
      <author>Michael Bogan</author>
      <pubDate>Mon, 30 Aug 2021 13:38:04 +0000</pubDate>
      <link>https://dev.to/mbogan/building-zero-trust-with-an-api-gateway-and-service-mesh-35hg</link>
      <guid>https://dev.to/mbogan/building-zero-trust-with-an-api-gateway-and-service-mesh-35hg</guid>
      <description>&lt;p&gt;Building a stellar application that users will love consists of many different decisions, from UI design and color palettes to functionality and feature sets. Writing code that works is a creative process, but it‚Äôs only one part of the entire development process. Your app also needs to be secure‚Äînot just for the sake of your users, but also for the integrity of your business. Typical security measures when designing your software architecture include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Safe and well-tested authentication and authorization schemes&lt;/li&gt;
&lt;li&gt;The ability to control network traffic through firewalls and port monitoring&lt;/li&gt;
&lt;li&gt;Service and resource isolation, so that one server cannot access another&lt;/li&gt;
&lt;li&gt;Securing connections between services via SSL/HTTPS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Together, these practices form a philosophy known as &lt;a href="https://www.cloudflare.com/learning/security/glossary/what-is-zero-trust/"&gt;Zero Trust&lt;/a&gt;. A Zero Trust architecture is hyper-focused on locking down your application from any and all access. Services are inaccessible to one another by default. Then, over time, and based on need, services are granted access to communicate with one another. In short, services accept outside connections only when it‚Äôs necessary. Since the network of your application infrastructure is ‚Äúclosed‚Äù by default, this mitigates malicious access and unexpected events. &lt;/p&gt;

&lt;p&gt;In this post, we‚Äôll take a close look at how &lt;a href="https://konghq.com/kong/?utm_source=guest&amp;amp;utm_medium=devspotlight&amp;amp;utm_campaign=community"&gt;Kong Gateway&lt;/a&gt; and the &lt;a href="https://kuma.io/"&gt;Kuma service mesh&lt;/a&gt; fit into this design.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-you-should-consider-a-zero-trust-design"&gt;
  &lt;/a&gt;
  Why You Should Consider a Zero Trust Design
&lt;/h2&gt;

&lt;p&gt;Zero Trust doesn‚Äôt make your infrastructure fool-proof from attack, but it does reduce the attack vectors for outsiders. Whether you‚Äôre a massive enterprise company or a small startup, the security considerations are the same. You want your user data to be safe and secure as soon as it goes online.&lt;/p&gt;

&lt;p&gt;Zero Trust architecture requires developers to consider how services interact. For example, let's say Service A handles fetching data and Service B handles requesting data. Service A would need to have a specific endpoint and port open and available for communication with Service B (and only Service B). Zero Trust planning can appear to hinder productivity, even more so if you‚Äôre adding a new service or are unfamiliar with the DevOps necessary to grant access.&lt;/p&gt;

&lt;p&gt;However, no matter the perceived hassle of adopting this approach, the advantages far, &lt;em&gt;far _outweigh the time spent planning. It is _impossible&lt;/em&gt; to undo a security incident, and an incident results in reduced user confidence and stress on your teams to address the issue. We often hear stories of hackers gaining access to an outdated and unmanaged service, reaching production systems, or &lt;a href="https://www.zdnet.com/article/financial-apps-leak-425gb-in-company-data-through-open-database/"&gt;misconfigured databases for public access&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuring-kong-and-kuma-for-a-zero-trust-architecture"&gt;
  &lt;/a&gt;
  Configuring Kong and Kuma for a Zero Trust architecture
&lt;/h2&gt;

&lt;p&gt;If you configured your application as a group of microservices, you might feel a little overwhelmed with adopting network and policy settings consistent with a Zero Trust philosophy. To develop a set of consistent policies, you‚Äôll want to make use of a &lt;a href="https://konghq.com/learning-center/service-mesh/what-is-a-service-mesh/?utm_source=guest&amp;amp;utm_medium=devspotlight&amp;amp;utm_campaign=community"&gt;service mesh&lt;/a&gt; like Kuma. A service mesh is a system that controls how different services share data. It‚Äôs responsible for handling network traffic, network policies, and observability for your microservices.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YLPiZbth--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nb3oxi6dc50fwtjprcfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YLPiZbth--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nb3oxi6dc50fwtjprcfl.png" alt="kong1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For communicating with the outside world (such as your users), you‚Äôll want to set up an &lt;a href="https://konghq.com/learning-center/api-gateway/?utm_source=guest&amp;amp;utm_medium=devspotlight&amp;amp;utm_campaign=community"&gt;API gateway&lt;/a&gt; like Kong Gateway. Kong acts as a frontend service provider for access to all of your internal services. Kong routes HTTP requests made to an endpoint to a specific service.  &lt;/p&gt;

&lt;p&gt;Some of the policies and functionality Kong and Kuma support include the following:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#full-traffic-encryption"&gt;
  &lt;/a&gt;
  Full Traffic Encryption
&lt;/h3&gt;

&lt;p&gt;You may know how important &lt;a href="https://en.wikipedia.org/wiki/HTTPS"&gt;HTTPS&lt;/a&gt; is and how it‚Äôs an essential step to securing traffic from outside interference. Typically, you would set this up via an SSL certificate. That‚Äôs a great first step, but there are plenty of other configurations to bring more protection.&lt;/p&gt;

&lt;p&gt;For example, &lt;a href="https://docs.konghq.com/kubernetes-ingress-controller/1.3.x/guides/configuring-https-redirect/#documentation"&gt;with several lines of YAML&lt;/a&gt;, Kong can force all HTTP traffic to be encrypted as HTTPS. Doing so is important because it protects users from inadvertently making insecure requests. Furthermore, SSL certificates need to be renewed and kept up to date; the average certificate validity ranges from 90 days to a year. Kong also comes with a &lt;a href="https://docs.konghq.com/kubernetes-ingress-controller/1.3.x/guides/cert-manager/"&gt;certificate manager&lt;/a&gt;, which will automatically renew certificates so that they never expire. To go even further, Kong also supports &lt;a href="https://konghq.com/blog/tcp-stream-support-kong/?utm_source=guest&amp;amp;utm_medium=devspotlight&amp;amp;utm_campaign=community"&gt;encrypting outbound TLS/TCP traffic&lt;/a&gt;. These protocols exist outside the well-known HTTP/S system and are responsible for handling email, file transfers, SSH, and more.&lt;/p&gt;

&lt;p&gt;Kuma, for its part, supports &lt;a href="https://kuma.io/docs/1.2.2/policies/mutual-tls/"&gt;Mutual TLS&lt;/a&gt; (mTLS), a policy that verifies the validity of a service through sharing private keys. mTLS is used to ensure the legitimate identity of users, devices, and servers. Kuma‚Äôs documentation on &lt;a href="https://kuma.io/docs/1.2.2/security/certificates/"&gt;securing service communication with Kuma&lt;/a&gt; provides more details on mTLS and other security policies. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#observability-logging-monitoring-and-reporting-on-traffic"&gt;
  &lt;/a&gt;
  Observability: Logging, Monitoring, and Reporting on Traffic
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://konghq.com/blog/observability-kubernetes-kong/?utm_source=guest&amp;amp;utm_medium=devspotlight&amp;amp;utm_campaign=community"&gt;Observability&lt;/a&gt; is a critical practice. Tracking and visualizing the behaviors of your application can help you get a better understanding of how your application performs in production. In a Zero Trust context, observability is often considered the foundation of services and networks. At a minimum, you would need to make sure that you are collecting traffic logs to verify and test your assumptions about the security of your network. You also need to make sure that the data you collect is stored securely, like any other piece of critical information.&lt;/p&gt;

&lt;p&gt;To help with this, Kong has &lt;a href="https://docs.konghq.com/hub/"&gt;several plugins&lt;/a&gt; that support analytics and monitoring. Many of these come with their own API endpoints, so you can potentially automate their behaviors. &lt;/p&gt;

&lt;p&gt;More specifically, Kuma provides a &lt;a href="https://kuma.io/docs/1.2.3/policies/traffic-log/"&gt;Traffic Log&lt;/a&gt; policy. This policy allows you to define how logs are collected and allows for routing different sources of traffic data to different destinations. You can create a unified data capturing system that‚Äôs still flexible enough to accommodate any variances. For example, you might want your internal application logs to be aggregated in some long-term archive database while your external user-facing service logs are sent to somewhere more readily accessible. &lt;/p&gt;

&lt;p&gt;Zero Trust architecture isn‚Äôt about mandating a ‚Äúone-size-fits-all‚Äù approach to security solutions. Rather, it starts with simple statements. For example, ‚ÄúAll traffic should be captured, stored, and able to be queried.‚Äù It then implements solutions that meet those needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#service-isolation"&gt;
  &lt;/a&gt;
  Service Isolation
&lt;/h3&gt;

&lt;p&gt;Isolating services from one another is critical for ensuring that security issues on one server do not affect another. You may have some degree of isolation in place, even if you call it redundancy. If a service fails and cannot handle requests, you should have a plan for either queuing work or load balancing to another healthy service. Service isolation in a Zero Trust architecture is not quite the same concept. Still, the important takeaway is that a security incident on one machine should not grant access to any other machine on your network. Think of it like the flu: You want to isolate the compromised service to mitigate the spread.&lt;/p&gt;

&lt;p&gt;Kong's &lt;a href="https://konghq.com/solutions/kubernetes-ingress/?utm_source=guest&amp;amp;utm_medium=devspotlight&amp;amp;utm_campaign=community"&gt;Ingress controller&lt;/a&gt; provides granular traffic management. It builds on top of Kubernetes‚Äô own Ingress policies, with a lot of syntactic sugar and automation provided. It requires little to no extra configuration. Similarly, Kuma offers &lt;a href="https://kuma.io/docs/1.2.3/policies/traffic-permissions/"&gt;Traffic Permissions&lt;/a&gt; policies to define permissible traffic. You can think of this as a souped-up firewall: You can restrict traffic sources that come from a specific service (based on its name, not IP address or ports). You can also route requests to specific endpoint destinations. Any unknown source or destination is not allowed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-more-information"&gt;
  &lt;/a&gt;
  Getting more information
&lt;/h2&gt;

&lt;p&gt;Building a Zero Trust architecture is about more than just protecting yourself; it‚Äôs also a global issue. For example, in the United States, &lt;a href="https://konghq.com/blog/americas-cybersecurity-mandate-zero-trust-architecture/?utm_source=guest&amp;amp;utm_medium=devspotlight&amp;amp;utm_campaign=community"&gt;the Cybersecurity mandate&lt;/a&gt; is a recent executive order that advocates for increased infrastructure protection from hacking and other unauthorized access. It shows that the philosophies of a Zero Trust design extend far beyond tech and have broader concerns. &lt;/p&gt;

&lt;p&gt;If you‚Äôd like to try out Kong and Kuma, they have a &lt;a href="https://docs.konghq.com/getting-started-guide/2.4.x/overview/"&gt;quick start guide&lt;/a&gt;. For more on Zero Trust architecture, check out Kong's recent virtual event, &lt;a href="https://konghq.com/events/destination-zero-trust/?utm_source=guest&amp;amp;utm_medium=devspotlight&amp;amp;utm_campaign=community"&gt;Destination: Zero-Trust&lt;/a&gt;. The sessions are online for your convenient viewing.&lt;/p&gt;

&lt;p&gt;You may also be interested in learning how Kong and Kuma can help you remove complex and expensive load balancers with their new &lt;a href="https://thenewstack.io/zerolb-a-new-decentralized-pattern-for-load-balancing"&gt;ZeroLB architecture pattern&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>security</category>
      <category>webdev</category>
      <category>architecture</category>
    </item>
    <item>
      <title>See how Java frameworks like Spring work with your code</title>
      <author>Kevin Gilpin</author>
      <pubDate>Mon, 30 Aug 2021 13:01:29 +0000</pubDate>
      <link>https://dev.to/appland/see-how-java-frameworks-like-spring-work-with-your-code-1acl</link>
      <guid>https://dev.to/appland/see-how-java-frameworks-like-spring-work-with-your-code-1acl</guid>
      <description>&lt;p&gt;Spring + Your Code = ‚ù§Ô∏è Most of the time!&lt;/p&gt;

&lt;p&gt;The one criticism that sticks to the Spring framework (and other big web frameworks, to be honest), is that Spring does so much for you it can be hard to understand what's really going on. Sometimes, we can just follow the doc and tutorials and watch the magic happen. But sometimes, we really need &lt;br&gt;
to understand how Spring, and related packages, actually work. And even more importantly, how they work with &lt;strong&gt;our code&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You're already familiar with using debuggers - and Java has an excellent debugger compared to some other languages. When you use a debugger, you take an "inside-out" approach to troubleshooting. You choose a point in your code where you want to start, and then you can explore outwards from&lt;br&gt;
there. But while you can get a lot of detailed information that way, it's hard to build an understanding of what's going on overall in the codebase.&lt;/p&gt;

&lt;p&gt;To build that kind of high-level understanding, you need more of an "outside-in" approach. Here's a cookbook you can follow to see how your code works with Spring and other Java libraries, starting from the widest scope and narrowing in on details. To do that, I will show you how to use an open&lt;br&gt;
source tool called &lt;a href="https://appland.com/products/appmap"&gt;AppMap&lt;/a&gt;. AppMap records the runtime behavior of your code and stores it as JSON files called AppMaps. Then you can open AppMaps files in your code editor (&lt;a href="https://marketplace.visualstudio.com/items?itemName=appland.appmap"&gt;VSCode&lt;/a&gt; or &lt;a href="https://plugins.jetbrains.com/plugin/16701-appmap"&gt;IntelliJ&lt;/a&gt;) and view and search dependency maps and execution trace diagrams. &lt;/p&gt;

&lt;p&gt;Here's how you use it:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-install-the-appmapjava-agent"&gt;
  &lt;/a&gt;
  1. Install the appmap-java agent
&lt;/h3&gt;

&lt;p&gt;Follow the &lt;a href="https://appland.com/docs/quickstart/"&gt;quick start guide for VSCode or IntelliJ&lt;/a&gt;. &lt;br&gt;
Here's a quick checklist:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add the appmap Java agent to your Maven or Gradle configuration - or just download the JAR file from &lt;a href="https://github.com/applandinc/appmap-java/releases"&gt;https://github.com/applandinc/appmap-java/releases&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;appmap.yml&lt;/code&gt; and configure your project name and primary package names.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#2-add-additional-package-names-such-as-raw-orgspringframeworkweb-endraw-to-raw-appmapyml-endraw-"&gt;
  &lt;/a&gt;
  2. Add additional package names, such as &lt;code&gt;org.springframework.web&lt;/code&gt;, to &lt;code&gt;appmap.yml&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Here's an example &lt;a href="https://github.com/land-of-apps/spring-petclinic/tree/appmap-e2e/appmap.yml"&gt;&lt;code&gt;appmap.yml&lt;/code&gt;&lt;/a&gt; that I use with my fork of the Spring Pet Clinic.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-record-the-appmap-of-code-execution"&gt;
  &lt;/a&gt;
  3. Record the AppMap of code execution
&lt;/h3&gt;

&lt;p&gt;You have several choices of how to record your code:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Option 1: Test case(s)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have JUnit or TestNG tests that cover your app, run your tests with the AppMap Gradle or Maven integration enabled.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Option 2: Record user actions and API requests&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you don't have a test that does what you need, you can use your app and get an AppMap of all the actions you perform. This is called ‚Äúremote recording,‚Äù and to use it, you run your web server with the flag &lt;code&gt;-javaagent:appmap.jar&lt;/code&gt;. If your app is an API server, run the server and send API requests. Either way, you'll get an &lt;code&gt;appmap.json&lt;/code&gt; file when the server exits.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Option 3: Record the entire server run, including startup and shutdown&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The AppMap Java agent supports a System property &lt;code&gt;appmap.recording.auto&lt;/code&gt;. If you set this property&lt;br&gt;
to true, the server process is recorded from start to finish, and the results are written to a timestamped &lt;code&gt;appmap.json&lt;/code&gt; file when the process exits.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-view-the-diagrams"&gt;
  &lt;/a&gt;
  4. View the diagrams
&lt;/h3&gt;

&lt;p&gt;The AppMap extension for VSCode and IntelliJ enables you to open any &lt;code&gt;*.appmap.json&lt;/code&gt; and explore it visually. To open AppMaps in the code editor, open the AppMaps ‚ÄúTool Window‚Äù (IntelliJ) or AppMaps sidebar (VSCode). &lt;/p&gt;

&lt;p&gt;Click on an AppMap to view the Dependency map in your code editor window. From there, you can search,&lt;br&gt;
browse, and drill down into the Trace view.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#demo-pet-clinic-orgspringframeworkweb"&gt;
  &lt;/a&gt;
  Demo - Pet Clinic + org.springframework.web
&lt;/h2&gt;

&lt;p&gt;As I indicated above, AppMap is a flexible tool and there are several ways to use it. Let‚Äôs start with a fairly simple, but quite useful and illustrative example.&lt;/p&gt;

&lt;p&gt;A Spring Controller is a pretty complex mixture of methods and annotations - even the simple Pet Clinic ‚ÄúOwnerController‚Äù has at least 5 different annotations used in multiple different ways. Code like this is powerful, but unlike ‚Äúnormal‚Äù procedural or functional code, there‚Äôs no information in the code about how the functions are used, how they fit together, or which ones are used in a particular use case.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Controller&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OwnerController&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="no"&gt;VIEWS_OWNER_CREATE_OR_UPDATE_FORM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"owners/createOrUpdateOwnerForm"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;OwnerRepository&lt;/span&gt; &lt;span class="n"&gt;owners&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;VisitRepository&lt;/span&gt; &lt;span class="n"&gt;visits&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;OwnerController&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;OwnerRepository&lt;/span&gt; &lt;span class="n"&gt;clinicService&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;VisitRepository&lt;/span&gt; &lt;span class="n"&gt;visits&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;owners&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clinicService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;visits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;visits&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@InitBinder&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setAllowedFields&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;WebDataBinder&lt;/span&gt; &lt;span class="n"&gt;dataBinder&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;dataBinder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setDisallowedFields&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@GetMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/owners/new"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;initCreationForm&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Owner&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Owner&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"owner"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;VIEWS_OWNER_CREATE_OR_UPDATE_FORM&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@PostMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/owners/new"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;processCreationForm&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@Valid&lt;/span&gt; &lt;span class="nc"&gt;Owner&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;BindingResult&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hasErrors&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;VIEWS_OWNER_CREATE_OR_UPDATE_FORM&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;owners&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"redirect:/owners/"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getId&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@GetMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/owners/find"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;initFindForm&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"owner"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Owner&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"owners/findOwners"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;org.springframework.web&lt;/code&gt; is a package that orchestrates these snippets of Java code based on their annotations. &lt;/p&gt;

&lt;p&gt;To get a map of how an Owner request works, I‚Äôll run the Pet Clinic with remote recording enabled, then use the AppMap extension for IntelliJ to create a recording of a web request. This is a bit easier to watch than to explain, so check out the video above for a walkthrough of all this.&lt;/p&gt;

&lt;p&gt;To recreate this yourself, check out the appmap-e2e branch of&lt;br&gt;
&lt;a href="https://github.com/land-of-apps/spring-petclinic"&gt;https://github.com/land-of-apps/spring-petclinic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To record and review your own runtime code maps directly in your code editor, download the free AppMap plugin for JetBrains here: &lt;a href="https://plugins.jetbrains.com/plugin/16701-appmap"&gt;https://plugins.jetbrains.com/plugin/16701-appmap&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>debugging</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Everything you need to know about OpenTelemetry Java auto-instrumentation üë®üèΩ‚Äçüíª</title>
      <author>Ankit Anand ‚ú®</author>
      <pubDate>Mon, 30 Aug 2021 12:59:24 +0000</pubDate>
      <link>https://dev.to/signoz/everything-you-need-to-know-about-opentelemetry-java-auto-instrumentation-39d9</link>
      <guid>https://dev.to/signoz/everything-you-need-to-know-about-opentelemetry-java-auto-instrumentation-39d9</guid>
      <description>&lt;p&gt;OpenTelemetry auto instrumentation libraries are the best option for someone who doesn't want to modify their application code for generating telemetry data(logs, metrics, and traces). In this article, let's see what options does OpenTelemetry provides for auto-instrumenting your Java apps.&lt;/p&gt;

&lt;p&gt;OpenTelemetry is a set of tools, APIs, and SDKs which enables you to create and manage the telemetry data for your services and applications.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What is instrumentation?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Instrumentation means the ability to measure the performance and to diagnose errors in your application code. Instrumenting a piece of software means generating relevant data like logs, metrics, and traces to gauge the software's performance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-is-opentelemetry-java-auto-instrumentation"&gt;
  &lt;/a&gt;
  What is OpenTelemetry Java auto instrumentation?
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry provides three repositories to instrument applications. The¬†&lt;a href="https://github.com/open-telemetry/opentelemetry-java-instrumentation" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;opentelemetry-java-instrumentation&lt;/b&gt;&lt;/a&gt;¬†repo contains the code for auto-instrumentation of Java applications.&lt;/p&gt;

&lt;p&gt;The other two repos are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/open-telemetry/opentelemetry-java" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;opentelemetry-java&lt;/b&gt;&lt;/a&gt;¬†- contains components for manual instrumentation as well as the API and SDK.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/open-telemetry/opentelemetry-java-contrib" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;opentelemetry-java-contrib&lt;/b&gt;&lt;/a&gt;¬†- contains libraries for standalone utilities which don't fit the scope of the other two projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The OpenTelemetry Java auto instrumentation repo provides a Java JAR agent that can be downloaded and attached to Java 8+ applications. The agent recognizes popular libraries and frameworks and injects bytecode dynamically to instrument the code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-to-autoinstrument-your-java-application"&gt;
  &lt;/a&gt;
  Steps to auto-instrument your Java application
&lt;/h2&gt;

&lt;p&gt;The auto-instrumentation of Java applications by OpenTelemetry is achieved with the help of Java agents. The JVM provides a standard way for modifying code at runtime by using a java agent. Java agents come as part of the Java instrumentation API. It basically allows you to modify code at runtime without touching your code.&lt;/p&gt;

&lt;p&gt;You can attach the Java agent to your application through your terminal (-javaagent). Java agents are fundamentally java classes following certain conventions. When the agents are attached to the application at runtime, JVM makes sure to execute it to modify what it specifies.&lt;/p&gt;

&lt;p&gt;Now that you know how Java agent works, let's see how to use the Java agent provided by OpenTelemetry for auto-instrumentation.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download the¬†&lt;a href="https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent-all.jar"&gt;latest Java Jar agent&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Prepare environment variables needed for the Java agent. The common ones include a service name for the service being monitored, traces and metrics exporter format specifier, and an endpoint for collecting the captured data.&lt;/li&gt;
&lt;li&gt;You need to export the captured data to an endpoint. You can use a full-stack open-source observability tool like¬†&lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt;¬†as a backend to capture the data.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Examples of some of the environment variables to take care of:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;OTEL_TRACES_EXPORTER=otlp
OTEL_METRICS_EXPORTER=none
OTEL_EXPORTER_OTLP_ENDPOINT=&amp;lt;IP of SigNoz Backend&amp;gt;:4317
OTEL_RESOURCE_ATTRIBUTES="service.name=SERVICE_NAME"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Along with these environment variables, you need to attached the Java JAR agent downloaded. If you're running the app from your terminal, you can use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java -javaagent:/path/to/opentelemetry-javaagent-all.jar -jar target/*.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The path needs to be replaced with the address of the location where you have downloaded the saved the Java agent file. So the final command from terminal will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;OTEL_METRICS_EXPORTER=none
OTEL_EXPORTER_OTLP_ENDPOINT="http://&amp;lt;IP of SigNoz&amp;gt;:4317"
OTEL_RESOURCE_ATTRIBUTES=service.name=javaApp
java -javaagent:/Users/Downloads/to/opentelemetry-javaagent-all.jar -jar target/*.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to read how to auto-instrument a sample Spring Boot application, and get the data reported with SigNoz, check out this article üëá &lt;br&gt;&lt;br&gt;
&lt;a href="https://signoz.io/blog/opentelemetry-spring-boot/"&gt;Monitor your Spring Boot application with OpenTelemetry and SigNoz&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>monitoring</category>
      <category>java</category>
      <category>opentelemetry</category>
    </item>
    <item>
      <title>
What is Event loop in JavaScript?</title>
      <author>Shamanta Sristy</author>
      <pubDate>Mon, 30 Aug 2021 12:55:30 +0000</pubDate>
      <link>https://dev.to/shamantasristy/what-is-event-loop-in-javascript-34a5</link>
      <guid>https://dev.to/shamantasristy/what-is-event-loop-in-javascript-34a5</guid>
      <description>&lt;p&gt;Let's look into JavaScript Event loop from a different angle. Sounds interesting, right? It is! So, sit tight and let's dive into it!&lt;br&gt;
The concept of event loop is very simple. But in order to understand that,  first we need to be clear about some concepts related to event loop. &lt;/p&gt;

&lt;p&gt;Inside &lt;strong&gt;Browser&lt;/strong&gt;, there is a Javascript engine (we are considering &lt;strong&gt;V8&lt;/strong&gt; for chrome.) and an environment to run javascript properly. Javascript engine has two parts, &lt;strong&gt;Heap&lt;/strong&gt; and &lt;strong&gt;Call Stack&lt;/strong&gt;. And the engine has some assistant named &lt;strong&gt;Web APIs&lt;/strong&gt; and &lt;strong&gt;Callback Queue&lt;/strong&gt;. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#heaps"&gt;
  &lt;/a&gt;
  Heaps
&lt;/h2&gt;

&lt;p&gt;It's an unstructured memory block. Our code's memory allocation happens here. As a programmer we don't have to worry much about heaps.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#call-stack"&gt;
  &lt;/a&gt;
  Call Stack
&lt;/h2&gt;

&lt;p&gt;We can consider Call Stack as a kitchen where all our code executed or cooked. Whenever we  try to run a piece of code, it goes to call stack first and then executed. It works in &lt;strong&gt;LIFO&lt;/strong&gt; style. That is &lt;strong&gt;L&lt;/strong&gt;ast  &lt;strong&gt;I&lt;/strong&gt;n &lt;strong&gt;F&lt;/strong&gt;irst &lt;strong&gt;O&lt;/strong&gt;ut.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const lunch = () =&amp;gt; console.log("It's time for lunch!");

const dinner = () =&amp;gt; console.log("It's time for dinner!");

const breakfast = () =&amp;gt; {
  console.log("Time to breakfast!");
  setTimeout(lunch, 3000);
  dinner();
};

breakfast();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we run the code above, The global execution context &lt;em&gt;main()&lt;/em&gt; runs on the browser, and JS engine will start to read the code from the first line and will search for tasks. On the last line, one function is called. So, this function will go to the Call Stack and will execute the tasks. First it will print &lt;em&gt;Time to breakfast!&lt;/em&gt; , then goes to the next line, where we have an asynchronous block of code.&lt;br&gt;
 As we know, JavaScript is synchronous and single-threaded language, this asynchronous block of code goes to the call stack and suddenly pops out. Here JS engine takes help from it's assistant, &lt;strong&gt;Web API&lt;/strong&gt;. The setTimeout() waits on the Web API and after it's timer runs out (In this case,  3 seconds), After 3 seconds the callback function goes to the &lt;strong&gt;Callback Queue&lt;/strong&gt; and waits for Call stack to be free. By this time, Call stack runs the other piece of codes. Prints&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;It's time for dinner!&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-apis"&gt;
  &lt;/a&gt;
  Web APIs
&lt;/h2&gt;

&lt;p&gt;Web API works as JS engines assistant. When JS engine have to deal with asynchronous code, it takes the help of Web API. Web API handles the blocking behavior of JavaScript code. &lt;br&gt;
In this case, from our code above, we can say Web API will take the callback function&lt;br&gt;
&lt;br&gt;
  &lt;code&gt;setTimeout(lunch, 3000);&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
  , run it's timer,  and pass it to Callback Queue after 3 seconds.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#callback-queue"&gt;
  &lt;/a&gt;
  Callback Queue
&lt;/h2&gt;

&lt;p&gt;It's a guard who monitors the stack of asynchronous callback functions who just completed the task of waiting and passed the gate of Web API. Callback Queue works using &lt;strong&gt;FIFO&lt;/strong&gt; (&lt;strong&gt;F&lt;/strong&gt;irst  &lt;strong&gt;I&lt;/strong&gt;n &lt;strong&gt;F&lt;/strong&gt;irst &lt;strong&gt;O&lt;/strong&gt;ut ) method. And now, they waits here to go back to Call Stack. But how will Call Stack know that there's some callback functions waiting in Callback Queue? &lt;br&gt;
Here comes the star, &lt;strong&gt;Event Loop&lt;/strong&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#event-loop"&gt;
  &lt;/a&gt;
  Event Loop
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Event loop&lt;/em&gt; is just a guardian who keeps a good &lt;strong&gt;communication&lt;/strong&gt; with &lt;strong&gt;Call Stack&lt;/strong&gt; and &lt;strong&gt;Callback Queue&lt;/strong&gt;. It checks if the call stack is free, then lets know the callback queue. Then Callback queue passes the callback function to Call stack to be executed. When all the callback functions are executed, the call stack is out and global execution context is free. &lt;/p&gt;

&lt;p&gt;See! it was not complex at all! üòÑ&lt;br&gt;
Thanks for reading.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>eventloop</category>
    </item>
    <item>
      <title>EmbedIO como deserializar Json camelCase para objetos em PascalCase üò∏</title>
      <author>Guilherme FGR</author>
      <pubDate>Mon, 30 Aug 2021 12:43:42 +0000</pubDate>
      <link>https://dev.to/guifgr/embedio-como-deserializar-json-camelcase-para-objetos-em-pascalcase-3mfm</link>
      <guid>https://dev.to/guifgr/embedio-como-deserializar-json-camelcase-para-objetos-em-pascalcase-3mfm</guid>
      <description>&lt;p&gt;Durante a realiza√ß√£o de um projeto na &lt;a href="https://wlssistemas.com.br/"&gt;empresa&lt;/a&gt; onde trabalhava durante a publica√ß√£o dessa publica√ß√£o, encontramos a necessidade de criar uma &lt;strong&gt;API&lt;/strong&gt; dentro de um projeto &lt;strong&gt;Windows Forms&lt;/strong&gt;, assim dando a possibilidade do navegador acessar o app &lt;strong&gt;desktop&lt;/strong&gt; para configur√°-lo e termos uma comunica√ß√£o entre ambos.&lt;/p&gt;

&lt;p&gt;Nesse contexto utilizamos o EmbedIO para solucionarmos esse problema e assim criarmos essa intera√ß√£o, entretanto, trabalhamos com objetos Json em camelCase pela &lt;a href="https://google.github.io/styleguide/jsoncstyleguide.xml?showone=Property_Name_Format#Property_Name_Format"&gt;conven√ß√£o da Google.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O EmbendIO ainda n√£o suporta a mesma configura√ß√£o de serializa√ß√£o e deserializa√ß√£o do &lt;a href="https://www.newtonsoft.com/json"&gt;Newtonsoft&lt;/a&gt; sendo necess√°ria a utiliza√ß√£o do mesmo para podermos fazer essa configura√ß√£o do &lt;a href="https://unosquare.github.io/embedio.html"&gt;EmbedIO.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Essa necessidade de usar o Newtonsoft veio ap√≥s encontrar a seguinte &lt;a href="https://github.com/unosquare/swan/issues/240"&gt;issue&lt;/a&gt; no git deles, sendo assim tive que buscar por meios de como fazer e sendo um dev est√°giario ainda sou muito apegado a buscar solu√ß√µes no Google tendo a certeza que vou encontrar tudo, por√©m pela primeira vez na minha vida eu n√£o encontrei nada. üòø&lt;/p&gt;

&lt;p&gt;Ap√≥s algumas tentativas e erro encontrei uma solu√ß√£o que √© simples e pr√°tica e pode ser usada como um helper para uma aplica√ß√£o que ser√° usada multiplas vezes.&lt;/p&gt;

&lt;p&gt;No site do EmbedIO n√£o √© mencionado que voc√™ pode trazer o body de uma requisi√ß√£o como uma string da seguinte forma: &lt;br&gt;
&lt;code&gt;var bodyAsString = await HttpContext.GetRequestBodyAsStringAsync();&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Feito isso agora temos uma string que √© f√°cilmente deserializada pelo Newtonsoft:&lt;br&gt;
&lt;code&gt;var config = Json.Deserialize&amp;lt;ConfigurationsRequestDto&amp;gt;(bodyAsString, JsonSerializerCase.CamelCase);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Passando o &lt;code&gt;JsonSerializerCase.CamelCase&lt;/code&gt; como par√¢metro e assim resolvendo o mist√©rio do t√≠tulo! üòº&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>csharp</category>
      <category>webdev</category>
    </item>
    <item>
      <title>MarkdownX Editor üéâ</title>
      <author>Bobby Iliev</author>
      <pubDate>Mon, 30 Aug 2021 12:41:35 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/markdownx-editor-27bg</link>
      <guid>https://dev.to/bobbyiliev/markdownx-editor-27bg</guid>
      <description>&lt;p&gt;Our MarkdownX editor is officially live and available on the DevDojo. It's also available for you to use in your &lt;a href="https://tallstack.dev"&gt;TallStack&lt;/a&gt; applications üçª.&lt;/p&gt;

&lt;p&gt;If this is your first time hearing about the &lt;a href="https://devdojo.com/markdownx"&gt;MarkdownX Editor&lt;/a&gt;, continue reading to learn more about how it can make writing in Markdown easier and more fun than ever before.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MarkdownX become top 4 product of the day on &lt;a href="https://www.producthunt.com/posts/markdownx"&gt;ProductHunt&lt;/a&gt; üòª&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-is-markdownx"&gt;
  &lt;/a&gt;
  What is MarkdownX
&lt;/h2&gt;

&lt;p&gt;MarkdownX is like a &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element with super powers ‚ú®. It is a text editor with a beautiful interface that makes it easy for users to write in Markdown. The component has a pretty sweet dropdown that allows you to easily upload images, add lists, embed videos, and so much more!&lt;/p&gt;

&lt;p&gt;A month ago we posted a tweet about a new editor we were building and it got a pretty huge response with nearly 500 likes and 50 retweets ü§Ø&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/tnylea/status/1419059051430825986"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hzj9Pr_5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/august2021/tweet-md.png" alt="tweet-md.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That set things in motion and we started working on a version that could be used with any &lt;a href="https://tallstack.dev"&gt;Tallstack&lt;/a&gt; application. üôå.&lt;/p&gt;

&lt;p&gt;I'll show you the steps below üëá on how to install this in a new Tallstack app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-create-a-new-laravel-app"&gt;
  &lt;/a&gt;
  1. üîß Create a new Laravel App
&lt;/h2&gt;

&lt;p&gt;The first step is creating a new Laravel application. If you already have an existing Tallstack application, you can skip ahead to step 3.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;laravel new mdx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, I'll install a new laravel app in a folder named &lt;code&gt;mdx&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, go into that directory &lt;code&gt;cd mdx&lt;/code&gt;, and we can move to the next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-installing-the-tallstack-preset"&gt;
  &lt;/a&gt;
  2. üî© Installing the Tallstack Pre-set
&lt;/h2&gt;

&lt;p&gt;The Tallstack preset allows us to add &lt;a href="https://tailwindcss.com"&gt;TailwindCSS&lt;/a&gt;, &lt;a href="https://alpinejs.dev"&gt;Alpine&lt;/a&gt;, and &lt;a href="https://laravel-livewire.com"&gt;Livewire&lt;/a&gt; in our new application with a few simple commands. You can find that preset here: &lt;a href="https://github.com/laravel-frontend-presets/tall"&gt;https://github.com/laravel-frontend-presets/tall&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's run those commands in our new application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer require livewire/livewire laravel-frontend-presets/tall
php artisan ui tall
npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After we have run those commands, we should be able to visit our new site:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ewME1utI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/august2021/tallstack-preset.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ewME1utI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/august2021/tallstack-preset.png" alt="tallstack-preset.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And we should have a new &lt;a href="https://tallstack.dev"&gt;Tallstack&lt;/a&gt; application in front of us.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;note: if you get an application key error, you may also need to run &lt;code&gt;php artisan key:generate&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next up, we'll be moving the component files to our new application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-adding-the-markdownx-editor"&gt;
  &lt;/a&gt;
  3. üß© Adding the MarkdownX Editor
&lt;/h2&gt;

&lt;p&gt;Adding this component to your project is literally as easy as &lt;strong&gt;1&lt;/strong&gt;, &lt;strong&gt;2&lt;/strong&gt;, &lt;strong&gt;3&lt;/strong&gt;. Because that's how many files the MarkdownX editor includes. Here are those files:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Controller&lt;/strong&gt; - app/Http/Livewire/MarkdownX.php&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;View&lt;/strong&gt; - resources/views/livewire/markdown-x.blade.php&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Config&lt;/strong&gt; - config/markdownx.php&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After downloading a copy of the latest MarkdownX editor, you will need to move those files üëÜ to their appropriate location in your Laravel application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: make sure to run &lt;code&gt;php artisan storage:link&lt;/code&gt;, if you want to test out image uploading. The MarkdownX storage uses the local public disk by default, but you can change this in the config üòâ.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After you have done this, we are now ready to test it out in our new application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-out-the-editor"&gt;
  &lt;/a&gt;
  üß™ Test out the Editor
&lt;/h2&gt;

&lt;p&gt;To test the editor in our new app we are going to modify the welcome page located at &lt;code&gt;resources/views/welcome.blade.php&lt;/code&gt;, to look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@extends('layouts.app')

@section('content')
    &amp;lt;livewire:markdown-x /&amp;gt;
@endsection
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we visit our application homepage we'll see the editor in front of us ü§ò.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VIt-owNB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/august2021/markdown-x-editor.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VIt-owNB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/august2021/markdown-x-editor.png" alt="markdown-x-editor.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can now drag-and-drop images, add videos, lists, and a bunch of other cool things that make writing more fun and easier than ever before.&lt;/p&gt;

&lt;p&gt;Be sure to check out the official new landing page for &lt;a href="https://devdojo.com/markdownx"&gt;MarkdownX here&lt;/a&gt; and the &lt;a href="https://devdojo.com/markdownx"&gt;documentation here&lt;/a&gt;. I hope you find this component useful in your next project, and I hope you continue to build awesome stuff ü§ò. See you soon!&lt;/p&gt;

</description>
      <category>markdown</category>
      <category>laravel</category>
      <category>tailwindcss</category>
      <category>saas</category>
    </item>
  </channel>
</rss>
