<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Beautiful NPM Icon packages for your next web project</title>
      <author>Yeow Zi Qin</author>
      <pubDate>Fri, 09 Jul 2021 10:45:52 +0000</pubDate>
      <link>https://dev.to/ziqinyeow/beautiful-npm-icon-packages-for-your-next-web-project-5266</link>
      <guid>https://dev.to/ziqinyeow/beautiful-npm-icon-packages-for-your-next-web-project-5266</guid>
      <description>&lt;h2&gt;
  &lt;a href="#my-favourite"&gt;
  &lt;/a&gt;
  My Favourite
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;These are my favourite npm icon packages&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Icon pack&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;How to install&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://boxicons.com/"&gt;Boxicons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install boxicons --save&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://boxicons.com/usage/"&gt;Website&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://remixicon.com/"&gt;Remix Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install remixicon --save&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Remix-Design/RemixIcon"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://icons.modulz.app/"&gt;Radix Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install @modulz/radix-icons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/radix-ui/icons"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#recommended"&gt;
  &lt;/a&gt;
  Recommended
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;These are the recommended npm icon packages&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Icon pack&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;How to install&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://icons.coreui.io/icons/"&gt;CoreUI Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install @coreui/icons@next --save&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://icons.coreui.io/docs/getting-started/introduction/"&gt;Website&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://teenyicons.com/"&gt;Teenyicons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm i teenyicons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/teenyicons/teenyicons"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://icons.getbootstrap.com/"&gt;Bootstrap Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm i bootstrap-icons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://icons.getbootstrap.com/#install"&gt;Website&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://feathericons.com/"&gt;Feather Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install feather-icons --save&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/feathericons/feather"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://primer.style/octicons/"&gt;Octicons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install @primer/octicons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://primer.style/octicons/guidelines/usage"&gt;Website&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://ikonate.com/"&gt;Ikonate&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install ikonate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mikolajdobrucki/ikonate"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://css.gg/app"&gt;CSS.gg icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install css.gg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/astrit/css.gg"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://phosphoricons.com/"&gt;Phosphor Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm i phosphor-icons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/phosphor-icons/phosphor-icons"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;Hope you are getting excited!😎&lt;/p&gt;

&lt;p&gt;Further Research:&lt;br&gt;
&lt;a href="https://shapedfonts.com/iconclub/"&gt;ShapeFonts&lt;/a&gt;&lt;br&gt;
&lt;a href="https://wweb.dev/resources/free-icon-sets/"&gt;WWEB.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading, see you in the next post.&lt;/p&gt;

</description>
      <category>npm</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Reusable Collapsible Component with ReactJS</title>
      <author>Hugo Ferreira</author>
      <pubDate>Fri, 09 Jul 2021 10:35:04 +0000</pubDate>
      <link>https://dev.to/huferr/reusable-collapsible-component-with-reactjs-ao4</link>
      <guid>https://dev.to/huferr/reusable-collapsible-component-with-reactjs-ao4</guid>
      <description>&lt;p&gt;Welcome, here's a guide teaching you how to create a simple and useful Reusable Collapsible Component, with ReactJS.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Observation: I created this post considering that you know the basics of ReactJS. If you see anything wrong, please tell me!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can see it works at CodePen: &lt;a href="https://codepen.io/huferr/pen/NWjNLMy"&gt;https://codepen.io/huferr/pen/NWjNLMy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start by creating a functional component and call it &lt;code&gt;Collapsible&lt;/code&gt;. It will return some HTML elements, which will structure our layout.&lt;/p&gt;

&lt;p&gt;For this case, let's set:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;div&lt;/code&gt; element, which will keep all the elements bellow;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;button&lt;/code&gt; element, responsible for toggling the content visibility;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;div&lt;/code&gt; element, which will handle our content.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, to make this component &lt;strong&gt;reusable&lt;/strong&gt;, we have to pass some properties for it, to make this component accept data from outside, not having to change its structure every time. &lt;/p&gt;

&lt;p&gt;For this we'll set the &lt;em&gt;props: children&lt;/em&gt; and &lt;em&gt;label&lt;/em&gt;, by doing &lt;em&gt;props destructuring&lt;/em&gt;, it means you don't have to call "props.children" or "props.label" every time you want to use these props. You only have to pass the prop names inside a curly brackets in the function.&lt;/p&gt;

&lt;p&gt;Let's see what we've done so far:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./styles.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Collapsible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'toggle'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Collapsible&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OK, we have our button, that will make the content appear and disappear and we have our div with that content.&lt;/p&gt;

&lt;p&gt;First thing, to make the content toggle, we'll need to set a CSS class (.show) to style how it's going to appear on our screen, and an other class (.content) to make it disappear:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#686868&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.show&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the magic is on the &lt;code&gt;display&lt;/code&gt; property. When the div has the &lt;code&gt;.show&lt;/code&gt; class, the content will be displayed!&lt;/p&gt;

&lt;p&gt;Now, to make the toggle effect when click on the button, let's use the useState Hook! With this, let's set isOpen and setIsOpen, initializing with &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Obs.: Do it in the same Collapsible component.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./styles.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Collapsible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isOpen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsOpen&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good! Now, with the &lt;code&gt;onClick&lt;/code&gt; event in the button, let's pass a simple arrow function, setting the &lt;code&gt;isOpen&lt;/code&gt; true or false, according to its previous state (if &lt;code&gt;isOpen === false&lt;/code&gt;, set to &lt;code&gt;true&lt;/code&gt; and vice-versa), using &lt;strong&gt;!&lt;/strong&gt;, the logical "not" operator in javascript. See it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'toggle'&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsOpen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isOpen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, to binding this event with the content, let's use a ternary operator in the content div class. So, isOpen === true ? use 'content and show' classes (content appears), isOpen === false ? use only 'content' (content disappears). See it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isOpen&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content show&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we have a &lt;strong&gt;Reusable Collapsible Component&lt;/strong&gt;! You can change the label and children (content) prop, where the component will stay:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-1"&gt;
  &lt;/a&gt;
  Example 1
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Collapsible&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Click Here'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Profile&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Dashboard&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Logout&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Collapsible&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#example-2"&gt;
  &lt;/a&gt;
  Example 2
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Collapsible&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Animals'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Cat&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Dog&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Cow&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Collapsible&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8cjuo9X1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkqpwk9djozlnamheu1o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8cjuo9X1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkqpwk9djozlnamheu1o.png" alt="Results"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;OTHER OBSERVATION: The purpose of this post was to show the functionality, so, sorry for the bad styling haha!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Done! Thanks for reading this content, I hope it helps you in some way and, if you notice something wrong, feel free to help me leaving a comment bellow or find me on &lt;a href="https://twitter.com/thehuferr"&gt;twitter&lt;/a&gt; !&lt;/p&gt;

&lt;p&gt;You can also find me at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/huferr"&gt;Github&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/hugo-ferreira-it/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
    </item>
    <item>
      <title>7 dev tools powered by AI to improve developer productivity</title>
      <author>Quod AI</author>
      <pubDate>Fri, 09 Jul 2021 10:09:32 +0000</pubDate>
      <link>https://dev.to/quod_ai_blog/7-dev-tools-powered-by-ai-to-improve-developer-productivity-304k</link>
      <guid>https://dev.to/quod_ai_blog/7-dev-tools-powered-by-ai-to-improve-developer-productivity-304k</guid>
      <description>&lt;p&gt;A developer’s capabilities can improve exponentially with the tools they use. It is not enough just to know a programming language or a framework, but also the tools that come with it. A lot of the dev tools have been created by developers to solve their own productivity lapses while coding. In today’s article, we will look at 7 dev tools powered by AI that are definitely going to up your productivity while coding.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--teOJr3cH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://platform-cdn.sharethis.com/img/facebook.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--teOJr3cH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://platform-cdn.sharethis.com/img/facebook.svg" alt="facebook sharing button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article was originally posted at: &lt;a href="https://www.quod.ai/post/7-dev-tools-powered-by-ai-to-improve-developer-productivity"&gt;https://www.quod.ai/post/7-dev-tools-powered-by-ai-to-improve-developer-productivity&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fhPyaFiE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://platform-cdn.sharethis.com/img/twitter.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fhPyaFiE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://platform-cdn.sharethis.com/img/twitter.svg" alt="twitter sharing button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--40zjcJrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://platform-cdn.sharethis.com/img/linkedin.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--40zjcJrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://platform-cdn.sharethis.com/img/linkedin.svg" alt="linkedin sharing button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AlkB7haK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e81f4d6be25b3dd29fd8fa_AI.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AlkB7haK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e81f4d6be25b3dd29fd8fa_AI.jpg" alt="7 dev tools powered by AI to improve developer productivity"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ai-python-docstring-generator-amp-quod-ai-code-commenter"&gt;
  &lt;/a&gt;
  AI Python Docstring Generator &amp;amp; Quod AI Code Commenter
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;AI Python Docstring Generator&lt;/strong&gt; is a VSCode extension to generate docstrings for Python functions. It is forked from the popular Docstring Generator extension for VSCode and uses NLP to summarize the content of a function into a docstring. This extension cannot be run on its own; you also need to set up the model inference server which can be run as a Docker image. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Free. Install from&lt;/em&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=graykode.ai-docstring"&gt;&lt;em&gt;VSCode marketplace&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. You’ll also need to install the inference server.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quod AI Code Commenter&lt;/strong&gt; is another VSCode extension that can quickly generate comments for any code snippet. Just highlight the code and click “Generate comments''. Quod AI’s extension works out of the box after installing it from the VSCode marketplace.  It supports languages beyond Python like Java, JavaScript, TypeScript and Ruby. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Free. Install from&lt;/em&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=quodai-extension.vscode-extension#review-details"&gt;&lt;em&gt;VSCode marketplace&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eyn8JvoI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f492b5c8f5d9f075fb_L1nTww-555nAZLXfvS7uVSiOPJfLFaBEbTXECh3S6emcF9I-aQjPaDUehCHhqRLtnp1J_FYaL-pIDdGcm6C9vUmCepxsHCG3MVqZot9IVAbSc41APHKtwedx74mAzQZooxpc5SeR.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eyn8JvoI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f492b5c8f5d9f075fb_L1nTww-555nAZLXfvS7uVSiOPJfLFaBEbTXECh3S6emcF9I-aQjPaDUehCHhqRLtnp1J_FYaL-pIDdGcm6C9vUmCepxsHCG3MVqZot9IVAbSc41APHKtwedx74mAzQZooxpc5SeR.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-copilot"&gt;
  &lt;/a&gt;
  &lt;a href="https://copilot.github.com/"&gt;GitHub Copilot&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitHub recently announced a brand new addition to their GitHub ecosystem called Copilot. It is your very own pair programmer that works on AI. It codes along with you and can suggest lines of code or even entire functions. GitHub says it has been trained on billions of lines of public code and is available as a VSCode extension. It is currently in technical preview and will support several languages and frameworks. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tuef6vxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f5f9d9a80ffcc659a6_LgOJdGa203L-SCQXxas0TfvK1p5zCuHJqY_YSSKoqRhbjXEBIL1ogoqaSWlE-GJplQxr1NTAUnBaBuxX7SZcfX8k3zhEc2hhFz8gDBp59OO8Kqmu73-IRqSmDaL0dKQleYJjVtkZ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tuef6vxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f5f9d9a80ffcc659a6_LgOJdGa203L-SCQXxas0TfvK1p5zCuHJqY_YSSKoqRhbjXEBIL1ogoqaSWlE-GJplQxr1NTAUnBaBuxX7SZcfX8k3zhEc2hhFz8gDBp59OO8Kqmu73-IRqSmDaL0dKQleYJjVtkZ.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sign up for the waiting list at&lt;/em&gt; &lt;a href="https://copilot.github.com/"&gt;&lt;em&gt;https://copilot.github.com/&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quod-ai-code-search-for-github-and-jira"&gt;
  &lt;/a&gt;
  Quod AI Code Search for Github and JIRA
&lt;/h2&gt;

&lt;p&gt;Quod AI Code Search is an AI-powered Chrome extension that automatically searches for code from Git repositories or from Jira issues. It uses the title and description of the issue and automatically finds matches in your Git repository.&lt;/p&gt;

&lt;p&gt;In addition to search, the extension also helps you navigate code files more easily with its code intelligence menu. After enabling it, you’ll find an outline of all the functions in the file along with topics and tags. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1tPj12-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811fa027798b0f09a82cc_X2z5RZUDbhBcF0iGbagTTaF2-PDi82EvTUYxVVNrL1tI_ZsX-MsJ1Qtbz_AIK2wo_bDcuG72yANdbZ_D4wdqMlBqwd45nYUSskR-1ZEFuQSOdtWvyT9RTCvz5QaWv_P9tC8qajLQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1tPj12-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811fa027798b0f09a82cc_X2z5RZUDbhBcF0iGbagTTaF2-PDi82EvTUYxVVNrL1tI_ZsX-MsJ1Qtbz_AIK2wo_bDcuG72yANdbZ_D4wdqMlBqwd45nYUSskR-1ZEFuQSOdtWvyT9RTCvz5QaWv_P9tC8qajLQ.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out the example above which shows how to find if an account is registered in the sample JHipster code repository analyzed using the Quod AI Chrome extension. Imagine having a very large file and not knowing where to start looking for something. With this extension, search is simplified and the answer is presented to you within seconds.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Free. Install from the&lt;/em&gt; &lt;a href="https://chrome.google.com/webstore/detail/quod-ai-automatic-code-se/meglmkkpdmcimaaknnmllpbnnclnnipn?hl=en"&gt;&lt;em&gt;Chrome store&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kite"&gt;
  &lt;/a&gt;
  Kite
&lt;/h2&gt;

&lt;p&gt;Kite is a code completion tool that uses AI models trained over 25 million files to predict completions. It supports over 16 different languages and 16 code editors making it a very versatile option for any developer. The code completion is also context-aware which means that it recommends code based on the other variable and functions that you’re writing from.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Free. Install from the Kite&lt;/em&gt; &lt;a href="https://www.kite.com/"&gt;&lt;em&gt;website&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5xCKnRjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f3db08141a7e3301fe_x1SV2mEO_iv1ceemaIoJGb3upkXtJWhpFGCvvOIL-svxGjr78My9OHM4oWLnr3Su3IhFuLH9Arx9yfu5Mu5m4pi4SaG_3eDmaIustQ-Sb8qRBVSY7Ey40UOJv_GkGNKQ0OPIpvB6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5xCKnRjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f3db08141a7e3301fe_x1SV2mEO_iv1ceemaIoJGb3upkXtJWhpFGCvvOIL-svxGjr78My9OHM4oWLnr3Su3IhFuLH9Arx9yfu5Mu5m4pi4SaG_3eDmaIustQ-Sb8qRBVSY7Ey40UOJv_GkGNKQ0OPIpvB6.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tabnine-ai-code-completion"&gt;
  &lt;/a&gt;
  Tabnine AI Code Completion
&lt;/h2&gt;

&lt;p&gt;Tabnine is an AI code completion tool and is a direct competitor of Kite. They boast that they are the world’s leading AI code completion tool with over 1 million developers using it actively. The code completion from Tabnine is very good as it studies publicly available code and uses deep learning to predict completions. Their website has really cool video snippets that show how good the tool is and how effective it is at predicting code. Definitely a lifesaver for developers. Their free tier has only 50 code completions a day, which is a letdown and they do not have student plans as well. The Pro plan gives you unlimited code completions and a lot more advanced features but comes at $12 per month per user.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Free (limited usage). Install from&lt;/em&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode"&gt;&lt;em&gt;VSCode marketplace&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MlFffhSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f35c0fe5e1e0c7a002_ynDbguezOpMdX-5nnoDCYRSzK-3S-U33QFnYuWA_ytemPXASLeM1dEyuvkjuyJHXLyNpXsrIxzLVpo9DCPyc7hO7yoJMsP8Ce7J6yiAPq3MdNNzGz2hksB6-2ze-TMXkcb-c5rl6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MlFffhSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f35c0fe5e1e0c7a002_ynDbguezOpMdX-5nnoDCYRSzK-3S-U33QFnYuWA_ytemPXASLeM1dEyuvkjuyJHXLyNpXsrIxzLVpo9DCPyc7hO7yoJMsP8Ce7J6yiAPq3MdNNzGz2hksB6-2ze-TMXkcb-c5rl6.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#debuild"&gt;
  &lt;/a&gt;
  Debuild
&lt;/h2&gt;

&lt;p&gt;Debuild is a tool that is made from the OpenAI GPT-3 API. GPT-3 is OpenAI’s first commercial product that provides an API to developers to build very powerful applications using the GPT-3 model. The GPT-3 model is latest OpenAI model, and its most powerful yet, powered by 175 billion parameters.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YJ03Pscb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e81219db0814598e330289_sxgSFeU1YEZ3DFhgFRRNQ4eZVT0WH7GBVDDbjRZ2CEeik4HtiUzWP8CGhkuj-yVltePnxxKjLDONjUAIaSRc0x9bIuPLHfyiJuO5zT4qL2t4I2KISKsDa7eicO7dd2nNKjJaMnBE.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YJ03Pscb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e81219db0814598e330289_sxgSFeU1YEZ3DFhgFRRNQ4eZVT0WH7GBVDDbjRZ2CEeik4HtiUzWP8CGhkuj-yVltePnxxKjLDONjUAIaSRc0x9bIuPLHfyiJuO5zT4qL2t4I2KISKsDa7eicO7dd2nNKjJaMnBE.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Typing in what you require in plain english will produce the output that you want in code along with the ready-to-use application. There is very little information available about how it works exactly, but you need to sign up and use a Google form to input what you want to build. This tool is still in very early stages of its development and might not be very polished. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Free. Sign up for the waiting list at&lt;/em&gt; &lt;a href="https://debuild.co/"&gt;&lt;em&gt;debuild.co&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>ai</category>
      <category>javascript</category>
      <category>python</category>
    </item>
    <item>
      <title>GitHub Copilot: All you need to know</title>
      <author>Ayushi Rawat </author>
      <pubDate>Fri, 09 Jul 2021 09:44:32 +0000</pubDate>
      <link>https://dev.to/ayushi7rawat/github-copilot-all-you-need-to-know-2a9i</link>
      <guid>https://dev.to/ayushi7rawat/github-copilot-all-you-need-to-know-2a9i</guid>
      <description>&lt;p&gt;Hello reader! &lt;/p&gt;

&lt;p&gt;Microsoft subsidiary GitHub launched Copilot to power pair programming with AI. In this blog post, I will share all you need to know about it.&lt;/p&gt;

&lt;p&gt;You can refer to my &lt;strong&gt;YouTube video Tutorial&lt;/strong&gt; to see a working tutorial for better understanding and a step-by-step guide of the same. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RZmp6IPN0xw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-will-be-covered-in-this-blog"&gt;
  &lt;/a&gt;
  What will be covered in this Blog
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;GitHub&lt;/span&gt; &lt;span class="n"&gt;Copilot&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="n"&gt;How&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="n"&gt;GitHub&lt;/span&gt; &lt;span class="n"&gt;Copilot&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="n"&gt;How&lt;/span&gt; &lt;span class="n"&gt;good&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;GitHub&lt;/span&gt; &lt;span class="n"&gt;Copilot&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;4.&lt;/span&gt; &lt;span class="n"&gt;Does&lt;/span&gt; &lt;span class="n"&gt;GitHub&lt;/span&gt; &lt;span class="n"&gt;Copilot&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;perfect&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;5.&lt;/span&gt; &lt;span class="n"&gt;Will&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;shared&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;6.&lt;/span&gt; &lt;span class="n"&gt;Availability&lt;/span&gt;
&lt;span class="mf"&gt;7.&lt;/span&gt; &lt;span class="n"&gt;How&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;contribute&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;8.&lt;/span&gt; &lt;span class="n"&gt;Ownership&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Let's get started!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-github-copilot"&gt;
  &lt;/a&gt;
  What is GitHub Copilot?
&lt;/h2&gt;

&lt;p&gt;GitHub Copilot is an AI pair programmer. GitHub Copilot is powered by a new AI system developed by OpenAI Codex and is coming soon to Visual Studio Code. It aims to help Programmers code faster. It basically draws context from the code you’re working on, suggesting whole lines or entire functions.&lt;/p&gt;

&lt;p&gt;OpenAI Codex has a broad knowledge of how people use code and is significantly more capable than GPT-3 in code generation&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-github-copilot-work"&gt;
  &lt;/a&gt;
  How does GitHub Copilot work?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uec3J81v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813279327/aoeDJjsCS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uec3J81v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813279327/aoeDJjsCS.png" alt="github_copilot.png"&gt;&lt;/a&gt;&lt;br&gt;
It can suggest complete lines of code or entire functions by analyzing how you code. GitHub Copilot can assemble code from user comments and predicts your code by just reading the function name you have declared. It allows you to cycle through alternative suggestions and manually edit the suggested code. It autofill repetitive code, or create unit tests for your methods. &lt;/p&gt;

&lt;p&gt;The GitHub Copilot editor extension sends your comments and code to the GitHub Copilot service, which then uses OpenAI Codex to synthesize and suggest code. it actually works by reading through all the open-source code on the GitHub repos worldwide and then collect the data and tries to find the best possible code related to it! It is said to work great with repetitive code patterns so users can let it generate the rest of the code. The AI assistant can also help you learn a new programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-good-is-github-copilot"&gt;
  &lt;/a&gt;
  How good is GitHub Copilot?
&lt;/h2&gt;

&lt;p&gt;The technology is truly promising.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Copilot helps developers to quickly discover alternative ways to solve problems, write tests, and explore new APIs without having to tediously tailor a search for answers on sites like Stack Overflow and across the internet,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;says Friedman.&lt;/p&gt;

&lt;p&gt;It said to have been tested against a set of Python functions that have good test coverage in open source repos by blanking out the function bodies and asked GitHub Copilot to fill them in. The model got this right 43% of the time on the first try, and 57% of the time when allowed 10 attempts. And it’s getting smarter all the time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#does-github-copilot-write-perfect-code"&gt;
  &lt;/a&gt;
  Does GitHub Copilot write perfect code?
&lt;/h2&gt;

&lt;p&gt;No. GitHub Copilot tries to understand your intent and to generate the best code it can, but the code it suggests may not always work or even make sense. “GitHub Copilot draws context from the code you’re working on, suggesting whole lines or entire functions,” GitHub CEO &lt;a href="https://www.linkedin.com/in/natfriedman/"&gt;Nat Friedman&lt;/a&gt; explained in a &lt;a href="https://github.blog/2021-06-29-introducing-github-copilot-ai-pair-programmer/"&gt;blog post&lt;/a&gt; introducing the technology. The algorithm consistently improves by recording whether each suggestion is accepted or not. &lt;/p&gt;

&lt;p&gt;In order to make the most out of it, it is suggested to divide the code into smaller functions, provide meaningful function names, parameters, and docstrings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#will-your-private-code-be-shared-with-other-users"&gt;
  &lt;/a&gt;
  Will your private code be shared with other users?
&lt;/h2&gt;

&lt;p&gt;No. They claim to use telemetry data, including information about which suggestions users accept or reject, to improve the model. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#availability"&gt;
  &lt;/a&gt;
  Availability
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--javfjozw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813310374/II2ZmUf4t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--javfjozw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813310374/II2ZmUf4t.png" alt="Screenshot_5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For now, GitHub Copilot will only be made available to use in Visual Studio Code and the access is limited to a small group of testers. The preview version is available for free. The preview version is already installed by 88,783 coders.&lt;/p&gt;

&lt;p&gt;The technical preview works well for Python, JavaScript, TypeScript, Ruby and Go but the final version will work with a broader set of frameworks and languages. It will be used to learn how people use GitHub Copilot and what it takes to operate it at scale. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-you-contribute"&gt;
  &lt;/a&gt;
  How can You contribute?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dyqvJ12n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813391060/lqBeVXx5J.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dyqvJ12n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813391060/lqBeVXx5J.png" alt="Screenshot_3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best way to contribute is to sign up for the technical preview. Access is limited to a small group of testers during the technical preview of GitHub Copilot, so you can Join the GitHub Copilot waitlist &lt;a href="https://github.com/features/copilot/signup"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TnXyvphL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813408515/r46S2eERc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TnXyvphL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813408515/r46S2eERc.png" alt="Screenshot_4.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You only need to answer a simple question regarding how often do you use Visual Studio Code, accept the terms and conditions and you are good to go. The number of spots for the technical preview is limited, so sign up today!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gGqDng43--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813417991/4vZWq1PI-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gGqDng43--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813417991/4vZWq1PI-.png" alt="Screenshot_2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub states that the current preview phase is restricted because of the “state-of-the-art AI hardware” required for the project. Once the free preview phase is over, the company plans to build a commercial version, which should be “available as broadly as possible”. &lt;/p&gt;

&lt;p&gt;About sharing code snippets on Social media, GitHub says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please use &lt;a href="https://twitter.com/hashtag/GitHubCopilot"&gt;#GitHubCopilot&lt;/a&gt; when you post so we can see what you produce!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#ownership"&gt;
  &lt;/a&gt;
  Ownership
&lt;/h2&gt;

&lt;p&gt;GitHub assigns rights to the person writing the code, so the user becomes responsible for the suggestions it generates and code created with Copilot. It belongs to you, and you obtain the sole ownership of the code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#will-github-copilot-affect-developer-jobs"&gt;
  &lt;/a&gt;
  Will GitHub Copilot affect developer jobs?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://copilot.github.com/"&gt;Copilot&lt;/a&gt; autocompletes code snippets, suggests new lines of code, and can even write whole functions based on the description provided. It adapts to the way you write code and helps you complete the work faster. The technology will enable existing engineers to be more productive, reducing manual tasks and helping them focus on interesting work. It only suggests a piece of code, it still needs to be reviewed and tested manually like you normally do with every other code. &lt;/p&gt;

&lt;p&gt;It is very interesting to observe how events will now unfold and what the future holds for us but regardless, I do not think that it will replace developer jobs anytime soon. What do you think of this? Share your thoughts in the comment box below.&lt;/p&gt;

&lt;p&gt;That's it. And with that, it's a wrap! I hope you found the article useful and now you can start building some projects with API!&lt;/p&gt;

&lt;p&gt;I create content about &lt;strong&gt;Career, Blogging, Programming, and Productivity&lt;/strong&gt;, If this is something that interests you, please share the article with your friends and connections. You can also subscribe to my newsletter to get updates every time I write something!&lt;/p&gt;

&lt;p&gt;Thank you for reading, If you have reached so far, please like the article, It will encourage me to write more such articles. Do share your valuable suggestions, I appreciate your honest feedback!&lt;/p&gt;

&lt;p&gt;I would strongly recommend you to Check out the &lt;a href="https://www.youtube.com/watch?v=jAOkWehMF6E"&gt;YouTube video&lt;/a&gt; of the same and &lt;strong&gt;don't forget to subscribe to my Channel&lt;/strong&gt;. I would love to connect with you at &lt;a href="https://twitter.com/ayushi7rawat"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/ayushi7rawat/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You should definitely check out my other Blogs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/python-39-all-you-need-to-know"&gt;Python 3.9: All You need to know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/github-cli-10-all-you-need-to-know"&gt;GitHub CLI 1.0: All you need to know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/how-to-make-your-own-google-chrome-extension-1"&gt;How to make your own Google Chrome Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/run-javascript-from-python"&gt;Run Javascript from Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/automate-whatsapp-using-python"&gt;Automate WhatsApp using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/automate-cowin-vaccine-slots-availablity-using-python"&gt;Automate Cowin Vaccine slots Availability using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/what-is-competitive-programming-or-beginners-guide"&gt;What is Competitive Programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://copilot.github.com/"&gt;https://copilot.github.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.copilot"&gt;https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.blog/2021-06-29-introducing-github-copilot-ai-pair-programmer/"&gt;https://github.blog/2021-06-29-introducing-github-copilot-ai-pair-programmer/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you in my next Blog article, Take care!!&lt;/p&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>machinelearning</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>9+ Online eBay Clone eCommerce Script Alternative</title>
      <author>Aleyda Cohen</author>
      <pubDate>Fri, 09 Jul 2021 09:37:07 +0000</pubDate>
      <link>https://dev.to/aleydacohen/9-online-ebay-clone-ecommerce-script-alternative-4m1n</link>
      <guid>https://dev.to/aleydacohen/9-online-ebay-clone-ecommerce-script-alternative-4m1n</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HSKc0y-9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qptql0nc5ieuj5opypf6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HSKc0y-9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qptql0nc5ieuj5opypf6.png" alt="eBay Clone"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With the help of this great &lt;a href="https://www.clonedaddy.com/ebay-clone-script"&gt;eBay clone&lt;/a&gt; script, you can sell your items and invite other sellers to list their items available to be purchased on your website. However, providing a space for buying and selling different items is a long way from being the lone feature or function. &lt;/p&gt;

&lt;p&gt;While some people think &lt;a href="https://www.amazon.com/"&gt;Amazon&lt;/a&gt; is winning the eBay versus Amazon war, eBay is now one of the biggest names in ecommerce with over 171 million active users and 1 billion items listed. Taking everything into account, sellers search for alternatives to eBay for some reasons. Some need to expand their successful business beyond eBay. Others might be tiring of it and need to move to something new. &lt;/p&gt;

&lt;p&gt;This modern and versatile &lt;a href="https://www.ebay.com/"&gt;eBay&lt;/a&gt; like Website script comes with numerous features and functions that can make your business successful. Our comprehensive turn-key arrangement is an easy to use marketplace platform, which will permit the user to place banners and other types of advertising to increase your revenue. We comes with a uninterrupted and secure payment alternative, which will help the two buyers and sellers. &lt;/p&gt;

&lt;p&gt;Speed and ease of use are among the best qualities of the platform when it comes to managing the system as an admin. You needn't bother with any technical knowledge to work with us. The admin panel of the platform is easy to use and permits you to customize your auction website according to your requirement. The customization should be possible both in terms of content and in the design and structure. &lt;/p&gt;

&lt;p&gt;Here are a few features to convince you of the versatility of this great software: &lt;br&gt;
• Seller verification on different platforms to ensure reliability. &lt;br&gt;
• Advanced search alternatives to return speedy and accurate results. &lt;br&gt;
• The script maintains Multi-language and multi-currency to help you to extend your business to non-English speaking users. &lt;br&gt;
• Social sharing choices to drive more traffic towards your website. &lt;br&gt;
• Social sign-in features to save time during signup. &lt;br&gt;
• The software can handle an unlimited number of items and users. &lt;/p&gt;

&lt;p&gt;Besides these features, the platform permits you to develop the design that best suits your affiliation. You won't ever arrived behind schedule of space, regardless of how speedy your enterprise is growing as you can deploy it in the cloud server rapidly. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-ebay-entrepreneurs-alternative"&gt;
  &lt;/a&gt;
  The eBay Entrepreneur's Alternative
&lt;/h2&gt;

&lt;p&gt;Presently, with no further ado, here are the best 11 eBay selling alternatives of 2021. &lt;br&gt;
• Amazon &lt;br&gt;
• Etsy &lt;br&gt;
• Rakuten &lt;br&gt;
• Newegg &lt;br&gt;
• Bonanza &lt;br&gt;
• Mercari &lt;br&gt;
• Ebid &lt;br&gt;
• Ruby Lane &lt;br&gt;
• Ecrater &lt;br&gt;
• Alibaba &lt;/p&gt;

&lt;p&gt;Above are the best 11 other sites like eBay for sellers in-depth and overview other notable mentions. While some of these alternatives presumably won't be a great fit for every merchant, we guarantee you'll find no less than one that could be a profitable alternative for your business. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-your-own-marketplace"&gt;
  &lt;/a&gt;
  Create Your Own Marketplace
&lt;/h3&gt;

&lt;p&gt;Is it time to expand beyond established marketplace and create one of your own? As you see from the synopsis above, numerous marketplaces are successful when selling to niche markets. The experience can be better to consumers with a more curated synopsis of items or services. &lt;/p&gt;

&lt;p&gt;In the event that you feel that there's an untapped or underserved niche market, there are choices to create your own marketplace. The present sellers can take advantage of maturing shopping truck software that makes it possible to create your very own site. &lt;/p&gt;

&lt;p&gt;Building an ecommerce platform like eBay needs the involvement of experts. Starting a website like eBay isn't easy, it requires more important steps. Here are the essential steps to be followed to create the eBay clone. &lt;br&gt;
• Decide your Target Market &lt;br&gt;
• Create Your Business Name &lt;br&gt;
• Choose the Domain &lt;br&gt;
• Select A Web Host &lt;br&gt;
• Get an eBay Clone Software &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-ebay-clone-ecommerce-script-improve-your-online-presence"&gt;
  &lt;/a&gt;
  How eBay Clone eCommerce Script Improve Your Online Presence?
&lt;/h2&gt;

&lt;p&gt;The main purpose of using eBay clone &lt;a href="https://www.clonedaddy.com/ecommerce-script"&gt;eCommerce script&lt;/a&gt; is that it can improve the most essential components of your ecommerce business and furthermore add advanced functions as below that automates your online e-commerce store. &lt;/p&gt;

&lt;p&gt;Get On demand eBay shopping truck Software at a reasonable expense. We have a significantly experienced tech team that provides eBay Like app development service for both the platform, &lt;a href="https://www.android.com/"&gt;android&lt;/a&gt;, and &lt;a href="https://www.apple.com/ios/"&gt;ios&lt;/a&gt;. Its never beyond the point where it is possible to help up your business.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>ebay</category>
    </item>
    <item>
      <title>Should we go Serverless?! </title>
      <author>Parth Khanna</author>
      <pubDate>Fri, 09 Jul 2021 09:14:11 +0000</pubDate>
      <link>https://dev.to/parthkhanna07/should-we-go-serverless-3l6o</link>
      <guid>https://dev.to/parthkhanna07/should-we-go-serverless-3l6o</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H2f-qM3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/267vuth6soa7rc5p228a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H2f-qM3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/267vuth6soa7rc5p228a.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Introduction&lt;/strong&gt;&lt;br&gt;
Serverless computing offers a number of advantages over traditional cloud-based or server-centric infrastructure. By using a serverless architecture,  developers can focus on their core product instead of worrying about managing and operating servers or runtimes, either in the cloud or on-premises. This reduced overhead lets developers reclaim time and energy that can be spent on developing great products which scale and that are reliable.Serverless services like &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt; come with automatic scaling, built-in high availability, and a pay-for-value billing model. Lambda is an event-driven compute service that enables you to run code in response to events from over 200 natively-integrated AWS and SaaS sources - all without managing any servers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is serverless computing?&lt;/strong&gt;&lt;br&gt;
Serverless computing is a method of providing backend services on an as-used basis. A serverless provider allows users to write and deploy code without the hassle of worrying about the underlying infrastructure. A company that gets backend services from a serverless vendor is charged based on their computation and does not have to reserve and pay for a fixed amount of bandwidth or number of servers, as the service is auto-scaling. Note that despite the name serverless, physical servers are still used but developers do not need to be aware of them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of serverless computing&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Cost Benefits:-&lt;/strong&gt;  Serverless computing allows developers to purchase backend services on a flexible ‘pay-as-you-go’ basis, meaning that developers only have to pay for the services they use. This is like switching from a cell phone data plan with a monthly fixed limit, to one that only charges for each byte of data that actually gets used.&lt;br&gt;
&lt;strong&gt;No server management is necessary:-&lt;/strong&gt; Although 'serverless' computing does actually take place on servers, developers never have to deal with the servers. They are managed by the vendor. This can reduce the investment necessary in DevOps, which lowers expenses, and it also frees up developers to create and expand their applications without being constrained by server capacity.&lt;br&gt;
&lt;strong&gt;“Greener” hosting and computing:-&lt;/strong&gt; Companies that host data centers or their own servers need to run their servers at all times. Think about all the huge data centers and the physical resources needed to build these centers. Think about the energy needed to keep them running. The good thing about serverless architecture is that you can buy servers on demand when you need it. This can reduce the resources needed to keep various companies online.&lt;br&gt;
&lt;strong&gt;Quick deployments and updates are possible:-&lt;/strong&gt; Using a serverless infrastructure, there is no need to upload code to servers or do any backend configuration in order to release a working version of an application. Developers can very quickly upload bits of code and release a new product. They can upload code all at once or one function at a time, since the application is not a single monolithic stack but rather a collection of functions provisioned by the vendor.&lt;br&gt;
&lt;strong&gt;Happier customers:-&lt;/strong&gt; This will depend on the company in question. Serverless architecture can potentially lead to happier customers. A company that can draw up new servers and ship features faster means that customers can access these new features. Nobody wants to wait an entire year for small fixes. Through serverless, you don’t have to worry about infrastructure. You can release logic and features quickly that will improve the user experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Serverless architecture&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;AWS Lambda:-&lt;/strong&gt; With Lambda, you can run code for virtually any type of application or backend service - all with zero administration. Just upload your code as a ZIP file or container image, and Lambda automatically and precisely allocates compute execution power and runs your code based on the incoming request or event, for any scale of traffic. You can set up your code to automatically trigger from over 200 AWS services and SaaS applications or call it directly from any web or mobile app. You can write Lambda functions in your favorite language (Node.js, Python, Go, Java, and more) and use both serverless and container tools, such as AWS SAM or Docker CLI, to build, test, and deploy your functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon API Gateway:-&lt;/strong&gt; Amazon API Gateway is a fully managed service that makes it easy for developers to create, publish, maintain, monitor, and secure APIs at any scale. APIs act as the "front door" for applications to access data, business logic, or functionality from your backend services. Using API Gateway, you can create RESTful APIs and WebSocket APIs that enable real-time two-way communication applications. API Gateway supports containerized and serverless workloads, as well as web applications.&lt;br&gt;
API Gateway handles all the tasks involved in accepting and processing up to hundreds of thousands of concurrent API calls, including traffic management, CORS support, authorization and access control, throttling, monitoring, and API version management. API Gateway has no minimum fees or startup costs. You pay for the API calls you receive and the amount of data transferred out and, with the API Gateway tiered pricing model, you can reduce your cost as your API usage scales.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon S3:-&lt;/strong&gt; Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance. This means customers of all sizes and industries can use it to store and protect any amount of data for a range of use cases, such as data lakes, websites, mobile applications, backup and restore, archive, enterprise applications, IoT devices, and big data analytics. Amazon S3 provides easy-to-use management features so you can organize your data and configure finely-tuned access controls to meet your specific business, organizational, and compliance requirements. Amazon S3 is designed for 99.999999999% (11 9's) of durability, and stores data for millions of applications for companies all around the world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon RDS:-&lt;/strong&gt; Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. It provides cost-efficient and resizable capacity while automating time-consuming administration tasks such as hardware provisioning, database setup, patching and backups. It frees you to focus on your applications so you can give them the fast performance, high availability, security and compatibility they need.&lt;br&gt;
Amazon RDS is available on several &lt;a href="https://aws.amazon.com/rds/instance-types/"&gt;database instance types&lt;/a&gt; - optimized for memory, performance or I/O - and provides you with six familiar database engines to choose from, including &lt;a href="https://aws.amazon.com/rds/aurora/"&gt;Amazon Aurora&lt;/a&gt;, &lt;a href="https://aws.amazon.com/rds/postgresql/"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="https://aws.amazon.com/rds/mysql/"&gt;MySQL&lt;/a&gt;, &lt;a href="https://aws.amazon.com/rds/mariadb/"&gt;MariaDB&lt;/a&gt;, &lt;a href="https://aws.amazon.com/rds/oracle/"&gt;Oracle Database&lt;/a&gt;, and &lt;a href="https://aws.amazon.com/rds/sqlserver/"&gt;SQL Server&lt;/a&gt;. You can use the &lt;a href="https://aws.amazon.com/dms/"&gt;AWS Database Migration Service&lt;/a&gt; to easily migrate or replicate your existing databases to Amazon RDS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages of serverless computing?&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Testing and debugging become more challenging:-&lt;/strong&gt; It is difficult to replicate the serverless environment in order to see how code will actually perform once deployed. Debugging is more complicated because developers do not have visibility into backend processes, and because the application is broken up into separate, smaller functions.&lt;br&gt;
&lt;strong&gt;Serverless computing introduces new security concerns:-&lt;/strong&gt; When vendors run the entire backend, it may not be possible to fully vet their security, which can especially be a problem for applications that handle personal or sensitive data. Because companies are not assigned their own discrete physical servers, serverless providers will often be running code from several of their customers on a single server at any given time. This issue of sharing machinery with other parties is known as 'multitenancy' – think of several companies trying to lease and work in a single office at the same time. Multitenancy can affect application performance and, if the multi-tenant servers are not configured properly, could result in data exposure. &lt;br&gt;
&lt;strong&gt;Serverless architectures are not built for long-running processes:-&lt;/strong&gt; This limits the kinds of applications that can cost-effectively run in a serverless architecture. Because serverless providers charge for the amount of time code is running, it may cost more to run an application with long-running processes in a serverless infrastructure compared to a traditional one.&lt;br&gt;
&lt;strong&gt;Performance may be affected:-&lt;/strong&gt; Because it's not constantly running, serverless code may need to 'boot up' when it is used. This startup time may degrade performance. However, if a piece of code is used regularly, the serverless provider will keep it ready to be activated – a request for this ready-to-go code is called a 'warm start.' A request for code that hasn't been used in a while is called a 'cold start.'&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
Serverless, despite the confusing name, is a style of architecture where we rely on running our own server-side systems as part of our applications to a smaller extent than usual.The term ‘serverless’ is somewhat misleading, as there are still servers providing these backend services, but all of the server space and infrastructure concerns are handled by the vendor. Serverless means that the developers can do their work without having to worry about servers at all.&lt;br&gt;
Serverless computing continues to evolve as serverless providers come up with solutions to overcome some of its drawbacks. One of these drawbacks is cold starts.&lt;br&gt;
Typically when a particular serverless function has not been called in a while, the provider shuts down the function to save energy and avoid over-provisioning. The next time a user runs an application that calls that function, the serverless provider will have to spin it up fresh and start hosting that function again. This startup time adds significant latency, which is known as a ‘cold start’.&lt;br&gt;
Once the function is up and running it will be served much more rapidly on subsequent requests (warm starts), but if the function is not requested again for a while, the function will once again go dormant. This means the next user to request that function will experience a cold start. Up until fairly recently, cold starts were considered a necessary trade-off of using serverless functions.&lt;br&gt;
As more and more of the drawbacks of using serverless get addressed and the popularity of edge computing grows, we can expect to see serverless architecture becoming more widespread.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acknowledgements&lt;/strong&gt;&lt;br&gt;
Thanks to the Serverless community, especially those whose content I link to in this article.&lt;br&gt;
&lt;a href="https://martinfowler.com/articles/serverless.html"&gt;Source 1&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.cloudflare.com/en-gb/learning/serverless/what-is-serverless/"&gt;Source 2&lt;/a&gt;&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>aws</category>
    </item>
    <item>
      <title>ডিজিটাল রুট (Digital Root)</title>
      <author>Prince Billy Graham Karmoker</author>
      <pubDate>Fri, 09 Jul 2021 08:59:53 +0000</pubDate>
      <link>https://dev.to/princebillygk/digital-root-5dpj</link>
      <guid>https://dev.to/princebillygk/digital-root-5dpj</guid>
      <description>&lt;p&gt;একটি সংখ্যার প্রতিটি ডিজিটকে একত্রে বার বার যোগ করার মাধ্যমে একটি ডিজিট বিশিষ্ট সংখ্যাই রূপান্তর করার প্রক্রিয়াকেই ডিজিটাল রুট বলে। উদাহরণঃ&lt;/p&gt;

&lt;p&gt;173 এর ডিজিটাল রুট নির্ণয়:&lt;/p&gt;

&lt;p&gt;1 + 7 + 3 = 11&lt;br&gt;
1 + 1 = 2&lt;/p&gt;

&lt;p&gt;উত্তরঃ 2&lt;/p&gt;

&lt;p&gt;9256987 এর ডিজিটাল রুট নির্ণয়&lt;/p&gt;

&lt;p&gt;9 + 2 + 5 + 6 + 9 + 9 + 7 = 46&lt;br&gt;
4 + 6 = 10&lt;br&gt;
1 + 0 = 1&lt;/p&gt;

&lt;p&gt;উত্তরঃ 1&lt;/p&gt;

&lt;p&gt;এইভাবে ডিজিটাল রুট বের করার পদ্ধতিকে Naive method বলা হয়। যা প্রোগ্রামিঙয়ের মাধ্যমে বার বার লুপ চালিয়ে বের করা যায় (নিজে করো)&lt;/p&gt;

&lt;p&gt;এবার আস আরেকটি সহজ পদ্ধতি চিন্তা করি&lt;/p&gt;

&lt;p&gt;DigitalRoot(1) = 1&lt;br&gt;
DigitalRoot(2) = 2&lt;br&gt;
DigitalRoot(3) = 3&lt;/p&gt;

&lt;p&gt;... ... ...&lt;/p&gt;

&lt;p&gt;DigtalRoot(9) = 9&lt;/p&gt;

&lt;p&gt;DigitalRoot(10) =1 + 0 -&amp;gt; 1&lt;br&gt;
DigtalRoot(11) = 1 + 1 -&amp;gt; 2&lt;br&gt;
DigitalRoot(12) = 1 + 2 -&amp;gt; 3&lt;br&gt;
DigitalRoot(13) = 1 + 3 = 4&lt;/p&gt;

&lt;p&gt;... ... ...&lt;/p&gt;

&lt;p&gt;DigitalRoot(18) = 1 + 8 = 9&lt;/p&gt;

&lt;p&gt;... ... ...&lt;/p&gt;

&lt;p&gt;কি দেখতে পেলে আমরা যদি পর পর প্রতিটি সংখ্যার digital root বের করতে থাকি তাহলে বার বার ১, ২, ৩, ৪, ৫, ৬, ৭ , ৮, ৯ এই মান গুলো পর পর বার বার আসছে। অর্থাৎ শেষবার মান ৯ আসার পর আবারও ১ থেকে মান আসা শুরু হচ্ছে। একই কাজ আমারা ৯ দ্বারা ভাগ করে ভাগশেষ বের করার মাধ্যমে করতে পারি। তবে যখন আমাদের ভাগশেষ ০ আসবে তবে আমাদের ডিজিটাল রুট কে ৯ ধরতে হবে। কিন্তু যদি ০ এর ডিজিটাল রুট বের করতে বলে তাহলে ভাগশেষ ০ হলেও ডিজিটাল রুট ০ ই হবে।&lt;/p&gt;

&lt;p&gt;1 mod 9 = 1&lt;br&gt;
2 mod 2 = 2&lt;br&gt;
...&lt;br&gt;
9 mod 9 = 0 (০ কে আমারা ৯ ধরব)&lt;/p&gt;

&lt;p&gt;10 mod 9 = 1&lt;br&gt;
11 mod 9 = 2&lt;br&gt;
12 mod 9 = 3 &lt;br&gt;
13 mod 9 = 4&lt;br&gt;
...&lt;br&gt;
18 mod 9 = 0 (9)&lt;br&gt;
... ... ...&lt;/p&gt;

&lt;p&gt;অর্থাৎ ডিজিটাল রুট নির্ণয়ের সূত্রটি হবে:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSYC7qXi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zi95xv0vpbuc7jqlvzl1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSYC7qXi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zi95xv0vpbuc7jqlvzl1.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python code snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;যার Big(o) Complexity: O(1)&lt;/p&gt;

</description>
      <category>python</category>
      <category>problem</category>
      <category>bangla</category>
    </item>
    <item>
      <title>How to Create a SaaS MVP and Succeed</title>
      <author>Codica</author>
      <pubDate>Fri, 09 Jul 2021 08:32:25 +0000</pubDate>
      <link>https://dev.to/codicacom/how-to-create-a-saas-mvp-and-succeed-40g1</link>
      <guid>https://dev.to/codicacom/how-to-create-a-saas-mvp-and-succeed-40g1</guid>
      <description>&lt;p&gt;&lt;em&gt;The article was initially published on &lt;a href="https://www.codica.com/blog/how-to-create-mvp-for-saas/"&gt;Codica blog&lt;/a&gt;.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;Until the late 90th, we had to install various software on our PCs: for working with documents, messaging, or task management. Every new piece of software took up space on a hard drive. An update could take several hours or even a whole day since it needed tons of resources, our skills, and hard drive space. &lt;/p&gt;

&lt;p&gt;Gladly, these days are in the past. It has become possible due to SaaS products and cloud computing boost. The recent forecasts state that the SaaS market will reach $623 billion by 2023. &lt;/p&gt;

&lt;p&gt;We have researched the SaaS domain future and came up with a guide on how to start a cloud solution, and discussed why starting with an MVP is crucial.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#saas-market-overview-and-perspectives"&gt;
  &lt;/a&gt;
  SaaS market: overview and perspectives
&lt;/h1&gt;

&lt;p&gt;A SaaS product is a cloud application that offers its services to all users via the Internet. &lt;br&gt;
Instead of downloading an app, all users access it from a web browser on a desktop or from their smartphones.&lt;/p&gt;

&lt;p&gt;Below are the main types of SaaS products with the key market shapers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rLO49nR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifvaw7h9sq0zgnwbl6fm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rLO49nR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifvaw7h9sq0zgnwbl6fm.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Trello, Jira, Asana - productivity software;&lt;/li&gt;
&lt;li&gt;SalesForce CRM, HubSpot CRM, SAP - customer relationship management software (CRM systems);&lt;/li&gt;
&lt;li&gt;Joomla, WooCommerce - content management systems (CMS);&lt;/li&gt;
&lt;li&gt;Shopify Plus, BigCommerce - eCommerce software.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;SaaS market overview&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While COVID-19 had a massive negative influence on many businesses, its influence on the SaaS domain was not so bad. Only 27% of the companies claim a negative impact, while 40% claim from little to no negative influence. &lt;/p&gt;

&lt;p&gt;Here comes the three key SaaS facts by Statista to keep an eye on. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z0jZSUPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlxf7cnv0sp7lsz0dids.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z0jZSUPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlxf7cnv0sp7lsz0dids.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://financesonline.com/saas-statistics/"&gt;FinancesOnline&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The future of SaaS: chaos or a solution for every need?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On the one hand, the Internet connection is getting faster and more reliable, and even more SaaS startups are expected to reach the market. The majority of the businesses say that after 2022 they will use SaaS to cover over 80% of their software needs. So, this market is growing really fast.&lt;/p&gt;

&lt;p&gt;On the other hand, there are so many similar SaaS tools on the market now. Such a diversity confuses users and even causes a kind of SaaS chaos. It’s getting pretty hard to choose a cloud solution.  &lt;/p&gt;

&lt;p&gt;So, that’s next? There are many options here. For example, big SaaS names start to collaborate to help their end-users. For instance, Figma claimed the integrations with GitLab recently. Of course, these collaborations don't solve the problem of chaos in full but prove brands’ awareness and desire to support the users.&lt;/p&gt;

&lt;p&gt;Bottom line: We are witnessing a real boost in the SaaS market now and it’s not going to slow down. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#minimum-viable-product-for-saas"&gt;
  &lt;/a&gt;
  Minimum viable product for SaaS
&lt;/h1&gt;

&lt;p&gt;What is a SaaS MVP about? It’s an early product version, ready to be put on the market. It has must-have features only and brings real value for its end-users.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benefits of MVP for a SaaS startup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Even if you totally love your product idea, don’t hurry. &lt;a href="https://www.codica.com/blog/why-saas-startups-fail/"&gt;SaaS startups tend to fail&lt;/a&gt;. Statistics state that over 90% of SaaS startups stop working during the first 5 years. So do some research, check the market, and probe your idea with the minimal valuable product first. &lt;/p&gt;

&lt;p&gt;To help you in your MVP journey, we have collected the main advantages of &lt;a href="https://www.codica.com/services/mvp-development/"&gt;MVP for SaaS&lt;/a&gt; startups.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VkNp5SwI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/049w9ajez8clc52pcq6i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VkNp5SwI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/049w9ajez8clc52pcq6i.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tech stack for a cloud MVP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Try to make your solution scalable for developers, and secure, and performing for both with no bells and whistles. Some useful tips to follow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Consider open-source tools;&lt;/li&gt;
&lt;li&gt;Choose fast &lt;a href="https://www.codica.com/blog/saas-product-development-with-ruby-on-rails/"&gt;prototyping with Ruby on Rails&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Use free databases; &lt;/li&gt;
&lt;li&gt;Benefit from available solutions, e.g., Ruby gems; &lt;/li&gt;
&lt;li&gt;Don’t forget about load testing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#guide-how-to-create-a-successful-saas-product"&gt;
  &lt;/a&gt;
  Guide: how to create a successful SaaS product
&lt;/h1&gt;

&lt;p&gt;When we talk about &lt;a href="https://www.codica.com/services/mvp-development/"&gt;MVP development&lt;/a&gt;, we usually follow the best practices. SaaS solutions are not an exception. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Competitive research.&lt;/strong&gt; Know your market, your competitors, and where you can provide more value to users. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer's pains and needs.&lt;/strong&gt; Listen to your end-users challenges, and they will help you out to create a product they need. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features set&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Choose only the required functionality for your MVP.&lt;/strong&gt; Have a look at these popular principles to avoid unnecessary work:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Pareto_principle"&gt;Pareto Principle&lt;/a&gt; or 80% to 20% rule. This rule helps to concentrate on 20% of must-have functionality and avoid 80% of the functions not being used. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.productplan.com/glossary/moscow-prioritization/"&gt;The MoSCoW method&lt;/a&gt; prioritizes the features from &lt;strong&gt;M&lt;/strong&gt; - Must-have features to &lt;strong&gt;S&lt;/strong&gt; - Should have and &lt;strong&gt;C&lt;/strong&gt; - Could have, and finally to &lt;strong&gt;W&lt;/strong&gt; - Won't have ones.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Choosing the Pricing Model&lt;/strong&gt;&lt;br&gt;
The pricing model in SaaS is a method to set the desired price for a solution. Among the top popular SaaS models are per-user pricing, tiered pricing, per-storage pricing, and pay as you go. All come with their Pros and Cons. We have created a &lt;a href="https://www.codica.com/blog/saas-pricing/"&gt;top 8 SaaS Pricing Models: Ultimate Guide 2021&lt;/a&gt; to assist you in picking the needed model. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prototyping and MVP Development&lt;/strong&gt;&lt;br&gt;
Probe your idea with a working ‘draft’, a prototype. Once done, move to creating the ready-to-the-market MVP version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feedback gathering.&lt;/strong&gt; Don’t waste your time with untested ideas. Always listen to your end-users and their feedback.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-influences-the-cost-of-saas-mvp"&gt;
  &lt;/a&gt;
  What influences the cost of SaaS MVP
&lt;/h1&gt;

&lt;p&gt;There is no average cost for all SaaS solutions. The price always depends on many factors, including the project scope, tech stack, and the development team’s expertise. Let’s find out what influences the final cost in detail.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Tech stack&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can create an MVP using any popular framework. Our top three are Ruby on Rails (back-end), and React.js, or Vue.js (front-end). As for the Rails framework, it offers free open-source libraries, gems. There are over &lt;a href="https://rubygems.org/stats"&gt;167,000 gems&lt;/a&gt; now for different ready solutions. Using these solutions, you can speed up the development thus saving costs. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Number of features&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Consider only the must-have features for your MVP solution with no extras. More does not mean better. It will cost you extra and won’t bring value to users so will be a waste of resources and time.  &lt;/p&gt;

&lt;p&gt;Team’s expertise in &lt;a href="https://www.codica.com/services/saas-development/"&gt;SaaS development&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;When you work with SaaS experts, you will benefit from the vast expertise of the developers who have delivered many cloud solutions. &lt;/p&gt;

&lt;p&gt;This way, you can count on both an accurate estimate, expert advice, and quality app development on time and on budget.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prices in different locations&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When we are talking about the prices or hourly rates, the calculations will depend on the location and the level of the development team. Below we have collected recent web development rates for three popular locations. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MthRT4kl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xuy812ng6hqvpkgdq6u4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MthRT4kl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xuy812ng6hqvpkgdq6u4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to estimate the final cost, you should consider all these factors. If you struggle to do it yourself or need advice, consider an &lt;a href="https://www.codica.com/blog/choosing-saas-application-development-company/"&gt;experienced SaaS development team&lt;/a&gt;. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h1&gt;

&lt;p&gt;With the world’s shift to remote work, the SaaS domain proved its numerous benefits for businesses. Even if you did not consider cloud products before, it’s high time to move in this direction. On the bright side, you can use some ready solutions, and start off with a product MVP. &lt;/p&gt;

&lt;p&gt;Looking for a trusted &lt;a href="https://www.codica.com/services/saas-development/"&gt;SaaS development company&lt;/a&gt;? Consider the Codica team. If you start a new cloud-based app or need to manage an existing one, Codica team is here to share expertise in cloud solutions. We will help you solve all development pains, and assist your business to stand out from competitors. &lt;/p&gt;

&lt;p&gt;For more information about building a SaaS MVP visit our blog and read the article: &lt;a href="https://www.codica.com/blog/how-to-create-mvp-for-saas/"&gt;How to Build an MVP for a SaaS Startup: Practical Tips&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>saas</category>
      <category>mvp</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Node JS API - With React UI: Berry Dashboard</title>
      <author>Sm0ke</author>
      <pubDate>Fri, 09 Jul 2021 08:19:12 +0000</pubDate>
      <link>https://dev.to/sm0ke/node-js-api-open-source-seed-project-hja</link>
      <guid>https://dev.to/sm0ke/node-js-api-open-source-seed-project-hja</guid>
      <description>&lt;p&gt;Hello Coders,&lt;/p&gt;

&lt;p&gt;This article presents a simple &lt;strong&gt;Node JS API Server&lt;/strong&gt; built with Express, MongoDB and Typescript. The product can be used to bootstrap fast a backend server being already equipped with basic modules and a database or just for educational purpose. Codebase is actively supported and more features will come soon. To make this article more useful, I will mention an open-source React Dashboard already configured to work with this Node/Express server. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/api-server-nodejs"&gt;Node JS API&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/product/react-node-js-berry-dashboard"&gt;React Berry Dashboard&lt;/a&gt; - full-stack seed project &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(already configured to communicate with this API Server )&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RpcCwY8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2t35rwhy7q0yg4h7xdj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RpcCwY8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2t35rwhy7q0yg4h7xdj.jpg" alt="React Berry Dashboard - Open-source full-stack seed project crafted in React and Material UI."&gt;&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-use-the-code"&gt;
  &lt;/a&gt;
  How To use the code
&lt;/h2&gt;

&lt;p&gt;As mentioned, product has a simple codebase and anyone with a basic NodeJS knowledge can compile and start locally the server with just a few commands typed in a terminal window. Bellow are the build commands extracted from the README file. Before type anything, please make sure you have a decent &lt;a href="https://nodejs.org/"&gt;Node JS&lt;/a&gt; version, the recommended version is 12.x or above. Another dependency is to have a &lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt; Server up &amp;amp; running. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step #1 - Clone the sources&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/api-server-nodejs.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;api-server-nodejs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #2 - Install dependencies&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #2 - Start the API server&lt;/strong&gt; (development mode)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm dev
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn dev 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the server is up &amp;amp; running, we can use POSTMAN to query the API server and check out the responses. The API definition of the server is also available on Github at &lt;a href="https://github.com/app-generator/api-server-nodejs/blob/master/media/api.postman_collection.json"&gt;this&lt;/a&gt; location. &lt;/p&gt;

&lt;p&gt;By default, our server starts on port &lt;code&gt;5000&lt;/code&gt; but we can customize the value in the &lt;code&gt;.env&lt;/code&gt; file saved in the root of the project. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The API: &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Register - create a new user&lt;/li&gt;
&lt;li&gt;Login - authenticate the user and returns a (JWT) Token on success&lt;/li&gt;
&lt;li&gt;Logout - kill the session &lt;/li&gt;
&lt;li&gt;Check Session  - verify that a session is still active&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#registration-request"&gt;
  &lt;/a&gt;
  Registration request
&lt;/h3&gt;

&lt;p&gt;Using &lt;a href="https://www.postman.com/"&gt;POSTMAN&lt;/a&gt; we can test the API server with ease. Let's create a new user:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edit the URL&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//localhost:5000/api/users/register&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Edit the Request Body&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pass&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test@myserver.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the user is successfully created, we should see something like this in the response field:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userID&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;60e7db4331173d284832a0ab&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;msg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The user is created&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zwowMrYF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xsbupfcakmbl4z8xdrd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zwowMrYF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xsbupfcakmbl4z8xdrd.jpg" alt="Node JS API - Registration API request in POSTMAN."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Pretty simple! In a similar way we can authenticate the user or check if the session is still active or not. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#authenticate-user-login"&gt;
  &lt;/a&gt;
  Authenticate User (login)
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Edit The URL&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//localhost:5000/api/users/login&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Request Body&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pass&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test@myserver.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The response should include the generated JWT Token and from this point we can perform request and access the private section exposed by the API. &lt;/p&gt;




&lt;p&gt;Where to go from here? We can connect a React UI to &lt;em&gt;talk&lt;/em&gt; with our simple API and authenticate users. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-node-js-berry"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/product/react-node-js-berry-dashboard"&gt;React Node JS Berry&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This open-source React Dashboard, &lt;strong&gt;designed by &lt;a href="https://codedthemes.com/"&gt;CodedThemes&lt;/a&gt;&lt;/strong&gt;, can be download from the &lt;a href="https://appseed.us/product/react-node-js-berry-dashboard"&gt;product page&lt;/a&gt; (no registration lock) or directly from Github. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;All good, let's build the product&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone the project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/react-berry-admin-template.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;react-berry-admin-template
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Install dependencies via NPM or yarn&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Start in development mode&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm run start 
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the React UI is up and running, we can create and authenticate users and get access to the private area of the site. &lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u1KIg2Rm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gz0mdlvxuy7mlwmuyso1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u1KIg2Rm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gz0mdlvxuy7mlwmuyso1.jpg" alt="React Node JS Berry - Login page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;React Node JS Berry - UI Icons&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g2GrM-8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hukznf0vp4g8u3yi9wgt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g2GrM-8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hukznf0vp4g8u3yi9wgt.jpg" alt="React Node JS Berry - UI Icons page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! Feel free to AMA in the comments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;For &lt;a href="https://appseed.us/support"&gt;Support&lt;/a&gt; - access the AppSeed platform&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://berrydashboard.io/"&gt;Berry Dashboard&lt;/a&gt; - the React UI crafted by &lt;a href="https://codedthemes.com/"&gt;CodedThemes&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>node</category>
      <category>mongodb</category>
      <category>fullstack</category>
    </item>
    <item>
      <title>10 GitHub repositories to become a better JavaScript Developer</title>
      <author>Pawel</author>
      <pubDate>Fri, 09 Jul 2021 07:56:34 +0000</pubDate>
      <link>https://dev.to/pb/10-github-repositories-which-will-help-you-to-become-a-better-javascript-developer-5om</link>
      <guid>https://dev.to/pb/10-github-repositories-which-will-help-you-to-become-a-better-javascript-developer-5om</guid>
      <description>&lt;p&gt;With the introduction of libraries and Frameworks like ReactJS, VueJS, Angular, SvelteJS and much more and the runtime environments like Node.js and Deno the demand for JavaScript Developers has exploded. From seed startups to the big tech companies, everyone are using JavaScript in one or the other form. &lt;/p&gt;

&lt;p&gt;Be it library like ReactJS or complex Frameworks like Angular or runtime environments like Node.js and Deno they all has one thing in common that they can be used to wrie JavaScript code in a more structured, robust and scalable manner which can be easy to maintain, debug and scale .&lt;/p&gt;

&lt;p&gt;With that being said it becomes more important for you as a JavaScript Developer to level up your skills with the best practices and concepts regarding it. &lt;/p&gt;

&lt;p&gt;In this post I've included 10 such GitHub repositories which will help you to become a better JavaScript Developer and will also help you to follow best practices, clear concepts and write scalable and clean code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-javascript-style-guide"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://github.com/airbnb/javascript"&gt;JavaScript Style Guide&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitHub🌟: 111K+ &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/airbnb"&gt;
        airbnb
      &lt;/a&gt; / &lt;a href="https://github.com/airbnb/javascript"&gt;
        javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      JavaScript Style Guide
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This repository includes style guides for JavaScript, React, CSS-in-JavaScript,CSS &amp;amp; SaSS and Ruby. It is having the code snippets with good and bad practices followed the explanations and references which will help you to write more robust,clean and error free code. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-node-best-practices"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://github.com/goldbergyoni/nodebestpractices"&gt;Node Best Practices&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitHub🌟: 68K+ &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/goldbergyoni"&gt;
        goldbergyoni
      &lt;/a&gt; / &lt;a href="https://github.com/goldbergyoni/nodebestpractices"&gt;
        nodebestpractices
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ✅  The Node.js best practices list (June 2021)
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This repository is a summary and curation of the top-ranked content on Node.js best practices. It has the largest compilation, and it is growing every week. Currently more than 80 best practices, style guides, and architectural tips are presented.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-javascript-algorithms"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitHub🌟: 113K+ &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trekhleb"&gt;
        trekhleb
      &lt;/a&gt; / &lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;
        javascript-algorithms
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;br&gt;
Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-javascript-questions"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://github.com/lydiahallie/javascript-questions"&gt;JavaScript Questions&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitHub🌟: 35K+ &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/lydiahallie"&gt;
        lydiahallie
      &lt;/a&gt; / &lt;a href="https://github.com/lydiahallie/javascript-questions"&gt;
        javascript-questions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A long list of (advanced) JavaScript questions, and their explanations ✨  
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This repository contains a long list of (advanced) JavaScript questions along with their explanations and gets frequently updated&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-33-js-concepts"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://github.com/leonardomso/33-js-concepts"&gt;33 JS Concepts&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitHub🌟: 41K+ &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/leonardomso"&gt;
        leonardomso
      &lt;/a&gt; / &lt;a href="https://github.com/leonardomso/33-js-concepts"&gt;
        33-js-concepts
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📜 33 JavaScript concepts every developer should know.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This repository is a collection of articles and books on the 33 JavaScript Concepts which every JavaScript Developer should know in order to have an in-depth knowledge of the language and its working.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-clean-code-javascript"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;Clean Code JavaScript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitHub🌟: 53K+ &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ryanmcdermott"&gt;
        ryanmcdermott
      &lt;/a&gt; / &lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;
        clean-code-javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🛁 Clean Code concepts adapted for JavaScript
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This repository consists of the software engineering principles, from Robert C. Martin's book Clean Code, adapted for JavaScript. It's a guide for producing readable, reusable, and refactorable software in JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-you-dont-know-js"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;You Don't Know JS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitHub🌟: 142K+ &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/getify"&gt;
        getify
      &lt;/a&gt; / &lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;
        You-Dont-Know-JS
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A book series on JavaScript. @YDKJS on twitter.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This is a series of books diving deep into the core mechanisms of the JavaScript language. The 2nd edition of the series is currently in progress, while the first edition is available &lt;a href="https://github.com/getify/You-Dont-Know-JS/blob/1st-ed/README.md"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-awesome-javascript"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://github.com/sorrycc/awesome-javascript"&gt;Awesome JavaScript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitHub🌟: 24K+ &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sorrycc"&gt;
        sorrycc
      &lt;/a&gt; / &lt;a href="https://github.com/sorrycc/awesome-javascript"&gt;
        awesome-javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🐢 A collection of awesome browser-side  JavaScript libraries, resources and shiny things.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;A collection of awesome browser-side JavaScript libraries and resources. This repository contains a list of variety of frameworks, template engines, articles and post, documentations, reactive and functional programming and much more which will increase your resourcefulness and might also help you to choose the tech stack for your next projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-30-seconds-of-code"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://github.com/30-seconds/30-seconds-of-code"&gt;30 seconds of Code&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitHub🌟: 79K+ &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/30-seconds"&gt;
        30-seconds
      &lt;/a&gt; / &lt;a href="https://github.com/30-seconds/30-seconds-of-code"&gt;
        30-seconds-of-code
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Short JavaScript code snippets for all your development needs
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This repository contains a huge collection of short JavaScript code snippets which can be super useful while working on your JavaScript projects thus increasing your efficiency and knowledge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-project-guidelines"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://github.com/elsewhencode/project-guidelines"&gt;Project Guidelines&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitHub🌟: 24K+ &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/elsewhencode"&gt;
        elsewhencode
      &lt;/a&gt; / &lt;a href="https://github.com/elsewhencode/project-guidelines"&gt;
        project-guidelines
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A set of best practices for JavaScript projects
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This repository contains a set of best practices for JavaScript projects which will develop your skills to follow the best practices this skill is super useful and important for any developer and will definitely help you to stand apart from the other developers. Following the best practices in your javascript projects will definitely increase your chance of being accepted for a job position.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#awesome-repos"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/pawelborkar/awesome-repos"&gt;Awesome Repos&lt;/a&gt;
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pawelborkar"&gt;
        pawelborkar
      &lt;/a&gt; / &lt;a href="https://github.com/pawelborkar/awesome-repos"&gt;
        awesome-repos
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A curated list of awesome repositories full of free resources.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Awesome Repos has a number of resourceful repositories packed in just one place. All you have to do is just visit this repository that's it. The repository is still growing and welcomes PRs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#awesome-javascript-projects"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Vishal-raj-1/Awesome-JavaScript-Projects"&gt;Awesome JavaScript Projects&lt;/a&gt;
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Vishal-raj-1"&gt;
        Vishal-raj-1
      &lt;/a&gt; / &lt;a href="https://github.com/Vishal-raj-1/Awesome-JavaScript-Projects"&gt;
        Awesome-JavaScript-Projects
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This Repository contain awesome vanilla JavaScript projects. 
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you are a beginner or new to JavaScript and want to improve your JavaScript skills by building projects then this repository can be super helpful for you. It contains a collection of projects written in vanilla JavaScript (with NO FRAMEWORKS &amp;amp; LIBRARIES INVOLVED). &lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vote-of-thanks"&gt;
  &lt;/a&gt;
  Vote Of Thanks
&lt;/h2&gt;

&lt;p&gt;Thank you so much for reading this post and I hope you find these repositories as useful as I do and will help you to become better javascript developer. Feel Free to give any suggestions and if you like my work you can follow me on &lt;a href="https://twitter.com/pawelsb"&gt;Twitter&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>github</category>
    </item>
    <item>
      <title>How to Create Facebook Landing Page Using HTML and CSS Only</title>
      <author>Ajay Sharma</author>
      <pubDate>Fri, 09 Jul 2021 07:52:26 +0000</pubDate>
      <link>https://dev.to/ajaysharma12799/how-to-create-facebook-landing-page-using-html-and-css-only-1723</link>
      <guid>https://dev.to/ajaysharma12799/how-to-create-facebook-landing-page-using-html-and-css-only-1723</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VDAUCybl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s8kfunbc4wwa01xyuklx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VDAUCybl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s8kfunbc4wwa01xyuklx.png" alt="Facebook Landing Page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Everyone, In this Post We Will be Seeing How to Create Facebook Landing Page Using HTML and CSS only.&lt;/p&gt;

&lt;p&gt;Here is The Live Link of Landing Page &lt;a href="https://ajaysharma12799.github.io/Facebook-Landing-Page/"&gt;https://ajaysharma12799.github.io/Facebook-Landing-Page/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow Me on LinkedIn &lt;a href="https://www.linkedin.com/in/ajaysharma12799/"&gt;https://www.linkedin.com/in/ajaysharma12799/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow Me on Github &lt;a href="https://www.github.com/ajaysharma12799/"&gt;https://www.github.com/ajaysharma12799/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Steps to Create :-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Choose Any Text Editor (VSCode Recommended).&lt;/li&gt;
&lt;li&gt;Setup Directory Structure.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JL8jBEvm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g771fuu24u62me5m26av.png" alt="Directory Structure"&gt;
&lt;/li&gt;
&lt;li&gt;Use Below HTML and CSS Code To Build Your Page.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Facebook - Login or Signup&amp;lt;/title&amp;gt;
    &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div id="container"&amp;gt;
        &amp;lt;div class="text__wrapper"&amp;gt;
            &amp;lt;div class="heading"&amp;gt;
                &amp;lt;img src="./img/facebook.svg" alt="Facebook"&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;p class="description"&amp;gt;Facebook helps you connect and share with the people in your life.&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="form__wrapper"&amp;gt;
            &amp;lt;form class="form"&amp;gt;
                &amp;lt;div&amp;gt;
                    &amp;lt;input type="text" name="Email_Mobile" id="Email_Mobile" placeholder="Email Address or Phone Number"&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;div&amp;gt;
                    &amp;lt;input type="password" name="Password" id="Password" placeholder="Password"&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;div&amp;gt;
                    &amp;lt;button type="submit" class="loginButton btn"&amp;gt;Login&amp;lt;/button&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/form&amp;gt;
            &amp;lt;a href="#" class="forgotPassword"&amp;gt;Forgotten Password?&amp;lt;/a&amp;gt;
            &amp;lt;button type="submit" class="registerButton btn"&amp;gt;Create New Account&amp;lt;/button&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300&amp;amp;display=swap');
:root {
    --primaryColor: rgb(25,119,242);
    --buttonColor: rgb(66,183,41);
    --bodyColor: rgb(239,242,245);
    --textColor: rgb(27,30,33);
}
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body {
    background-color: var(--bodyColor);
    font-family: 'Roboto', sans-serif;

}
a {
    text-decoration: none; 
    color: var(--buttonColor);   
}
button {
    border: none;
}
a:hover {
    text-decoration: underline;
}
input {
    padding: 7px;
    margin: 2% 0;
    border: 1px solid lightgray;
    border-radius: 5px;
    width: 200px;
}
input::placeholder {
    color: gray;
    font-weight: lighter;
    font-size: 10px;
}
.btn {
    width: 100%;
    border-radius: 3px;
    color: #fff;
    padding: 6px;
}
#container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 10%;
}
.text__wrapper {
    width: 37vw;
    margin-right: 3%;
    margin-top: 5%;
}
.heading {
    position: relative;
    top: -50%;
    left: -7%;
}
.heading &amp;gt; img {
    width: 350px;
}
.description {
    color: var(--textColor);
    font-weight: 900;
    font-size: 30px;
    float: left;
}
.form__wrapper {
    width: 300px;
    height: 250px;
    margin-top: 5%;
    background-color: #fff;
    padding: 5% 2% 5% 2%;
    border-radius: 5px;
    line-height: 150%;
    display: grid;
    justify-content: center;
    align-items: center;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}
.form {
    margin-top: -18%;
    margin-bottom: 7%;
}
.loginButton {
    background-color: var(--primaryColor); 
    color: #fff; 
    margin-top: 2%;
} 
.forgotPassword {
    color: var(--primaryColor);
    font-size: 10px;
    text-align: center;
}
.registerButton {
    background-color: var(--buttonColor); 
    color: #fff; 
    font-size: 10px;
    width: 60%;
    padding: 8px;
    font-weight: bold;
    margin: 0 auto;
    margin-top: 3%;
    margin-bottom: 3%;
}
/* Responsive Design */

/* Small Mobile Device */
@media (max-width: 320px) {
    #container {
        display: grid;
        margin-top: 10vh;
        justify-content: center;
    }
    .text__wrapper {
        width: 100%;
        margin-right: 3%;
        margin-top: -5%;
        text-align: center;
        margin: 0 auto;
    }
    .heading &amp;gt; img {
        width: 300px;
        position: relative;
        left: 8%;
    }
    .description {
        margin-bottom: 10%;
    }
    .form__wrapper {
        margin: 0 auto;
        height: 200px;
        background-color: #fff;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    }
    .form {
        margin-top: -5%;
    }
    .loginButton {
        background-color: var(--primaryColor); 
        color: #fff; 
        margin-top: 2%;
    } 
    .forgotPassword {
        color: var(--primaryColor);
        font-size: 10px;
        text-align: center;
    }
    .registerButton {
        background-color: var(--buttonColor); 
        color: #fff; 
        font-size: 10px;
        width: 60%;
        padding: 8px;
        font-weight: bold;
        margin: 0 auto;
    }
}

/* Average Mobile Devices */
@media (min-width: 320px) and (max-width: 480px) {
    #container {
        display: grid;
        margin-top: 10vh;
        justify-content: center;
    }
    .text__wrapper {
        width: 100%;
        margin-right: 3%;
        margin-top: -5%;
        text-align: center;
    }
    .heading &amp;gt; img {
        width: 350px;
        position: relative;
        left: 8%;
    }
    .description {
        margin-bottom: 5%;
    }
    .form__wrapper {
        width: 220px;
        height: 200px;
        margin-left: 3%;
        background-color: #fff;
        padding: 5% 2% 5% 2%;
        border-radius: 5px;
        margin: 0 auto;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    }
    .form {
        margin-top: -8%;
    }
    .loginButton {
        background-color: var(--primaryColor); 
        color: #fff; 
        margin-top: 2%;
    } 
    .forgotPassword {
        color: var(--primaryColor);
        font-size: 10px;
        text-align: center;
    }
    .registerButton {
        background-color: var(--buttonColor); 
        color: #fff; 
        font-size: 10px;
        width: 60%;
        padding: 8px;
        font-weight: bold;
        margin: 0 auto;
        margin-top: 3%;
        margin-bottom: 3%;
    }
}

/* Tablet and IPads */
@media (min-width: 481px) and (max-width: 768px) {
    #container {
        display: grid;
        margin-top: 10vh;
        justify-content: center;
    }
    .text__wrapper {
        width: 100%;
        margin-right: 3%;
        margin-top: -5%;
        text-align: center;
    }
    .heading &amp;gt; img {
        width: 350px;
        position: relative;
        left: 8%;
    }
    .description {
        margin-bottom: 5%;
    }
    .form__wrapper {
        width: 220px;
        height: 220px;
        margin-left: 3%;
        background-color: #fff;
        padding: 5% 2% 5% 2%;
        border-radius: 5px;
        margin: 0 auto;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    }
    .form {
        margin-top: -8%;
    }
    .loginButton {
        background-color: var(--primaryColor); 
        color: #fff; 
        margin-top: 2%;
    } 
    .forgotPassword {
        color: var(--primaryColor);
        font-size: 10px;
        text-align: center;
    }
    .registerButton {
        background-color: var(--buttonColor); 
        color: #fff; 
        font-size: 10px;
        width: 60%;
        padding: 8px;
        font-weight: bold;
        margin: 0 auto;
        margin-top: 3%;
        margin-bottom: 3%;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Getting started with Appwrite's Android SDK</title>
      <author>Christy Jacob</author>
      <pubDate>Fri, 09 Jul 2021 07:51:07 +0000</pubDate>
      <link>https://dev.to/appwrite/getting-started-with-appwrite-s-android-sdk-98l</link>
      <guid>https://dev.to/appwrite/getting-started-with-appwrite-s-android-sdk-98l</guid>
      <description>&lt;p&gt;One of the major highlights of Appwrite 0.9 is the official support for Android. We've also released a brand new Android SDK to go alongside it 😉!&lt;/p&gt;

&lt;p&gt;In this tutorial, we'll learn to setup Appwrite's Android SDK, interact with Appwrite's Accounts API and also learn to setup OAuth Logins in your App! We'll extensively use &lt;a href="https://developer.android.com/jetpack"&gt;JetPack components&lt;/a&gt; like Fragments, ViewModels, Data Binding, LiveData and Kotlin Coroutines! I hope you're as excited as I am! Let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  📝 Prerequisites
&lt;/h2&gt;

&lt;p&gt;At this stage, we assume that you already have an Appwrite instance up and running. If you do not have Appwrite setup yet, you can follow the super easy installation &lt;strong&gt;step&lt;/strong&gt; over at &lt;a href="https://appwrite.io/docs/installation"&gt;appwrite.io&lt;/a&gt;. It's not a typo. There really is only 1 step!&lt;/p&gt;

&lt;p&gt;You should have also setup an OAuth provider with Appwrite to be able to follow the OAuth section of this tutorial. You can learn to setup OAuth providers in Appwrite by going through &lt;a href="https://dev.to/appwrite/30daysofappwrite-oauth-providers-3jf6"&gt;our tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-android-project"&gt;
  &lt;/a&gt;
  🛠️ Create a new Android Project
&lt;/h2&gt;

&lt;p&gt;Setup your Android project and choose the &lt;strong&gt;Empty Activity&lt;/strong&gt; Template. Give your project a name, Choose &lt;strong&gt;Android 6.0 ( Marshmallow )&lt;/strong&gt; as your minimum SDK and click &lt;strong&gt;Finish&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L6tpNCqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9zv8spzgx4e2d07kpun3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L6tpNCqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9zv8spzgx4e2d07kpun3.png" alt="create_project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now is also a good time to add our Android App as a platform in the Appwrite Console. Head over to your &lt;code&gt;AndroidManifest.xml&lt;/code&gt; and locate the package name of your app. It should look something like &lt;code&gt;com.example.myapplication&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In your Appwrite dashboard, click on &lt;strong&gt;Add Platform&lt;/strong&gt; and select a &lt;strong&gt;New Android App&lt;/strong&gt;. Give your app a name, add the package name and click &lt;strong&gt;Register&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yDuPfrvs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0ujb83ae99ei6dfe4lk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yDuPfrvs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0ujb83ae99ei6dfe4lk.png" alt="add_platform"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once this is complete, it's time to head back to our Android project add our dependencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-appwrites-android-sdk"&gt;
  &lt;/a&gt;
  👷 Setup Appwrite's Android SDK
&lt;/h2&gt;

&lt;p&gt;Appwrite's Android SDK is hosted on Maven Central, so you'll first need to add the &lt;code&gt;mavenCentral()&lt;/code&gt; repository to your project's &lt;code&gt;build.gradle&lt;/code&gt; file ( if it's not already present ).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="n"&gt;allprojects&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;repositories&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;mavenCentral&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then add the Appwrite Android SDK to your app's &lt;code&gt;build.gradle&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="n"&gt;dependencies&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ... Other dependencies&lt;/span&gt;
    &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="s1"&gt;'io.appwrite:sdk-for-android:0.0.1'&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll also be using &lt;a href="https://developer.android.com/topic/libraries/data-binding"&gt;Data Binding&lt;/a&gt; and we need to enable that in our app's &lt;code&gt;build.gradle&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="n"&gt;android&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
    &lt;span class="n"&gt;buildFeatures&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;dataBinding&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sync your gradle dependencies and if there are no errors, we're ready to proceed!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-helper-classes"&gt;
  &lt;/a&gt;
  ⌨️ Create helper classes
&lt;/h2&gt;

&lt;p&gt;The first step is to initialise the &lt;code&gt;Client()&lt;/code&gt; class from the Appwrite SDK. For this, we will create a new file &lt;code&gt;utils/Client.kt&lt;/code&gt; where we will create a Singleton object to use across our App.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.example.myapplication.utils&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;android.content.Context&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.appwrite.Client&lt;/span&gt;

&lt;span class="kd"&gt;object&lt;/span&gt; &lt;span class="nc"&gt;Client&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;lateinit&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;client&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Client&lt;/span&gt;

    &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="c1"&gt;// Replace with your own endpoint and project ID&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://demo.appwrite.io/v1"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"6070749e6acd4"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If your Appwrite setup is running on localhost, you will need to make sure localhost is accessible from your emulator by using a proxy. Else, you can replace &lt;code&gt;localhost&lt;/code&gt; with your private IP address which you can find using the command &lt;code&gt;hostname -I&lt;/code&gt; on UNIX systems.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you're using Appwrite on &lt;strong&gt;localhost&lt;/strong&gt;, you need to set the &lt;code&gt;setSelfSigned(true)&lt;/code&gt; flag to true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://192.168.1.35/v1"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"6070749e6acd4"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setSelfSigned&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we're going to create another utility class called &lt;code&gt;utils/Event.kt&lt;/code&gt;. This utility class will allow us to handle &lt;strong&gt;LiveData Events&lt;/strong&gt; ( Changes that need to be observed only once ).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.example.myapplication.utils&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * Used as a wrapper for data that is exposed via a LiveData that represents an event.
 */&lt;/span&gt;
&lt;span class="k"&gt;open&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;hasBeenHandled&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="c1"&gt;// Allow external read but not write&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Returns the content and prevents its use again.
     */&lt;/span&gt;
    &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;getContentIfNotHandled&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hasBeenHandled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;null&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;hasBeenHandled&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;
            &lt;span class="n"&gt;content&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Returns the content, even if it's already been handled.
     */&lt;/span&gt;
    &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;peekContent&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-the-layouts"&gt;
  &lt;/a&gt;
  🏗️ Create the layouts
&lt;/h2&gt;

&lt;p&gt;Now, we're going to update the layout in &lt;code&gt;activity_main.xml&lt;/code&gt; to allow us to host fragments. Replace the contents of &lt;code&gt;activity_main.xml&lt;/code&gt; with this snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;androidx.constraintlayout.widget.ConstraintLayout&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:app=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res-auto"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:tools=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/tools"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
    &lt;span class="na"&gt;tools:context=&lt;/span&gt;&lt;span class="s"&gt;".MainActivity"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;androidx.fragment.app.FragmentContainerView&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/fragment_container_view"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/androidx.constraintlayout.widget.ConstraintLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, create layout file for our Fragment at &lt;code&gt;layout/fragment_account.xml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;layout&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:app=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res-auto"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:tools=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/tools"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;ScrollView&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;androidx.constraintlayout.widget.ConstraintLayout&lt;/span&gt;
            &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/constraint_layout"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
            &lt;span class="na"&gt;android:padding=&lt;/span&gt;&lt;span class="s"&gt;"16dp"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;EditText&lt;/span&gt;
                &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/responseTV"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"200dp"&lt;/span&gt;
                &lt;span class="na"&gt;android:background=&lt;/span&gt;&lt;span class="s"&gt;"@null"&lt;/span&gt;
                &lt;span class="na"&gt;android:enabled=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;
                &lt;span class="na"&gt;android:fadeScrollbars=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;
                &lt;span class="na"&gt;android:focusable=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;
                &lt;span class="na"&gt;android:longClickable=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;
                &lt;span class="na"&gt;android:scrollbars=&lt;/span&gt;&lt;span class="s"&gt;"vertical"&lt;/span&gt;
                &lt;span class="na"&gt;android:textIsSelectable=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintEnd_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintTop_toTopOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;EditText&lt;/span&gt;
                &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/email"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"16dp"&lt;/span&gt;
                &lt;span class="na"&gt;android:hint=&lt;/span&gt;&lt;span class="s"&gt;"Email"&lt;/span&gt;
                &lt;span class="na"&gt;android:inputType=&lt;/span&gt;&lt;span class="s"&gt;"textEmailAddress"&lt;/span&gt;
                &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"test@test.com"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"@id/responseTV"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintTop_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"@id/responseTV"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;


            &lt;span class="nt"&gt;&amp;lt;EditText&lt;/span&gt;
                &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/password"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"16dp"&lt;/span&gt;
                &lt;span class="na"&gt;android:hint=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt;
                &lt;span class="na"&gt;android:inputType=&lt;/span&gt;&lt;span class="s"&gt;"textPassword"&lt;/span&gt;
                &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"testtest"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"@id/email"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintTop_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"@id/email"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;EditText&lt;/span&gt;
                &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/name"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"16dp"&lt;/span&gt;
                &lt;span class="na"&gt;android:hint=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;
                &lt;span class="na"&gt;android:inputType=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"@id/password"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintTop_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"@id/password"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;Button&lt;/span&gt;
                &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/login"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"8dp"&lt;/span&gt;
                &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Login"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintEnd_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/signup"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintHorizontal_bias=&lt;/span&gt;&lt;span class="s"&gt;"0.5"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintHorizontal_chainStyle=&lt;/span&gt;&lt;span class="s"&gt;"spread"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintTop_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/name"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;Button&lt;/span&gt;
                &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/signup"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"8dp"&lt;/span&gt;
                &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Signup"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintEnd_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"@id/getUser"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintHorizontal_bias=&lt;/span&gt;&lt;span class="s"&gt;"0.5"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintStart_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/login"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintTop_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/name"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;Button&lt;/span&gt;
                &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/getUser"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"8dp"&lt;/span&gt;
                &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Get User"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintEnd_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintHorizontal_bias=&lt;/span&gt;&lt;span class="s"&gt;"0.5"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintStart_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/signup"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintTop_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/name"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;Button&lt;/span&gt;
                &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/oAuth"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"8dp"&lt;/span&gt;
                &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Login with Facebook"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintEnd_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintEnd_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/logout"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintHorizontal_bias=&lt;/span&gt;&lt;span class="s"&gt;"0.5"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintHorizontal_chainStyle=&lt;/span&gt;&lt;span class="s"&gt;"spread"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintTop_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"@id/signup"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;Button&lt;/span&gt;
                &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/logout"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
                &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Logout"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintEnd_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintHorizontal_bias=&lt;/span&gt;&lt;span class="s"&gt;"0.5"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintStart_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/oAuth"&lt;/span&gt;
                &lt;span class="na"&gt;app:layout_constraintTop_toTopOf=&lt;/span&gt;&lt;span class="s"&gt;"@id/oAuth"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;/androidx.constraintlayout.widget.ConstraintLayout&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ScrollView&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/layout&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-the-viewmodel"&gt;
  &lt;/a&gt;
  🔨 Create the ViewModel
&lt;/h2&gt;

&lt;p&gt;Let's now create a ViewModel at &lt;code&gt;ui/accounts/AccountsViewModel.kt&lt;/code&gt; to manage our app state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.example.myapplication.ui.accounts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;android.text.Editable&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.activity.ComponentActivity&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.lifecycle.*&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.example.myapplication.utils.Client.client&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.example.myapplication.utils.Event&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.appwrite.exceptions.AppwriteException&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.appwrite.services.Account&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;kotlinx.coroutines.launch&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.json.JSONObject&lt;/span&gt;


&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AccountsViewModel&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ViewModel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;_error&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;LiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_error&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;_response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;LiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_response&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;accountService&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;lazy&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Account&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onLogin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Editable&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Editable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;viewModelScope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accountService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;createSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;json&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;?:&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
                &lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;JSONObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;_response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;AppwriteException&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onSignup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Editable&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Editable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Editable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;viewModelScope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accountService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;json&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;?:&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
                &lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;JSONObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;_response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;AppwriteException&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onGetUser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;viewModelScope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accountService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;json&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;?:&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
                &lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;JSONObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;_response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;AppwriteException&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onLogout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;viewModelScope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accountService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;deleteSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"current"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;json&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;ifEmpty&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"{}"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;JSONObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;_response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;AppwriteException&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our ViewModel has 2 LiveData Objects: One to keep track of errors and one to keep track of the response.&lt;/p&gt;

&lt;p&gt;We also have 4 functions&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;onLogin - onClick handler for the Login Button&lt;/li&gt;
&lt;li&gt;onSignup - onClick handler for the Signup Button&lt;/li&gt;
&lt;li&gt;onLogout - onClick handler for the Logout Button&lt;/li&gt;
&lt;li&gt;onGetUser - onClick handler for the Get User Button&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#create-the-fragment"&gt;
  &lt;/a&gt;
  📝 Create the Fragment
&lt;/h2&gt;

&lt;p&gt;Awesome! Let's move on to create our Fragment at &lt;code&gt;ui/accounts/AccountsFragment.kt&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.example.myapplication.ui.accounts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;android.os.Bundle&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;android.view.LayoutInflater&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;android.view.View&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;android.view.ViewGroup&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;android.widget.Toast&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.activity.ComponentActivity&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.databinding.DataBindingUtil&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.fragment.app.Fragment&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.lifecycle.Observer&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.lifecycle.ViewModelProvider&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.example.myapplication.R&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.example.myapplication.databinding.FragmentAccountBinding&lt;/span&gt;


&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AccountsFragment&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Fragment&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;lateinit&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;FragmentAccountBinding&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;lateinit&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;AccountsViewModel&lt;/span&gt;

    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onCreateView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;inflater&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;LayoutInflater&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ViewGroup&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;
    &lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;viewModel&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ViewModelProvider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;AccountsViewModel&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DataBindingUtil&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inflate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;inflater&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fragment_account&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="k"&gt;false&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lifecycleOwner&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;viewLifecycleOwner&lt;/span&gt;
        &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setOnClickListener&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;onLogin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;signup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setOnClickListener&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;onSignup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setOnClickListener&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;onGetUser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setOnClickListener&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;onLogout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewLifecycleOwner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Observer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;getContentIfNotHandled&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Only proceed if the event has never been handled&lt;/span&gt;
                &lt;span class="nc"&gt;Toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;makeText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;requireContext&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;

        &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewLifecycleOwner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Observer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;getContentIfNotHandled&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;responseTV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#update-main-activity"&gt;
  &lt;/a&gt;
  🔧 Update Main Activity
&lt;/h2&gt;

&lt;p&gt;Finally, let's update our MainActivity.kt, that will initialise our &lt;code&gt;Client&lt;/code&gt; singleton and add the &lt;code&gt;AccountsFragment&lt;/code&gt; to the &lt;strong&gt;FragmentContainerView&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.example.myapplication&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.appcompat.app.AppCompatActivity&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;android.os.Bundle&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.fragment.app.add&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.fragment.app.commit&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.example.myapplication.utils.Client&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainActivity&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;AppCompatActivity&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;setContentView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activity_main&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nc"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;applicationContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;supportFragmentManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;commit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nf"&gt;setReorderingAllowed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;AccountsFragment&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fragment_container_view&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should now be able to run your app and create users, login, logout and get information about the currently logged in user!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-oauth-support"&gt;
  &lt;/a&gt;
  🔐 Adding OAuth Support
&lt;/h2&gt;

&lt;p&gt;You would have noticed that we have a &lt;strong&gt;Login With Facebook&lt;/strong&gt; button in our UI but it doesn't really do anything yet. So let's now add Facebook OAuth to our app!&lt;/p&gt;

&lt;p&gt;The first step is to add a callback activity in the &lt;code&gt;AndroidManifest.xml&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;manifest&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt;
    &lt;span class="na"&gt;package=&lt;/span&gt;&lt;span class="s"&gt;"com.example.myapplication"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;application&lt;/span&gt;

        &lt;span class="err"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="err"&gt;Other&lt;/span&gt; &lt;span class="err"&gt;Activities&lt;/span&gt; &lt;span class="err"&gt;--&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;activity&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;"io.appwrite.views.CallbackActivity"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;intent-filter&lt;/span&gt; &lt;span class="na"&gt;android:label=&lt;/span&gt;&lt;span class="s"&gt;"android_web_auth"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;action&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;"android.intent.action.VIEW"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;category&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;"android.intent.category.DEFAULT"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;category&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;"android.intent.category.BROWSABLE"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;data&lt;/span&gt; &lt;span class="na"&gt;android:scheme=&lt;/span&gt;&lt;span class="s"&gt;"appwrite-callback-6070749e6acd4"&lt;/span&gt;  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/intent-filter&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/activity&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/application&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure you replace the Project ID in &lt;code&gt;&amp;lt;data android:scheme="appwrite-callback-[PROJECT-ID]" /&amp;gt;&lt;/code&gt; with your own.&lt;/p&gt;

&lt;p&gt;Next, we'll add a function to our ViewModel to call the &lt;code&gt;createOAuth2Session()&lt;/code&gt; method of the Appwrite SDK.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;oAuthLogin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;activity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ComponentActivity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;viewModelScope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;accountService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;createOAuth2Session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;activity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"facebook"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"appwrite-callback-6070749e6acd4://demo.appwrite.io/auth/oauth2/success"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"appwrite-callback-6070749e6acd4://demo.appwrite.io/auth/oauth2/failure"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;AppwriteException&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The success and failure URLs take the following form&lt;br&gt;
&lt;code&gt;appwrite-callback-[PROJECT-ID]://[YOUR APPWRITE ENDPOINT]/auth/oauth2/[ success | failure ]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Make sure you replace the Project ID and Endpoint with that of your own.&lt;/p&gt;

&lt;p&gt;The last step is to invoke this function from &lt;code&gt;AccountsFragment.kt&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onCreateView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;inflater&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;LayoutInflater&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ViewGroup&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;
    &lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;// ... Existing Methods&lt;/span&gt;

        &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setOnClickListener&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;oAuthLogin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;activity&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;ComponentActivity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Re-run your app and you should now be able to trigger your Facebook OAuth Flow! With that, you now know how to interact with Appwrite's Accounts API in your Android Apps!&lt;/p&gt;

&lt;p&gt;We've built a complete app that interacts with all of Appwrite's APIs, which you can find over at our &lt;a href="https://github.com/appwrite/demo-getstarted-with-android"&gt;Github Repo&lt;/a&gt;. If you'd like to learn more about Appwrite or how Appwrite works under the hood, we've just curated all the resources for you during &lt;a href="https://30days.appwrite.io/"&gt;30 Days of Appwrite&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-credits"&gt;
  &lt;/a&gt;
  ✨️ Credits
&lt;/h2&gt;

&lt;p&gt;Hope you enjoyed this article! We love contributions and encourage you to take a look at our &lt;a href="https://github.com/appwrite/appwrite/issues"&gt;open isuses&lt;/a&gt; and &lt;a href="https://github.com/appwrite/rfc/pulls"&gt;ongoing RFCs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you get stuck anywhere, feel free to reach out to us on our &lt;a href="https://appwrite.io/discord"&gt;friendly support channels&lt;/a&gt; run by humans 👩‍💻.&lt;/p&gt;

&lt;p&gt;Here are some handy links for more information:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite/appwrite/blob/master/CONTRIBUTING.md"&gt;Appwrite Contribution Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite"&gt;Appwrite Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/docs"&gt;Appwrite Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>android</category>
      <category>tutorial</category>
      <category>opensource</category>
      <category>discuss</category>
    </item>
  </channel>
</rss>
