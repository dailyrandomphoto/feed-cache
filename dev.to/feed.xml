<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Web designer Roadmap 2021</title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 04:09:19 +0000</pubDate>
      <link>https://dev.to/git_tricks/web-designer-roadmap-2021-30an</link>
      <guid>https://dev.to/git_tricks/web-designer-roadmap-2021-30an</guid>
      <description>&lt;h2 id="what-is-a-web-designer"&gt;What is a Web Designer?&lt;/h2&gt;
&lt;p&gt;Are you both creative and technically inclined? You may want to consider a career as a web designer!&lt;/p&gt;
&lt;p&gt;Web designers build or redesign websites. They understand what it takes to make a website functional and easy to use, but also understand what is needed to make it aesthetically appealing to the user.&lt;/p&gt;
&lt;p&gt;Web design is a rapidly growing industry, as digital media has become part of everyone's lives and people rely on the web for their communications, information, shopping, social life, and more.&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/web-designers-roadmap-2021/&amp;amp;ved=2ahUKEwjqlebL7qryAhUF7HMBHVCiCxQQFnoECBoQAQ&amp;amp;usg=AOvVaw2Oo-ikwNXhEKOFAMaulAH4"&gt;Web Designer Roadmap&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;









</description>
    </item>
    <item>
      <title>Best VSCODE Extension For Every Web Developer</title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 04:06:19 +0000</pubDate>
      <link>https://dev.to/git_tricks/best-vscode-extension-for-every-web-developer-1gj8</link>
      <guid>https://dev.to/git_tricks/best-vscode-extension-for-every-web-developer-1gj8</guid>
      <description>&lt;p&gt;¬†&lt;span&gt;Hello everyone, my name is suman and I'm a frontend developer. In this blog post, I would like to share 10 VS code extensions that every frontend developer should use. The purpose of using these extensions is to write faster, cleaner, and more consistent code.¬†&lt;/span&gt;&lt;span&gt;Let's Jump in!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://www.codelivly.com/10-vs-code-extensions-every-frontend-developer-should-use/"&gt;Best VS Code extensions every Frontend Developer should use&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10 Magical JavaScript Tips For Every Web Developer</title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 04:01:32 +0000</pubDate>
      <link>https://dev.to/git_tricks/10-magical-javascript-tips-for-every-web-developer-3c2n</link>
      <guid>https://dev.to/git_tricks/10-magical-javascript-tips-for-every-web-developer-3c2n</guid>
      <description>&lt;p id="f6cc"&gt;In this article, we will discuss the 15 useful JavaScript tips for every web developer to save their valuable and precious time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p id="e1bb"&gt;I am always ready to learn although I do not always like being taught&lt;/p&gt;

&lt;p id="0fe5"&gt;‚Äî Winston Churchill&lt;/p&gt;


&lt;/blockquote&gt;
&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;h1 id="fa85"&gt;Tip 1. Flatten the array of the array&lt;/h1&gt;
&lt;p id="4e31"&gt;This tip will help you to flatten a deeply nested array of arrays by using¬†&lt;code&gt;Infinity&lt;/code&gt;¬†in¬†&lt;code&gt;flat&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;span id="e3aa"&gt;var array = [123, 500, [1, 2, [34, 56, 67, [234, 1245], 900]], 845, [30257]]&lt;/span&gt;&lt;span id="16da"&gt;//flatten array of array&lt;br&gt;array.flat(Infinity)&lt;/span&gt;&lt;span id="b0d8"&gt;// output:&lt;br&gt;// [123, 500, 1, 2, 34, 56, 67, 234, 1245, 900, 845, 30257]&lt;/span&gt;&lt;/pre&gt;
&lt;h1 id="902c"&gt;Tip 2. Easy Exchange Variables&lt;/h1&gt;
&lt;p id="ebf9"&gt;You probably swap the two variables using a third variable¬†&lt;code&gt;temp&lt;/code&gt;. But this tip will show you a new way to exchange variables using destructuring.&lt;/p&gt;
&lt;pre&gt;&lt;span id="298c"&gt;//example 1&lt;/span&gt;&lt;span id="3316"&gt;var a = 6;&lt;br&gt;var b = 7;&lt;/span&gt;&lt;span id="b133"&gt;[a,b] = [b,a]&lt;/span&gt;&lt;span id="aa36"&gt;console.log(a,b) // 7 6&lt;/span&gt;&lt;/pre&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/magical-javascript-tips-for-every-web-developer/"&gt;10 Magical JavaScript Tips for Every Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;

</description>
    </item>
    <item>
      <title>Top 20 JavaScript tips and tricks to increase your Speed and Efficiency </title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 03:57:50 +0000</pubDate>
      <link>https://dev.to/git_tricks/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-obc</link>
      <guid>https://dev.to/git_tricks/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-obc</guid>
      <description>&lt;h3&gt;Convenient and useful techniques to reduce the lines of code and pace up your Dev Work!&lt;/h3&gt;
&lt;p&gt;In our daily tasks, we get to write functions such as sorting, searching, finding unique values, passing parameters, swapping values etc, so here I present my list of shorthand techniques to write all of them as a Pro!‚úåüèª&lt;/p&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;img alt="Increase Your Performance" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftNfvGUp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;JavaScript is truly an awesome languageüíõ to learn and work with. And there can be more than one approach to reach to the same solution for given problem. In this article, we will discuss only the quickest ones.üöÄ&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;These approaches will definitely help you in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reducing the number of LOC(lines of code),&lt;/li&gt;
&lt;li&gt;Coding Competitions,&lt;/li&gt;
&lt;li&gt;Hackathons or&lt;/li&gt;
&lt;li&gt;Other time bound tasks.‚è±&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of these JavaScript Hacks uses techniques from ECMAScript6(ES2015) onwards, though the latest version is ECMAScript11(ES2020).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: All below tricks have been tested on the Console of Google Chrome.&lt;/em&gt;&lt;/p&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/top-20-javascript-tips-and-tricks/"&gt;Top 20 JavaScript tips and tricks to increase your Speed and Efficiency&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>üöÄ20 Best CSS3 Library For Developers.</title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 03:53:51 +0000</pubDate>
      <link>https://dev.to/git_tricks/20-best-css3-library-for-developers-25ff</link>
      <guid>https://dev.to/git_tricks/20-best-css3-library-for-developers-25ff</guid>
      <description>&lt;p&gt;Web Developers used to spend a lot of time creating beautiful CSS. Thanks to the CSS libraries, we now have a better, faster, and more effective way to build responsive websites and web applications.&lt;/p&gt;
&lt;p&gt;Are you still looking for the best CSS libraries? Do you want to know which library you should try? In this article, we have 20 best CSS libraries for your inspiration.&lt;/p&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#how-do-css-libraries-work"&gt;&lt;/a&gt;ü§î How do CSS libraries work?&lt;/h2&gt;
&lt;p&gt;CSS library gives web developers a basic structure, which includes grid, interactive UI patterns, web typography, tooltips, buttons, form elements, icons. This structure helps web developers to start quickly and efficiently when they are designing a website or web applications.&lt;/p&gt;
&lt;p&gt;Here we have put together¬†&lt;span&gt;20 best CSS libraries.&lt;/span&gt;¬†We hope you like them, and most importantly, find the best one for your needs.&lt;/p&gt;
&lt;h4&gt;
&lt;br&gt;
&lt;a href="#"&gt;&lt;/a&gt;Let's go....ü§©&lt;/h4&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwii76qFzaPyAhWvyzgGHX9RA-kQFnoECAMQBQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;üöÄ20 Best CSS3 Library For Developers&lt;/a&gt;&lt;/b&gt;.

</description>
    </item>
    <item>
      <title>7 Git tricks that changed my life</title>
      <author>Git Tricks</author>
      <pubDate>Mon, 23 Aug 2021 03:52:42 +0000</pubDate>
      <link>https://dev.to/git_tricks/7-git-tricks-that-changed-my-life-24bc</link>
      <guid>https://dev.to/git_tricks/7-git-tricks-that-changed-my-life-24bc</guid>
      <description>&lt;p&gt;&lt;span&gt;Git is one of the most common version control systems available, and it's used on private systems and publicly hosted websites for all kinds of development work. Regardless of how proficient with Git I become, it seems there are always features left to discover. Here are seven tricks that have changed the way I work with Git.&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Read More:¬†&lt;/span&gt;&lt;h1&gt;&lt;a href="https://www.codelivly.com/git-tricks-that-changed-my-life/"&gt;7 Git tricks that changed my life&lt;/a&gt;&lt;/h1&gt;

</description>
    </item>
    <item>
      <title>Object Oriented PHP (Lesson 2: Objects &amp; Static Methods)</title>
      <author>Clean Code Studio</author>
      <pubDate>Mon, 23 Aug 2021 03:06:22 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/object-oriented-php-lesson-2-objects-static-methods-4l5b</link>
      <guid>https://dev.to/cleancodestudio/object-oriented-php-lesson-2-objects-static-methods-4l5b</guid>
      <description>&lt;p&gt;&lt;a href="https://twitter.com/cleancodestudio"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zFu-SM5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/twitter/follow/cleancodestudio.svg%3Fstyle%3Dsocial" alt="Twitter Follow"&gt;&lt;/a&gt; &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;An object is the implementation of a class. As discussed in lesson 1, a class is simply a blue print that outlines something. An object is the actual thing that specifies the specific details.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#objects-implementation-of-a-class"&gt;
  &lt;/a&gt;
  &lt;a href="https://cleancode.studio/series/object-oriented-php/episodes/2"&gt;Objects&lt;/a&gt;: Implementation of a &lt;a href="https://cleancode.studio/series/object-oriented-php/episodes/1"&gt;Class&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Conceptualize a band

&lt;ul&gt;
&lt;li&gt;A band has a name&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;A band has members&lt;/li&gt;
&lt;li&gt;A band can add a member&lt;/li&gt;
&lt;li&gt;A band has music&lt;/li&gt;
&lt;li&gt;A band can play music&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/_Zd9B_jUwlw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#static-methods"&gt;
  &lt;/a&gt;
  &lt;a href="https://cleancode.studio/series/object-oriented-php/episodes/2"&gt;Static Methods&lt;/a&gt;:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Are callable from the class level (You don't need to create an instance of the class to call it)&lt;/li&gt;
&lt;li&gt;Are considered "global to the class namespace"&lt;/li&gt;
&lt;li&gt;I recommend watching the tutorial linked above to better understand static methods - the screencast does a thorough job explaining static methods.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Objects&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In object-oriented programming (OOP), objects are the things you think about first in designing a program and they are also the units of code that are eventually derived from the process. ... Each object is an instance of a particular class or subclass with the class's own methods or procedures and data variables.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Static Methods&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In object-oriented programming (OOP) the methods that belong to a class definition are called static methods. (Sometimes they are called class methods, but this is confusing.) A static method is part of a class definition, but is not part of the objects it creates. Important: A program can execute a static method without first creating an object!&lt;/p&gt;
&lt;/blockquote&gt;


&lt;center&gt;


&lt;h3&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The End
&lt;/h3&gt;




&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #343c35 !important;
      color: #f5f5f5 !important;
      border-color: #343c35 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YeAAvjHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GeGRizPU--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/4f170830-7e2c-4f3e-81fe-b666a90b7e3f.gif" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://cleancode.studio/clean-code"&gt;Clean Code&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/design-patterns"&gt;Java Script Design Patterns&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/series/object-oriented-php"&gt;Object Oriented Programming&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/algorithms"&gt;JavaScript Algorithm Examples&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://cleancode.studio"&gt;Clean Code Studio&lt;/a&gt;&lt;br&gt;
‚òïÔ∏è Code Tips&lt;br&gt;
‚òïÔ∏è Career Advice&lt;br&gt;
‚òïÔ∏è Developer Memes&lt;br&gt;
&lt;small&gt;Shiny button, Fancy ùó°ùó≤ùòÑùòÄùóπùó≤ùòÅùòÅùó≤ùóø üëá, Juicy Dev Tips...wanna join?&lt;/small&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://cleancodestudio.paperform.co/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dgj1OcQv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7hwc3k4pzedr59fnr9r.png" alt="Yes, I want in! Button to go sign up for clean code studio newsletter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;(Discover [50+ pages] of my personal FAANG interview notes!)&lt;/small&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://twitter.com/cleancodestudio"&gt;Follow @cleancodestudio on Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtube.com/c/cleancodestudio"&gt;Follow @cleancodestudio on YouTube&lt;/a&gt;&lt;br&gt;
&lt;a href="https://tiktok.com/@cleancodestudio"&gt;Follow @cleancodestudio on TikTok&lt;/a&gt;&lt;br&gt;
&lt;a href="https://facebook.com/cleancodestudio"&gt;Follow @cleancodestudio on Facebook&lt;/a&gt;&lt;br&gt;
&lt;a href="https://instagram.com/cleancodestudio"&gt;Follow @cleancodestudio on Instagram&lt;/a&gt;&lt;br&gt;
&lt;a href="https://linkedin.com/company/cleancodestudio"&gt;Follow @cleancodestudio on LinkedIn&lt;/a&gt;&lt;br&gt;
&lt;a href="https://reddit.com/r/cleancodestudio"&gt;Follow @cleancodestudio on Reddit&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/cleancodestudio"&gt;Follow @cleancodestudio on Dev.to&lt;/a&gt;&lt;br&gt;
&lt;a href="https://stackoverflow.com/users/8541350/clean-code-studio"&gt;Follow @cleancodestudio on Stack Overflow&lt;/a&gt;&lt;br&gt;
&lt;a href="https://npmjs.com/~zhorton999"&gt;Follow @cleancodestudio packages on npm&lt;/a&gt;&lt;br&gt;
&lt;a href="https://packagist.org/packages/clean-code-studio"&gt;Follow @cleancodestudio packages on packagist&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/zhorton34"&gt;Star @cleancodestudio on Github&lt;/a&gt;&lt;/p&gt;




&lt;/center&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>codenewbie</category>
      <category>oop</category>
    </item>
    <item>
      <title>GitHub Web Editor: FREE VSCode in the browser</title>
      <author>Davide 'CoderDave' Benvegn√π</author>
      <pubDate>Mon, 23 Aug 2021 01:41:26 +0000</pubDate>
      <link>https://dev.to/github/vscode-in-the-browser-for-free-github-web-editor-k4h</link>
      <guid>https://dev.to/github/vscode-in-the-browser-for-free-github-web-editor-k4h</guid>
      <description>&lt;p&gt;A lightweight code editor, based on VSCode, that can be accessed via Browser, and it's &lt;strong&gt;completely free&lt;/strong&gt;. Sounds too good to be true? Well this time it's not.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;p&gt;As promised in the &lt;a href="https://dev.to/github/github-codespaces-ga-any-good-reviewed-and-tested-3e62"&gt;article&lt;/a&gt; / &lt;a href="https://youtu.be/Car0QZ_YbxQ"&gt;video&lt;/a&gt; about Codespaces that I've released last week (&lt;em&gt;check it out if you haven't yet&lt;/em&gt;), today we talk about an awesome new feature that has been released by GitHub together with Codespaces.&lt;/p&gt;

&lt;p&gt;I'm talking about the new &lt;strong&gt;Web Editor experience&lt;/strong&gt; accessible directly from your repos. Best part? It's &lt;strong&gt;completely free&lt;/strong&gt; for everyone!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;As usual, if you are a &lt;strong&gt;visual learner&lt;/strong&gt;, or simply prefer to watch and listen instead of reading, here you have &lt;strong&gt;the video with the whole explanation and demo&lt;/strong&gt;, which to be fair is much &lt;strong&gt;&lt;em&gt;more complete&lt;/em&gt;&lt;/strong&gt; than this post.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UDbdChCXIKw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/UDbdChCXIKw"&gt;Link to the video: https://youtu.be/UDbdChCXIKw&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you rather prefer reading, well... let's just continue :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h3&gt;

&lt;p&gt;The new Web Editor is a &lt;strong&gt;lightweight code editor&lt;/strong&gt;, based on &lt;strong&gt;VSCode&lt;/strong&gt;. It is similar to Codespaces, but it is not backed by any compute backing; it is in fact &lt;strong&gt;entirely powered by your browser&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This means it has &lt;strong&gt;some limitations&lt;/strong&gt; over Codespaces, and we will see it in a moment, but on the flipside it's very fast to load and quickly navigate. It is &lt;strong&gt;perfect for making small changes&lt;/strong&gt; to your code without the need of having an IDE on your laptop.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-access-it"&gt;
  &lt;/a&gt;
  How to Access it
&lt;/h3&gt;

&lt;p&gt;There are currently 2 ways to access the new Web Editor: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Directly via URL&lt;/strong&gt; -  just change &lt;code&gt;github.com&lt;/code&gt; to &lt;code&gt;github.dev&lt;/code&gt; in your browser when in the repo you want to work on &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;By Keyboard&lt;/strong&gt; - pressing the full stop &lt;code&gt;.&lt;/code&gt; keyboard button while in the repo&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h3&gt;

&lt;p&gt;Alright, it's time to see this in actions. Images are 1,000 times better than words, so check it out here:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UDbdChCXIKw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Demo starts at &lt;a href="https://youtu.be/UDbdChCXIKw?t=110"&gt;minute 1:50&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Comment down below&lt;/strong&gt; with what you think of this new Web Editor. It's still in beta, so probably &lt;strong&gt;some features will be added&lt;/strong&gt;, but I think it's really cool!&lt;/p&gt;

&lt;p&gt;I will soon have another article/video in which I will do a bit by bit comparison between Codespaces and this Web Editor, so consider following me or subscribing if you don't wanna miss it.&lt;/p&gt;

&lt;p&gt;Also, checkout &lt;a href="https://youtu.be/Car0QZ_YbxQ"&gt;this video&lt;/a&gt;, where I talk about the new Codespaces features now that it's GA.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; üöÄ for more content:&lt;/p&gt;

&lt;p&gt;üìΩ &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
‚òï &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
üíñ &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
üåê &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
üëï &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
üë¶üèª &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
üê±‚Äçüíª &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
üë≤üèª &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
üë¥üèª &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
üîâ &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UDbdChCXIKw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>github</category>
      <category>codenewbie</category>
      <category>codespaces</category>
    </item>
    <item>
      <title>Python For Data Science</title>
      <author>Harsha Vardhan</author>
      <pubDate>Mon, 23 Aug 2021 01:27:39 +0000</pubDate>
      <link>https://dev.to/harshavardhan/python-for-data-science-gaf</link>
      <guid>https://dev.to/harshavardhan/python-for-data-science-gaf</guid>
      <description>&lt;p&gt;Introduction to Python:&lt;br&gt;
Python is a general-purpose interpreted, interactive, object-oriented, and high-level programming language. It was created by Guido van Rossum during 1985- 1990&lt;/p&gt;

&lt;p&gt;Why Python ?&lt;br&gt;
Interpreted ‚àí Python is processed at runtime by the interpreter. You do not need to compile your program before executing it. This is similar to PERL and PHP.&lt;/p&gt;

&lt;p&gt;Interactive ‚àí You can actually sit at a Python prompt and interact with the interpreter directly to write your programs.&lt;/p&gt;

&lt;p&gt;Object-Oriented ‚àí Python supports Object-Oriented style or technique of programming that encapsulates code within objects.&lt;/p&gt;

&lt;p&gt;Beginner's Language ‚àí Python is a great language for the beginner-level programmers and supports the development of a wide range of applications from simple text processing to WWW browsers to games.&lt;/p&gt;

&lt;p&gt;Where we can use Python?&lt;br&gt;
Data Science, Artificial Intelligence, Machine Learning&lt;br&gt;
Image Processing&lt;br&gt;
Robot-Operating-Systems (ROS)&lt;br&gt;
Web frameworks&lt;/p&gt;

&lt;p&gt;1.1 Python variables:&lt;br&gt;
Variables are nothing but reserved memory locations to store values. This means that when you create a variable you reserve some space in memory. Python variables do not need explicit declaration to reserve memory space. The declaration happens automatically when you assign a value to a variable.&lt;/p&gt;

&lt;p&gt;Standard Data Types:&lt;br&gt;
The data stored in memory can be of many types. For example, a person's age is stored as a numeric value and his or her address is stored as alphanumeric characters. Python has various standard data types that are used to define the operations possible on them and the storage method for each of them.&lt;/p&gt;

&lt;p&gt;Python has five standard data types:&lt;br&gt;
Numbers&lt;br&gt;
String&lt;br&gt;
List&lt;br&gt;
Tuple&lt;br&gt;
Dictionary&lt;/p&gt;

&lt;p&gt;Python Identifiers:&lt;br&gt;
A Python identifier is a name used to identify a variable, function, class, module or other object. An identifier starts with a letter A to Z or a to z or an underscore (_) followed by zero or more letters, underscores and digits (0 to 9).&lt;/p&gt;

&lt;p&gt;Python does not allow punctuation characters such as @, $, and % within identifiers. Python is a case sensitive programming language. Thus, Manpower and manpower are two different identifiers in Python.&lt;/p&gt;

&lt;p&gt;Reserved Words:&lt;br&gt;
The following list shows the Python keywords. These are reserved words and you cannot use them as constants or variables or any other identifier names. All the Python keywords contain lowercase letters only.&lt;/p&gt;

</description>
      <category>python</category>
      <category>datascience</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Sending GET Request In Python Using Requests</title>
      <author>Aya Bouchiha</author>
      <pubDate>Sun, 22 Aug 2021 23:55:12 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/sending-get-request-in-python-using-requests-2ad</link>
      <guid>https://dev.to/ayabouchiha/sending-get-request-in-python-using-requests-2ad</guid>
      <description>&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  installation
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install requests
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sending-get-requests-in-python-using-requests"&gt;
  &lt;/a&gt;
  Sending GET requests in Python using requests
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'https://jsonplaceholder.typicode.com/posts/1'&lt;/span&gt;

&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# &amp;lt;Response [200]&amp;gt;
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 200
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# {
#  "userId": 1,
#  "id": 1,
#  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
#  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
#}
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# https://jsonplaceholder.typicode.com/posts/1
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# application\json; charset=utf-8
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Content-Type'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# b'{\n  "userId": 1,\n  "id": 1,\n  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",\n  "body": "quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto"\n}'
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="c1"&gt;# &amp;lt;class 'dict'&amp;gt;
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;

&lt;span class="c1"&gt;# for more information
# print(dir(response))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#tutorials-to-learn-requests"&gt;
  &lt;/a&gt;
  tutorials to learn requests
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=tb8gHvYlCFs"&gt;Python Requests Tutorial: Request Web Pages, Download Images, POST Data, Read JSON, and More&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iv-Uc8d3tDs&amp;amp;"&gt;Requests in Python | Python Request Tutorial | Python Tutorial For Beginners | Edureka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/python-requests-tutorial/"&gt;Python Requests Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://realpython.com/python-requests/"&gt;python-requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#suggested-posts"&gt;
  &lt;/a&gt;
  Suggested posts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/all-you-need-to-know-about-python-json-module-5ef0"&gt;All You Need To Know About Python JSON Module&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/5-helpful-python-math-module-methods-44gf"&gt;5 Helpful Python Random Module Methods&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/5-helpful-python-math-module-methods-44gf"&gt;5 Helpful Python Math Module Methods&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/5-useful-python-string-methods-4pe7"&gt;5 Useful Python String Methods&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy codding!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Why every developer should be using TDD</title>
      <author>Kars van Iersel</author>
      <pubDate>Sun, 22 Aug 2021 23:29:14 +0000</pubDate>
      <link>https://dev.to/karsvaniersel/why-every-developer-should-be-using-tdd-bki</link>
      <guid>https://dev.to/karsvaniersel/why-every-developer-should-be-using-tdd-bki</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;No skill is more important for programmers than the ability to write code that works. But all too often, developers don't think about whether their code will work until it's finished, and by then they've already created many bugs that are difficult or impossible to fix.  &lt;/p&gt;

&lt;p&gt;That's why every developer should be using Test Driven Development (TDD). TDD forces you to "think before you act" and come up with a test before writing any new lines of code. This simple technique has been shown in studies done at Microsoft Research and elsewhere to reduce programming errors by as much as 50 percent--an amazing reduction in mistakes! And because TDD prevents so many bugs from creeping into your software, it also makes future debugging sessions shorter and reduces technical debt.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tdd"&gt;
  &lt;/a&gt;
  What is TDD
&lt;/h2&gt;

&lt;p&gt;When developers code, they need to make sure that their code works, and it will work when the project is complete. This means they need to write tests for this coding before they even write the code! &lt;/p&gt;

&lt;p&gt;The way TDD works is simple: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;First, create a test for your program that will be called "Arithmetical Addition Test" - in this case, adding two numbers together. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then write some arithmetic addition code that creates a result according to the test you created. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, run your test and make sure that the result matches what you expect it to be. If not, then your code has an error in it somewhere.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-benefits-of-using-tdd"&gt;
  &lt;/a&gt;
  The benefits of using TDD
&lt;/h2&gt;

&lt;p&gt;The benefits of using TDD are many. One of the major benefits is that it prevents bugs before they ever get into your code. This is a great thing because not only do you find the mistakes earlier and more easily, but you also don't have to waste time fixing them later on. This means that a developer can spend less time debugging and more time creating solutions. &lt;/p&gt;

&lt;p&gt;It's also important to note that TDD allows developers to distribute their work in a better way. Taking the time to create tests for every function forces developers to think about what they are doing before they start writing new lines of code, which helps them use their time better and understand what's going on in the project better.&lt;/p&gt;

&lt;p&gt;Test Driven Development (TDD) is an important skill to have for developers because it helps them create code that will work. It's a simple process of creating tests before the code and then checking if they match up to what was expected after running them. This technique has been shown in studies done at Microsoft Research and elsewhere to reduce programming errors by as much as 50%.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-tdd-in-your-workflow"&gt;
  &lt;/a&gt;
  How to use TDD in your workflow
&lt;/h2&gt;

&lt;p&gt;There are many benefits to using TDD in your workflow, and it doesn't take too much time or effort to implement. &lt;/p&gt;

&lt;p&gt;It's important for developers to create tests first before they start writing code. Once you have testing, you know what your expectations for the code should be and can write the code to match those expectations. When you're both writing the test and the function, it forces you to think about what each step of the process is doing as well as how they interact with each other. This helps reduce errors and bugs that get into your code before they cause problems in the future. &lt;/p&gt;

&lt;p&gt;When coding, it's also important to make sure that the tests are developed enough. It's not necessary for them all to be 100% complete, but they should at least have a basic functional outline to help make sure that the code is going in the right direction. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-you-should-start-using-tdd"&gt;
  &lt;/a&gt;
  When you should start using TDD
&lt;/h2&gt;

&lt;p&gt;The best time to start using TDD in your workflow is right now. The sooner you start, the more bugs will be caught and the less work you'll need to do fixing them later on.  Even if you're not currently using TDD, there's never a bad time to start. Even though it can be challenging at first, when writing code without testing can lead to much more complex issues later on in the development process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-for-getting-started-with-and-implementing-tdd-into-your-workflow-or-project"&gt;
  &lt;/a&gt;
  Tips for getting started with and implementing TDD into your workflow or project
&lt;/h2&gt;

&lt;p&gt;TDD can be challenging to use at first, but the time spent will be worth it in the long run. It's important that tests are written carefully and completely so that they do not need to be changed later on during development. The best way to start is by testing a few of your functions in a simple program or project before moving on to more complex code. &lt;/p&gt;

&lt;p&gt;For example, you could try out TDD with a small function that takes two numbers and adds them together. Once you're confident with how TDD works with this function, then move on to the next one related to addition and continue from there. &lt;/p&gt;

&lt;p&gt;It can also be helpful for developers to make sure that they have plenty of tests before they start writing code. You don't need hundreds of tests, but a good number to start with is about 5-10 per function that's being developed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;TDD is a popular programming technique that helps developers create code that will work. This process involves writing tests before the code and then checking if they match up to what was expected after running them. There are many benefits to using TDD in your workflow, including reducing bugs by as much as 50%! No matter where you're at or how experienced of a developer you are, it's never too late to start this practice in your workflow. It can be challenging at first but the time spent will pay off down the line with less debugging needed on future projects! &lt;/p&gt;

</description>
      <category>testing</category>
      <category>laravel</category>
      <category>tdd</category>
    </item>
    <item>
      <title>I made a package manager!</title>
      <author>Pandademic</author>
      <pubDate>Sun, 22 Aug 2021 23:16:09 +0000</pubDate>
      <link>https://dev.to/pandademic/i-made-a-package-manager-23dc</link>
      <guid>https://dev.to/pandademic/i-made-a-package-manager-23dc</guid>
      <description>&lt;h1&gt;
  &lt;a href="#i-made-a-package-manager"&gt;
  &lt;/a&gt;
  I made a Package manager!
&lt;/h1&gt;




&lt;p&gt;I made a package manager. It can download a package. It depends on simple ini files in a repository instead of package.json or anything else. Its entire production zip is less than &lt;strong&gt;5kb&lt;/strong&gt;s of space including docs and other things. It is written in ruby and depends on wget and Inifile to download and read the package files , respectively. feedback and pull requests (for packages) welcome!&lt;br&gt;
REPO:&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Pandademic"&gt;
        Pandademic
      &lt;/a&gt; / &lt;a href="https://github.com/Pandademic/Latte"&gt;
        Latte
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Latte package manager!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Latte&lt;/h1&gt;
&lt;h2&gt;
&lt;a href="https://www.codefactor.io/repository/github/pandademic/latte" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ca244924ecc0c7aaf31731b9d1d0dfb35b408b40fc0861496eae174f6ce9a802/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f70616e646164656d69632f6c617474652f6261646765" alt="CodeFactor"&gt;&lt;/a&gt;
&lt;a href="https://gitpod.io/#github.com/Pandademic/Latte" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a39c82463e8dad3662b69090dfe6c5cee4f5422173330ad3652938da151ebc0b/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d476974706f64266d6573736167653d4f70656e253230696e253230476974706f6426636f6c6f723d6f72616e6765266c6f676f3d476974706f64" alt="gitpod"&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Latte is a Open source MIT licenced Package management system.It works by take the name of the package, finding its package.ini file and then getting the source code from the repo or the latest release zip/tar.gz.&lt;/p&gt;
&lt;h1&gt;
Install&lt;/h1&gt;

&lt;h2&gt;
Prerequisites&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ruby 2.6 or higher&lt;/li&gt;
&lt;li&gt;latest files in the production branch&lt;/li&gt;
&lt;li&gt;wget&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Actual Install&lt;/h2&gt;

&lt;h2&gt;
Linux:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;extract the file called latte(should be located in the dist folder of the source code) into your home directory&lt;/li&gt;
&lt;li&gt;in your ./bashrc or .zshrc or .fishrc put
&lt;code&gt;sh  alias latte ="ruby ~/latte"   &lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;and you should be good to use commands!&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
Creating a package&lt;/h1&gt;

&lt;p&gt;steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Fork this repo&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Make a new github repo and do your coding there&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Then in the Fork of packages folder create a packageName.ini where packageName is your packages name.Then look at the package_example.ini in the docs to format the package.ini&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Push your changes in the fork to a pull request&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Pandademic/Latte"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Please leave your feedback!

</description>
      <category>showdev</category>
      <category>ruby</category>
    </item>
  </channel>
</rss>
