<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>API, FUNCTIONS, BUTTON NOT FIRING IN REACT</title>
      <author>ADEKOLA Abdwahab</author>
      <pubDate>Sat, 10 Apr 2021 14:53:36 +0000</pubDate>
      <link>https://dev.to/codarbind/api-functions-button-not-firing-in-react-2hcc</link>
      <guid>https://dev.to/codarbind/api-functions-button-not-firing-in-react-2hcc</guid>
      <description>&lt;p&gt;I am currently building a MERN application.&lt;/p&gt;

&lt;p&gt;It is working fine on localhost - desktop, then I thought of exploring it on mobile, so I created a local network. See below for how to create and connect to local network.&lt;/p&gt;

&lt;p&gt;Alas, some of my buttons were not responding.&lt;/p&gt;

&lt;p&gt;What could have happened?&lt;/p&gt;

&lt;p&gt;Upon troubleshooting, I realized that only 'SUBMIT' buttons were not working.&lt;/p&gt;

&lt;p&gt;... after hours of googling ...&lt;/p&gt;

&lt;p&gt;I threw &lt;em&gt;alert('i clicked')&lt;/em&gt; inside the onclick function, I got the alert whenever I clicked.&lt;/p&gt;

&lt;p&gt;It was then I realized that I was calling a wrong API url. &lt;/p&gt;

&lt;p&gt;How?&lt;/p&gt;

&lt;p&gt;The API URL i was calling is &lt;a href="http://localhost:4000"&gt;http://localhost:4000&lt;/a&gt;. Port 4000 was where my backend is connected to. This would work fine on my local machine. However, it wont work over the network, because localhost === 127.0.0.1, which is different from Local Area Network Address - 192.168.43.263 .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I change &lt;a href="http://localhost:4000"&gt;http://localhost:4000&lt;/a&gt; to &lt;a href="http://192.168.43.263:4000"&gt;http://192.168.43.263:4000&lt;/a&gt; for all instances.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOW TO CREATE A LOCAL NETWORK?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Simple and straight forward:&lt;/p&gt;

&lt;p&gt;A. Get your local ip:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;open command prompt or any command line interface:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ATlKaTrN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mupzw01wx2atcpvazq6u.png" alt="image"&gt;
&lt;/li&gt;
&lt;li&gt;Type in ipconfig:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1v7iSztD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tentpqkksi71jbdfn04i.png" alt="image"&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click enter:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cX74w4w5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqoupy3sctbr5x90vw5d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cX74w4w5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqoupy3sctbr5x90vw5d.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The marked is your IP.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;B. Connect your laptop (where your localhost is domiciled) to the same network with the other device (may be your phone) you want to use. This could be achieved by connecting them to the same wifi hubspot. &lt;/p&gt;

&lt;p&gt;My mobile device is connected to ColdVi wifi, same with my laptop, hence they are on the same network.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--35yxS5g1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lk42n9evmxxool1nh3a6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--35yxS5g1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lk42n9evmxxool1nh3a6.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C6sSL9qq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi02ezc78wfpgb01ehuc.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6sSL9qq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi02ezc78wfpgb01ehuc.jpeg" alt="WhatsApp Image 2021-04-10 at 3.26.42 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;C. On the other device, enter this combination in your browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://yourIP:port"&gt;http://yourIP:port&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Hjph4Ir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwvpbcvj201i75zct1l7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Hjph4Ir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwvpbcvj201i75zct1l7.jpeg" alt="WhatsApp Image 2021-04-10 at 3.46.29 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;do not miss out the colon in between&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Your site should load.&lt;/p&gt;

</description>
      <category>react</category>
      <category>api</category>
      <category>function</category>
      <category>button</category>
    </item>
    <item>
      <title>50 Python Projects with Source Code</title>
      <author>Kiran Sethumadhavan</author>
      <pubDate>Sat, 10 Apr 2021 14:31:59 +0000</pubDate>
      <link>https://dev.to/kiransethu46/50-python-projects-with-source-code-2n7g</link>
      <guid>https://dev.to/kiransethu46/50-python-projects-with-source-code-2n7g</guid>
      <description>&lt;p&gt;*&lt;em&gt;Do you want to Kickstart a career in CyberSecurity and want to know how hackers hack in real life  *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Join Now&lt;/p&gt;

&lt;p&gt;t.me/infosecbugbounty&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.me/joinchat/aYDOfr2Hhr4xNmRl"&gt;https://t.me/joinchat/aYDOfr2Hhr4xNmRl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python Projects For Beginners:&lt;br&gt;
If you’re a newbie to Python where you’ve just learned lists, tuples, dictionaries, and some basic Python modules like the random module, here are some Python projects with source code for beginners for you:&lt;/p&gt;

&lt;p&gt;1 Create Acronyms using Python (&lt;a href="https://thecleverprogrammer.com/2021/01/13/acronyms-using-python/"&gt;https://thecleverprogrammer.com/2021/01/13/acronyms-using-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;2 Alarm Clock with Python (&lt;a href="https://thecleverprogrammer.com/2021/01/13/alarm-clock-with-python/"&gt;https://thecleverprogrammer.com/2021/01/13/alarm-clock-with-python/&lt;/a&gt;)&lt;br&gt;
3 Email Slicer with Python(&lt;a href="https://thecleverprogrammer.com/2021/01/12/email-slicer-with-python/"&gt;https://thecleverprogrammer.com/2021/01/12/email-slicer-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;4 Story Generator with Python (&lt;a href="https://thecleverprogrammer.com/2021/01/11/story-generator-with-python/"&gt;https://thecleverprogrammer.com/2021/01/11/story-generator-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;5 Generate Password with Python(&lt;a href="https://thecleverprogrammer.com/2021/01/11/python-program-to-generate-password/"&gt;https://thecleverprogrammer.com/2021/01/11/python-program-to-generate-password/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;6 Play Rock, Paper, and Scissors with Python(&lt;a href="https://thecleverprogrammer.com/2021/01/10/rock-paper-and-scissors-game-with-python/"&gt;https://thecleverprogrammer.com/2021/01/10/rock-paper-and-scissors-game-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;7 Dice Roll Simulator (&lt;a href="https://thecleverprogrammer.com/2021/01/10/dice-roll-simulator-with-python/"&gt;https://thecleverprogrammer.com/2021/01/10/dice-roll-simulator-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;8 QR Code Generator(&lt;a href="https://thecleverprogrammer.com/2021/01/09/qr-codes-with-python/"&gt;https://thecleverprogrammer.com/2021/01/09/qr-codes-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;9 Animal Quiz Game(&lt;a href="https://thecleverprogrammer.com/2021/01/03/create-a-quiz-game-with-python/"&gt;https://thecleverprogrammer.com/2021/01/03/create-a-quiz-game-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;10 Print Coloured Text(&lt;a href="https://thecleverprogrammer.com/2020/12/23/print-colored-text-with-python/"&gt;https://thecleverprogrammer.com/2020/12/23/print-colored-text-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;11 BMI Calculator(&lt;a href="https://thecleverprogrammer.com/2020/12/21/bmi-calculator-with-python/"&gt;https://thecleverprogrammer.com/2020/12/21/bmi-calculator-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;12 Fahrenheit to Celcius Converter(&lt;a href="https://thecleverprogrammer.com/2020/11/30/convert-fahrenheit-to-celsius-with-python/"&gt;https://thecleverprogrammer.com/2020/11/30/convert-fahrenheit-to-celsius-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;13 Taking Multiple User Inputs(&lt;a href="https://thecleverprogrammer.com/2021/01/08/multiple-inputs-with-python-using-while-loop/"&gt;https://thecleverprogrammer.com/2021/01/08/multiple-inputs-with-python-using-while-loop/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;14 Convert Roman Numbers to Decimals(&lt;a href="https://thecleverprogrammer.com/2021/01/07/convert-roman-numbers-to-decimals-with-python/"&gt;https://thecleverprogrammer.com/2021/01/07/convert-roman-numbers-to-decimals-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Advance Python Projects:&lt;/p&gt;

&lt;p&gt;15 Digital Clock GUI &lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2021/01/09/digital-clock-with-python/"&gt;https://thecleverprogrammer.com/2021/01/09/digital-clock-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;16 Get Desktop Notifications with Python(&lt;a href="https://medium.com/coders-camp/60-python-projects-with-source-code-919cd8a6e512"&gt;https://medium.com/coders-camp/60-python-projects-with-source-code-919cd8a6e512&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;17 Use Your Phone Camera for Computer Vision(&lt;a href="https://thecleverprogrammer.com/2021/01/05/use-phone-camera-with-python/"&gt;https://thecleverprogrammer.com/2021/01/05/use-phone-camera-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;18 Music Player GUI (&lt;a href="https://thecleverprogrammer.com/2020/12/27/music-player-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/12/27/music-player-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;19 Game of Life with Python(&lt;a href="https://thecleverprogrammer.com/2020/12/25/game-of-life-with-python/"&gt;https://thecleverprogrammer.com/2020/12/25/game-of-life-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;20 Extract Text from videos(&lt;a href="https://thecleverprogrammer.com/2020/12/25/extract-text-from-videos-using-python/"&gt;https://thecleverprogrammer.com/2020/12/25/extract-text-from-videos-using-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;21 Fidget Spinner Game(&lt;a href="https://thecleverprogrammer.com/2020/12/23/create-a-game-with-python/"&gt;https://thecleverprogrammer.com/2020/12/23/create-a-game-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;22 Spelling Correction with Python(&lt;a href="https://thecleverprogrammer.com/2020/12/18/spelling-correction-with-python/"&gt;https://thecleverprogrammer.com/2020/12/18/spelling-correction-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;23 Create Amazing Graphics with Python(&lt;a href="https://thecleverprogrammer.com/2020/12/10/turtle-graphics-with-python/"&gt;https://thecleverprogrammer.com/2020/12/10/turtle-graphics-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;24 Monty Hall Simulator(&lt;a href="https://thecleverprogrammer.com/2020/12/09/monty-hall-problem-with-python/"&gt;https://thecleverprogrammer.com/2020/12/09/monty-hall-problem-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;25 Video to Audio Converter(&lt;a href="https://thecleverprogrammer.com/2020/12/08/video-to-audio-converter-with-python/"&gt;https://thecleverprogrammer.com/2020/12/08/video-to-audio-converter-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;26 Tic Tac Toe GUI(&lt;a href="https://thecleverprogrammer.com/2020/12/06/tic-tac-toe-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/12/06/tic-tac-toe-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;27 Calculator GUI (&lt;a href="https://thecleverprogrammer.com/2020/12/05/calculator-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/12/05/calculator-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;28 Number Guessing Game(&lt;a href="https://thecleverprogrammer.com/2020/12/04/number-guessing-game-with-python-and-c/"&gt;https://thecleverprogrammer.com/2020/12/04/number-guessing-game-with-python-and-c/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;29 Image Converter GUI(&lt;a href="https://thecleverprogrammer.com/2020/12/02/image-converter-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/12/02/image-converter-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;30 Weight Converter GUI(&lt;a href="https://thecleverprogrammer.com/2020/11/28/weight-converter-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/11/28/weight-converter-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;31 Visualize a Chess Board with Python(&lt;a href="https://thecleverprogrammer.com/2020/11/27/chessboard-with-python/"&gt;https://thecleverprogrammer.com/2020/11/27/chessboard-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;32 Age and Gender Detection (&lt;a href="https://thecleverprogrammer.com/2020/10/29/age-and-gender-detection-with-python/"&gt;https://thecleverprogrammer.com/2020/10/29/age-and-gender-detection-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;33 Bar Code and QR Code Reader(&lt;a href="https://thecleverprogrammer.com/2020/10/23/barcode-and-qr-code-reader-with-python/"&gt;https://thecleverprogrammer.com/2020/10/23/barcode-and-qr-code-reader-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;34 Create Audiobook with Python(&lt;a href="https://thecleverprogrammer.com/2020/10/22/create-an-audiobook-with-python/"&gt;https://thecleverprogrammer.com/2020/10/22/create-an-audiobook-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;35 FaceDetection&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/10/22/create-an-audiobook-with-python/"&gt;https://thecleverprogrammer.com/2020/10/22/create-an-audiobook-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;36 Extract Text from PDF(&lt;a href="https://thecleverprogrammer.com/2020/10/06/extract-text-from-pdf-using-python/"&gt;https://thecleverprogrammer.com/2020/10/06/extract-text-from-pdf-using-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;37 Card Game using DS and Algo(&lt;a href="https://thecleverprogrammer.com/2020/10/04/card-game-with-python/"&gt;https://thecleverprogrammer.com/2020/10/04/card-game-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;38 Web Scrapper with Python&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/10/01/web-scraper-with-python/"&gt;https://thecleverprogrammer.com/2020/10/01/web-scraper-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;39 Create a Pencil Sketch using Python(&lt;a href="https://thecleverprogrammer.com/2020/09/30/pencil-sketch-with-python/"&gt;https://thecleverprogrammer.com/2020/09/30/pencil-sketch-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;40 Text Editor GUI(&lt;a href="https://thecleverprogrammer.com/2020/09/25/text-editor-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/09/25/text-editor-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;41 Instagram Filters with Python&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/09/24/instagram-filters-with-python/"&gt;https://thecleverprogrammer.com/2020/09/24/instagram-filters-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;42 Count Number of Rainy days in a year(&lt;a href="https://thecleverprogrammer.com/2020/09/18/count-rainy-days-with-python/"&gt;https://thecleverprogrammer.com/2020/09/18/count-rainy-days-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;43 Send Emails with  Python&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/09/15/send-emails-with-python/"&gt;https://thecleverprogrammer.com/2020/09/15/send-emails-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;44 Image Segmentation&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/09/01/image-segmentation-with-python/"&gt;https://thecleverprogrammer.com/2020/09/01/image-segmentation-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;45 OTP Verification GUI&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/24/otp-verification-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/08/24/otp-verification-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;46 Deploy a Chatbot&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/21/deploy-a-chatbot-with-python/"&gt;https://thecleverprogrammer.com/2020/08/21/deploy-a-chatbot-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;47 Create a Telegram Bot&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/18/telegram-bot-with-python/"&gt;https://thecleverprogrammer.com/2020/08/18/telegram-bot-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;48 Scraping Twitter without API&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/17/scraping-twitter-with-python/"&gt;https://thecleverprogrammer.com/2020/08/17/scraping-twitter-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;49 Text to Speech Converter&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/16/text-to-speech-with-python/"&gt;https://thecleverprogrammer.com/2020/08/16/text-to-speech-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;50 Keyword Research with Python&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/14/keyword-research-with-python/"&gt;https://thecleverprogrammer.com/2020/08/14/keyword-research-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bonus&lt;/strong&gt; &lt;br&gt;
1 .Scrape Wikipedia&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/07/30/scraping-instagram-with-python/"&gt;https://thecleverprogrammer.com/2020/07/30/scraping-instagram-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;2.Web Scraping to create a CSV&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/08/web-scraping-to-create-csv/"&gt;https://thecleverprogrammer.com/2020/08/08/web-scraping-to-create-csv/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;3.Scrape Instagram&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/07/30/scraping-instagram-with-python/"&gt;https://thecleverprogrammer.com/2020/07/30/scraping-instagram-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;4.Image Filtering&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/07/25/image-filtering-with-machine-learning/"&gt;https://thecleverprogrammer.com/2020/07/25/image-filtering-with-machine-learning/&lt;/a&gt;)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;3D Graphs (&lt;a href="https://thecleverprogrammer.com/2020/05/02/3d-graphs-with-matplotlib/"&gt;https://thecleverprogrammer.com/2020/05/02/3d-graphs-with-matplotlib/&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;*&lt;em&gt;Do you want to Kickstart a career in CyberSecurity and want to know how hackers hack in real life . *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Join Now&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;t.me/infosecbugbounty&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.me/joinchat/aYDOfr2Hhr4xNmRl"&gt;https://t.me/joinchat/aYDOfr2Hhr4xNmRl&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>productivity</category>
      <category>devops</category>
    </item>
    <item>
      <title>Tailwind CSS has changed the way you think about css, and you should let everyone know that!</title>
      <author>Siddharth Chaudhary</author>
      <pubDate>Sat, 10 Apr 2021 14:02:00 +0000</pubDate>
      <link>https://dev.to/sidchaudhary04/tailwind-css-has-changed-the-way-you-think-about-css-and-you-should-let-everyone-know-that-1ff4</link>
      <guid>https://dev.to/sidchaudhary04/tailwind-css-has-changed-the-way-you-think-about-css-and-you-should-let-everyone-know-that-1ff4</guid>
      <description>&lt;p&gt;Face it, Tailwind CSS has probably changed the way you think about css. &lt;/p&gt;

&lt;p&gt;So make noise about it on twitter. I WANT TAILWIND CSS TO BE TRENDING ON TWITTER AND YOU PROBABLY WANT THAT AS WELL.&lt;/p&gt;

&lt;p&gt;So tweet as follows&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MQO0Ia_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1340323301806268418/3zautVjO_normal.jpg" alt="Siddharth Chaudhary profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Siddharth Chaudhary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/sidchaudhary04"&gt;@sidchaudhary04&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/hashtag/tailwindcss"&gt;#tailwindcss&lt;/a&gt; &lt;a href="https://twitter.com/tailwindcss"&gt;@tailwindcss&lt;/a&gt; has changed the way I think about &lt;a href="https://twitter.com/hashtag/css"&gt;#css&lt;/a&gt;!
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:59 PM - 10 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1380883245550743556" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1380883245550743556" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1380883245550743556" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I guarantee this will work 😂 &lt;br&gt;
-Sid&lt;/p&gt;

</description>
      <category>discuss</category>
    </item>
    <item>
      <title>Tutorial Vue Router Indonesia</title>
      <author>Dimas Andhika</author>
      <pubDate>Sat, 10 Apr 2021 13:54:07 +0000</pubDate>
      <link>https://dev.to/dimasngoding/tutorial-vue-router-indonesia-3j64</link>
      <guid>https://dev.to/dimasngoding/tutorial-vue-router-indonesia-3j64</guid>
      <description>&lt;h2&gt;
  &lt;a href="#perkenalan"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Perkenalan&lt;/strong&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Vue sangat berguna untuk membuat Aplikasi Satu Halaman, halaman webnya juga sangat interaktif yang memungkinkan kita untuk tidak me-refresh halaman ketika kita mengubah dari halaman satu ke halaman yang lain.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Jika website kamu memiliki banyak halaman dan kamu menggunakan Vue&lt;/strong&gt;, itulah mengapa kamu membutuhkan Vue Router. &lt;strong&gt;Note: Pastikan kalian paham tentang Vue dan Javascript dasar&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#basic-dari-vue-router"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Basic Dari Vue Router&lt;/strong&gt;
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#mempersiapkan-vue-router-dari-awal"&gt;
  &lt;/a&gt;
  🚀 Mempersiapkan Vue Router dari awal
&lt;/h4&gt;

&lt;p&gt;1.Pertama Kita Install Vue Router di Command Line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i vue-router@next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.Konfigurasi pada Direktori &lt;strong&gt;&lt;em&gt;/src/router/index.js&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createWebHistory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createRouter&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue-router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Import Component2 Kalian&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@/views/Home.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@/views/About.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; 
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/about&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;About&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;About&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createRouter&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;history&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;createWebHistory&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="nx"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Di direktori &lt;strong&gt;&lt;em&gt;/src/router/index.js&lt;/em&gt;&lt;/strong&gt; kita membuat routes di dalam sebuah array yang akan mengspesifikasikan beberapa hal:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Path - URL / Tempat dimana component akan di load&lt;/li&gt;
&lt;li&gt;Component - Komponen yang akan diload saat path dipanggil&lt;/li&gt;
&lt;li&gt;Name - (Opsional)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Dibawah array routes &lt;strong&gt;terdapat &lt;code&gt;createRouter&lt;/code&gt; yang pastinya diperlukan untuk membuat router itu sendiri&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;



&lt;blockquote&gt;
&lt;p&gt;Dan juga terdapat &lt;strong&gt;&lt;code&gt;createWebHistory&lt;/code&gt; yang digunakan untuk beralih dari mode hash ke mode history di dalam browser, menggunakan API history HTML5, Ini yang akan membuat history pada browser kita setiap kita meload router&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;3.Konfigurasi pada direktori &lt;strong&gt;&lt;em&gt;/src/main.js&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Pada direktori &lt;strong&gt;&lt;em&gt;/src/main.js&lt;/em&gt;&lt;/strong&gt; kita juga perlu menambahkan sesuatu&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./router&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;---&lt;/span&gt;

&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;---&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ya, tentunya kita perlu mengimpornya ke file utama kita&lt;/p&gt;



&lt;h4&gt;
  &lt;a href="#menggunakan-router"&gt;
  &lt;/a&gt;
  🚀 Menggunakan Router
&lt;/h4&gt;

&lt;p&gt;Ada 2 component yang diberikan oleh Vue Router yaitu &lt;code&gt;&amp;lt;router-view /&amp;gt;&lt;/code&gt; dan &lt;code&gt;&amp;lt;router-link to="/" /&amp;gt;&lt;/code&gt;. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;router-view /&amp;gt;&lt;/code&gt; digunakan untuk membungkus component2 yang akan dirender , dan &lt;code&gt;&amp;lt;router-link to="/" /&amp;gt;&lt;/code&gt; ini mirip seperti tag anchor pada html, pada tag anchor biasanya kita menggunakan href tetapi pada router link kita menggunakan 'to'&lt;/p&gt;
&lt;/blockquote&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Biasanya &lt;code&gt;&amp;lt;router-view /&amp;gt;&lt;/code&gt; dideklarasikan di file App.vue karena file tersebut adalah halaman utama yang isinya akan kita ubah2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Contoh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// (/src/App.vue)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/about"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;About&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// (Home.vue)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Home&lt;/span&gt; &lt;span class="nc"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// (About.vue)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;About&lt;/span&gt; &lt;span class="nc"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🚀 Selesai.. ya mungkin seperti itu konsep dasar vue router, mohon maaf bila bahasa yang digunakan membingungkan&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>5 Python Libraries You Need to Know</title>
      <author>jones268</author>
      <pubDate>Sat, 10 Apr 2021 13:32:01 +0000</pubDate>
      <link>https://dev.to/jones268/5-python-libraries-you-need-to-know-1cp8</link>
      <guid>https://dev.to/jones268/5-python-libraries-you-need-to-know-1cp8</guid>
      <description>&lt;p&gt;On the internet, you can find thousands of tutorials and blog posts about the Python programming language. With so much information out there, it’s hard to know which libraries are worth learning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#discovering-the-best-python-libraries"&gt;
  &lt;/a&gt;
  Discovering The Best Python Libraries
&lt;/h2&gt;

&lt;p&gt;We’ve handpicked 5 of the best and most useful Python libraries:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PyQt&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A cross-platform application and &lt;a href="https://pythonpyqt.com/"&gt;GUI framework&lt;/a&gt;. It provides classes to create classic multi-window applications with a native look and feel. It can be used in Python or C++. It comes with a &lt;a href="https://pythonbasics.org/qt-designer-python/"&gt;GUI designer&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Requests&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;a href="https://2.python-requests.org/en/master/"&gt;Requests package&lt;/a&gt; provides a simple interface for making HTTP requests. It wraps the powerful module urllib2 with a much simpler interface while providing useful information such as HTTP headers and cookies.&lt;br&gt;
The requests library makes it easy to perform complex interactions that would otherwise require lots of code and multiple calls to external APIs.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scrapy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://scrapy.org/"&gt;Scrapy&lt;/a&gt; is a fast high-level screen scraping and web crawling framework, used to crawl websites and extract structured data from their pages. It can be used for a wide range of purposes, from data mining to monitoring and automated testing.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BeautifulSoup&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since 2004, &lt;a href="https://beautiful-soup-4.readthedocs.io/en/latest/"&gt;BeautifulSoup&lt;/a&gt; has been one of the most important libraries for parsing HTML. It is flexible and allows users to create solutions that work with any web page structure.&lt;br&gt;
Libraries like BeautifulSoup allow programmers to do anything from &lt;a href="https://pythonspot.com/extract-links-from-webpage-beautifulsoup/"&gt;extracting simple links&lt;/a&gt;, &lt;a href="https://pythonprogramminglanguage.com/web-scraping-with-pandas-and-beautifulsoup/"&gt;tables&lt;/a&gt; to more complex analysis and data manipulation.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;numpy and pandas&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://numpy.org/"&gt;NumPy&lt;/a&gt; is the fundamental package for scientific computing in Python and provides a solid foundation on top of which to build your numerical algorithms. &lt;a href="https://pandas.pydata.org/"&gt;Pandas&lt;/a&gt; provides powerful data structures and tools to make working with large datasets easier. It can &lt;a href="https://python-commandments.org/pandas-apply/"&gt;load data&lt;/a&gt; in many formats including csv, json, html and others.&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>How to Get Started With Azure Devops | beginner's guide</title>
      <author>Adit Modi</author>
      <pubDate>Sat, 10 Apr 2021 13:31:56 +0000</pubDate>
      <link>https://dev.to/cloudhacks/how-to-get-started-with-azure-devops-beginner-s-guide-3lj7</link>
      <guid>https://dev.to/cloudhacks/how-to-get-started-with-azure-devops-beginner-s-guide-3lj7</guid>
      <description>&lt;p&gt;A typical software development team is comprising of software developers, testers, DevOps engineers, architects, and project managers. Azure DevOps is a set of tools that allows software development teams to plan and collaborate on software development life cycle including creating features, coding, build, and deployment, testing, and provide feedback on the product.&lt;/p&gt;

&lt;p&gt;Requirements gathering, analysis and design, coding, testing, and deployment are common functions of software development life cycle. Azure DevOps is a cloud platform that provides tools to manage entire software development life cycle in the cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5taoKyTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ybwh26h03t1ul2tp8ma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5taoKyTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ybwh26h03t1ul2tp8ma.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Background: I am Cloud , DevOps &amp;amp; Big Data Evangelist | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified | AWS Community Builder | AWS Educate Cloud Ambassador .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Azure DevOps&lt;/strong&gt; offers two options. First, Azure DevOps Services in the cloud and on-premises using Azure DevOps Server.Azure DevOps provides integrated features that you can access through your web browser or IDE client.&lt;/p&gt;

&lt;p&gt;The following is a list of Azure DevOps services that includes Azure Artifacts, Azure Boards, Azure Pipelines, Azure Repos, and Azure Test Plans.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L1oPm2yV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzl3bds6u4um98g91e2z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L1oPm2yV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzl3bds6u4um98g91e2z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Azure DevOps also offers collaboration tools such as to create documentation via wikis, and customizable team dashboards with configurable widgets to share information, progress, and trends&lt;/p&gt;

&lt;p&gt;Azure DevOps supports adding extensions and integrating with other popular services, such as: Campfire, Slack, Trello, UserVoice, and more, and developing your own custom extensions.&lt;/p&gt;

&lt;p&gt;Watch this video to learn more about Azure DevOps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=JhqpF-5E10I"&gt;https://www.youtube.com/watch?v=JhqpF-5E10I&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-boards"&gt;
  &lt;/a&gt;
  Azure Boards
&lt;/h2&gt;

&lt;p&gt;Azure Boards delivers a set of tools that allows development teams to keep track of development features in Agile process. The tools include Kanban boards, backlogs, sprints, queries, and plans. There are also options to add code defects, keep track of issues, and generate reports.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xde1a8ZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwwpg9hi30qs2wyoceu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xde1a8ZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwwpg9hi30qs2wyoceu2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a typical agile software development process, requirements are added to a backlog and moved to sprints. In a backlog, you can create epics, features, and tasks.&lt;/p&gt;

&lt;p&gt;Learn more about Azure boards here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=JhqpF-5E10I"&gt;https://www.youtube.com/watch?v=JhqpF-5E10I&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we know that Azure Boards has all the features your team needs to successfully manage your work. Azure boards allows you to visualize work with Kanban boards, execute in sprints, manage your backlog, and use queries to find work and visualize results. In this video, learn how to get started with Azure Boards.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-repos"&gt;
  &lt;/a&gt;
  Azure Repos
&lt;/h2&gt;

&lt;p&gt;Source code version control is a common need of software projects to keep track of different versions and changes in the code. Azure Repos is a set of version control tools hosted in Azure cloud. Azure DevOps service includes free unlimited private Git repos.&lt;/p&gt;

&lt;p&gt;Azure Repos provides two types of version control, Git and Team Foundation Version Control (TFVC).&lt;/p&gt;

&lt;p&gt;Git is one of the most popular distributed version control system that allows developers to have a local copy their source code on their development machine as local repositories and a copy stays on the server. This helps developers to work locally offline and developer commit their work locally, and then the changes are sync with the copy on the server. Unlike Git, which is distributed, TFVC is a centralized version control system.&lt;/p&gt;

&lt;p&gt;Azure Repos UI looks like the following that allows users to pull requests of projects. Azure portal looks like the following where&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oMsoZCpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fi5fk0is0s39epdz3581.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oMsoZCpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fi5fk0is0s39epdz3581.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Watch this video to learn how to get started with Git in Azure Repos and how your team can use pull requests to work together to collaborate on code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=-5QzZzkBpF8"&gt;https://www.youtube.com/watch?v=-5QzZzkBpF8&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-pipelines"&gt;
  &lt;/a&gt;
  Azure Pipelines
&lt;/h2&gt;

&lt;p&gt;Continuous integration (CI) and continuous delivery (CD) of software projects is a major task that is automated where tools are used to get latest versions of the code, build it, and deploy to the destinations. Azure Pipelines of Azure DevOps is a set of tools that provides build and release services for software development teams.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S6y17hlM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idmw875g7yivf3pdeibk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S6y17hlM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idmw875g7yivf3pdeibk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Azure Pipelines support build, test, and deploy Node.js, Python, Java, PHP, Ruby, C/C++, .NET, Android, and iOS apps. Run in parallel on Linux, macOS, and Windows.&lt;/p&gt;

&lt;p&gt;Azure Pipelines supports containers and Kubernetes that allows teams to easily build and push images to container registries like Docker Hub and Azure Container Registry.&lt;/p&gt;

&lt;p&gt;Deploy containers to individual hosts or Kubernetes.&lt;/p&gt;

&lt;p&gt;Azure Pipelines are extensible and allows a wide range of community-built build, test, and deployment tasks, along with hundreds of extensions from Slack to SonarCloud.&lt;/p&gt;

&lt;p&gt;Azure Pipelines allows teams to deploy their apps to any cloud including Azure, AWS, and GCP.&lt;/p&gt;

&lt;p&gt;Watch this video tp learn why Azure Pipelines is the best tool on the planet for Continuous Integration and Continuous Deployment (CI/CD) of your code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=NuYDAs3kNV8"&gt;https://www.youtube.com/watch?v=NuYDAs3kNV8&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-test-plans"&gt;
  &lt;/a&gt;
  Azure Test Plans
&lt;/h2&gt;

&lt;p&gt;Azure Test Plans are for software testing and QA teams to create test cases, test and report results, and generate reports. Azure Test Plans support manual testing and continuous testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m7SQf8ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztqkd28cdk7j5tkm5xxb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m7SQf8ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztqkd28cdk7j5tkm5xxb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The four key functionalities of Azure Test Plans are,&lt;br&gt;
Planned manual testing&lt;br&gt;
Manual testing by organizing tests into test plans and test suites by designated testers and test leads.&lt;/p&gt;

&lt;p&gt;User acceptance testing&lt;br&gt;
Testing carried out by designated user acceptance testers to verify the value delivered meets customer requirements, while reusing the test artifacts created by engineering teams.&lt;/p&gt;

&lt;p&gt;Exploratory testing&lt;br&gt;
Testing carried out by development teams, including developers, testers, UX teams, product owners and more, by exploring the software systems without using test plans or test suites.&lt;/p&gt;

&lt;p&gt;Stakeholder feedback&lt;br&gt;
Testing carried out by stakeholders outside the development team, such as users from marketing and sales divisions.&lt;br&gt;
Watch this video to learn the basic aspects on how to get started with Azure Test Plan, so you can start testing your application today.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=LF0hmSysWCg"&gt;https://www.youtube.com/watch?v=LF0hmSysWCg&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-artifacts"&gt;
  &lt;/a&gt;
  Azure Artifacts
&lt;/h2&gt;

&lt;p&gt;Azure Artifacts allows teams to share packages such as Maven, npm, NuGet and more from public and private sources and integrate package sharing into your CI/CD pipelines&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wuaMdxK5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgpxstrh12qclr616ho1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wuaMdxK5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgpxstrh12qclr616ho1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this video, learn how to get started with Azure artifacts and start creating a feed for an npm package to use in your Azure Pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=b3BPkyikvNM"&gt;https://www.youtube.com/watch?v=b3BPkyikvNM&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-devops-azure-pipelines-azure-boards-github"&gt;
  &lt;/a&gt;
  Azure DevOps, Azure Pipelines, Azure Boards + Github
&lt;/h2&gt;

&lt;p&gt;Azure DevOps integrates seamlessly with GitHub. Watch this video to learn how you can easily track our work with the Azure Boards and GitHub integration and how we can easily create CI/CD pipelines for our code in GitHub using Azure Pipelines.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=_gURf7CW1lg"&gt;https://www.youtube.com/watch?v=_gURf7CW1lg&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Azure DevOps is one of the recent products of Azure that allows development teams to collaborate and mange their tasks and releases. In this article, we learned about basics of Azure DevOps and its various products.&lt;/p&gt;

&lt;p&gt;Azure DevOps and entire cloud ecosystem is a growing and changing space. Make sure to learn about latest changes in Azure DevOps that may not have mentioned here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fFhhQYYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jv1lx235iniqdmhk5r0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFhhQYYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jv1lx235iniqdmhk5r0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this guide helps you understand on How to Get Started With Azure Devops, feel free to connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn.&lt;/a&gt;&lt;br&gt;
You can view my badges &lt;a href="https://www.youracclaim.com/users/adit-modi/badges"&gt;here.&lt;/a&gt;&lt;br&gt;
If you are interested in learning more about AWS / Azure Services then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
      <category>azure</category>
      <category>devops</category>
      <category>beginners</category>
    </item>
    <item>
      <title>System Design - How to design Google Drive / Dropbox (a cloud file storage service)</title>
      <author>Pankaj Tanwar</author>
      <pubDate>Sat, 10 Apr 2021 13:24:22 +0000</pubDate>
      <link>https://dev.to/pankajtanwarbanna/system-design-how-to-design-google-drive-dropbox-a-cloud-file-storage-service-284</link>
      <guid>https://dev.to/pankajtanwarbanna/system-design-how-to-design-google-drive-dropbox-a-cloud-file-storage-service-284</guid>
      <description>&lt;p&gt;System design is one of the most important aspect of software engineering. System design problems are usually open-ended discussions.&lt;/p&gt;

&lt;p&gt;Let’s design a cloud file storage service like Google drive or drop box. These services provides a platform that allow users to upload their files online and access them from any device. In this article, we will focus on architecture design &amp;amp; performance analysis of the system.&lt;/p&gt;

&lt;p&gt;So let’s dive right in!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-statement"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Problem Statement&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We need to design a service like Google Drive or Dropbox which allows users to store their data securely, synchronised &amp;amp; effectively on remote servers. User should be able to download and upload files from all their devices. System should be highly available, reliable and scalable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#feature-expectations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Feature Expectations&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The top level requirements of the system are as follows -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Functional Requirements&lt;/strong&gt; -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User should be able to download/upload, update, delete files from any device&lt;/li&gt;
&lt;li&gt;Files should be synchronised in all the devices that the user is logged in&lt;/li&gt;
&lt;li&gt;History/versioning of files (snapshotting of data)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Non-functional requirements&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our service needs to be highly available&lt;/li&gt;
&lt;li&gt;The system should be highly reliable; any uploaded file should never be lost&lt;/li&gt;
&lt;li&gt;System should support large files uploading &lt;/li&gt;
&lt;li&gt;ACID operations :&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Atomic          - File upload should be all or none &lt;br&gt;&lt;br&gt;
Consistency - Both versions on device and server must be same &lt;br&gt;&lt;br&gt;
Isolation           - Ensure multiple transactions at same time, with data consistency &lt;br&gt;&lt;br&gt;
Durability      - Must be highly available &amp;amp; durable &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not in Scope&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sharing file access with other users, offline editing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scale"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Scale&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Total Users&lt;/strong&gt;       : ~100 M&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Daily Active Users&lt;/strong&gt;    : ~50 M&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;QPS&lt;/strong&gt;           : ~500M request per day (~9000 Queries Per Second)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Storage Estimate&lt;/strong&gt;  : Assume, every user has avg 100 files (avg file size ~1MB) so we will have a total of 100B files. Hence, total storage would be -&lt;/p&gt;

&lt;p&gt;100MB x 100B = 10000PB.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read/Write ratio&lt;/strong&gt;  : ~ 1:1 &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Traffic Estimate&lt;/strong&gt;  : ~5 GB new file writes per second&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Memory Usage&lt;/strong&gt;      : Assume, each user access 5 files daily and reading chunks of 200KB out of 1MB. So, following the 80-20 rule (80% traffic comes for 20% of the files), our cache size -&lt;/p&gt;

&lt;p&gt;((50 M x 200KB x 5 ) x 20) / 100  = 10 Tera Byte&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Active Connections&lt;/strong&gt;    : 1 M active connections per minute &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#high-level-design"&gt;
  &lt;/a&gt;
  &lt;strong&gt;High Level Design&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;On a high level, we need to support two scenarios, one to upload/edit/delete files and other to view/search files. We would need some object storage server (cloud storage) to store files, one block server with whom client would interact, one database server to store metadata information (file name, file size, path etc) about the files and one synchronisation server. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AUxFBhBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617952845935/_gcU4laIG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AUxFBhBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617952845935/_gcU4laIG.png" alt="high-level-design.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#system-apis"&gt;
  &lt;/a&gt;
  &lt;strong&gt;System APIs&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Following are the APIs we can expose from our service -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;upload(string uploadToken, fileInfo file, userInfo user)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;edit(string authToken, fileInfo file, userInfo user)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;delete(string authToken, fileInfo file, userInfo user)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;download(string authToken, fileInfo file, userInfo user)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We can have an another API to generate a write token (uploadToken) before hand when a user request to upload a new file. Here we will have an opportunity to authenticate &amp;amp; validate the user. If we need to block a user from uploading new files, a check can be put here instead of allowing user to send whole file in request and then discard it. It can avoid unnecessary resources consumption.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#component-design-amp-deep-dive"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Component Design &amp;amp; Deep dive&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd1ea0Qt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617952954142/fiX9kr9T_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd1ea0Qt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617952954142/fiX9kr9T_.png" alt="component-design.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s go through the major components of our system one by one:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Client&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A client application on user's device talks to our service to upload, download and modify files to backend cloud storage. Below are some major operations done by client -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Upload/download file&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we upload/download the file with full size, it will cost us storage and bandwidth. And also, latency will be increased for this process. If a user attempts to upload a 10MB file, that's a lot of resource usage :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;10MB of server memory tied up&lt;/li&gt;
&lt;li&gt;A request handler being tied up for the entire amount of time to upload a 10MB file&lt;/li&gt;
&lt;li&gt;High CPU Usage&lt;/li&gt;
&lt;li&gt;Suppose, If uploading fails after 90%, the whole file would be required to upload again.&lt;/li&gt;
&lt;li&gt;No efficient method to update the file for small edits as we would have the entire file, not chunks&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It will hit scalability very hard. It's not a wise choice to use full file upload approach at this scale.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Handling file transfer efficiently&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We may divide the file into smaller chunks to make it easier to upload. Details of chunks can be included in metadata. Naming of chunks can be done by the hash value of chunks content.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e3nUmEsb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953135029/JCCPxt9Fa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e3nUmEsb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953135029/JCCPxt9Fa.png" alt="file-upload.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This strategy will helps us in many ways -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bandwidth Optimisation&lt;/strong&gt; - Smaller chunks size optimises network bandwidth utilisation. While uploading, we can break the file into chunks and then upload it. In case of file upload failure, we don't need to upload whole file again, only failing chunk will be retried. If user updates the file, only modified chunk will be sent. &lt;/p&gt;

&lt;p&gt;Less amount of data transfer between client and server will reduce network bandwidth and most importantly, it will help us achieve a better response time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cloud Storage utilisation&lt;/strong&gt; - As we are sending modified chunks only to the server in case of update instead of the entire file again, it will decrease the cloud storage consumption.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Latency or Concurrency Utilisation&lt;/strong&gt;  - Transmitting the entire file at once consumes a lot more time as compared to small chunks. With multiple smaller data chunks, we can make use of concurrency also to upload/download the file using multi threading or multi processes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Faster lookup &amp;amp; version control&lt;/strong&gt;  - As we are only transmitting the modified chunks in case of updates, it helps us in proving a history of versions of the file. We can directly lookup at the modified chunks to see the modifications.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How to calculate chunk size&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Calculation of optimal chunk size can be done based on below parameters -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Input/Output operations per second on cloud storage devices&lt;/li&gt;
&lt;li&gt;Network bandwidth&lt;/li&gt;
&lt;li&gt;Average file size in storage &lt;/li&gt;
&lt;li&gt;Metadata information&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How to implement synchronisation server&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have a synchronisation server which ensures that any updates from one client as sync with other devices. But how can we implement client efficiently listening to changes happening with other clients? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Basic Solution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The very first basic solution would be, to periodically hit and check with the server for new changes. But this approach is highly inefficient as most of the time we would be getting empty responses. It is a waste of network bandwidth too and we are unnecessary putting extra load on the servers. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTTP Long Polling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An effective solution would be to use HTTP long polling. With long polling, client does not expect immediate response from the server. Server keeps the request open and waits for the new changes. Whenever there are new modifications by any client, server would immediately send an HTTP response to the client.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; - Unlike desktop or web clients, mobile clients usually sync on demand to save user’s bandwidth and space.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#metadata-database"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Metadata database&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We store the metadata &amp;amp; indexes of all chunks in our database as we have to track it. Important thing here is that we are not storing the actual file/chunks itself here, we are storing only the metadata information to retrieve the file later. It is also responsible for maintaining the history (versioning) of files.&lt;/p&gt;

&lt;p&gt;Database can be a relational database such as MySQL or a non-relational database such as cassandra, dynamoDB or MongoDB. Let's discuss which database to consider for our use case -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Relational vs Non-relational Database&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;As, multiple users might be on the same file simultaneously &amp;amp; we need to ensure data consistency. Since NoSQL data storage do not support ACID properties in favour of performance and scalability. We would need to implement ACID properties pro-grammatically in synchronisation service. It would require extra DB configurations. (For example, Cassandra replication factor gives the consistency level). Here, relational database (MySQL) has a plus point as they support ACID properties.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Relational databases are difficult to scale as if we are using MySQL, we would need to use sharding or master slave techniques and it would become more difficult these multiple databases for any new updates. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To overcome this problem, we can have a wrapper around all databases and cache instead of directly talking to the database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f9vEAGV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953330392/T-REe_Lzm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f9vEAGV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953330392/T-REe_Lzm.png" alt="System-Design-Dropbox-Metadata-Edge-Wrapper.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; : Storing file URL in database is a really bad idea. Using stored metadata information to construct the URL is a lot more robust and scalable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#synchronisation-service"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Synchronisation Service&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;For every new update, synchronisation service is responsible to efficiently process updates and apply changes to other subscribed devices to keep their local db and remote db in sync. &lt;/p&gt;

&lt;p&gt;Synchronisation service should be designed to transmit as less data as possible to avoid unnecessary network bandwidth and achieve a better response time. Server and client can calculate a hash (SHA-256) to check if chunk is updated or not. On server also, if we have the chunk with similar hash(even from another user), we can use the same chunk instead of creating a new copy to avoid data deduplication.&lt;/p&gt;

&lt;p&gt;For more efficiency, we can consider using a communication middleware between client and sync service. It will provide a global message queue to support a very high number of pull or push from client. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#message-queuing-service"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Message Queuing Service&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;To enable asynchronous message based communication between client and server to serve huge number of requests, we can make use of a scalable message queuing service. It should support efficient storing of any number of messages in a highly available, reliable and scalable queue.&lt;/p&gt;

&lt;p&gt;It will implement request and response queue. Request queue is a global queue which all client share. For each modification, the request will go to the global queue first to update the meta data DB and after that, synchronisation Service will update the meta data and update message is sent to all subscribed clients via response queue.&lt;/p&gt;

&lt;p&gt;Along with high scalabiliy and high performance, it provides load balancing and elasticity for multiple instances of the Synchronisation Service. RabbitMQ, Apache Kafka, etc. are some of the examples of the messaging queue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rJTW2HTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953447327/3aRsoDsiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rJTW2HTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953447327/3aRsoDsiw.png" alt="message-queue.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloudblock-storage"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Cloud/Block Storage&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Cloud/Block storage stores all the chunks, uploaded by users to the service. As we have metadata database, separate from storage, we can use any cloud storage approach eg - Amazon S3, Azure etc.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When Dropbox started, they used S3 as block storage. However as they grew, they developed an in-house multi-exabyte storage system known as Magic Pocket. In magic Pocket, files are split up into blocks, replicated for durability, and distributed across data centres in multiple geographic regions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#database-partitioning"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Database Partitioning&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;From database scalability point of view, database partitioning comes into picture to ensure scalability. Partitioning is the database process where very large tables are divided into multiple smaller parts for faster queries. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Metadata Partitions&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Based on first latter of file&lt;/strong&gt; :&lt;/p&gt;

&lt;p&gt;We can store file/chunks in partitions based on the first letter of a file path, means all files starting with same letter will stay in one partition. This is called "range based partitioning".&lt;/p&gt;

&lt;p&gt;The major disadvantage of this approach is that, it can lead to unbalanced servers. It might possible that some database partitions get filled completely as there are more files starting with same letter and some remains with no traffic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Based on hash of file ID&lt;/strong&gt; :&lt;/p&gt;

&lt;p&gt;Based on hash of fileId, randomly generated by our hash function, we can have partitions. Hash will be mapped to a number and it would be our partition to store the object. This approach can still lead to unbalanced partitions but can be solved by using consistent hashing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#caching"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Caching&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Caching is a very common technique for performance. This is very helpful to lower the latency. For our use case, &lt;strong&gt;Memcached&lt;/strong&gt; would be a good choice which can store the whole chunk, with it's respective hash. A cache for Metadata Database can also be used.   &lt;/p&gt;

&lt;p&gt;Cache servers are determined based on users' usage pattern &amp;amp; &lt;strong&gt;LRU&lt;/strong&gt; (Least Recently Used) can be the optimal policy for our cache.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#load-balancer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Load Balancer&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We can adopt round robin or some other fancy algorithm for load balancing layer to distribute the incomming traffic uniformly. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Source : INTERNET&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;About me : &lt;a href="https://pankajtanwar.in"&gt;https://pankajtanwar.in&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I write about System Design, Backend Engineering and Web Tech at : &lt;a href="https://blog.pankajtanwar.in"&gt;https://blog.pankajtanwar.in&lt;/a&gt;&lt;/p&gt;

</description>
      <category>systems</category>
      <category>programming</category>
    </item>
    <item>
      <title>Cryptography with Python using Fernet</title>
      <author>Anish De</author>
      <pubDate>Sat, 10 Apr 2021 13:20:35 +0000</pubDate>
      <link>https://dev.to/anishde12020/cryptography-with-python-using-fernet-40o3</link>
      <guid>https://dev.to/anishde12020/cryptography-with-python-using-fernet-40o3</guid>
      <description>&lt;p&gt;Let us look at how to encrypt text and files using Python.&lt;br&gt;
For this we are going to be using &lt;a href="https://cryptography.io/en/latest/fernet.html"&gt;Fernet&lt;/a&gt; which is a part of python's cryptography package&lt;/p&gt;

&lt;p&gt;So let us get right into it&lt;/p&gt;

&lt;p&gt;Ok firstly we need to downloaded the cryptography package using &lt;code&gt;pip&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;On Windows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install cryptography
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On Linux/macOS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip3 install cryptography
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After we have executed the command in the terminal, we are ready to start coding.&lt;/p&gt;

&lt;p&gt;You might want to use your favourite code editor (vscode, sublime text, atom etc...) or any IDE.&lt;/p&gt;

&lt;p&gt;Now let us first import the required library&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;cryptography.fernet&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Fernet&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we are going to define a function that will write the key to a file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;write_key&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Fernet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate_key&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# Generates the key
&lt;/span&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"key.key"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"wb"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;key_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# Opens the file the key is to be written to
&lt;/span&gt;        &lt;span class="n"&gt;key_file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Writes the key
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will also write down a function that will help with reading and loading the key into a variable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;load_key&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"key.key"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"rb"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#Opens the file, reads and returns the key stored in the file
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us take the message we are going to encode as user input and encode it to bytes because that is how fernet works&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Message: "&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# Takes the message as user input and encodes it
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to write are top secret key to the key file. We are going to run this only once and then comment the line out because we don't want it to write a new key down every time the code is run.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;write_key&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# Writes the key to the key file
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to load the key i.e. read the key from the key file and store it in a variable called as &lt;code&gt;key&lt;/code&gt; though you can name it whatever you want&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_key&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# Loads the key and stores it in a variable
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to initialize the fernet object by passing in the key we just loaded&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Fernet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us get to the main part, encrypting the message&lt;br&gt;
Also let us print it out&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;encrypted_message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encrypted_message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sV2s5_vy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618045556166/NkVXFrg-7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sV2s5_vy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618045556166/NkVXFrg-7.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You see that the encrypted message cannot be understood by anyone so it is safe now and will be the same unless decrypted with the same key&lt;/p&gt;

&lt;p&gt;To decrypt, it is a very similar process&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;decrypted_message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encrypred_message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;decrypted_message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mNyCOoR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618045676137/GQuPm-UeO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mNyCOoR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618045676137/GQuPm-UeO.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
So here, first the message is encrypted and is printed out and then we decrypt it and print it in the next line. If the initial message and the decrypted message are the exact same, our code has worked!!!&lt;/p&gt;

&lt;p&gt;So that was it for this tiny blog (and it was my first blog ever so leave down some feedback!!!)&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial:
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://youtu.be/P2k4f1tu-ss"&gt;Link&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/P2k4f1tu-ss"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;%[&lt;a href="https://www.youtube.com/watch?v=P2k4f1tu-ss"&gt;https://www.youtube.com/watch?v=P2k4f1tu-ss&lt;/a&gt;]&lt;/p&gt;

</description>
      <category>python</category>
      <category>cryptography</category>
    </item>
    <item>
      <title>What **is** Raycast? 🤷🏼‍♀️</title>
      <author>JavaScript➕Coffee🚀</author>
      <pubDate>Sat, 10 Apr 2021 13:19:43 +0000</pubDate>
      <link>https://dev.to/javascriptcoff1/what-is-raycast-3pig</link>
      <guid>https://dev.to/javascriptcoff1/what-is-raycast-3pig</guid>
      <description>&lt;p&gt;💚 &lt;em&gt;Disclaimer: No prior knowledge needed...&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Raycast is a productivity tool for MacOS, and as a native app, it &lt;em&gt;fits in&lt;/em&gt; with the Mac styling and performance that you are used to. &lt;/p&gt;

&lt;p&gt;If you use &lt;strong&gt;Spotlight&lt;/strong&gt; (hit &lt;code&gt;cmd&lt;/code&gt; &lt;code&gt;spacebar&lt;/code&gt; and you'll find it), then you will be more familiar with what Raycast is. There are many tools that you can use that are similar, such as Alfred, Automator, Launchbar and others. With all of these tools, you can search your &lt;em&gt;entire&lt;/em&gt; computer for a file, you can search for things in the browser &lt;em&gt;without even opening the browser&lt;/em&gt; and you can add commands (Alfred calls them workflows, Raycast calls them extensions) to speed up the things that you do the most often, such as opening a particular website, starting a new email or emptying the trash (my favourite command 🤓)&lt;/p&gt;

&lt;p&gt;Personally, I find the Raycast UI to be much more natural for Mac and it has a strong community that can help with any questions, and I love how easy it is to install extensions, or &lt;em&gt;scripts&lt;/em&gt;. It also is easier to extend and adapt to your personal workflows.&lt;/p&gt;

&lt;p&gt;Also, right now it's totally free! 🥳&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hold-up-what-is-a-script"&gt;
  &lt;/a&gt;
  Hold up, what is a script?
&lt;/h2&gt;

&lt;p&gt;A script is a code file that allows your computer to automate a set of instructions. This could be something relatively simple, such as opening a webpage in your default browser, or something more complex such as starting up your development environment and opening the browser as well as your IDE. Scripts run in the background - this means that they run without getting in your way, and they generally happen &lt;em&gt;fast&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Writing a script is like writing a recipe for someone else to use - you give them exact ingredients and tell them what to do with those ingredients, and then they might make you a delicious meal!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IXMKC1Vn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ey1s4xdqyjmd9m8slayl.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IXMKC1Vn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ey1s4xdqyjmd9m8slayl.jpeg" alt="A brightly coloured salad in a bowl"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mmm...&lt;/p&gt;




&lt;p&gt;Scripts mean that you can instruct your computer to perform a set of instructions without having to ask you for anything.&lt;/p&gt;

&lt;p&gt;Let's start with a script that does something that we all probably do too much but that probably isn't great for our productivity - opening Twitter in your default browser! &lt;/p&gt;

&lt;p&gt;Luckily for us, the &lt;code&gt;bash&lt;/code&gt; scripting language is pretty easy to remember for this script: the command word is &lt;code&gt;open&lt;/code&gt;, so our script is going to be pretty short! Firstly, we need to install &lt;a href="https://raycast.com/"&gt;Raycast&lt;/a&gt; if you haven't already got it, and type &lt;code&gt;Create Script Command&lt;/code&gt; as this will allow us to start coding straight away with all the metadata already set. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WJq5Im81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27d1vgnb0fija8q4t97n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WJq5Im81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27d1vgnb0fija8q4t97n.png" alt="Script commands form in Raycast."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this script, we are going to use &lt;code&gt;Bash&lt;/code&gt;. The reason for this is because it is good for smaller and less complex scripts. Soon enough, you'll be coding with &lt;code&gt;Ruby&lt;/code&gt; and &lt;code&gt;Python&lt;/code&gt; and &lt;code&gt;Swift&lt;/code&gt; and everything else, but for now let's get started with &lt;code&gt;Bash&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After you've filled out the form, hit &lt;code&gt;cmd&lt;/code&gt;+&lt;code&gt;enter&lt;/code&gt; and choose where you'd like to save it. I recommend saving it in a folder called 'Code' if you don't have one already. If you're really stuck, just save it on the desktop and you can sort it out later 🥴&lt;/p&gt;

&lt;p&gt;Now close Raycast for now, and go to the new file that you just made. Right-click, and go to Open With...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yc8izRwD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dx833xxmb9b73hzyuo4n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yc8izRwD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dx833xxmb9b73hzyuo4n.png" alt="Right-click drop down box"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-need-to-install-some-fancy-tool-though-right"&gt;
  &lt;/a&gt;
  I need to install some fancy tool though, right?
&lt;/h3&gt;

&lt;p&gt;Nope!&lt;/p&gt;

&lt;p&gt;I'm using the built-in TextEdit Mac app, although you'll have a much better time if you have Visual Studio Code...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SYI9HKKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gtehrcvxlzp32s1ubq9w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SYI9HKKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gtehrcvxlzp32s1ubq9w.png" alt="TextEdit window showing the code which is generated with the Create Script Command function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ok, so we have our template, and we changed &lt;code&gt;fullOutput&lt;/code&gt; to &lt;code&gt;silent&lt;/code&gt; in the &lt;code&gt;@raycast.mode&lt;/code&gt;(because we don't need to see any output or data for this script). &lt;/p&gt;

&lt;p&gt;Would you believe me if I said we were nearly done?!&lt;/p&gt;

&lt;p&gt;Next, we are going to write the &lt;em&gt;actual&lt;/em&gt; script... hold onto your hats... 🧢&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;open https://twitter.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yep, it's really &lt;em&gt;that&lt;/em&gt; easy! Congrats on writing your first script! Now, let's save it before we load it into Raycast. If, like me, you are using TextEdit for this, you'll need to change it to a 'plain text' file, under the &lt;code&gt;format&lt;/code&gt; header, so that we can do what we want with it.&lt;/p&gt;

&lt;p&gt;Next, you need to make a folder. I recommend saving it on on your desktop so you always remember where you put it! ✅ Now go back to your file and save it into your newly created folder. Name it anything you like, but make sure that the file ends in &lt;code&gt;.sh&lt;/code&gt;. If it won't let you save it with the &lt;code&gt;.sh&lt;/code&gt; file extension, go back and make sure that you remembered to make it a plain text file. If you aren't using TextEdit, then search for 'plain text' and the name of the text editor you are using in Google.&lt;/p&gt;

&lt;p&gt;Now we can load it into Raycast!&lt;/p&gt;

&lt;p&gt;🤓 &lt;strong&gt;Side note:&lt;/strong&gt; As developers, we call folders on your computer &lt;code&gt;directories&lt;/code&gt;. If they are on your computer, then they are &lt;code&gt;local directories&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;To load your script into Raycast, firstly open Raycast, then go to About, then Extensions, then click the little '+' to get to 'add script directory', find your folder, and then click open.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ok-done"&gt;
  &lt;/a&gt;
  Ok, done!
&lt;/h2&gt;

&lt;p&gt;Now we want to test our script, right?!&lt;/p&gt;

&lt;p&gt;Go back to the root search of Raycast, and search for the title of your script! We set the &lt;code&gt;@raycast.title&lt;/code&gt; to 'Open Twitter', so search for Open Twitter in Raycast and then hit enter on it...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JpBTeLjB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8z5wvx7r50u7p2c5np38.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JpBTeLjB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8z5wvx7r50u7p2c5np38.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Magical...🪄&lt;/p&gt;

&lt;p&gt;Now, what happens if you change the URL and save the file, or if you add another &lt;code&gt;open https://...&lt;/code&gt; ?&lt;/p&gt;

&lt;p&gt;Suddenly, you have a way to open ALL of the web pages you need on a daily basis...at once!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#only-web-pages"&gt;
  &lt;/a&gt;
  Only web pages?
&lt;/h2&gt;

&lt;p&gt;You can also open apps using the &lt;code&gt;open&lt;/code&gt; command in bash - as long as you know the &lt;code&gt;path&lt;/code&gt; to where the app is (usually &lt;code&gt;/System/Volumes/Data/Applications/...&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Here's an example, my 'open-Everything.sh' file. As the name suggests, this script opens everything I need for my workday!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c"&gt;# Required parameters:&lt;/span&gt;
&lt;span class="c"&gt;# @raycast.schemaVersion 1&lt;/span&gt;
&lt;span class="c"&gt;# @raycast.title Open Work&lt;/span&gt;
&lt;span class="c"&gt;# @raycast.mode inline&lt;/span&gt;
&lt;span class="c"&gt;# @raycast.description Open my workflows&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Optional parameters:&lt;/span&gt;
&lt;span class="c"&gt;# @raycast.icon 💻&lt;/span&gt;
&lt;span class="c"&gt;# @raycast.iconDark&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Credits&lt;/span&gt;
&lt;span class="c"&gt;# @raycast.author Faye Sipiano&lt;/span&gt;
&lt;span class="c"&gt;# @raycast.authorURL https://github.com/FSipiano&lt;/span&gt;

open https://twitter.com
open https://app.frontapp.com/inboxes/teammates
open https://github.com/raycast/script-commands
open https://www.notion.so/raycastapp
open https://calendar.google.com/calendar/u/0/r
open /System/Volumes/Data/Applications/iTerm.app
open /System/Volumes/Data/Applications/Slack.app
open /System/Volumes/Data/Applications/Spotify.app
code
open /System/Volumes/Data/Applications/Aware.app
open https://app.pluralsight.com/library/courses
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So that's how we can speed up our workflows using Raycast and &lt;code&gt;open&lt;/code&gt; in &lt;code&gt;bash&lt;/code&gt; scripts... what if you want to take it further..? What if you wanted to open a specific repo or file to work on? For that, you can add things like &lt;code&gt;~/Developer/raycast-web&lt;/code&gt; to tell it to open something in a &lt;em&gt;specific&lt;/em&gt; place - you have given it the &lt;strong&gt;path&lt;/strong&gt; (route) to get to it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scripting languages are cool and you can do a lot with them, but you don't need to &lt;em&gt;remember&lt;/em&gt; how to write them...Google is your friend...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There're &lt;em&gt;tonnes&lt;/em&gt; of workflows that you can speed up by loading scripts into Raycast. If you want inspiration or want to try out useful scripts written by the community, then head over to &lt;a href="https://github.com/raycast/script-commands#raycast-script-commands"&gt;the community repo&lt;/a&gt; and see what you can find! One of my favourites is the &lt;a href="https://github.com/raycast/script-commands/blob/master/commands/system/quit-all-apps.swift"&gt;Quit Everything&lt;/a&gt; command. I have it mapped to &lt;code&gt;option&lt;/code&gt; &lt;code&gt;q&lt;/code&gt; for extra &lt;em&gt;drama&lt;/em&gt;. Obviously, I can't show you this script as my recorder would shut off, but it does what it says on the tin and it's a nice way of finishing off your workday in style 😎&lt;/p&gt;

&lt;p&gt;I can't show you what it looks like, but it feels like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/cYeTawXmSKVOaHU5XB/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/cYeTawXmSKVOaHU5XB/giphy.gif" alt="https://media.giphy.com/media/cYeTawXmSKVOaHU5XB/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are lots of scripts that you can write or download that will save you time and increase your productivity; take my usual, non-scripted, development workflow, for example:&lt;/p&gt;

&lt;p&gt;Over 1 minute to get into my dev environment...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SujVO4dj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21f2z0ah5fst8qo0dv5t.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SujVO4dj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21f2z0ah5fst8qo0dv5t.gif" alt="It takes over 1 minute to navigate to the right file and then use Gridsome to get into my dev environment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is what I turned that into with the help of Raycast and a &lt;code&gt;bash&lt;/code&gt; script:&lt;/p&gt;

&lt;p&gt;8 Seconds!!! I save 63 seconds with this script.... that doesn't sound like A LOT, but trust me... it is A LOT if you are loading up your dev environment multiple times a day!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--07b5SlZA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ysnlfjshkummvcv77pz6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--07b5SlZA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ysnlfjshkummvcv77pz6.gif" alt="I open Raycast, type 'dev' and hit enter. Everything loads up straight away and is 8 seconds from start to finish"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's Raycast! I hope that has inspired you to start looking into ways to speed up your workflows - head over to the community repo and see if you can find anything you like! As I mentioned, I &lt;em&gt;personally&lt;/em&gt; recommend the &lt;a href="https://github.com/raycast/script-commands/blob/master/commands/system/quit-all-apps.swift"&gt;Quit All Applications&lt;/a&gt; script and the &lt;a href="https://github.com/raycast/script-commands/blob/master/commands/system/empty-trash.applescript"&gt;Empty Trash&lt;/a&gt; script.&lt;/p&gt;

&lt;p&gt;If you have any questions, recommendations or comments about Raycast or any of the repos or documentation, please reach out to me either through the &lt;a href="https://www.raycast.com/community"&gt;community Slack channel&lt;/a&gt; - it is &lt;em&gt;literally&lt;/em&gt; my job as a Developer Advocate to make sure that you get the best experience, regardless of your skill level 💚&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>bash</category>
      <category>startup</category>
    </item>
    <item>
      <title>Projects to become a javascript master 🚀 Resource compilation 💥 + Giveaway⚡</title>
      <author>DevLorenzo</author>
      <pubDate>Sat, 10 Apr 2021 13:17:18 +0000</pubDate>
      <link>https://dev.to/devlorenzo/10-projects-to-become-a-javascript-master-giveaway-2o4k</link>
      <guid>https://dev.to/devlorenzo/10-projects-to-become-a-javascript-master-giveaway-2o4k</guid>
      <description>&lt;p&gt;&lt;code&gt;Hello World!&lt;/code&gt; Today I wanted to share with you 10 projects you can build to be from zero to hero in javascript!&lt;/p&gt;

&lt;p&gt;🔖 - Bookmark the article to save it &lt;em&gt;and&lt;/em&gt; &lt;strong&gt;remember the like ❤️ and maybe super like🦄&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  ⚡Giveaway ⚡
&lt;/h2&gt;

&lt;p&gt;We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
Steps to enter the giveaway&lt;br&gt;
--&amp;gt; React to this post&lt;br&gt;
--&amp;gt; &lt;a href="https://chipper-motivator-3112.ck.page/05710ea3d3"&gt;Subscribe to our Newsletter&lt;/a&gt; &lt;strong&gt;&amp;lt;--&lt;/strong&gt; Very important&lt;br&gt;
--&amp;gt; &lt;a href="https://twitter.com/DevLorenzo1"&gt;Follow me on Twitter&lt;/a&gt; &amp;lt;-- x2 Chances of winning&lt;/p&gt;



&lt;p&gt;
  Table of content
  &lt;p&gt;a) &lt;a href="#a"&gt;General (for beginners)&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#a1"&gt;Converters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a2"&gt;Word Counter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a3"&gt;Timer / Clock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a4"&gt;Random password generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a5"&gt;Calculator&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;b) &lt;a href="#b"&gt;Games&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#b1"&gt;Guess the number&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#b2"&gt;Math time!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#b3"&gt;Other Games&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;c) &lt;a href="#c"&gt;Social &amp;amp; Websites&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#c1"&gt;Log-in, Sign-up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c1"&gt;Log-in, Sign-up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c2"&gt;To-Do List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c3"&gt;Social&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c4"&gt;Portfolio&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hey, remember that I have a &lt;a href="https://chipper-motivator-3112.ck.page/05710ea3d3"&gt;newlsetter&lt;/a&gt;!&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#a-general-gt-for-beginners"&gt;
  &lt;/a&gt;
  a) General --&amp;gt; For beginners &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-converters"&gt;
  &lt;/a&gt;
  1. Converters &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Svvv10c7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0hbzclx0tuzmkfo990w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Svvv10c7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0hbzclx0tuzmkfo990w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I don't have to say a lot in reality for this category. Just build something that with a given input, convert it into a nice-looking output, for us to gain the time of doing it manually 🙃. If you do a full webpage around it, that's always a plus, but you can even do a really easy javascript code. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For example, I built a currency converter, it was one of my first JS projects!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://codepen.io/r4ndomw4lk/pen/KZyEBY"&gt;A CodePen - JavaScript: Currency Calculator&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-word-counter"&gt;
  &lt;/a&gt;
  2. Word counter &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hWfVfhLf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3tto05qxadnhuenmwvw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hWfVfhLf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3tto05qxadnhuenmwvw.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Just another easy fun project, build something count the number of words and characters in a text. Then the goal is to give as many stats as possible, showing reading and speaking time, keywords and their frequency, and others, be creative!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codesource.io/building-a-word-counter-in-javascript/"&gt;An Article - Building a Word Counter in JavaScript&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-timer-clock"&gt;
  &lt;/a&gt;
  3. Timer / Clock &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VUeQkRl4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/euy7bve2sxfmehg3odz8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VUeQkRl4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/euy7bve2sxfmehg3odz8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That one also is quite easy, just try to build a basic functionality around time, like a timer, a digital clock, a scheduled alarm... And if you have time and willingness to learn, why not doing the entire clock app, maybe on an entire website!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codesdope.com/blog/article/how-to-create-a-digital-clock-using-javascript/"&gt;An Article - How to Create a Digital Clock using JavaScript&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-random-password-generator"&gt;
  &lt;/a&gt;
  4. Random password generator &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--poIqBPre--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4pvqhxj521n456jhnso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--poIqBPre--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4pvqhxj521n456jhnso.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keep your learnings secure, you can create a random password generator in 10 minutes in reality. But like so many other projects on this list, they are fun to do only if you make them yours by adding special features! I think you can go deep into customization possibilities with this one. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=fOvYE1i_IiY"&gt;A Video - Strong Random Password Generator Mini Project using Html CSS &amp;amp; Javascript | Password Generator App - by &lt;br&gt;
Online Tutorials&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#5-calculator"&gt;
  &lt;/a&gt;
  5. Calculator &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0fDys9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/up6qg743pmrsv54nnaov.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0fDys9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/up6qg743pmrsv54nnaov.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Now you can build something more challenging, a fully working calculator. That should not be too difficult, everyone knows how a calculator works. Just try to be original, adding features obviously. &lt;a href="https://dev.to/worldindev/finally-how-to-understand-math-awesome-resource-list-4end"&gt;Make math fun!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-build-an-html-calculator-app-from-scratch-using-javascript-4454b8714b98/"&gt;A freecodecamp Article - How to build an HTML calculator app from scratch using JavaScript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/yudizsolutions/pen/poReVdw"&gt;Another Source - A CodePen - "Neumorphism calculator with dark mode switch"&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#b-games"&gt;
  &lt;/a&gt;
  b) Games &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#5-guess-the-number"&gt;
  &lt;/a&gt;
  5. Guess the number &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zeUNLrg_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcu6ml6laognmkgqur9g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zeUNLrg_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcu6ml6laognmkgqur9g.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's a very famous and easy game, you generate a random number from 0 to 50, the user has to guess it. And you give him some hints in the process (lower or greater). Nothing extraordinary, but you're starting to make great progress! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://opensource.com/article/21/1/learn-javascript"&gt;Learn JavaScript by writing a guessing game&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#6-math-questions"&gt;
  &lt;/a&gt;
  6. Math questions &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g4A_OWEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b6xw2sb8elt35m6e9jlz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g4A_OWEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b6xw2sb8elt35m6e9jlz.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;That can be fun, you create a game that generates random math questions (like 1304+222), with an open answer or a list of different propositions for the user. The code automatically checks if the result is right or wrong. Then you can do a scorekeeper, a timer, let the user set a difficulty, add a leaderboard, and make it even more customizable allowing the user to filter questions!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codereview.stackexchange.com/questions/84413/maths-qa-game-in-javascript"&gt;Stack Exchange - Code Review - Maths Q&amp;amp;A game in JavaScript&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#7-other-games"&gt;
  &lt;/a&gt;
  7. Other games &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IBypZp4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v460skp93gnhmnthzqcb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IBypZp4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v460skp93gnhmnthzqcb.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;--&amp;gt; Card Game, Rock-Paper-Scissors, Tic tac toe, Pong game...&lt;/p&gt;

&lt;p&gt;Actually, you can build lots of games with javascript, but I think these four do quite a lot in making you progress in javascript. A card game is fun to do and can be easily played directly on the console, without adding the full visual stuff. For example, I built a blackjack game completely playable from the console. Then &lt;a href="https://codepen.io/DevLorenzo/pen/ExgpPEO"&gt;Rock paper scissor&lt;/a&gt; and &lt;a href="https://codepen.io/DevLorenzo/pen/RwoNOPZ"&gt;Tic tac toe&lt;/a&gt;. You can do the first two players game, or even build a bot (more for the tic tac toe game in reality) to allow even a single user to play. &lt;br&gt;
The &lt;a href="https://codepen.io/gdube/pen/JybxxZ"&gt;pong game&lt;/a&gt; can allow you to do a more advanced 2d game with real-time updates (animations).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#c-social-amp-websites"&gt;
  &lt;/a&gt;
  c) Social &amp;amp; Websites &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#8-login-signup"&gt;
  &lt;/a&gt;
  8. Log-in, Sign-up... &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wFSNNgfP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ckeuagbniwofkaaljt5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wFSNNgfP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ckeuagbniwofkaaljt5.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Now we start with some more social / website-focused content. First I suggest you be able to quickly write a nice looking and well-performing Log-in / Sign-up system for websites, I'm sure you will need it someday, and then you will remember this training, and you will manage the situation like a pro!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=l96bQuvUFto"&gt;A video by FrontendTips - Login / Signup panel in css and javascript (With source code)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#9-filter"&gt;
  &lt;/a&gt;
  9. Filter &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qpATsdwz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljn61r6uy7puk4tolr8z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qpATsdwz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljn61r6uy7puk4tolr8z.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;That's easy as important to know how to do a basic filter. in pure javascript, you can need it to filter elements in an array. In real-life examples, you need to filter comments, posts, articles, videos... For example you can build, using the dev.to API, a webpage that allow the user to filter the articles. You have infinite way to filter articles!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/howto/howto_js_filter_lists.asp"&gt;HOW TO Filter/Search List- W3school&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#11-todo-list"&gt;
  &lt;/a&gt;
  11. To-do list &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fJ9zUFfJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9i1b2w94qerqhqqxa2z.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fJ9zUFfJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9i1b2w94qerqhqqxa2z.gif" alt="giphy"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The to-do list. How famous... Do you know notion? I love this app a lot, but I'm sure that you can improve the user experience. Try building something that makes planning a fun thing!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/howto/howto_js_todolist.asp"&gt;HOW TO create a to-do list - W3School&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#10-social"&gt;
  &lt;/a&gt;
  10. Social &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Now let's get to the really serious stuff, with javascript and web development you can build really complex things, so why not build a social with front-end and back-end coded in javascript? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://pusher.com/tutorials/social-network-javascript"&gt;Build a simple social network with javascript - pusher.com&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#12-portfolio"&gt;
  &lt;/a&gt;
  12. Portfolio &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Hey, I actually wrote a full article about that, whyyyy not checking it out right now? After leaving a like to this article for sure! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/devlorenzo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QtgKvHIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--N0bOH9Ja--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/571015/3b1e2909-e87b-4fc7-b817-0673184568b0.gif" alt="devlorenzo image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devlorenzo/how-to-finally-land-a-job-as-a-front-end-full-stack-developer-4emb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to escape from tutorial hell and get a job as a web dev 🔥&lt;/h2&gt;
      &lt;h3&gt;DevLorenzo ・ Mar  1 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;
  Other useful sources for &lt;strong&gt;you&lt;/strong&gt;
  &lt;br&gt;
&lt;a href="https://skillcrush.com/blog/projects-you-can-do-with-javascript/"&gt;20+ Projects You Can Do With JavaScript&lt;/a&gt;&lt;br&gt;
&lt;a href="https://jsbeginners.com/javascript-projects-for-beginners/"&gt;100+ JavaScript Projects for Beginners!&lt;/a&gt;&lt;br&gt;
&lt;a href="https://thesmartcoder.dev/9-awesome-projects-you-can-build-with-vanilla-javascript/#chapter-10"&gt;40+ JavaScript Projects For Your Portfolio&lt;/a&gt;&lt;br&gt;
&lt;a href="https://mikkegoes.com/javascript-projects-for-beginners/"&gt;17 JAVASCRIPT PROJECTS YOU CAN BUILD TO PERFECT YOUR CODING SKILLS&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/florinpop17/app-ideas"&gt;App ideas - At GitHub&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=3gKhcPLOFdA"&gt;5 Vanilla JavaScript Projects for Beginners&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.freecodecamp.org/news/javascript-projects-for-beginners/"&gt;40 JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=3PHXvlpOkf4"&gt;Build 15 JavaScript Projects - Vanilla JavaScript Course&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=dtKciwk_si4"&gt;10 JavaScript Projects in 10 Hours - Coding Challenge 🔥&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.codementor.io/javascript-projects"&gt;Learn programming&lt;br&gt;
with curated JavaScript projects - codementor.io&lt;/a&gt;&lt;br&gt;


&lt;/p&gt;




&lt;p&gt;Thanks for reading and Happy coding ❤&lt;/p&gt;

&lt;p&gt;Recommended readings:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/garvitmotwani" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a_j3ZA-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--sbZDVkQ4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/370225/6b6fe3de-e499-475b-a235-622dc13de202.jpg" alt="garvitmotwani image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/garvitmotwani/8-javascript-tips-tricks-that-no-one-teaches-24g1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;8 JavaScript Tips &amp;amp; Tricks That No One Teaches 🚀&lt;/h2&gt;
      &lt;h3&gt;Garvit Motwani ・ Apr  6 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#es6&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/devlorenzo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QtgKvHIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--N0bOH9Ja--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/571015/3b1e2909-e87b-4fc7-b817-0673184568b0.gif" alt="devlorenzo image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devlorenzo/the-ultimate-compilation-of-cheat-sheets-100-268g" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The ultimate Cheat sheets compilation (200+) - 🔥🎁 / Roadmap to dev 🚀&lt;/h2&gt;
      &lt;h3&gt;DevLorenzo ・ Mar  2 ・ 17 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  ⚡Giveaway ⚡
&lt;/h2&gt;

&lt;p&gt;We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
Steps to enter the giveaway&lt;br&gt;
--&amp;gt; React to this post (3 likes)&lt;br&gt;
--&amp;gt; &lt;a href="https://chipper-motivator-3112.ck.page/05710ea3d3"&gt;Subscribe to our Newsletter&lt;/a&gt; &lt;strong&gt;&amp;lt;--&lt;/strong&gt; Very important&lt;br&gt;
--&amp;gt; &lt;a href="https://twitter.com/DevLorenzo1"&gt;Follow me on Twitter&lt;/a&gt; &amp;lt;-- x2 Chances of winning&lt;/p&gt;

&lt;p&gt;The winner will be announced on May 1, Via Twitter&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#subscribe-to-my-newsletter"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://chipper-motivator-3112.ck.page/05710ea3d3"&gt;Subscribe to my Newsletter!&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;A loooong, and fun, weekly recap for you &lt;br&gt;
Free PDF version of my articles&lt;br&gt;
Highly customizable inbox&lt;br&gt;
That's --&amp;gt; free &amp;lt;-- and you help me!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Second Monitor: Friend or Foe?</title>
      <author>Anthony</author>
      <pubDate>Sat, 10 Apr 2021 13:07:18 +0000</pubDate>
      <link>https://dev.to/toymachine/second-monitor-friend-or-foe-2f9a</link>
      <guid>https://dev.to/toymachine/second-monitor-friend-or-foe-2f9a</guid>
      <description>&lt;p&gt;The perfect computer monitor setup does not exist. I find that often my needs change and my preferences shift, so that I'm rarely happy with my monitor situation for more than a few weeks at a time. &lt;/p&gt;

&lt;p&gt;A normal path people take is to use a single monitor and then to add a second. This will likely cost you under $150 (or will be a hassle-free ask from IT) and will simply mean plugging in just one HDMI or USB-C cord. Now you'll have twice the real estate (if not more).&lt;/p&gt;

&lt;p&gt;PC Magazine has some good tips on &lt;a href="https://www.pcmag.com/how-to/6-ways-to-improve-your-dual-monitor-setup"&gt;improving your second monitor experience&lt;/a&gt;. One thing they fail to mention, and it took me a long time to realize, is that a second widescreen monitor invites the same work habits as the main monitor. The dashboards, email programs, and social media accounts distracting you on Monitor 1 are easily dragged over to Monitor 2... where they still distract you, just not enough to close them out. &lt;/p&gt;

&lt;p&gt;My second monitor was a dumping ground for things I wanted to deal with later (or never) as well as being an all to convenient fit for ever-present emails and sometimes-present Youtube videos, Spotify playlists, and similar diversions. &lt;/p&gt;

&lt;p&gt;For a time I tried a vertical monitor in the second position. This was briefly an improvement because it forced a chance in my behavior -- windows were no longer as easy a fit so I had to think about what I was putting there. Also videos no longer looked as inviting and my email wasn't wide enough to do more than look out for incoming messages. &lt;/p&gt;

&lt;p&gt;I found a vertical monitor could improve productivity with long spreadsheets, long documents (like specifications and contracts), and to be good for text editors where large swathes of code or multiple components could be visible at once. &lt;/p&gt;

&lt;p&gt;Still, the distraction was there. I had used 2020 to construct a nearly distraction-free workplace, complete with a great desk, ergonomic chair, &lt;a href="https://helpatmyhome.com/quietest-fan/"&gt;super quiet fan&lt;/a&gt;, tangle-free power cords, a wonderful LED desk lamp for working late, and all the other things a mind bent on productivity could come up with. I even had my &lt;a href="https://dev.to/toymachine/secret-weapons-pen-and-paper-1nhb"&gt;pen and paper notes&lt;/a&gt; going, right next to my laptop... yet I had this second monitor and I couldn't stop myself from putting weapons-grade distractions on my second monitor. I'd catch myself checking into dashboards and analytics constantly when one or twice a day was sufficient. &lt;/p&gt;

&lt;p&gt;As you have likely guessed. I'm down to a single display and I'd urge you to try the same for a time as well. Don't go too small -- 15" on a laptop or 24-27" on a desktop is great -- but one clean, well-maintained space offers a fraction of the distraction of a multiple displays. &lt;/p&gt;

</description>
      <category>hardware</category>
      <category>display</category>
      <category>productivity</category>
      <category>code</category>
    </item>
    <item>
      <title>JSON web tokens are NOT meant for authenticating the same user repeatedly: Use session tokens instead</title>
      <author>Masa Kudamatsu</author>
      <pubDate>Sat, 10 Apr 2021 12:43:27 +0000</pubDate>
      <link>https://dev.to/masakudamatsu/json-web-tokens-are-not-meant-for-authenticating-the-same-user-repeatedly-use-session-tokens-instead-pno</link>
      <guid>https://dev.to/masakudamatsu/json-web-tokens-are-not-meant-for-authenticating-the-same-user-repeatedly-use-session-tokens-instead-pno</guid>
      <description>&lt;p&gt;There's a countless number of articles across the web that compare session tokens and JSON web tokens (JWTs) as a method of user authentication. It's really confusing for someone who is trying to create his/her &lt;em&gt;first&lt;/em&gt; full-stack web app (i.e. me myself). No one clearly explains pros and cons of each. (Maybe no one knows for sure).&lt;/p&gt;

&lt;p&gt;Spending several days doing research on the topic, I've come to a conclusion that I will go for session tokens, because JWTs are not meant to be used for repeatedly authenticating the same user. &lt;/p&gt;

&lt;p&gt;In a week's time, however, I'm sure I will forget why I've come to this conclusion. This topic is really complicated. This article is a memorandum for my future self and hopefully for you as well.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I'm not a web security expert. What's written below may not be fully correct, although I do my best to get everything right. Post a comment if you think I'm wrong. I just want to know the truth.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-the-uninitiated"&gt;
  &lt;/a&gt;
  For the uninitiated
&lt;/h2&gt;

&lt;p&gt;I'll skip describing what session tokens and JWTs are. There are great explanations already out there. &lt;/p&gt;

&lt;p&gt;For session tokens, I recommend reading &lt;a href="https://www.sohamkamani.com/blog/2017/01/08/web-security-session-cookies/"&gt;Kamani (2017)&lt;/a&gt;, who provides the most concise introduction to session tokens I've seen (and why cookies are necessary for them). &lt;/p&gt;

&lt;p&gt;For JWTs, have a look at &lt;a href="https://medium.com/swlh/why-do-we-need-the-json-web-token-jwt-in-the-modern-web-8490a7284482"&gt;Calandra (2019)&lt;/a&gt;, who very well explains the context in which JWTs were born.&lt;/p&gt;

&lt;p&gt;To compare session tokens and JWTs on a level playing field, we first need to be clear about one thing about JWTs:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-store-jwts-in-localstorage"&gt;
  &lt;/a&gt;
  Don't store JWTs in localStorage
&lt;/h3&gt;

&lt;p&gt;Many tutorials on JWTs that I've seen demonstrate how a front end app can store JWTs in &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"&gt;localStorage&lt;/a&gt;, and these tutorials always attract comments saying, "Don't store JWTs in localStorage, which is susceptible to cross-site scripting (XSS) attacks". I find &lt;a href="https://courses.reactsecurity.io/courses/react-security-fundamentals/302508-hardening-the-application/937470-steal-a-json-web-token"&gt;Chenkie (2020a)&lt;/a&gt; extremely clear about what these comments really mean, with a rare demonstration of how XSS attacks can be done. (It requires a sign up (free of charge), but this 2.5-minute video tutorial is really worth watching.)&lt;/p&gt;

&lt;p&gt;So JWTs should be stored in a cookie, just like session tokens need to be stored in a cookie. Cookies are susceptible to another kind of attacks known as cross-site request forgery (CSRF), but we can deal with it (at least partially, if I understand correctly) by using a library like &lt;a href="https://www.npmjs.com/package/csurf"&gt;&lt;code&gt;csurf&lt;/code&gt;&lt;/a&gt; (see &lt;a href="https://courses.reactsecurity.io/courses/react-security-fundamentals/328811-switching-to-cookies/937498-add-a-cross-site-request-forgery-token"&gt;Chenkie 2020b&lt;/a&gt; for detail).&lt;/p&gt;

&lt;p&gt;NOTE: &lt;a href="https://hasura.io/blog/best-practices-of-using-jwt-with-graphql/"&gt;Vladimir and Gopal (2019)&lt;/a&gt; advocate storing JWTs in memory, which is neither susceptible to XSS nor CSRF. Maybe this approach is worth checking out.&lt;/p&gt;

&lt;p&gt;So the relevant comparison for us is "the session tokens stored in a cookie" versus "the JWTs stored in a cookie".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cons-of-session-tokens"&gt;
  &lt;/a&gt;
  Cons of session tokens
&lt;/h2&gt;

&lt;p&gt;The major drawback of session tokens is that the logged-in users will get kicked out when either a different server deals with their request (when an app is served by several servers) or the same sever gets restarted (for fixing bugs etc.), because whether or not the user is authenticated is kept in a particular server. For detail, see &lt;a href="https://medium.com/swlh/why-do-we-need-the-json-web-token-jwt-in-the-modern-web-8490a7284482"&gt;Calandra (2019)&lt;/a&gt; for example.&lt;/p&gt;

&lt;p&gt;This problem can be solved by using a "session store" library such as &lt;code&gt;connect-redis&lt;/code&gt; (see &lt;a href="https://github.com/expressjs/session#compatible-session-stores"&gt;&lt;code&gt;express-session&lt;/code&gt;'s documentation&lt;/a&gt; for the list of session store libraries for Express.js). The idea is to keep session tokens in a dedicated database, and each time the user makes an HTTP request with their session token, the server receiving the request will consult this database to learn whether the request comes from the authenticated user or not. Performance suffers consequently, as retrieving data from a database always takes some time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PSAYrdd9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f72yvxiwbuoaxe7o5lgh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PSAYrdd9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f72yvxiwbuoaxe7o5lgh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;em&gt;Using session tokens requires a Redis or a database. Image source: &lt;a href="https://youtu.be/dgg1dvs0Bn4?t=106"&gt;Awad (2019)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;JWTs solve this issue by making a server "stateless": the user’s authentication status is embedded in the token so the server doesn’t need to remember about it. Another server or a restarted server can tell whether the user is authenticated or not, by decoding the JWT sent along with each HTTP request. So the logged-in user won’t get kicked out. We don't need any database to store user authentication status. Performance won't suffer consequently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cons-of-jwts"&gt;
  &lt;/a&gt;
  Cons of JWTs
&lt;/h2&gt;

&lt;p&gt;The downside of JWTs, however, is that the server, once issuing a JWT, cannot control when the token expires. Even after the user has logged out, an app cannot kill it with the server code or with the front-end code (as JWTs should be stored in a HTTP-only cookie for security). &lt;/p&gt;

&lt;p&gt;The longer the token lives, the higher the risk of getting it stolen. So we want to set a JWT to expire in a short period of time, say, 15 minutes. Then the user experience suffers: each user will be forced to log out while using the app every 15 minute. That's terrible.&lt;/p&gt;

&lt;p&gt;Extending its expiration date (i.e. refreshing the token) requires a "refresh token" to be issued to the user as well as being stored in a database. When the token expires, the server will check the refresh token sent with a HTTP request and verify it against the one stored in the database. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2HfAnjAf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bp3krynmchi9q0b3q7l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2HfAnjAf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bp3krynmchi9q0b3q7l.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;em&gt;JSON web tokens require a Redis or a database for storing refresh tokens. Image: adapted from &lt;a href="https://youtu.be/dgg1dvs0Bn4?t=106"&gt;Awad (2019)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This sounds familiar... Yes, it's the same as session tokens, which need to be stored in a database for different servers to verity the user authentication status. JWTs should have been a solution to this problem, but now we're back to the same situation: accessing database to verify the user authentication status. And it's more complicated: we're now not checking the token itself, but checking the token issued to refresh the original token... This is why &lt;a href="https://youtu.be/dgg1dvs0Bn4"&gt;Awad (2019)&lt;/a&gt; says he uses session tokens, not JWTs, for a simple web app.&lt;/p&gt;

&lt;p&gt;On the other hand, session tokens can be destroyed in the server code, say, when the user logs out. Extending the validity of sessions is straightforward, just by setting &lt;a href="https://github.com/expressjs/session#rolling"&gt;the &lt;code&gt;rolling&lt;/code&gt; option&lt;/a&gt; to be &lt;code&gt;true&lt;/code&gt; with &lt;code&gt;express-session&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summing-up"&gt;
  &lt;/a&gt;
  Summing up
&lt;/h2&gt;

&lt;p&gt;So the major benefit of using JWTs, improving performance by ditching the database of session tokens, is completely overturned by the need of a refresh token database to avoid forcing the user to log out every now and then. Well, not completely, to be exact. &lt;a href="https://dev.toWhy%20I%20haven't%20been%20using%20JWT%20tokens%20for%20Authentication"&gt;Awad (2019)&lt;/a&gt; points out that the frequency of database access is minimized with JWTs: the server needs to consult the refresh token database only when a JWT expires while it needs to access to the session token database each time the user sends a HTTP request. But this difference becomes smaller and smaller with a shorter lifetime of JWTs for strengthening security.&lt;/p&gt;

&lt;p&gt;Once I understand all this, then I finally figure out what &lt;a href="http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions/"&gt;Slootweg (2016)&lt;/a&gt; means by saying JWTs are not meant to be used to manage user sessions. By design, JWTs are not suitable for repeatedly authenticating users. The benefits of JWTs will be compromised once we start dealing with user sessions. &lt;/p&gt;

&lt;p&gt;That's how I have interpreted the difference between session tokens and JWTs. If I miss something, please let me know. I'm eager to learn more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-we-go"&gt;
  &lt;/a&gt;
  Before we go…
&lt;/h2&gt;

&lt;p&gt;This article is published in a publication called Web Dev Survey from Kyoto. The idea is to hold a virtual conference on web development in Kyoto City, the ancient capital of Japan, where I’m living now. After each article (which acts as a seminar talk), we take you to the tour around the city.&lt;br&gt;
Today the famous cherry blossoms are mostly fallen, unfortunately. However, kerria is now blooming in brilliant yellow across many places in Kyoto City:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Daikaku-ji"&gt;Daikaku-ji Temple&lt;/a&gt; (photographed by the author on 5 April 2021)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FeFtE4mi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/892fdnupjubcldh9t1ng.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FeFtE4mi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/892fdnupjubcldh9t1ng.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Matsunoo-taisha"&gt;Matuno'o Shrine&lt;/a&gt; (photographed by the author on 10 April 2021)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DQSsfZmV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f6x9gzkviajsfgefn5xz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DQSsfZmV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f6x9gzkviajsfgefn5xz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;Ben Awad (2019) "&lt;a href="https://youtu.be/dgg1dvs0Bn4"&gt;Why I haven't been using JWT tokens for Authentication&lt;/a&gt;", YouTube, Apr. 21, 2019.&lt;/p&gt;

&lt;p&gt;Mariano Calandra (2019) "&lt;a href="https://medium.com/swlh/why-do-we-need-the-json-web-token-jwt-in-the-modern-web-8490a7284482"&gt;Why do we need the JSON Web Token (JWT) in the modern web?&lt;/a&gt;", &lt;em&gt;Start It Up&lt;/em&gt;, Sep. 6, 2019.&lt;/p&gt;

&lt;p&gt;Ryan Chenkie (2020a) “&lt;a href="https://courses.reactsecurity.io/courses/react-security-fundamentals/302508-hardening-the-application/937470-steal-a-json-web-token"&gt;Steal a JSON Web Token&lt;/a&gt;”, &lt;em&gt;React Security Fundamentals&lt;/em&gt;, May 2020.&lt;/p&gt;

&lt;p&gt;Ryan Chenkie (2020b) "&lt;a href="https://courses.reactsecurity.io/courses/react-security-fundamentals/328811-switching-to-cookies/937498-add-a-cross-site-request-forgery-token"&gt;Add a Cross-site Request Forgery Token&lt;/a&gt;", &lt;em&gt;React Security Fundamentals&lt;/em&gt;, May 2020.&lt;/p&gt;

&lt;p&gt;Soham Kamani (2017) “&lt;a href="https://www.sohamkamani.com/blog/2017/01/08/web-security-session-cookies/"&gt;Web security essentials — Sessions and cookies&lt;/a&gt;”, &lt;em&gt;sohamkamani.com&lt;/em&gt;, Jan. 8, 2017.&lt;/p&gt;

&lt;p&gt;Sven Slootweg (2016) “&lt;a href="http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions/"&gt;Stop using JWT for sessions&lt;/a&gt;”, &lt;em&gt;joepie91’s Ramblings&lt;/em&gt;, Jun. 13, 2016.&lt;/p&gt;

&lt;p&gt;Vladimir and Tanmai Gopal (2019) "&lt;a href="https://hasura.io/blog/best-practices-of-using-jwt-with-graphql/"&gt;The Ultimate Guide to handling JWTs on frontend clients (GraphQL)&lt;/a&gt;", &lt;em&gt;Hasura Blog&lt;/em&gt;, Sep. 9, 2019.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>expressjs</category>
      <category>jsonwebtoken</category>
      <category>security</category>
    </item>
  </channel>
</rss>
