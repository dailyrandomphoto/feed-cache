<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What's the most expensive domain you ever bought?</title>
      <author>Madza</author>
      <pubDate>Fri, 17 Sep 2021 18:54:40 +0000</pubDate>
      <link>https://dev.to/madza/what-s-the-most-expensive-domain-you-ever-bought-56pe</link>
      <guid>https://dev.to/madza/what-s-the-most-expensive-domain-you-ever-bought-56pe</guid>
      <description>&lt;p&gt;Domain market is a competitive one. The prices for a single domain can vary from couple of bucks to seven or eight figures.&lt;/p&gt;

&lt;p&gt;Just curious what was the most expensive domain you ever bought, what was it for and did it payed-off?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>domain</category>
      <category>business</category>
      <category>finances</category>
    </item>
    <item>
      <title>Going from an Individual Contributor to an Engineering Manager is NOT a promotion</title>
      <author>Conor Bronsdon</author>
      <pubDate>Fri, 17 Sep 2021 18:46:15 +0000</pubDate>
      <link>https://dev.to/linearb/going-from-an-individual-contributor-to-an-engineering-manager-is-not-a-promotion-16bo</link>
      <guid>https://dev.to/linearb/going-from-an-individual-contributor-to-an-engineering-manager-is-not-a-promotion-16bo</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was written exclusively for devinterrupted.com by Anand Safi&lt;/em&gt;&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
In my role as an engineering manager, I know making the leap from an individual contributor (IC) to engineering manager (EM) is not a promotion. Instead, it’s a different career track. What we are discussing here is a fundamental difference in terms of the responsibilities of the roles. What you do as an engineering manager versus what you do as a developer is fundamentally different. There is a possibility that you might not write code altogether. A promotion means continuing to do the same thing, while being paid more to do it. Becoming an engineering manager means transitioning to a different role with different responsibilities. In other words, a separate career track.&lt;/p&gt;

&lt;p&gt;First, let’s break down our target audience into two groups. One group who is transitioning into engineering management. And then, the second, folks who have been made engineering managers recently. For those who are still considering, this decision could be made due to a couple of factors. It could be tenure-based, it happens in many companies where you are the senior-most engineer, or you have spent a fixed amount of time. The company or the team believes that you’re ready for managerial responsibilities, asking you to make the switch. This is a more traditional track that we see. Alternatively, there’s a more interest-based approach that you could be even at a mid to senior software engineer level.&lt;/p&gt;

&lt;p&gt;An important clarification with this is when to use the term “tech lead” and “engineering manager” interchangeably. The Tech Lead is a system owner, and the Engineering Manager is more of a team/people manager equally. So the former is responsible for the overall success of the architecture while the latter is responsible for the team success, motivation and morale of the people they manage.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T7oZ0AutYcQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;There are some key signals regarding both the tracks (IC &amp;amp; EM) to be aware about. They are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Amount of coding time&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Are you able to compromise on the technical output that you will end up with as an engineering manager versus a strong engineering IC? If you are coding 60 to 70% of your time currently, let’s say it’s going to reduce to 0 to 30% of the time. Yes! ZERO is a reality in this case. I have spent months where I’m literally not doing any coding in my role. There are EMs out there who would say they are able to still do coding and remain technical in terms of writing code day in, day out with an EM role. But, honestly, I don’t believe that is a scalable practice.&lt;/p&gt;

&lt;p&gt;If you are still taking on critical hands-on development tasks as an engineering manager, you run the risk of becoming a bottleneck for your team. For instance, if you are not available during the week, you need to do a lot of performance reviews or you are in some strategy meeting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Focus time vs meeting time&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Are you okay with spending 50–75% of your time in meetings and tackling action items? If a company is in a hiring mode or if there is a performance review season, or if there is just any ad hoc conflict that comes up, or mentorship in your one-on-ones with direct reports, there are many meetings/commitments. This is especially true now with remote culture and distributed teams. The amount of context needed to succeed in this role is quite high.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Definition of success&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Are you okay with the definition of success becoming vague? What I mean by that is, as an engineer and an individual contributor, there were days where my code would pass, I would complete the feature, the build was great, I would get a dopamine boost at the end of the day and I could say, “Wow, it’s a productive day!” Basically, I could see clear output as an engineer when I completed a task, or my work was released.&lt;/p&gt;

&lt;p&gt;As an engineering manager, it’s difficult to define what success looks like for you personally, because there are no metrics which tie to individual engineering management. For an engineer, it is lines of code or the amount of work you completed, features you pushed, zero bugs introduced. All those things are great success indicators for a strong engineer.&lt;/p&gt;

&lt;p&gt;For an engineering manager, you must find your own metric set of what success is, which is ‘maybe there was no conflict in the team this week’, ‘maybe there was no deadline that was missed this week’, ‘maybe there is no question in terms of the meeting’ that I had with the stakeholders, and everybody clearly understood the requirements that were there for that week. Overall, it becomes abstract, and you need to self-identify what success looks like.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Being an enabler, not a creator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Are you okay with the mindset of being an enabler versus a creator? As an engineer, an individual contributor, you have dedicated time to implement features. It’s your job to create things. However, as an engineering manager, you are responsible for enabling the creators to do their job. So, you are unblocking the team, you are giving clarity to the stakeholders, you are giving clarity to the team, you are providing updates to the leadership, you are sharing updates with other teams. Thus, you are enabling a lot of information sharing and removing bottlenecks for your teams and team members.&lt;/p&gt;

&lt;p&gt;For me, it’s clear that the engineering management and leadership track is a parallel career ladder on a separate track. It is a lateral move in that sense. It’s not a vertical move and it’s important to know the difference. The good part? In my experience, it is worth attempting to become an engineering manager because if it doesn’t suit you, you can always go back to being an individual contributor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you haven't already heard&lt;/strong&gt;, Dev Interrupted is partnering with Dzone to host &lt;strong&gt;INTERACT&lt;/strong&gt;: An interactive, community-driven, digital conference on September 30th - by engineering leaders, for engineering leaders. 1 day, 10 speakers, 100s of engineers and engineering leaders, all free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;Register Now&lt;/a&gt;
&lt;/h1&gt;




&lt;h2&gt;
  &lt;a href="#join-the-dev-interrupted-community"&gt;
  &lt;/a&gt;
  Join the Dev Interrupted Community
&lt;/h2&gt;

&lt;p&gt;If you haven’t already joined the best developer discord out there, WYD?&lt;/p&gt;

&lt;p&gt;Look, I know we talk about it a lot but we love our developer discord community. With over 1600 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No salespeople allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ghKqRKWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/79p55zb3q4hh0drifmdu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ghKqRKWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/79p55zb3q4hh0drifmdu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://devinterrupted.com/going-from-an-individual-contributor-to-an-engineering-manager-is-not-a-promotion/"&gt;https://devinterrupted.com&lt;/a&gt; on September 17, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>discuss</category>
      <category>management</category>
      <category>programming</category>
    </item>
    <item>
      <title>What is Google Cloud Platform ? 🤷</title>
      <author>Deepak Gupta</author>
      <pubDate>Fri, 17 Sep 2021 18:37:28 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/what-is-google-cloud-platform-32d7</link>
      <guid>https://dev.to/deepakguptacoder/what-is-google-cloud-platform-32d7</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Google Cloud Platform is a way to access Google’s&lt;br&gt;
infrastructure to create your own server&lt;br&gt;
And applications(simplified answer).&lt;br&gt;
Google Cloud Platform (GCP), a collection cloud computing services that was launched by Google on 7 April 2008.&lt;br&gt;
GCP offers a variety of tools and services that help with managing infrastructures, configuring networks and provisioning servers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-the-importance-of-gcp"&gt;
  &lt;/a&gt;
  What is the importance of GCP?
&lt;/h1&gt;

&lt;p&gt;is the third largest Cloud Service Provider (CSP), behind Amazon's AWS, and Microsoft Azure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#there-are-some-point-of-gcp"&gt;
  &lt;/a&gt;
  There are some point of GCP:-
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#scalability"&gt;
  &lt;/a&gt;
  Scalability
&lt;/h3&gt;

&lt;p&gt;GCP however, allows for extreme ease of scaling up or down.Downscaling is one of the biggest drawbacks to cloud computing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;In its pricing philosophy, Google has four key elements,&lt;br&gt;
Google's GCP services are priced at the lowest price on the cloud market compared to other providers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#subhour-billing"&gt;
  &lt;/a&gt;
  Sub-hour billing
&lt;/h3&gt;

&lt;p&gt;The bill is only made for the requested time. GCP, for example, doesn't round the hour to the next hour if services are requested for half an hours, unlike other CSPs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sustained-use-discount"&gt;
  &lt;/a&gt;
  Sustained Use Discount
&lt;/h3&gt;

&lt;p&gt;Google offers a 25% discount if you use the product for a sustained period of time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gcp"&gt;
  &lt;/a&gt;
  GCP
&lt;/h3&gt;

&lt;p&gt;This allows you to specify the exact amount CPU power and memory required for your application, and be billed accordingly.GCP also offers a variety of cloud services that can be used to build applications, manage infrastructures, provision servers, and store data. GCP is accessible by cloud administrators and developers via dedicated or public networks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#integrated-services"&gt;
  &lt;/a&gt;
  Integrated Services:
&lt;/h3&gt;

&lt;p&gt;Multiple APIs, AI, ML, IoT and Compute Engine, Databases, Big Data analytics Developer tools Security, Storage, can all be used simultaneously.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-collaboration"&gt;
  &lt;/a&gt;
  Quick Collaboration:
&lt;/h3&gt;

&lt;p&gt;GCP allows quick collaboration for all users. Multiple users can simultaneously access and edit the project files.&lt;/p&gt;

&lt;p&gt;For unused data, the redundant backup facility can be accessed.&lt;/p&gt;

&lt;p&gt;Employees can work anywhere and have full access to all information from any device. &lt;/p&gt;

&lt;p&gt;Data is also stored in the cloud so employees can work remotely.&lt;/p&gt;

&lt;p&gt;Full control and flexibility in technology and data management for users.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
I hope this is help to you learn a Googlecloud platform..&lt;/p&gt;

</description>
      <category>googlecloud</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What are your recurring expenses as a developer?</title>
      <author>Madza</author>
      <pubDate>Fri, 17 Sep 2021 18:16:35 +0000</pubDate>
      <link>https://dev.to/madza/what-are-your-recurring-expenses-as-a-developer-59p9</link>
      <guid>https://dev.to/madza/what-are-your-recurring-expenses-as-a-developer-59p9</guid>
      <description>&lt;p&gt;Expenses like hosting, domain, databases, cloud storage, subscription plans, app licences, etc can add up quickly.&lt;/p&gt;

&lt;p&gt;What are your recurring expenses as a developer (monthly/yearly)?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>business</category>
      <category>finances</category>
    </item>
    <item>
      <title>How to make a Feedback Component to seamlessly collect reviews in React.JS</title>
      <author>Parmeet Singh Asija</author>
      <pubDate>Fri, 17 Sep 2021 18:08:56 +0000</pubDate>
      <link>https://dev.to/parmeetasija/how-to-make-a-feedback-component-to-seamlessly-collect-reviews-in-react-js-22k4</link>
      <guid>https://dev.to/parmeetasija/how-to-make-a-feedback-component-to-seamlessly-collect-reviews-in-react-js-22k4</guid>
      <description>&lt;p&gt;For a business, customer feedback happens to be one of the most reliable ways to know how they are doing. As Developer, we should try and make this process as intuitive and simple as possible.&lt;/p&gt;

&lt;p&gt;This article aims to explain, how we could develop a customer feedback component using React, Lottie Web &amp;amp; Framer Motion. So let's get started with it then! 😉&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#project-initialization"&gt;
  &lt;/a&gt;
  Project Initialization
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app emoji-feedback
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install Dependencies
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/react-lottie"&gt;React Lottie&lt;/a&gt; for integrating Lottie animations&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/framer-motion"&gt;Framer Motion&lt;/a&gt; for micro-interactions&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/styled-components"&gt;Styled Components&lt;/a&gt; for styling needs
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add react-lottie framer-motion styled-components
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#animated-emojis"&gt;
  &lt;/a&gt;
  Animated Emojis
&lt;/h3&gt;

&lt;p&gt;To get the emojis to animate, we have 2 options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Animated emoji pack (Mostly Paid)&lt;/li&gt;
&lt;li&gt;Lottie Animations (Free &amp;amp; Paid)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I went with the 2nd option for this one. The animations used in this component are by &lt;a href="https://lottiefiles.com/jkkim0124"&gt;jkkim0124&lt;/a&gt;. Simply select your favorite animations and place them under the &lt;code&gt;src/lotties&lt;/code&gt; folder.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#component-breakdown"&gt;
  &lt;/a&gt;
  Component Breakdown
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6pO4JBKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628096449063/i4i5KCiSA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6pO4JBKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628096449063/i4i5KCiSA.jpeg" alt="Breakdown of the component"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#app-component"&gt;
  &lt;/a&gt;
  App Component
&lt;/h3&gt;

&lt;p&gt;Call the Emoji Feedback component along with the necessary state props.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// path: src/App.js

// React 
import { useState } from "react";

// External
import styled from "styled-components";

// Components
import EmojiFeedback from "./components/EmojiFeedback";

const AppStyles = styled.div`
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  background-color: #f8ebe2;
`;

const App = () =&amp;gt; {
  const [activeReaction, setActiveReaction] = useState("");
  return (
    &amp;lt;AppStyles&amp;gt;
      &amp;lt;EmojiFeedback
        activeReaction={activeReaction}
        setActiveReaction={setActiveReaction}
      /&amp;gt;
    &amp;lt;/AppStyles&amp;gt;
  );
};

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#constants"&gt;
  &lt;/a&gt;
  Constants
&lt;/h3&gt;

&lt;p&gt;Declare an array containing strings of the various supported reactions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// path: src/components/EmojiFeedback/data.js

const reactions = ["Aweful", "Bad", "Ok Ok", "Good", "Amazing"];

export { reactions };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#emoji-feedback-component"&gt;
  &lt;/a&gt;
  Emoji Feedback Component
&lt;/h3&gt;

&lt;p&gt;Loop through the reactions and then call the Emoji component for every reaction.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// path: src/components/EmojiFeedback/index.jsx

// External
import styled from "styled-components";

// Components
import Emoji from "./Emoji";
import { Flex } from "../../styles/globalStyles";

// Reactions array
import { reactions } from "./data";

const Card = styled.div`
  width: 800px;
  height: 500px;
  background-color: #fff;
  border-radius: 33px;
  padding: 44px 48px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);

  @media only screen and (max-width: 930px) {
    width: 80%;
  }
`;

const Heading = styled.h2`
  font-size: 42px;
  font-weight: bold;
  margin: 0;
  color: #000;
  font-family: Plus Jakarta Sans Bold;
`;

const Content = styled(Flex)`
  height: 452px;
  position: relative;
`;

const Emojis = styled(Flex)`
  top: 30%;
`;

const Button = styled.button`
  background-color: ${props =&amp;gt; (props.isSelected ? "#000" : "#ccc")};
  cursor: ${props =&amp;gt; (props.isSelected ? "pointer" : "not-allowed")};
  border: none;
  color: #fff;
  padding: 19.5px 107.3px;
  border-radius: 19px;
  font-family: Plus Jakarta Sans Medium;
  font-size: 24px;
  user-select: none;
  position: absolute;
  bottom: 0;
`;

const EmojiFeedback = ({ activeReaction, setActiveReaction }) =&amp;gt; {
  return (
    &amp;lt;Card&amp;gt;
      &amp;lt;Heading&amp;gt;How was your experience?&amp;lt;/Heading&amp;gt;
      &amp;lt;Content column&amp;gt;
        &amp;lt;Emojis&amp;gt;
          {reactions.map(reaction =&amp;gt; (
            &amp;lt;Emoji
              reaction={reaction}
              key={reaction}
              isSelected={activeReaction === reaction}
              setActiveReaction={setActiveReaction}
            /&amp;gt;
          ))}
        &amp;lt;/Emojis&amp;gt;
        &amp;lt;Button isSelected={!!activeReaction}&amp;gt;Submit&amp;lt;/Button&amp;gt;
      &amp;lt;/Content&amp;gt;
    &amp;lt;/Card&amp;gt;
  );
};

export default EmojiFeedback;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#emoji-component"&gt;
  &lt;/a&gt;
  Emoji Component
&lt;/h3&gt;

&lt;p&gt;The emoji component is being used to render a single emoji.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// path: src/components/EmojiFeedback/Emoji.jsx

// External
import Lottie from "react-lottie";
import { motion } from "framer-motion";
import styled from "styled-components";

// Helper for handling lottie animation data
import selectAnimationData from "../../lotties";

const EmojiWrapper = styled(motion.div)`
  cursor: pointer;
  margin: 0 12px;
  position: relative;
`;

const EmojiLabel = styled.p`
  text-align: center;
  position: absolute;
  bottom: -32px;
  left: 50%;
  transform: translate(-50%, -50%);
  font-family: Plus Jakarta Sans Bold;
  font-size: 16px;
  user-select: none;
`;

// Constants for emoji's scale during different states
const NORMAL_SCALE = 1;
const HOVERED_SCALE = 1.3;
const SELECTED_SCALE = 1.5;

const Emoji = ({ reaction, isSelected, setActiveReaction }) =&amp;gt; {
  // Initialize the animation options as per the reaction
  const animationOptions = {
    loop: true,
    autoplay: false,
    animationData: selectAnimationData(reaction),
    rendererSettings: {
      preserveAspectRatio: "xMidYMid slice",
    },
  };

  // Update state on the click of reaction
  const handleClick = () =&amp;gt; {
    if (isSelected) {
      setActiveReaction("");
    } else {
      setActiveReaction(reaction);
    }
  };

  return (
    &amp;lt;EmojiWrapper
      whileHover={{
        scale: isSelected ? SELECTED_SCALE : HOVERED_SCALE,
      }}
      animate={{
        scale: isSelected ? SELECTED_SCALE : NORMAL_SCALE,
      }}
      onClick={handleClick}
    &amp;gt;
      &amp;lt;Lottie
        options={animationOptions}
        height={100}
        width="80%"
        isStopped={!isSelected}
        isClickToPauseDisabled
      /&amp;gt;
      {isSelected &amp;amp;&amp;amp; &amp;lt;EmojiLabel&amp;gt;{reaction}&amp;lt;/EmojiLabel&amp;gt;}
    &amp;lt;/EmojiWrapper&amp;gt;
  );
};

export default Emoji;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;And there we have it, the emoji feedback component is ready. The &lt;a href="https://github.com/parmeet1402/internal-component-collection/tree/main/emoji-feedback"&gt;Code&lt;/a&gt; is available on Github. Would love to hear your valuable feedback in the comments down below.&lt;/p&gt;

&lt;p&gt;See you guys 👋🏻  in the next article of this Component series!&lt;/p&gt;

&lt;p&gt;Happy coding &amp;amp; Stay safe! ✨&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/parmeetasija"&gt;Twitter&lt;/a&gt; &amp;amp; &lt;a href="https://www.instagram.com/parmeetasija/"&gt;Instagram&lt;/a&gt; for more!&lt;/p&gt;

&lt;p&gt;This article can also be read on my &lt;a href="https://www.parmeetasija.com/blog/how-to-make-a-feedback-component-to-seamlessly-collect-reviews-in-reactjs"&gt;website&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>ux</category>
    </item>
    <item>
      <title>I redesigned YelpCamp by Colt Steele, and am giving away his Bootcamp for free!</title>
      <author>Moemin Mamdouh 👨‍💻</author>
      <pubDate>Fri, 17 Sep 2021 18:04:27 +0000</pubDate>
      <link>https://dev.to/codewell/i-redesigned-yelpcamp-by-colt-steele-and-am-giving-away-his-bootcamp-for-free-315i</link>
      <guid>https://dev.to/codewell/i-redesigned-yelpcamp-by-colt-steele-and-am-giving-away-his-bootcamp-for-free-315i</guid>
      <description>&lt;p&gt;Hi everyone 👋 &lt;/p&gt;

&lt;p&gt;Back when I was taking Colt Steele's bootcamp, I noticed that almost all YelpCamp projects were the same, and that's to be expected since people were still learning how to build a full stack application, but i'm a big fan of making it your own so I redesigned it!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3UYa0_icP0U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I tried my best not to add new features so as to not overwhelm beginners still learning, so this includes all the functionality you will find in the bootcamp. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.codewell.cc/challenges/yelpcamp-by-colt-steele--6144c7c8a383e41090a3d84b"&gt;You can download the custom design for the YelpCamp challenge here for free&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;🎁 I'm also giving away the bootcamp to one lucky winner, to enter the giveaway, check out this &lt;a href="https://twitter.com/codewell_/status/1438909946603708416?s=20"&gt;tweet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note: The link to the challenge will take you to my side project,&lt;a href="https://www.codewell.cc"&gt;Codewell&lt;/a&gt;, so please treat this post as such, thank you!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>node</category>
      <category>css</category>
    </item>
    <item>
      <title>Golden Hammer</title>
      <author>Ushieru Kokoran</author>
      <pubDate>Fri, 17 Sep 2021 18:01:58 +0000</pubDate>
      <link>https://dev.to/ushieru/golden-hammer-54kc</link>
      <guid>https://dev.to/ushieru/golden-hammer-54kc</guid>
      <description>&lt;h6&gt;
  &lt;a href="#disclaimer-uso-javascript-como-ejemplo-por-el-alza-que-ha-habido-%C3%BAltimamente-yo-no-te-vengo-a-decir-como-programar"&gt;
  &lt;/a&gt;
  🚧 &lt;em&gt;Disclaimer: Uso JavaScript como ejemplo por el alza que ha habido últimamente. Yo no te vengo a decir como programar.&lt;/em&gt;
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#javascript-es-la-soluci%C3%B3n-para-todo-y-no-es-necesario-aprender-otro-lenguaje"&gt;
  &lt;/a&gt;
  JavaScript es la solución para todo y no es necesario aprender otro lenguaje.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Server?&lt;/strong&gt; Express, Koa, Fastify, Nest, etc...&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Web?&lt;/strong&gt; React, Angular, Vue, Svelte, etc... &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Desktop?&lt;/strong&gt; Neutralino, Electron, NW.js, Ultralight, etc...&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mobile?&lt;/strong&gt; React Native, Meteor, Capacitor, PWA, etc...&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Database?&lt;/strong&gt; NeDB, Pouchdb, LowDB, etc...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si bien JavaScript goza de una gigantesca comunidad y gracias a ello tenemos herramientas para, casi, todo lo que necesitamos. Es normal que pensemos "Lo tengo todo en un mismo lenguaje 💘".&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#para-un-martillo-de-oro-todos-son-clavos"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Para un martillo de oro, todos son clavos 🙅&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Y claro, podemos usar cualquier lenguaje para darle solución a cualquier problema, pero ¿hasta dónde esto es recomendable?&lt;/p&gt;

&lt;p&gt;Para un MVP (Minimum Viable Product) puede ser nuestra primera opción utilizar el lenguaje con el que mejor nos desenvolvemos.&lt;/p&gt;

&lt;p&gt;Pero conforme vamos avanzando no debemos cerrarnos a la idea de aprender algo nuevo, refactorizar o incluso volver a empezar.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🎉🎉 ¡Sorpresa! Estas en la industria con más evolución y más cambiante de todos los tiempos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Un día COBOL domina el mercado y al otro día es Java. La resiliencia será nuestra más grande aliada, no uses el lenguaje más cómodo, usa el lenguaje más apto para tus necesidades.&lt;/p&gt;

&lt;p&gt;Es normal que un día pases de Ruby a Scala preguntemos a Twitter; de PHP a JavaScript preguntemos a Facebook; de Python a Go preguntemos a Uber. Porque aquí no se elige por lenguaje, se elige por necesidad.&lt;/p&gt;

&lt;p&gt;Es importante comprender que cada uno tiene capacidades y limitaciones en aplicaciones particulares. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Si te vas a casar que no sea con un lenguaje de programación 🧑‍💻&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>antipattern</category>
      <category>programming</category>
    </item>
    <item>
      <title>rbs collection was released!</title>
      <author>Masataka Pocke Kuwabara</author>
      <pubDate>Fri, 17 Sep 2021 17:49:03 +0000</pubDate>
      <link>https://dev.to/pocke/rbs-collection-was-released-4nmm</link>
      <guid>https://dev.to/pocke/rbs-collection-was-released-4nmm</guid>
      <description>&lt;p&gt;Recently we released RBS v1.6 with &lt;code&gt;rbs collection&lt;/code&gt; feature which is "Bundler" for RBS! The feature is experimental now, and it will be GA in RBS v2 for Ruby 3.1. Now you can use it with &lt;code&gt;gem install rbs&lt;/code&gt; if you use Ruby 2.6+!&lt;/p&gt;

&lt;p&gt;I'm an RBS maintainer and I designed and implemented the feature, so I'll describe &lt;code&gt;rbs collection&lt;/code&gt; feature in this article.&lt;/p&gt;

&lt;p&gt;By the way, I made a presentation on Sep. 10 at RubyKaigi Takeout 2021 and explained &lt;code&gt;rbs collection&lt;/code&gt; in the talk. This article is based on the talk. See &lt;a href="https://github.com/pocke/rubykaigi-2021"&gt;https://github.com/pocke/rubykaigi-2021&lt;/a&gt;  for more details (unfortunately I spoke in Japanese but it has English slides and subtitles).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-rbs"&gt;
  &lt;/a&gt;
  What is RBS
&lt;/h2&gt;

&lt;p&gt;First of all, I introduce RBS.&lt;/p&gt;

&lt;p&gt;RBS is a language to describe Ruby types. It is similar to &lt;code&gt;.d.ts&lt;/code&gt; of TypeScript or header files of C-language.&lt;br&gt;
The syntax is similar to Ruby.&lt;/p&gt;

&lt;p&gt;The following code is a simple RBS example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Blog
  attr_reader name: String

  def initialize: (String name) -&amp;gt; void

  def each_article: () { (Article) -&amp;gt; void } -&amp;gt; self # For blog.each_article { |article| ... }
                  | () -&amp;gt; Enumerator[Article, self]  # For blog.each_article.map { |article| ... }
end

class Article
  attr_reader title: String
  attr_reader content: String

  def initialize: (String title, String, content) -&amp;gt; void

  def published_at: () -&amp;gt; Time
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#rubygemrbscollection"&gt;
  &lt;/a&gt;
  ruby/gem_rbs_collection
&lt;/h2&gt;

&lt;p&gt;I need to describe another topic before describing &lt;code&gt;rbs collection&lt;/code&gt;. It is &lt;a href="https://github.com/ruby/gem_rbs_collection"&gt;ruby/gem_rbs_collection&lt;/a&gt; GitHub repository.&lt;/p&gt;

&lt;p&gt;The repository stores third-party gems' RBSs, like &lt;a href="https://github.com/DefinitelyTyped/DefinitelyTyped"&gt;DefinitelyTyped&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rbs collection&lt;/code&gt; feature integrates this repository and tools use RBS, such as &lt;code&gt;rbs&lt;/code&gt; command, &lt;a href="https://github.com/soutaro/steep"&gt;Steep&lt;/a&gt;, and &lt;a href="https://github.com/ruby/typeprof"&gt;TypeProf&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rbs-collection"&gt;
  &lt;/a&gt;
  rbs collection
&lt;/h2&gt;

&lt;p&gt;It's the main topic of this article💪&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rbs collection&lt;/code&gt; manages third-party RBSs, for example, installing, updating, and loading.&lt;/p&gt;

&lt;p&gt;The first section describes a motivating example of &lt;code&gt;rbs collection&lt;/code&gt;.&lt;br&gt;
Before &lt;code&gt;rbs collection&lt;/code&gt;, managing third-party RBSs is not efficient.&lt;/p&gt;

&lt;p&gt;The second section describes how &lt;code&gt;rbs collection&lt;/code&gt; solves the problem.&lt;/p&gt;

&lt;p&gt;The last section describes known issues of &lt;code&gt;rbs collection&lt;/code&gt;.&lt;br&gt;
The feature still has some known issues for now, and I'll solve the issues until RBS v2.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#motivating-example"&gt;
  &lt;/a&gt;
  Motivating example
&lt;/h3&gt;

&lt;p&gt;In this section, I describe how to set up third-party RBSs for a Rails app without &lt;code&gt;rbs collection&lt;/code&gt; as the motivating example.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#how-to-set-up"&gt;
  &lt;/a&gt;
  How to set up
&lt;/h4&gt;

&lt;p&gt;First, download ruby/gem_rbs_collection repository as a git submodule.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git submodule add https://github.com/ruby/gem_rbs_collection.git gem_rbs_collection
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then &lt;code&gt;rbs&lt;/code&gt; command is available but it needs many options. For example, the following command is necessary to validate RBSs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# too many options ¯\_(ツ)_/¯&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;rbs &lt;span class="nt"&gt;-rlogger&lt;/span&gt; &lt;span class="nt"&gt;-rpathname&lt;/span&gt; &lt;span class="nt"&gt;-rmutex_m&lt;/span&gt; &lt;span class="nt"&gt;-rdate&lt;/span&gt; &lt;span class="nt"&gt;-rmonitor&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
      &lt;span class="nt"&gt;-rsingleton&lt;/span&gt; &lt;span class="nt"&gt;-rtsort&lt;/span&gt; &lt;span class="nt"&gt;-rtime&lt;/span&gt; &lt;span class="nt"&gt;-rrack&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
      &lt;span class="nt"&gt;-ractivesupport&lt;/span&gt; &lt;span class="nt"&gt;-ractionpack&lt;/span&gt; &lt;span class="nt"&gt;-ractivejob&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
      &lt;span class="nt"&gt;-ractivemodel&lt;/span&gt; &lt;span class="nt"&gt;-ractionview&lt;/span&gt; &lt;span class="nt"&gt;-ractiverecord&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
      &lt;span class="nt"&gt;-rrailties&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
      &lt;span class="nt"&gt;--repo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gem_rbs_collection validate

&lt;span class="c"&gt;# TypeProf also needs the same options.&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;typeprof &lt;span class="nt"&gt;-rlogger&lt;/span&gt; &lt;span class="nt"&gt;-rpathname&lt;/span&gt; &lt;span class="nt"&gt;-rmutex_m&lt;/span&gt; &lt;span class="nt"&gt;-rdate&lt;/span&gt; &lt;span class="nt"&gt;-rmonitor&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
           &lt;span class="nt"&gt;-rsingleton&lt;/span&gt; &lt;span class="nt"&gt;-rtsort&lt;/span&gt; &lt;span class="nt"&gt;-rtime&lt;/span&gt; &lt;span class="nt"&gt;-rrack&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
           &lt;span class="nt"&gt;-ractivesupport&lt;/span&gt; &lt;span class="nt"&gt;-ractionpack&lt;/span&gt; &lt;span class="nt"&gt;-ractivejob&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
           &lt;span class="nt"&gt;-ractivemodel&lt;/span&gt; &lt;span class="nt"&gt;-ractionview&lt;/span&gt; &lt;span class="nt"&gt;-ractiverecord&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
           &lt;span class="nt"&gt;-rrailties&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
           &lt;span class="nt"&gt;--repo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gem_rbs_collection validate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;-r&lt;/code&gt; options specify library names you want to load, and &lt;code&gt;--repo&lt;/code&gt; option specifies the repository path which is the git submodule.&lt;/p&gt;

&lt;p&gt;And Steep needs a different configuration to load the same RBSs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Steepfile&lt;/span&gt;

&lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="ss"&gt;:app&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# Specify a directory that contains target Ruby files to type check.&lt;/span&gt;
  &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="s1"&gt;'app'&lt;/span&gt;
  &lt;span class="c1"&gt;# Specify the git submoduled directory&lt;/span&gt;
  &lt;span class="n"&gt;repo_path&lt;/span&gt; &lt;span class="s2"&gt;"gem_rbs_collection"&lt;/span&gt;
  &lt;span class="c1"&gt;# Specify the all library names to load.&lt;/span&gt;
  &lt;span class="n"&gt;library&lt;/span&gt; &lt;span class="s1"&gt;'pathname'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'logger'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;'mutex_m'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;'monitor'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'singleton'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tsort'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'time'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'rack'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;'activesupport'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'actionpack'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'activejob'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;'activemodel'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'actionview'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'activerecord'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;'railties'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Many options are required because rbs, TypeProf, and Steep don't know which libraries are required.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#motivations"&gt;
  &lt;/a&gt;
  Motivations
&lt;/h4&gt;

&lt;p&gt;As you can see, managing third-party RBSs has problems. I explain three problems.&lt;/p&gt;

&lt;p&gt;First, we need to resolve dependencies by hand. In the above examples, human resolved "my app depends on Active Support, then Active Support depends on Logger, and ...". It is too hard for humans 😂&lt;/p&gt;

&lt;p&gt;Second, we need &lt;code&gt;git submodule&lt;/code&gt; or copying RBSs to download third-party RBSs. It's too primitive. If you want to use different revisions RBSs, you can't use submodule but copying RBSs looks a hell.&lt;br&gt;
For example, you want to use gem X RBS with revision R, but want to use gem Y RBS with revision R', &lt;code&gt;git submodule&lt;/code&gt; doesn't work.&lt;/p&gt;

&lt;p&gt;Third, we need to use different ways between RBS, Steep, and TypeProf to load RBSs. &lt;code&gt;rbs&lt;/code&gt; command and TypeProf need to specify library names as command-line options, but Steep needs to specify them in &lt;code&gt;Steepfile&lt;/code&gt;. It is not a single source so it is hard to maintain.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-raw-rbs-collection-endraw-solves-the-problem"&gt;
  &lt;/a&gt;
  How &lt;code&gt;rbs collection&lt;/code&gt; solves the problem
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;rbs collection&lt;/code&gt; automatically resolves dependencies, downloads RBSs, and loads RBSs from the single source. It means &lt;code&gt;rbs collection&lt;/code&gt; sovles these problems!&lt;/p&gt;

&lt;p&gt;To use &lt;code&gt;rbs collection&lt;/code&gt;, you need to install &lt;code&gt;rbs&lt;/code&gt; gem v1.6+. Then initialize the configuration file with &lt;code&gt;rbs collection init&lt;/code&gt; command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install rbs gem v1.6+&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;gem &lt;span class="nb"&gt;install &lt;/span&gt;rbs

&lt;span class="c"&gt;# Initialize the config file&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;rbs collection init
warning: rbs collection is experimental, and the behavior may change &lt;span class="k"&gt;until &lt;/span&gt;RBS v2.0
created: rbs_collection.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, edit the generated configuration file, &lt;code&gt;rbs_collection.yaml&lt;/code&gt;. The full content is the following:&lt;br&gt;
Note that I'll describe why you need to edit it in the "Known Issues" section.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Download sources&lt;/span&gt;
&lt;span class="na"&gt;sources&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ruby/gem_rbs_collection&lt;/span&gt;
    &lt;span class="na"&gt;remote&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://github.com/ruby/gem_rbs_collection.git&lt;/span&gt;
    &lt;span class="na"&gt;revision&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;
    &lt;span class="na"&gt;repo_dir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;gems&lt;/span&gt;

&lt;span class="c1"&gt;# A directory to install the downloaded RBSs&lt;/span&gt;
&lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.gem_rbs_collection&lt;/span&gt;

&lt;span class="na"&gt;gems&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# Skip loading rbs gem's RBS.&lt;/span&gt;
  &lt;span class="c1"&gt;# It's unnecessary if you don't use rbs as a library.&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rbs&lt;/span&gt;
    &lt;span class="na"&gt;ignore&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
  &lt;span class="c1"&gt;# 👮👮👮 Add the following lines&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pathname&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;logger&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mutex_m&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;date&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;monitor&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;singleton&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;tsort&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;time&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;set&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, execute &lt;code&gt;rbs collection install&lt;/code&gt; command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# rbs collection uses Gemfile.lock to resolve dependency,&lt;/span&gt;
&lt;span class="c"&gt;# so execute `bundle install` before that to generate Gemfile.lock.&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;bundle &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="c"&gt;# Install RBSs from ruby/gem_rbs_collection repo&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;rbs collection &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, the CLI tools are available!&lt;/p&gt;

&lt;p&gt;You can use rbs and TypeProf commands without options.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;rbs validate
&lt;span class="nv"&gt;$ &lt;/span&gt;typeprof target.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use Steep with a few configurations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Steepfile&lt;/span&gt;

&lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="ss"&gt;:app&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# Specify a directory that contains target Ruby files to type check.&lt;/span&gt;
  &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="s1"&gt;'app'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that the &lt;code&gt;rbs collection&lt;/code&gt; integrations with Steep and TypeProf have not been released yet now (2021-09-18). You need to install them from GitHub if you want to try them for now.&lt;br&gt;
Steep integration was implemented in &lt;a href="https://github.com/soutaro/steep/pull/420"&gt;https://github.com/soutaro/steep/pull/420&lt;/a&gt;  but not yet released.&lt;br&gt;
TypeProf integration was implemented in &lt;a href="https://github.com/ruby/typeprof/pull/53"&gt;https://github.com/ruby/typeprof/pull/53&lt;/a&gt;  but not yet merged.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#the-mechanism-of-raw-rbs-collection-install-endraw-"&gt;
  &lt;/a&gt;
  The mechanism of &lt;code&gt;rbs collection install&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;rbs collection install&lt;/code&gt; command works with the following steps.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Generating &lt;code&gt;rbs_collection.lock.yaml&lt;/code&gt;

&lt;ol&gt;
&lt;li&gt;Resolve the dependencies with Gemfile.lock.&lt;/li&gt;
&lt;li&gt;Write the gems to the lockfile, &lt;code&gt;rbs_collection.lock.yaml&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Installing RBSs

&lt;ol&gt;
&lt;li&gt;Copy RBSs from ruby/gem_rbs_collection with the lockfile.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then, &lt;code&gt;rbs&lt;/code&gt;, &lt;code&gt;steep&lt;/code&gt; and &lt;code&gt;typeprof&lt;/code&gt; commands load the installed RBSs.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#known-issues"&gt;
  &lt;/a&gt;
  Known Issues
&lt;/h3&gt;

&lt;p&gt;Unfortunately &lt;code&gt;rbs collection&lt;/code&gt; has known issues.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#resolving-standard-libraries-dependencies"&gt;
  &lt;/a&gt;
  Resolving Standard Libraries' Dependencies
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;rbs collection&lt;/code&gt; doesn't resolve dependencies of most standard libraries. For example, &lt;code&gt;logger&lt;/code&gt;, &lt;code&gt;pathname&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;In many cases, standard libraries do not appear in &lt;code&gt;Gemfile.lock&lt;/code&gt; so &lt;code&gt;rbs collection&lt;/code&gt; can't find them from &lt;code&gt;Gemfile.lock&lt;/code&gt;.&lt;br&gt;
We can do &lt;code&gt;require&lt;/code&gt; stdlibs even if the stdlib is not included in gemspec or Gemfile. So most gems don't have explicit dependencies to stdlibs. For example, &lt;code&gt;rails&lt;/code&gt; gem depends on many stdlibs such as &lt;code&gt;pathname&lt;/code&gt;, but the gemspec doesn't include &lt;code&gt;pathname&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I'll fix the problem by introducing a configuration file for RBS, such as one called &lt;code&gt;manifest.yaml&lt;/code&gt;. The file will contain all stdlib dependency names.&lt;br&gt;
For example, if &lt;code&gt;foo&lt;/code&gt; gem depends on &lt;code&gt;pathname&lt;/code&gt; and &lt;code&gt;logger&lt;/code&gt;, the &lt;code&gt;manifest.yaml&lt;/code&gt; will be the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# ruby/gem_rbs_collection/gems/foo/1.0/manifest.yaml&lt;/span&gt;

&lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pathname&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;logger&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#other-issues"&gt;
  &lt;/a&gt;
  Other issues
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;rbs collection&lt;/code&gt; has other known issues. See &lt;a href="https://github.com/ruby/rbs/pull/589"&gt;https://github.com/ruby/rbs/pull/589&lt;/a&gt;  and &lt;a href="https://github.com/ruby/rbs/issues/794"&gt;https://github.com/ruby/rbs/issues/794&lt;/a&gt;  for more information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I introduced &lt;code&gt;rbs collection&lt;/code&gt;, which is the "Bundler" for RBS.&lt;br&gt;
You can easily manage third party RBSs with the command.&lt;/p&gt;

&lt;p&gt;I hope you will give it a try. Feel free to open issues if you have any problems!&lt;br&gt;
Thank you for reading &amp;lt;3&lt;/p&gt;

</description>
      <category>ruby</category>
    </item>
    <item>
      <title>☄Deep Dive into Object Oriented Programming: Part 1</title>
      <author>Sahil Bondre</author>
      <pubDate>Fri, 17 Sep 2021 17:07:16 +0000</pubDate>
      <link>https://dev.to/godcrampy/deep-dive-into-object-oriented-programming-part-1-1lbi</link>
      <guid>https://dev.to/godcrampy/deep-dive-into-object-oriented-programming-part-1-1lbi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this series of posts, We are going to explore object-oriented programming. We'll start with a few basic concepts, then build upon them, trying to dig more and more into the depths of object-oriented programming.&lt;br&gt;
Object-oriented programming is one of the three popular paradigms of programming. The other being functional and procedural programming.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Procedural programming&lt;/strong&gt; is based on making procedure calls. A procedure contains a series of instructions that need to be executed. Procedures are also commonly referred to as functions or routines. In procedural programming, we write a list of instructions to tell the computer what to do line by line.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Functional programming&lt;/strong&gt; treats computation as a series of mathematical functions. Each function takes in data, does some computation and returns some data. A key idea in this paradigm is that state and data should be immutable. Thinking of computer programs as mathematical functions are quite an exciting idea; we'll save it for another post!&lt;/p&gt;

&lt;p&gt;Finally, &lt;strong&gt;object-oriented programming&lt;/strong&gt; tries to map real-world objects into the software. Using object-oriented programming, we can model the properties and the functions of things that appear in our natural world and simulate them in our computer programs.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#class-vs-object"&gt;
  &lt;/a&gt;
  Class vs Object
&lt;/h2&gt;

&lt;p&gt;OOP boils down to emulating real-world things in our code. Every real-world item has some properties and a few things it can perform. Let's say we want to model a car in our code. Let's consider a few properties of a car:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is its name? &lt;code&gt;String&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;What is its colour? &lt;code&gt;String&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;How many people can it accommodate? &lt;code&gt;Integer&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;How much fuel is there in the car currently? &lt;code&gt;Integer&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;How much distance has it travelled so far? &lt;code&gt;Integer&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's also assume that the car can perform some essential functions like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start the engine&lt;/li&gt;
&lt;li&gt;Refuel the tank&lt;/li&gt;
&lt;li&gt;Drive a certain distance etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we'll model our car in code. We need to define a class like a blueprint describing all these car characteristics to the programming language.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#defining-the-class"&gt;
  &lt;/a&gt;
  Defining the Class
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.godcrampy.oop_deep_dive&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Car&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;peopleCapacity&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;fuelLeft&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;distanceTravelled&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Car&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;peopleCapacity&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;peopleCapacity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;peopleCapacity&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fuelLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;distanceTravelled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;startEngine&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Starting Engine!"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;refuelTank&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;fuel&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fuelLeft&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;fuel&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;drive&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Driving..."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;distanceTravelled&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's break the code down piece by piece:&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#members"&gt;
  &lt;/a&gt;
  Members
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;peopleCapacity&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;fuelLeft&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;distanceTravelled&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;These are known as the members of the class. Imagine them to be variables of the class. When we make a new car, every car object will get its own copy of these variables. I've defined them as either &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;Integer&lt;/code&gt; as per the property of the car that they represent.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#methods"&gt;
  &lt;/a&gt;
  Methods
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;startEngine&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Starting Engine!"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;refuelTank&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;fuel&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fuelLeft&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;fuel&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;drive&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Driving..."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;distanceTravelled&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;These are the methods that we've defined to imitate various functions of a real-world car. &lt;code&gt;startEngine&lt;/code&gt; imitates the starting of the engine by printing to the console. &lt;code&gt;refuelTank&lt;/code&gt; takes in an Integer and increases the &lt;code&gt;fuelLeft&lt;/code&gt; member of the class by that amount. The same goes for the &lt;code&gt;drive&lt;/code&gt; method that increases the &lt;code&gt;distanceTravelled&lt;/code&gt; member and prints out a message on the console.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#constructor"&gt;
  &lt;/a&gt;
  Constructor
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Car&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;peopleCapacity&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;peopleCapacity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;peopleCapacity&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fuelLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;distanceTravelled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This is a unique method of the class called the constructor. Ignore the &lt;code&gt;public&lt;/code&gt; keyword; we'll get back to it later. Notice that it has the same name as the class. Also, notice that we don't specify any return type (like &lt;code&gt;void&lt;/code&gt; or &lt;code&gt;int&lt;/code&gt;). The blueprint class tells Java about something known as a &lt;code&gt;Car&lt;/code&gt;, but it does not create a car for us. When we make a car, we need to invoke the constructor method. So essentially, the constructor is the first method that is called when we create a car from the class.&lt;/p&gt;

&lt;p&gt;Have a look at the bunch of &lt;code&gt;this&lt;/code&gt; keyword here. The constructor has three parameters &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;color&lt;/code&gt; and &lt;code&gt;peopleCapacity&lt;/code&gt;. We use these to set the initial values of our own members in the class. Now to distinguish between the &lt;code&gt;name&lt;/code&gt; of our class and &lt;code&gt;name&lt;/code&gt; of the constructor, we use th&lt;code&gt;is&lt;/code&gt; keyword. The parameter &lt;code&gt;name&lt;/code&gt; belongs to the function scope and just writing &lt;code&gt;name&lt;/code&gt; points to the parameter. To access the member &lt;code&gt;name&lt;/code&gt;, we use &lt;code&gt;this.name&lt;/code&gt; as it is in the outer scope of the class. Now let's actually make a car object from the class that we have defined over here.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-the-object"&gt;
  &lt;/a&gt;
  Creating the Object
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.godcrampy.oop_deep_dive&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Main&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Car&lt;/span&gt; &lt;span class="n"&gt;honda&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Car&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Honda"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Red"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;honda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;startEngine&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;honda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fuelLeft&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;honda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;refuelTank&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;honda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fuelLeft&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;Starting Engine!
100
200
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's step through the code line by line and see what's happening:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;Car&lt;/span&gt; &lt;span class="n"&gt;honda&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Car&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Honda"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Red"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We use the &lt;code&gt;new&lt;/code&gt; keyword to instantiate an object from a class. The &lt;code&gt;Car&lt;/code&gt; in &lt;code&gt;Car honda =&lt;/code&gt; refers to the type of the variable &lt;code&gt;honda&lt;/code&gt;. The &lt;code&gt;Car&lt;/code&gt; in &lt;code&gt;new Car(...)&lt;/code&gt; is a call to the constructor. Observe the parameters we are passing are precisely the same as the constructor above expects. This runs the code in the constructor and sets the members accordingly.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="n"&gt;honda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;startEngine&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here we are calling the &lt;code&gt;startEngine&lt;/code&gt; method of the &lt;code&gt;Car&lt;/code&gt;. We use &lt;code&gt;.&lt;/code&gt; operator to access members and methods of the object. This, in turn, runs the imaginary code to start our car's engine and prints "Starting Engine!" on our console.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;honda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fuelLeft&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here we are accessing the value of the&lt;code&gt;fuelLeft&lt;/code&gt; variable of the car and printing it out.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="n"&gt;honda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;refuelTank&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;honda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fuelLeft&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;refuelTank&lt;/code&gt; function increases the &lt;code&gt;fuelLeft&lt;/code&gt; of the &lt;code&gt;honda&lt;/code&gt; car, and on the following line, when we print it again, we can see the final value to be &lt;code&gt;200&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-did-we-discover"&gt;
  &lt;/a&gt;
  What did we discover?
&lt;/h2&gt;

&lt;p&gt;We have now established the basics of Object-oriented programming. Let's take a step back and analyze the consequences of what we have discovered so far. In procedural programming, we used to pass data into procedures to performs computations. In this paradigm, the data itself can perform operations on itself. The Car class has all its properties built-in and knows all the tasks it is supposed to serve. This new way of thinking about programs has its own advantages and disadvantages:&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages:
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Classes are logically a layer of abstraction above writing simple procedures. This makes it easier to write complex software.&lt;/li&gt;
&lt;li&gt;It's easier to write and maintain code (open to debate :P)&lt;/li&gt;
&lt;li&gt;Object-oriented code has a reasonable degree of reusability. The standard library of Java is a beautiful example of this.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;
  &lt;a href="#disadvantages"&gt;
  &lt;/a&gt;
  Disadvantages:
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Look at the lines of code we wrote and what we printed out. A large number of lines of code is required to set up things and bootstrap even the most straightforward programs.&lt;/li&gt;
&lt;li&gt;Computer hardware still executes code pretty much in a procedural way, line by line. Object-oriented code runs a bit slower as it requires extra processing layers before it reaches the silicon level.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That wraps it up for the post. We laid the foundation to build upon even more object-oriented programming concepts in the upcoming stream of posts. You can find the code mentioned in the post here: &lt;a href="https://github.com/godcrampy/oop-deep-dive-notes"&gt;https://github.com/godcrampy/oop-deep-dive-notes&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;I hope you liked the post. If this was helpful, please show some love by clicking ♥, 🦄 and saving the post for later. Oh, BTW do you want to learn Bash? Here's my crash-course post on Shell Scripting:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/godcrampy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S7m_VL-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--IIQrUBME--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/205514/d6dd6688-3ad3-4913-9421-b9256cdea822.png" alt="godcrampy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/godcrampy/the-missing-shell-scripting-crash-course-37mk" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🚀 The Missing Shell Scripting Crash Course&lt;/h2&gt;
      &lt;h3&gt;Sahil Bondre ・ Apr 21 '20 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#bash&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#linux&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;






&lt;p&gt;🌟 I made some &lt;a href="https://github.com/godcrampy/cheat-sheets"&gt;Cheat-Sheets&lt;/a&gt;&lt;br&gt;
🚀 Stalk me on &lt;a href="https://www.instagram.com/godcrampy/"&gt;Instagram&lt;/a&gt; | &lt;a href="//github.com/godcrampy"&gt;Github&lt;/a&gt; | &lt;a href="//twitter.com/godcrampy"&gt;Twitter&lt;/a&gt; | &lt;a href="//sahil.surge.sh"&gt;Website&lt;/a&gt;&lt;br&gt;
😄 Have a wonderful day!&lt;/p&gt;

</description>
      <category>java</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>oop</category>
    </item>
    <item>
      <title>Use Context Api and Immer to Manage the state of your React app</title>
      <author>Francisco Mendes</author>
      <pubDate>Fri, 17 Sep 2021 16:46:17 +0000</pubDate>
      <link>https://dev.to/franciscomendes10866/use-context-api-and-immer-to-manage-the-state-of-your-react-app-1hem</link>
      <guid>https://dev.to/franciscomendes10866/use-context-api-and-immer-to-manage-the-state-of-your-react-app-1hem</guid>
      <description>&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;In the past I've written two articles in which I explain how we can use immer.js together with &lt;a href="https://dev.to/franciscomendes10866/zustand-and-immer-with-react-5ajh"&gt;zustand&lt;/a&gt; and the &lt;a href="https://dev.to/franciscomendes10866/use-immer-to-better-handle-the-state-of-your-react-app-489p"&gt;useState&lt;/a&gt; hook.&lt;/p&gt;

&lt;p&gt;But I am fully aware that not everyone uses community-created state managers or using component state is not enough. That's why many people use the Context Api, it comes with React, it's light, fast and very advanced.&lt;/p&gt;

&lt;p&gt;One of the advantages of Context Api is that it is immensely flexible, we can have several implementations of it, but in today's example I will use reducers (which I believe is the most used approach).&lt;/p&gt;

&lt;p&gt;In this article I won't explain in depth how immer.js actually works because it's a topic in itself, however I recommend reading &lt;a href="https://itnext.io/why-concept-of-immutability-is-so-damn-important-for-a-beginner-front-end-developer-8da85b565c8e"&gt;this&lt;/a&gt; article which explains the concept very well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#todays-example"&gt;
  &lt;/a&gt;
  Today's example
&lt;/h2&gt;

&lt;p&gt;Today I will take an approach similar to the past, ie at the end of the article I will share with you the github repository so that you can test it more easily. &lt;/p&gt;

&lt;p&gt;But talking about the idea now, I'll show you an example of a reducer with a very typical approach, you must have seen it in courses or even at work. Then I'll show you how to get exactly the same results using immer.js.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-code"&gt;
  &lt;/a&gt;
  Let's code
&lt;/h1&gt;

&lt;p&gt;The application that you will have access to the github repository looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sAOKwWQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dj5iihhqv/image/upload/v1631894746/Screenshot_2021-09-17_at_17.04.05-min_rk0uwn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sAOKwWQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dj5iihhqv/image/upload/v1631894746/Screenshot_2021-09-17_at_17.04.05-min_rk0uwn.png" alt="example app with some data"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In our application we can add a book, update it and remove it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nNr3CUIp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/dj5iihhqv/image/upload/v1631895037/Kapture_2021-09-17_at_17.09.19-min_ji71ti.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nNr3CUIp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/dj5iihhqv/image/upload/v1631895037/Kapture_2021-09-17_at_17.09.19-min_ji71ti.gif" alt="adding, updating and deleting a book"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our reducer code is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// @/src/store/reducers/books.js&lt;/span&gt;

 &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ADD_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;books&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
         &lt;span class="p"&gt;},&lt;/span&gt;
       &lt;span class="p"&gt;};&lt;/span&gt;
     &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;REMOVE_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;books&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;},&lt;/span&gt;
       &lt;span class="p"&gt;};&lt;/span&gt;
     &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UPDATE_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;books&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
             &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
             &lt;span class="p"&gt;}&lt;/span&gt;
             &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
           &lt;span class="p"&gt;}),&lt;/span&gt;
         &lt;span class="p"&gt;},&lt;/span&gt;
       &lt;span class="p"&gt;};&lt;/span&gt;
     &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I believe that practically everyone has seen reducers similar to this one at least once in our lives. I want to say right away that this code isn't incorrect when written this way, it's fully functional, and it's the most popular approach I know.&lt;/p&gt;

&lt;p&gt;However this approach is not the most friendly for beginners or people who are not used to working with JavaScript. I say this because at some point, the way we learned to manipulate data structures like objects and arrays is using methods.&lt;/p&gt;

&lt;p&gt;And that's exactly why we're going to take into account the logic we have in the code above and we're going to use immer.js now. First let's clean our reducer, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// @/src/store/reducers/books.js&lt;/span&gt;

 &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ADD_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;REMOVE_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UPDATE_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's start working on &lt;code&gt;ADD_BOOK&lt;/code&gt;, in our return we will use the &lt;code&gt;produce()&lt;/code&gt; function from immer.js which will have two arguments. The first argument will be our &lt;strong&gt;state&lt;/strong&gt; and the second will be a callback with our state's &lt;strong&gt;draft&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Then to add a new book to our list of books we just need to use the &lt;code&gt;push()&lt;/code&gt; method and we pass the book with a single argument.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// @/src/store/reducers/books.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;produce&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;immer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ADD_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;produce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;REMOVE_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UPDATE_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in our &lt;code&gt;REMOVE_BOOK&lt;/code&gt; we will do something similar but this time we will remove a book, first we will need to know the book index with id similar to the payload, using the &lt;code&gt;findIndex()&lt;/code&gt; method. After we get the book's index, we will remove it from the array, using the &lt;code&gt;splice()&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// @/src/store/reducers/books.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;produce&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;immer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ADD_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;produce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;REMOVE_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;produce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bookIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bookIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UPDATE_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally in our &lt;code&gt;UPDATE_BOOK&lt;/code&gt;, we will need to find the book with the id equal to the payload id, using the &lt;code&gt;find()&lt;/code&gt; method. Once we have our book (which this time is an object) let's update each of its properties, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// @/src/store/reducers/books.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;produce&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;immer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ADD_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;produce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;REMOVE_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;produce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bookIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bookIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UPDATE_BOOK&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;produce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;author&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you go to test the application you will notice that everything has the same behavior, but this time we have much less code in our reducer, it is easier to read and it is immensely intuitive.&lt;/p&gt;

&lt;p&gt;As promised, if you want to access the github repository to test the application click &lt;a href="https://github.com/FranciscoMendes10866/soav"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As always, I hope you found it interesting. If you noticed any errors in this article, please mention them in the comments. 🧑🏻‍💻&lt;/p&gt;

&lt;p&gt;Hope you have a great day! 😈&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>node</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How a Shy, Introvert Dev, With Anxiety Issues Spoke at 2 Conferences 🇪🇺.</title>
      <author>Eleftheria Batsou</author>
      <pubDate>Fri, 17 Sep 2021 16:43:21 +0000</pubDate>
      <link>https://dev.to/eleftheriabatsou/how-a-shy-introvert-dev-with-anxiety-issues-spoke-at-2-conferences-5e67</link>
      <guid>https://dev.to/eleftheriabatsou/how-a-shy-introvert-dev-with-anxiety-issues-spoke-at-2-conferences-5e67</guid>
      <description>&lt;p&gt;&lt;strong&gt;8 days, 5 countries, 2 conferences - Dealing with anxiety and networking.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hello beautiful people, in this article I’ll describe my last 8 days traveling in Europe and attending as a speaker 2 tech conferences. While we progress I'll share what I learned during these days (tech and non-tech news/advice) as well as some tips about networking and being comfortable around new people (which is something I always struggle with, but I am making my best to improve it).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;1. I used to travel a lot in conferences all over the world, but then covid happened and I stopped! Maybe the old followers/readers, already know that, but as I usually say, I have 2 passions: my job and traveling. So when these 2 things can be combined you can bet I am a happy girl 😊&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2. Also, I am fully vaccinated and I take seriously all the health regulations. It's not only about my well-being but also about the people around me. I would never jeopardize their health.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let the journey begin...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;P.S. If you are bored to read, watch the  &lt;a href="https://youtu.be/VBlnjW2Lvgs"&gt;vlog&lt;/a&gt; 😉.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=VBlnjW2Lvgs"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H7RoO12D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/VBlnjW2Lvgs/0.jpg" alt="IMAGE ALT TEXT HERE"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#day-1-monday"&gt;
  &lt;/a&gt;
  Day 1 - Monday
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#%E2%9C%88-greece-germany-and-croatia"&gt;
  &lt;/a&gt;
  ✈ Greece, Germany and Croatia
&lt;/h2&gt;

&lt;p&gt;I woke up so excited for my journey, everything was ready and planned. I had made my preparation through the weekend (airplane check-in, suitcases, and even some of Monday's work), my flight wasn't until midday so I had some time to work and be productive. &lt;/p&gt;

&lt;p&gt;The socializing part started as soon as I arrived at the airport. There was an issue with the online check-in so I had to actually speak to a human for my tickets 😳. I know, I know, for some of you that wouldn't be an issue, or it could even be your pleasure, but I have some anxiety issues even on the smallest things...&lt;br&gt;
I asked the man in the check-in "do you need to see my vaccine ce ce cert certif certification?" I was rumbling so hard, I couldn't prefer the word certification in my own language (certification = πιστοποιητικό), the man laugh but he started to chat with me about other things and that actually made me feel better... Maybe we were chatting for about 7-10' until a huge waiting line had created... (oops, sorry travelers 😊). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SLMuZQoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631725655192/ajyC7YbMS.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SLMuZQoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631725655192/ajyC7YbMS.jpeg" alt="IMG_20210906_144042.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next stop was Munich (Germany 🇩🇪) and right after there Zadar (Croatia 🇭🇷). From Zadar, a taxi driver picked me up and drove me to the hotel. The taxi driver didn't know English so we couldn't communicate... As you can probably understand that was not an issue for me😏. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sx83tLuM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631725642342/SJzTAf_zK.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sx83tLuM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631725642342/SJzTAf_zK.jpeg" alt="IMG_20210907_091713.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The hotel was located in an area outside of Zadar and it was one of the best luxurious hotels I have ever been to (more about that later). It was about 7 pm when I took a shower and went alone for a dinner at the hotel's restaurant. As I started to eat a young smiley man approached me, "hi, are you also a speaker? are you this girl?" (pointing at my photo on the conference's website) as I knot my head positively the young man showed his photo on the website too, introduced himself and asked me if he could join me. My heart started to beat faster, not because I didn't like the man, but because, you know, I had to speak with another human😳. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ih8tCGe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631725711690/eeDLMfiN9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ih8tCGe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631725711690/eeDLMfiN9.jpeg" alt="IMG_20210906_205510.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I actually spent the next few hours with this person. He was just one year older than me, a CEO of a company, and a creator of a js framework (let's keep some anonymity, and not get into more details, at least for now). 😁&lt;/p&gt;

&lt;p&gt;After dinner, I went to my room, worked for a few more hours, and went for sleeping. 😴 &lt;/p&gt;

&lt;p&gt;&lt;em&gt;1st day's thoughts💭 : Could humans be actually pleasant?! The guy from the airport check-in made me feel comfortable and the guy from the dinner kept me company and actually became my companion for the next days!!&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#day-2-tuesday"&gt;
  &lt;/a&gt;
  Day 2: Tuesday
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#conference-infobip-shift-day-1-of-2-the-day-of-my-talk"&gt;
  &lt;/a&gt;
  Conference: &lt;a href="https://shift.infobip.com/"&gt;Infobip Shift&lt;/a&gt; - Day 1 of 2 - The day of my talk
&lt;/h2&gt;

&lt;p&gt;The next day started with a nice breakfast near the hotel's pool 🏊 🥐 (I'm telling you dear readers, the hotel was amazing!). &lt;br&gt;
I stayed in my room working until midday when it was time to call an uber and reach the conference's location. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HTtO6oIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631725813953/vkqv8CHsX.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HTtO6oIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631725813953/vkqv8CHsX.jpeg" alt="IMG_20210907_085012.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I attended several people's talks and gained some valuable knowledge of tech and coding.&lt;br&gt;
I also gave my talk which was about UX and UI. Everything went great and according to the plan. Weirdly enough when I'm presenting I'm not nervous (I have a trick for that, maybe I could share it on another article... 😊, let me know if you are interested in how to speak to an audience/giving a presentation and not getting a panic attack!! 😁 ) &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i_7TZ0f1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631725824879/dS6CdjFF5.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i_7TZ0f1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631725824879/dS6CdjFF5.jpeg" alt="IMG_20210907_150525.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the venue, I met the dinner-guy who introduced me to his friends/speakers and we became a nice "little" nerd 🤓 and IT gang!! How cool, right?! &lt;/p&gt;

&lt;p&gt;At this point, I had checked the conference's website and I knew who were the people that I definitely wanted to meet. These were people like Gift, Ekene, Sébastien, Eduardo, Kent, Nikolas, and more. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--977xUuAK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727137745/t5wqO0BV6.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--977xUuAK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727137745/t5wqO0BV6.jpeg" alt="IMG_20210907_143303.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some of those people I was following on social media or I was familiar with their work. Other people seemed very interesting, I loved their talk so I definitely wanted to meet them. As I was surrounded with my cool IT gang it was easier to meet people, they could introduce me to others and if they also didn't know the "others", they were not as anxious as I was (hello extrovert people), so they would just go and speak and I would follow (that's a pretty good approach for meeting new people!) &lt;/p&gt;

&lt;p&gt;&lt;em&gt;2nd day's thoughts💭: Humans have started to seem less terrifying... They like to talk, they like to make jokes and they even want to help you!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HTYi6OCk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727207609/CJ44LH1Bn.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HTYi6OCk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727207609/CJ44LH1Bn.jpeg" alt="IMG_20210907_200707.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the conference, I went back to the hotel, worked for a few hours and at night I went for dinner 🍲 in a nice location with my nerd IT gang and we even went for an after-party (come on dear introvert friends, you have to applause me here 👏 👏, I went for both dinner + after party 🎉). &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#day-3-wednesday"&gt;
  &lt;/a&gt;
  Day 3: Wednesday
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#conference-infobip-shift-day-2-of-2-networking-and-meetings"&gt;
  &lt;/a&gt;
  Conference: &lt;a href="https://shift.infobip.com/"&gt;Infobip Shift&lt;/a&gt; - Day 2 of 2 - Networking and meetings
&lt;/h2&gt;

&lt;p&gt;The day started with a nice chilled breakfast ☕ near the pool and continued with work. I only went to the conference venue in the afternoon when I was done with work. &lt;/p&gt;

&lt;p&gt;It was time for meetings and networking once again😔. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1the-porche-experience"&gt;
  &lt;/a&gt;
  1.The Porche experience 🚙
&lt;/h3&gt;

&lt;p&gt;Let's start with something cool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--18SdHm-W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727257959/aGAdk_3_O.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--18SdHm-W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727257959/aGAdk_3_O.jpeg" alt="IMG_20210908_173702.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Porche&lt;/strong&gt; was one of the sponsors and they wanted a woman in tech to represent them. They liked my talk and my presence and they asked me for some possible collaborations. They took some professional photos with the cars and me (I am waiting for the official photos too... As soon as I get them I’ll share them on Instagram 📸), and they had a professional driver who took me on a fast ride (I can't even describe how insanely beautiful the car and the ride were). For those of you thinking "but where can you drive/run a fast car like Porche safely?", I have an answer: the event was held in Zadar's biggest sports arena. The arena had also a huge parking which was allocated by Porche. Each time only a handful of people could visit at the same time the parking due to safety reasons!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-being-approached-by-attendees"&gt;
  &lt;/a&gt;
  2. Being approached by attendees
&lt;/h3&gt;

&lt;p&gt;A few people approached me as they had some questions and queries around my UX and UI talk or they would be interested in potential collaborations. That went well... I only messed up in the end with some emails and phone numbers🤣. See, I m not good with names...  And that resulted in sending some messages to the wrong people on WhatsApp!! But I guess these things happen, right?! Or is it only me? (Please say it is not only me, it will make me feel terrible, no kidding😕.)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-the-interview"&gt;
  &lt;/a&gt;
  3. The interview
&lt;/h3&gt;

&lt;p&gt;It's not uncommon in a conference to be asked by the organizers to take part in a video that will be used mainly for promoting purposes in their current or upcoming events. Usually, there is someone who will make a few simple questions (hence I call this part "the interview") around the conference and will record the speaker's answers. On the 1st day of the conference the organizer asked me to take part in the video, I said "yes" but then..."hello darkness my old friend" I could not do it... My shyness had returned... So I said "no". &lt;br&gt;
But...the 2nd day, as I was sitting with the cool nerd IT gang and I could watch them doing the interview I decided to give it a chance (that was a nice win 🏆 for my little introvert self), everything went fine!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-the-potential-collaboration"&gt;
  &lt;/a&gt;
  4. The potential collaboration
&lt;/h3&gt;

&lt;p&gt;Since this is work-related I won't get into details. The main point is that I had an online meeting with an "x company" and as we were discussing we realized that on of their developers and I would be at the same conference so now it would be a nice opportunity to meet in real life and discuss some business! That's how I met a fellow developer 😊&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-the-other-speaker-for-the-other-conference"&gt;
  &lt;/a&gt;
  5. The other speaker, for the other conference
&lt;/h3&gt;

&lt;p&gt;As I mentioned, in the upcoming days I was about to hit another conference in another country. The organizer from the other conference told me about this guy who would be in Croatia and then in Ukraine too (we would be in the same conferences), so I had to meet him! But you know, I'm introvert and shy... How would I do that... At first, I didn't even know who he was... &lt;br&gt;
At the second day of dinner, I asked my cool yet nerdy IT gang if they knew him. Long story short, they found him for me and even the dinner-guy made the introduction as I was too scared for that...&lt;br&gt;
But guess what, it went well! The other-conference-guy was super nice and friendly! And &lt;strong&gt;he's also a writer here at Hashnode&lt;/strong&gt;! 😁 &lt;/p&gt;

&lt;p&gt;Moving on, I had a lovely night with good company 🍻 ! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#day-4-thursday"&gt;
  &lt;/a&gt;
  Day 4:  Thursday
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#croatia-to-austria"&gt;
  &lt;/a&gt;
  Croatia to Austria 🇦🇹
&lt;/h2&gt;

&lt;p&gt;My day started in the same way. Breakfast 🥐 and work. Later that day I would catch my flight to Vienna, Austria. I reached Vienna and stayed one day there as there was no direct flight to Odesa, Ukraine which was the 2nd conference. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SLSyCgHz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727407999/OgasdTtnM.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SLSyCgHz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727407999/OgasdTtnM.jpeg" alt="IMG_20210909_171719.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No networking stories this time. I quickly arrived at the hotel. There, I only talked with the hotel receptionist and the host of the hotel's restaurant. &lt;br&gt;
My evening ended with working out and work. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#day-5-friday"&gt;
  &lt;/a&gt;
  Day 5: Friday
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#austria-to-ukraine"&gt;
  &lt;/a&gt;
  Austria to Ukraine 🇺🇦
&lt;/h2&gt;

&lt;p&gt;Another day, another flight 🛬 ! &lt;/p&gt;

&lt;p&gt;Breakfast in the hotel, a few hours of work, and catching up on a flight!! &lt;br&gt;
This time I landed in Odesa-Ukraine for the conference of &lt;strong&gt;&lt;a href="https://pyconodessa.com/en/"&gt;PyCon&lt;/a&gt; Odesa&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fBKhl51a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727601014/djJ6d8liM.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fBKhl51a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727601014/djJ6d8liM.jpeg" alt="IMG_20210910_180000.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-german-organizer"&gt;
  &lt;/a&gt;
  The "German" organizer
&lt;/h3&gt;

&lt;p&gt;Shall we move on with another &lt;strong&gt;networking story&lt;/strong&gt;?! &lt;/p&gt;

&lt;p&gt;Did you wonder how a girl from Greece, working occasionally with Javascript and Design, working full time as a community manager at Hashnode, would end up in a Python conference in a little city in Ukraine? &lt;/p&gt;

&lt;p&gt;Well, there are 2 points connected to each other. The 1st one is that I simply applied to speak to the conference as I believe my talk is equally important for all kinds of developers... (and that's usually what all speakers do, they apply to conferences...). The 2nd one (and usually the hardest one) is to get an invitation... But... A beautiful sunny morning I received a Twitter DM from an organizer I met a few years ago in Munich, Germany telling me that he is a co-organizer for this conference too and he'd love to have me as a speaker. I specified to him once again that my talk is not related to Python but it would be my pleasure. And just like that, I was in!&lt;/p&gt;

&lt;p&gt;Will I have an invitation from the organizer if he didn't know me? I honestly don't know... But I have a suspicion that our old meeting helped. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-go-to-the-accommodation-and-the-venue"&gt;
  &lt;/a&gt;
  Let's go to the accommodation and the venue
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S5PcCBqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727877438/wk60yWu7b.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S5PcCBqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727877438/wk60yWu7b.jpeg" alt="IMG_20210912_165928.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The conference venue and the accommodation were in the same location. This is very convenient for the speakers... The only issue was that the location was a bit outside of Odesa and not many taxis were willing to drive you... Thankfully another organizer came and picked me up 😊, he drove me to the venue where I met once again the "German organizer". He introduced me to some lovely girls and fellow speakers (who later became my friends). &lt;/p&gt;

&lt;p&gt;I took a few hours to relax and then it was time for dinner and drinks in the city center! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YRgAYmpm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727818717/YJinTddya.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YRgAYmpm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727818717/YJinTddya.jpeg" alt="IMG_20210910_193448.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#day-6-saturday"&gt;
  &lt;/a&gt;
  Day 6: Saturday
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#conference-pycon-odessa-day-1-of-2"&gt;
  &lt;/a&gt;
  Conference: PyCon Odessa - Day 1 of 2
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--90Pt7G4Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727921506/3y4UU7GR1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--90Pt7G4Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727921506/3y4UU7GR1.jpeg" alt="IMG_20210911_103533.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By now, I m sure you know the drill. Breakfast 🥐 and work! You may be thinking "But Elef, it was Saturday did you have to work?!" and the answer is no... But the thing is I hadn't finished Friday's work and I also wanted to prepare some stuff for Monday that I knew I would be traveling and I wouldn't be able to do.&lt;br&gt;
This time my breakfast wasn't near a pool or at a fancy hotel restaurant but at a terrace with a view of the ocean and the city!&lt;br&gt;
After work, I met my cool gang, a few new speakers and started to attending talks. In the evening, we had a lovely dinner with the crew and the attendees in an open space and we talked about tech and life.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#day-7-sunday"&gt;
  &lt;/a&gt;
  Day 7: Sunday
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#conference-pycon-odessa-day-2-of-2-the-day-of-my-talk"&gt;
  &lt;/a&gt;
  Conference: PyCon Odessa - Day 2 of 2 - The day of my talk
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CRvtgCtH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727993460/1l1-ldOy7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CRvtgCtH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631727993460/1l1-ldOy7.jpeg" alt="IMG-20210913-WA0024.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This day started differently... It started with yoga! The speakers and the attendees got together on the building's terrace where we met the yoga instructor and had a lovely short session with her!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WwsXnS4I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631728018621/IZglUe7ol.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwsXnS4I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631728018621/IZglUe7ol.jpeg" alt="IMG-20210913-WA0022.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We continued with talks, and after lunchtime, it was my turn! I gave once again a talk about UX and UI. I was pleased with it as many people approached me asking for advice.&lt;/p&gt;

&lt;p&gt;Since this was the second and last day people were more relaxed and the conference ended up earlier than the previous day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pPbL2-J_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631728040547/wkF4JcdWx.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pPbL2-J_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631728040547/wkF4JcdWx.jpeg" alt="IMG-20210913-WA0023.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a closing party for the organizers and the speakers, we booked ourselves a yacht ⛵ for the afternoon/evening. It was my first time sailing and having so much fun with people that I literally met a couple of days before. Everyone was welcoming and chilled!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Last day's thoughts💭: Actually those humans who called them shelves developers and advocates are... quite fantastic!&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#day-8-monday-back-home"&gt;
  &lt;/a&gt;
  Day 8: Monday - Back home 🏠
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#ukraine-to-germany-to-greece"&gt;
  &lt;/a&gt;
  Ukraine to Germany to Greece 🇬🇷
&lt;/h2&gt;

&lt;p&gt;As soon as I woke up ☀ , I found the organizers who helped me to find a taxi and get to the airport. At the airport's cafeteria, I did my daily stand-up meeting with the Hashnode team, worked for a few hours, and took my first flight to Berlin. That flight was 2h 30min so I started writing this article! &lt;/p&gt;

&lt;p&gt;In Berlin, I had a long layover AND a delay on my flight which actually gave me the time to finish all my work, prepare for the next day, and of course attend Hashnode's Bootcamp! &lt;/p&gt;

&lt;p&gt;On the last flight from Berlin to Greece I kept writing this article and  I even managed to finish it. &lt;/p&gt;

&lt;p&gt;(After writing an article I need some time to review and edit it... Plus in this case, add some photos and edit a video. So although the article was finished on Monday it was published on Thursday.)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#general-thoughts"&gt;
  &lt;/a&gt;
  General thoughts 💭
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#could-i-have-created-more-connectionsopportunities"&gt;
  &lt;/a&gt;
  Could I have created more connections/opportunities?
&lt;/h2&gt;

&lt;p&gt;Of course! You can find opportunities everywhere you just have to know where to look for and be willing to take your risks. &lt;/p&gt;

&lt;p&gt;Could I have met more people? Yes. &lt;/p&gt;

&lt;p&gt;But on the other hand, I'm glad that I managed to pull this trip of... As a shy, introvert person I'm glad with my progress! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--01abjwsV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631728170898/ydw0XSicB.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--01abjwsV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631728170898/ydw0XSicB.jpeg" alt="IMG_20210912_190033.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank you... 🙏
&lt;/h2&gt;

&lt;p&gt;At this point I'd like to thank:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hashnode for giving me the opportunity to work in a flexible schedule. &lt;/li&gt;
&lt;li&gt;The InfoBip organizers for creating an amazing event. &lt;/li&gt;
&lt;li&gt;The PyCon organizers for creating a truly unique and memorable event. &lt;/li&gt;
&lt;li&gt;All the speakers and the fantastic people who shared freely their knowledge with me (and kept me company). &lt;/li&gt;
&lt;li&gt;And you dear reader. Thank you. I wouldn't be here without your support either on &lt;a href="https://instagram.com/elef_in_tech"&gt;social&lt;/a&gt; &lt;a href="https://twitter.com/BatsouElef"&gt;media&lt;/a&gt;, &lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;YouTube&lt;/a&gt;, or here at Hashnode! Let me know in the comments if I can do anything to help you too 😊.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Did you actually read the article? If not that's ok, watch the video &lt;a href="https://youtu.be/VBlnjW2Lvgs"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=VBlnjW2Lvgs"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H7RoO12D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/VBlnjW2Lvgs/0.jpg" alt="IMAGE ALT TEXT HERE"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;👋Hello, I'm Eleftheria, Community Manager at Hashnode, developer, public speaker, and chocolate lover.&lt;/p&gt;

&lt;p&gt;🥰If you liked this post please share.&lt;/p&gt;

&lt;p&gt;🍩Would you care about buying me a coffee? You can do it &lt;a href="https://www.paypal.com/paypalme/eleftheriabatsou"&gt;here&lt;/a&gt; but If you can't that's ok too!&lt;/p&gt;




&lt;p&gt;🙏It would be nice to subscribe to my &lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; channel. It’s free and it helps to create more content.&lt;/p&gt;

&lt;p&gt;🌈&lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; | &lt;a href="https://codepen.io/EleftheriaBatsou"&gt;Codepen&lt;/a&gt; | &lt;a href="https://github.com/EleftheriaBatsou"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/BatsouElef"&gt;Twitter&lt;/a&gt; | &lt;a href="http://eleftheriabatsou.com/"&gt;Site&lt;/a&gt; | &lt;a href="https://www.instagram.com/elef_in_tech"&gt;Instagram&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/eleftheriabatsou/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>conference</category>
      <category>publicspeaking</category>
      <category>introvert</category>
      <category>developer</category>
    </item>
    <item>
      <title>Working In Open Source</title>
      <author>DerekJxy</author>
      <pubDate>Fri, 17 Sep 2021 16:15:11 +0000</pubDate>
      <link>https://dev.to/derekjxy/working-in-open-source-554l</link>
      <guid>https://dev.to/derekjxy/working-in-open-source-554l</guid>
      <description>&lt;p&gt;&lt;strong&gt;In order to&lt;/strong&gt; make our code of &lt;strong&gt;Static Site Generator better&lt;/strong&gt;, we are required to share our code to a &lt;strong&gt;partner&lt;/strong&gt; and try to find out some &lt;em&gt;issues&lt;/em&gt; that can make their original code &lt;strong&gt;better&lt;/strong&gt;. And this is the &lt;strong&gt;main point&lt;/strong&gt; that we have &lt;strong&gt;Lab 1&lt;/strong&gt; in &lt;strong&gt;OSD600&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The partner I found was &lt;strong&gt;Kunwarvir Dhillon&lt;/strong&gt;. I had never met my partner Kunwarvir Dhillon before. And we just team up &lt;strong&gt;randomly&lt;/strong&gt;. However, although we haven't met each other before, &lt;strong&gt;we&lt;/strong&gt; both treat this sharing code behavior &lt;strong&gt;seriously&lt;/strong&gt;.&lt;br&gt;
After communicated with &lt;em&gt;Kunwarvir Dhillon&lt;/em&gt;, we both started to check our each other's code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interesting-stuff"&gt;
  &lt;/a&gt;
  Interesting Stuff
&lt;/h2&gt;

&lt;p&gt;This is the &lt;strong&gt;first time&lt;/strong&gt; that I tried to improve other's code by &lt;em&gt;my own knowledge&lt;/em&gt;. I've never thought that I can help people improve their code &lt;em&gt;because&lt;/em&gt; I always think that what I known are &lt;strong&gt;limited and basic&lt;/strong&gt;. However, through this &lt;strong&gt;Lab 1&lt;/strong&gt;, sharing code with my partner, &lt;em&gt;I learned something&lt;/em&gt;. I learned that there are &lt;strong&gt;no perfect code ever&lt;/strong&gt;, even some beginners can help those experienced programers improve their code. &lt;strong&gt;I can help people improve their code as well!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Honestly&lt;/strong&gt;, the first time I got my partner Kunwarvir Dhillon's code, I was &lt;em&gt;soooo confused&lt;/em&gt;. I felt like there is &lt;strong&gt;no way&lt;/strong&gt; I can help them to &lt;strong&gt;improve their code&lt;/strong&gt; base on my knowledge even &lt;strong&gt;though&lt;/strong&gt; we built the code in the &lt;strong&gt;same&lt;/strong&gt; language -- &lt;strong&gt;JavaScript&lt;/strong&gt;. And then I just told myself, &lt;em&gt;just break it down step by step&lt;/em&gt;, &lt;em&gt;make it slow....&lt;/em&gt; And then I just followed the &lt;strong&gt;instruction&lt;/strong&gt; that our professor provided, and check the code &lt;em&gt;step by step&lt;/em&gt;. And &lt;strong&gt;finally&lt;/strong&gt;, I &lt;strong&gt;found&lt;/strong&gt; a few issues that can help my partner &lt;strong&gt;improve&lt;/strong&gt; their code! That was &lt;strong&gt;amazing&lt;/strong&gt; to me! And when it comes &lt;strong&gt;to the end&lt;/strong&gt; of the checking, I &lt;strong&gt;realized&lt;/strong&gt; that there are a lot of &lt;strong&gt;similar&lt;/strong&gt; code in our code! And I &lt;strong&gt;shouldn't&lt;/strong&gt; felt &lt;strong&gt;panic&lt;/strong&gt; at the beginning!&lt;/p&gt;

&lt;p&gt;There is one thing &lt;strong&gt;surprised&lt;/strong&gt; me in my partner's code. And that is they have a &lt;strong&gt;personal logo&lt;/strong&gt; when the user access their code. So whenever I run their code, it will have a &lt;em&gt;logo&lt;/em&gt; comes up like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o2bn4WEQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ogwzan4cqxl29774w60.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o2bn4WEQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ogwzan4cqxl29774w60.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#issues"&gt;
  &lt;/a&gt;
  Issues
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-issues-i-found-in-my-partners-code"&gt;
  &lt;/a&gt;
  Here are some issues I found in my partner's code:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/dhillonks/cli-ssg/issues/1"&gt;Issue #1&lt;/a&gt; There are &lt;strong&gt;some defined variables that never used&lt;/strong&gt; in the code.
&lt;code&gt;const yargs = require("yargs");&lt;/code&gt;
&lt;code&gt;const path = require("path");&lt;/code&gt;
These two variables are never used in the code, so I suggested my partner to remove them.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dhillonks/cli-ssg/issues/2"&gt;Issue #2&lt;/a&gt; There is a &lt;strong&gt;deletable statement&lt;/strong&gt; in the code. This statement can be deleted since the output path is set by default.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dhillonks/cli-ssg/issues/3"&gt;Issue #3&lt;/a&gt; I found that the code my partner shared to me would generate a weird html file. What I mean &lt;strong&gt;"weird"&lt;/strong&gt; is they are trying to divide the article &lt;strong&gt;sentences by sentences&lt;/strong&gt;, but not &lt;strong&gt;paragraphs by paragraphs&lt;/strong&gt;. And then I suggested they write the code with my new code&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dhillonks/cli-ssg/issues/4"&gt;Issue #4&lt;/a&gt; Since I changed one line of code in my partner's code, they need to &lt;strong&gt;update another line of code as well&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#here-are-some-issues-my-partner-found-in-my-code"&gt;
  &lt;/a&gt;
  Here are some issues my partner found in my code:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/DerekJxy/My-First-SSG/issues/1"&gt;Issue #1&lt;/a&gt; My Index Html is &lt;strong&gt;failed at (X)HTML5 validation&lt;/strong&gt;. There a space in the name of the HTML files that my code generated. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/DerekJxy/My-First-SSG/issues/2"&gt;Issue #2&lt;/a&gt; My code would &lt;strong&gt;convert any type of files that the user input into a html file&lt;/strong&gt;, which is kind of a stupid feature of my code. We're only supposed to convert .txt file into a html file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/DerekJxy/My-First-SSG/issues/3"&gt;Issue #3&lt;/a&gt; My code would &lt;strong&gt;convert any type of files inside the folder that the user input into a html file&lt;/strong&gt;. This is a nonsense feature at all. My code should only supposed to work when it comes to .txt file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/DerekJxy/My-First-SSG/issues/4"&gt;Issue #4&lt;/a&gt; My code set that &lt;strong&gt;all the html files generated&lt;/strong&gt; will &lt;em&gt;place into&lt;/em&gt; &lt;strong&gt;./dist&lt;/strong&gt; folder &lt;strong&gt;by default&lt;/strong&gt;. And it doesn't allow any other save path.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/DerekJxy/My-First-SSG/issues/5"&gt;Issue #5&lt;/a&gt; I didn't have a &lt;strong&gt;clear declaration&lt;/strong&gt; in my &lt;strong&gt;README file&lt;/strong&gt;. And that made a &lt;strong&gt;misunderstanding&lt;/strong&gt; for my partner to access my code. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#update"&gt;
  &lt;/a&gt;
  Update
&lt;/h2&gt;

&lt;p&gt;After &lt;strong&gt;reviewing the issues&lt;/strong&gt; that my partner &lt;strong&gt;found&lt;/strong&gt; in my code. I realized that those are &lt;em&gt;simple and stupid mistakes!&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For the &lt;a href="https://github.com/DerekJxy/My-First-SSG/issues/1"&gt;Issue #1&lt;/a&gt;, the main reason that my &lt;strong&gt;Index Html is failed at (X)HTML5 validation&lt;/strong&gt; is my code generated some html files that with &lt;strong&gt;blank space&lt;/strong&gt; &lt;em&gt;in their name&lt;/em&gt;. Therefore I update my code to generate html files that &lt;em&gt;without spaces&lt;/em&gt; by using the code &lt;code&gt;let validFname = fname.split(' ').join('');&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;For the &lt;a href="https://github.com/DerekJxy/My-First-SSG/issues/2"&gt;Issue #2&lt;/a&gt;, I update my code to &lt;strong&gt;check the file type&lt;/strong&gt; &lt;code&gt;fileType = argv.input.split('.').pop();&lt;/code&gt; &lt;code&gt;if(fileType == 'txt'){...}&lt;/code&gt; &lt;strong&gt;before doing anything.&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;Same for the &lt;a href="https://github.com/DerekJxy/My-First-SSG/issues/3"&gt;Issue #3&lt;/a&gt;  I update my code to &lt;strong&gt;check the file type&lt;/strong&gt; inside the folder &lt;code&gt;fileType = file.split('.').pop();&lt;/code&gt; &lt;code&gt;if(fileType == 'txt'){...}&lt;/code&gt; then &lt;em&gt;convert the files to html files.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;For &lt;a href="https://github.com/DerekJxy/My-First-SSG/issues/4"&gt;Issue #4&lt;/a&gt;, &lt;em&gt;I'm not going to fix it&lt;/em&gt; &lt;strong&gt;right now&lt;/strong&gt; since it's an &lt;strong&gt;optional feature&lt;/strong&gt;. And there is &lt;em&gt;no harm&lt;/em&gt; to force the user save the output html files into a &lt;strong&gt;specific folder&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;And finally about&lt;/strong&gt; &lt;a href="https://github.com/DerekJxy/My-First-SSG/Issues/5"&gt;issue #5&lt;/a&gt;, I updated my &lt;strong&gt;README file&lt;/strong&gt; so that any new users could &lt;strong&gt;run&lt;/strong&gt; my code &lt;strong&gt;easily and correctly&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;I know there are more issues in my code that need improvement. And I will try my best to make it better!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;Link to my repo: [&lt;a href="https://github.com/DerekJxy/My-First-SSG"&gt;https://github.com/DerekJxy/My-First-SSG&lt;/a&gt;]&lt;br&gt;
Link to Kunwarvir Dhillon repo: [&lt;a href="https://github.com/dhillonks/cli-ssg"&gt;https://github.com/dhillonks/cli-ssg&lt;/a&gt;]&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>javascript</category>
      <category>github</category>
      <category>html</category>
    </item>
  </channel>
</rss>
