<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>No YAML Needed! Create GitHub Actions Workflows from VS and CLI</title>
      <author>Davide 'CoderDave' Benvegn√π</author>
      <pubDate>Fri, 01 Oct 2021 00:14:28 +0000</pubDate>
      <link>https://dev.to/n3wt0n/no-yaml-needed-create-github-actions-workflows-from-vs-and-cli-50kp</link>
      <guid>https://dev.to/n3wt0n/no-yaml-needed-create-github-actions-workflows-from-vs-and-cli-50kp</guid>
      <description>&lt;p&gt;Today I'm going to show you two very easy ways to create your GitHub &lt;strong&gt;Actions CI&lt;/strong&gt; Workflow for .NET Applications, &lt;strong&gt;without writing a single line of YAML&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;p&gt;Getting started with GitHub Actions may not be always easy. Especially when the alternatives for deployment are so easy (like the right-click publish in Visual Studio, for example). What if we could create our CI workflows with Actions in the same way?&lt;/p&gt;

&lt;p&gt;Btw, I'd be curious to know how you create your GitHub Actions workflow. Let me know in the comment section below if you do it directly in the GitHub UI, or in VSCode perhaps with some extension, or however else you do it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;As usual, if you are a &lt;strong&gt;visual learner&lt;/strong&gt;, or simply prefer to watch and listen instead of reading, here you have &lt;strong&gt;the video with the whole explanation and demo&lt;/strong&gt;, which to be fair is much &lt;strong&gt;&lt;em&gt;more complete&lt;/em&gt;&lt;/strong&gt; than this post.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/N2ELIqLWz0k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/N2ELIqLWz0k"&gt;Link to the video: https://youtu.be/N2ELIqLWz0k&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you rather prefer reading, well... let's just continue :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-tools"&gt;
  &lt;/a&gt;
  The Tools
&lt;/h3&gt;

&lt;p&gt;The first tool we are going to take a look at is &lt;strong&gt;integrated in Visual Studio&lt;/strong&gt;, so it works on Windows, while the second one requires the &lt;strong&gt;use of the CLI&lt;/strong&gt; and therefore can be used in MacOS and Linux as well.&lt;/p&gt;

&lt;p&gt;Let's jump into VS.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#from-visual-studio"&gt;
  &lt;/a&gt;
  From Visual Studio
&lt;/h4&gt;

&lt;p&gt;Doing it from Visual Studio is pretty straight forward.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HY_FxW0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9zzkq0tc5qqzdg00zwa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HY_FxW0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9zzkq0tc5qqzdg00zwa.png" alt="Deployment Type"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just right-click on the &lt;strong&gt;Project Name&lt;/strong&gt;, select &lt;em&gt;__Publish&lt;/em&gt;&lt;em&gt;, choose your deployment target, and then you have the new _&lt;/em&gt;&lt;em&gt;Deployment Type&lt;/em&gt;_ selection.&lt;/p&gt;

&lt;p&gt;You can either deploy directly, as usual, or create a YAML file for the GitHub Actions CI/CD.&lt;/p&gt;

&lt;p&gt;After confirmation, Visual Studio will take care of the rest and create the YAML file for you in the &lt;code&gt;.github/workflows&lt;/code&gt; folder, named as your deployment target.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FPzbJANW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oefpiafjskopdjgtccqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FPzbJANW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oefpiafjskopdjgtccqm.png" alt="YAML Generated"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see in the image, the workflow takes care of both CI and CD for your application&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are on Visual Studio 2019 and you don't see the deployment type selection, make sure the feature is enabled. Go to &lt;em&gt;Tools &amp;gt; Options &amp;gt; Environment &amp;gt; Preview Features&lt;/em&gt; and make sure the &lt;strong&gt;&lt;em&gt;GitHub Actions support in Publish&lt;/em&gt;&lt;/strong&gt; is checked.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#from-the-cli"&gt;
  &lt;/a&gt;
  From The CLI
&lt;/h4&gt;

&lt;p&gt;As I've said, the second way I have for you to generate a GitHub Actions Workflow without writing the YAML is using the &lt;strong&gt;dotnet CLI&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://timheuer.com"&gt;Tim Heuer&lt;/a&gt; has in fact created an &lt;strong&gt;awesome template&lt;/strong&gt; that generates the workflow files for GitHub Actions from the CLI.&lt;/p&gt;

&lt;p&gt;First thing, we need to &lt;strong&gt;install the template&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet new &lt;span class="nt"&gt;-i&lt;/span&gt; TimHeuer.GitHubActions.Templates
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will add the feature we want to use. Then just execute&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet new workflow
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the root folder of your project and you are done.&lt;/p&gt;

&lt;p&gt;What you‚Äôll get is a straightforward GitHub Actions workflow to &lt;strong&gt;build and test&lt;/strong&gt; your .NET application. Keep in mind this is a starting point. It‚Äôs not going to do everything you might want, but it‚Äôs a solid base to build from.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;Cool right? Let me know down below what you think about this, and as I've said before also how you usually create your Actions workflows.&lt;/p&gt;

&lt;p&gt;Also, speaking of GitHub Actions, checkout &lt;a href="https://youtu.be/4lH_7b5lmjo"&gt;this video&lt;/a&gt;, where I talk about creating and using templates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; üöÄ for more content:&lt;/p&gt;

&lt;p&gt;üìΩ &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
‚òï &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
üíñ &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
üìß &lt;a href="https://coderdave.io/newsletter"&gt;Newsletter&lt;/a&gt;&lt;br&gt;
üåê &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
üëï &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
üë¶üèª &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
üê±‚Äçüíª &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
üë≤üèª &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
üë¥üèª &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
üîâ &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/N2ELIqLWz0k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>github</category>
      <category>yaml</category>
      <category>cicd</category>
      <category>dotnet</category>
    </item>
    <item>
      <title>Have Fear and Contribute Anyway</title>
      <author>Christina Gorton</author>
      <pubDate>Thu, 30 Sep 2021 22:04:18 +0000</pubDate>
      <link>https://dev.to/coffeecraftcode/have-fear-and-contribute-anyway-4843</link>
      <guid>https://dev.to/coffeecraftcode/have-fear-and-contribute-anyway-4843</guid>
      <description>&lt;p&gt;&lt;small&gt;Cover Photo by &lt;a href="https://unsplash.com/@thetonik_co?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Tonik&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;I am a mom of 4. When I was pregnant with my second child I had a lot of fears about labor. I had these fears despite already having labored once with my first child. These fears consumed me until I read an article titled &lt;a href="https://midwifethinking.com/2013/03/27/feel-the-fear-and-birth-anyway"&gt;"Feel the Fear and Birth Anyway"&lt;/a&gt; by Dr Rachel Reed.&lt;/p&gt;

&lt;p&gt;I know, I know. You are probably thinking, "Whoa this is a developer blog platform, why are you talking about birth!?" &lt;/p&gt;

&lt;p&gt;I am talking about this because we all experience fear. I bring up the article "Feel the Fear and Birth Anyway" because it didn't just help me with my fear of giving birth ‚Äì it helped me understand that fear is not only ok it‚Äôs something we all must feel at some point. The article also made me understand that I didn't have to talk myself &lt;em&gt;out&lt;/em&gt; of fear to  accomplish something. &lt;/p&gt;

&lt;p&gt;When I later started learning to code, I went into the field with the same mindset. I was starting something completely new, so it was natural for me to be afraid! I could be afraid and still be a software developer. &lt;/p&gt;

&lt;p&gt;Contributing to open source is something a lot of developers fear. They fear it because they don't understand how to do it, they are worried about someone critiquing their code, or for many other reasons. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I am writing &lt;em&gt;this&lt;/em&gt; article to tell you it is ok to have these fears but you can still contribute anyway.&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-started"&gt;
  &lt;/a&gt;
  How to get started?
&lt;/h2&gt;

&lt;p&gt;One reason software developers  fear open source is because of the unknown. If we don't know how to do something, we are much less likely to try it. In my opinion, the remedy for this is external support and guidance, so I‚Äôm going to give you some tips here on how you can get started contributing to open source.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contributing-guides"&gt;
  &lt;/a&gt;
  Contributing Guides
&lt;/h3&gt;

&lt;p&gt;My first tip is to find a project that has a good contributing guide. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w4OUkyEy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s62kjphvzadu2nw60mna.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w4OUkyEy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s62kjphvzadu2nw60mna.png" alt="Contributing guide on Forem repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This file will usually be labelled as &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; and can be found in most open source repositories that are looking for community help. Again, having this file is typically a good indication that a project will be helpful and encourage your contributions. &lt;/p&gt;

&lt;p&gt;Take the time to read through a projects contributing guide &lt;strong&gt;before&lt;/strong&gt; you try to contribute. This will save you and the maintainers of the project a lot of time. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#issues"&gt;
  &lt;/a&gt;
  Issues
&lt;/h3&gt;

&lt;p&gt;Tip number two is to get acquainted with a project's open issues. &lt;br&gt;
If a project is on GitHub you will see the open issues in the &lt;code&gt;Issues&lt;/code&gt; tab. You can also use filters to search for specific issues.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z6q0ybzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgj2gzhqs8x6g9fr9bd4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z6q0ybzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgj2gzhqs8x6g9fr9bd4.png" alt="filtering issues"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some of the questions you will want to consider include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Does this project &lt;a href="https://github.com/forem/forem/labels"&gt;label&lt;/a&gt; their open issues?&lt;/strong&gt; 
&lt;em&gt;Labels are useful to help contributors know if the issue is a bug, a good first issue, what tech might be needed, for the Core team only to work on, etc.&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Are there conversations happening on the open issues?&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How many open issues does the project have and how responsive are the maintainers to contributors' questions?&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;These last two points are important to check so you know if you can ask questions before creating a PR.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#communication"&gt;
  &lt;/a&gt;
  Communication
&lt;/h3&gt;

&lt;p&gt;This is probably one of the most important parts of contributing to an open source project. Good communication between a contributor and maintainers can make your experience so much better. &lt;/p&gt;

&lt;p&gt;Contributors should ask questions often before they start working on an issue and while working on their PR. &lt;/p&gt;

&lt;p&gt;To get help quicker from maintainers be sure to ask &lt;strong&gt;thoughtful questions&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Your questions should provide a lot of detail about where you are stuck or what you think you should do to fix an issue. &lt;/p&gt;

&lt;p&gt;Keep in mind that many maintainers volunteer on projects and also may be in vastly different time zones than you. Asking short, indirect questions, will lead to you getting a response much slower from a maintainer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-pr"&gt;
  &lt;/a&gt;
  Creating a PR
&lt;/h3&gt;

&lt;p&gt;Once you have discussed the open issue with the maintainers you can start working on a pull request (‚ÄúPR‚Äù).&lt;/p&gt;

&lt;p&gt;You will want to again see if the project has guidelines for how they would like you to create a PR.&lt;/p&gt;

&lt;p&gt;In general, most projects will have you &lt;a href="https://docs.github.com/en/github/collaborating-with-pull-requests/working-with-forks/about-forks"&gt;fork&lt;/a&gt; (make a copy of) the project to work from. &lt;/p&gt;

&lt;p&gt;Every project is a little different when it comes to their expectations for &lt;a href="https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-branches"&gt;branch&lt;/a&gt; usage, naming conventions, filling out PR templates, etc. If the project does not have guidelines on creating a PR, be sure to communicate with the maintainers beforehand. &lt;/p&gt;

&lt;p&gt;If you have never created a PR before I suggest you go through GitHub's Learning Lab called &lt;a href="https://lab.github.com/githubtraining/introduction-to-github"&gt;"Introduction to Github"&lt;/a&gt;. This lab will walk you through:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating a pull request&lt;/li&gt;
&lt;li&gt;Branches and commits&lt;/li&gt;
&lt;li&gt;Introducing changes with pull requests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;‚Ä¶ and more.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#draft-pr"&gt;
  &lt;/a&gt;
  Draft PR
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pMkfTOMD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bxmalz0gzo4r84exkye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pMkfTOMD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bxmalz0gzo4r84exkye.png" alt="Draft PR"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.blog/2019-02-14-introducing-draft-pull-requests/"&gt;Draft PRs&lt;/a&gt; can be used when:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You need more guidance &lt;/li&gt;
&lt;li&gt;You would like more discussion on your PR&lt;/li&gt;
&lt;li&gt;You don't want to have your PR reviewed right away&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On both draft PRs and regular PRs, you can discuss any potential changes with maintainers.&lt;/p&gt;

&lt;p&gt;However, draft PRs can't be merged and maintainers will not be automatically requested to review your PR. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#feedback"&gt;
  &lt;/a&gt;
  Feedback
&lt;/h4&gt;

&lt;p&gt;Once your PR is in and the maintainers start to review it, you will likely receive some feedback before your PR can be merged. &lt;/p&gt;

&lt;p&gt;You may see a "change request" or a "commit suggestion" added to your PR. Take the time to review the changes that were requested and ask any questions before making changes. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F0ZHbbLf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkxemtgp8cyr84zgr78a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F0ZHbbLf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkxemtgp8cyr84zgr78a.png" alt="Request for changes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once your PR is reviewed, it can be merged to the project's main branch. &lt;br&gt;
Every team is different and you may need to wait for a maintainer to merge your PR for you. If you are unsure &lt;strong&gt;ask thoughtful questions!&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#etiquette"&gt;
  &lt;/a&gt;
  Etiquette
&lt;/h3&gt;

&lt;p&gt;When you are contributing to a project remember there are real people maintaining it. &lt;br&gt;
Respect their time. Be patient if someone is not responding as quickly as you would like. &lt;/p&gt;

&lt;p&gt;It is ok to be frustrated or confused, but do take the time to gather your thoughts, keep your cool, and most important of all &lt;strong&gt;be kind&lt;/strong&gt; when communicating.&lt;/p&gt;

&lt;p&gt;You can read more about etiquette for contributors in the post &lt;a href="https://dev.to/devteam/hacktoberfest-etiquette-for-contributors-ec6"&gt;Hacktoberfest Etiquette for Contributors.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now go forth, embrace the fear, &lt;strong&gt;but contribute to open source anyway!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3ohs4oKP0TgsP9acF2/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3ohs4oKP0TgsP9acF2/giphy.gif" alt="Ready for the next step"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>hacktoberfest</category>
    </item>
    <item>
      <title>GraphQL is not meant to be exposed over the internet</title>
      <author>S ‚ô†Ô∏è</author>
      <pubDate>Thu, 30 Sep 2021 21:24:45 +0000</pubDate>
      <link>https://dev.to/growthatwundergraph/graphql-is-not-meant-to-be-exposed-over-the-internet-3kel</link>
      <guid>https://dev.to/growthatwundergraph/graphql-is-not-meant-to-be-exposed-over-the-internet-3kel</guid>
      <description>&lt;p&gt;Hello World! My name is S and I am the head of growth here at &lt;a href="//www.wundergraph.com"&gt;Wundergraph&lt;/a&gt;. The article was written by our CEO / CTO Jens Neuse. Enjoy!&lt;/p&gt;

&lt;p&gt;GraphQL is currently one of the most frequently mentioned technologies when it comes to innovation in the API economy. Adopters enjoy the ease of use and tooling like for example GraphiQL, the browser-based user interface to try out any GraphQL API. The whole experience of GraphQL is exactly what frontend-developers need to build amazing interactive web applications.&lt;/p&gt;

&lt;p&gt;However, with the rise of adoption, I‚Äôm starting to get more and more concerned about the way people understand GraphQL and use it. In this post, I‚Äôd like to share my unpopular opinion on what GraphQL really is meant to be and why you should be concerned if you‚Äôre using it the popular-but-risky way.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#api-styles"&gt;
  &lt;/a&gt;
  API styles
&lt;/h1&gt;

&lt;p&gt;Let‚Äôs take a step back and discuss APIs and API styles in general before answering the main question of why you‚Äôre probably using GraphQL the wrong way.&lt;/p&gt;

&lt;p&gt;APIs offer a way to hide the complexity of the implementation behind a user-friendly interface. For example, a shopping basket can have methods to add and delete items or to move forward to the checkout. As a user of this shopping cart API, you don‚Äôt have to think about how the data gets stored or what exactly happens when you add or remove an item.&lt;/p&gt;

&lt;p&gt;Over the last few decades various styles of APIs have emerged, all with different implementations, depending on the use cases. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#you-probably-dont-need-graphql"&gt;
  &lt;/a&gt;
  You probably don‚Äôt need GraphQL
&lt;/h1&gt;

&lt;p&gt;If you‚Äôd like to choose the right API style for a problem, you also have to consider how the API gets published and used. Do you know all your users and use cases? Are these users part of your own organization? Are they partners? The answers will most probably influence your choice of the API style and implementation, doesn‚Äôt it?&lt;/p&gt;

&lt;p&gt;The last sentence is where I think we get it wrong a lot of the time. I see people all over the place choose the API style and implementation long before the important questions were answered.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#do-you-have-facebook-scale-problems"&gt;
  &lt;/a&gt;
  Do you have Facebook scale Problems?
&lt;/h1&gt;

&lt;p&gt;The current most popular example of this behavior is GraphQL. Are you building a modern single page application with React? Awesome, use GraphQL! Facebook, Airbnb, Paypal, Netflix, they all do it so it must be a good fit.&lt;/p&gt;

&lt;p&gt;Why don‚Äôt we see more discussions around choosing the right technology for a given problem? I assume it‚Äôs a lack of education, but I‚Äôm not sure on this one. If you have any relevant degree, you might respond to this with your experience of education on APIs.&lt;/p&gt;

&lt;p&gt;Always keep in mind, if you use Facebook-scale tooling without having a Facebook-scale organization and Facebook-scale problems, you might realize painfully that you‚Äôre using a sledgehammer to crack a nut. It‚Äôs the same reason why chaos monkey makes sense for Netflix while it doesn‚Äôt for your two docker containers running on a 5$ machine on digital ocean.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-is-graphql-getting-so-popular"&gt;
  &lt;/a&gt;
  Why is GraphQL getting so popular?
&lt;/h1&gt;

&lt;p&gt;GraphQL simplifies the communication between API developer and API consumer. API consumers, often frontend developers, get lots of change requests from product owners which lead to changing requirements on the API. With GraphQL, you have a good chance of not being forced to talk to the developer of the API. You change the Query and can get back to CSS and Javascript.&lt;/p&gt;

&lt;p&gt;I assume this was one of the main drivers at GitHub to choose GraphQL as an implementation of the query-based API style for their new API. Their API is publicly available. They have big numbers of API consumers, all with different requirements. They can‚Äôt build resource-based APIs that satisfy all of their users. In this particular use-case, GraphQL might actually be a good choice. Instead of trying to solve each problem, they rather offer a generic GraphQL API.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#youre-probably-not-github-are-you"&gt;
  &lt;/a&gt;
  You‚Äôre probably not GitHub, are you?
&lt;/h1&gt;

&lt;p&gt;What are the trade-offs that GitHub is willing to accept when publicly exposing a GraphQL API? They have a whole team behind their GraphQL API, making sure you, the user, does not accidentally or intentionally break their systems. You can watch videos of them talking at conferences about the complex systems they built to secure their API and keep it stable. They‚Äôve built tooling for GraphQL specific analytics to get better insights into API usage.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#do-you-fully-understand-the-risks"&gt;
  &lt;/a&gt;
  Do you fully understand the risks?
&lt;/h1&gt;

&lt;p&gt;I assume that many developers with a focus outside of security have little experience on what it takes to secure a REST API exposed on the internet. Most of us have little experience implementing authentication, authorization, rate limiting etc. . However, I think securing a RESTful API is rather simple, compared to a GraphQL API. Any HTTP-based API framework lets you define your routes and attach standardized middlewares to solve the problems listed above. A single HTTP call always corresponds to a single call on the controller of an API. With GraphQL on the other hand, a single Query might result in thousands of calls on the controllers (resolvers) of the API. There is no simple way to solve this problem.&lt;/p&gt;

&lt;p&gt;Depending on the language you use, various libraries are trying to help you with the issue. How trustful are these libraries? Do you fully understand how they work? Are there edge cases we‚Äôre not yet fully aware of?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#will-you-benefit-as-much-as-github-does"&gt;
  &lt;/a&gt;
  Will you benefit as much as GitHub does?
&lt;/h1&gt;

&lt;p&gt;Are you a single developer working on a side project? Do you benefit as much as you‚Äôre expecting from using GraphQL? Are you using many different clients with different data needs? Do you really need a query-based API? What‚Äôs your strategy to combat the problems listed above?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#but-im-not-exposing-my-graphql-api"&gt;
  &lt;/a&gt;
  But I‚Äôm not exposing my GraphQL API
&lt;/h1&gt;

&lt;p&gt;You might be thinking that your GraphQL API is not really exposed. It‚Äôs used on your website, but you don‚Äôt show the playground anywhere. If you‚Äôre using a GraphQL client in the frontend that directly talks to your GraphQL API, this API is exposed, even if not visually exposed with a GraphQL playground.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#am-i-leaking-sensitive-information"&gt;
  &lt;/a&gt;
  Am I leaking sensitive information?
&lt;/h1&gt;

&lt;p&gt;Do you allow any client to invoke the introspection Query? Are you leaking sensitive information through the introspection Query? Are you planning a new feature on the UI which will be made public in a few weeks or months? Is this feature already visible to your competition if they look at your schema? What if someone scrapes your schema every day to track changes and try attacks whenever you update your schema?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#schema-traversal-attacks"&gt;
  &lt;/a&gt;
  Schema traversal attacks
&lt;/h1&gt;

&lt;p&gt;Are you aware of schema traversal attacks? A user might be allowed to see his own account balance, but how about his/her friends? Is it possible to traverse the schema in a way you didn‚Äôt anticipate which leaks data? How do you test for this kind of behavior and ensure it‚Äôs not possible for your own schema?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bug-bounties-everywhere"&gt;
  &lt;/a&gt;
  Bug bounties everywhere
&lt;/h1&gt;

&lt;p&gt;Is there a reason why companies like Shopify participate in bug bounty programs? They seem to be aware of the complexity of securing a GraphQL API. They invite security experts to help them make their publicly available GraphQL API more secure. Do you realize that your GraphQL API is as vulnerable as Shopify‚Äôs?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-most-secure-graphql-server"&gt;
  &lt;/a&gt;
  The most secure GraphQL server
&lt;/h1&gt;

&lt;p&gt;How to make a system 100% secure to any kind of remote attack? If you want to be 100% safe, you should consider unplugging the network cable. However, this comes with some inconvenient drawbacks. You probably don‚Äôt want to store your GraphQL query on a USB dongle, walk to the remote computer and execute it manually, then copy the response back on the dongle and walk back to your own computer.&lt;/p&gt;

&lt;p&gt;What‚Äôs in between an unplugged network cable and exposing GraphQL? How about reducing the complexity to the level of a REST or RPC-based API while keeping the advantages of a query-based API?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#graphql-as-a-serverside-language"&gt;
  &lt;/a&gt;
  GraphQL as a server-side language
&lt;/h1&gt;

&lt;p&gt;If we primarily use GraphQL on the server to define JSON-RPC APIs, we get the best of both worlds. The flexibility of GraphQL combined with the security and predictable performance of an RPC-based API.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-graphql-specification-is-designed-for-this"&gt;
  &lt;/a&gt;
  The GraphQL specification is designed for this
&lt;/h1&gt;

&lt;p&gt;The GraphQL spec allows us to define multiple Operations (Queries, Mutations, Subscriptions) in a single GraphQL document. In addition to this, the validation rules of the spec require all Operations in a GraphQL document to be named. There‚Äôs just one exception which allows a single anonymous Query. But in case the number of operations in a document are above 1 we‚Äôre already forced to name our Operations. Another important requirement is that all Operation names must be unique. That is, there shall be no two Operations with the same name.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#a-set-of-graphql-operations-is-a-jsonrpc-api"&gt;
  &lt;/a&gt;
  A set of GraphQL Operations is a JSON-RPC API
&lt;/h1&gt;

&lt;p&gt;The design of the GraphQL specification alongside with the validation rules builds a perfect foundation for what we‚Äôre trying to achieve here.&lt;/p&gt;

&lt;p&gt;If we want to define a new JSON-RPC API, all we have to do is create a new file containing a set of GraphQL Operations. Each Operation has a unique name. This name becomes the function name of the JSON-RPC. The Operation variables become the input of the RPC call.&lt;/p&gt;

&lt;p&gt;Next, we can ‚Äúdeploy‚Äù all Operations on our API backend and prepare the RPC Endpoints. Finally, based on the Operations and the known RPC-Endpoints we‚Äôre able to generate a client that knows about the schema as well as all RPC endpoints.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jsonrpcgraphql-compared-to-exposed-graphql"&gt;
  &lt;/a&gt;
  JSON-RPC-GraphQL compared to exposed GraphQL
&lt;/h1&gt;

&lt;p&gt;Pros: input and outputs are typesafe the attack surface is reduced you know all the Operations a client is using the generated client is very small, compared to a thick GraphQL client, which leads to smaller JS bundle size less bandwidth usage because we‚Äôre not sending Operations but just making RPC calls Query Parsing, Normalization &amp;amp; Validation happens at compile-time, not at runtime, making it more secure and performant no exposed GraphQL endpoint and therefore no exposed introspection either graph traversal attacks are impossible as the graph is not exposed anymore you know in advance when a change to the schema or one of the Operations would break a client and can mitigate this JSON-RPC turns any GraphQL Query into a GET request and therefore makes them easily cacheable at the transport layer because Operations are stored on the backend and never exposed to the client, you‚Äôre able to put authorization logic into the Operations&lt;/p&gt;

&lt;p&gt;Cons: you can no longer use your favorite GraphQL client you have to run a code generator whenever you update the Schema or any of the Operations you need to compile and store all Operations on the API backend this approach does only work when the API user is allowed to prepare and store Operations on the API backend&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Using GraphQL as a framework for building JSON-RPC APIs is not a solution to every problem. There are situations where it‚Äôs not feasible or simply technically impossible. However, a lot of GraphQL users can benefit from this approach, as it increases security and performance at marginal costs.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#is-implementing-this-approach-your-business"&gt;
  &lt;/a&gt;
  Is implementing this approach your business?
&lt;/h1&gt;

&lt;p&gt;For most of you, the answer to this question will probably be ‚Äúno‚Äù. At &lt;a href="//www.wundergraph.com"&gt;Wundergraph&lt;/a&gt;, our goal is to make APIs easy to use, secure and performant. We‚Äôve already implemented the approach outlined above. If you don‚Äôt want to re-invent the wheel, we‚Äôd be more than happy to work with you together. We focus on the plumbing so you can solve problems of your own business domain and not waste your time.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#interested-in-implementing-wundergraph-in-your-business"&gt;
  &lt;/a&gt;
  Interested in implementing Wundergraph in your business?
&lt;/h1&gt;

&lt;p&gt;Let‚Äôs chat!&lt;br&gt;
&lt;a href="https://8bxwlo3ot55.typeform.com/to/bAaZKNd7"&gt;https://8bxwlo3ot55.typeform.com/to/bAaZKNd7&lt;/a&gt;&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The DERN stack, the perfect alternative to MERN stack for Serverless</title>
      <author>Remi W.</author>
      <pubDate>Thu, 30 Sep 2021 21:20:57 +0000</pubDate>
      <link>https://dev.to/ixartz/the-dern-stack-the-perfect-alternative-to-mern-stack-for-serverless-1edm</link>
      <guid>https://dev.to/ixartz/the-dern-stack-the-perfect-alternative-to-mern-stack-for-serverless-1edm</guid>
      <description>&lt;p&gt;The &lt;strong&gt;MERN stack&lt;/strong&gt; is one of the most famous stacks in the JavaScript ecosystem. A combination of &lt;strong&gt;MongoDB, Express.js, React and Node&lt;/strong&gt; to build web applications. Unfortunately, MERN isn't ready for modern application in the Serverless world.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uihXRREs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/mern-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uihXRREs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/mern-logo.png" alt="Mern stack logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-bottleneck-in-the-database"&gt;
  &lt;/a&gt;
  A bottleneck in the database
&lt;/h2&gt;

&lt;p&gt;Today, you can deploy your React application to &lt;strong&gt;modern static hosting services&lt;/strong&gt; like Netlify or Cloudflare pages. These platforms remove the burden to manage servers for your application frontend.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QAgGl0bV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/cloudflare-page-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QAgGl0bV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/cloudflare-page-logo.png" alt="Cloudflare pages hosting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Same for the backend side, the Serverless community has grown a lot. There is now a lot of tutorial on how to write an &lt;strong&gt;Express.js backend on AWS Lambda&lt;/strong&gt;. If you have already written the Express.js code, you can easily convert to Serverless without any issue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tLUpU0Kf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/serverless-framework-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tLUpU0Kf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/serverless-framework-logo.png" title="Serverless framework AWS lambda"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7dEgbYjc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/express-js-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7dEgbYjc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/express-js-logo.png" title="Express js serverless"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So what's wrong with the MERN stack for Serverless? &lt;strong&gt;The database&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements-for-a-serverless-database"&gt;
  &lt;/a&gt;
  Requirements for a Serverless Database
&lt;/h2&gt;

&lt;p&gt;A Serverless Database should work like the Serverless function. It needs to be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Easy to use&lt;/strong&gt; and &lt;strong&gt;Easy to configure&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pay-as-you-go pricing&lt;/strong&gt;, only charged for what you use.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Scalable&lt;/strong&gt;, can handle the request based on your usage.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Scale to Zero&lt;/strong&gt;, no cost when there is no request.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Managed service&lt;/strong&gt;, no maintenance in scaling and update.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Currently, the most used databases in the JS community are &lt;strong&gt;MongoDB, MySQL and PostgreSQL&lt;/strong&gt;. But, none of them is Serverless for the production environment. There is some solution like AWS Aurora Serverless but there are several limitations and doesn't meet all the requirements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dern-at-the-rescue"&gt;
  &lt;/a&gt;
  DERN at the rescue
&lt;/h2&gt;

&lt;p&gt;The idea is to &lt;strong&gt;replace MongoDB with DynamoDB&lt;/strong&gt; in your MERN stack. So, now it becomes &lt;strong&gt;DERN&lt;/strong&gt;. DynamoDB is a true Serverless database: managed, highly scalable and scales to zero.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jr-N9Mtj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/dern-stack-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jr-N9Mtj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/dern-stack-logo.png" alt="Dern stack logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DynamoDB gives access to more interesting features that you can enable if you are interested:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Continuous backups&lt;/strong&gt;, with Point-In-Time Recovery (PITR)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Global tables&lt;/strong&gt;, make your database close to your users&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Streaming applications&lt;/strong&gt;, you can capture every changes in your table&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the drawbacks I see with DynamoDB is the vendor lock-in to AWS. If you follow best practices, you shouldn't have any issue switching databases to a different cloud provider.&lt;/p&gt;

&lt;p&gt;AWS is at the head of the Serverless race, AWS Lambda is more performant and provides more features when comparing to its competitor.&lt;/p&gt;

&lt;p&gt;So, if you are building a Serverless application for production, you have a high chance to use already AWS ecosystem. Integrating DynamoDB into your stack shouldn't be a problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dern-stack-in-action"&gt;
  &lt;/a&gt;
  DERN stack in action
&lt;/h2&gt;

&lt;p&gt;I recently launched my first SaaS product with a &lt;strong&gt;DERN stack, 100% serverless&lt;/strong&gt; from backend to frontend. Definitively, it makes my developer life so much easier with &lt;strong&gt;no server management&lt;/strong&gt; and I can now have &lt;strong&gt;a deep sleep&lt;/strong&gt; ;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postmage.com"&gt;PostMage&lt;/a&gt; is my first SaaS and it's built using the DERN stack. I've also written a detailed article about &lt;a href="https://creativedesignsguru.com/saas-tech-stack/"&gt;the tech stack as a solo developer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It took me 5 months of development to build the first version of PostMage by spending a lot of time choosing the right tech stack, designing the landing page and the dashboard, implementing the authentication and the integration to Stripe.&lt;/p&gt;

&lt;p&gt;So, I've built a &lt;a href="https://nextlessjs.com"&gt;Next JS SaaS&lt;/a&gt; Boilerplate Template for you to start a SaaS product and save a ton of time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextlessjs.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1qKLlCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/nextless-react-saas-boilerplate.png" alt="Next JS SaaS Boilerplate Starter"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>serverless</category>
      <category>aws</category>
    </item>
    <item>
      <title>Navigating Complex Objects</title>
      <author>Kenny Fitzgerald (he/him)</author>
      <pubDate>Thu, 30 Sep 2021 21:06:51 +0000</pubDate>
      <link>https://dev.to/fitzgeraldkd/navigating-complex-objects-4pe7</link>
      <guid>https://dev.to/fitzgeraldkd/navigating-complex-objects-4pe7</guid>
      <description>&lt;p&gt;When you're just starting off in coding, the concept of nested objects and accessing their properties can be difficult to grasp. Seeing a complicated object with multiple levels of depth can be intimidating at first, but working with these kinds of objects is an important skill to develop. When retrieving information from databases and APIs, the results are often packaged in a &lt;strong&gt;JSON&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;(JavaScript Object Notation)&lt;/em&gt;&lt;/strong&gt; object that has many levels of nested objects. Understanding how to navigate these objects will be crucial when working with this kind of data. This post is written for those who are new to working with objects and are looking for a breakdown on how to access a property multiple layers deep in nested objects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-sample-data"&gt;
  &lt;/a&gt;
  The Sample Data
&lt;/h2&gt;

&lt;p&gt;For the purpose of the examples here, we'll be looking at some real world &lt;em&gt;(and beyond)&lt;/em&gt; data provided by NASA. There are a number of free APIs from NASA that are available for anyone to access, so this will be a good example of what a complex object could look like in a real application. Our sample data will be fetched from the &lt;a href="https://api.nasa.gov/#asteroids-neows"&gt;Asteroids - NeoWs&lt;/a&gt; API which provides information about near-Earth asteroids. Below I have included a simplified &lt;em&gt;JSON schema&lt;/em&gt; of the dataset that shows the organizational structure without the actual data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Simplified&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;JSON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;schema&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;fetchResults&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"links"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"element_count"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"near_earth_objects"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"yyyy-mm-dd"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"links"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"neo_reference_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"nasa_jpl_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"absolute_magnitude_h"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"estimated_diameter"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"is_potentially_hazardous_asteroid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"close_approach_data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"is_sentry_object"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;A couple of things to note&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There could be any number of key/value pairs under &lt;code&gt;near_earth_objects&lt;/code&gt;, depending on how many days of data is requested through the API.&lt;/li&gt;
&lt;li&gt;The values associated with each date key are arrays, and these arrays can also contain any number of items.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are interested in seeing the actual JSON object, &lt;a href="https://github.com/fitzgeraldkd/blog-posts/blob/main/navigating-objects/sample-data.json"&gt;here is the sample data&lt;/a&gt; that I fetched with the API. The examples below will assume that a variable &lt;code&gt;fetchResults&lt;/code&gt; has already been declared and that these results have already been assigned to it. There are two dates included in the results: &lt;code&gt;"2015-09-07"&lt;/code&gt; (with 13 objects), and &lt;code&gt;"2015-09-08"&lt;/code&gt; (with 11 objects).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#accessing-the-data"&gt;
  &lt;/a&gt;
  Accessing the Data
&lt;/h2&gt;

&lt;p&gt;Let's say we wanted to read the &lt;code&gt;is_potentially_hazardous_asteroid&lt;/code&gt; property of the first element associated with the date &lt;code&gt;"2015-09-07"&lt;/code&gt;. How do we go about doing it? Well we have to navigate down through each level in the object, working our way through the nested objects to find the specific property we're trying to reach. Here's how you can do it in JavaScript:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// JavaScript&lt;/span&gt;
&lt;span class="c1"&gt;//           ‚îå access the 'near_earth_objects' object&lt;/span&gt;
&lt;span class="c1"&gt;//           ‚îÇ                 ‚îå access the array associated with the desired date&lt;/span&gt;
&lt;span class="c1"&gt;//           ‚îÇ                 ‚îÇ             ‚îå acccess the first object in the array&lt;/span&gt;
&lt;span class="c1"&gt;//           ‚îÇ                 ‚îÇ             ‚îÇ   ‚îå access the desired property&lt;/span&gt;
&lt;span class="nx"&gt;fetchResults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;near_earth_objects&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2015-09-07&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;is_potentially_hazardous_asteroid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// =&amp;gt; false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All right! So we got the property we were looking for and it returns the expected value of &lt;code&gt;false&lt;/code&gt;, but how does this all work? Let's break this down:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;fetchResults&lt;/code&gt; is the object returned from the API request as described above.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.near_earth_objects&lt;/code&gt; accesses the object that contains all the dates.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;['2015-09-07']&lt;/code&gt; accesses the array of objects for the desired date. Note that &lt;strong&gt;bracket notation is required&lt;/strong&gt; here for two reasons:

&lt;ul&gt;
&lt;li&gt;The key starts with a number.&lt;/li&gt;
&lt;li&gt;The key contains a hyphen.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;[0]&lt;/code&gt; accesses the first object of the array. &lt;strong&gt;Bracket notation is required&lt;/strong&gt; here since we are retrieving an element inside an &lt;strong&gt;array&lt;/strong&gt; instead of a property in an object.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.is_potentially_hazardous_asteroid&lt;/code&gt; finally gets us to the property we wanted to retrieve.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Why can't we just do the following?&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// JavaScript&lt;/span&gt;
&lt;span class="nx"&gt;fetchResults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;is_potentially_hazardous_asteroid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// =&amp;gt; undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Well the &lt;code&gt;fetchResults&lt;/code&gt; object only has three keys: &lt;code&gt;links&lt;/code&gt;, &lt;code&gt;element_count&lt;/code&gt;, and &lt;code&gt;near_earth_objects&lt;/code&gt;. Accessing any other key will return &lt;code&gt;undefined&lt;/code&gt; since an object does not have immediate access to the keys in any children objects. The property we're trying to get to is four levels deep in the &lt;code&gt;fetchResults&lt;/code&gt; object, so we have to use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_accessors"&gt;&lt;strong&gt;property accessors&lt;/strong&gt;&lt;/a&gt; four times in order to get to it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Side note&lt;/em&gt;: Accessing this property can also be done purely with &lt;strong&gt;bracket notation&lt;/strong&gt; as shown below, however I prefer using &lt;strong&gt;dot notation&lt;/strong&gt; where possible for its readability.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// JavaScript&lt;/span&gt;
&lt;span class="nx"&gt;fetchResults&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;near_earth_objects&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2015-09-07&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;is_potentially_hazardous_asteroid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// =&amp;gt; false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#visualizing-the-data"&gt;
  &lt;/a&gt;
  Visualizing the Data
&lt;/h2&gt;

&lt;p&gt;When you're first learning about objects, accessing these nested properties can seem abstract and might be a hard concept to grasp. Another way to visualize this may be to &lt;strong&gt;imagine this object as a folder tree&lt;/strong&gt; on your computer. When you want to access a file, you sometimes have to navigate through &lt;em&gt;multiple levels of directories&lt;/em&gt; first. For each level of arrays/objects nested within the main object, imagine another subfolder with its own contents. When you're in the top level directory, you don't have immediate access to files in any of the sub-directories. &lt;/p&gt;

&lt;p&gt;For the purpose of demonstration, I have created a &lt;em&gt;mockup set of folders&lt;/em&gt; to mirror the structure of the &lt;code&gt;fetchResults&lt;/code&gt; object. Below is the output of running the &lt;code&gt;tree&lt;/code&gt; command in the terminal for these directories.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# bash&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;tree fetchResults
fetchResults
‚îú‚îÄ‚îÄ element_count
‚îú‚îÄ‚îÄ links
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ next
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ prev
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ self
‚îî‚îÄ‚îÄ near_earth_objects
    ‚îú‚îÄ‚îÄ 2015-09-07
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ 0
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ absolute_magnitude_h
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ close_approach_data
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ close_approach_date
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ close_approach_date_full
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ epoch_date_close_approach
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ miss_distance
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ astronomical
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ kilometers
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ lunar
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ miles
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ orbiting_body
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ relative_velocity
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ kilometers_per_hour
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ kilometers_per_second
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ miles_per_hour
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ estimated_diameter
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ feet
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ estimated_diameter_max
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ estimated_diameter_min
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ kilometers
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ estimated_diameter_max
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ estimated_diameter_min
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ meters
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ estimated_diameter_max
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ estimated_diameter_min
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ miles
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ estimated_diameter_max
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ estimated_diameter_min
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ &lt;span class="nb"&gt;id&lt;/span&gt;
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ is_potentially_hazardous_asteroid
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ is_sentry_object
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ links
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ self
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ name
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ nasa_jpl_url
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ neo_reference_id
    ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ ...
    ‚îî‚îÄ‚îÄ ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See how the structure here is nearly identical to the structure of the object? The process of retrieving a file in this folder structure is very similar to that of retrieving a property in the object. In JavaScript you use dot and/or bracket notation to access a property of an object. In Bash or your file explorer you use &lt;code&gt;/&lt;/code&gt; to access a subfolder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// JavaScript&lt;/span&gt;
&lt;span class="c1"&gt;// accessing a property in a series of nested objects&lt;/span&gt;
&lt;span class="nx"&gt;fetchResults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;near_earth_objects&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2015-09-07&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;is_potentially_hazardous_asteroid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# bash&lt;/span&gt;
&lt;span class="c"&gt;# accessing a file in series of nested folders&lt;/span&gt;
fetchResults/near_earth_objects/2015-09-07/0/is_potentially_hazardous_asteroid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For a more visual example see below for an example of navigating through the mockup folder set up to match the structure of &lt;code&gt;fetchResults&lt;/code&gt;. When you're trying to access a property that is multiple levels deep in an object, imagine that you are navigating a folder structure to get to the information you're looking for.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FZTsW9DY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/quJB88C.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FZTsW9DY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/quJB88C.gif" alt="Animation demonstrating navigating through nested directories" title="Animation demonstrating navigating through nested directories"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;Hopefully this brief explanation provides some clarity into navigating through nested objects! It may be intimidating at first, but it's an important skill to develop. &lt;strong&gt;Objects with this level of complexity are common&lt;/strong&gt; and they can be structured in countless different ways. When you get data from an API, you may not have much (or any) control on how the data is formatted as you receive it. Being familiar with how to access the different properties will be a big help as you start to work with complex datasets. &lt;em&gt;Thanks for reading!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>json</category>
      <category>objects</category>
    </item>
    <item>
      <title>Who's participating in Hacktoberfest 2021?</title>
      <author>dev.to staff</author>
      <pubDate>Thu, 30 Sep 2021 20:55:25 +0000</pubDate>
      <link>https://dev.to/devteam/who-s-participating-in-hacktoberfest-2021-4pgf</link>
      <guid>https://dev.to/devteam/who-s-participating-in-hacktoberfest-2021-4pgf</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zak5Tj59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/ZhpKB8nfZQzANvvTMH/giphy.gif%3Fcid%3Decf05e47na68gkj100jhe66wklks6uxkll1trzdre2e55owi%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zak5Tj59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/ZhpKB8nfZQzANvvTMH/giphy.gif%3Fcid%3Decf05e47na68gkj100jhe66wklks6uxkll1trzdre2e55owi%26rid%3Dgiphy.gif%26ct%3Dg" alt="Ghost Saying Hi"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest 2021&lt;/a&gt; starts on Friday, October 1!&lt;/strong&gt; üéÉ &lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#in-the-comments-below-tell-us-who-you-are-whether-or-not-this-is-your-first-hacktoberfest-and-why-youre-taking-part-in-2021"&gt;
  &lt;/a&gt;
  &lt;strong&gt;In the comments below, tell us who you are, whether or not this is your first Hacktoberfest, and why you're taking part in 2021&lt;/strong&gt; üéâ
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you're an open source project maintainer looking for contributors OR if you're looking for projects to contribute to for Hacktoberfest, don't miss this thread on DEV:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/devteam" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTihtlIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nJ87SGF6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1/0213bbaa-d5a1-4d25-9e7a-10c30b455af0.png" alt="The DEV Team"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zg3sT9Js--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vHKcEiTe--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/3/13d3b32a-d381-4549-b95e-ec665768ce8f.png" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devteam/hacktoberfest-2021-who-s-looking-for-contributors-32k" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Hacktoberfest 2021 ‚Äî Who's Looking for Contributors? &lt;/h2&gt;
      &lt;h3&gt;dev.to staff for The DEV Team „Éª Sep 30 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#hacktoberfest&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#contributorswanted&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
 




&lt;p&gt;&lt;strong&gt;Whether you already have a plan for the projects you'll contribute to or not, this is a great place to meet the other participants. Let's make this a supportive community experience!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Hacktoberfest 2021 ‚Äî Who's Looking for Contributors? </title>
      <author>dev.to staff</author>
      <pubDate>Thu, 30 Sep 2021 20:52:45 +0000</pubDate>
      <link>https://dev.to/devteam/hacktoberfest-2021-who-s-looking-for-contributors-32k</link>
      <guid>https://dev.to/devteam/hacktoberfest-2021-who-s-looking-for-contributors-32k</guid>
      <description>&lt;p&gt;&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest 2021&lt;/a&gt; kicks off on Friday, October 1 and lasts through the end of the month! &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open source maintainers can drop links to/information on their projects in the comments below.&lt;/strong&gt; The goal? To find helpful contributors seeking projects to improve in the name of Hacktoberfest!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note for Maintainers:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;If you‚Äôd like your project to be eligible for Hacktoberfest contributions, you &lt;strong&gt;must&lt;/strong&gt; classify it as a &lt;a href="https://github.com/topics/hacktoberfest"&gt;Hacktoberfest Project&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Participating&lt;/em&gt; in Hacktoberfest?&lt;/strong&gt; Let us know in &lt;a href="https://dev.to/devteam/who-s-participating-in-hacktoberfest-2021-4pgf"&gt;here&lt;/a&gt;. You can also use &lt;strong&gt;this&lt;/strong&gt; thread as a reference for projects that are actively seeking contributions üéâ&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you're a maintainer who's interested in getting your repository ready for contributors, &lt;a href="https://dev.to/virtualcoffee/preptember-maintainer-powerups-4m1n"&gt;this&lt;/a&gt; handy guide from &lt;a class="mentioned-user" href="https://dev.to/bekahhw"&gt;@bekahhw&lt;/a&gt;
 is a great place to start.&lt;/em&gt; &lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>discuss</category>
      <category>contributorswanted</category>
    </item>
    <item>
      <title>What is Playfair Cipher Encryption Algorithm</title>
      <author>Karan-Munjani</author>
      <pubDate>Thu, 30 Sep 2021 20:37:36 +0000</pubDate>
      <link>https://dev.to/karanmunjani/what-is-playfair-cipher-encryption-algorithm-4npk</link>
      <guid>https://dev.to/karanmunjani/what-is-playfair-cipher-encryption-algorithm-4npk</guid>
      <description>&lt;p&gt;This is going to be two or three part series where I'm going to explain the theory behind the Playfair cipher and how we can program it using most probably everyone's favourite language ü•Åü•Åü•Å (&lt;em&gt;"DRUM ROLLS"&lt;/em&gt;)  &lt;strong&gt;Python&lt;/strong&gt;, Yay!!&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Playfair cipher or Playfair square or Wheatstone‚ÄìPlayfair cipher is a manual symmetric encryption technique and was the first literal digram substitution cipher. The scheme was invented in 1854 by Charles Wheatstone, but bears the name of Lord Playfair for promoting its use. - Source: Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;So what we can grasp from above is that, this algorithm was developed by Charles Wheatstone but bears the name as Lord Playfair promoted it. Also we can depict that it was first practical digraph substitution cipher.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Digraph Cipher&lt;/strong&gt; : It simply means that we encrypt the plaintext to ciphertext with two characters at a time. (Will get more idea as I explain you through.)  &lt;/p&gt;
&lt;/blockquote&gt;


&lt;center&gt; * * * * * * *&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#the-playfair-cipher-algorithm"&gt;
  &lt;/a&gt;
  The Playfair Cipher Algorithm
&lt;/h2&gt;

&lt;p&gt;The Algorithm mainly consist of three steps: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Convert plaintext into digraphs (i.e., into pair of two letters)&lt;/li&gt;
&lt;li&gt;Generate a Cipher Key Matrix&lt;/li&gt;
&lt;li&gt;Encrypt plaintext using Cipher Key Matrix and get ciphertext.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;For the rest of our discussion we will be using below mentioned Key and Plaintext:&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;Key&lt;/strong&gt; = DevToDiesel&lt;br&gt;
&lt;strong&gt;Plaintext&lt;/strong&gt; = Awesome Dev Community&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So let's move forward!!&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yx34-l4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mf66y8toak3tmukyvjtp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yx34-l4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mf66y8toak3tmukyvjtp.png" alt="Full Mat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step1-convert-plaintext-into-digraphs-ie-into-pair-of-two-letters"&gt;
  &lt;/a&gt;
  Step:1 Convert plaintext into digraphs (i.e., into pair of two letters)
&lt;/h2&gt;

&lt;p&gt;So our Plaintext &lt;code&gt;Awesome Dev Community&lt;/code&gt; will be&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[AW, ES, OM, ED, EV, CO, MX, MU, NI, TY] 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now You might be wondering why &lt;code&gt;MX&lt;/code&gt; instead of &lt;code&gt;MM&lt;/code&gt; and where did the whitespaces go! Because there are three rules to be followed here and those are:&lt;/p&gt;

&lt;p&gt;1.While splitting text into pairs, if the letters are same in a pair then insert filler x. &lt;/p&gt;

&lt;p&gt;2.At the end if only one letter is left it has no pair we can insert our filler x&lt;/p&gt;

&lt;p&gt;3.Remove Whitespaces from the string as well as special characters apart from 25 alphabets.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;


&lt;center&gt; * * * * * * *&lt;/center&gt;

&lt;p&gt;¬†&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step2-generate-a-cipher-key-matrix"&gt;
  &lt;/a&gt;
  Step:2 Generate a Cipher Key Matrix
&lt;/h2&gt;

&lt;p&gt;Cipher Key Matrix is a 5√ó5 grid of alphabets that acts as the key for encrypting the plaintext.&lt;/p&gt;

&lt;p&gt;Each of the 25 alphabets must be unique and one letter of the alphabet (usually J) is omitted from the table (as the table can hold only 25 alphabets). &lt;/p&gt;

&lt;p&gt;If the plaintext contains J, then it is replaced by I.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;As you might expected! There are also rules to generate this key matrix. You're getting brainy now!&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#rules"&gt;
  &lt;/a&gt;
  Rules:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. If our key has repeating letters omit them.&lt;/strong&gt;&lt;br&gt;
So our Key = "DevToDiesel" Will be&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;D E V T O I E S L
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Fill this unique characters key in our 5X5 Matrix&lt;/strong&gt;&lt;br&gt;
So it might look something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aGHD8Zyq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgrif2fq5zro15h7ck9x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aGHD8Zyq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgrif2fq5zro15h7ck9x.png" alt="Half Mat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Fill the remaining places with unused alphabets without J&lt;/strong&gt; As it should only contain 25 letters, only omitting J would result in matrix like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uRGW0ngW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtui4hbfoieyswnshv0d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uRGW0ngW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtui4hbfoieyswnshv0d.png" alt="Full Mat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;


&lt;center&gt; * * * * * * *&lt;/center&gt;

&lt;p&gt;¬†&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-3-encrypt-plaintext-using-cipher-key-matrix-and-get-ciphertext"&gt;
  &lt;/a&gt;
  Step 3: Encrypt plaintext using Cipher Key Matrix and get ciphertext.
&lt;/h2&gt;

&lt;p&gt;Now we will encrypt our diagraph plaintext that is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[AW, ES, OM, ED, EV, CO, MX, MU, NI, TY]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;into Cipher text with the help of cipher key matrix, and following below listed rules.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rule-1"&gt;
  &lt;/a&gt;
  Rule: 1
&lt;/h3&gt;

&lt;p&gt;If both letters are not in same column and not in same row and making a rectangle shape then take letters on the horizontal opposite corner of the rectangle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
Our first pair from plaintext is "AW", so A will be enciphered to S and W will enciphered to Y.&lt;br&gt;
i.e., &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A -&amp;gt; S&lt;/li&gt;
&lt;li&gt;W -&amp;gt; Y
resulting in,&lt;strong&gt;AW -&amp;gt; SY&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zcccPbFn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ev1lp2r8v7q5dqmdbnfp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zcccPbFn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ev1lp2r8v7q5dqmdbnfp.png" alt="Rule 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Similarly, pair OM will be enciphered to DR.&lt;br&gt;
i.e., &lt;strong&gt;OM -&amp;gt; DR&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eCLJNxQP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o1lbkr77y02gugevlye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eCLJNxQP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o1lbkr77y02gugevlye.png" alt="Rule 1.2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#rule-2"&gt;
  &lt;/a&gt;
  Rule: 2
&lt;/h3&gt;

&lt;p&gt;If both the letters are in the same column: Take the letter below each one (going back to the top if at the bottom).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; &lt;br&gt;
Our Second pair is "ES", so according to above rule it will be enciphered to its below character in same column.&lt;br&gt;
i.e., &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;E -&amp;gt; S&lt;/li&gt;
&lt;li&gt;S -&amp;gt; F
thus, &lt;strong&gt;ES -&amp;gt; SF&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QvNKqiDw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29f3of9b4b48zkir46ym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QvNKqiDw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29f3of9b4b48zkir46ym.png" alt="Rule 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#rule-3"&gt;
  &lt;/a&gt;
  Rule: 3
&lt;/h3&gt;

&lt;p&gt;If both the letters are in the same row: Take the letter to the right of each one (going back to the leftmost if at the rightmost position)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; &lt;br&gt;
The pair DE is in same row, so just choose the right next to each character from cipher key matrix.&lt;br&gt;
i.e., &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;D -&amp;gt; E&lt;/li&gt;
&lt;li&gt;E -&amp;gt; V
so, &lt;strong&gt;DE -&amp;gt; EV&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wPQHHjEB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z3j5t5cg7esa6m9dbt1f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wPQHHjEB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z3j5t5cg7esa6m9dbt1f.png" alt="Rule 3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;


&lt;center&gt; * * * * * * *&lt;/center&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Same way after performing above rules for whole the list of diagraph plain text, our cipher text will be generated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Plaintext&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[AW, ES, OM, ED, EV, CO, MX, MU, NI, TY]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Ciphertext&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[SY, SF, DR, VE, VT, KD, PU, UD, MS, AT]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Plaintext = &lt;strong&gt;AWESOMEDEVCOMXMUNITY&lt;/strong&gt;&lt;br&gt;
Ciphertext = &lt;strong&gt;SYSFDRVEVTKDPUUDMSAT&lt;/strong&gt;&lt;/p&gt;


&lt;center&gt; * * * * * * *&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#in-the-next-part-of-series-ill-be-showing-how-to-code-playfair-cipher-using-python-so-stay-tuned"&gt;
  &lt;/a&gt;
  In the next part of series I'll be showing how to code playfair cipher using python, so stay tuned.
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Don't forget to leave your thoughts and doubts in discussion section below, also drop a heart ‚ù§ if you gained some knowledge!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading out!üòÄüòÄ&lt;/p&gt;

</description>
      <category>security</category>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>Best VS Code features &amp; Learning Material UI ‚úèÔ∏è</title>
      <author>Tuomo Kankaanp√§√§</author>
      <pubDate>Thu, 30 Sep 2021 20:37:04 +0000</pubDate>
      <link>https://dev.to/tumee/best-vs-code-features-learning-material-ui-2o4</link>
      <guid>https://dev.to/tumee/best-vs-code-features-learning-material-ui-2o4</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://www.tuomokankaanpaa.com/newsletter"&gt;my newsletter&lt;/a&gt; last week. I publish previous week's newsletter here on the blog. If you want to read these as soon as they are published, &lt;a href="https://www.tuomokankaanpaa.com/newsletter"&gt;sign up&lt;/a&gt; for the newsletter!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ahoy,&lt;/p&gt;

&lt;p&gt;I use Visual Studio Code as my main code editor. To be honest it is pretty much the only editor I use. There is bunch of great features in VS Code that I use daily. Features that honestly make my life a lot easier and productive.&lt;/p&gt;

&lt;p&gt;So I thought that it might be helpful to share those features in case you are not yet using them or leveraging them fully in your own workflow. You can find the features from the latest video on my &lt;a href="https://www.youtube.com/tuomokankaanpaa"&gt;Youtube channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ZKq5OIhKpzE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Or if you just want to know the list, here it is&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Timeline&lt;/li&gt;
&lt;li&gt;Integrated Terminal&lt;/li&gt;
&lt;li&gt;Multiline editing&lt;/li&gt;
&lt;li&gt;Command palette&lt;/li&gt;
&lt;li&gt;Extensions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-i-learned-this-week"&gt;
  &lt;/a&gt;
  What I learned this week?
&lt;/h2&gt;

&lt;p&gt;I worked on a Next.js project where I decided to use &lt;a href="https://mui.com/"&gt;Material UI&lt;/a&gt; as a component library. At first it was kind of hard to know and find what components I should use but after a while, I got actually something good looking on the screen.&lt;/p&gt;

&lt;p&gt;The project is actually a simple Next.js blog application. I plan on shooting a video about it, teaching how to code one by yourself. I'm not yet sure when I'll be making that video but it might be in the near future so &lt;a href="https://www.youtube.com/tuomokankaanpaa?sub_confirmation=1"&gt;stay tuned for that&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I have used Material UI for the past couple of weeks on couple of projects in addition to the Next.js blog application. I am quite excited about Material UI, now that I have a bit better understanding on how the whole thing works and what kind of components should I use for certain situations and what kind of components they actually have!&lt;/p&gt;

&lt;p&gt;I have some time now thought that I need to learn something that I can use to make my apps and UIs look even half decent (I am terrible at designing and styling in general). So I was thinking of learning TailwindCSS next but now that I have worked with Material UI a bit, I'm thinking of giving Material UI a chance and learning that first. Of course they are not / don't do "the same thing" but Material UI serves the need that I have and there is only so much one can be learning simultaneously.&lt;/p&gt;

&lt;p&gt;Have you used Material UI or TailwindCSS? If you have, let me know what you think about them!&lt;/p&gt;

&lt;p&gt;That's it for this week!&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br&gt;
Tuomo&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>webdev</category>
    </item>
    <item>
      <title>üçÇ Remove gone git branches</title>
      <author>Andrew Luca</author>
      <pubDate>Thu, 30 Sep 2021 20:31:13 +0000</pubDate>
      <link>https://dev.to/iamandrewluca/remove-gone-git-branches-36eh</link>
      <guid>https://dev.to/iamandrewluca/remove-gone-git-branches-36eh</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt; Alias for removing local branches that are gone on remote&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight properties"&gt;&lt;code&gt;&lt;span class="c"&gt;# ~/.gitconfig file
&lt;/span&gt;&lt;span class="err"&gt;[alias]&lt;/span&gt;
    &lt;span class="py"&gt;gone&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"!f() { git fetch --all --prune; git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D; }; f"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git gone
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your git workflow is using Pull Requests that are merged into main branch, after a while your local list of branches will get very messy, because most of the time the PR is merged and remote branch is deleted.&lt;/p&gt;

&lt;p&gt;However on local you just create a new branch from main for a new feature/fix, and you leave the previous branch behind without deleting it.&lt;/p&gt;

&lt;p&gt;Let's start with this, list all local branches with their remotes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch &lt;span class="nt"&gt;-vv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  feature-1 4ea9770 [origin/feature-1] test commit
  feature-2 4ea9770 [origin/feature-2] test commit
  feature-3 4ea9770 [origin/feature-3] test commit
  feature-4 4ea9770 [origin/feature-4] test commit
  feature-5 4ea9770 [origin/feature-5] test commit
  feature-6 4ea9770 [origin/feature-6] test commit
  feature-7 4ea9770 [origin/feature-7] test commit
* main      4ea9770 [origin/main] test commit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we remove some remote branches, fetch remote info, and list branches again&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git fetch &lt;span class="nt"&gt;--prune&lt;/span&gt;
git branch &lt;span class="nt"&gt;-vv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  feature-1 4ea9770 [origin/feature-1: gone] test commit
  feature-2 4ea9770 [origin/feature-2] test commit
  feature-3 4ea9770 [origin/feature-3: gone] test commit
  feature-4 4ea9770 [origin/feature-4] test commit
  feature-5 4ea9770 [origin/feature-5] test commit
  feature-6 4ea9770 [origin/feature-6] test commit
  feature-7 4ea9770 [origin/feature-7: gone] test commit
* main      4ea9770 [origin/main] test commit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B_HRKL6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/g01ZnwAUvutuK8GIQn/giphy.gif%3Fcid%3Decf05e47iu01qeuvc6pgymjyfall0i0soact78iv2udjr3nf%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B_HRKL6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/g01ZnwAUvutuK8GIQn/giphy.gif%3Fcid%3Decf05e47iu01qeuvc6pgymjyfall0i0soact78iv2udjr3nf%26rid%3Dgiphy.gif%26ct%3Dg" alt="travolta confused"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see there are some lines that have &lt;code&gt;gone&lt;/code&gt;, that means that the remote branch is gone, so &lt;code&gt;origin/feature-1&lt;/code&gt;, &lt;code&gt;origin/feature-3&lt;/code&gt;, &lt;code&gt;origin/feature-7&lt;/code&gt; remote branches don't exist anymore, but we still have them locally. And with time this list can get very big.&lt;/p&gt;

&lt;p&gt;Let's get back to our alias. Now that we have this &lt;code&gt;gone&lt;/code&gt; keyword in the branch list, we can hook in and get the branch name and delete it. For example to manually delete &lt;code&gt;feature-7&lt;/code&gt; we would do:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Fetch info for all remotes and prune info of missing remote branches&lt;/span&gt;
git fetch &lt;span class="nt"&gt;--all&lt;/span&gt; &lt;span class="nt"&gt;--prune&lt;/span&gt;
&lt;span class="c"&gt;# List all branches to see what is gone&lt;/span&gt;
git branch &lt;span class="nt"&gt;-vv&lt;/span&gt;
&lt;span class="c"&gt;# Delete desired branch&lt;/span&gt;
git branch &lt;span class="nt"&gt;-D&lt;/span&gt; feature-7
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's combine all these 3 into a single one liner üöÄ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git fetch &lt;span class="nt"&gt;--all&lt;/span&gt; &lt;span class="nt"&gt;--prune&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; git branch &lt;span class="nt"&gt;-vv&lt;/span&gt; | &lt;span class="nb"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;'/: gone]/{print $1}'&lt;/span&gt; | xargs git branch &lt;span class="nt"&gt;-D&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we use pipe (&lt;code&gt;|&lt;/code&gt;) operator to pass output from one command to another pipe.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;git fetch --all --prune&lt;/code&gt; just fetches remotes info&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;git branch -vv&lt;/code&gt; list branches and pipes output lines to awk&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;awk '/: gone]/{print $1}'&lt;/code&gt; find lines with &lt;code&gt;gone&lt;/code&gt;, select first column (which is branch name) and pipe to xargs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;xargs git branch -D&lt;/code&gt; takes received branches names and deletes them&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;And to make this one liner a &lt;a href="https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases"&gt;git alias&lt;/a&gt; we put it into a function that will be called üíª&lt;/p&gt;

&lt;p&gt;You can add manually the alias in your &lt;code&gt;~/.gitconfig&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight properties"&gt;&lt;code&gt;&lt;span class="c"&gt;# ~/.gitconfig file
&lt;/span&gt;&lt;span class="err"&gt;[alias]&lt;/span&gt;
    &lt;span class="py"&gt;gone&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"!f() { git fetch --all --prune; git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D; }; f"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or follow these steps. Usually is a single line, but because of multiple quotes, double quotes and dollar signs we have to do it in multiple steps using a temporary file:&lt;/p&gt;

&lt;p&gt;Put the alias code in &lt;code&gt;alias&lt;/code&gt; temporary file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"f() { git fetch --all --prune; git branch -vv | awk '/: gone]/{print &lt;/span&gt;&lt;span class="se"&gt;\$&lt;/span&gt;&lt;span class="s2"&gt;1}' | xargs git branch -D; }; f"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;alias&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Consume &lt;code&gt;alias&lt;/code&gt; file for git alias command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; alias.gone &lt;span class="s2"&gt;"!&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;cat alias&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="c"&gt;# remove temporary created file&lt;/span&gt;
&lt;span class="nb"&gt;rm alias&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's do a full demo üòÆ‚Äçüí®&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch &lt;span class="nt"&gt;-vv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  feature-1 4ea9770 [origin/feature-1] test commit
  feature-2 4ea9770 [origin/feature-2] test commit
  feature-3 4ea9770 [origin/feature-3] test commit
  feature-4 4ea9770 [origin/feature-4] test commit
  feature-5 4ea9770 [origin/feature-5] test commit
  feature-6 4ea9770 [origin/feature-6] test commit
  feature-7 4ea9770 [origin/feature-7] test commit
* main      4ea9770 [origin/main] test commit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next I deleted all feature branches on remote. And call &lt;code&gt;git gone&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git gone
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Fetching origin
From /Users/iamandrewluca/Temp/gone-bare
 - [deleted]         (none)     -&amp;gt; origin/feature-1
 - [deleted]         (none)     -&amp;gt; origin/feature-2
 - [deleted]         (none)     -&amp;gt; origin/feature-3
 - [deleted]         (none)     -&amp;gt; origin/feature-4
 - [deleted]         (none)     -&amp;gt; origin/feature-5
 - [deleted]         (none)     -&amp;gt; origin/feature-6
 - [deleted]         (none)     -&amp;gt; origin/feature-7
Deleted branch feature-1 (was 4ea9770).
Deleted branch feature-2 (was 4ea9770).
Deleted branch feature-3 (was 4ea9770).
Deleted branch feature-4 (was 4ea9770).
Deleted branch feature-5 (was 4ea9770).
Deleted branch feature-6 (was 4ea9770).
Deleted branch feature-7 (was 4ea9770).
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://i.giphy.com/media/Jls16O6RdqyxueMvBj/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Jls16O6RdqyxueMvBj/giphy.gif" alt="magician focus gone"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I like my local repo to always be clear. And in the past I had always to check what branches are deleted on remote and delete them also locally. Now I don't have to remember anything. Just &lt;code&gt;git gone&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Are you still here? üòä Thanks for reading my blog posts! üéâ üéà &lt;/p&gt;




&lt;p&gt;Initial idea by &lt;a href="https://twitter.com/devgummibeer"&gt;Tom Witkowski&lt;/a&gt; on &lt;a href="https://twitter.com/devgummibeer/status/1425014391561412629"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cover Photo by &lt;a href="https://unsplash.com/@birtiishar?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Birti Ishar&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/gone?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>gitlab</category>
      <category>bitbucket</category>
    </item>
    <item>
      <title>Does the functionality of Grouping operator ()  in JavaScript differ from Haskell or other programming languages?</title>
      <author>Ken Okabe</author>
      <pubDate>Thu, 30 Sep 2021 20:27:34 +0000</pubDate>
      <link>https://dev.to/stken2050/does-the-functionality-of-grouping-operator-in-javascript-differ-from-haskell-or-other-programming-languages-1f20</link>
      <guid>https://dev.to/stken2050/does-the-functionality-of-grouping-operator-in-javascript-differ-from-haskell-or-other-programming-languages-1f20</guid>
      <description>&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Grouping"&gt;Grouping operator ( )&lt;/a&gt; in JavaScript&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The grouping operator &lt;code&gt;( )&lt;/code&gt; controls the precedence of evaluation in expressions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;does Not differ from Haskell or other programming languages. (there is a minor exception as a byproduct of their main purpose in Lisp/Clojure)&lt;/p&gt;

&lt;p&gt;In other words, grouping operator &lt;code&gt;( )&lt;/code&gt; in every language shares the common functionality to compose &lt;a href="https://en.wikipedia.org/wiki/Dependency_graph"&gt;Dependency graph&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In mathematics, computer science and digital electronics, a dependency graph is a directed graph representing dependencies of several objects towards each other. It is possible to derive an &lt;strong&gt;evaluation order&lt;/strong&gt; or the absence of an evaluation order that respects the given dependencies from the dependency graph.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zNwuguPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-ab7d2656b77f1d569cfd58d97cc8fb51" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zNwuguPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-ab7d2656b77f1d569cfd58d97cc8fb51" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g6Nr4Gs0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-787c4c629035059338e086ab13376de7" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g6Nr4Gs0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-787c4c629035059338e086ab13376de7" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and the functionality of Grouping operator &lt;code&gt;( )&lt;/code&gt; itself is not affected by a &lt;a href="https://en.wikipedia.org/wiki/Evaluation_strategy"&gt;evaluation strategy&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Perhaps we can share the code below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;f() * (g() + h())&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;to discuss the topic here, but not limited to the example.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XGS50Y4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-adb3170db726ab2ce616895beacdc94d" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XGS50Y4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-adb3170db726ab2ce616895beacdc94d" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#haskell"&gt;
  &lt;/a&gt;
  Haskell
&lt;/h2&gt;

&lt;p&gt;In the code in Haskell where the evaluation strategy is &lt;strong&gt;Lazy / Call-by-need&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Lazy_evaluation"&gt;https://en.wikipedia.org/wiki/Lazy_evaluation&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T4VEuozn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-b074554f1313334d923ff4c34e8a7d44" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T4VEuozn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-b074554f1313334d923ff4c34e8a7d44" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this code, according to the call-by-need, the evaluation order of &lt;strong&gt;f g h&lt;/strong&gt; is&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;h(1) -&amp;gt; f(1) -&amp;gt; g(1)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LCGbhHQt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-28baa064e362db2c563d9a6b6bfb3dcd" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LCGbhHQt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-28baa064e362db2c563d9a6b6bfb3dcd" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ONb_B-Eq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-05fbaee9793fd90d9cd2cfaa5d90c604" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ONb_B-Eq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-05fbaee9793fd90d9cd2cfaa5d90c604" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this code, according to the call-by-need, the evaluation order of &lt;strong&gt;f g h&lt;/strong&gt; is&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;f(1) -&amp;gt; g(1) -&amp;gt; h(1)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gv86BkPQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-4fa2aa62740f018d4a547a7cd5d7e0ab" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gv86BkPQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qph.fs.quoracdn.net/main-qimg-4fa2aa62740f018d4a547a7cd5d7e0ab" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h2&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//function definition  
const f = a =&amp;gt; a + 1;  
const g = a =&amp;gt; a + 2; 
const h = a =&amp;gt; a + 3; 

//calling functions 
console.log( 
(f(1) * g(1)) + h(1) 
); //10 
console.log( 
f(1) * (g(1) + h(1))   
); //14 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;In this code, according to the eager-evaluation the evaluation order of &lt;strong&gt;f g h&lt;/strong&gt; is&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;f(1) -&amp;gt; g(1) -&amp;gt; h(1)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;in both cases.&lt;/p&gt;




&lt;p&gt;Either way, the regardless the evaluation strategies, since the dependency graph composed with Groping operator&lt;code&gt;()&lt;/code&gt; and &lt;code&gt;+&lt;/code&gt; &lt;code&gt;*&lt;/code&gt; stays identical, the final evaluated value is also identical.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Contribute to the Awesome Web Monetization on Hacktoberfest ! ü•≥üåà</title>
      <author>Thomas Bnt</author>
      <pubDate>Thu, 30 Sep 2021 20:18:01 +0000</pubDate>
      <link>https://dev.to/thomasbnt/contribute-to-the-awesome-web-monetization-on-hacktoberfest-3dej</link>
      <guid>https://dev.to/thomasbnt/contribute-to-the-awesome-web-monetization-on-hacktoberfest-3dej</guid>
      <description>&lt;p&gt;&lt;strong&gt;Looking for new open source projects&lt;/strong&gt; that can be posted &lt;a href="https://github.com/thomasbnt/awesome-web-monetization"&gt;on this repository&lt;/a&gt;. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thomasbnt"&gt;
        thomasbnt
      &lt;/a&gt; / &lt;a href="https://github.com/thomasbnt/awesome-web-monetization"&gt;
        awesome-web-monetization
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üï∂Ô∏è Stuffs about Web Monetization. Packages, articles, documentation links and others tools.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Feel free to have a look, it already contains a lot of cool projects and a little documentation!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-what-is-the-web-monetization-"&gt;
  &lt;/a&gt;
  But what is the Web Monetization ?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Web Monetization&lt;/strong&gt; is a web service that allows you to send money directly in your browser. This is a &lt;strong&gt;JavaScript&lt;/strong&gt; browser API that allows the creation of a &lt;strong&gt;payment stream&lt;/strong&gt; from the user agent to the website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contribute-to-the-project-"&gt;
  &lt;/a&gt;
  Contribute to the project !
&lt;/h2&gt;

&lt;p&gt;So if you are a developer &lt;em&gt;(or not)&lt;/em&gt; of a project about &lt;strong&gt;Web Monetization&lt;/strong&gt;, contribute to the list.&lt;/p&gt;

&lt;p&gt;Here's to your PR and/or comments!&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>webmonetization</category>
      <category>contributorswanted</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
