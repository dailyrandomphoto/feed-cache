<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How To Create Animated Progress Bar HTML</title>
      <author>Muhammad Rauf</author>
      <pubDate>Wed, 17 Nov 2021 16:51:37 +0000</pubDate>
      <link>https://dev.to/softcodeon/how-to-create-animated-progress-bar-html-218o</link>
      <guid>https://dev.to/softcodeon/how-to-create-animated-progress-bar-html-218o</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9iRofH42--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpql5ydtnwr2tr92kcvy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9iRofH42--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpql5ydtnwr2tr92kcvy.jpg" alt="Image description" width="600" height="300"&gt;&lt;/a&gt;&lt;br&gt;
When thinking about user experience, one commonly occurring problem is not giving feedback to user input. Any action that your users take should cause a reaction. If your application has long-running tasks, it’s essential to show progress. Otherwise, users will be left confused.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will focus on how CSS transitions can be used to create an animated progress bar. I will leave a link to the GitHub repository at the end of the article where the final project is hosted. This is how the progress bar will look like.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#to-create-animated-progress-bar-it-takes-three-steps-only"&gt;
  &lt;/a&gt;
  To Create Animated Progress Bar It Takes Three Steps Only:-
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Make a HTML file and define markup&lt;/li&gt;
&lt;li&gt;Make a CSS file and define styling&lt;/li&gt;
&lt;li&gt;Make a JavaScript file and define scripting&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can also do it in a single HTML file. Copy the following HTML, CSS and a bit JavaScript code and paste it where you want to show S&lt;/p&gt;

&lt;p&gt;HTML Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"softprogress"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Progress Bar to - &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;90%&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;code-softprogress=&lt;/span&gt;&lt;span class="s"&gt;"90"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Progress Bar to - &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;65%&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;code-softprogress=&lt;/span&gt;&lt;span class="s"&gt;"65"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Progress Bar to - &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;95%&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;code-softprogress=&lt;/span&gt;&lt;span class="s"&gt;"95"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CSS Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt; &lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"text/css"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* softprogress bar CSS */&lt;/span&gt;
&lt;span class="nc"&gt;.softprogress&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="nt"&gt;code-softprogress&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.softprogress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.softprogress&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;code-softprogress&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.35&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ddd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;code-softprogress&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#2f8d46&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;code-softprogress&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nc"&gt;.run-softprogress&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code-softprogress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s1"&gt;"%"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--run-softprogress&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* End softprogress bar CSS */&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text/javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.softprogress&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.softprogress [code-softprogress]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.softprogress [code-softprogress]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;runsoftprogress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}};&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;runsoftprogress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;run-softprogress&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;style&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;`--run-softprogress:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;code-softprogress&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;%;`&lt;/span&gt;
  &lt;span class="p"&gt;);}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all, this is how to create animated progress bar using jQuery and CSS.You can customize this code further as per your requirement. And please feel free to give comments on this tutorial. Want to learn in detail you can visit our official website &lt;a href="https://softcodeon.com/tutorials/create-animated-progress-bar-html.htm"&gt;Create Animated Progress Bar HTML&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>7 Best Integration Platforms in 2021 </title>
      <author>Liz Parody</author>
      <pubDate>Wed, 17 Nov 2021 16:14:12 +0000</pubDate>
      <link>https://dev.to/lizparody/7-best-integration-platforms-in-2021-2lg2</link>
      <guid>https://dev.to/lizparody/7-best-integration-platforms-in-2021-2lg2</guid>
      <description>&lt;p&gt;An average mid-size company uses around 140 unique apps. A small business uses around 100, and a large enterprise uses around 290 &lt;a href="https://www.blissfully.com/saas-trends/2020-annual-report/#"&gt;SaaS products across their business&lt;/a&gt;. Just think about it, how many apps do you use per day? Well, companies use a lot more to keep their business running. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The great majority of those apps don't make sense in isolation.&lt;/strong&gt; Just like you prefer Google Docs notifications delivered to you right inside Slack, it's better for companies of all sizes to have their apps integrated or 'talking to each other.' The integration of apps enables the whole to be greater than the sum of its parts, and every app is carefully considered as part of a bigger business strategy.&lt;/p&gt;

&lt;p&gt;Even though the number of unique apps used by companies is quite large, at the same time, &lt;strong&gt;companies are churning through more than 30% of their apps every year&lt;/strong&gt;. So if you have a SaaS product, you should probably think about integrating it with existing apps because it's easier for companies to stop using your product if it's not a fundamental part of their business strategy and if they are not integrated with other apps.&lt;/p&gt;

&lt;p&gt;Integration platforms or iPaaS, help you solve the problem of integrating apps so you can maintain your focus on your SaaS company. Some of them are great if you want to connect two apps, others if you want a customizable integration and multiple tenants, and others for people that prefer no-code integration. There are different integration solutions for different needs, and this blog post will explore 7 different integration platforms following 8 criteria:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Code / no-code integration&lt;/li&gt;
&lt;li&gt;Flexibility and customization of the integration&lt;/li&gt;
&lt;li&gt;Cloud (private or public) / on-premise integration &lt;/li&gt;
&lt;li&gt;User profile&lt;/li&gt;
&lt;li&gt;Customer support, documentation, and training&lt;/li&gt;
&lt;li&gt;SaaS Embedding&lt;/li&gt;
&lt;li&gt;Pricing&lt;/li&gt;
&lt;li&gt;Number of applications supported&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;The integration platforms are not ranked in a specific order.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jrYobaDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uoqppc0a41qr8up8as6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jrYobaDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uoqppc0a41qr8up8as6.png" alt="Integration Platform Comparison" width="776" height="405"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dell-boomi"&gt;
  &lt;/a&gt;
  Dell Boomi
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S9NPqAEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4252u9nfy5df3v9x5p0h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S9NPqAEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4252u9nfy5df3v9x5p0h.png" alt="Image description" width="820" height="313"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No-code integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://boomi.com/"&gt;Dell Boomi&lt;/a&gt; is a cloud-native data integration platform that streamlines integration in complex hybrid cloud ecosystems and removes silos in organizations. The user-friendly interface is backed by intelligent recommendations to provide an end-to-end data integration experience. &lt;/p&gt;

&lt;p&gt;Dell Boomi is developer-friendly and offers a graphical user interface. No-code and low-code integration is available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;br&gt;
Is not as flexible a code-first solution, but it provides a comprehensive library of connectors, coupled with support for various integration patterns that enable you to build many integrations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can integrate any combination of On-Premises, Cloud, and SaaS applications or data sources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Boomi offers &lt;a href="https://boomi.com/partners/oem-embedded-partners/#/e02e31"&gt;embedded solution&lt;/a&gt;, for software companies that are looking to integrate with their customers' applications.&lt;/p&gt;

&lt;p&gt;They also have standalone solutions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://boomi.com/compare/"&gt;There are 5 tiers&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Base: including standard features and support&lt;/li&gt;
&lt;li&gt;Professional: Base + Allows multiple environments (prod/test) and advanced workflows&lt;/li&gt;
&lt;li&gt;Pro Plus: Professional + includes services enablement&lt;/li&gt;
&lt;li&gt;Enterprise: Pro Plus + atom worker, parallel processing, and advanced security&lt;/li&gt;
&lt;li&gt;Enterprise Plus: Enterprise + message queuing, 15 standard connectors, and 2 enterprise connectors.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Boomi is mainly for non-technical people, but their low-code solution can be used by technical people as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can get in touch with the &lt;a href="https://boomi.com/company/contact/"&gt;contact form&lt;/a&gt;, the &lt;a href="https://community.boomi.com/s/"&gt;Boomi community&lt;/a&gt; and &lt;a href="https://help.boomi.com/"&gt;help and documentation&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dell Boomi comes with 1,500 built-in endpoint connections to automate many common integrations and reduce your time on creating customized connections. Other features included in this platform include API management, data discovery, and data quality governance.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#zapier"&gt;
  &lt;/a&gt;
  Zapier
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xcYsxBKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s8gcq0wfejumi4yug36c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xcYsxBKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s8gcq0wfejumi4yug36c.png" alt="Zapier integration" width="880" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zapier.com/"&gt;Zapier&lt;/a&gt; allows you to connect your apps and easily automate workflows. Anyone can build workflows with a few clicks, and it lets you automatically move info between your web apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No-code integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You don't have to write code to integrate applications. You can solve problems fast with templates. You can add multiple steps and workflow logic through their drag and drop interface.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can tweak a template (called a zap) or start from scratch. Tailor automated solutions to your team's needs by adding multiple steps and workflow logic. Zapier falls short when it comes to flexibility and customization since you can only work with what they already have. No-code solutions are generally more rigid than code solutions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Zapier works exclusively in the cloud.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Zapier is built for non-technical users, including marketers and managers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can receive support through the &lt;a href="https://zapier.com/help"&gt;help center&lt;/a&gt;, &lt;a href="https://zapier.com/experts"&gt;hiring an expert&lt;/a&gt; or in their &lt;a href="https://community.zapier.com/"&gt;community&lt;/a&gt;. You can also read their &lt;a href="https://platform.zapier.com/docs/zapier-intro"&gt;docs&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://platform.zapier.com/embed/overview"&gt;embed links to zaps in your product&lt;/a&gt;, helping your customers discover available integrations within your product, however customers are always redirected to Zapier to use and modify them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zapier.com/pricing"&gt;There are 3 tiers&lt;/a&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free: with 5 Zaps and 100 tasks/mo&lt;/li&gt;
&lt;li&gt;Starter: 29.99 USD/mo or 19.99 billed annually for 20 Zaps and 750 Tasks&lt;/li&gt;
&lt;li&gt;Professional: 49 USD/mo, unlimited zaps, and 2K task/mo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;3000, including Google Sheets, Slack, Mailchimp, Trello, Gmail, and others.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#mulesoft"&gt;
  &lt;/a&gt;
  MuleSoft
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dcPqKC_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jemsupebh8u0fz88gz7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dcPqKC_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jemsupebh8u0fz88gz7.png" alt="Image description" width="880" height="539"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.mulesoft.com/"&gt;MuleSoft&lt;/a&gt; is a developer-friendly platform to empower IT and business teams to create seamless digital experiences, products, and services with their platform for integration, APIs, and automation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No-code integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mulesoft offers a code-based and no-code solution for its customers. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MuleSoft could be very flexible, but to get the maximum advantage of the platform, you would probably have to hire a skilled MuleSoft engineer or consultant since the platform has a fairly high barrier to entry and requires training, certification, and substantial experience to use.&lt;/p&gt;

&lt;p&gt;Also, MuleSoft has a long implementation time, and &lt;a href="https://www.xplenty.com/blog/mulesoft-vs-xplenty-comparison-and-review/"&gt;it can take between one and six months&lt;/a&gt; of preparation before fully implementing the MuleSoft integration strategy. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can run MuleSoft on-premise and on the cloud.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MuleSoft is designed primarily for use by developers and IT specialists.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can contact sales, help center and Newsroom &lt;a href="https://www.mulesoft.com/contact"&gt;here&lt;/a&gt;, and also you can read the &lt;a href="https://docs.mulesoft.com/general/"&gt;documentation&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mule runtime can be used to deploy applications in a &lt;a href="https://docs.mulesoft.com/mule-runtime/3.9/deployment-scenarios"&gt;standalone way&lt;/a&gt;, however this leaves a lot of work to the developer in terms of determining how to surface these integrations to end-users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MuleSoft is one of the most expensive solutions on the market today. In fact, many enterprises are spending hundreds of thousands of dollars a year on the MuleSoft Anypoint Platform, and some are even spending millions. According to the price-tracking website ITQlik, MuleSoft pricing starts at approximately $80,000 a year. However, the price that most of their enterprise customers pay is closer to $250,000 a year. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.mulesoft.com/exchange/?type=connector"&gt;+500 connectors&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#trayio"&gt;
  &lt;/a&gt;
  Tray.io
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lejwtyo9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/304ia9hin3lmhwwjh8io.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lejwtyo9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/304ia9hin3lmhwwjh8io.png" alt="Image description" width="880" height="377"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;With &lt;a href="https://tray.io/"&gt;Tray.io&lt;/a&gt; you can quickly integrate your software applications using powerful automated workflows. Easily build and streamline processes using their visual workflow editor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Low code and no-code integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tray.io offers low-code and no-code solutions. You can create integrations with their drag-and-drop interface.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tray.io is flexible and allows you to grab the most data from any service with ease. You can have full API access - including custom fields and connect to any SaaS app with their universal connector.&lt;/p&gt;

&lt;p&gt;Their drag-and-drop interface is user-friendly, but it doesn't allow the level of flexibility that a code-first solution can provide. Adding a new first-class connector needs to be done by the Tray.io team and can frequently take a long time if the connector is not already on Tray’s roadmap.&lt;/p&gt;

&lt;p&gt;They have universal connectors like HTTP client connector, GraphQL connector, connectors for common databases, JDBC connector, CSV Editor, S/FTP, and universal triggers like webhooks, email, form.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Works on the cloud, it doesn't run on-premise but it has a mechanism to connect to on-premise systems for a custom enterprise quote.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since it is low-code and no-code, Tray.io can be used by technical and non-technical customers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can get in contact with them &lt;a href="https://tray.io/lp/get/contact"&gt;here&lt;/a&gt;, use the chat and to learn more about the platform you can read the &lt;a href="https://tray.io/documentation/"&gt;developer docs&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can get &lt;a href="https://tray.io/solutions/embedded"&gt;Tray.io Embedded&lt;/a&gt; and deliver the integrations that your customers are asking for, without needing engineering to maintain them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tray.io/products/platform/pricing"&gt;You can choose between 4 tiers&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Standard: $695/mo &lt;/li&gt;
&lt;li&gt;Standard Plus: $1,450/mo&lt;/li&gt;
&lt;li&gt;Professional: $2,450/mo&lt;/li&gt;
&lt;li&gt;Enterprise: Custom Pricing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;+100 connectors, including Salesforce, NetSuite, Snowflake, Slack, Shopify, Zoom, and others.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#celigo"&gt;
  &lt;/a&gt;
  Celigo
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dY_WgbAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lif9p8p314pwfw1kx5gm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dY_WgbAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lif9p8p314pwfw1kx5gm.png" alt="Image description" width="880" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code / no-code integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.celigo.com/"&gt;Celigo&lt;/a&gt; is a platform designed to integrate data into cloud applications and automate key parts of this process. This platform comes with a user-friendly guided interface and data flow templates for no-code integration. Non-technical users will find it easy to take a template and build on it with business logic. Technical users have the option of using JavaScript scripts, webhook, HTTP, REST API, FTP, hooks, wrappers, API tokens, and debuggers to develop automation flows that are customized to your organization.&lt;/p&gt;

&lt;p&gt;Celigo has an intuitive design and hundreds of pre-built connectors. It makes it possible for technical and non-technical users to build and maintain automation and integrations themselves. You can use templates or create your application from scratch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since it provides code and no-code solutions, Celigo gives a lot of flexibility to their customers and the possibility of customization of their integration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can use Celigo on both on-premise and on the cloud. &lt;a href="https://docs.celigo.com/hc/en-us/articles/360004081771-Integrate-data-through-firewall-with-on-premise-agent"&gt;An on-premise agent&lt;/a&gt; is a Windows software program that runs on your server, typically behind the firewall and within the same network as the systems you want to connect to. It establishes a secure tunnel to connect to integrator.io. You can connect to on-premise apps, but Celigo itself doesn’t run on premise. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Technical and non-technical users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can find here the &lt;a href="https://docs.celigo.com/hc/en-us/categories/360002687531-Developers"&gt;developer docs&lt;/a&gt;, get in contact with them through &lt;a href="https://www.celigo.com/company/contact-us/"&gt;this form&lt;/a&gt;, or use the chat in &lt;a href="https://www.celigo.com/"&gt;their webpage&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can have &lt;a href="https://www.celigo.com/embedded-integrations/"&gt;embedded integrations&lt;/a&gt; with Celigo, as well as standalone integrations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can choose between 4 tiers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Standard: $7,200/yr with 3 endpoint apps and 16 flows&lt;/li&gt;
&lt;li&gt;Professional: $18,000/yr with 5 endpoint apps and 100 flows&lt;/li&gt;
&lt;li&gt;Premium: $36,000/yr with 10 endpoint apps and unlimited flows&lt;/li&gt;
&lt;li&gt;Enterprise: $72,000/yr with 20 endpoint apps and unlimited flows&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;+100&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jitterbit"&gt;
  &lt;/a&gt;
  Jitterbit
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jQqto73i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mte1a8ojcx2x2yu6bzmh.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jQqto73i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mte1a8ojcx2x2yu6bzmh.jpeg" alt="Image description" width="880" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.jitterbit.com/"&gt;Jitterbit&lt;/a&gt; is an API integration platform designed to streamline the connection of cloud, on-premise, and SaaS applications. It also offers a way to add Artificial Intelligence technology into your applications and combine them in innovative ways to create new solutions. AI options include real-time language translation, a recommendation engine, and speech recognition.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No-code integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can quickly create new APIs or connect with external ones through an extensive library of pre-built templates and workflows. If the pre-built templates don't cover your needs, you can use a point-and-click graphical interface to create your own integrations and templates. Jitterbit only offers no-code integration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jitterbit offers a degree of flexibility and customization through its point-and-click graphical interface, but it doesn't provide the flexibility a code platform can offer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jitterbit supports on-premise, cloud, and hybrid cloud deployment and both real-time and batch processing operations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jitterbit was built for non-technical people.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jitterbit provides support via an online &lt;a href="https://community.jitterbit.com/s/"&gt;forum-based community&lt;/a&gt; and via &lt;a href="https://info.jitterbit.com/contact.html"&gt;online form submission&lt;/a&gt;. &lt;a href="https://success.jitterbit.com/display/DOC/Getting+Started"&gt;Documentation is comprehensive&lt;/a&gt;. Digital training materials are available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jitterbit only offers standalone applications. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can choose between &lt;a href="https://www.jitterbit.com/platform/pricing/"&gt;three tiers&lt;/a&gt;, the prices are not transparent, you will have to contact them to get more information.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Standard: 2-3 connections&lt;/li&gt;
&lt;li&gt;Professional: 5 connections&lt;/li&gt;
&lt;li&gt;Enterprise: 8 or more connections &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;+100&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#fusebit"&gt;
  &lt;/a&gt;
  Fusebit
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F04NNjdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqnb7hfyc6y4snm1se94.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F04NNjdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqnb7hfyc6y4snm1se94.png" alt="Image description" width="880" height="439"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fusebit.io/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=post-7-best&amp;amp;utm_content=liz"&gt;Fusebit&lt;/a&gt; is a powerful integration platform that allows you to build integrations for your SaaS applications in minutes. It’s code-first and you can create connectors, code your logic, deploy your integration, and reduce integration engineering cost by 7x. Fusebit takes away the pain of developing against many disparate APIs while maintaining the flexibility and familiarity of a code-first platform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code-first solution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using a no-code solution to create an integration sounds good on the surface, but usually, those integrations don't do exactly what your customers want, due to limitations in the visual authoring model. The Fusebit platform allows you to create flexible integrations that your customers will love, with full support for Node.js and the npm package ecosystem&lt;/p&gt;

&lt;p&gt;Fusebit was built for developers by developers to let you focus your time on the core integration logic while Fusebit takes the boilerplate off your plate. Our robust multi-tenant runtime keeps your customer data secure, while embeddable white-label configuration and lifecycle management components make you substantially more productive. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Because of its code-first solution, Fusebit is highly flexible and allows you to create powerful integrations that fulfill all your customer's requirements. Working with other platforms, you might encounter a functionality cliff you can’t get past, since there are specific integrations that can only be achieved through code. Fusebit is flexible enough that you will never find yourself in that situation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Fusebit works on the cloud and it can be deployed to a customer's AWS cloud instance if required (known as private cloud), which gives businesses many of the benefits of a public cloud - including self-service, scalability, and elasticity - with the additional data privacy and compliance controls enabled by dedicated resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fusebit was built for developers, but uses accessible JavaScript to make it possible for anybody technical to use it, regardless of role&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can find support on the chat in the webpage, in the &lt;a href="https://developer.fusebit.io/docs"&gt;developer documentation&lt;/a&gt;, in &lt;a href="https://fusebit.io/contact/"&gt;slack, discord&lt;/a&gt; and &lt;a href="mailto:contact@fusebit.io"&gt;contact@fusebit.io&lt;/a&gt; email.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fusebit is the only iPaaS that's purely for embedded use cases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fusebit.io/pricing/"&gt;There are 3 tiers&lt;/a&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Developer: Free forever and 10 connectors&lt;/li&gt;
&lt;li&gt;Team: $199/mo and 30 connectors&lt;/li&gt;
&lt;li&gt;Business: Custom pricing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fusebit supports Slack, HubSpot, Salesforce, GitHub, Linear, Jira, Confluence, PagerDuty among others, and tens of new connectors are added monthly. Fusebit is an open model, meaning that you can create and add your own connector &lt;a href="https://github.com/fusebit/integrations"&gt;in this repository&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#integrations-platforms-chart"&gt;
  &lt;/a&gt;
  Integrations Platforms Chart
&lt;/h3&gt;

&lt;p&gt;Finally, you can check the chart below where you can find where the platforms are located taking into account: developer-friendly, no-code solution, embedded and standalone:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jJiYe-RC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ay9cotn59gewek035sgd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJiYe-RC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ay9cotn59gewek035sgd.png" alt="Image description" width="512" height="246"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-do-you-think"&gt;
  &lt;/a&gt;
  What do you think?
&lt;/h1&gt;

&lt;p&gt;What is your favorite integration platform? &lt;a href="https://twitter.com/fusebitio"&gt;Tell us what you think&lt;/a&gt; about the platforms here or let us know if we are missing one.&lt;/p&gt;

</description>
      <category>integrations</category>
    </item>
    <item>
      <title>Windows 22, for Browser Dark</title>
      <author>Abdul Rehman</author>
      <pubDate>Wed, 17 Nov 2021 16:10:08 +0000</pubDate>
      <link>https://dev.to/abdulrrehman0/windows-22-for-browser-dark-3723</link>
      <guid>https://dev.to/abdulrrehman0/windows-22-for-browser-dark-3723</guid>
      <description>&lt;p&gt;Windows 22 for browser using HTML,CSS, JS&lt;/p&gt;

&lt;p&gt;Hey Devs,&lt;br&gt;
From few days after making Windows 11 abd windows 12 i tried my best to make Windows 22 ui.&lt;br&gt;
I make it by using Html,Css,Js&lt;br&gt;
As a beginner, I tried my best in it.&lt;/p&gt;

&lt;p&gt;Live demo : &lt;a href="https://win22.netlify.app/"&gt;https://win22.netlify.app/&lt;/a&gt;&lt;br&gt;
Live demo : &lt;a href="https://win22.netlify.app/"&gt;https://win22.netlify.app/&lt;/a&gt;&lt;br&gt;
Live demo : &lt;a href="https://win22.netlify.app/"&gt;https://win22.netlify.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also try Windows 11 and wis it also a very awesome project.&lt;/p&gt;

&lt;p&gt;Window 11: &lt;a href="https://window-11.netlify.app/"&gt;https://window-11.netlify.app/&lt;/a&gt;&lt;br&gt;
Window 12: &lt;a href="https://window-11.netlify.app/"&gt;https://window-11.netlify.app/&lt;/a&gt;&lt;br&gt;
Window 11 dev.to: &lt;a href="https://bit.ly/3FdcPij"&gt;https://bit.ly/3FdcPij&lt;/a&gt;&lt;br&gt;
Window 12 dev.to :&lt;a href="https://bit.ly/3cndOAk"&gt;https://bit.ly/3cndOAk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By :Abdul Rehman&lt;/p&gt;

&lt;p&gt;About Me:&lt;br&gt;
I am 14 years old boy From Lahore, Pakistan. I am interested in things related to computer and internet. I started my journey as a Web Developer From April, 2021 and start learning web development from YouTube and created Windows 11,windows 12,windows 22 that is really awesome please Try once. I make these windows on my PC(Which is too much slow) with 2gb ram and 32gb HDD(10gb usable).&lt;br&gt;
Thank You.&lt;br&gt;
I need your support.&lt;br&gt;
Your one comment is a source of motivation for me.&lt;br&gt;
Thanks again..&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Develop a Spam Filtering Model in Python &amp; Deploy it with Django</title>
      <author>paulsaul621</author>
      <pubDate>Wed, 17 Nov 2021 15:30:09 +0000</pubDate>
      <link>https://dev.to/paulwababu/develop-a-spam-filtering-model-in-python-deploy-it-with-django-2pco</link>
      <guid>https://dev.to/paulwababu/develop-a-spam-filtering-model-in-python-deploy-it-with-django-2pco</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Spam is a fact of life on the internet. If you enable comments or contact sections on your website, you will have to deal with spammers. To prevent your site from making a poor first impression, you’ll need to find a way to stop spam in its tracks. This is especially important if you are developing a website without a content management system like Wordpress as they come bundled with spam filtering plugins. You could also use an API like &lt;a href="https://akismet.com/"&gt;Akismet&lt;/a&gt;, however this comes at a cost, which can be avoided by implementing a relatively accurate model of your own.&lt;/p&gt;

&lt;p&gt;Kaggle and other data science bootcamps are great for learning how to build and optimize models, but they don’t teach you how to actually use this models in real world scenarios, where there’s a major difference between building a model, and deploying it to be used by end users on the internet. &lt;/p&gt;

&lt;p&gt;In this tutorial, you’re going to build an SMS spam detection web application. This application will be built in Python using the Django framework, and will include a deep learning model that you will train to detect SMS spam by leveraging the Naive Bayes theorem. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#naive-bayes-classification"&gt;
  &lt;/a&gt;
  Naive Bayes classification
&lt;/h2&gt;

&lt;p&gt;The classification of Naive Bayes is a simple probability algorithm based on the fact that all model characteristics are independent. We assume that every word in the message is independent of all other words in the context of the spam filters, and we count them with the ignorance of the context.&lt;/p&gt;

&lt;p&gt;By the state of the current set of terms, our classification algorithm generates probabilities of the message to be spam or not spam. The probability estimation is based on the Bayes formula, and the formula components are determined on the basis of the word frequencies in the whole message package.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#model-building"&gt;
  &lt;/a&gt;
  Model Building
&lt;/h2&gt;

&lt;p&gt;The data is a collection of SMS messages tagged as spam or ham that can be found &lt;a href="https://raw.githubusercontent.com/paulwababu/datasets/main/spam.csv"&gt;here&lt;/a&gt;. First, we will use this dataset to build a prediction model that will accurately classify which texts are spam and which are not, then save the model to be used later for predictions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exploration-of-dataset"&gt;
  &lt;/a&gt;
  Exploration of dataset
&lt;/h2&gt;

&lt;p&gt;The first thing that should be done is to import dependencies. If you do not have the libraries installed, kindly do so before proceeding.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report
import joblib
import pickle
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we load the dataset using pandas:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df = pd.read_csv('https://raw.githubusercontent.com/paulwababu/datasets/main/spam.csv', encoding = 'latin-1')
print(df.head())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Drop the unwanted columns, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df.drop(['Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4'], axis=1, inplace=True)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have to convert the non-numerical column 'spam' and 'ham' into numerical values using pandas map() function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df['label'] = df['v1'].map({'ham': 0, 'spam': 1})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we have to separate the feature columns(independent variables) from the target column(dependent variable).&lt;/p&gt;

&lt;p&gt;The feature columns are the columns that we try to predict from, and the target column is the column with the values we try to predict.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;X = df['v2'] 
y = df['label']

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#ml-model-building"&gt;
  &lt;/a&gt;
  ML Model Building
&lt;/h2&gt;

&lt;p&gt;Let us now proceed to building our actual model.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cv = CountVectorizer()
X = cv.fit_transform(X) 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)
model = MultinomialNB()
model.fit(X_train,y_train)
#model.score(X_test,y_test)
y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;              precision    recall  f1-score   support

           0       0.99      0.99      0.99      1587
           1       0.93      0.92      0.92       252

    accuracy                           0.98      1839
   macro avg       0.96      0.95      0.96      1839
weighted avg       0.98      0.98      0.98      1839
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not only Naive Bayes classifier easy to implement but also provides very good result. &lt;/p&gt;

&lt;p&gt;In the code above, we create a vectorize function that transforms a given text into a vector on the basis of the frequency (count) of each word that occurs in the entire text. We then proceed to splitting the data into train and test variables which we use to get the classification report of the model. We then call the multinomial Naive Bayes model which is suitable for classification with discrete features (e.g., word counts for text classification)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#model-and-vectorizer-persistence"&gt;
  &lt;/a&gt;
  Model and Vectorizer Persistence.
&lt;/h2&gt;

&lt;p&gt;After training the model, we should to have a way to persist the model for future use without having to retrain. To achieve this, need to save the model for the later use. Add the following lines of code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Save the model
joblib_file = "MultinomialNaiveBayesModel.joblib"
joblib.dump(clf, joblib_file) 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to save the vectorize function that we created earlier otherwise you throw it away because a vectorizer once created, doesn't exist past the lifetime of your vectorize function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Save the vectorizer
vec_file = 'MultinomialNaiveBayesModelVectorizer.pickle'
pickle.dump(cv, open(vec_file, 'wb'))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we intend to retrain the model, we can use the partial_fit function in order to keep improving the model incase of model degradation over time. I will post a blog later that addresses how to identify and correct &lt;a href="https://www.section.io/engineering-education/correcting-data-shift/#:~:text=Prior%20probability%20shift%20is%20characterized,the%20reverse%20of%20covariate%20shift.&amp;amp;text=If%20the%20prior%20probabilities%20are,50%25%20non%2Dspam%20mail."&gt;dataset shift in machine learning&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#turning-the-spam-message-classifier-into-a-django-web-application"&gt;
  &lt;/a&gt;
  Turning the Spam Message Classifier into a Django Web Application
&lt;/h2&gt;

&lt;p&gt;Having trained and saved the model for classifying SMS messages in the previous section, we will develop a web application that consists of a simple web page with a form field that lets us enter a message. After submitting the message to the web application, it will render it on a new page which gives us a result of spam or not spam.&lt;/p&gt;

&lt;p&gt;Below is snapshot of the final implementation&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5bzq99ry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637150283253/YWtssz89w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5bzq99ry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637150283253/YWtssz89w.png" alt="CfyuGX7l5aBe6TuCx-PjciFKywPM_rAAmOCaJcTuStURvV.width-800.png" width="800" height="326"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following Python best practices, we will create a virtual environment for our project, and install the required packages.&lt;/p&gt;

&lt;p&gt;First, create the project directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ mkdir djangoapp
$ cd djangoapp

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, create a virtual environment and install the required packages.&lt;/p&gt;

&lt;p&gt;For macOS and Unix systems:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ python3 -m venv myenv
$ source myenv/bin/activate
(myenv) $ pip install django requests numpy joblib scikit-learn

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For Windows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ python3 -m venv myenv
$ myenv\Scripts\activate
(myenv) $ pip install django requests numpy joblib scikit-learn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#setting-up-your-django-application"&gt;
  &lt;/a&gt;
  Setting Up Your Django Application
&lt;/h2&gt;

&lt;p&gt;First, navigate to the directory djangoapp we created and establish a Django project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(myenv) $ django-admin startproject mainapp

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will auto-generate some files for your project skeleton:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mainapp/
    manage.py
    mainapp/
        __init__.py
        settings.py
        urls.py
        asgi.py
        wsgi.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, navigate to the directory you just created (make sure you are in the same directory as manage.py) and create your app directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(myenv) $ python manage.py startapp monitor
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;monitor/
    __init__.py
    admin.py
    apps.py
    migrations/
        __init__.py
    models.py
    tests.py
    views.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the mainapp/settings.py file, look for the following line and add the app we just created above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'monitor', #new line
]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ensure you are in the monitor directory then create a new directory called templates then a new file called urls.py. Your directory structure of monitor application should look like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;monitor/
    __init__.py
    admin.py
    apps.py
    migrations/
    templates/
        __init__.py
    models.py
    tests.py
    urls.py
    views.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ensure your mainapp/urls.py file, add our monitor app URL to include the URLs we shall create next on the monitor app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    #path('admin/', admin.site.urls),
    path('', include('monitor.urls')),#monitor app url
]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, on the monitor/urls.py file, add our website there:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.urls import path
from .views import *

urlpatterns = [
    path('', views.sms, name = 'sms'),
    path('inbox/', views.inbox, name='inbox')
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s create another directory to store our machine learning model. I’ll also add the dataset to the project for those who want to achieve the whole dataset. (It is not compulsory to create a data folder.) Be sure to move the vectorizer file and the joblib file we created earlier to ml/model folder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(venv)$ mkdir ml
(venv)$ mkdir ml/models
(venv)$ mkdir ml/data
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to tell Django where our machine learning model and our vectorizer file is located. Add these lines to settings.py file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
MODELS = os.path.join(BASE_DIR, 'ml/models')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#load-model-and-vectorizer-through-appspy"&gt;
  &lt;/a&gt;
  Load Model and Vectorizer through apps.py
&lt;/h2&gt;

&lt;p&gt;Load your machine learning models and your vectorizer in apps.py so that when the application starts, the trained model is loaded only once. Otherwise, the trained model is loaded each time an endpoint is called, and then the response time will be slower. &lt;/p&gt;

&lt;p&gt;Let’s update apps.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
import joblib
from django.apps import AppConfig
from django.conf import settings


class ApiConfig(AppConfig):
    name = 'api'
    MODEL_FILE = os.path.join(settings.MODELS, "MultinomialNaiveBayesModel.joblib")
    model = joblib.load(MODEL_FILE)

class VectorizerConfig(AppConfig):
    name = 'api2'
    MODEL_FILE = os.path.join(settings.MODELS, "MultinomialNaiveBayesModelVectorizer.pickle")
    model = joblib.load(MODEL_FILE)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#edit-modelspy"&gt;
  &lt;/a&gt;
  Edit models.py
&lt;/h2&gt;

&lt;p&gt;Create our database models which we shall use to store our classified models. On the monitor/models.py file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.db import models

# Create your models here.
class Monitor2(models.Model):
    message = models.CharField(max_length=50, blank=True, null=True)
    SPAM = 1
    HAM = 0
    IS_SPAM_OR_NAH = [(SPAM, 'spam'), (HAM, 'not_spam')]
    messageClassified = models.IntegerField(choices=IS_SPAM_OR_NAH, null=True)
    contact = models.CharField(max_length=50, blank=True, null=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#edit-viewspy"&gt;
  &lt;/a&gt;
  Edit views.py
&lt;/h2&gt;

&lt;p&gt;The views will be mainly responsible for two tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Process incoming POST requests.&lt;/li&gt;
&lt;li&gt;Make a prediction with the incoming data and give the result as a Response.&lt;/li&gt;
&lt;li&gt;Display the classified text into a HTML template.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
from datetime import datetime
from .models import *
from django.shortcuts import render, redirect


def sms(request):
    if request.method == 'POST':
        number = request.POST['contact']
        message = request.POST['message']
# datetime object containing current date and time
        now = datetime.now()    
        now = now.strftime("%d/%m/%Y %H:%M:%S")

        naiveModel = ApiConfig.model
        naiveVect = VectorizerConfig.model
        convertString = str(message)
        message = convertString
        data = [message]
        vect = naiveVect.transform(data).toarray()
        my_prediction = naiveModel.predict(vect)
        print(my_prediction)
        saveNow = Monitor2(
            message=message,
            messageClassified=my_prediction,
            contact=number
        )
        saveNow.save()
    return render(request, 'sms.html')

#inbox view
def inbox(request):
    dataSaved = Monitor2.objects.all()
    data = {
        "dataSaved": dataSaved,
    }
    print(data)
    return render(request, 'inbox.html', data)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the monitor/templates folder, create sms.html and inbox.html web page and add the lines below:&lt;/p&gt;

&lt;p&gt;monitor/templates/sms.html file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;form id="myform" method="POST"&amp;gt;
        {% csrf_token %}
          &amp;lt;div class="row"&amp;gt;
              &amp;lt;div class="col-6 form-group"&amp;gt;
                  &amp;lt;input type="text" name="name1" class="form-control p-4" placeholder="Your Name" required="required"&amp;gt;
              &amp;lt;/div&amp;gt;
              &amp;lt;div class="col-6 form-group"&amp;gt;
                  &amp;lt;input type="text" name="contact" class="form-control p-4" placeholder="Your Contact" required="required"&amp;gt;
              &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class="form-group"&amp;gt;
              &amp;lt;textarea class="form-control py-3 px-4" name="message" rows="5" placeholder="Message" required="required"&amp;gt;&amp;lt;/textarea&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div&amp;gt;
              &amp;lt;button class="btn btn-primary py-3 px-5" type="submit"&amp;gt;Send Message&amp;lt;/button&amp;gt;
          &amp;lt;/div&amp;gt;
      &amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;monitor/templates/inbox.html file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;style&amp;gt;
table, th, td {
  border:1px solid black;
}
&amp;lt;/style&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;h2&amp;gt;A basic HTML table&amp;lt;/h2&amp;gt;

&amp;lt;table style="width:100%"&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;th&amp;gt;#&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;From&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;Body&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;Classification&amp;lt;/th&amp;gt;
    &amp;lt;/tr&amp;gt;
  {% for x in dataSaved %}
  &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;{{ loop.index }}&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;{{ x.contact }}&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;{{ x.message }}&amp;lt;/td&amp;gt;
      {% if x.messageClassified == 1 %}
      &amp;lt;td&amp;gt;Spam&amp;lt;/td&amp;gt;
      {% else %}
      &amp;lt;td&amp;gt;Non Spam&amp;lt;/td&amp;gt;
      {% endif %}
  &amp;lt;/tr&amp;gt;
  {% endfor %}
&amp;lt;/table&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make the necessary migrations like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(myenv) $ python manage.py makemigrations
(myenv) $ python manage.py migrate
(myenv) $ python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#testing-if-it-works"&gt;
  &lt;/a&gt;
  Testing if it works!
&lt;/h2&gt;

&lt;p&gt;Head over &lt;a href="http://127.0.0.1:8000"&gt;http://127.0.0.1:8000&lt;/a&gt; and complete the form with both spam and non spam&lt;/p&gt;

&lt;p&gt;Proceed to &lt;a href="http://127.0.0.1:8000/inbox"&gt;http://127.0.0.1:8000/inbox&lt;/a&gt; to check out the classified data! Below is a snapshot of my implementation, sorry I couldn't make the CSS;(&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tt-_QaVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637159575230/G4Yj5QNXf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tt-_QaVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637159575230/G4Yj5QNXf.png" alt="Screenshot from 2021-11-17 17-32-30.png" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-staying-tuned"&gt;
  &lt;/a&gt;
  Thanks for staying tuned!
&lt;/h3&gt;

</description>
      <category>algorithms</category>
      <category>django</category>
      <category>machinelearning</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What Is Crypto and How Does It Work ?</title>
      <author>Bek Brace</author>
      <pubDate>Wed, 17 Nov 2021 15:27:25 +0000</pubDate>
      <link>https://dev.to/bekbrace/what-is-crypto-and-how-does-it-work--3h0k</link>
      <guid>https://dev.to/bekbrace/what-is-crypto-and-how-does-it-work--3h0k</guid>
      <description>&lt;p&gt;I hate changes ! I like to use what I know and what I'm used to use .. if that makes any sense!&lt;br&gt;
I love real cigarettes (when I used to smoke!) and never had Vype or e-cigarettes, I like to date real women drinking coffee and having a human interaction [have you seen that video in Japan where there was a wedding between a man and his digital girlfriend living in a hologram ?!] and of course I love real money in coin and paper ..&lt;/p&gt;

&lt;p&gt;As technology evolves, things around us change, take a look to Zuckerberg's Meta where he wants to have a paralel world using Augmented reality, where people live virtually and trade virtually using digital money .. the term “digital money” is frequently used to characterize cryptocurrency. While this definition is accurate, it falls short of capturing what makes cryptocurrency so special and intriguing to so many investors.&lt;/p&gt;

&lt;p&gt;Let's talk a little bit about "what is Crypto?"&lt;/p&gt;

&lt;p&gt;Cryptocurrency is, at its foundation, a value system. &lt;br&gt;
When you buy a cryptocurrency, you then are betting that the asset’s value will rise in the future, similar to how stock market investors purchase securities in the hopes of seeing the company’s stock price rise .. exact same concept&lt;/p&gt;

&lt;p&gt;Stock values are based on discounted projections of future cash flows .. and because there is no underlying corporation, there is no valuation metric for cryptocurrencies; the value of a cryptocurrency is solely determined by investor appetite [acquiring or getting rid of] !&lt;/p&gt;

&lt;p&gt;Now the two elements that determine the cryptocurrency’s value are :&lt;br&gt;
1- The chance of other investors buying whatever cryptocurrency they want.&lt;br&gt;
2- The utility of that cryptocurrency’s blockchain &lt;/p&gt;

&lt;p&gt;Let's discuss this further and ask :&lt;br&gt;
What is cryptocurrency really and how does it actually work?&lt;/p&gt;

&lt;p&gt;Blockchain technology is the heart and sould of cryptocurrency, but what exactly is a blockchain?&lt;/p&gt;

&lt;p&gt;Simply put, a blockchain is a digital ledger of transactions. This database (or ledger) is shared over a network of computer systems. The ledger is not controlled by a single system. Instead, a blockchain is maintained and transactions are authenticated by a decentralized network of computers.&lt;/p&gt;

&lt;p&gt;Those who are in favor of blockchain technology [ and I - miraculously - became one of them!] claim that it can improve data openness, trust, and security when shared across a network. &lt;/p&gt;

&lt;p&gt;Detractors claim that blockchain is inconvenient, inefficient, expensive, and wasteful of energy.&lt;/p&gt;

&lt;p&gt;If a rational crypto investor believes in the power and utility of a digital asset’s underlying blockchain, they will purchase it. All cryptocurrencies are built on the blockchain, which means that crypto investors are betting (whether they realize it or not) on the blockchain’s robustness and attractiveness.&lt;/p&gt;

&lt;p&gt;On the underlying blockchain, cryptocurrency transactions are recorded in eternity. In the form of ‘blocks,’ groups of transactions are added to the ‘chain,’ which authenticate the transactions’ legitimacy and keep the network up and operating. The shared ledger, which is open to the public, records all batches of transactions. Anyone can look at the transactions on the biggest blockchains, such as Bitcoin (BTC) and Ethereum (ETH), at any time (ETH).&lt;/p&gt;

&lt;p&gt;However, why do users devote computing resources to verifying blockchain transactions?&lt;/p&gt;

&lt;p&gt;They are compensated with the underlying cryptocurrency, to be sure. A proof-of-work (PoW) mechanism is an incentive-driven system. Miners are the computers that ‘work’ to ‘verify’ the authenticity of blockchain transactions. Miners receive freshly generated crypto currencies in exchange for their energy.&lt;/p&gt;

&lt;p&gt;By the way, I am preparing some quick tutorials with streamlit on blockchain and crypto, if you're into Python programming, I think you'll like it :)&lt;/p&gt;

&lt;p&gt;Back to our crypto-talk .. So, cryptocurrency investors - and this could be you -  do not keep their funds in regular bank accounts, right? You have digital addresses instead. These addresses include private and public keys, which are long sequences of numbers and letters that allow cryptocurrency users to send and receive money. Unlocking and sending cryptocurrency requires private keys. Public keys are made available to the public and allow the possessor to receive cryptocurrency from anyone.&lt;/p&gt;

&lt;p&gt;Bitcoin, without a doubt, has shifted the paradigm; there has never been anything quite like it before, and it has created an altogether new platform for investing, and a new way of thinking about money.&lt;/p&gt;

&lt;p&gt;I still love real things , but to tell the truth cryptocurrency is the future of global finance, maybe next year maybe in 10 or 20 years, either way it's gonna happen and you better be ready.&lt;/p&gt;

</description>
      <category>bigdata</category>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>A better way to discover junior front-end developers</title>
      <author>Matt Studdert</author>
      <pubDate>Wed, 17 Nov 2021 15:12:17 +0000</pubDate>
      <link>https://dev.to/frontendmentor/a-better-way-to-discover-junior-front-end-developers-58e6</link>
      <guid>https://dev.to/frontendmentor/a-better-way-to-discover-junior-front-end-developers-58e6</guid>
      <description>&lt;p&gt;Since launching the &lt;a href="https://www.frontendmentor.io/"&gt;Frontend Mentor platform&lt;/a&gt; in April 2019, our community has grown to over 250,000 members (🎉). The idea for Frontend Mentor came to me when I was teaching front-end web development at General Assembly. I wanted to make it easier for my students to practice and create projects for their portfolios.&lt;/p&gt;

&lt;p&gt;Our projects, or "challenges", mimic a real-life workflow for a front-end developer. In a professional setting, a designer would do the design work, and it would then be the developer’s job to recreate it in code.&lt;/p&gt;

&lt;p&gt;Our challenges help developers focus on what developers do best: writing code. We come up with the project ideas and the designs; our community builds the projects to help improve their coding skills. Not only does this mean they gain hands-on experience working from realistic designs, but it also means our community members end up with a professional-looking portfolio of beautiful projects!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBKHCB8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dz209s6jk/image/upload/v1637154220/Articles/design-screenshot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBKHCB8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dz209s6jk/image/upload/v1637154220/Articles/design-screenshot.png" alt="Example screenshot of a Frontend Mentor challenge Figma design file" width="880" height="620"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Example screenshot of a Frontend Mentor challenge Figma design file&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It's been incredible to see Frontend Mentor grow into a vibrant, positive community where everyone supports each other. &lt;/p&gt;

&lt;p&gt;As we've looked for more ways to help our community, we found one common theme: &lt;strong&gt;it's hard to land junior roles&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Recurring sticking points include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Companies often have unrealistic expectations. For example, it's not uncommon to see junior roles advertised requiring several years of experience.&lt;/li&gt;
&lt;li&gt;Many interview processes include whiteboarding assessments based on algorithms, even for junior front-end roles.&lt;/li&gt;
&lt;li&gt;Good junior job listings are often hyper-competitive. Some even receive hundreds of applications in the first day or two of being advertised.&lt;/li&gt;
&lt;li&gt;Companies are often vague about their salary ranges, interview process, and training paths.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Helping our community find work has always been a goal of Frontend Mentor. To better understand the problem, we started talking to people in hiring positions to see if they also experienced difficulties hiring juniors. &lt;/p&gt;

&lt;p&gt;It very quickly became apparent that they did! Common issues people in hiring positions highlighted when hiring juniors include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There’s no clear “best” strategy for discovering junior talent. Companies often use a mixture of job listings, partnerships with educational institutions, trawling LinkedIn, and getting recommendations from existing employees. &lt;/li&gt;
&lt;li&gt;Large numbers of applicants, many of whom don't meet the specified criteria. This means companies are often drowning in a sea of resumés and cover letters.&lt;/li&gt;
&lt;li&gt;The resumé and cover letter review process is often very high level and error-prone, so it's easy for talented developers to slip through the net.&lt;/li&gt;
&lt;li&gt;GitHub profiles can be hard to navigate when trying to find suitable projects to assess skills.&lt;/li&gt;
&lt;li&gt;Portfolio projects can often be old, and the developer might have only had a small role in the codebase.&lt;/li&gt;
&lt;li&gt;Portfolio projects for juniors often don't look great (after all, developers are not designers), so it can be hard to see past the UI/UX and focus on the code.&lt;/li&gt;
&lt;li&gt;There's no track record to base decisions on, so finding the right developer can be a lottery.&lt;/li&gt;
&lt;li&gt;The process is often bloated and inefficient. There can be many stages, including initial applications, resumé review, screening calls, technical tests, in-person interviews, and more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After talking to a wide range of people, we believe we're in a unique position: we have an opportunity to help both the developers within our community and companies looking to hire juniors.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#introducing-the-frontend-mentor-hiring-platform"&gt;
  &lt;/a&gt;
  Introducing the Frontend Mentor Hiring platform
&lt;/h2&gt;

&lt;p&gt;Due to launch in early 2022, we've started working on a hiring platform to complement our learning platform. Our mission will be to help connect great companies with our incredible developer community.&lt;/p&gt;

&lt;p&gt;Our first offering within the hiring platform will be called Talent Search, which will enable companies to search for developers using specific criteria. This includes attributes like experience, skills, and location. Talent Search will then surface the developers on our platform that best match these criteria.&lt;/p&gt;

&lt;p&gt;Talent Search will make it possible to proactively search for developers instead of waiting for people to apply to open roles. In a sea of resumés and cover letters, so many talented developers can slip through the cracks with traditional job applications. Our goal is to let the completed projects and code reviews posted speak for themselves. This will provide incredible insights into developers' talent, knowledge, and written communication skills.&lt;/p&gt;

&lt;p&gt;It might even help bypass a stage or two of the hiring process, saving time and money. We've had numerous developers in the community who have been hired based on the strength of their Frontend Mentor projects. After a technical conversation about their projects and an interview, they've received job offers. We’d love to make this a regular occurrence!&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--EOX3mYX0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1143128450074648576/GFvxviNV_normal.jpg" alt="Marko Nikolajević profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Marko Nikolajević
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @markez1317
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      In a few weeks I’ll start a new job as &lt;a href="https://twitter.com/angular"&gt;@angular&lt;/a&gt; developer☺️ the funny thing is that they didn’t aske any test to do thanks to projects I made from &lt;a href="https://twitter.com/frontendmentor"&gt;@frontendmentor&lt;/a&gt; &lt;a href="https://twitter.com/_mattstuddert"&gt;@_mattstuddert&lt;/a&gt; 🎉🎉🎉 &lt;a href="https://twitter.com/hashtag/angular"&gt;#angular&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/FrontEndDeveloper"&gt;#FrontEndDeveloper&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/frontendmentor"&gt;#frontendmentor&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:03 PM - 23 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1429791321703829513" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1429791321703829513" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1429791321703829513" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The developers will have to state that they're available for work through their settings. If a developer doesn't opt-in, they won't show up on the hiring platform. Showing only the developers looking for work will filter out the noise for hiring managers. It will also ensure our developers aren't receiving unsolicited messages when they're not looking for a new job.&lt;/p&gt;

&lt;p&gt;We have lots of ideas for the hiring platform, but we'll start with our Talent Search offering and evolve it from there based on feedback.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-you-do"&gt;
  &lt;/a&gt;
  What can you do?
&lt;/h2&gt;

&lt;p&gt;If you're involved in your company's hiring process, please &lt;a href="https://www.frontendmentor.io/hiring"&gt;check out the hiring platform page on Frontend Mentor&lt;/a&gt;, where you can learn more and sign up for our waitlist.&lt;/p&gt;

&lt;p&gt;If you're already a professional developer, please share with anyone in your organization who is part of the developer hiring process.&lt;/p&gt;

&lt;p&gt;We'll launch a closed beta before our public launch. We'd love to get as much feedback as possible to provide a great solution that works for everyone. Also, if you've got any questions, please feel free ask!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>news</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Optymize: Hire Remote Engineers | Top Software Developers</title>
      <author>Optymize</author>
      <pubDate>Wed, 17 Nov 2021 15:06:32 +0000</pubDate>
      <link>https://dev.to/optymize123/optymize-hire-remote-engineers-top-software-developers-5b93</link>
      <guid>https://dev.to/optymize123/optymize-hire-remote-engineers-top-software-developers-5b93</guid>
      <description>&lt;p&gt;Optymize is a worldwide technical talent marketplace that connects companies with verified, remote engineers who have robust technical &amp;amp; communication skills and work in their timezone. A number of leading companies like Sidewalk Labs, RD&amp;amp;X, Yello, and Planoly leverage Optymize to scale their engineering teams quickly and cost-effectively.&lt;br&gt;
Optymize verifies 3 essential qualities: technical ability, communication skills, and remote working capabilities. Companies can, with Optymize, hire developers of the best possible quality at affordable prices in under a week. They can screen and hire verified software developers across 100+ skills like React, Node, Python, Golang, Angular, Swift, Java, and many more. &lt;br&gt;
A distributed organization spanning three continents, Optymize is managed by ex-Goldman Sachs VP and leadership team with 15+ years of average technology experience.&lt;br&gt;
Join us at: &lt;a href="https://optymize.io"&gt;https://optymize.io&lt;/a&gt;&lt;br&gt;
Build your career through freelancer jobs for innovative companies&lt;br&gt;
Join a network of remote freelancers and work with high growth companies to get better&lt;br&gt;
compensation, more work flexibility, and mastery over your skills.&lt;br&gt;
Join Optymize: &lt;a href="https://optymize.io/freelancer/"&gt;https://optymize.io/freelancer/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Optymize is a marketplace which aims to fill the supply demand gap in hiring. They provide top quality vetted freelancers to innovative startups and small businesses looking to augment their tech teams within 48 hours. This comes at a time when companies are suffering from talent gaps and talented professionals are out of jobs due to travel restrictions. Optymize has supported companies such as Sidewalk Labs, RD&amp;amp;X, Yellow and Planoly.&lt;br&gt;
Optymize finds skilled and experienced engineers who are well-equipped with trending technologies, have good communication skills, and are experienced with remote working. Their vetting process consists of measuring technical skills, communication skills, and a psychometric analysis to figure out their behavioral traits. Technical assessment involves conceptual questions and coding challenges. Engineers submit their video resumes and also have to explain coding challenges during the interview process. The last stage involves a psychometric analysis which measures for personal traits and behavioral style. These assessments enable Optymize to get a holistic understanding of the candidate.&lt;br&gt;
Optymize refrains its clients from complicated and longer onboarding processes by providing a client-friendly environment as well as being quick. They onboard clients through a three-step process. Firstly, an introductory call where they understand the specific hiring needs, followed by sourcing profiles according to the client’s need within 48 hours. The last step involves the client reviewing, interviewing, and onboarding their optimal hire.&lt;br&gt;
For Optymize, their process doesn’t end with providing an optimal hire. They provide constant support such as holding regular check-ins and monitoring freelancer performance. Their primary indicator of success is being their clients’ long-term partner for remote hiring. Moreover, they provide engineers who are good communicators, and willing to work during the client’s working hours.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>My favourite DevOps &amp; cloud native tools By Civo </title>
      <author>Aniket mishra</author>
      <pubDate>Wed, 17 Nov 2021 15:06:25 +0000</pubDate>
      <link>https://dev.to/aniketmishra/my-favourite-devops-cloud-native-tools-by-civo-6cl</link>
      <guid>https://dev.to/aniketmishra/my-favourite-devops-cloud-native-tools-by-civo-6cl</guid>
      <description>&lt;p&gt;Hello everyone,&lt;/p&gt;

&lt;p&gt;since I have been working in the DevOps space for a year now, I thought that it would be interesting to create an overview of my favourite cloud native tool. This is a list of tools that I either currently use or got to use within the previous year.&lt;/p&gt;

&lt;p&gt;I would love to hear from you about your favourite tools — and if I don't know them yet, I might create an overview video so please do reach out.&lt;/p&gt;

&lt;p&gt;All tools are divided by category — now there are maybe some tools that I have not thought of and will later on. Thus, this blog post will likely be a live update of my favourite tools.&lt;/p&gt;

&lt;p&gt;If you prefer the video version of this post, here is the accompanying YouTube video:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cicd-pipelines"&gt;
  &lt;/a&gt;
  CI/CD pipelines
&lt;/h2&gt;

&lt;p&gt;The CI/CD pipeline tool that you choose to use, either for your personal development needs or for your business, will highly depend on the version control system that you are already using and the resources that you have available. For instance, if you are already using GitLab, it makes sense to utilise the GitLab ecosystem. Similarly, when you are using GitHub, the GitHub ecosystem will likely be your preferred choice.&lt;/p&gt;

&lt;p&gt;When I started working in the cloud native ecosystem, I was first introduced to Codefresh. Codefresh is a really nice platform that is easy to use and will allow you to cover complex use cases while getting comprehensive insights into your deployments. However, I would argue that for most companies it is going to be an overkill and you would not actually need most of their features. Codefresh provides DevOps specific tools and Dashboards to provide you with additional insights into your deployments. Their platform is constantly evolving and not all features might be supported at the same level. Similarly, you have a chance to get access to an innovative platform that provides you with additional GitOps specific functionality. This is something that you are less likely to find on conventional platforms.&lt;/p&gt;

&lt;p&gt;Other than Codefresh, I have worked with GitHub Actions and GitLab CI. For most teams, I would argue that both provide enough functionality to aut7omate your deployments. In this case, I would make it dependent on where your project is hosted. With GitHub Actions, you will have a lot more community supports.&lt;/p&gt;

&lt;p&gt;For further information, have a look at this video I made providing an overview of GitHub Actions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/3LBLTGfVuj4"&gt;Introduction to GitHub Actions&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#observability"&gt;
  &lt;/a&gt;
  Observability
&lt;/h2&gt;

&lt;p&gt;I really really love using Grafana. It takes some time to get started and use it to its "best". However, once you figure out how to set up new dashboards for your data, it allows you to filter your metrics for the data that is useful for your application.&lt;/p&gt;

&lt;p&gt;Below is a gif from this examples tutorial on Katacoda that Bartek and I created a while ago. Try it out yourself! The link to the Katacoda tutorial is in the description of the repository.&lt;/p&gt;

&lt;p&gt;Furthermore, Grafana launched on-call functionality alongside other highly requested features during ObservabilityCON (8th to 10th of November). This, alongside Grafana alerts and other features, makes Grafana the go-to-tool for all things monitoring and observability that you can no longer live without.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kubernetes-provider"&gt;
  &lt;/a&gt;
  Kubernetes Provider
&lt;/h2&gt;

&lt;p&gt;I am highly biased here since I am working for Civo. However, if your main interest is Kubernetes clusters and you are looking for a managed solution, Civo has the best user experience. It is really easy to get started with AND your cloud bill will stay low. Many companies are already using Civo in production and you can get started too. Everything that can be built on k8s clusters can also be built on Civo k3s clusters.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/_aZLHlzuG9U"&gt;Civo Cloud Kubernetes Overview&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;For further information, have a look at this video I made providing an overview of Civo.&lt;/p&gt;

&lt;p&gt;Note that with the Prometheus operator on the marketplace, you can spin up your entire observability stack, including Prometheus and Grafana, alongside your Kubernetes cluster in just a few minutes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kubernetes-configurations-and-policy"&gt;
  &lt;/a&gt;
  Kubernetes Configurations and Policy
&lt;/h2&gt;

&lt;p&gt;I have talked about Datree a lot before — first of all, because you get it practically for free. Secondly, Kubernetes is difficult and Datree is THE tool that can make it a little bit easier for you to get started by checking your Kubernetes Manifests for any misconfiguration that might have been introduced. You can set policies and even customise policies to fit your application needs.&lt;/p&gt;

&lt;p&gt;For further information, have a look at this video I made providing an overview of Datree.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/MpdhrabnpYs"&gt;Verify Kubernetes Deployments with Datree&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#infrastructure"&gt;
  &lt;/a&gt;
  Infrastructure
&lt;/h2&gt;

&lt;p&gt;I work with Terraform on a daily basis for the past 6 months. The documentation is great. Once you have figured out a flow for your infrastructure setup and deployments, you will basically do the same thing every time you deploy new tools or you introduce any updates. Automating your testing and deployment process can help you save a lot of time in the long term.&lt;/p&gt;

&lt;p&gt;This video shows a simplified version of the flow that we have in place at Civo. If you are interested in what the use of Terraform may look like in production, then have a look at this Civo meetup recording.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/Qq1cfVw1Mx4"&gt;Full Tutorial: Deploying Helm Charts in Kubernetes with Terraform&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-native-to-the-extreme"&gt;
  &lt;/a&gt;
  Cloud Native to the extreme
&lt;/h2&gt;

&lt;p&gt;Those of you who already know me are aware of my constant involvement with Crossplane and how much I like to showcase its use. I've also had the chance to create the Civo-Crossplane provider — so, if you are already using Civo, you might want to have a look at Crossplane on how you can optimise your cloud native infrastructure management. Overall, I like Crossplane because it allows me to show how far cloud native resource management can go. Crossplane helps you to manage your infrastructure as Kubernetes resources, spin up and reconcile infrastructure like you would manage any other Kubernetes resources. If this got you curious, have a look at this overview video:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/Dw0SMLHZvXM"&gt;Tutorial Using Crossplane to Setup Your Azure Kubernetes Service: Day 25 of #100DaysOfKubernetes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h2&gt;

&lt;p&gt;Aqua Sec has several open source tools that allow you to scan your cloud native deployments for vulnerabilities. I am just getting started with Security-related tools. However, if this is something you are interested in, I would suggest having a look at Aqua Sec or Falco. (Maybe I will write a separate blog post about using their tools).&lt;/p&gt;

&lt;p&gt;FYI&lt;/p&gt;

&lt;p&gt;You might wonder why I am not including any "developer platforms". Hereby, I mean platforms that allow you to deploy containers on Kubernetes clusters with minimum effort. I have a very strong opinion on "end-to-end" platforms. If you would like to hear it, please do let me know and I am happy to make a separate video about it. However, this would detract from the tools that I have outlined in this post.&lt;/p&gt;

&lt;p&gt;Summarising&lt;br&gt;
The CNCF landscape is massive and as you can imagine, there is always "yet another tool to explore". Thus, this list will likely change over the next months or years. Maybe at some point, I will redo it completely. Until then, I hope this gave you some insights into the tools that I like to use (some of them on a daily basis) and the tools that I would generally recommend.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How Jason Docton Used React and WoW to Help People’s Mental Health</title>
      <author>Mikhail Karan</author>
      <pubDate>Wed, 17 Nov 2021 14:57:23 +0000</pubDate>
      <link>https://dev.to/mikhailkaran/how-jason-docton-used-react-and-wow-to-help-peoples-mental-health-l48</link>
      <guid>https://dev.to/mikhailkaran/how-jason-docton-used-react-and-wow-to-help-peoples-mental-health-l48</guid>
      <description>&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/0odZiJAdwMfi9aiaQD1RRW"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#episode-sponsor"&gt;
  &lt;/a&gt;
  Episode Sponsor
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Shortcut&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Project management has never been easier.&lt;/p&gt;

&lt;p&gt;We bring the flow to your software team's workflow. Plan, collaborate, build, and measure success with Shortcut.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://shortcut.com/hatt"&gt;FREE Trial for Shortcut&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-html-all-the-things"&gt;
  &lt;/a&gt;
  What is HTML All The Things
&lt;/h2&gt;

&lt;p&gt;HTML All The Things is a &lt;a href="https://podcast.htmlallthethings.com/"&gt;web development podcast&lt;/a&gt; and &lt;a href="https://discord.com/invite/jweMCx9"&gt;discord community&lt;/a&gt; which was started by Matt and Mike, developers based in Ontario, Canada. &lt;/p&gt;

&lt;p&gt;The podcast speaks to web development topics as well as running a small business, self-employment and time management. You can join them for both their successes and their struggles as they try to manage expanding their Web Development business without stretching themselves too thin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#announcements"&gt;
  &lt;/a&gt;
  Announcements
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Svelte for Beginners&lt;/strong&gt; Udemy course is now live! Mike took his experience in teaching and learning Svelte and created a course. &lt;/p&gt;

&lt;p&gt;This course will teach you the fundamentals of JavaScript frameworks. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get it now on Udemy!&lt;/strong&gt; 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/svelte-for-beginners/?couponCode=HATTSALE"&gt;Svelte For Beginners&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-this-one-about"&gt;
  &lt;/a&gt;
  What's This One About?
&lt;/h2&gt;

&lt;p&gt;In this episode Matt and Mike sit down with Jason Docton to discuss how his web development journey led him to help thousands of people with their mental health. Starting out in World of Warcraft, Jason helped fellow players find the help they needed with their mental health struggles. He started working alongside more people in-game, forming a guild of players willing to help. Fast forward to today, Jason is running RAD (Rise Above the Disorder) a website that has helped 38, 000 people in 133 countries so far. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/JasonDocton"&gt;Jason Docton's Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youarerad.org/"&gt;RAD - Nonprofit covering the cost of mental health care for everyone&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/youarerad/youarerad"&gt;RAD - Github if you want to contribute and help&lt;/a&gt;&lt;br&gt;
&lt;a href="https://osrg.t3.gg/"&gt;The Open Source Raid Guild&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#show-notes"&gt;
  &lt;/a&gt;
  Show Notes
&lt;/h2&gt;

&lt;p&gt;3:40 - What is your 'origin' story?&lt;br&gt;
17:05 - Is it true you taught yourself to code to launch your non-profit site Rise Above the Disorder?&lt;br&gt;
23:10 - How did you learn?&lt;br&gt;
46:25 - Developers are known to overexert themselves, What are some signs of burnout?&lt;br&gt;
57:00 - Passion projects vs work projects&lt;br&gt;
1:04:00 - What can you do to mitigate/prevent burnout?&lt;br&gt;
1:10:20 - When is the right time to reach out for help with mental health?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-takeaways"&gt;
  &lt;/a&gt;
  Key Takeaways
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Some people need professional mental health help&lt;/li&gt;
&lt;li&gt;Find the right people to learn from. The experts or first party sources in the technologies you're using&lt;/li&gt;
&lt;li&gt;The difference between a good developer and a great developer, is a great developer knows where to steal code from&lt;/li&gt;
&lt;li&gt;Big sign of burnout is when we start to find different ways to get away from what is causing us stress&lt;/li&gt;
&lt;li&gt;Create a boundary with work so you can disconnect&lt;/li&gt;
&lt;li&gt;When it feels like more days are struggling than not, that is the right time to reach out for help. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank you!
&lt;/h2&gt;

&lt;p&gt;If you're enjoying the podcast consider giving us a review on &lt;a href="https://podcasts.apple.com/us/podcast/html-all-things-web-development-web-design-small-business/id1412209136"&gt;Apple Podcasts&lt;/a&gt; or checking out our Patreon to get a shoutout on the podcast. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.patreon.com/htmlallthethings"&gt;Support us on Patreon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can find us on all the podcast platforms out there as well as&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/htmlallthethings/"&gt;Instagram (@htmlallthethings)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/htmleverything"&gt;Twitter (@htmleverything)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.tiktok.com/@htmlallthethings"&gt;TikTok (Html All The Things)&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>podcast</category>
      <category>mentalhealth</category>
    </item>
    <item>
      <title>Automate your Ibis eBook build process with this GitHub Action + Workflow</title>
      <author>Bobby Iliev</author>
      <pubDate>Wed, 17 Nov 2021 14:40:37 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/automate-your-ibis-ebook-build-process-no5</link>
      <guid>https://dev.to/bobbyiliev/automate-your-ibis-ebook-build-process-no5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;ibis-build-action&lt;/code&gt; action is a GitHub Action to automatically run your &lt;code&gt;ibis&lt;/code&gt; builds on push events to your &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/themsaid/ibis"&gt;Ibis&lt;/a&gt; is an open-source PHP tool that lets you write eBooks in Markdown. It was created by &lt;a href="https://github.com/themsaid"&gt;Mohamed Said&lt;/a&gt; who used it to generate his own eBook that he was writing at the time!&lt;/p&gt;

&lt;p&gt;Ibis has allowed me to create multiple eBooks already. However not everyone has PHP and Composer installed on their laptops, so people who contribute to your eBook project might not be able to export the PDF of your eBook after their changes.&lt;/p&gt;

&lt;p&gt;This is why I decided to create a GitHub Action that would let you automatically generate your Ibis builds directly on GitHub, without having PHP installed on your laptop.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Maintainer Must-Haves&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h2&gt;

&lt;p&gt;In order to automatically build your Ibis PDF files, create a directory called &lt;code&gt;.github/workflows/&lt;/code&gt; and add a fill called &lt;code&gt;ibis.yml&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Ibis eBook Generation&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@main&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;fetch-depth&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;0'&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build Ibis Export Files&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bobbyiliev/ibis-build-action@main&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
        &lt;span class="na"&gt;IBIS_PATH&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;./'&lt;/span&gt;
        &lt;span class="na"&gt;IBIS_BRANCH&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;main'&lt;/span&gt;
        &lt;span class="na"&gt;EMAIL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;bobby@bobbyiliev.com'&lt;/span&gt;
        &lt;span class="na"&gt;COMMIT_MESSAGE&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Updated&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Ibis&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Exorted&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Files'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#environment-variables"&gt;
  &lt;/a&gt;
  Environment Variables
&lt;/h3&gt;

&lt;p&gt;This is the list of the environment variables that you need to keep in mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GITHUB_TOKEN&lt;/code&gt;: Required for permission to tag the repo. You can leave it as it is.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;IBIS_PATH&lt;/code&gt;: The path to the Ibis init folder. By default it is &lt;code&gt;./&lt;/code&gt; but if you have a custom location, make sure to update it&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;IBIS_BRANCH&lt;/code&gt;: The Branch that the Ibis exported files will be commited and pushed to. Default is &lt;code&gt;main&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;EMAIL&lt;/code&gt;: The email address that the commit will be associated with.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;COMMIT_MESSAGE&lt;/code&gt;: The commit message.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h3&gt;

&lt;p&gt;You can find the &lt;code&gt;ibis-build-action&lt;/code&gt; GitHub Action repository here:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bobbyiliev"&gt;
        bobbyiliev
      &lt;/a&gt; / &lt;a href="https://github.com/bobbyiliev/ibis-build-action"&gt;
        ibis-build-action
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      GitHub Action to run ibis builds on merge
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
ibis-build-action&lt;/h1&gt;
&lt;p&gt;A GitHub Action to automatically run ibis builds on merge to &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/21223421/139258477-107b1da3-6c02-4a81-a827-d58380a43252.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NI6Ut4AK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21223421/139258477-107b1da3-6c02-4a81-a827-d58380a43252.png" alt="Ibis GitHub Action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
Ibis&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/themsaid/ibis"&gt;Ibis&lt;/a&gt; is a PHP tool that lets you write eBooks in Markdown.&lt;/p&gt;

&lt;h3&gt;
Usage&lt;/h3&gt;
&lt;p&gt;In order to automatically build your Ibis PDF files, create a directory called &lt;code&gt;.github/workflows/&lt;/code&gt; and add a fill called &lt;code&gt;ibis.yml&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;Ibis eBook Generation&lt;/span&gt;
&lt;span class="pl-ent"&gt;on&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;push&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;branches&lt;/span&gt;:
      - &lt;span class="pl-s"&gt;main&lt;/span&gt;

&lt;span class="pl-ent"&gt;jobs&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;build&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;runs-on&lt;/span&gt;: &lt;span class="pl-s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="pl-ent"&gt;steps&lt;/span&gt;:
    - &lt;span class="pl-ent"&gt;uses&lt;/span&gt;: &lt;span class="pl-s"&gt;actions/checkout@main&lt;/span&gt;
      &lt;span class="pl-ent"&gt;with&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;fetch-depth&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;Build Ibis Export Files&lt;/span&gt;
      &lt;span class="pl-ent"&gt;uses&lt;/span&gt;: &lt;span class="pl-s"&gt;bobbyiliev/ibis-build-action@main&lt;/span&gt;
      &lt;span class="pl-ent"&gt;env&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;GITHUB_TOKEN&lt;/span&gt;: &lt;span class="pl-s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
        &lt;span class="pl-ent"&gt;IBIS_PATH&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-ent"&gt;IBIS_BRANCH&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;main&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-ent"&gt;EMAIL&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bobby@bobbyiliev.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-ent"&gt;COMMIT_MESSAGE&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Updated Ibis Exorted Files&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Environment Variables&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GITHUB_TOKEN&lt;/code&gt;: Required for permission to tag the repo. You can leave it as it is.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;IBIS_PATH&lt;/code&gt;: The path to the Ibis…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bobbyiliev/ibis-build-action"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;ibis-build-action&lt;/code&gt; GitHub Action does the following things once added to your repository. &lt;/p&gt;

&lt;p&gt;Every time you push to &lt;code&gt;main&lt;/code&gt; or merge a PR to &lt;code&gt;main&lt;/code&gt; this workflow takes palce:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On push (or merge), the action will:

&lt;ul&gt;
&lt;li&gt;Clone the repository&lt;/li&gt;
&lt;li&gt;Run the &lt;code&gt;ibis build&lt;/code&gt; commands including the sample builds&lt;/li&gt;
&lt;li&gt;Stage and commit the new exported eBook files to the specified branch&lt;/li&gt;
&lt;li&gt;Pushes tag to GitHub&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k3WLPuuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/ZaQUbKc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k3WLPuuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/ZaQUbKc.png" alt="ibis-build-action screenshot of completed action" width="337" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will provide you with your eBook PDF file generated and stored in your repository's content folder.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ebook-projects-using-the-raw-ibisbuildaction-endraw-github-action"&gt;
  &lt;/a&gt;
  Ebook Projects using the &lt;code&gt;ibis-build-action&lt;/code&gt; GitHub action:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-docker-ebook"&gt;Introduction to Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;Introduction to Git and GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;Introduction to Bash Scripting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-sql"&gt;Introduction to SQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook"&gt;Laravel tips and tricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#alternative-approach"&gt;
  &lt;/a&gt;
  Alternative approach
&lt;/h4&gt;

&lt;p&gt;As brought up to my attention recently by &lt;a href="https://twitter.com/RmeetsH"&gt;Roberto B&lt;/a&gt;, in case that you need more flexibility about managing the PDF, rather than using the &lt;code&gt;ibis-build-action&lt;/code&gt; GitHub action, you can produce an artifact instead. &lt;/p&gt;

&lt;p&gt;Here is an example GitHub workflow provided by Robert which would do the same build but store the PDF as an artifact:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/roberto-butti/50-drops-of-php/blob/main/.github/workflows/build-sample.yml"&gt;Ibis artifact workflow&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Ibis is a great tool and in case that you are planning to write an eBook make sure to give it a try!&lt;/p&gt;

&lt;p&gt;By using the &lt;code&gt;ibis-build-action&lt;/code&gt; GitHub Action, you can automate your eBook PDF generation on each push to a specific branch and always have an up-to date export of your eBook!&lt;/p&gt;

&lt;p&gt;If you like this, make sure to follow me on Twitter:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/bobbyiliev_"&gt;@bobbyiliev &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope that this was helpful!&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>github</category>
      <category>git</category>
      <category>books</category>
    </item>
    <item>
      <title>Icon Navigation Bar With Animated Hover Effects</title>
      <author>Pasindu Codes</author>
      <pubDate>Wed, 17 Nov 2021 14:39:15 +0000</pubDate>
      <link>https://dev.to/pasinducodes/icon-navigation-bar-with-animated-hover-effects-3ec0</link>
      <guid>https://dev.to/pasinducodes/icon-navigation-bar-with-animated-hover-effects-3ec0</guid>
      <description>&lt;p&gt;Welcome back, guys. ✌ In this article you will be learning how to create this beautiful navigation bar with HTML, CSS, and a little bit of JavaScript. This is a quick preview of what we are going to create today. 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aKTiN6-Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spt1ugh0vt7p9lee2rv0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aKTiN6-Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spt1ugh0vt7p9lee2rv0.png" alt="Image description" width="880" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is very easy and simple to understand. So let's make this 😉. I have discussed step by step how to create this and at the end, there is a complete code also.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;HTML CODE&lt;/strong&gt;
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-color=&lt;/span&gt;&lt;span class="s"&gt;"#3f3f64"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/service-icon.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"service-icon"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"color-image"&lt;/span&gt;
          &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/service-icon-color.png"&lt;/span&gt;
          &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"service-icon"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-color=&lt;/span&gt;&lt;span class="s"&gt;"#794343"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/support-icon.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"support-icon"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"color-image"&lt;/span&gt;
          &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/support-icon-color.png"&lt;/span&gt;
          &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"support-icon"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-color=&lt;/span&gt;&lt;span class="s"&gt;"#8be8ff"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/home-icon.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"home-icon"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"color-image"&lt;/span&gt;
          &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/home-icon-color.png"&lt;/span&gt;
          &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"home-icon"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-color=&lt;/span&gt;&lt;span class="s"&gt;"#f7a11fa2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/stats-icon.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"stats-icon"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"color-image"&lt;/span&gt;
          &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/stats-icon-color.png"&lt;/span&gt;
          &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"stats-icon"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-color=&lt;/span&gt;&lt;span class="s"&gt;"#b33136"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/feedback-icon.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"feedback-icon"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"color-image"&lt;/span&gt;
          &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/feedback-icon-color.png"&lt;/span&gt;
          &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"feedback-icon"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So as this is a navigation bar I decided to use the &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element to create this. Everything is inside the &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; tag, and there is an unordered list in it to create the links.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-for-nav-bar"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CSS for Nav Bar&lt;/strong&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;list-style-type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-around&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#8395a7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Created a flex box and &lt;code&gt;justify-content: space-around&lt;/code&gt; to create equal spaces between images. &lt;code&gt;list-style-type: none&lt;/code&gt; to remove the bullets and &lt;code&gt;overflow: hidden&lt;/code&gt; to avoind overflowing the content. set a &lt;code&gt;bacground-color&lt;/code&gt; and &lt;code&gt;border-radius&lt;/code&gt; to look better. 😏&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ltligt-tag"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&amp;lt;li&amp;gt; Tag&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-color=&lt;/span&gt;&lt;span class="s"&gt;"#3f3f64"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/service-icon.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"service-icon"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"color-image"&lt;/span&gt;
    &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./images/service-icon-color.png"&lt;/span&gt;
    &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"service-icon"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The images are created inside the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag. And you can see there are two images inside the&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag. One is the black and white and the other is color image. the &lt;code&gt;data-color&lt;/code&gt; attribute in the&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag is made for the function of JavaScript. You can see it at the end of this article.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are the stylings for &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag. &lt;code&gt;display: block&lt;/code&gt; unless we can't change the padding values because it is a inline element by default. &lt;code&gt;position: relative&lt;/code&gt; because the colored image is going to be absolute to that element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set an fixed &lt;code&gt;width&lt;/code&gt; to the image.&lt;/p&gt;

&lt;p&gt;The most important part is positioning the colored image. I position the colored image right in front of the black and white image. So that the black and white image is under the colored image. Then I set the colored image's&lt;code&gt;opacity: 0&lt;/code&gt; so that the colored image cannot be seen. But still, the colored image is in front of the black and white image. So the hover effect is to bring back the opacity with a transition. And it will be like an animation of color-changing 😁.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.color-image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;0.25s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.color-image&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;👍 &lt;em&gt;So here is the complete CSS code for the project.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3f3f64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;list-style-type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-around&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#8395a7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.color-image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;0.25s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.color-image&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;JAVASCRIPT&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;This is the JavaScript part. It is very simple. All it does is change the &lt;code&gt;background-color&lt;/code&gt; of the document when an icon is clicked. (Just for fun 😂). So here it is...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;span&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Getting all the span elements&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Getting the body&lt;/span&gt;

&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bodyColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;bodyColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So in here I have selected all the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; elements using &lt;code&gt;querySelectorAll&lt;/code&gt; and when a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element is clicked, it takes the &lt;code&gt;data-color&lt;/code&gt; attribute of that element and set that color as the &lt;code&gt;bacground-color&lt;/code&gt; of the document.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  🔗 &lt;strong&gt;LINKS&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Link to the &lt;a href="https://github.com/Pasindu-Uthum/nav-bar-animation"&gt;Github Repository&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Follow me on &lt;a href="https://twitter.com/PasinduUthum"&gt;Twitter&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Follow me on &lt;a href="https://www.instagram.com/pasindu_uthum/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Download SVG icons from &lt;a href="https://www.flaticon.com/"&gt;flaticon&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Leave a like 👍 and share 🤙 this article to your friends so that they will also learn what you learned from this. Comment 💬 down you ideas about this. See you in the article. :)&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>AWS Gotchas</title>
      <author>Jon Ashdown</author>
      <pubDate>Wed, 17 Nov 2021 14:36:25 +0000</pubDate>
      <link>https://dev.to/jonashdown/aws-gotchas-47kj</link>
      <guid>https://dev.to/jonashdown/aws-gotchas-47kj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#aws-gotchas"&gt;
  &lt;/a&gt;
  AWS Gotchas
&lt;/h2&gt;

&lt;p&gt;I will highlight AWS gotchas as I find them&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamodb"&gt;
  &lt;/a&gt;
  Dynamodb
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#ttl-fields-are-in-seconds"&gt;
  &lt;/a&gt;
  TTL Fields are in Seconds
&lt;/h4&gt;

&lt;p&gt;TTL Fields on dynamodb are great, as they allow a grace period between marking a record for deletion and the actual deletion. Meaning that when you have finished with a record, you can set a TTL field to a time in the future and AWS internal mechanisms will remove the record at some point soon after the that time has passed.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gotcha"&gt;
  &lt;/a&gt;
  Gotcha:
&lt;/h5&gt;

&lt;p&gt;The TTL field is an integer in &lt;strong&gt;seconds&lt;/strong&gt; from the Unix epoch, all other dates, including explicit date fields in dynamodb are stored as ISO dates, which are stored under the hood as &lt;strong&gt;microseconds&lt;/strong&gt; from the Unix epoch. This is documented at &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/time-to-live-ttl-before-you-start.html#time-to-live-ttl-before-you-start-formatting"&gt;Using DynamoDB Time to Live (TTL)&lt;/a&gt;. However, it is easy to forget hence the reason for this gotcha.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#workaround"&gt;
  &lt;/a&gt;
  Workaround:
&lt;/h5&gt;

&lt;p&gt;Calculate the TTL using your standard date library, convert to integer and divide by 1000 to convert milliseconds to seconds.&lt;br&gt;
e.g&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DocumentClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-sdk/clients/dynamodb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dynamoDb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DocumentClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hoursInTheFuture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getFutureTimeInSeconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;hoursInTheFuture&lt;/span&gt;

  &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deleteInTheFuture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;dynamoDb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;TableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myDynamoDbTable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;id&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;UpdateExpression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SET ttl = :t&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;ExpressionAttributeValues&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:t&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;getFutureTimeInSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;//record will be deleted 24 hours from now&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>aws</category>
      <category>gotchas</category>
      <category>timestanps</category>
    </item>
  </channel>
</rss>
