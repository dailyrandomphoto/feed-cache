<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title> SQLite: A tool that allows creating databases from the terminal  </title>
      <author>Danilsa Caraballo</author>
      <pubDate>Fri, 06 Aug 2021 14:43:05 +0000</pubDate>
      <link>https://dev.to/danilsa0109/sqlite-a-tool-that-allows-creating-databases-from-the-terminal-78j</link>
      <guid>https://dev.to/danilsa0109/sqlite-a-tool-that-allows-creating-databases-from-the-terminal-78j</guid>
      <description>&lt;p&gt;I had learned how to create a table for a new database using tools like Excel, Matlab, My sql and table plus.&lt;/p&gt;

&lt;p&gt;Now, with &lt;code&gt;SQLite&lt;/code&gt; I can create the databases in a very practical way, it is similar to &lt;code&gt;Mysql&lt;/code&gt;, so today I a practical example, comparing &lt;code&gt;Mysql&lt;/code&gt; with &lt;code&gt;SQLite&lt;/code&gt;,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We must be in the folder where we will create the database:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To &lt;code&gt;SQLite&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HiHNF_ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cn0e16op9ytt6ow195ha.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HiHNF_ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cn0e16op9ytt6ow195ha.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;in the case of &lt;code&gt;Mysql&lt;/code&gt;, you must find the location of the program to be able to execute it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew search mysql
//or
./mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Open the tool, giving name to database:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To &lt;code&gt;SQLite&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;~ sqlite3 mydatabase
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the case of &lt;code&gt;Mysql&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~ create database mydatabase
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Create new table, taking into account the type of the column:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;SQLite&lt;/code&gt; and &lt;code&gt;Mysql&lt;/code&gt; are the same&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~ use mydatabase
~ create table dataUsers(
          Id integer primary key,
          Name text,
          Last_name text,
          age integer,
          Cell integer 
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;insert the data:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;SQLite&lt;/code&gt; and&lt;code&gt;Mysql&lt;/code&gt; are the same&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;insert into dataUsers(0001,'Ema','Garces', 21, 0573033333055 );

//or

insert into dataUsers( Name text,Last_name text, age real, Cell integer ) VALUES (0001,'Ema','Garces', 21, 0573033333055);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Show table:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To &lt;code&gt;SQLite&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~ .mode {mode of choice}
~ select * from dataUsers; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;there are several view modes to display the table:&lt;br&gt;
ascii, box, csv, column, html, insert, line, list, tabs, tcl, etc.&lt;/p&gt;

&lt;p&gt;in the case of &lt;code&gt;Mysql&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~ show tables;
~ describe dataUsers;
~ select * from dataUsers; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Bonus: Connect to database with table plus&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;6.1 open table plus:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xiu_pP3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vt87wz16b9dfm9ciao33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xiu_pP3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vt87wz16b9dfm9ciao33.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
6.2 create new connection:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OS6E0268--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zephts7lzwp4wdf8e531.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OS6E0268--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zephts7lzwp4wdf8e531.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IJ0egRpR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebtrbb2rpmnegmwmu7ii.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IJ0egRpR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebtrbb2rpmnegmwmu7ii.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
6.3 name the connection and find the location of the database:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iP3qZxTH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ez76pif8qw90un2xkxl1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iP3qZxTH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ez76pif8qw90un2xkxl1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 6th August 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 06 Aug 2021 14:41:40 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-6th-august-2021-1j9g</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-6th-august-2021-1j9g</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-radix-primitives"&gt;
  &lt;/a&gt;
  1. Radix Primitives
&lt;/h3&gt;

&lt;p&gt;An open-source UI component library for building high-quality, accessible design systems and web apps.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/radix-ui"&gt;
        radix-ui
      &lt;/a&gt; / &lt;a href="https://github.com/radix-ui/primitives"&gt;
        primitives
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An open-source UI component library for building high-quality, accessible design systems and web apps. Maintained by @modulz.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;a href="https://radix-ui.com/primitives" rel="nofollow"&gt;
  &lt;img alt="Radix UI hero image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--9X_tG3Ib--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://repository-images.githubusercontent.com/316012819/b7b19180-3f85-11eb-884c-1e19ce2f493a"&gt;
&lt;/a&gt;
&lt;h1&gt;
Radix Primitives&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;An open-source UI component library for building high-quality, accessible design systems and web apps.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Radix Primitives is a low-level UI component library with a focus on accessibility, customization and developer experience. You can use these components either as the base layer of your design system, or adopt them incrementally.&lt;/p&gt;

&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;For full documentation, visit &lt;a href="https://radix-ui.com/docs/primitives" rel="nofollow"&gt;radix-ui.com/docs/primitives&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Please follow our &lt;a href="https://github.com/radix-ui/primitives./.github/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Authors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Benoit Grelard (&lt;a href="https://twitter.com/benoitgrelard" rel="nofollow"&gt;@benoitgrelard&lt;/a&gt;) - &lt;a href="https://modulz.app" rel="nofollow"&gt;Modulz&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Jenna Smith (&lt;a href="https://twitter.com/jjenzz" rel="nofollow"&gt;@jjenzz&lt;/a&gt;) - &lt;a href="https://modulz.app" rel="nofollow"&gt;Modulz&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Andy Hook (&lt;a href="https://twitter.com/Andy_Hook" rel="nofollow"&gt;@Andy_Hook&lt;/a&gt;) - &lt;a href="https://modulz.app" rel="nofollow"&gt;Modulz&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Pedro Duarte (&lt;a href="https://twitter.com/peduarte" rel="nofollow"&gt;@peduarte&lt;/a&gt;) - &lt;a href="https://modulz.app" rel="nofollow"&gt;Modulz&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Chance Strickland (&lt;a href="https://twitter.com/chancethedev" rel="nofollow"&gt;@chancethedev&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ar Nazeh (&lt;a href="https://github.com/Nazeh"&gt;@Nazeh&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fabio Capucci (&lt;a href="https://github.com/cappuc"&gt;@cappuc&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pedro Duarte (&lt;a href="https://twitter.com/peduarte" rel="nofollow"&gt;@peduarte&lt;/a&gt;) - &lt;a href="https://modulz.app" rel="nofollow"&gt;Modulz&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Colm Tuite (&lt;a href="https://twitter.com/colmtuite" rel="nofollow"&gt;@colmtuite&lt;/a&gt;) - &lt;a href="https://modulz.app" rel="nofollow"&gt;Modulz&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://discord.com/invite/7Xb99uG" rel="nofollow"&gt;Discord&lt;/a&gt; - To get involved with the Radix community, ask questions and share tips.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://twitter.com/radix_ui" rel="nofollow"&gt;Twitter&lt;/a&gt; - To receive updates, announcements, blog posts, and general Radix…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/radix-ui/primitives"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-supersetui"&gt;
  &lt;/a&gt;
  2. superset-ui
&lt;/h3&gt;

&lt;p&gt;Collection of packages that power the Apache Superset UI, and can be used to craft custom data applications that leverage a Superset backend.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/apache-superset"&gt;
        apache-superset
      &lt;/a&gt; / &lt;a href="https://github.com/apache-superset/superset-ui"&gt;
        superset-ui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Apache Superset UI packages 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
@superset-ui&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/apache-superset/superset-ui/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ffcdb4126540145e5c1a98a48d2872d567dcdb9eb926ec0dabad7b475a6e0db7/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6170616368652d73757065727365742f73757065727365742d75692f6d61737465722e7376673f7374796c653d666c61742d737175617265" alt="Codecov branch"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.com/apache-superset/superset-ui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/77d56384afa3999fbd1c9b6d75d49577878c9e7473685957890071afe270d357/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f6170616368652d73757065727365742f73757065727365742d75692f6d61737465722e7376673f7374796c653d666c61742d737175617265" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/apache-superset/superset-ui?type=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9169eb6a18c50edc178e616de19f58553de6ddb110db90e3a5c714b053348599/68747470733a2f2f696d672e736869656c64732e696f2f64617669642f6465762f6170616368652d73757065727365742f73757065727365742d75692e7376673f7374796c653d666c61742d737175617265" alt="David"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Collection of packages that power the
&lt;a href="https://github.com/apache/incubator-superset"&gt;Apache Superset&lt;/a&gt; UI, and can be used to craft custom
data applications that leverage a Superset backend 📈&lt;/p&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;p&gt;Most recent release: &lt;a href="https://apache-superset.github.io/superset-ui/" rel="nofollow"&gt;https://apache-superset.github.io/superset-ui/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Current master: &lt;a href="https://superset-ui.now.sh/" rel="nofollow"&gt;https://superset-ui.now.sh/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Packages&lt;/h2&gt;
&lt;h3&gt;
Core packages&lt;/h3&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/packages/superset-ui-core"&gt;@superset-ui/core&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b2349c7502dc1d7cbbe2d5acf260cf4710e057873290d44157957bb5ab9e178/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f636f72652e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/packages/superset-ui-chart-controls"&gt;@superset-ui/chart-controls&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/chart-controls" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b2349c7502dc1d7cbbe2d5acf260cf4710e057873290d44157957bb5ab9e178/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f636f72652e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/packages/generator-superset"&gt;@superset-ui/generator-superset&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/generator-superset" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ded15036c9df163c191325c577cb4f2a8bf037c3aac42f62728f5e3c883ee9d/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f67656e657261746f722d73757065727365742e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h3&gt;
Chart plugin packages&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;@superset-ui/legacy-*&lt;/code&gt; packages are extracted from the classic
&lt;a href="https://github.com/apache/incubator-superset"&gt;Apache Superset&lt;/a&gt; and converted into plugins. These
packages are extracted with minimal changes (almost as-is). They also depend on legacy API
(&lt;code&gt;viz.py&lt;/code&gt;) to function.&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-preset-chart-big-number"&gt;@superset-ui/legacy-preset-chart-big-number&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-preset-chart-big-number" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ef8e15e2ea34f9a108c09fc85cb7f637560ae018f69bfa128d9f922e3e44166/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d7072657365742d63686172742d6269672d6e756d6265722e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-preset-chart-nvd3"&gt;@superset-ui/legacy-preset-chart-nvd3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-preset-chart-nvd3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9809f014abb442fa0c1e09ad55d9bd69ee0d512f0f00211e30b15a581207759/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d7072657365742d63686172742d6e7664332e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-calendar"&gt;@superset-ui/legacy-plugin-chart-calendar&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-calendar" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/df2a4cc330391d776c6402f842b952b7e0b79d7910c57ec7d399873d31f1c8c4/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d63616c656e6461722e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-chord"&gt;@superset-ui/legacy-plugin-chart-chord&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-chord" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/10d7fc2d2030c89f7744be9a8aa5b61c9e511ba1a3ab8fc910d7db7a1256b100/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d63686f72642e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-country-map"&gt;@superset-ui/legacy-plugin-chart-country-map&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-country-map" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/622c4fda66c236b94b94b815553d15186749ea69d0c39c78de52f970cda3be4c/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d636f756e7472792d6d61702e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-event-flow"&gt;@superset-ui/legacy-plugin-chart-event-flow&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-event-flow" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b49f35e47ab4fe9728be727ee383b6b1529ec9291c65f0a7397e27ffe73ef299/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d6576656e742d666c6f772e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-force-directed"&gt;@superset-ui/legacy-plugin-chart-force-directed&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-force-directed" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29895380f51ba4f8752c1ca9283aefdfe13f45a2508ebc394dba2790ee224439/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d666f7263652d64697265637465642e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-heatmap"&gt;@superset-ui/legacy-plugin-chart-heatmap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-heatmap" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c4e3130db940093d08bb9d5adda0f04b6b232f34afe0f76c0fd5a6a7aa222d44/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d686561746d61702e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-histogram"&gt;@superset-ui/legacy-plugin-chart-histogram&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-histogram" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f058af0d3fe8708a6fe099367da8e7fa199773cd664caba74a02f4d44452b79/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d686973746f6772616d2e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-horizon"&gt;@superset-ui/legacy-plugin-chart-horizon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-horizon" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3f5355c84a2c7f3e90ee8e0b31957d41c37c5c5772290ffd0cb18ccffd90e2d/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d686f72697a6f6e2e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-iframe"&gt;@superset-ui/legacy-plugin-chart-iframe&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-iframe" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0d2b610459c8fb5c280915bb8462690b547a10e666c827adfd597ec269acc28b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d696672616d652e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-markup"&gt;@superset-ui/legacy-plugin-chart-markup&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-markup" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0519d179fa7eb4a1fdb43331ef13284d845ca2ac978a5e26464354624b327c26/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d6d61726b75702e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-map-box"&gt;@superset-ui/legacy-plugin-chart-map-box&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-map-box" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4e8bfb7b49e950a538a0e65aedcf9345aa190d6739e47eecb4c541549e329ebc/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d6d61702d626f782e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-paired-t-test"&gt;@superset-ui/legacy-plugin-chart-paired-t-test&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-paired-t-test" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3fb9525e3fe6aaeef879aaafda3531118aa4b69c0bfc2987067881fbf9f0a4fd/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d7061697265642d742d746573742e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-parallel-coordinates"&gt;@superset-ui/legacy-plugin-chart-parallel-coordinates&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-parallel-coordinates" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2709505745f7b184d34104603843ead66462b7a3d19ff76aa8f48cb4116d635b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d706172616c6c656c2d636f6f7264696e617465732e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-partition"&gt;@superset-ui/legacy-plugin-chart-partition&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-partition" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c87f5dc36cbecd154d23cbdf0057fa1071511aed3334c406dcb2505bdbd5d4a/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d706172746974696f6e2e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-pivot-table"&gt;@superset-ui/legacy-plugin-chart-pivot-table&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-pivot-table" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/915d4912444fd9f3e54eec3fd1b220502b141557735b666db210ae5e6f24c210/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d7069766f742d7461626c652e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-rose"&gt;@superset-ui/legacy-plugin-chart-rose&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-rose" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d70b07323e3914da956f59b8ec57b266b3e4741efbc7c67f9cc9cad93e0407aa/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d726f73652e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-sankey"&gt;@superset-ui/legacy-plugin-chart-sankey&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-sankey" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb9a043d076bba09165180678c1ed15e46645d215dda3aec7df8e8ae25dcdccd/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d73616e6b65792e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-sankey-loop"&gt;@superset-ui/legacy-plugin-chart-sankey-loop&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-sankey-loop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/078e54e345068d2361819b766a6d88048ad54e6fb1586bb9f8e67cb5129c097d/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d73616e6b65792d6c6f6f702e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-sunburst"&gt;@superset-ui/legacy-plugin-chart-sunburst&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-sunburst" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/00fd008fd582b3f47a4de2b5acd2902528878653051835cd824db7d232da7c5b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d73756e62757273742e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-treemap"&gt;@superset-ui/legacy-plugin-chart-treemap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-treemap" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1678036c95f972ec9bacdf984ff3976c91253a984c87f826e893e9ff2de725a3/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d747265656d61702e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apache-superset/superset-ui/tree/master/plugins/legacy-plugin-chart-world-map"&gt;@superset-ui/legacy-plugin-chart-world-map&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@superset-ui/legacy-plugin-chart-world-map" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/31d1b75f38459dd606cb899aafed92e88568f4eb12dd3ec4253c0f0e1f5e1059/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4073757065727365742d75692f6c65676163792d706c7567696e2d63686172742d776f726c642d6d61702e7376673f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;@superset-ui/plugin-*&lt;/code&gt; packages are newer and higher quality in general. A key difference that they
do not depend on &lt;code&gt;viz.py&lt;/code&gt; (which contain visualization-specific python code) and interface with
&lt;code&gt;/api/v1/query/&lt;/code&gt;, a new generic endpoint instead meant to serve all visualizations, instead. Also
should be written in Typescript.&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/apache-superset/superset-ui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-nextjs-subscription-payments-starter"&gt;
  &lt;/a&gt;
  3. Next.js Subscription Payments Starter
&lt;/h3&gt;

&lt;p&gt;Clone, deploy, and fully customize a SaaS subscription application with Next.js.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vercel"&gt;
        vercel
      &lt;/a&gt; / &lt;a href="https://github.com/vercel/nextjs-subscription-payments"&gt;
        nextjs-subscription-payments
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Clone, deploy, and fully customize a SaaS subscription application with Next.js.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Next.js Subscription Payments Starter&lt;/h1&gt;
&lt;p&gt;The all-in-one starter kit for high-performance SaaS applications.&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Secure user management and authentication with &lt;a href="https://supabase.io/docs/guides/auth" rel="nofollow"&gt;Supabase&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Powerful data access &amp;amp; management tooling on top of PostgreSQL with &lt;a href="https://supabase.io/docs/guides/database" rel="nofollow"&gt;Supabase&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Integration with &lt;a href="https://stripe.com/docs/payments/checkout" rel="nofollow"&gt;Stripe Checkout&lt;/a&gt; and the &lt;a href="https://stripe.com/docs/billing/subscriptions/customer-portal" rel="nofollow"&gt;Stripe customer portal&lt;/a&gt;, all plumbing already set up.&lt;/li&gt;
&lt;li&gt;Automatic syncing of pricing plans, and subscription statuses via &lt;a href="https://stripe.com/docs/webhooks" rel="nofollow"&gt;Stripe webhooks&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://subscription-payments.vercel.app/" rel="nofollow"&gt;https://subscription-payments.vercel.app/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://subscription-payments.vercel.app/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FA402-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vercel/nextjs-subscription-payments./public/demo.png" alt="Screenshot of demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Architecture&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/vercel/nextjs-subscription-payments./public/architecture_diagram.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JkqXXuJ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vercel/nextjs-subscription-payments./public/architecture_diagram.svg" alt="Architecture diagram"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Deploy with Vercel&lt;/h2&gt;
&lt;p&gt;The Vercel deployment will guide you through creating a Supabase account and project as well as a Stripe test account and automatically creates the Stripe webhook endpoint for you. After installation of the Supabase and Stripe integrations, all relevant environment variables will be set up so that the project is usable immediately after deployment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The Stripe integration is still a work-in-progress.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vercel.com/new/git/external?repository-url=https%3A%2F%2Fgithub.com%2Fvercel%2Fnextjs-subscription-payments&amp;amp;project-name=nextjs-subscription-payments&amp;amp;repo-name=nextjs-subscription-payments&amp;amp;demo-title=Next.js%20Subscription%20Payments%20Starter&amp;amp;demo-description=Demo%20project%20on%20Vercel&amp;amp;demo-url=https%3A%2F%2Fsubscription-payments.vercel.app&amp;amp;demo-image=https%3A%2F%2Fsubscription-payments.vercel.app%2Fdemo.png&amp;amp;integration-ids=oac_pb1dqJT8Ry2D99Q0o9qXWIhJ,oac_jUduyjQgOyzev1fjrW83NYOv&amp;amp;external-id=nextjs-subscription-payments" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e471e99e8e022cf454693e38ec843036ec6301e27ee1e1fa10325b1cb720584/68747470733a2f2f76657263656c2e636f6d2f627574746f6e" alt="Deploy with Vercel"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vercel.com/new/git/external?repository-url=https%3A%2F%2Fgithub.com%2Fvercel%2Fnextjs-subscription-payments&amp;amp;project-name=nextjs-subscription-payments&amp;amp;repo-name=nextjs-subscription-payments&amp;amp;demo-title=Next.js%20Subscription%20Payments%20Starter&amp;amp;demo-description=Demo%20project%20on%20Vercel&amp;amp;demo-url=https%3A%2F%2Fsubscription-payments.vercel.app&amp;amp;demo-image=https%3A%2F%2Fsubscription-payments.vercel.app%2Fdemo.png&amp;amp;integration-ids=oac_pb1dqJT8Ry2D99Q0o9qXWIhJ,oac_jUduyjQgOyzev1fjrW83NYOv&amp;amp;external-id=nextjs-subscription-payments" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SmWjnrwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vercel/nextjs-subscription-payments./public/vercel-deploy.png" alt="Screenshot of Vercel deployment"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the project has been deployed, continue with the configuration steps below.&lt;/p&gt;
&lt;h2&gt;
Configure Supabase Auth&lt;/h2&gt;
&lt;h4&gt;
[Optional] - Set up OAuth providers&lt;/h4&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/vercel/nextjs-subscription-payments"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-markdown-pdf"&gt;
  &lt;/a&gt;
  4. Markdown PDF
&lt;/h3&gt;

&lt;p&gt;Node module that converts Markdown files to PDFs.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/alanshaw"&gt;
        alanshaw
      &lt;/a&gt; / &lt;a href="https://github.com/alanshaw/markdown-pdf"&gt;
        markdown-pdf
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
       📄 Markdown to PDF converter
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
markdown-pdf &lt;a href="https://travis-ci.org/alanshaw/markdown-pdf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2d2647aa1a123f5052c9633869939d186ab497561984fdaed9597fc4ab49f74c/68747470733a2f2f7472617669732d63692e6f72672f616c616e736861772f6d61726b646f776e2d7064662e737667" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://david-dm.org/alanshaw/markdown-pdf" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/91afa9c443b755c7308fd2492fa97230c128dd050f3c085edbed1d711513bd13/68747470733a2f2f64617669642d646d2e6f72672f616c616e736861772f6d61726b646f776e2d7064662e737667" alt="Dependency Status"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/alanshaw/markdown-pdf?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58b4ae1925d24cad01954f54ec26d76c75ee3e09389a68a0dc9ef28d83330949/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f616c616e736861772f6d61726b646f776e2d7064662e7376673f7374796c653d666c6174" alt="Coverage Status"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Node module that converts Markdown files to PDFs.&lt;/p&gt;
&lt;p&gt;The PDF looks great because it is styled by HTML5 Boilerplate. What? - Yes! Your Markdown is first converted to HTML, then pushed into the HTML5 Boilerplate &lt;code&gt;index.html&lt;/code&gt;. Phantomjs renders the page and saves it to a PDF. You can even customise the style of the PDF by passing an optional path to your CSS &lt;em&gt;and&lt;/em&gt; you can pre-process your markdown file before it is converted to a PDF by passing in a pre-processing function, for templating.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install -g markdown-pdf --ignore-scripts&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Note: elevated (sudo) permissions may be needed for &lt;code&gt;npm install -g&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;Usage: markdown-pdf [options] &amp;lt;markdown-file-path&amp;amp;gt
Options
  -h, --help                             output usage information
  -V, --version                          output the version number
  &amp;lt;markdown-file-path&amp;gt;                   Path of the markdown file to convert
  -c, --cwd [path]                       Current working directory
  -p, --phantom-path [path]              Path to phantom binary
  -h, --runnings-path [path]             Path to runnings (header, footer)&lt;/code&gt;&lt;/pre&gt;…&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/alanshaw/markdown-pdf"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-bumbag"&gt;
  &lt;/a&gt;
  5. Bumbag
&lt;/h3&gt;

&lt;p&gt;Build accessible &amp;amp; themeable React applications with your Bumbag&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bumbag"&gt;
        bumbag
      &lt;/a&gt; / &lt;a href="https://github.com/bumbag/bumbag-ui"&gt;
        bumbag-ui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Build accessible &amp;amp; themeable React applications with your Bumbag 👝
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/bumbag/bumbag-ui./bumbag-logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6SHHk0Xf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/bumbag/bumbag-ui./bumbag-logo.png" width="500px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Est. 2018 – Formally known as Fannypack&lt;/p&gt;
&lt;h2&gt;
Getting started&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bumbag.style" rel="nofollow"&gt;Visit the Bumbag docs&lt;/a&gt; to get started with Bumbag.&lt;/p&gt;
&lt;h2&gt;
Join our community&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://discord.com/invite/BPnwqvJ" rel="nofollow"&gt;Join our discord server&lt;/a&gt; to get the latest updates, chat with other Bumbag enthusiasts, and see what's happening in the community!&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Feel like contributing? That's awesome! We have a &lt;a href="https://github.com/bumbag/bumbag-ui/CONTRIBUTING.md"&gt;Contributing guide&lt;/a&gt; to help you out&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bumbag/bumbag-ui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#6-serverless-framework"&gt;
  &lt;/a&gt;
  6. Serverless Framework
&lt;/h3&gt;

&lt;p&gt;Serverless Framework – Build web, mobile and IoT applications with serverless architectures using AWS Lambda, Azure Functions, Google CloudFunctions &amp;amp; more!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/serverless"&gt;
        serverless
      &lt;/a&gt; / &lt;a href="https://github.com/serverless/serverless"&gt;
        serverless
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ⚡ Serverless Framework – Build web, mobile and IoT applications with serverless architectures using AWS Lambda, Azure Functions, Google CloudFunctions &amp;amp; more! – 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;⚡ &lt;strong&gt;Serverless Inc. is hiring to build the next generation of serverless development tools, &lt;a href="https://www.serverless.com/company/jobs/" rel="nofollow"&gt;join us!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://serverless.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/108c301af486eeb9afde6ec9d6c98aaa5b1b2c14becaab3b781c22b851687e9c/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6173736574732e6769746875622e7365727665726c6573732f726561646d652d7365727665726c6573732d6672616d65776f726b2e676966" alt="Serverless Application Framework AWS Lambda API Gateway"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.serverless.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dcd998f0b6567f17873812fa9bcc9767d63c056862c19024ccbfe5ec7cefe2eb/687474703a2f2f7075626c69632e7365727665726c6573732e636f6d2f6261646765732f76332e737667" alt="serverless"&gt;&lt;/a&gt;
&lt;a href="https://github.com/serverless/serverless/actions?query=workflow%3AIntegrate"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4BD1AOhX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/serverless/serverless/workflows/Integrate/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://badge.fury.io/js/serverless" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7714b1087dae0ba033351b2213c2c1cae9621f8fc6cdd392bf9299c2bbb5b8e/68747470733a2f2f62616467652e667572792e696f2f6a732f7365727665726c6573732e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/serverless/serverless" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/790673792e52192479f593cca2a2978ff1c94548210921689c686815c810ded2/68747470733a2f2f636f6465636f762e696f2f67682f7365727665726c6573732f7365727665726c6573732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/serverless/serverless" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9a64abc2e14dc16c99629ef76760e6620d85a6a65663af7ca5738e697b80b44/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f7365727665726c6573732f7365727665726c6573732e737667" alt="gitter"&gt;&lt;/a&gt;
&lt;a href="https://snyk.io/test/github/serverless/serverless" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d6614e32a0dce52d76d6cfb7f42c98ee3dd39cf2a93a6ba458a6b8b60d4b9b33/68747470733a2f2f736e796b2e696f2f746573742f6769746875622f7365727665726c6573732f7365727665726c6573732f62616467652e737667" alt="Known Vulnerabilities"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/serverless" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a55014448aa0645fa48d4fe1304c04fa4d7eab537909284c5afd52bee70a6264/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f7365727665726c6573732e737667" alt="license"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;span&gt;English&lt;/span&gt; |
  &lt;a href="https://github.com/serverless/serverless./README_CN.md"&gt;简体中文&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.serverless.com" rel="nofollow"&gt;Website&lt;/a&gt; • &lt;a href="https://serverless.com/framework/docs/" rel="nofollow"&gt;Docs&lt;/a&gt; • &lt;a href="https://serverless.com/subscribe/" rel="nofollow"&gt;Newsletter&lt;/a&gt; • &lt;a href="https://teespring.com/stores/serverless" rel="nofollow"&gt;Swag&lt;/a&gt; • &lt;a href="https://gitter.im/serverless/serverless" rel="nofollow"&gt;Gitter&lt;/a&gt; • &lt;a href="http://forum.serverless.com" rel="nofollow"&gt;Forum&lt;/a&gt; • &lt;a href="https://www.meetup.com/pro/serverless/" rel="nofollow"&gt;Meetups&lt;/a&gt; • &lt;a href="https://twitter.com/goserverless" rel="nofollow"&gt;Twitter&lt;/a&gt; • &lt;a href="https://serverless.com/company/jobs/" rel="nofollow"&gt;We're Hiring&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Serverless Framework&lt;/strong&gt; – Build applications comprised of microservices that run in response to events, auto-scale for you, and only charge you when they run. This lowers the total cost of maintaining your apps, enabling you to build more logic, faster.&lt;/p&gt;

&lt;p&gt;The Framework uses new event-driven compute services, like AWS Lambda, Google Cloud Functions, and more. It's a command-line tool, providing scaffolding, workflow automation and best practices for developing and deploying your serverless architecture. It's also completely extensible via plugins.&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="https://app.serverless.com" rel="nofollow"&gt;Serverless Framework Dashboard&lt;/a&gt; for monitoring, troubleshooting, ci/cd and more features for serverless teams.&lt;/p&gt;

&lt;p&gt;Serverless is actively maintained by &lt;a href="https://www.serverless.com" rel="nofollow"&gt;Serverless Inc&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
Contents&lt;/h2&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/43f186880992b837e07f273fc939134cdd092e447d5f6d83ea70d84d1b47b9a5/68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f6173736574732e736974652e7365727665726c6573732e636f6d2f656d61696c2f736c732d67657474696e672d737461727465642e676966"&gt;&lt;img width="400" src="https://camo.githubusercontent.com/43f186880992b837e07f273fc939134cdd092e447d5f6d83ea70d84d1b47b9a5/68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f6173736574732e736974652e7365727665726c6573732e636f6d2f656d61696c2f736c732d67657474696e672d737461727465642e676966"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/serverless#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/serverless#services"&gt;Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/serverless#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/plugins"&gt;Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/serverless#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serverless/serverless#community"&gt;Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/serverless/serverless"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-materialui-treasury"&gt;
  &lt;/a&gt;
  7. Material-UI Treasury
&lt;/h3&gt;

&lt;p&gt;A collection of ready-to-use components based on Material-UI&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/siriwatknp"&gt;
        siriwatknp
      &lt;/a&gt; / &lt;a href="https://github.com/siriwatknp/mui-treasury"&gt;
        mui-treasury
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A collection of ready-to-use components based on Material-UI
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://www.gatsbyjs.org" rel="nofollow"&gt;
    &lt;img alt="Gatsby" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8uHgFS5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/18292247/65975821-6361e500-e499-11e9-94a4-02aef55c2c23.png" width="100"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;
Material-UI Treasury &lt;a href="https://github.com/siriwatknp/mui-treasury-next/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/accfb94480ba6689dde8dbeaf481411bbd41f1fbb13cb17e55e0846f11ce1cd5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d677265656e2e737667" alt="PRs Welcome"&gt;&lt;/a&gt; &lt;a href="https://lerna.js.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3bc63f921dd60bac6d91aa900ef570c928b2aa4c2124ed23647e8fe9d2232853/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61696e7461696e6564253230776974682d6c65726e612d6363303066662e737667" alt="lerna"&gt;&lt;/a&gt; &lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/siriwatknp/mui-treasury#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/769d71a3b04fa22eb773b3387e1ec072310d1bffc033403010cd7d13a803b06c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d31392d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Imagine a place with millions of real-world, ready-to-use, and themable components that you can install to your project. I believe that it will boost many projects that want to prove their ideas or even improve complex monolith project to move faster.&lt;/p&gt;
&lt;h2&gt;
Material-UI v5&lt;/h2&gt;
&lt;h3&gt;
&lt;code&gt;@mui-treasury/layout&lt;/code&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;BREAKING CHANGE&lt;/strong&gt; see &lt;a href="https://github.com/siriwatknp/mui-treasury"&gt;v5 documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary Highlight&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;smaller bundle size (-30%)&lt;/li&gt;
&lt;li&gt;faster&lt;/li&gt;
&lt;li&gt;single sidebar (no duplicate for all variants)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
&lt;code&gt;@mui-treasury/components, @mui-treasury/styles&lt;/code&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;upgrade material-ui&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add @material-ui/core@next @material-ui/styles@next
// make sure that it is 5.0.0-alpha.37&lt;/pre&gt;

&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: the above installation requires &lt;code&gt;@material-ui/styles&lt;/code&gt; because mui-treasury depends on it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start="2"&gt;
&lt;li&gt;upgrade mui-treasury&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add @mui-treasury/components@next @mui-treasury/styles@next&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;As a result, you will get &lt;code&gt;2.0.0-alpha&lt;/code&gt; for both packages. However, these packages still use the old style-engine (JSS) while material-ui v5 have moved to either emotion or styled-components. This will increase the bundle size a bit because you will have 2 style-engine in the project (JSS + emotion or styled-components).&lt;/p&gt;
&lt;p&gt;In the…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/siriwatknp/mui-treasury"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#8-marked"&gt;
  &lt;/a&gt;
  8. Marked
&lt;/h3&gt;

&lt;p&gt;A markdown parser and compiler. Built for speed.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/markedjs"&gt;
        markedjs
      &lt;/a&gt; / &lt;a href="https://github.com/markedjs/marked"&gt;
        marked
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A markdown parser and compiler. Built for speed.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;a href="https://marked.js.org" rel="nofollow"&gt;
  &lt;img width="60px" height="60px" src="https://camo.githubusercontent.com/74b21684dcc0418e3ab7e6f09a8d5d22b75327ab49f88e4143b086d389be1a8c/68747470733a2f2f6d61726b65642e6a732e6f72672f696d672f6c6f676f2d626c61636b2e737667"&gt;
&lt;/a&gt;
&lt;h1&gt;
Marked&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/marked" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/883305c5bdd758a6981bb3c49cb56e76b9999fe290ec2448b5c6b7abd2e05b5b/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f6d61726b6564" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://cdn.jsdelivr.net/npm/marked/marked.min.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b806d57a0b8a6e9655ac4ef4e5b6de953359d7de2de1f9c5f867a00354fbc899/68747470733a2f2f62616467656e2e6e65742f626164676573697a652f677a69702f68747470733a2f2f63646e2e6a7364656c6976722e6e65742f6e706d2f6d61726b65642f6d61726b65642e6d696e2e6a73" alt="gzip size"&gt;&lt;/a&gt;
&lt;a href="https://packagephobia.now.sh/result?p=marked" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a4ce7b32aa7e0272a377bcb6c8daafd7e261d27998fbca6577d6e9c02ef54b95/68747470733a2f2f62616467656e2e6e65742f7061636b61676570686f6269612f696e7374616c6c2f6d61726b6564" alt="install size"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/marked" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/06d79827446f3300713a94d5b793c83c03e4c8c4c678d50d8a6af7d58f20ded5/68747470733a2f2f62616467656e2e6e65742f6e706d2f64742f6d61726b6564" alt="downloads"&gt;&lt;/a&gt;
&lt;a href="https://github.com/markedjs/marked/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Okjh53I2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/markedjs/marked/workflows/Tests/badge.svg" alt="github actions"&gt;&lt;/a&gt;
&lt;a href="https://snyk.io/test/npm/marked" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60c4ce8d15b2ca754c3d3f3dcfc9c192cd8381874eea4bd9102502778d66f894/68747470733a2f2f736e796b2e696f2f746573742f6e706d2f6d61726b65642f62616467652e737667" alt="snyk"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
⚡ built for speed&lt;/li&gt;
&lt;li&gt;
⬇️ low-level compiler for parsing markdown without caching or blocking for long periods of time&lt;/li&gt;
&lt;li&gt;
⚖️ light-weight while implementing all markdown features from the supported flavors &amp;amp; specifications&lt;/li&gt;
&lt;li&gt;
🌐 works in a browser, on a server, or from a command line interface (CLI)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;p&gt;Checkout the &lt;a href="https://marked.js.org/demo/" rel="nofollow"&gt;demo page&lt;/a&gt; to see marked in action ⛹️&lt;/p&gt;
&lt;h2&gt;
Docs&lt;/h2&gt;
&lt;p&gt;Our &lt;a href="https://marked.js.org" rel="nofollow"&gt;documentation pages&lt;/a&gt; are also rendered using marked 💯&lt;/p&gt;
&lt;p&gt;Also read about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marked.js.org/#/USING_ADVANCED.md" rel="nofollow"&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marked.js.org/#/USING_PRO.md" rel="nofollow"&gt;Extensibility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;CLI:&lt;/strong&gt; &lt;code&gt;npm install -g marked&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In-browser:&lt;/strong&gt; &lt;code&gt;npm install marked&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;h3&gt;
Warning: 🚨 Marked does not &lt;a href="https://marked.js.org/#/USING_ADVANCED.md#options" rel="nofollow"&gt;sanitize&lt;/a&gt; the output HTML. Please use a sanitize library, like &lt;a href="https://github.com/cure53/DOMPurify"&gt;DOMPurify&lt;/a&gt; (recommended), &lt;a href="https://github.com/apostrophecms/sanitize-html"&gt;sanitize-html&lt;/a&gt; or &lt;a href="https://github.com/bevacqua/insane"&gt;insane&lt;/a&gt; on the output HTML! 🚨
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CLI&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ marked -o hello.html
hello world
^D
$ cat hello.html
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;p&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;hello world&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;/p&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Browser&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;&amp;lt;!doctype html&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;html&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;head&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;meta&lt;/span&gt; &lt;span class="pl-c1"&gt;charset&lt;/span&gt;="&lt;span class="pl-s"&gt;utf-8&lt;/span&gt;"/&amp;amp;gt
  &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;title&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;Marked in&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/markedjs/marked"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-nodemon"&gt;
  &lt;/a&gt;
  9. nodemon
&lt;/h3&gt;

&lt;p&gt;Monitor for any changes in your node.js application and automatically restart the server - perfect for development &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/remy"&gt;
        remy
      &lt;/a&gt; / &lt;a href="https://github.com/remy/nodemon"&gt;
        nodemon
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Monitor for any changes in your node.js application and automatically restart the server - perfect for development
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/13700/35731649-652807e8-080e-11e8-88fd-1b2f6d553b2d.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tu2vat30--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/13700/35731649-652807e8-080e-11e8-88fd-1b2f6d553b2d.png" alt="Nodemon Logo"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
nodemon&lt;/h1&gt;

&lt;p&gt;nodemon is a tool that helps develop node.js based applications by automatically restarting the node application when file changes in the directory are detected.&lt;/p&gt;

&lt;p&gt;nodemon does &lt;strong&gt;not&lt;/strong&gt; require &lt;em&gt;any&lt;/em&gt; additional changes to your code or method of development. nodemon is a replacement wrapper for &lt;code&gt;node&lt;/code&gt;. To use &lt;code&gt;nodemon&lt;/code&gt;, replace the word &lt;code&gt;node&lt;/code&gt; on the command line when executing your script.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://npmjs.org/package/nodemon" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7d7dcc8440368062ac5d89541a5fe154a375548ecb242badc7e01c4618566204/68747470733a2f2f62616467652e667572792e696f2f6a732f6e6f64656d6f6e2e737667" alt="NPM version"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/remy/nodemon" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9dea36017b4c81886665288076aea0f8ec1b1853d454650542403f488fb4fc06/68747470733a2f2f7472617669732d63692e6f72672f72656d792f6e6f64656d6f6e2e7376673f6272616e63683d6d6173746572" alt="Travis Status"&gt;&lt;/a&gt; &lt;a href="https://github.com/remy/nodemon#backers"&gt;&lt;img src="https://camo.githubusercontent.com/a185ae6ca87f207113226b3943c568221228da073fa59ab3b53d025771b3e60f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6f64656d6f6e2f6261636b6572732f62616467652e737667" alt="Backers on Open Collective"&gt;&lt;/a&gt; &lt;a href="https://github.com/remy/nodemon#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/231e694f3192fb0631925e7830fa3ef4d7b171007af220232747a869d6a33ccf/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6e6f64656d6f6e2f73706f6e736f72732f62616467652e737667" alt="Sponsors on Open Collective"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Installation&lt;/h1&gt;
&lt;p&gt;Either through cloning with git or by using &lt;a href="http://npmjs.org" rel="nofollow"&gt;npm&lt;/a&gt; (the recommended way):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install -g nodemon&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;And nodemon will be installed globally to your system path.&lt;/p&gt;
&lt;p&gt;You can also install nodemon as a development dependency:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install --save-dev nodemon&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as &lt;code&gt;npm start&lt;/code&gt;) or using &lt;code&gt;npx nodemon&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;
Usage&lt;/h1&gt;
&lt;p&gt;nodemon wraps your application, so you…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/remy/nodemon"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-highcharts"&gt;
  &lt;/a&gt;
  10. Highcharts
&lt;/h3&gt;

&lt;p&gt;Highcharts JS is a JavaScript charting library based on SVG, with fallbacks to VML and canvas for old browsers.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/highcharts"&gt;
        highcharts
      &lt;/a&gt; / &lt;a href="https://github.com/highcharts/highcharts"&gt;
        highcharts
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Highcharts JS, the JavaScript charting framework
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;Highcharts JS is a JavaScript charting library based on SVG, with fallbacks to VML and canvas for old browsers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Official website: &lt;a href="http://www.highcharts.com" rel="nofollow"&gt;www.highcharts.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Download page: &lt;a href="http://www.highcharts.com/download" rel="nofollow"&gt;www.highcharts.com/download&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Licensing: &lt;a href="http://www.highcharts.com/license" rel="nofollow"&gt;www.highcharts.com/license&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Support: &lt;a href="http://www.highcharts.com/support" rel="nofollow"&gt;www.highcharts.com/support&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Issues: &lt;a href="https://github.com/highcharts/highchartsrepo-guidelines.md"&gt;Repo guidelines&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Download and install Highcharts&lt;/h2&gt;
&lt;p&gt;This is the &lt;em&gt;working repo&lt;/em&gt; for Highcharts. If you simply want to include Highcharts into a project, use the &lt;a href="https://www.npmjs.com/package/highcharts" rel="nofollow"&gt;distribution package&lt;/a&gt; instead, or read the &lt;a href="http://www.highcharts.com/download" rel="nofollow"&gt;download page&lt;/a&gt;. Please note that there are several ways to use Highcharts. For general installation instructions, see &lt;a href="http://www.highcharts.com/docs/getting-started/installation" rel="nofollow"&gt;the docs&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
Use our CDN&lt;/h3&gt;
&lt;p&gt;Instead of downloading, you can use our CDN to access files directly. See &lt;a href="https://code.highcharts.com" rel="nofollow"&gt;code.highcharts.com&lt;/a&gt; for details.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;script src="https://code.highcharts.com/highcharts.js"&amp;gt;&amp;lt;/script&amp;amp;gt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Install from npm&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://docs.npmjs.com/" rel="nofollow"&gt;npm documentation&lt;/a&gt; on how to get started with npm.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install --save highcharts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Install from Bower&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bower.io/" rel="nofollow"&gt;Bower is deprecated&lt;/a&gt;, but to install, run:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;bower install highcharts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Load Highcharts from the CDN as ECMAScript modules&lt;/h2&gt;
&lt;p&gt;Starting with v6.1.0, Highcharts is available on our…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/highcharts/highcharts"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web Development for Beginners&lt;/a&gt; +1,797 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;Machine Learning for Beginners&lt;/a&gt; +1,793 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/electron/electron"&gt;Electron&lt;/a&gt; +1,433 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/freeCodeCamp/freeCodeCamp"&gt;Free Code Camp&lt;/a&gt; +1,174 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/saadeghi/daisyui"&gt;Daisy UI&lt;/a&gt; +1,060 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/saadeghi/daisyui"&gt;Daisy UI&lt;/a&gt; +38%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bubkoo/html-to-image"&gt;html-to-image&lt;/a&gt; +35%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/intuit/accessibility-snippets"&gt;accessibility-snippets&lt;/a&gt; +21%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/WTTJ/welcome-ui"&gt;Welcome UI&lt;/a&gt; +16%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mwilliamson/mammoth.js"&gt;Mammoth&lt;/a&gt; +15%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +9,189 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;Machine Learning for Beginners&lt;/a&gt; +8,187 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +5,507 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +3,203 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web Development for Beginners&lt;/a&gt; +3,135 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/NoQuarterTeam/boilerplate"&gt;Fullstack Boilerplate&lt;/a&gt; +180%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;Machine Learning for Beginners&lt;/a&gt; +110%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unadlib/fronts"&gt;Fronts&lt;/a&gt; +110%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hieunc229/copilot-clone"&gt;Captain Stack&lt;/a&gt; +79%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/snowpackjs/astro"&gt;Astro&lt;/a&gt; +69%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>productivity</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Top 5 Must-have VS Code extensions</title>
      <author>Archit Sharma</author>
      <pubDate>Fri, 06 Aug 2021 14:37:59 +0000</pubDate>
      <link>https://dev.to/iarchitsharma/top-5-must-have-vs-code-extensions-229k</link>
      <guid>https://dev.to/iarchitsharma/top-5-must-have-vs-code-extensions-229k</guid>
      <description>&lt;p&gt;&lt;strong&gt;Visual Studio Code is the most popular code editor or IDE (Integrated Development Environment) currently. It's a lightweight source code editor, open-source and easy to use.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Visual Studio Code extensions makes the life of developer's much easier just like &lt;a href="https://dev.to/iarchitsharma/visual-studio-code-keyboard-shortcuts-for-windows-1fhh"&gt;VS Code keyboard shortcuts&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#here-is-a-list-of-top-5-must-have-extensions-"&gt;
  &lt;/a&gt;
  Here is a list of top 5 must have extensions :-
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#1-beautify"&gt;
  &lt;/a&gt;
  1. Beautify
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dmEPBZYj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4v2gro21hqyoxzky74x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dmEPBZYj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4v2gro21hqyoxzky74x.png" alt="Beautify extension VS Code"&gt;&lt;/a&gt;&lt;br&gt;
When it comes to must-have extensions Beautify top's the list. This extension beautify your javascript files, JSON, CSS, Sass, and HTML. The unformatted code in these files is converted into formatted, readable code by this extension.&lt;br&gt;
This extension enables running js-beautify in VS Code, AND honouring any .jsbeautifyrc file in the open file's path tree to load your code styling. Run with F1 Beautify (to beautify a selection) or F1 Beautify file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-snippets-pack"&gt;
  &lt;/a&gt;
  2. Snippets Pack
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JPVdbeym--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtsgkdef0mncetne9jye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JPVdbeym--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtsgkdef0mncetne9jye.png" alt="Snippet extension VS Code"&gt;&lt;/a&gt;&lt;br&gt;
Snippets help you write repetitive code easily and quickly. However, this might not be enough. You can simply install an extension that includes a bunch of useful snippets according to your programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-bracket-pair-colorizer"&gt;
  &lt;/a&gt;
  3. Bracket pair colorizer
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bLpZAjaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ei67du62d3jhp89s5ix8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bLpZAjaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ei67du62d3jhp89s5ix8.jpg" alt="Bracket pair colorizer"&gt;&lt;/a&gt;&lt;br&gt;
This extension allows matching brackets to be identified with colours. The user can define which characters to match, and which colours to use. It adds color to each set of opening and closing brackets, making it easier to identify each set of brackets. It's up to you to decide whether you'd like to add this feature to VS Code or not. However, it's a popular tool and many developers find it useful.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-live-sass-compiler"&gt;
  &lt;/a&gt;
  4. Live Sass Compiler
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o5JX3-Fs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ei2duwaqpofel08hngml.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o5JX3-Fs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ei2duwaqpofel08hngml.jpg" alt="Live Sass Compiler VS Code extension"&gt;&lt;/a&gt;&lt;br&gt;
Live Sass Compiler Extension helps you to compile/transpile your SASS/SCSS files to CSS files at realtime with live browser reload.&lt;br&gt;
This extension is helpful for web developers while developing web pages with Sass.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-live-server"&gt;
  &lt;/a&gt;
  5. Live server
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CnyDAAi9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6z5ig8e4zegedkn8jt4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CnyDAAi9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6z5ig8e4zegedkn8jt4.png" alt="Live server VS code extension"&gt;&lt;/a&gt;&lt;br&gt;
The live-server extension automates the reload for you. After installing it, an automated localhost will be able to run in your browser, which you can start with a single button.&lt;br&gt;
This is one of the most helpful extension for web developers.&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>productivity</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Vue Academy #4: v-for directive</title>
      <author>CodeOzz</author>
      <pubDate>Fri, 06 Aug 2021 14:27:43 +0000</pubDate>
      <link>https://dev.to/codeozz/vue-academy-4-v-for-directive-4l7k</link>
      <guid>https://dev.to/codeozz/vue-academy-4-v-for-directive-4l7k</guid>
      <description>&lt;p&gt;Welcome to the new vue academy ! It will be a list of lot of article on vue! I have 2.5 years of experience in this and I can teach a few thing about this !&lt;/p&gt;

&lt;p&gt;With vue you can use some directives, today we will see &lt;code&gt;v-for&lt;/code&gt; in details !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-"&gt;
  &lt;/a&gt;
  What is ?
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;v-for&lt;/code&gt; is a directive use to render a list of items based on an array or an object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
        &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in toto"&lt;/span&gt;
        &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;first&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;second&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;third&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this component we will have three div as below 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;first
second
third
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also get the current index of the iterated item&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
        &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"(item, index) in toto"&lt;/span&gt;
        &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {{ item }} {{ index }}
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It works also with object ! If we replace &lt;code&gt;toto: [ 'first', 'second', 'third' ]&lt;/code&gt; by an object like &lt;code&gt;toto: { a: 1, b: 2, c: 3 }&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;We have 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1
2
3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also access to the current key !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
        &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"(item, attribute) in toto"&lt;/span&gt;
        &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {{ item }} {{ attribute }}
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-raw-key-endraw-attribute"&gt;
  &lt;/a&gt;
  The &lt;code&gt;key&lt;/code&gt; attribute
&lt;/h3&gt;

&lt;p&gt;With the example above, you can ask what is this &lt;code&gt;:key&lt;/code&gt; value?&lt;/p&gt;

&lt;p&gt;In vue, &lt;code&gt;:key&lt;/code&gt; is used in all components, if the key is changed, the component will be reload (destroy and created hook will be triggered). It a simply way to reload properly a component !&lt;/p&gt;

&lt;p&gt;In general you don't need to handle this attribute, but in the &lt;code&gt;v-for&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt; is &lt;code&gt;MANDATORY&lt;/code&gt; !&lt;/p&gt;

&lt;p&gt;And why ?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To give Vue a hint so that it can track each node’s identity, and thus reuse and reorder existing elements, you need to provide a unique key attribute for each item.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I advise you to never use &lt;code&gt;index&lt;/code&gt; as key attribute, always use a unique ID. The answer is not complicated to illustrate, imagine again an array with 1000 items, you delete the second item, so the &lt;code&gt;length&lt;/code&gt; of the iterated array will be changed, and &lt;em&gt;all&lt;/em&gt; index of &lt;em&gt;all&lt;/em&gt; items will changed, so &lt;em&gt;all&lt;/em&gt; components will be reload !&lt;/p&gt;

&lt;p&gt;If you use a unique id by item, and you delete the second item, the other component will be &lt;strong&gt;not reload&lt;/strong&gt; since &lt;strong&gt;all of the key is not changed&lt;/strong&gt; !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vfor-with-vif"&gt;
  &lt;/a&gt;
  v-for with v-if
&lt;/h3&gt;

&lt;p&gt;You should &lt;strong&gt;NEVER&lt;/strong&gt; use &lt;code&gt;v-for&lt;/code&gt; with &lt;code&gt;v-if&lt;/code&gt;, since when they exist on the same node, &lt;code&gt;v-for&lt;/code&gt; has a higher priority than &lt;code&gt;v-if&lt;/code&gt;. That means the &lt;code&gt;v-if&lt;/code&gt; will be run on each iteration of the loop separately !&lt;/p&gt;

&lt;p&gt;Let's go through an example !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
        &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in numberList"&lt;/span&gt;
        &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"isEven(item)"&lt;/span&gt;
        &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;numberList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For each iteration we will execute the &lt;code&gt;isEven&lt;/code&gt; function !&lt;/p&gt;

&lt;p&gt;How to avoid this?&lt;/p&gt;

&lt;p&gt;Two solutions based on the context:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We need to filter some value in your array ! &lt;/p&gt;

&lt;p&gt;Use &lt;code&gt;computed&lt;/code&gt; property  and iterate it !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
        &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"evenItem in evenList"&lt;/span&gt;
        &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"evenItem"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;evenItem&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;numberList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;evenList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we filter the array before iterate it ! We don't need to use &lt;code&gt;v-if&lt;/code&gt; !&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Second&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I need to display the items only if the array size is equal to 5 for exemple.&lt;/p&gt;

&lt;p&gt;You can just add an other balise that will wrap the &lt;code&gt;v-for&lt;/code&gt;, it will contain the &lt;code&gt;v-if&lt;/code&gt; !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"numberList.length === 5"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
           &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in numberList"&lt;/span&gt;
           &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;v-for&lt;/code&gt; is used to show array or object keys, you need to always use a unique id as &lt;code&gt;key&lt;/code&gt; attribute.&lt;/p&gt;

&lt;p&gt;Never use &lt;code&gt;v-for&lt;/code&gt; with &lt;code&gt;v-if&lt;/code&gt;, depending on the current context you have other possibilities !&lt;/p&gt;

&lt;p&gt;If you want to have nice article to read about web dev, you can subscribe to my &lt;strong&gt;FREE newsletter&lt;/strong&gt; at this url -&amp;gt; &lt;a href="https://codeoz.substack.com/welcome"&gt;https://codeoz.substack.com/welcome&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can follow me on :&lt;/p&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if you want to buy me a coffee :D -&amp;gt; &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;https://www.buymeacoffee.com/CodeoZ&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>typescript</category>
    </item>
    <item>
      <title>I wanna someone for project  </title>
      <author>Mohammed Janati</author>
      <pubDate>Fri, 06 Aug 2021 14:21:49 +0000</pubDate>
      <link>https://dev.to/mujanati13/i-wanna-someone-for-project-3l23</link>
      <guid>https://dev.to/mujanati13/i-wanna-someone-for-project-3l23</guid>
      <description>&lt;p&gt;I wanna someone work with me in a project "html css node js"&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>I bought a tiny piece of internet history. [Plus a little puzzle to keep you busy this weekend!]</title>
      <author>InHuOfficial</author>
      <pubDate>Fri, 06 Aug 2021 14:15:37 +0000</pubDate>
      <link>https://dev.to/inhuofficial/i-own-a-tiny-piece-of-internet-history-plus-a-little-puzzle-to-keep-you-busy-this-weekend-559</link>
      <guid>https://dev.to/inhuofficial/i-own-a-tiny-piece-of-internet-history-plus-a-little-puzzle-to-keep-you-busy-this-weekend-559</guid>
      <description>&lt;p&gt;Over a year ago I bought a domain name on a whim. Now you might be thinking "nothing special about that, I have done that!". In fact, some of you will probably have bought loads of domains on a whim! &lt;/p&gt;

&lt;p&gt;But this domain is at least a &lt;em&gt;little bit&lt;/em&gt; special as it is linked to quite a historic web page, one that is older than some of you reading this article (yikes, I am old!). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-little-bit-of-history"&gt;
  &lt;/a&gt;
  A little bit of history!
&lt;/h2&gt;

&lt;p&gt;Back in 2005 &lt;a href="https://twitter.com/tewy"&gt;Alex Tew&lt;/a&gt; wanted some money to pay for his University education. &lt;/p&gt;

&lt;p&gt;He came up with the idea to sell pixels on a page for $1 each. &lt;/p&gt;

&lt;p&gt;When you owned these pixels (bought in blocks of 10x10 pixels) you could upload an image that fits within those pixels.&lt;/p&gt;

&lt;p&gt;In total there were 1000x1000 pixels up for grabs and...the rest is history. They all sold out!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-million-dollar-home-page"&gt;
  &lt;/a&gt;
  The million dollar home page!
&lt;/h2&gt;

&lt;p&gt;Yup, if you did the quick Maths (or knew of the site already) you will have worked out that 1000 x 1000 x $1 is $1,000,000!&lt;/p&gt;

&lt;p&gt;If only I had thought of that idea!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-it-out-in-all-of-its-glory"&gt;
  &lt;/a&gt;
  Check it out in all of its glory!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://www.milliondollarhomepage.com/"&gt;The million dollar home page is still live&lt;/a&gt; and hopefully will be for a long time to come! You can read more about the &lt;a href="https://en.wikipedia.org/wiki/The_Million_Dollar_Homepage"&gt;million dollar homepage over on Wikipedia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can spend hours on there looking at all the little images, the random sites they lead to (and all of the dead ones!) etc.&lt;/p&gt;

&lt;p&gt;Before you go to check it out though, I better get to the point...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-why-is-this-relevant"&gt;
  &lt;/a&gt;
  So why is this relevant?
&lt;/h3&gt;

&lt;p&gt;Oh yes, to the point!&lt;/p&gt;

&lt;p&gt;When you bought these pixels you could link them to a domain name. So when you click on your pixel art it would redirect you to your domain name. &lt;/p&gt;

&lt;p&gt;So I spent (far too long) clicking on every little image, seeing where it went to, checking for dead links and then seeing if the attached domain was up for sale.&lt;/p&gt;

&lt;p&gt;By luck I found an awesome one at a reasonable price!&lt;/p&gt;

&lt;p&gt;Now I could tell you what domain I bought...but that wouldn't be much fun. So here is a little puzzle for you!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-puzzle"&gt;
  &lt;/a&gt;
  The Puzzle!
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Clue 1:&lt;/strong&gt; "The key to unlocking this puzzle lies next to the ______".&lt;/p&gt;

&lt;p&gt;The blank in the first clue is the missing word(s) from this famous movie quote...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clue 2:&lt;/strong&gt; "the matrix has you, follow the _______"&lt;/p&gt;

&lt;p&gt;Not too difficult (I hope!). &lt;/p&gt;

&lt;p&gt;Once you have worked out what you are looking for go to &lt;a href="http://www.milliondollarhomepage.com/"&gt;http://www.milliondollarhomepage.com/&lt;/a&gt; and see if you can find out the answer to my riddle (it may take a while!)!&lt;/p&gt;

&lt;p&gt;You will know if you have found the site as it will simply say "hello there my DEV friend" (yes, I really did make no effort to put anything else up there! It isn't even a valid HTML document...it's Friday, give me a break!). &lt;/p&gt;

&lt;p&gt;First to find it can &lt;strong&gt;put the first letter of each full word in the domain name&lt;/strong&gt; in the comments and claim your prize (which is nothing other than the satisfaction of winning I am afraid!).&lt;/p&gt;

&lt;p&gt;That way other people can play along without you spoiling it!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#update"&gt;
  &lt;/a&gt;
  Update!
&lt;/h4&gt;

&lt;p&gt;Oh darn, I missed a big flaw in my plan as I didn't realise the image had a file name that matched in the HTML due to how the regions work! 🤦‍♂️&lt;/p&gt;

&lt;p&gt;So now it is just down to how much fun you want to have exploring as it isn't much of a challenge if you use your developer skills! &lt;/p&gt;

&lt;p&gt;You &lt;em&gt;could&lt;/em&gt; open DevTools and search for the key word, or you can try and find it by eye and have a bit more fun!&lt;/p&gt;

&lt;p&gt;If you have any funny (or good) ideas of what to do with the domain once you have found it then let me know as it has been sat doing nothing for over a year!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#that-is-it"&gt;
  &lt;/a&gt;
  That is it!
&lt;/h2&gt;

&lt;p&gt;I am still recovering after &lt;a href="https://dev.to/inhuofficial/101-digital-accessibility-tips-and-tricks-4728"&gt;my monster last post&lt;/a&gt; so this is my "contribution" to the internet this week. (and the quotation marks are because I am not adding any value really 😋)&lt;/p&gt;

&lt;p&gt;However I am working on an awesome series to do with building the ultimate blogging tool (&lt;a href="https://dev.to/inhuofficial/designing-the-ultimate-inclusive-writing-tool-part-1-a-wysiwyg-in-745-bytes-ggh"&gt;an extension of some of the ideas in this post&lt;/a&gt;) so you may want to follow me if you write, or are considering writing (and you should write, it is awesome!)!&lt;/p&gt;

&lt;p&gt;I love the fact that I own a little bit of this web page, it is a shame I can't change the image or the URL but still, a little bit of internet history that I will (hopefully) put to good use one day!&lt;/p&gt;

&lt;p&gt;Have a great weekend peeps, I look forward to seeing if anyone finds the image and the domain name!&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Criando Aplicações com Astro Build &amp; Azure Static Web CLI!</title>
      <author>Glaucia Lemos</author>
      <pubDate>Fri, 06 Aug 2021 13:49:10 +0000</pubDate>
      <link>https://dev.to/glaucia86/criando-aplicacoes-com-astro-build-azure-static-web-cli-39nb</link>
      <guid>https://dev.to/glaucia86/criando-aplicacoes-com-astro-build-azure-static-web-cli-39nb</guid>
      <description>&lt;p&gt;Recentemente tivemos o lançamento do serviço &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/overview?WT.mc_id=javascript-34087-gllemos"&gt;Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;. Um serviço que te permite criar e implantar automaticamente aplicações Full Stack (desde o Back-End há Front-End) completa no Azure desde repositório do GitHub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/D8jXxgCd"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UY5i0VYD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/BnsBQ7Hy/swa-overview.png" alt="swa-overview.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A parte mais interessante do &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/overview?WT.mc_id=javascript-34087-gllemos"&gt;Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt; é que esse serviço integra perfeitamente para realizar hospedagem de forma global e de forma distribuída sua aplicação ou conteúdo estático, no lado do Back-End criando API's fazendo uso do serviço &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/apis?WT.mc_id=javascript-34087-gllemos"&gt;Azure Functions&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/key-vault-secrets?WT.mc_id=javascript-34087-gllemos"&gt;incluir recursos de autenticação&lt;/a&gt;&lt;/strong&gt;, roteamento personalizado e incluso autorização baseada em rotas!&lt;br&gt;
E, o melhor disso tudo: realizar &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/plans?WT.mc_id=javascript-34087-gllemos"&gt;hospedagem de forma totalmente gratuita!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Se desejarem saber um pouco mais sobre esse novo serviço, eu escrevi um artigo mais detalhado sobre o produto no link abaixo:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/glaucia86" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TsiHKYKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7BHm3RKS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/8505/767224fd-6d7c-4ed1-aafe-d679b960a2ba.jpg" alt="glaucia86"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/glaucia86/publicando-aplicacoes-estaticas-com-static-web-apps-azure-devops-4c1o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Publicando Aplicações Estáticas com Static Web Apps &amp;amp; Azure DevOps!&lt;/h2&gt;
      &lt;h3&gt;Glaucia Lemos ・ May 12 ・ 14 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#azure&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#mas-o-que-%C3%A9-o-azure-static-web-apps-cli"&gt;
  &lt;/a&gt;
  Mas, o que é o Azure Static Web Apps CLI?!
&lt;/h2&gt;

&lt;p&gt;Bom, o enfoque de hoje será sobre uma ferramenta ligada a esse serviço que te permitirá emular localmente as suas aplicações estáticas de forma muito rápida e dinâmica: &lt;strong&gt;&lt;a href="https://github.com/Azure/static-web-apps-cli"&gt;Azure Static Web Apps CLI&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Azure"&gt;
        Azure
      &lt;/a&gt; / &lt;a href="https://github.com/Azure/static-web-apps-cli"&gt;
        static-web-apps-cli
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Azure Static Web Apps CLI ✨
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
Azure Static Web Apps CLI (preview)&lt;/h2&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/Azure/static-web-apps-clidocs/swa-emu-icon.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--twhQ4gYY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Azure/static-web-apps-clidocs/swa-emu-icon.png" width="300"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;The Static Web Apps CLI, also known as SWA CLI, serves as a local development tool for &lt;a href="https://docs.microsoft.com/azure/static-web-apps" rel="nofollow"&gt;Azure Static Web Apps&lt;/a&gt;. It can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Serve static app assets, or proxy to your app dev server&lt;/li&gt;
&lt;li&gt;Serve API requests, or proxy to APIs running in Azure Functions Core Tools&lt;/li&gt;
&lt;li&gt;Emulate authentication and authorization&lt;/li&gt;
&lt;li&gt;Emulate Static Web Apps configuration, including routing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Static Web Apps CLI is in preview.&lt;/strong&gt; If you have suggestions or you encounter issues, please report them or help us fix them. Your contributions are very much appreciated. 🙏&lt;/p&gt;

&lt;p&gt;The CLI emulates commonly used capabilities of the Azure Static Web Apps cloud service. &lt;strong&gt;Some differences are expected. Always deploy and test your apps in Azure to confirm behavior.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
Quickstart&lt;/h2&gt;
&lt;p&gt;Using &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the cli
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install -g @azure/static-web-apps-cli&lt;/pre&gt;

&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Open a SWA app folder at the root (outside any /api or /app…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Azure/static-web-apps-cli"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Conforme o próprio repositório da ferramenta o &lt;strong&gt;&lt;a href="https://github.com/Azure/static-web-apps-cli"&gt;Azure Static Web Apps CLI&lt;/a&gt;&lt;/strong&gt; com SWA CLI você pode:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ Criar aplicações estáticas ativas ou proxy para o seu server de desenvolvimento de aplicações&lt;/li&gt;
&lt;li&gt;✅ Atender e criar requisições de API's ou proxies para API's que executem no Azure Functions&lt;/li&gt;
&lt;li&gt;✅ Emular autenticação e autorização&lt;/li&gt;
&lt;li&gt;✅ Emular configuração de aplicações Web Estáticas, incluso o roteamento!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Outro ponto importante a mencionar aqui é que você pode emular quaisquer projeto estático ou com estrutura de aplicação Front-End, seja ela:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ React&lt;/li&gt;
&lt;li&gt;✅ Angular&lt;/li&gt;
&lt;li&gt;✅ Svelte&lt;/li&gt;
&lt;li&gt;✅ Vue&lt;/li&gt;
&lt;li&gt;✅ Next.js&lt;/li&gt;
&lt;li&gt;✅ Blazor/WebAssembly!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bom! Falar é bom! Mas é muito melhor quando temos DEMOS! Então, vamos codificar agora e realizar uma demo bem simples de como podemos fazer uso dessa ferramenta localmente!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#demo-time"&gt;
  &lt;/a&gt;
  Demo Time!
&lt;/h2&gt;

&lt;p&gt;A primeira coisa que precisamos fazer é instalar o &lt;strong&gt;&lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;&lt;/strong&gt;! Sempre procuram instalar a versão LTS!&lt;/p&gt;

&lt;p&gt;Nessa demo, estarei usando um novo framework que pode ser uma grande tendência no mundo do desenvolvimento: &lt;strong&gt;&lt;a href="https://astro.build/"&gt;Astro Build&lt;/a&gt;&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Não estarei entrando em detalhes sobre esse framework, até porque o enfoque não é esse nesse artigo. Mas, se desejarem saber mais, posso estar fazendo um artigo e vídeo sobre esse framework fantástico!&lt;/p&gt;

&lt;p&gt;E, caso queiram saber mais detalhes sobre o &lt;strong&gt;&lt;a href="https://astro.build/"&gt;Astro Build&lt;/a&gt;&lt;/strong&gt;, vocês podem saber um pouco mais no vídeo abaixo:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/dsTXcSeAZq8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Para agilizar um pouco mais a nossa demo, eu criei um projeto modelo que, peço encarecidamente que vocês façam um download ou git clone dele:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; git clone https://github.com/glaucia86/astro-swa-demo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Se vocês desejarem, podem fazer as modificações necessárias. Tipo, imagens e outras cositas más! Eu super recomendo quando vocês iniciarem um novo projeto Astro, escolham a opção: &lt;em&gt;Portfolio&lt;/em&gt;. Vocês terão esse mesmo modelo para iniciar, quem sabe um novo site estático portifólio!&lt;/p&gt;

&lt;p&gt;Bom, vão até a pasta &lt;em&gt;astro-demo&lt;/em&gt; e instalam os pacotes localmente usando o comando:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;E, enfim, digitam o comando &lt;code&gt;npm start&lt;/code&gt; para iniciar o projeto. Abrem o browser na página: &lt;code&gt;http://localhost:3000/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Caso vejam conforme a imagem abaixo é porque funcionou tudo certinho!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/qtmtwf8G"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vR-zmf3b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/QtDpXhCv/Captura-de-Tela-2021-08-03-a-s-23-43-51.png" alt="Captura-de-Tela-2021-08-03-a-s-23-43-51.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Depois disso, agora vamos ao próximo passo! Abre o seu command line e digite o seguinte comando:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; @azure/static-web-apps-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Crie uma pasta para que possamos testar essa ferramenta. No meu caso, criei uma pasta com o seguinte nome:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;mkdir &lt;/span&gt;swa-cli-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Agora vem a parte mais legal, onde apenas com o comando de linha vocês poderão criar uma página estática de exemplo. Para isso, execute o comando abaixo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; swa start http://localhost:3000 &lt;span class="nt"&gt;--run&lt;/span&gt; &lt;span class="s2"&gt;"npm start"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Depois que executamos esse comando note que ele pedirá a abrir uma página no browser. Porém, numa porta diferente: &lt;code&gt;http://localhost:4280/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;O que isso quer nos dizer? Que estamos de fato, emulando o serve do Azure Static Web Apps. Desde esse endpoint, podemos testar até mesmo API's de Back-End com esse endpoint ou até mesmo simular uma autenticação integrada de logins. Uma vez que o Azure Static Web Apps tem suporte para isso. (Mais informações &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/authentication-authorization?WT.mc_id=javascript-34087-gllemos"&gt;AQUI&lt;/a&gt;&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;Legal! Não é mesmo?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#realizando-deploy-da-aplica%C3%A7%C3%A3o-via-vs-code"&gt;
  &lt;/a&gt;
  Realizando deploy da aplicação via Vs Code!
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;para realizar os passos abaixo se faz necessário você alocar o seu projeto no GitHub e possuir uma conta free do Azure!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vamos agora fazer o deploy dessa aplicação usando a extensão do Azure Static Web Apps no &lt;strong&gt;&lt;a href="https://code.visualstudio.com/?WT.mc_id=javascript-34087-gllemos"&gt;Visual Studio Code&lt;/a&gt;&lt;/strong&gt;?!&lt;/p&gt;

&lt;p&gt;Para isso, baixem agora mesmo a extensão: &lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurestaticwebapps&amp;amp;WT.mc_id=javascript-34087-gllemos"&gt;Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;! &lt;/p&gt;

&lt;p&gt;Agora abra o projeto no Visual Studio Code e vamos seguir os seguintes passos:&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#passo-01"&gt;
  &lt;/a&gt;
  Passo 01:
&lt;/h5&gt;

&lt;p&gt;Clique no botão &lt;code&gt;+&lt;/code&gt; conforme a imagem abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/9DZVczCk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GN3bXknT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ht3Gb7wK/Captura-de-Tela-2021-08-04-a-s-01-15-35.png" alt="Captura-de-Tela-2021-08-04-a-s-01-15-35.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#passo-02"&gt;
  &lt;/a&gt;
  Passo 02:
&lt;/h5&gt;

&lt;p&gt;Aqui vocês devem definir o nome da aplicação. O nome deve ser único!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/5QgY7pkw"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TeGfKep4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mhfYr5Y6/Captura-de-Tela-2021-08-04-a-s-01-21-19.png" alt="Captura-de-Tela-2021-08-04-a-s-01-21-19.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#passo-03"&gt;
  &lt;/a&gt;
  Passo 03:
&lt;/h5&gt;

&lt;p&gt;Como o Astro ainda não está listado na extensão, vamos escolher a opção &lt;code&gt;custom&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/62g2Dy9Q"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g69G76gm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/tJC3nxwF/step-02.png" alt="step-02.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#passo-04"&gt;
  &lt;/a&gt;
  Passo 04:
&lt;/h5&gt;

&lt;p&gt;Já aqui estaremos definindo a localização da nossa aplicação. Muito cuidado, caso se a sua aplicação (raiz do projeto) estejam em alguma subpasta (que é o meu caso). Nesse exemplo, do meu projeto, a raiz do projeto encontra-se na pasta &lt;code&gt;astro-demo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/3WGdkr8g"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--opFz7mqR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/WpWrftxf/Captura-de-Tela-2021-08-04-a-s-01-27-59.png" alt="Captura-de-Tela-2021-08-04-a-s-01-27-59.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#passo-05"&gt;
  &lt;/a&gt;
  Passo 05:
&lt;/h5&gt;

&lt;p&gt;E, finalmente temos que definir onde está sendo gerada os arquivos de artefato do Astro. Segundo a documentação, fica localizada na pasta &lt;code&gt;dist&lt;/code&gt; (para diferentes frameworks existem diferentes pastas de artifatos. Para saber mais, clique &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/front-end-frameworks?WT.mc_id=javascript-34087-gllemos"&gt;AQUI&lt;/a&gt;&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/LJDqmyHw"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CtQvM95n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/25RnFJgk/step-03.png" alt="step-03.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#passo-06"&gt;
  &lt;/a&gt;
  Passo 06:
&lt;/h5&gt;

&lt;p&gt;Depois que executar o comando acima, abrirá uma caixa que te levará até o próximo passo (ou seja, ao repositório do GitHub)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/5YdDnWGF"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pCFOn82T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/tTYyRXND/step-06.png" alt="step-06.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#passo-07"&gt;
  &lt;/a&gt;
  Passo 07:
&lt;/h5&gt;

&lt;p&gt;Note que, no momento que somos levados ao site do repositório do projeto, apresentará uma pasta contendo um arquivo 'yaml' e além disso, uma action sendo executada pelo GitHub. Clique nessa action!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/jC8ZjrXQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kyd3whHc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/dtFX4sZX/step-07.png" alt="step-07.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#passo-08"&gt;
  &lt;/a&gt;
  Passo 08:
&lt;/h5&gt;

&lt;p&gt;Agora olha que interessante, há um &lt;code&gt;job&lt;/code&gt; sendo executado ali! Isso demonstra que a nossa aplicação está fazendo uma comunicação com a plataforma Azure e além do mais criando uma esteira de C.I e C.D pra nós! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/MvC0cZjR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--imYKV1XP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/htj25fDC/step-08.png" alt="step-08.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#passo-09"&gt;
  &lt;/a&gt;
  Passo 09:
&lt;/h5&gt;

&lt;p&gt;Caso tudo dê certo! Agora vamos ao último passo!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/t15Fmhvt"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--__ixgDN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/858wc4h3/step-09.png" alt="step-09.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#passo-10"&gt;
  &lt;/a&gt;
  Passo 10:
&lt;/h5&gt;

&lt;p&gt;Retorne para o Visual Studio Code e abre novamente a extensão do SWA. E, procure pela aplicação recém criada! Clique com o botão direito em: &lt;code&gt;browser site&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Agora abram o browser! E, vocês verão o projeto de vocês disponível globalmente e pronto para ser visto por todo mundo!&lt;/p&gt;

&lt;p&gt;Se vocês desejarem ver o meu projeto online, ele está disponível &lt;strong&gt;&lt;a href="https://yellow-grass-008f2c710.azurestaticapps.net/"&gt;AQUI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gifyu.com/image/OJkv"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_GYEMGp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://s6.gifyu.com/images/astro-swa-demo.gif" alt="astro-swa-demo.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclusão!
&lt;/h2&gt;

&lt;p&gt;O Azure Static Web Apps veio pra nos auxiliar e facilitar quando o assunto é realizar deployment de projetos estáticos de uma maneira: simples, rápida e dinâmica! E, principalmente - a melhor parte disso tudo - integrado ao GitHub Actions! Criando assim uma esteira de C.I e C.D automaticamente pra nós! Fantástico, não é mesmo?!&lt;/p&gt;

&lt;p&gt;Se desejarem saber mais ou até mesmo experimentar esse serviço de graça, super recomendo os cursos abaixo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/?WT.mc_id=javascript-34087-gllemos"&gt;Documentação Oficial do Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/paths/build-applications-with-azure-devops/?WT.mc_id=javascript-34087-gllemos"&gt;Curso Grátis - Azure DevOps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/learn/modules/publish-app-service-static-web-app-api/?WT.mc_id=javascript-34087-gllemos"&gt;Curso Grátis - Publique uma Aplicação Estática no Angular, React, Vue ou Javascript &amp;amp; API&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/learn/modules/create-deploy-static-webapp-gatsby-app-service/?WT.mc_id=javascript-34087-gllemos"&gt;Curso Grátis - Crie e Publique um site estático com Gatsby&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/publish-gatsby/?WT.mc_id=javascript-34087-gllemos"&gt;Implementando Azure Static Web Apps no Gatsby&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/publish-hugo/?WT.mc_id=javascript-34087-gllemos"&gt;Implementando Azure Static Web Apps no Hugo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/publish-vuepress/?WT.mc_id=javascript-34087-gllemos"&gt;Implementando Azure Static Web Apps no VuePress&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/azure/static-web-apps/deploy-nextjs/?WT.mc_id=javascript-34087-gllemos"&gt;Implementando Azure Static Web Apps no Next.js&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/deploy-nuxtjs/?WT.mc_id=javascript-34087-gllemos"&gt;Implementando Azure Static Web Apps no Nuxt.js&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/azure/static-web-apps/publish-jekyll/?WT.mc_id=javascript-34087-gllemos"&gt;Implementando Azure Static Web Apps no Jekyll&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#palavras-finais"&gt;
  &lt;/a&gt;
  Palavras Finais
&lt;/h2&gt;

&lt;p&gt;Espero que esse tutorial de SWA CLI + Astro Build seja de grande ajuda à todas as pessoas! Se vocês curtiram sobre o Astro, deixem nos comentários abaixo. Porque dependendo eu faço uma série de vídeos explicando melhor sobre esse framework incrível!&lt;/p&gt;

&lt;p&gt;Ah! Já ia esquecer de falar aqui! Não deixem de se inscrever no meu Canal do Youtube! Estou criando inúmeras séries incríveis para esse ano de 2021! &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;😃 &lt;strong&gt;Microsoft Learn Live Sessions (a partir de Outubro)&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;😃 &lt;strong&gt;Tutoriais semanais de Node.js, TypeScript &amp;amp; JavaScript&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;😃 &lt;strong&gt;E muitos Live Codings (a partir de Outubro)&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Se são conteúdos que você curte, então não deixa de se inscrever e ative o sininho para ficar sabendo quando teremos vídeo novo!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/youtube-canal-glaucialemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJTWdv_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/pr3TL4Pd/Screen-Shot-12-31-20-at-01-06-AM.png" alt="Screen-Shot-12-31-20-at-01-06-AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E para ficarem por dentro de várias outras novidades, não deixem de me seguir lá no twitter!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/glaucia_lemos86"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8TRF6AJa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code4coders.files.wordpress.com/2019/05/image-12.png" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nos vemos! Até a próxima pessoal! 😍&lt;/p&gt;

</description>
      <category>azure</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Mobile App Development Company In India
</title>
      <author>Emmy Milly</author>
      <pubDate>Fri, 06 Aug 2021 13:45:27 +0000</pubDate>
      <link>https://dev.to/emmy161/mobile-app-development-company-in-india-53bg</link>
      <guid>https://dev.to/emmy161/mobile-app-development-company-in-india-53bg</guid>
      <description>&lt;p&gt;Grepix Infotech is a mobile app development company in India that develops custom iPhone applications for leading brands, enterprises and startups. Our experienced iPhone developers develop mobile applications for iPhone, iPad and iPod, hire iPhone app development company. We offer you the best pricing for iPhone app development.&lt;br&gt;
For more info: &lt;a href="https://www.grepixit.com/"&gt;https://www.grepixit.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>android</category>
    </item>
    <item>
      <title>Advance Angular Dynamic Component</title>
      <author>ezzabuzaid</author>
      <pubDate>Fri, 06 Aug 2021 13:40:33 +0000</pubDate>
      <link>https://dev.to/this-is-angular/advance-angular-dynamic-component-12e</link>
      <guid>https://dev.to/this-is-angular/advance-angular-dynamic-component-12e</guid>
      <description>&lt;p&gt;In this article, I will show you how you can still use inputs and outputs and support OnChanges lifecycle while creating dynamic components.&lt;/p&gt;

&lt;p&gt;If you don't know about dynamic components yet, I recommend this article &lt;a href="https://netbasal.com/dynamically-creating-components-with-angular-a7346f4a982d"&gt;Dynamically Creating Components with Angular&lt;/a&gt; before going forward.&lt;/p&gt;

&lt;p&gt;For clarity about what I’m going to talk about, the &lt;a href="https://github.com/ezzabuzaid/dynamic-component-article/tree/main/src/app"&gt;project&lt;/a&gt; is available to browse through Github. or a &lt;a href="https://stackblitz.com/edit/angular-ivy-ogmamz?file=src%2Fapp%2Fcolor-box.component.ts"&gt;Demo&lt;/a&gt; if you prefer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The Problem
&lt;/h2&gt;

&lt;p&gt;In order to create a dynamic component, you have to use either &lt;code&gt;ngComponentOutlet&lt;/code&gt; directive or &lt;code&gt;ComponentFactoryResolver&lt;/code&gt; object, neither provides a way to bind inputs and outputs.&lt;/p&gt;

&lt;p&gt;moreover, &lt;code&gt;ngOnChanges&lt;/code&gt; won't work, &lt;a href="https://indepth.dev/posts/1054/here-is-what-you-need-to-know-about-dynamic-components-in-angular#ngonchanges"&gt;This is because the function that performs inputs checks is generated by the compiler during compilation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The Solution
&lt;/h2&gt;

&lt;p&gt;To work around the problem we would use a custom directive that could help as little as possible to facilitate the bindings.&lt;/p&gt;

&lt;p&gt;We will use &lt;code&gt;ComponentFactoryResolver&lt;/code&gt; to create a component factory that holds metadata about the component inputs and outputs. this metadata will be used to ensure correct properties names of inputs and outputs are used.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;componentFactoryResolver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolveComponentFactory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ComponentType&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;factory&lt;/code&gt; has two getters that represent the component inputs and outputs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * The inputs of the component.
 */&lt;/span&gt;
&lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;propName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;templateName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}[];&lt;/span&gt;
&lt;span class="cm"&gt;/**
 * The outputs of the component.
 */&lt;/span&gt;
&lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;propName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;templateName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}[];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each of which has &lt;code&gt;propName&lt;/code&gt; and &lt;code&gt;templateName&lt;/code&gt; that corresponds to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;templateName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;propName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;templateName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;propName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;templateName&lt;/code&gt; defaults to &lt;code&gt;propName&lt;/code&gt; if not specifed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;Our directive would be used like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ng-template&lt;/span&gt; &lt;span class="na"&gt;[dynamic-component]=&lt;/span&gt;&lt;span class="s"&gt;"component"&lt;/span&gt; &lt;span class="na"&gt;[inputs]=&lt;/span&gt;&lt;span class="s"&gt;"{}"&lt;/span&gt; &lt;span class="na"&gt;[outputs]=&lt;/span&gt;&lt;span class="s"&gt;"{}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/ng-template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Types that will be used in the code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;UserOutputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;UserInputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ComponentInputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ComponentFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;inputs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ComponentOutputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ComponentFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;outputs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Utility function for strict mode people&lt;/strong&gt; 😅&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;assertNotNullOrUndefined&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;asserts&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;NonNullable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`cannot be undefined or null.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;The directive&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Directive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;[dynamic-component]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;DynamicComponentDirective&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnDestroy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;OnChanges&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dynamic-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;UserOutputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;UserInputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="nx"&gt;ngOnChanges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SimpleChanges&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;ngOnDestroy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To complete the setup we need to make sure that&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;outputs&lt;/code&gt;/&lt;code&gt;inputs&lt;/code&gt; object corresponds to component outputs/inputs, no incorrect names used.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;component&lt;/code&gt; &lt;code&gt;ngOnChange&lt;/code&gt; runs on input change.&lt;/li&gt;
&lt;li&gt;outputs &lt;code&gt;EventEmitter&lt;/code&gt; are auto unsubscribed from.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'll show a few functions implementation to better highlight how things are done. You might want to check the &lt;a href="https://github.com/ezzabuzaid/dynamic-component-article/blob/main/src/app/dynamic-component.directive.ts"&gt;complete code&lt;/a&gt; while reading the following section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#validation"&gt;
  &lt;/a&gt;
  Validation
&lt;/h2&gt;

&lt;p&gt;Since this is not Angular out-of-the-box solution we can't ensure the correct inputs/outputs names are used hence manual validation is required to avoid hidden issues.&lt;/p&gt;

&lt;p&gt;As mentioned above &lt;code&gt;ComponentFactory&lt;/code&gt; object will be used to inspect component inputs and outputs,    &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inputs"&gt;
  &lt;/a&gt;
  Inputs
&lt;/h3&gt;

&lt;p&gt;Loop over the user-provided inputs, check if each provided input is declared in the component as &lt;strong&gt;Input&lt;/strong&gt;.&lt;br&gt;
A component input is a field decorated with &lt;code&gt;@Input&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;validateInputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;componentInputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ComponentInputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userInputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;UserInputs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userInputsKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userInputs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;userInputsKeys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userInputKey&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;componentHaveThatInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;componentInputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;componentInput&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;componentInput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;templateName&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;userInputKey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;componentHaveThatInput&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Input &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt; &lt;span class="nx"&gt;userInputKey&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is not &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; input.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#outputs"&gt;
  &lt;/a&gt;
  Outputs
&lt;/h3&gt;

&lt;p&gt;Loop over the component outputs, check if each output holds an instance of &lt;code&gt;EventEmitter&lt;/code&gt;.&lt;br&gt;
A component output is a field decorated with &lt;code&gt;@Output&lt;/code&gt; and has &lt;code&gt;EventEmitter&lt;/code&gt; instance as value.&lt;/p&gt;

&lt;p&gt;In the other part, we perform a loop over the user-provided outputs, check if each provided output is declared in the component as &lt;strong&gt;Output&lt;/strong&gt; and if the user-provided output is function. that function will be used as &lt;code&gt;EventEmitter&lt;/code&gt; handler.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;validateOutputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;componentOutputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ComponentOutputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userOutputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;UserOutputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;componentInstance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;componentOutputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;componentInstance&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nx"&gt;EventEmitter&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Output &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propName&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; must be a typeof EventEmitter`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;outputsKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userOutputs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;outputsKeys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;componentHaveThatOutput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;componentOutputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;templateName&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;componentHaveThatOutput&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Output &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is not &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; output.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userOutputs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Output &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; must be a function`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#binding"&gt;
  &lt;/a&gt;
  Binding
&lt;/h2&gt;

&lt;p&gt;Binding is pretty straightforward now since we won't have incorrect inputs/outputs names.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inputs"&gt;
  &lt;/a&gt;
  Inputs
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;bindInputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;componentInputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ComponentInputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userInputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;UserInputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;componentInstance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;componentInputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userInputs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;templateName&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="nx"&gt;componentInstance&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#outputs"&gt;
  &lt;/a&gt;
  Outputs
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;takeUntil&lt;/code&gt; operator used to unsubscribe from the &lt;code&gt;EventEmitter&lt;/code&gt; instance later on.&lt;br&gt;
&lt;code&gt;this.subscription&lt;/code&gt; is an instance of &lt;code&gt;Subject&lt;/code&gt;, which will be declared in the next sections.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;bindOutputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;componentOutputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ComponentInputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userOutputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;UserInputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;componentInstance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;componentOutputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;componentInstance&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;EventEmitter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;takeUntil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscription&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userOutputs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;templateName&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
              &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// in case the output has not been provided at all&lt;/span&gt;
                  &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-the-component"&gt;
  &lt;/a&gt;
  Creating The Component
&lt;/h2&gt;

&lt;p&gt;Creating dynamic components is done using &lt;code&gt;ComponentFactoryResolver&lt;/code&gt; and &lt;code&gt;ViewContainerRef&lt;/code&gt;.&lt;br&gt;
First, we create a factory using &lt;code&gt;ComponentFactoryResolver&lt;/code&gt;, the factory contains the metadata to perform inputs/outputs validation.&lt;/p&gt;

&lt;p&gt;Second, we use that factory to create the component using &lt;code&gt;ViewContainerRef&lt;/code&gt;, it also takes the injector, which will be declared later on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;createComponent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactoryResolver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolveComponentFactory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;viewContainerRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createComponent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;injector&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#cleaning-up"&gt;
  &lt;/a&gt;
  Cleaning up
&lt;/h2&gt;

&lt;p&gt;To destroy a component we invoke the &lt;code&gt;destroy&lt;/code&gt; method defined in &lt;code&gt;ComponentRef&lt;/code&gt;, then we clear &lt;code&gt;ViewContainerRef&lt;/code&gt; which holds the actual component, doing so will also remove it from the UI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;destroyComponent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;destroy&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;viewContainerRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the cleanup will be performed in &lt;code&gt;ngOnDestroy&lt;/code&gt; lifecycle, the &lt;code&gt;subscription&lt;/code&gt; is as mentioned previously an instance of &lt;code&gt;Subject&lt;/code&gt; that we used to unsubscribe from &lt;code&gt;EventEmitter&lt;/code&gt; subscriptions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ngOnDestroy&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroyComponent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#combine-the-functions"&gt;
  &lt;/a&gt;
  Combine The Functions
&lt;/h2&gt;

&lt;p&gt;Let's call the functions, &lt;code&gt;ngOnChanges&lt;/code&gt; lifecycle will be used to create the component whenever the &lt;code&gt;component&lt;/code&gt; input or &lt;code&gt;injector&lt;/code&gt; input changes, in that case, we destroy the previous component first, then we create the new component.&lt;/p&gt;

&lt;p&gt;after that, we perform the validation then bind the inputs and outputs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;subscription&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Subject&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dynamic-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;UserOutputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;UserInputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;injector&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;Injector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ngOnChanges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SimpleChanges&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ensure component is defined&lt;/span&gt;
  &lt;span class="nx"&gt;assertNotNullOrUndefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shouldCreateNewComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
      &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;currentValue&lt;/span&gt;
      &lt;span class="o"&gt;||&lt;/span&gt;
      &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;injector&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;injector&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;currentValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shouldCreateNewComponent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroyComponent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createComponent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// to make eslint happy ^^&lt;/span&gt;
  &lt;span class="nx"&gt;assertNotNullOrUndefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactory&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;assertNotNullOrUndefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// to remove old subscription&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validateOutputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validateInputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bindInputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bindOutputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with that, in place, we have all the required functionality to do what [ngComponentOutlet] can't.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-ngonchanges"&gt;
  &lt;/a&gt;
  The ngOnChanges
&lt;/h2&gt;

&lt;p&gt;So far we can completely create dynamic components, but we can't use &lt;code&gt;ngOnChanges&lt;/code&gt; lifecycle since it doesn't react to &lt;code&gt;@Input&lt;/code&gt; changes therefore we have to do this manually.&lt;/p&gt;

&lt;p&gt;Another way to do this is to change the &lt;code&gt;@Input&lt;/code&gt; field that concerned you to have getter and setter, so you can know when a change happens, but it is not a favorable option so let's stick &lt;code&gt;ngOnChanges&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's start with creating &lt;em&gt;changes&lt;/em&gt; object for the component.&lt;br&gt;
Basically, do a loop over new inputs (&lt;code&gt;currentInputs&lt;/code&gt;) and compare each input with the previous one, in case of change we add it as changed input to the changes object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;makeComponentChanges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputsChange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SimpleChange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;firstChange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SimpleChange&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;previuosInputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputsChange&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentInputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputsChange&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;currentValue&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentInputs&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inputName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentInputValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentInputs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;inputName&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;previuosInputValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;previuosInputs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;inputName&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentInputValue&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;previuosInputValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;inputName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SimpleChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstChange&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;previuosInputValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currentInputValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;firstChange&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SimpleChange&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we have to manually call the &lt;code&gt;ngOnChanges&lt;/code&gt; from the component instance if the component declared it and passes changes as an argument.&lt;br&gt;
Changing the previous function to have the functionality&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ngOnChanges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SimpleChanges&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ensure component is defined&lt;/span&gt;
  &lt;span class="nx"&gt;assertNotNullOrUndefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="na"&gt;componentChanges&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SimpleChange&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shouldCreateNewComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
      &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;currentValue&lt;/span&gt;
      &lt;span class="o"&gt;||&lt;/span&gt;
      &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;injector&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;injector&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;currentValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shouldCreateNewComponent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroyComponent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createComponent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="c1"&gt;// (1) &lt;/span&gt;
      &lt;span class="nx"&gt;componentChanges&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;makeComponentChanges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// (2)&lt;/span&gt;
  &lt;span class="nx"&gt;componentChanges&lt;/span&gt; &lt;span class="o"&gt;??=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;makeComponentChanges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;assertNotNullOrUndefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactory&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;assertNotNullOrUndefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validateOutputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validateInputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;

  &lt;span class="c1"&gt;// (3)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bindInputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// (4)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// to remove old subscription&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bindOutputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// (5)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;OnChanges&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ngOnChanges&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ngOnChanges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;componentChanges&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Create changes object with &lt;code&gt;firstChange&lt;/code&gt; as true after creating the component.&lt;/li&gt;
&lt;li&gt;In case the component didn't change that means only the inputs or outputs did change so we create changes object with &lt;code&gt;firstChange&lt;/code&gt; as false.&lt;/li&gt;
&lt;li&gt;Rebind the inputs only if they did change.&lt;/li&gt;
&lt;li&gt;Rebind the outputs only if they did change.&lt;/li&gt;
&lt;li&gt;Calling component &lt;code&gt;ngOnChanges&lt;/code&gt; lifecycle with the possible inputs changes.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;Time to try it out. &lt;a href="https://stackblitz.com/edit/angular-ivy-ogmamz?file=src%2Fapp%2Fcolor-box.component.ts"&gt;Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's a simple component that displays a color based on input and emits an event when it changes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;EventEmitter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;OnChanges&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SimpleChanges&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app-color-box&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;div style="height: 250px; width: 250px;" [style.background-color]="backgroundColor"&amp;gt;&amp;lt;/div&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ColorBoxComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnChanges&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Output&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;backgroundColorChanges&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EventEmitter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;ngOnChanges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SimpleChanges&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColorChanges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Host component declares &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; with &lt;code&gt;ColorBoxComponent&lt;/code&gt; as the &lt;code&gt;dynamic-component&lt;/code&gt; with inputs and outputs.&lt;br&gt;
Clicking on &lt;em&gt;Change Color&lt;/em&gt; button will invoke &lt;code&gt;ngOnChanges&lt;/code&gt; of &lt;code&gt;ColorBoxComponent&lt;/code&gt;, just as it should be.  &lt;/p&gt;

&lt;p&gt;Try to change the input name and you'll see an exception thrown in the console.&lt;/p&gt;

&lt;p&gt;A bit about outputs, you'll need to use an arrow function syntax to have &lt;code&gt;this&lt;/code&gt; referring to the &lt;code&gt;AppComponent&lt;/code&gt; instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ColorBoxComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./color-box.component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app-root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`
  &amp;lt;ng-template
   [dynamic-component]="component"
   [inputs]="{backgroundColor: backgroundColor}"
   [outputs]="{backgroundColorChanges: onColorChange}"&amp;gt;
  &amp;lt;/ng-template&amp;gt;
  &amp;lt;button (click)="changeColor()"&amp;gt;Change Color&amp;lt;/button&amp;gt;
`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;styleUrls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.component.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AppComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;component&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ColorBoxComponent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;onColorChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ColorBoxComponent&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;backgroundColor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;changeColor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Dynamic component is almost required in every project and having the ability to deal with it in an easy way is important.&lt;/p&gt;

&lt;p&gt;Lastly, there's already a package that does all of that and a bit more &lt;a href="https://www.npmjs.com/package/ng-dynamic-component"&gt;ng-dynamic-component&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://indepth.dev/posts/1054/here-is-what-you-need-to-know-about-dynamic-components-in-angular#ngonchanges"&gt;Here is what you need to know about dynamic components in Angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/angular/angular/blob/master/packages/common/src/directives/ng_component_outlet.ts"&gt;NgComponentOutlet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://netbasal.com/dynamically-creating-components-with-angular-a7346f4a982d"&gt;Dynamically Creating Components with Angular&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>angular</category>
    </item>
    <item>
      <title>How to develop Cryptocurrency Trading Platform?</title>
      <author>Robert John</author>
      <pubDate>Fri, 06 Aug 2021 13:29:55 +0000</pubDate>
      <link>https://dev.to/robertj46122142/how-to-develop-cryptocurrency-trading-platform-56g0</link>
      <guid>https://dev.to/robertj46122142/how-to-develop-cryptocurrency-trading-platform-56g0</guid>
      <description>&lt;p&gt;It has been more than 12 years since Bitcoin (BTC) first emerged in the world. However, the cryptocurrency industry is continuously breaking records even now.  The daily trading volume of digital currencies is $99.95 billion according to data given by CoinMarketCap. Besides that, there are 11175 cryptos in the market today. Hence, is a highly suitable time for entrepreneurs to buy a White-label Cryptocurrency Exchange software and begin their lucrative journey. They can get in touch with a well-versed app development company to create a cutting-edge trading platform. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;What are the various kinds of Bitcoin Exchange Software?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Cryptopreneurs can purchase different types of Cryptocurrency Exchange software based on the business needs, market conditions, and regulatory laws. They can choose (Centralized, Decentralized, Peer-to-Peer, and Hybrid) to set up their online trading platform.  The degree of control over funds and freedom in decision-making varies from one Bitcoin Exchange PHP script to another. &lt;/p&gt;

&lt;p&gt;Moreover, entrepreneurs can form a strong brand image in the industry by buying white-label solutions of popular crypto exchanges. For instance, an app development company will offer clones of Binance Decentralized Exchange (DEX), Bitstamp, Coinbase, IDEX, LocalBitcoins, Paxful, Poloniex, and WazirX. &lt;/p&gt;

&lt;p&gt;Get the guide to &lt;a href="https://www.appdupe.com/cryptocurrency-exchange-script"&gt;Develop Crypto trading platform&lt;/a&gt;&lt;/p&gt;

</description>
      <category>cryptocurrency</category>
      <category>cryptotrading</category>
      <category>bitcointrading</category>
    </item>
    <item>
      <title> Game Dev Digest — Issue #105 - Double Stuffed</title>
      <author>Game Dev Digest - The Newsletter On Unity Game Dev</author>
      <pubDate>Fri, 06 Aug 2021 13:08:17 +0000</pubDate>
      <link>https://dev.to/gamedevdigest/game-dev-digest-issue-105-double-stuffed-5h4f</link>
      <guid>https://dev.to/gamedevdigest/game-dev-digest-issue-105-double-stuffed-5h4f</guid>
      <description>&lt;h3&gt;
  &lt;a href="#issue-105-double-stuffed"&gt;
  &lt;/a&gt;
  Issue #105 - Double Stuffed
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://gamedevdigest.com/digests/issue-105-double-stuffed.html"&gt;GameDevDigest.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ye6TfKSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/social-posts/issue-105.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ye6TfKSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/social-posts/issue-105.png" alt="Issue #105 - Double Stuffed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Newsletter is back this week, hope you enjoy it as usual!&lt;/p&gt;




&lt;p&gt;&lt;a href="https://80.lv/articles/depth-of-field-in-unity-for-2d-games-with-semi-transparent-sprites"&gt;&lt;strong&gt;Depth Of Field in Unity for 2D Games With Semi-Transparent Sprites&lt;/strong&gt;&lt;/a&gt;  - The Co-Founder of The Sixth Hammer Dimitar Popov has shared the company's findings on setting up DoF Blur in 2D games, discussed the problems they faced, and how they overcame the challenges of this task.&lt;br&gt;
&lt;a href="https://80.lv/articles/depth-of-field-in-unity-for-2d-games-with-semi-transparent-sprites"&gt;&lt;em&gt;80.lv&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/posts/no-bloom-no-post-53965598"&gt;&lt;strong&gt;No Bloom? No Problem: Glowing Stuff without Post Effects&lt;/strong&gt;&lt;/a&gt;  - In this lesson, we're going to look at ways to make the things in your game appear to glow without the use of bloom!&lt;br&gt;
&lt;a href="https://www.patreon.com/posts/no-bloom-no-post-53965598"&gt;&lt;em&gt;Team Dogpit&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/posts/54164790"&gt;&lt;strong&gt;URP Compute Grass Shader + Grass Painter Update&lt;/strong&gt;&lt;/a&gt;  - A few months ago I made a Geometry shader for interactive grass. While this works great on Windows, Geometry Shaders aren't that well supported on other platforms. A better option for the same effect is a Compute Shader, which is supported on PS4/5, Xbox, Switch, iOs, Android, and Windows. &lt;em&gt;[&lt;a href="https://www.patreon.com/posts/53587750"&gt;built-in pipeline version&lt;/a&gt; also available]&lt;/em&gt;&lt;br&gt;
&lt;a href="https://www.patreon.com/posts/54164790"&gt;&lt;em&gt;Minions Art&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bronsonzgeb.com/index.php/2021/07/25/pixelate-filter-in-urp-using-compute-shaders/"&gt;&lt;strong&gt;Pixelate Filter in URP using Compute Shaders&lt;/strong&gt;&lt;/a&gt;  - This article will use the pixelate image filter from the previous post but in URP, the Universal Render Pipeline. We’ll set up a ScriptableRendererFeature and ScriptableRenderPass to run the compute shader at the end of the rendering pipeline. I recommend you read the previous pixelate filter post before this one to understand the full context.&lt;br&gt;
&lt;em&gt;[Don't miss the &lt;a href="https://bronsonzgeb.com/index.php/2021/08/01/pixelate-filter-in-hdrp-using-compute-shaders/"&gt;HDRP&lt;/a&gt; version as well]&lt;/em&gt;&lt;br&gt;
&lt;a href="https://bronsonzgeb.com/index.php/2021/07/25/pixelate-filter-in-urp-using-compute-shaders/"&gt;&lt;em&gt;Bronson Zgeb&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://catlikecoding.com/unity/tutorials/pseudorandom-noise/voronoi-noise/"&gt;&lt;strong&gt;Voronoi Noise&lt;/strong&gt;&lt;/a&gt;  - This is the sixth tutorial in a series about pseudorandom noise. It introduces various flavors of Voronoi noise.&lt;br&gt;
&lt;a href="https://catlikecoding.com/unity/tutorials/pseudorandom-noise/voronoi-noise/"&gt;&lt;em&gt;catlikecoding.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.unity.com/technology/optimize-your-mobile-game-performance-expert-tips-on-graphics-and-assets"&gt;&lt;strong&gt;Optimize your mobile game performance: Expert tips on graphics and assets&lt;/strong&gt;&lt;/a&gt;  - In the final installment of this optimization series, we focus on how to improve the performance of your assets, project configuration, and graphics. In case you missed them, check out our previous posts on profiling, memory, and code architecture, as well as physics, UI, and audio, for a more complete picture of how to optimize your game – or, download the free e-book for a rundown of all these topics.&lt;br&gt;
&lt;a href="https://blog.unity.com/technology/optimize-your-mobile-game-performance-expert-tips-on-graphics-and-assets"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.unity.com/games/2d-art-creation-in-dragon-crashers"&gt;&lt;strong&gt;2D art creation in Dragon Crashers&lt;/strong&gt;&lt;/a&gt;  - Talking with Eduardo from the Unity 2D team, Jarek opened up about his creative process, tips for creating sprites, 2D lighting and animations, and using Affinity Designer and Photo, his art and design software of choice.&lt;br&gt;
&lt;a href="https://blog.unity.com/games/2d-art-creation-in-dragon-crashers"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.sunnyvalleystudio.com/blog/how-to-sort-sprites-in-unity"&gt;&lt;strong&gt;How to sort sprites by Y axis in Unity 2D&lt;/strong&gt;&lt;/a&gt;  - Creating the illusion of 3D in 2D.&lt;br&gt;
&lt;a href="http://www.sunnyvalleystudio.com/blog/how-to-sort-sprites-in-unity"&gt;&lt;em&gt;sunnyvalleystudio.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://monoflauta.com/2021/07/27/11-useful-unity-c-extension-methods/"&gt;&lt;strong&gt;11 Useful Unity C# Extension Methods&lt;/strong&gt;&lt;/a&gt;  - This time I will show you a list of useful Unity extensions and the cases where you can use them. I had been looking around to expand my list of useful extensions and some of them were pretty interesting plus I already had a few I normally use.&lt;br&gt;
&lt;a href="https://monoflauta.com/2021/07/27/11-useful-unity-c-extension-methods/"&gt;&lt;em&gt;monoflauta.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gamedev-resources.com/create-an-item-management-editor-tool-with-ui-toolkit/"&gt;&lt;strong&gt;Create an item management editor window with UI Toolkit&lt;/strong&gt;&lt;/a&gt;  - This tutorial will cover the fundamentals of creating a custom editor tool, including what scriptable objects are and how to create, delete and bind to one. You will also learn about ListView and the Object Picker.&lt;br&gt;
&lt;a href="https://gamedev-resources.com/create-an-item-management-editor-tool-with-ui-toolkit/"&gt;&lt;em&gt;gamedev-resources.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.raywenderlich.com/22175776-introduction-to-textmesh-pro-in-unity"&gt;&lt;strong&gt;Introduction to TextMesh Pro in Unity&lt;/strong&gt;&lt;/a&gt;  - Learn about TextMesh Pro in Unity by creating a spooky text-based adventure game where the style of the text changes based on what happens in the story.&lt;br&gt;
&lt;a href="https://www.raywenderlich.com/22175776-introduction-to-textmesh-pro-in-unity"&gt;&lt;em&gt;raywenderlich.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gamasutra.com/view/news/386242/Going_forward_Unity_devs_will_need_Unity_Pro_to_publish_on_consoles.php?"&gt;&lt;strong&gt;Going forward, Unity devs will need Unity Pro to publish on consoles&lt;/strong&gt;&lt;/a&gt;  - In late June, Unity quietly updated its licensing policy requirements for developers working on “closed platforms” like Xbox, PlayStation, Nintendo Switch, and Google Stadia. Unity developers starting new projects will now need either a Unity Pro license or a Preferred Platform License Key to develop for these platforms.&lt;br&gt;
&lt;em&gt;[&lt;a href="https://www.youtube.com/watch?v=fXUvnEJ3YeA"&gt;Watch&lt;/a&gt; Gamefromscratch's take]&lt;/em&gt;&lt;br&gt;
&lt;a href="https://gamasutra.com/view/news/386242/Going_forward_Unity_devs_will_need_Unity_Pro_to_publish_on_consoles.php?"&gt;&lt;em&gt;gamasutra.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#videos"&gt;
  &lt;/a&gt;
  Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=kQIBQbAShk0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4yXO4A9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/a28f74c18eedfc1ebb0f195c424ee8ff.png" alt="Creator Spotlight: Minute of Islands by Studio Fizbin"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=kQIBQbAShk0"&gt;&lt;strong&gt;Creator Spotlight: Minute of Islands by Studio Fizbin&lt;/strong&gt;&lt;/a&gt;  - Studio Fizbin joins us on Twitch to explore the tech behind their gorgeous 2D narrative puzzle platformer, Minute of Islands. We answer questions from the community as we open up the engine and learn how the team built their hand-drawn environment, the challenges they faced, and what tools helped achieve their vision for this vibrant world.&lt;br&gt;
&lt;em&gt;[don't miss these other Creator Spotlights as well: &lt;a href="https://www.youtube.com/watch?v=pu9krs6rHKQ"&gt;Harold Halibut | Slow Bros.&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=jR_4qVRO3e8"&gt;Praey for the Gods | No Matter Studios&lt;/a&gt;]&lt;/em&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=kQIBQbAShk0"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=GFOpKcpKGKQ"&gt;&lt;strong&gt;Batman Arkham's Freeflow Combat | Mix and Jam&lt;/strong&gt;&lt;/a&gt;  - This project is a take on the Freeflow Combat system from the Batman Arkham series of games! Let’s explore game dev techniques and try to achieve a similar system!&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=GFOpKcpKGKQ"&gt;&lt;em&gt;Mix and Jam&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=AbV7gVCndIE"&gt;&lt;strong&gt;I Made The Legend of Zelda Boss Fights but they’re 3D&lt;/strong&gt;&lt;/a&gt;  - I Made The Legend of Zelda Boss Fights but they’re 3D. . . Last time when I made The Legend of Zelda but it’s 3D, I said at the end of the video that I might continue on with the dungeons and boss fights in another video since I had never made a boss at that point. After a couple months I’ve finally finished up with doing all the different dungeons, along with the enemies and the bosses.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=AbV7gVCndIE"&gt;&lt;em&gt;CodyCantEatThis&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=YnIiMCnAf9E"&gt;&lt;strong&gt;LEARN UNITY AUDIO - The Ultimate Guide to Audio, Implementation &amp;amp; Scripting&lt;/strong&gt;&lt;/a&gt;  - If you're struggling to implement sound effects, audio in Unity - Need help scripting them? Then this Unity tutorial is for you! This video will have details on adding 2D and 3D audio effects, understanding the basics around these, scripting audio sources, audio clips, using triggers, unity events, UI buttons and custom events. Looking at playing and pausing audio and understanding AudioMixers and how to change that at runtime. I'll lave time stamps under here for your convenience! :)&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=YnIiMCnAf9E"&gt;&lt;em&gt;SpeedTutor&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=SzQABx2YTJA"&gt;&lt;strong&gt;Creating a Dynamic Modal Window in Unity&lt;/strong&gt;&lt;/a&gt;  - Modal windows are a crucial part of Game UI, so let's make one in Unity that's flexible and versatile!&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=SzQABx2YTJA"&gt;&lt;em&gt;Game Dev Guide&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ibr8gKmz760"&gt;&lt;strong&gt;Unity Visual Scripting in 2021! (changes from 2020, BOLT)&lt;/strong&gt;&lt;/a&gt;  - Let's explore the changes in Unity Visual Scripting 2021 and Bolt.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=ibr8gKmz760"&gt;&lt;em&gt;Code Monkey&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=IzUpWU1Wd2E"&gt;&lt;strong&gt;Quickly &amp;amp; Easily Create Hit Impact Effects&lt;/strong&gt;&lt;/a&gt;  - In this video, we’ll show you how to quickly &amp;amp; easily make hit impact effects for your games.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=IzUpWU1Wd2E"&gt;&lt;em&gt;Game Dev Republic&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=h50OMdqtbKE"&gt;&lt;strong&gt;InGame Tilemap Editing - PART 2: Lines &amp;amp; Rectangles - 2D Level Editor with Unity - Tutorial&lt;/strong&gt;&lt;/a&gt;  - In this tutorial series you will learn how you can create an ingame UI where your players can draw on a grid. We are going to use Unitys Tilemaps and there will be a lot of coding involved. You'll learn how you can add the UI with clickable buttons, how to show a preview where an item would be placed and of course you can place it. It will then be drawn onto a tilemap.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=h50OMdqtbKE"&gt;&lt;em&gt;Velvary&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=rMlcwtoui4I"&gt;&lt;strong&gt;Input System Interactions Explained | Press, Hold, Tap, SlowTap, MultiTap - Unity&lt;/strong&gt;&lt;/a&gt;  - Today we go over Interactions in Unity's New Input System. I go what makes an interaction, how it impacts the actions, the individual actions themselves, code overview, interaction priority and multiple interactions, and custom interactions.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=rMlcwtoui4I"&gt;&lt;em&gt;samyam&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=7eKi6NKri6I"&gt;&lt;strong&gt;Best practices: Async vs. coroutines - Unite Copenhagen&lt;/strong&gt;&lt;/a&gt;  - Before async was introduced in Unity 2017, asynchronous routines were implemented using coroutines and/or callbacks. This video covers the benefits of async over coroutines. You'll see how one example problem – building an asynchronous prompt popup – can be solved using async vs coroutines.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=7eKi6NKri6I"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#assets"&gt;
  &lt;/a&gt;
  Assets
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://assetstore.unity.com/summer-sale?aid=1011l8NVc"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pBRe2cEs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/a9024c2f-b132-c78b-755f-d32fe22cb1d4.jpeg" alt="Smash Hit Summer - Asset Store Sale"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://assetstore.unity.com/summer-sale?aid=1011l8NVc"&gt;&lt;strong&gt;Smash Hit Summer - Asset Store Sale&lt;/strong&gt;&lt;/a&gt;  - 50% off&lt;br&gt;
&lt;a href="https://assetstore.unity.com/summer-sale?aid=1011l8NVc"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt; &lt;strong&gt;Affiliate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://assetstore.unity.com/publisher-sale?aid=1011l8NVc"&gt;&lt;strong&gt;The Animation Publishers Sale Begins Today!&lt;/strong&gt;&lt;/a&gt;  - All assets from 3 Animation Publishers, Kevin Iglesias, Explosive, and we make the game, are on sale for 50% off from August 2, 2021 00:00:00 PT through August 15, 2021. In addition, each Animation Publisher has one asset that will be offered for free with coupon code: ANIMATE2021 during the sale:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free asset &lt;a href="https://assetstore.unity.com/packages/3d/animations/basic-motions-157744?aid=1011l8NVc"&gt;Basic Motions&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Free asset &lt;a href="https://assetstore.unity.com/packages/3d/animations/crafting-mecanim-animation-pack-36545?aid=1011l8NVc"&gt;The Crafting Mecanim Animation Pack&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Free asset &lt;a href="https://assetstore.unity.com/packages/3d/animations/oriental-sword-animation-71318?aid=1011l8NVc"&gt;Oriental Sword Animation&lt;/a&gt;
&lt;em&gt;[remember to use coupon code: ANIMATE2021 at checkout]&lt;/em&gt;
&lt;a href="https://assetstore.unity.com/publisher-sale?aid=1011l8NVc"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt; &lt;strong&gt;Affiliate&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/renanwolf/UniRate?"&gt;&lt;strong&gt;UniRate&lt;/strong&gt;&lt;/a&gt;  - Unity plugin to easily manage the application frame rate and rendering interval. Preventing battery power consumption and device heat, especially on mobile platforms.&lt;br&gt;
&lt;a href="https://github.com/renanwolf/UniRate?"&gt;&lt;em&gt;renanwolf&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Cysharp/UniTask?"&gt;&lt;strong&gt;UniTask&lt;/strong&gt;&lt;/a&gt;  - Provides an efficient allocation free async/await integration for Unity.&lt;br&gt;
&lt;a href="https://github.com/Cysharp/UniTask?"&gt;&lt;em&gt;Cysharp&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ultraleap/PlayRecorder?utm_source=pocket_mylist"&gt;&lt;strong&gt;PlayRecorder&lt;/strong&gt;&lt;/a&gt;  - PlayRecorder lets you record Unity scene logic into binary files that work in both the editor or builds. Once a recording is made with a scene, even if that recording is created within a build, it can be played back within the editor, making it incredibly useful for recording data from user studies or analytics. Data can also be recorded within the editor, and then played back within a build.&lt;br&gt;
&lt;a href="https://github.com/ultraleap/PlayRecorder?utm_source=pocket_mylist"&gt;&lt;em&gt;Ultraleap&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/MonoMod/MonoMod?"&gt;&lt;strong&gt;MonoMod&lt;/strong&gt;&lt;/a&gt;  - C# modding swiss army knife, powered by cecil.&lt;br&gt;
&lt;a href="https://github.com/MonoMod/MonoMod?"&gt;&lt;em&gt;MonoMod&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/voxell-tech/UnityNLP?"&gt;&lt;strong&gt;Unity NLP&lt;/strong&gt;&lt;/a&gt;  - Natural Language Processing in Unity.&lt;br&gt;
&lt;a href="https://github.com/voxell-tech/UnityNLP?"&gt;&lt;em&gt;voxell-tech&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/snozbot/fungus?"&gt;&lt;strong&gt;Fungus&lt;/strong&gt;&lt;/a&gt;  - The goal of Fungus is to provide a free, open source tool for creating interactive storytelling games in Unity 3D. Fungus is designed to be easy to learn for beginners to Unity 3D, especially for people with no coding experience. For power users, it provides an intuitive, fast workflow for visual scripting and interactive storytelling. Fungus is being used to create Visual Novels, Point and Click Adventure Games, Childrens Stories, Hidden Object Games, eLearning apps and also some frankly weird stuff which defies classification :)&lt;br&gt;
&lt;a href="https://github.com/snozbot/fungus?"&gt;&lt;em&gt;snozbot&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/michaelday008/AnyRPGCore?"&gt;&lt;strong&gt;AnyRPG&lt;/strong&gt;&lt;/a&gt;  - Open source Role Playing Game engine for Unity 3D written in C#.&lt;br&gt;
&lt;a href="https://github.com/michaelday008/AnyRPGCore?"&gt;&lt;em&gt;michaelday008&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/FritzsHero/RoadArchitect?"&gt;&lt;strong&gt;RoadArchitect&lt;/strong&gt;&lt;/a&gt;  - Road Architect is a professional quality road system creator featuring dynamic intersections, bridges and many other road objects.&lt;br&gt;
&lt;a href="https://github.com/FritzsHero/RoadArchitect?"&gt;&lt;em&gt;FritzsHero&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/naelstrof/UnityJigglePhysics?"&gt;&lt;strong&gt;Unity Jiggle Physics&lt;/strong&gt;&lt;/a&gt;  - An acceleration-based jigglebone system with soft-body/squash-and-stretch physics for SkinnedMeshRenderers in Unity.&lt;br&gt;
&lt;a href="https://github.com/naelstrof/UnityJigglePhysics?"&gt;&lt;em&gt;naelstrof&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/komietty/unity-animated-convexhull?"&gt;&lt;strong&gt;unity-animated-convexhull&lt;/strong&gt;&lt;/a&gt;  - Realtime Fast convex generator for Unity.&lt;br&gt;
&lt;a href="https://github.com/komietty/unity-animated-convexhull?"&gt;&lt;em&gt;komietty&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/JimmyCushnie/SUCC?utm_source=pocket_mylist"&gt;&lt;strong&gt;SUCC&lt;/strong&gt;&lt;/a&gt;  - Sexy and Utilitarian Code Configuration.&lt;br&gt;
&lt;a href="https://github.com/JimmyCushnie/SUCC?utm_source=pocket_mylist"&gt;&lt;em&gt;Jimmy Cushnie&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/WooshiiDev/HierarchyDecorator?"&gt;&lt;strong&gt;Hierarchy Decorator&lt;/strong&gt;&lt;/a&gt;  - Lightweight Unity Extension for allowing Headers and GameObject info inside the Hierarchy Window.&lt;br&gt;
&lt;a href="https://github.com/WooshiiDev/HierarchyDecorator?"&gt;&lt;em&gt;WooshiiDev&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Seneral/UndoPro?"&gt;&lt;strong&gt;UndoPro&lt;/strong&gt;&lt;/a&gt;  - UndoPro is a command-based undo system integrated into Unity's default system. This allows devs to use actions for their undo/redo operations without forcing the user into a new undo-workflow!&lt;br&gt;
&lt;a href="https://github.com/Seneral/UndoPro?"&gt;&lt;em&gt;Seneral&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/gasgiant/Markup-Attributes?"&gt;&lt;strong&gt;Markup Attributes&lt;/strong&gt;&lt;/a&gt;  - A Unity Editor extension for customizing inspector layout with attributes.&lt;br&gt;
&lt;a href="https://github.com/gasgiant/Markup-Attributes?"&gt;&lt;em&gt;gasgiant&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/vvrvvd/Unity-Spline-Editor?"&gt;&lt;strong&gt;Unity Spline Editor&lt;/strong&gt;&lt;/a&gt;  - Unity Spline Editor is an open-source tool for creating and managing cubic bezier curves in Unity Editor.&lt;br&gt;
&lt;a href="https://github.com/vvrvvd/Unity-Spline-Editor?"&gt;&lt;em&gt;vvrvvd&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/coder89/arfoundation-mock?"&gt;&lt;strong&gt;Unity.XR.Mock for ARFoundation 4.x&lt;/strong&gt;&lt;/a&gt;  - Unity Editor plugin that let's you mock AR environment for development &amp;amp; testing on your PC.&lt;br&gt;
&lt;a href="https://github.com/coder89/arfoundation-mock?"&gt;&lt;em&gt;coder89&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ryanslikesocool/Easings?"&gt;&lt;strong&gt;Unity-Easings&lt;/strong&gt;&lt;/a&gt;  - 41 easing methods to make transitions nicer in Unity.&lt;br&gt;
&lt;a href="https://github.com/ryanslikesocool/Easings?"&gt;&lt;em&gt;ryanslikesocool&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/NagaChiang/entity-tween?"&gt;&lt;strong&gt;Entity Tween&lt;/strong&gt;&lt;/a&gt;  - Entity compatible tween library for Unity ECS/DOTS and Project Tiny (DOTS Runtime).&lt;br&gt;
&lt;a href="https://github.com/NagaChiang/entity-tween?"&gt;&lt;em&gt;NagaChiang&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/quabug/EntitiesBT?utm_source=pocket_mylist"&gt;&lt;strong&gt;EntitiesBT&lt;/strong&gt;&lt;/a&gt;  - Behavior Tree for Unity ECS (DOTS) framework.&lt;br&gt;
&lt;a href="https://github.com/quabug/EntitiesBT?utm_source=pocket_mylist"&gt;&lt;em&gt;quabug&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/DreamersIncStudios/ECS-IAUS-sytstem"&gt;&lt;strong&gt;ECS-IAUS-sytstem&lt;/strong&gt;&lt;/a&gt;  - The utility system works by identifying options available to the AI and selecting the best option by scoring each option based on the circumstances. &lt;em&gt;[read the &lt;a href="https://dreamerincblog.wordpress.com/2021/01/24/devlog-15-the-one-about-the-dots-iaus-repo/"&gt;blog description&lt;/a&gt;]&lt;/em&gt;&lt;br&gt;
&lt;a href="https://github.com/DreamersIncStudios/ECS-IAUS-sytstem"&gt;&lt;em&gt;DreamersIncStudios&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/FBast/ReflexityAI?utm_source=pocket_mylist"&gt;&lt;strong&gt;ReflexityAI&lt;/strong&gt;&lt;/a&gt;  - Provide a basic framework to build an Utility AI in Unity using the xNode editor of Siccity.&lt;br&gt;
&lt;a href="https://github.com/FBast/ReflexityAI?utm_source=pocket_mylist"&gt;&lt;em&gt;FBast&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/CatLib/Core?utm_source=pocket_mylist"&gt;&lt;strong&gt;CatLib Core&lt;/strong&gt;&lt;/a&gt;  - CatLib lightweight dependency injection container&lt;br&gt;
&lt;a href="https://github.com/CatLib/Core?utm_source=pocket_mylist"&gt;&lt;em&gt;CatLib&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/gpvigano/AsImpL?"&gt;&lt;strong&gt;AsImpL (OBJ)&lt;/strong&gt;&lt;/a&gt;  - Asynchronous Importer and run-time Loader for Unity.&lt;br&gt;
&lt;a href="https://github.com/gpvigano/AsImpL?"&gt;&lt;em&gt;gpvigano&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/OndrejNepozitek/Edgar-Unity?"&gt;&lt;strong&gt;Edgar for Unity&lt;/strong&gt;&lt;/a&gt;  - This project is a Unity plugin for procedural generation of 2D dungeons (and platformers) and aims to give game designers a complete control over generated levels. It combines graph-based approach to procedural generation with handmade room templates to generate levels with a feeling of consistency.&lt;br&gt;
&lt;a href="https://github.com/OndrejNepozitek/Edgar-Unity?"&gt;&lt;em&gt;OndrejNepozitek&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/RadicalCSG/Chisel.Prototype?"&gt;&lt;strong&gt;Chisel.Prototype&lt;/strong&gt;&lt;/a&gt;  - Chisel is an extension for Unity that allows for rapid, iterative, non destructive level editing!&lt;br&gt;
&lt;a href="https://github.com/RadicalCSG/Chisel.Prototype?"&gt;&lt;em&gt;RadicalCSG&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/cowtrix/voxul?"&gt;&lt;strong&gt;voxul&lt;/strong&gt;&lt;/a&gt;  - voxul is a voxel system and editor tool for Unity 3D. Use it to build voxel meshes, objects and levels.&lt;br&gt;
&lt;a href="https://github.com/cowtrix/voxul?"&gt;&lt;em&gt;cowtrix&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/artnas/Unity-Plane-Mesh-Splitter?"&gt;&lt;strong&gt;Unity Plane Mesh Splitter&lt;/strong&gt;&lt;/a&gt;  - A simple tool which lets you split any mesh into smaller submeshes. At first it was designed to work with imported Tiled2Unity terrains, but I rewrote it to work with everything you can throw at it.&lt;br&gt;
&lt;a href="https://github.com/artnas/Unity-Plane-Mesh-Splitter?"&gt;&lt;em&gt;artnas&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/needle-tools/compilation-visualizer?"&gt;&lt;strong&gt;Compilation Visualizer for Unity&lt;/strong&gt;&lt;/a&gt;  - Unity Tool showing a timeline of assembly compilation. This is especially helpful when trying to optimize compile times and dependencies between assemblies. Besides showing a graphical view of compilation, selecting an assembly shows both dependencies and dependents of that assembly.&lt;br&gt;
&lt;a href="https://github.com/needle-tools/compilation-visualizer?"&gt;&lt;em&gt;needle-tools&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/daemon3000/InputManager?utm_source=pocket_mylist"&gt;&lt;strong&gt;InputManager&lt;/strong&gt;&lt;/a&gt;  - InputManager is a custom input manager for Unity that allows you to rebind keys at runtime and abstract input devices for cross platform input.&lt;br&gt;
&lt;a href="https://github.com/daemon3000/InputManager?utm_source=pocket_mylist"&gt;&lt;em&gt;daemon3000&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/SoftwareGuy/Ignorance?"&gt;&lt;strong&gt;Ignorance 1.4 Beta&lt;/strong&gt;&lt;/a&gt;  - Ignorance utilizes the power of ENet to provide a reliable UDP networking transport for Mirror Networking.&lt;br&gt;
&lt;a href="https://github.com/SoftwareGuy/Ignorance?"&gt;&lt;em&gt;SoftwareGuy&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/instance-id/ElementAnimationToolkit?"&gt;&lt;strong&gt;ElementAnimationToolkit&lt;/strong&gt;&lt;/a&gt;  - A collection of Unity UIElements animation extension methods, new animated elements, and examples.&lt;br&gt;
&lt;a href="https://github.com/instance-id/ElementAnimationToolkit?"&gt;&lt;em&gt;instance-id&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/alelievr/NodeGraphProcessor?"&gt;&lt;strong&gt;NodeGraphProcessor&lt;/strong&gt;&lt;/a&gt;  - Node graph editor framework focused on data processing using Unity UIElements, GraphView and C# 4.7.&lt;br&gt;
&lt;a href="https://github.com/alelievr/NodeGraphProcessor?"&gt;&lt;em&gt;alelievr&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mob-sakai/ParticleEffectForUGUI?"&gt;&lt;strong&gt;Particle Effect For UGUI (UI Particle)&lt;/strong&gt;&lt;/a&gt;  - Render particle effect in UnityUI(uGUI). Maskable, sortable, and no extra Camera/RenderTexture/Canvas.&lt;br&gt;
&lt;a href="https://github.com/mob-sakai/ParticleEffectForUGUI?"&gt;&lt;em&gt;mob-sakai&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/alelievr/HDRP-UI-Camera-Stacking?"&gt;&lt;strong&gt;HDRP UI Camera Stacking&lt;/strong&gt;&lt;/a&gt;  - The HDRP UI Camera Stacking package allows you to stack multiple camera rendering UI only at a fraction of the cost of a standard camera.&lt;br&gt;
&lt;a href="https://github.com/alelievr/HDRP-UI-Camera-Stacking?"&gt;&lt;em&gt;alelievr&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/FredericRP/Standard-Assets?"&gt;&lt;strong&gt;Standard-Assets&lt;/strong&gt;&lt;/a&gt;  - Bucket, event management, object pool, popup, screen transitions and tips helper for Unity.&lt;br&gt;
&lt;a href="https://github.com/FredericRP/Standard-Assets?"&gt;&lt;em&gt;FredericRP&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spotlight"&gt;
  &lt;/a&gt;
  Spotlight
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://store.steampowered.com/app/1252240/Aeon_Drive/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OxyH6d4A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/240f7acce420bd11f51179961ae595db.png" alt="Aeon Drive"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://store.steampowered.com/app/1252240/Aeon_Drive/"&gt;&lt;strong&gt;Aeon Drive&lt;/strong&gt;&lt;/a&gt;  - Rush through the cyberpunk landscapes of Neo Barcelona in Aeon Drive, an action-platformer with a speedrunning twist! Whether solo or in up to 4 player co-op, sprint and dash through many areas of the neon-infused city - and use your time and space-bending abilities to get ahead.&lt;/p&gt;

&lt;p&gt;[&lt;a href="https://store.steampowered.com/app/1252240/Aeon_Drive/"&gt;Play the demo&lt;/a&gt; on Steam, and follow the development on &lt;a href="https://twitter.com/AeonDrive"&gt;Twitter&lt;/a&gt; and &lt;a href="https://discord.com/invite/RfKxxFE"&gt;Discord&lt;/a&gt;]&lt;br&gt;
&lt;a href="https://store.steampowered.com/app/1252240/Aeon_Drive/"&gt;&lt;em&gt;2Awesome Studio&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;You can subscribe to the free weekly newsletter on &lt;a href="https://gamedevdigest.com"&gt;GameDevDigest.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>unity</category>
      <category>csharp</category>
      <category>news</category>
    </item>
    <item>
      <title>Is there a programming language that you can call "the best"?</title>
      <author>Maddy</author>
      <pubDate>Fri, 06 Aug 2021 13:02:37 +0000</pubDate>
      <link>https://dev.to/maddy/is-there-a-programming-language-that-you-can-call-the-best-2e73</link>
      <guid>https://dev.to/maddy/is-there-a-programming-language-that-you-can-call-the-best-2e73</guid>
      <description>&lt;p&gt;Is there a programming language that you can call "the best"?&lt;/p&gt;

&lt;p&gt;When I was studying computer science at university, I had this thought several times. Now that I work as a full-time software engineer, I can say that the best programming language doesn't exist.😁 It's just a matter of personal preference, and it depends on what you are trying to build. &lt;/p&gt;

&lt;p&gt;Three criteria that I think can be useful when choosing a programming language to learn are:&lt;/p&gt;

&lt;p&gt;🎨 &lt;strong&gt;Your interests&lt;/strong&gt;: what do you like? Are you into mobile development? Then go with Kotlin/Java for Android, Swift for iOS. Data science? Python. Gaming? C++. Web development? JavaScript and PHP are great. The list goes on. &lt;/p&gt;

&lt;p&gt;📊 &lt;strong&gt;Market trends&lt;/strong&gt;: some languages are more popular than others, and if you're looking to program professionally, ideally, you might want to stick with the top 5. Also, just because a programming language is more trendy for a year, it doesn't mean that the others become obsolete all of a sudden. Every year StackOverflow publishes a developer &lt;a href="https://insights.stackoverflow.com/survey/2021#overview"&gt;survey&lt;/a&gt;. It gives a great insight into what developers are learning. &lt;/p&gt;

&lt;p&gt;💭 &lt;strong&gt;Complexity&lt;/strong&gt;: some languages take more effort than others to learn, are more verbose and strongly typed. Start with a relatively easy language and work your way up from there.&lt;/p&gt;

&lt;p&gt;🔎 &lt;strong&gt;Field&lt;/strong&gt;: I've noticed that some languages are more used in specific sectors than others. For example, in financial services Java is very popular, especially in large corporations. In healthcare, Python is predominant.&lt;/p&gt;

&lt;p&gt;In a commercial setting, a language is chosen based on the type of application to build (for example: is it a mobile or web application that we're trying to develop?), the complexity, the time available, scalability, etc. &lt;/p&gt;

&lt;p&gt;Many factors need to be taken into account when considering a suitable language for a project. But if you're starting, the three criteria listed earlier should guide you in the right direction (I hope!). &lt;/p&gt;

&lt;p&gt;Happy learning!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>learning</category>
      <category>softwareengineering</category>
    </item>
  </channel>
</rss>
