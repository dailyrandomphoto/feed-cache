<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>20+ Best Coding Books in 2021</title>
      <author>Tips and Tricks</author>
      <pubDate>Fri, 27 Aug 2021 03:12:30 +0000</pubDate>
      <link>https://dev.to/tips_tricks/20-best-coding-books-in-2021-2bpg</link>
      <guid>https://dev.to/tips_tricks/20-best-coding-books-in-2021-2bpg</guid>
      <description>&lt;p&gt;There are so many amazing programming books and computer science books out there.&lt;/p&gt;
&lt;p&gt;Many of the best coding books are used by universities and professional developers to improve their skills. If you’re learning how to code on your own, there’s nothing to say you can’t independently pick up some top books on programming and do the same. &lt;/p&gt;
&lt;p&gt;You might look at this list and think “How do you learn programming from books?” Actually, books on computer science can be just as fun and helpful as a course. Many of the best programming books have hands-on challenges and projects to help you implement what you’ve learned. Plus, at least reading a coding book gives you a break from staring at a screen!&lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/best-coding-books-for-every-coder-in-2021/&amp;amp;ved=2ahUKEwjghPnwnNDyAhWSO5QKHWbLAfw4FBAWegQICxAB&amp;amp;usg=AOvVaw0Oya_egvd89v-M2rG7lvFO"&gt;Best Coding Books &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;









</description>
    </item>
    <item>
      <title>🚀20 Best CSS3 Library For Developers.</title>
      <author>Tips and Tricks</author>
      <pubDate>Fri, 27 Aug 2021 03:07:29 +0000</pubDate>
      <link>https://dev.to/tips_tricks/20-best-css3-library-for-developers-5gib</link>
      <guid>https://dev.to/tips_tricks/20-best-css3-library-for-developers-5gib</guid>
      <description>&lt;p&gt;Web Developers used to spend a lot of time creating beautiful CSS. Thanks to the CSS libraries, we now have a better, faster, and more effective way to build responsive websites and web applications.&lt;/p&gt;
&lt;p&gt;Are you still looking for the best CSS libraries? Do you want to know which library you should try? In this article, we have 20 best CSS libraries for your inspiration.&lt;/p&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#how-do-css-libraries-work"&gt;&lt;/a&gt;🤔 How do CSS libraries work?&lt;/h2&gt;
&lt;p&gt;CSS library gives web developers a basic structure, which includes grid, interactive UI patterns, web typography, tooltips, buttons, form elements, icons. This structure helps web developers to start quickly and efficiently when they are designing a website or web applications.&lt;/p&gt;
&lt;p&gt;Here we have put together &lt;span&gt;20 best CSS libraries.&lt;/span&gt; We hope you like them, and most importantly, find the best one for your needs.&lt;/p&gt;
&lt;h4&gt;
&lt;br&gt;
&lt;a href="#"&gt;&lt;/a&gt;Let's go....🤩&lt;/h4&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwii76qFzaPyAhWvyzgGHX9RA-kQFnoECAMQBQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;🚀20 Best CSS3 Library For Developers&lt;/a&gt;&lt;/b&gt;.

</description>
    </item>
    <item>
      <title>Top 20 JavaScript tips and tricks to increase your Speed and Efficiency </title>
      <author>Tips and Tricks</author>
      <pubDate>Fri, 27 Aug 2021 03:06:54 +0000</pubDate>
      <link>https://dev.to/tips_tricks/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-3g71</link>
      <guid>https://dev.to/tips_tricks/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-3g71</guid>
      <description>&lt;h3&gt;Convenient and useful techniques to reduce the lines of code and pace up your Dev Work!&lt;/h3&gt;
&lt;p&gt;In our daily tasks, we get to write functions such as sorting, searching, finding unique values, passing parameters, swapping values etc, so here I present my list of shorthand techniques to write all of them as a Pro!✌🏻&lt;/p&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;img alt="Increase Your Performance" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftNfvGUp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;JavaScript is truly an awesome language💛 to learn and work with. And there can be more than one approach to reach to the same solution for given problem. In this article, we will discuss only the quickest ones.🚀&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;These approaches will definitely help you in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reducing the number of LOC(lines of code),&lt;/li&gt;
&lt;li&gt;Coding Competitions,&lt;/li&gt;
&lt;li&gt;Hackathons or&lt;/li&gt;
&lt;li&gt;Other time bound tasks.⏱&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of these JavaScript Hacks uses techniques from ECMAScript6(ES2015) onwards, though the latest version is ECMAScript11(ES2020).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: All below tricks have been tested on the Console of Google Chrome.&lt;/em&gt;&lt;/p&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/top-20-javascript-tips-and-tricks/"&gt;Top 20 JavaScript tips and tricks to increase your Speed and Efficiency&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>Problems faced while creating comments section with a tree like data structure</title>
      <author>Ajit Singh</author>
      <pubDate>Fri, 27 Aug 2021 03:01:25 +0000</pubDate>
      <link>https://dev.to/this-is-angular/problems-faced-while-creating-comments-section-with-a-tree-like-data-structure-3djg</link>
      <guid>https://dev.to/this-is-angular/problems-faced-while-creating-comments-section-with-a-tree-like-data-structure-3djg</guid>
      <description>&lt;h4&gt;
  &lt;a href="#if-anyone-faces-the-same-problems-and-want-me-to-write-the-actual-implementation-please-comment-below"&gt;
  &lt;/a&gt;
  If anyone faces the same problems and want me to write the actual implementation please comment below.
&lt;/h4&gt;

&lt;p&gt;While working on my dev.to clone in Angular I came across the comments section which can be very tricky to render. As it has a tree like structure which can go infinitely.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;├── comment
│   ├── comment ─── comment
│   │   └── comment
│   ├── comment
│   ├── comment ─── comment ─── comment
│   │   └── comment ─── comment ─── comment
│   └── comment
├── comments
│   ├── comment ─── comment
│   │   └── comment 
│   └── comment 
├──── comment
│   ├── comment
│   └── comment
└──── comments
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#rendering-comments"&gt;
  &lt;/a&gt;
  Rendering comments
&lt;/h2&gt;

&lt;p&gt;We never know the actual structure of the comments. I looked closely at the structure and I saw its just like recursion the same component is calling the same component. So I tried that and it worked.&lt;/p&gt;

&lt;p&gt;I passed the comments array to a component and it renders it with a ngFor after I call the same component pass to it its children and go about that again and again. You can &lt;a href="https://github.com/ajitsinghkaler/devto-clone/blob/main/src/app/pages/article-detail/article/comments/comments.component.html"&gt;check it out&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spacing-comments"&gt;
  &lt;/a&gt;
  Spacing comments
&lt;/h2&gt;

&lt;p&gt;Next problem was CSS I wanted to add space before each comment when it goes to the next level but after 4 levels we need to stop adding spaces in comments other wise there will be no space for comments. Here we have one advantage aver the above problem we know the level after which we want to remove the CSS if we don't try to make it generic we can just do&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.app-comments&lt;/span&gt; &lt;span class="nc"&gt;.app-comments&lt;/span&gt; &lt;span class="nc"&gt;.app-comments&lt;/span&gt; &lt;span class="nc"&gt;.app-comments&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;using specificity we can take advantage of us knowing the level at which to remove padding.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#toggling-functionality"&gt;
  &lt;/a&gt;
  Toggling functionality
&lt;/h2&gt;

&lt;p&gt;If we use any library managing state of such a structure can be a night mare. I used the native details html tag which comes with the toggling functionality in built and we need not manage any state this is the point where I realize how powerful these structures can be.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#state-problems"&gt;
  &lt;/a&gt;
  State problems
&lt;/h2&gt;

&lt;p&gt;Working with the details tag was great but I needed the state of it closing and opening in the template. To show and hide some data whenever the state changes. To do that and not manage any state I thought of using template variables and &lt;code&gt;@ViewChild&lt;/code&gt; but failed miserably managing state at each level of an Array of dynamic length array was really hard which is changing its state I have to manage a tree like state for components to to mitigate this I thought lets completely keep the state in the template and I used the same template variable and use the native open property on details element to show and hide elements but nothing was happening. I really tried everything but the open property never changed in the template.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ngzone-problem"&gt;
  &lt;/a&gt;
  Ngzone problem
&lt;/h2&gt;

&lt;p&gt;So I got to know that on open close of detail HTML element a toggle event is generated and zone.js has not monkey patched the toggle event. What a pain when you expect something to work in the frame work and it does not work and you need to have deep understanding of the frame to solve it and if if you have a good amount of knowledge you can't solve it. To resolve this I imported ChangeDetectorRef and detectChanges on when the toggle event happens.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Web Designer Roadmap</title>
      <author>Tips and Tricks</author>
      <pubDate>Fri, 27 Aug 2021 03:01:18 +0000</pubDate>
      <link>https://dev.to/tips_tricks/web-designer-roadmap-4lfp</link>
      <guid>https://dev.to/tips_tricks/web-designer-roadmap-4lfp</guid>
      <description>&lt;h2 id="what-is-a-web-designer"&gt;What is a Web Designer?&lt;/h2&gt;
&lt;p&gt;Are you both creative and technically inclined? You may want to consider a career as a web designer!&lt;/p&gt;
&lt;p&gt;Web designers build or redesign websites. They understand what it takes to make a website functional and easy to use, but also understand what is needed to make it aesthetically appealing to the user.&lt;/p&gt;
&lt;p&gt;Web design is a rapidly growing industry, as digital media has become part of everyone's lives and people rely on the web for their communications, information, shopping, social life, and more.&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/web-designers-roadmap-2021/&amp;amp;ved=2ahUKEwjqlebL7qryAhUF7HMBHVCiCxQQFnoECBoQAQ&amp;amp;usg=AOvVaw2Oo-ikwNXhEKOFAMaulAH4"&gt;Web Designer Roadmap&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;









</description>
    </item>
    <item>
      <title>Git Command That Will Change You Experience</title>
      <author>Tips and Tricks</author>
      <pubDate>Fri, 27 Aug 2021 03:00:44 +0000</pubDate>
      <link>https://dev.to/tips_tricks/git-command-that-will-change-you-experience-2o74</link>
      <guid>https://dev.to/tips_tricks/git-command-that-will-change-you-experience-2o74</guid>
      <description>&lt;p&gt;&lt;span&gt;Git is one of the most common version control systems available, and it's used on private systems and publicly hosted websites for all kinds of development work. Regardless of how proficient with Git I become, it seems there are always features left to discover. Here are seven tricks that have changed the way I work with Git.&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;h1&gt;&lt;a href="https://www.codelivly.com/git-tricks-that-changed-my-life/"&gt;7 Git tricks that changed my life&lt;/a&gt;&lt;/h1&gt;

</description>
    </item>
    <item>
      <title>Updates on dev-to clone in Angular - August 27</title>
      <author>Ajit Singh</author>
      <pubDate>Fri, 27 Aug 2021 02:47:38 +0000</pubDate>
      <link>https://dev.to/this-is-angular/updates-on-dev-to-clone-in-angular-august-27-p98</link>
      <guid>https://dev.to/this-is-angular/updates-on-dev-to-clone-in-angular-august-27-p98</guid>
      <description>&lt;h5&gt;
  &lt;a href="#help-me-improve-these-updates-by-giving-suggestions"&gt;
  &lt;/a&gt;
  Help me improve these updates by giving suggestions.
&lt;/h5&gt;

&lt;p&gt;Github Repo - &lt;a href="https://github.com/ajitsinghkaler/devto-clone"&gt;https://github.com/ajitsinghkaler/devto-clone&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Deployed on Firebase - &lt;a href="https://dev-toclone.firebaseapp.com/"&gt;https://dev-toclone.firebaseapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Last week we finished details page article section and basic comments section.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aEW6jyTE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dn6lr72hv93pbss99ieq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aEW6jyTE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dn6lr72hv93pbss99ieq.png" alt="Articles details page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This week I added the complete comments section. It was one the most complex tasks while building the dev.to ui. The comments structure is a bit complex to render. Comments contain a key called children which can again contain comments so it was like a tree like structure.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;├── comment
│   ├── comment ─── comment
│   │   └── comment
│   ├── comment
│   ├── comment ─── comment ─── comment
│   │   └── comment ─── comment ─── comment
│   └── comment
├── comments
│   ├── comment ─── comment
│   │   └── comment 
│   └── comment 
├──── comment
│   ├── comment
│   └── comment
└──── comments
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How to render an infinite tree. Then I called the comment component from the comment component. To create a recursion like scenario which will render the entire component tree. I've written details about it in this &lt;a href="https://ajitblogs.com/problems-faced-while-creating-comments-section-with-a-tree-like-data-structure/"&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/patel_vimal"&gt;Vimal Patel&lt;/a&gt; has also added &lt;br&gt;
commit lint to the repo so that reading the commit messages is easy. I'm thankful for that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-live-stream"&gt;
  &lt;/a&gt;
  First Live stream
&lt;/h2&gt;

&lt;p&gt;I also did my first live stream with &lt;a href="https://twitter.com/SantoshYadavDev"&gt;Santosh&lt;/a&gt; on moving over our app from angular-cli to NxDevTools we did the basics in the stream and I went over a lot of questions that I have to why Nx if you want to see how to move your project over Nx please follow us on &lt;a href="https://www.youtube.com/channel/UCwLr8EHk7A-A89tRqoHSdZw"&gt;This is tech Talks&lt;/a&gt;&lt;br&gt;
 we will be migrating the whole dev.to clone to Nx over the live stream. This was my first talk I was a bit nervous but Santosh made me at ease. Thanks Santosh.&lt;/p&gt;

&lt;p&gt;So this is where we are right now.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iN597FpX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10ylwi1auxrz2qdaiwzd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iN597FpX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10ylwi1auxrz2qdaiwzd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next week I'll start working on the podcast page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#issue"&gt;
  &lt;/a&gt;
  Issue
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/issues/30"&gt;Create a 404 page&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/issues/32"&gt;Comments section css is a bit off&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/issues/33"&gt;Add number of child comments in comments section&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#commits"&gt;
  &lt;/a&gt;
  Commits
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/commit/0624aa97da384de25cb3f20902e511b2899e60fa"&gt;Commit lint&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/commit/9d05fd85b369aea6c92f68ad9407f78152aa0f08"&gt;Basic comments&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/commit/d2a317f15409e5ef13b7fb995cdadb336420ad82"&gt;Comments section completed&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>angular</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Object Oriented PHP (Lesson 3: Inheritance)</title>
      <author>Clean Code Studio</author>
      <pubDate>Fri, 27 Aug 2021 02:41:11 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/object-oriented-php-lesson-3-inheritance-3670</link>
      <guid>https://dev.to/cleancodestudio/object-oriented-php-lesson-3-inheritance-3670</guid>
      <description>&lt;p&gt;&lt;a href="https://twitter.com/cleancodestudio"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zFu-SM5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/twitter/follow/cleancodestudio.svg%3Fstyle%3Dsocial" alt="Twitter Follow"&gt;&lt;/a&gt; &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;In object-oriented programming, inheritance is the mechanism of basing an object or class upon another object or class, retaining similar implementation. Also defined as deriving new classes from existing ones such as super class or base class and then forming them into a hierarchy of classes.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#inheritance-extending-a-classes-behavior-and-properties"&gt;
  &lt;/a&gt;
  &lt;a href="https://cleancode.studio/series/object-oriented-php/episodes/3"&gt;Inheritance&lt;/a&gt;: Extending a &lt;a href="https://cleancode.studio/series/object-oriented-php/episodes/1"&gt;Classes&lt;/a&gt; behavior and properties
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;What is &lt;a href="https://cleancode.studio/series/object-oriented-php/episodes/3"&gt;inheritance&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;How do we implement &lt;a href="https://cleancode.studio/series/object-oriented-php/episodes/3"&gt;inheritance&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;What is &lt;a href="https://cleancode.studio/series/object-oriented-php/episodes/3"&gt;polymorphism&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;How do we implement &lt;a href="https://cleancode.studio/series/object-oriented-php/episodes/3"&gt;Polymorphism in PHP&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;What are &lt;a href="https://cleancode.studio/series/object-oriented-php/episodes/3"&gt;reasons we would use Inheritance&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;How would we implement these, more unique, but really cool &lt;a href="https://cleancode.studio/series/object-oriented-php/episodes/3"&gt;implementations of inheritance&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;FormRequest (Request Validation) &lt;a href="https://cleancode.studio/series/object-oriented-php/episodes/3"&gt;extends Request&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/15jGTgxC8wA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;


&lt;center&gt;


&lt;h3&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The End
&lt;/h3&gt;




&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #343c35 !important;
      color: #f5f5f5 !important;
      border-color: #343c35 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YeAAvjHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GeGRizPU--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/4f170830-7e2c-4f3e-81fe-b666a90b7e3f.gif" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://cleancode.studio/clean-code"&gt;Clean Code&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/design-patterns"&gt;Java Script Design Patterns&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/series/object-oriented-php"&gt;Object Oriented Programming&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/algorithms"&gt;JavaScript Algorithm Examples&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://cleancode.studio"&gt;Clean Code Studio&lt;/a&gt;&lt;br&gt;
☕️ Code Tips&lt;br&gt;
☕️ Career Advice&lt;br&gt;
☕️ Developer Memes&lt;br&gt;
&lt;small&gt;Shiny button, Fancy 𝗡𝗲𝘄𝘀𝗹𝗲𝘁𝘁𝗲𝗿 👇, Juicy Dev Tips...wanna join?&lt;/small&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://cleancodestudio.paperform.co/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dgj1OcQv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7hwc3k4pzedr59fnr9r.png" alt="Yes, I want in! Button to go sign up for clean code studio newsletter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;(Discover [50+ pages] of my personal FAANG interview notes!)&lt;/small&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://twitter.com/cleancodestudio"&gt;Follow @cleancodestudio on Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtube.com/c/cleancodestudio"&gt;Follow @cleancodestudio on YouTube&lt;/a&gt;&lt;br&gt;
&lt;a href="https://tiktok.com/@cleancodestudio"&gt;Follow @cleancodestudio on TikTok&lt;/a&gt;&lt;br&gt;
&lt;a href="https://facebook.com/cleancodestudio"&gt;Follow @cleancodestudio on Facebook&lt;/a&gt;&lt;br&gt;
&lt;a href="https://instagram.com/cleancodestudio"&gt;Follow @cleancodestudio on Instagram&lt;/a&gt;&lt;br&gt;
&lt;a href="https://linkedin.com/company/cleancodestudio"&gt;Follow @cleancodestudio on LinkedIn&lt;/a&gt;&lt;br&gt;
&lt;a href="https://reddit.com/r/cleancodestudio"&gt;Follow @cleancodestudio on Reddit&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/cleancodestudio"&gt;Follow @cleancodestudio on Dev.to&lt;/a&gt;&lt;br&gt;
&lt;a href="https://stackoverflow.com/users/8541350/clean-code-studio"&gt;Follow @cleancodestudio on Stack Overflow&lt;/a&gt;&lt;br&gt;
&lt;a href="https://npmjs.com/~zhorton999"&gt;Follow @cleancodestudio packages on npm&lt;/a&gt;&lt;br&gt;
&lt;a href="https://packagist.org/packages/clean-code-studio"&gt;Follow @cleancodestudio packages on packagist&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/zhorton34"&gt;Star @cleancodestudio on Github&lt;/a&gt;&lt;/p&gt;




&lt;/center&gt;

</description>
      <category>oop</category>
      <category>php</category>
      <category>laravel</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Technical Interview #3: Is String A Palindrome</title>
      <author>Let's Code</author>
      <pubDate>Fri, 27 Aug 2021 02:33:25 +0000</pubDate>
      <link>https://dev.to/frontendengineer/technical-interview-3-is-string-a-palindrome-2ida</link>
      <guid>https://dev.to/frontendengineer/technical-interview-3-is-string-a-palindrome-2ida</guid>
      <description>&lt;h4&gt;
  &lt;a href="#interview-question-3"&gt;
  &lt;/a&gt;
  Interview Question #3:
&lt;/h4&gt;

&lt;p&gt;Write a function that returns if string a palindrome.🤔❓&lt;br&gt;
Palindrome happens when a string forms the same word when it is reversed.&lt;/p&gt;

&lt;p&gt;Example: &lt;br&gt;
abba =&amp;gt; true&lt;br&gt;
abcba =&amp;gt; true&lt;br&gt;
123xyz =&amp;gt; false&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you need practice, try to solve this on your own. I have included 2 potential solutions below. &lt;/p&gt;

&lt;p&gt;Note: There are many other potential solutions to this problem.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;
  &lt;a href="#solution-1-array-reverse-and-join-and-methods"&gt;
  &lt;/a&gt;
  Solution #1: Array reverse and join and methods
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#solution-2-array-every"&gt;
  &lt;/a&gt;
  Solution #2: array every
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;every&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;char&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In case you like a video instead of bunch of code 👍😊&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vTIYUv13XLg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Happy coding and good luck if you are interviewing!&lt;/p&gt;

</description>
      <category>jobinterview</category>
      <category>frontendinterview</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Build a Portfolio Using Next.js, Tailwind, and Vercel with Dark Mode Support</title>
      <author>Nilanth</author>
      <pubDate>Fri, 27 Aug 2021 01:57:47 +0000</pubDate>
      <link>https://dev.to/nilanth/build-a-portfolio-using-next-js-tailwind-and-vercel-4dd8</link>
      <guid>https://dev.to/nilanth/build-a-portfolio-using-next-js-tailwind-and-vercel-4dd8</guid>
      <description>&lt;p&gt;Steps to build a portfolio website using &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; and &lt;a href="https://tailwindcss.com/"&gt;Tailwind&lt;/a&gt; with Dark Mode Support. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;You can build a portfolio like &lt;a href="https://nilanth.vercel.app"&gt;mine&lt;/a&gt; after reading this article.&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A portfolio is a place where you can showcase all your skills to the world. As a developer, you really need a portfolio to showcase your projects, blogs, and much more.&lt;/p&gt;

&lt;p&gt;But why do we need to build a portfolio with Next.js? We all know next.js is react framework with out-of-box performance. So you are not required to worry about your portfolio performance. Everything is taken care of by next.js and Vercel. Let's get into action &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nextjs-and-tailwind-configuration"&gt;
  &lt;/a&gt;
  Next.js and Tailwind Configuration
&lt;/h2&gt;

&lt;p&gt;We can configure tailwind with next.js with a single command. As below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-next-app -e with-tailwindcss your-portfolio-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The above command automatically configures your Tailwind setup based on the official Next.js example.&lt;/p&gt;

&lt;p&gt;Once the installation is completed navigate to your project folder using &lt;code&gt;cd your-portfolio-name&lt;/code&gt; and start the dev server using &lt;code&gt;yarn dev&lt;/code&gt; command. You can see the below page if you hit &lt;code&gt;http://localhost:3000&lt;/code&gt; in the browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hZeUSGiL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sw7fblqfegh7zbck9twq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hZeUSGiL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sw7fblqfegh7zbck9twq.png" alt="welcome"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-navigation-section"&gt;
  &lt;/a&gt;
  Creating Navigation Section
&lt;/h2&gt;

&lt;p&gt;Create a &lt;code&gt;components&lt;/code&gt; folder in the root directory to add your portfolio components. Create a file called &lt;code&gt;Navigation.js&lt;/code&gt; and add the below code:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;The navigation component is the header section of your portfolio. In the above code, you can see &lt;code&gt;dark:&lt;/code&gt; class to support dark mode. Add the &lt;code&gt;Navigation&lt;/code&gt; component to &lt;code&gt;_app.js&lt;/code&gt; file as below. MyApp component is used to initialize pages.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#creating-footer%C2%A0section"&gt;
  &lt;/a&gt;
  Creating Footer Section
&lt;/h2&gt;

&lt;p&gt;To add a Footer with social links, Create a Footer.js file in the components folder and add the below code:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Add the &lt;code&gt;Footer.js&lt;/code&gt; component to &lt;code&gt;_app.js&lt;/code&gt; file as below&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#about-component"&gt;
  &lt;/a&gt;
  About Component
&lt;/h2&gt;

&lt;p&gt;Create &lt;code&gt;About.js&lt;/code&gt; file inside components folder and add the below code:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;I just added some dummy texts above for the demo. Include your profile image from the public folder as above. Placeholder &lt;code&gt;blur&lt;/code&gt; prop in image component is to add loading effects. Import &lt;code&gt;About&lt;/code&gt; component to &lt;code&gt;index.js&lt;/code&gt; file as below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;I have removed the older template code and added the above code. Now your portfolio looks like below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qNMA-LnO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xvfanljjllcrxfpswm1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qNMA-LnO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xvfanljjllcrxfpswm1.png" alt="about-screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dark-mode%C2%A0support"&gt;
  &lt;/a&gt;
  Dark Mode Support
&lt;/h2&gt;

&lt;p&gt;Now let's add dark mode to our portfolio. Adding dark mode is very simple. Create &lt;code&gt;ThemeSwitch&lt;/code&gt; component to add a toggle switch to toggle between Dark Mode and Light Mode. &lt;/p&gt;

&lt;p&gt;To support Dark Mode in Next.js we need to add &lt;code&gt;next-themes&lt;/code&gt; package to our dependency. Now import &lt;code&gt;useTheme&lt;/code&gt; from next-theme to ThemeSwitch Component as below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Add &lt;code&gt;ThemeSwitch&lt;/code&gt; Component to &lt;code&gt;Navigation&lt;/code&gt; component and include &lt;code&gt;next-themes&lt;/code&gt; ThemeProvider in &lt;code&gt;_app.js&lt;/code&gt; as below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;code&gt;attribute=class&lt;/code&gt; is to enable dark and light mode manually. I have disabled system preference by &lt;code&gt;enableSystem=false&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Change &lt;code&gt;darkMode&lt;/code&gt; option to &lt;code&gt;class&lt;/code&gt; in &lt;code&gt;tailwind.config.js&lt;/code&gt; file to toggle dark mode manually instead of relying on the operating system preference.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;After the above changes, our portfolio looks like below:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#light-mode"&gt;
  &lt;/a&gt;
  Light Mode
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0_hqKtrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvcrzfaq5pdkpj5qywbq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0_hqKtrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvcrzfaq5pdkpj5qywbq.png" alt="Light Mode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dark-mode"&gt;
  &lt;/a&gt;
  Dark Mode
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j_p1DPII--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/npd5s823fd85maxpokai.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j_p1DPII--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/npd5s823fd85maxpokai.png" alt="Dark Mode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-in%C2%A0vercel"&gt;
  &lt;/a&gt;
  Deploying in Vercel
&lt;/h2&gt;

&lt;p&gt;You can deploy your portfolio in Vercel within 2 steps as below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a &lt;a href="https://vercel.com/signup"&gt;Vercel Account&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Connect your repository and click deploy.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You can add multiple pages like projects, blogs by creating new files inside the pages folder. I hope you have found this useful.&lt;/p&gt;

&lt;p&gt;Thank you for reading.&lt;/p&gt;

&lt;p&gt;Get more updates on &lt;a href="https://twitter.com/Nilanth"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-blogs"&gt;
  &lt;/a&gt;
  More Blogs
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/10-react-packages-with-1k-ui-components-2bf3"&gt;10 React Packages with 1K UI Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/no-more-import-in-react-2mbo"&gt;No More ../../../ Import in React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/redux-toolkit-the-standard-way-to-write-redux-2g32"&gt;Redux Toolkit - The Standard Way to Write Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/5-packages-to-optimize-and-speed-up-your-react-app-during-development-4h5f"&gt;5 Packages to Optimize and Speed Up Your React App During Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/how-to-use-axios-in-an-optimized-and-scalable-way-with-react-518n"&gt;How To Use Axios in an Optimized and Scalable Way With React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/15-custom-hooks-to-make-your-react-component-lightweight-17cd"&gt;15 Custom Hooks to Make your React Component Lightweight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/10-ways-to-host-your-react-app-for-free-27ga"&gt;10 Ways to Host Your React App For Free&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/how-to-secure-jwt-in-a-single-page-application-cko"&gt;How to Secure JWT in a Single-Page Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nilanth/redux-auth-starter-a-zero-config-cra-template-9c0"&gt;Redux Auth Starter: A Zero Config CRA Template&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>react</category>
      <category>nextjs</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What CSS Versions are You Talking About?</title>
      <author>₳GEEK</author>
      <pubDate>Fri, 27 Aug 2021 01:33:22 +0000</pubDate>
      <link>https://dev.to/ageekdev/what-css-versions-are-you-talking-about-4394</link>
      <guid>https://dev.to/ageekdev/what-css-versions-are-you-talking-about-4394</guid>
      <description>&lt;p&gt;There is no official CSS documents for CSS authors &lt;a href="https://ageek.dev/css-evolution"&gt;over the last 3 decades&lt;/a&gt;, the closest things you can find are &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS"&gt;MDN CSS tutorials and references&lt;/a&gt;. There are only &lt;a href="https://www.w3.org/Style/CSS/"&gt;official specifications&lt;/a&gt; for CSS implementers standardized by &lt;a href="http://www.w3.org/"&gt;W3C&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Being able to understand the CSS specifications requires understanding the context, vocabulary, and fundamental concepts that the specifications are built out of. If you want to really understand the specs, good luck with that.&lt;/p&gt;

&lt;p&gt;When your site has a CSS problem which delays upcoming releases, you might have a hard time explaining to your boss about CSS versions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Boss&lt;/strong&gt;: What CSS versions are you talking about?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You&lt;/strong&gt;: CSS3, I guess&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Boss&lt;/strong&gt;: You guess? I heard there is CSS4?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You&lt;/strong&gt;: There is no single, integrated CSS4 specification&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Boss&lt;/strong&gt;: How about modules and snapshots thing?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You&lt;/strong&gt;: It's complicated&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Boss&lt;/strong&gt;: Hit me!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You&lt;/strong&gt;: %^&amp;amp;*()%$##...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CSS features are controlled and developed by &lt;a href="https://www.w3.org/Style/CSS/members"&gt;CSS Working Group&lt;/a&gt;, belongs to the broader organization &lt;a href="http://www.w3.org/"&gt;W3C&lt;/a&gt;, over the years &lt;a href="https://www.w3.org/Style/CSS/current-work"&gt;across multiple specifications&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A specification is not a user manual or user reference guide. The purpose of a spec is to tell developers who will implement the technology what features it must have, and how they are to be implemented.&lt;/p&gt;

&lt;p&gt;CSS does not have versions in the traditional sense; instead it has levels. Each level of CSS builds on the previous, refining definitions and adding features.&lt;/p&gt;

&lt;p&gt;The feature set of each higher level is a superset of any lower level, and the behavior allowed for a given feature in a higher level is a subset of that allowed in the lower levels. A user agent conforming to a higher level of CSS is thus also conformant to all lower levels.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;CSS Level 1 (CSS1)&lt;/strong&gt;: published in 1996 as a &lt;a href="https://www.w3.org/TR/CSS1/"&gt;single document&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CSS Level 2 (CSS2)&lt;/strong&gt;: published in 1998 as a &lt;a href="https://www.w3.org/TR/1998/REC-CSS2-19980512"&gt;single document&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CSS Level 2 Revision 1 (CSS2.1)&lt;/strong&gt;: published in 2011 as a &lt;a href="https://www.w3.org/TR/CSS21/"&gt;single document&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CSS Level 3 (CSS3)&lt;/strong&gt;: a term is used only to differentiate it from the previous monolithic versions. CSS Working Group chose to adopt a modular approach, where each module defines a part of CSS, rather than to define a single monolithic specification. This breaks the specification into more manageable &lt;a href="https://www.w3.org/Style/CSS/current-work"&gt;60+ modules&lt;/a&gt; and allows more immediate, incremental improvement to CSS.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CSS Level 4 (CSS4) and beyond&lt;/strong&gt;: There is no such thing CSS4. Independent modules can reach level 4 or beyond, but CSS the language no longer has levels.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main reason for adopting modular approach is that browser vendors implement CSS features at different speeds. To release a monolithic specification, every component part also has to be finished. It doesn’t make sense to draw a line at which all work slowed down by a single stubborn feature.&lt;/p&gt;

&lt;p&gt;When a new technology is added to CSS that is not an extension of something in an earlier CSS specification, it is published in a module that includes the indication &lt;strong&gt;Level 1&lt;/strong&gt; (&lt;a href="https://www.w3.org/TR/css-flexbox-1/"&gt;CSS Flexible Box Layout Module Level 1&lt;/a&gt;, &lt;a href="https://www.w3.org/TR/css-grid-1/"&gt;CSS Grid Layout Module Level 1&lt;/a&gt;, etc.)&lt;/p&gt;

&lt;p&gt;Since different CSS modules are at different levels of stability, the CSS Working Group has chosen to publish the &lt;a href="https://www.w3.org/TR/CSS/"&gt;CSS snapshot&lt;/a&gt; document. It includes only modules that the working group considers stable and for which there is enough implementation experience to be sure of that stability.&lt;/p&gt;

&lt;p&gt;Currently CSS versioning is a mess with countless separate modules. CSS authors should embrace feature or module based thinking by using feature queries (&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@supports"&gt;&lt;code&gt;@supports&lt;/code&gt;&lt;/a&gt;) or automatic tools (&lt;a href="https://github.com/browserslist/browserslist"&gt;browserslist&lt;/a&gt;, &lt;a href="https://postcss.org/"&gt;PostCSS&lt;/a&gt;, &lt;a href="https://github.com/postcss/autoprefixer"&gt;autoprefixer&lt;/a&gt;, etc.) to &lt;a href="https://ageek.dev/css-fallback-behavior"&gt;provide fallbacks&lt;/a&gt; or &lt;a href="https://ageek.dev/css-vendor-prefixes"&gt;vendor prefixes&lt;/a&gt; for legacy browsers.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Using the VueJS Composition API to Create Hooks for Supabase Database and Storage</title>
      <author>Aaron K Saunders</author>
      <pubDate>Fri, 27 Aug 2021 00:56:10 +0000</pubDate>
      <link>https://dev.to/aaronksaunders/using-the-vuejs-composition-api-to-create-hooks-for-supabase-database-and-storage-4b14</link>
      <guid>https://dev.to/aaronksaunders/using-the-vuejs-composition-api-to-create-hooks-for-supabase-database-and-storage-4b14</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pDOD0sjVF9E"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Sample application using &lt;a href="https://v3.vuejs.org/api/composition-api.html"&gt;Composition API&lt;/a&gt; to create "hooks" to interact with the &lt;a href="https://supabase.io/"&gt;supabase api&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;This is a work in progress, but wanted to show the approach I used which might inspire some one to go all the way... This isn't using typescript which I think would be a great next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;The main objective here is to get isolated the functionality into specific composition functions and take advantage of the reactivity of vue to expose refs for the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;loading&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;if you look at one of hooks below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useClient&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./sb-hooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * 
 * @param {*} table - table to execute query against
 * @param {*} columns - columns to return
 * @param {*} auto - if true, run query at startup
 * @returns 
 */&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// get supabase client&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * this is the function that does the actual query
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;qData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;qError&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;qData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;qError&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="c1"&gt;// if auto flag is set, run a startup&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;doQuery&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// reactive variables...&lt;/span&gt;
    &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;// function to call to execute query&lt;/span&gt;
    &lt;span class="nx"&gt;doQuery&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;here is how you might use it in your component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../hooks/sb-hooks-select&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;HomePage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
      &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="nx"&gt;doQuery&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;products&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and you template would look like this, utilizing the reactive properties from the hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"loading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;LOADING...&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-else-if=&lt;/span&gt;&lt;span class="s"&gt;"error"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"error-panel"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ error }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-else-if=&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in data"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item.id"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;router-link&lt;/span&gt; &lt;span class="na"&gt;:to=&lt;/span&gt;&lt;span class="s"&gt;"`/detail/$&lt;/span&gt;{item.id}`"&amp;gt;
      &lt;span class="nt"&gt;&amp;lt;item-component&lt;/span&gt; &lt;span class="na"&gt;:item=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/router-link&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#more"&gt;
  &lt;/a&gt;
  More
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Tons more content on my Youtube Channel &lt;a href="https://www.youtube.com/channel/UCMCcqbJpyL3LAv3PJeYz2bg"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Udemy Courses &lt;a href="https://www.udemy.com/user/aaronsaunders/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GumRoad Content &lt;a href="https://fiwic.gumroad.com/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vue</category>
      <category>postgres</category>
      <category>supabase</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
