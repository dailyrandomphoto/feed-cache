<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How you can use WebSockets with Flutter</title>
      <author>vibalijoshi</author>
      <pubDate>Tue, 12 Oct 2021 19:43:41 +0000</pubDate>
      <link>https://dev.to/vibalijoshi/how-you-can-use-websockets-with-flutter-ipn</link>
      <guid>https://dev.to/vibalijoshi/how-you-can-use-websockets-with-flutter-ipn</guid>
      <description>&lt;p&gt;WebSockets are clearly taking the industry by storm. With Google's Flutter framework on the rise too, it would give you a big boost knowing how to integrate both of these technologies. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-websockets"&gt;
  &lt;/a&gt;
  What are WebSockets
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mYdPtUO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enqzo6avfi1bykppcadf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mYdPtUO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enqzo6avfi1bykppcadf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WebSockets represent a long-awaited evolution in the client/server web technology. It defines a fully duplex bi-directional communication channel between the client and server. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Related: &lt;br&gt;
&lt;a href="https://www.pcmag.com/encyclopedia/term/clientserver#:~:text=An%20architecture%20in%20which%20the,WAN%29%20such%20as%20the%20Internet."&gt;What do you mean by client and a server?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In simple words, once after the initial handshake where the server and the client agree to upgrade to WebSockets, (from HTTP) the client and the server can talk in real time without having to continuously make requests (like loading the page again and again). &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Only the client-side problems of developing a dependable WebSocket-based solution for realtime Flutter apps are discussed in this article. On the server side, you must determine which solution you wish to utilise. You can use an open-source library like &lt;a href="https://ably.com/topic/socketio"&gt;Socket.IO&lt;/a&gt; if you haven't already.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-connect-to-a-websocket-server-with-flutter"&gt;
  &lt;/a&gt;
  How to connect to a WebSocket server with Flutter
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#-raw-websocketchannel-endraw-package"&gt;
  &lt;/a&gt;
  &lt;a href="https://pub.dev/packages/web_socket_channel"&gt;&lt;code&gt;web_socket_channel&lt;/code&gt;&lt;/a&gt; package
&lt;/h3&gt;

&lt;p&gt;We will use this package to acquire the tools we need to connect to a WebSocket server. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GyJY2a2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9y4379cj5cgz0xqr1h7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GyJY2a2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9y4379cj5cgz0xqr1h7w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;web_socket_channel&lt;/code&gt; basically works with the &lt;strong&gt;&lt;em&gt;StreamChannel&lt;/em&gt;&lt;/strong&gt; class, which is an abstract class representing a two-way communication channel (as in the case for WebSockets)&lt;/li&gt;
&lt;li&gt;Each &lt;code&gt;StreamChannel&lt;/code&gt; exposes a &lt;code&gt;Stream&lt;/code&gt; for &lt;strong&gt;receiving data&lt;/strong&gt;. A &lt;code&gt;Stream&lt;/code&gt;  is like a pipe, you put a value on the one end and if there’s a listener on the other end that listener will receive that value.&lt;/li&gt;
&lt;li&gt;It also exposes &lt;code&gt;StreamSink&lt;/code&gt; used to push messages to the server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In short words, the package allows you to both listen for messages from the server and push messages to the server i.e &lt;strong&gt;&lt;em&gt;fully duplex bi-directional communication channel&lt;/em&gt;&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;br&gt;
Follow the installation given here: &lt;br&gt;
&lt;a href="https://pub.dev/packages/web_socket_channel/install"&gt;https://pub.dev/packages/web_socket_channel/install&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#basic-idea"&gt;
  &lt;/a&gt;
  Basic Idea
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--twUS13MF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a36fwmllw3dfmptr35ae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--twUS13MF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a36fwmllw3dfmptr35ae.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We'd have a textfield in our app where the user could type a message. The data that we input would be displayed on the screen after pressing a button.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The data displayed comes from the server response, which is an echo server in this case, meaning it sends back what it receives. These servers are used to determine whether or not a connection to a server is successful. Here we would be using them to maintain simplicity for this example. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the boiler plate we will be using:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#how-to-connect-to-server"&gt;
  &lt;/a&gt;
  How to connect to server
&lt;/h3&gt;

&lt;p&gt;First let us connect to a WebSocket server. As discussed above we will be using an echo webSocket server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;WebSocketChannel&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;IOWebSocketChannel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;connect&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"wss://ws.ifelse.io/"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;WebSocketChannel&lt;/code&gt;: A &lt;em&gt;StreamChannel&lt;/em&gt; (class representing a two-way communication) that communicates over a WebSocket.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;IOWebSocketChannel&lt;/code&gt;: A &lt;a href="https://docs-flutter-io.firebaseapp.com/flutter/package-web_socket_channel_web_socket_channel/WebSocketChannel-class.html"&gt;WebSocketChannel&lt;/a&gt; that communicates using a &lt;code&gt;dart:io&lt;/code&gt;  &lt;a href="https://docs-flutter-io.firebaseapp.com/flutter/dart-io/WebSocket-class.html"&gt;WebSocket&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;IOWebSocketChannel.connect&lt;/code&gt;: Creates a new WebSocket connection and connects to  &lt;code&gt;url&lt;/code&gt;  using  &lt;a href="https://api.dart.dev/stable/2.14.2/dart-io/WebSocket/connect.html"&gt;WebSocket.connect&lt;/a&gt;  and returns a channel that can be used to communicate over the resulting socket. &lt;/li&gt;
&lt;li&gt;Here &lt;code&gt;wss://ws.ifelse.io/&lt;/code&gt; is an echo WebSocket server. Please note that the mostly used echo server &lt;code&gt;ws://echo.websocket.org&lt;/code&gt; is no longer in service. &lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-listen-to-the-server"&gt;
  &lt;/a&gt;
  How to listen to the server
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oUtTbDAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx4kcdw8mkh3gtk6jq09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oUtTbDAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx4kcdw8mkh3gtk6jq09.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now that we’ve established a connection, let us listen to messages from the server.&lt;/li&gt;
&lt;li&gt;After sending a message to the test server, it sends the same message back (echo). &lt;/li&gt;
&lt;li&gt;We will use a  &lt;a href="https://api.flutter.dev/flutter/widgets/StreamBuilder-class.html"&gt;&lt;code&gt;StreamBuilder&lt;/code&gt;&lt;/a&gt;  widget to listen for new messages, and a  &lt;code&gt;Text&lt;/code&gt; widget to display them.&lt;/li&gt;
&lt;li&gt;A StreamBuilder:

&lt;ol&gt;
&lt;li&gt;Can listen to exposed streams.&lt;/li&gt;
&lt;li&gt;Return widgets&lt;/li&gt;
&lt;li&gt;Catch snapshots of got stream information.
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;StreamBuilder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;  
  &lt;span class="nl"&gt;stream:&lt;/span&gt; &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;  
  &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Padding&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;  
      &lt;span class="nl"&gt;padding:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;20.0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;  
  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hasData&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;${snapshot.data}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;  
  &lt;span class="o"&gt;);&lt;/span&gt;  
  &lt;span class="o"&gt;},&lt;/span&gt;  
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Watch &lt;a href="https://youtu.be/MkKEWHfy99Y"&gt;this&lt;/a&gt; video to get a better idea about StreamBuilder:   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#how-to-send-data-to-the-server"&gt;
  &lt;/a&gt;
  How to Send data to the server
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uStuBkcp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq8ec511lodh34sfenkl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uStuBkcp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq8ec511lodh34sfenkl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will add a function &lt;code&gt;sendData()&lt;/code&gt; responsible for sending data to the stream whenever the floating button is pressed.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sendData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_controller&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isNotEmpty&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sink&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_controller&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
  &lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;channel.sink.add()&lt;/code&gt;: for sending values to the other endpoint of the stream (i.e the server) using the sink property of the WebSocketChannel. &lt;/li&gt;
&lt;li&gt;To make sure we are printing not empty data we add a &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#how-to-close-the-connection"&gt;
  &lt;/a&gt;
  How to close the connection?
&lt;/h3&gt;

&lt;p&gt;Using the close method we can disconnect from the server.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;dispose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
  &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sink&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
 &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dispose&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#final-code"&gt;
  &lt;/a&gt;
  Final Code
&lt;/h3&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;If you successfully connected to the server then you would see this on the emulator. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--le92O2SX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8q2ko45qfno56jsjbui.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--le92O2SX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8q2ko45qfno56jsjbui.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is how your app should would look at the end:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fk62VfHS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzcjif83d03h38382sjw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fk62VfHS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzcjif83d03h38382sjw.gif" alt="Animation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-can-you-use-it"&gt;
  &lt;/a&gt;
  Where can you use it?
&lt;/h3&gt;

&lt;p&gt;The realtime web existed before WebSockets, but it was difficult to accomplish, often slower, and based on hacking web technologies that weren't built for realtime applications. The WebSocket protocol paved the path for a genuinely real-time web and expanded the possibilities of Internet communication.&lt;/p&gt;

&lt;p&gt;USE CASES: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web-based games&lt;/li&gt;
&lt;li&gt;Chatting Applications&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>flutter</category>
      <category>tutorial</category>
      <category>mobile</category>
      <category>android</category>
    </item>
    <item>
      <title>Glitch monthly newsletter, October edition 🎃🎸</title>
      <author>jenn schiffer</author>
      <pubDate>Tue, 12 Oct 2021 19:26:33 +0000</pubDate>
      <link>https://dev.to/glitch/glitch-monthly-newsletter-october-edition-4hhc</link>
      <guid>https://dev.to/glitch/glitch-monthly-newsletter-october-edition-4hhc</guid>
      <description>&lt;p&gt;[&lt;em&gt;Hi Dev.to community! This is our monthly newsletter, published here for the community to be able to share. You can get this in your inbox for free at the start of every month by signing up for an account on &lt;a href="https://glitch.com"&gt;Glitch.com&lt;/a&gt;! And read to the end for a discount on Glitch Pro!&lt;/em&gt;]&lt;/p&gt;

&lt;p&gt;🎃 🎸 🍁 🤘 🎃 🎸 🍁 🤘 🎃 🎸 🍁 🤘 🎃 🎸 🍁 🤘&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy October, aka “beginning of Q4”, aka “Spooky season.”&lt;/em&gt; It’s one of my favorite times of the year: the weather is crisp and cool, the squirrels have pumpkins with faces to snack on well before Halloween even arrives, turtlenecks in public are more acceptable, and there are free domains.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Yes, that’s right, free domains.&lt;/strong&gt; A couple of weeks ago, we &lt;a href="https://blog.glitch.com/post/introducing-playlists-the-best-way-to-curate-and-share"&gt;launched Playlists&lt;/a&gt; – a creative and fun way to curate and share your favorite Glitch apps with the world. To celebrate curation on Glitch &lt;em&gt;and&lt;/em&gt; the importance of creators being able to represent and express themselves on the Web, we partnered with Google Registry to give out 50 domains each week in October to our community’s greatest curators - which could include you! &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSf3YiZ_3kiTjMikyWVsW_2s0p6NLuESQqLeHWU6ePK8Bw3shA/viewform"&gt;Submit a playlist through this form&lt;/a&gt; for a chance at getting a free domain to claim your own wonderful space on the Web.&lt;/p&gt;

&lt;p&gt;Keep scrolling to discover the rad apps &lt;em&gt;and playlists&lt;/em&gt; the Glitch community created last month, I hope they inspire you to create and curate, too. 🎃🎸&lt;/p&gt;

&lt;p&gt;See you on &lt;a href="https://glitch.com"&gt;glitch.com&lt;/a&gt;!&lt;br&gt;
👽 Jenn, Director of Community&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS. I want to give a shout out to &lt;a href="https://glitch.com/@n1ckfg"&gt;n1ckfg&lt;/a&gt; for responding to last month’s newsletter to let me know about their app &lt;a href="https://lightningloops.glitch.me/"&gt;~lightningloops&lt;/a&gt;. It’s a multiplayer draw-to-make-sound experience made with Node, Three.js, Magenta.js, and a training set of 164 MIDI files of their piano playing – some dating back to the 90s!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;🎃 🎸 🍁 🤘 🎃 🎸 🍁 🤘 🎃 🎸 🍁 🤘 🎃 🎸 🍁 🤘&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#last-month-on-glitch"&gt;
  &lt;/a&gt;
  Last Month on Glitch
&lt;/h3&gt;

&lt;p&gt;Check out the &lt;a href="https://blog.glitch.com/post/last-month-on-glitch-the-september-2021-edition"&gt;September edition of Last Month on Glitch&lt;/a&gt;, which includes remixable gems like an &lt;a href="https://glitch.com/edit/#!/bubo-rss"&gt;RSS and JSON reader&lt;/a&gt;, a &lt;a href="https://elo-ranker.glitch.me"&gt;ranking tool that would be great meetings&lt;/a&gt;, &lt;a href="https://infinite-dinos.glitch.me/"&gt;an infinite supply of dinosaurs&lt;/a&gt; and more.&lt;/p&gt;

&lt;p&gt;We want to feature your creations! Share with us in the comments any links to apps you’ve made and you just might see them on Glitch.com or in your inbox very soon.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remix-of-the-month"&gt;
  &lt;/a&gt;
  Remix of the Month
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D2JyxRnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iq9lzd73mecx4jw2o3lf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D2JyxRnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iq9lzd73mecx4jw2o3lf.png" alt='small screenshot of the date tracker app, "eversince"'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://glitch.com/edit/#!/remix/eversince"&gt;~eversince&lt;/a&gt; - Track big dates and milestones!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-fresh-glitch-playlists-with-no-skips"&gt;
  &lt;/a&gt;
  3 Fresh Glitch Playlists with no skips!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0o85RTuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s16k1ts3g7qhjqcp37f5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0o85RTuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s16k1ts3g7qhjqcp37f5.png" alt="graphic collage of the playlists about to be mentioned"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Want to get started with Machine Learning in the browser? Check out &lt;a href="https://glitch.com/@TensorFlowJS/official-tutorials-templates"&gt;TensorFlowJS Official Tutorials and Templates&lt;/a&gt;, brought to you by the TensorFlow.js team at Google!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;...and if you need some Machine Learning inspiration, the playlist to check out is &lt;a href="https://glitch.com/@monolesan/ai-and-creativity"&gt;monolesan’s AI and Creativity&lt;/a&gt;. Her apps display the fun and surreal intersection of body movement and machine learning, with apps that disappear as you blink, punish you for poor posture, and more.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Looking to go super low-res? &lt;a href="https://glitch.com/@aTylerRobertson/favicon-adventures"&gt;aTylerRobertson’s Favicon Adventures&lt;/a&gt; show you different ways to take advantage of SVGs in the app Favicon, including a chat app that I will be moving Glitch HQ to next time Slack is down.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Feeling inspired to create your own Playlists? Curate to your heart’s content and &lt;a href="https://forms.gle/uDpUiz5vbymcspJA7"&gt;submit your best Playlist&lt;/a&gt; for a chance to win a free .app or .dev domain this month!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FdubqaLL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dg45q8ahdrxe47hvv617.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FdubqaLL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dg45q8ahdrxe47hvv617.gif" alt="animated gif of our glitch pro gem"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sign up for Glitch Pro with the code &lt;strong&gt;GLITCHLOVESDEVTO&lt;/strong&gt; and get 25% off. You’ll get 100% of [the superpowers Glitch Pro gives you](&lt;a href="https://glitch.com/pricing"&gt;https://glitch.com/pricing&lt;/a&gt; – like project access controls, always-on apps, and more – feel free to share this post and code with your friends, and we'll see you on Glitch.com!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>glitch</category>
      <category>newsletter</category>
      <category>node</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Top 7 Featured DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 12 Oct 2021 19:23:15 +0000</pubDate>
      <link>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-mi6</link>
      <guid>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-mi6</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#take-it-away-tech-twitter"&gt;
  &lt;/a&gt;
  Take it away, Tech Twitter!
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/pascavld"&gt;@pascavld&lt;/a&gt;
 came through with a great reminder that DEV is a great place to share both in-depth articles &lt;em&gt;and&lt;/em&gt; easily digestible resources — like this roundup of favorite recent tech-related tweets. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pascavld" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lImPY2jB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--iHDMKTZo--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/385674/cc64d3e9-c7b5-4558-90ea-51d5de9cd14a.jpg" alt="pascavld"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pascavld/my-10-favorite-tech-twitter-tweets-from-the-past-week-3ab2" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My 10 favorite Tech Twitter tweets from the past week:&lt;/h2&gt;
      &lt;h3&gt;Pasca Vlad ・ Oct 5 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-pyramid-of-challenge"&gt;
  &lt;/a&gt;
  The Pyramid of Challenge
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/theworstdev"&gt;@theworstdev&lt;/a&gt;
 says that distributing challenges across a team is one of their personal top priorities when managing. Here's why...&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theworstdev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RwlSNxEo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uIo76ojL--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/59436/e2ebdd84-f763-4874-9384-3c487d854058.jpg" alt="theworstdev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theworstdev/distributing-challenge-on-building-highly-engaged-teams-2d3c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Distributing Challenge: On Building Highly Engaged Teams&lt;/h2&gt;
      &lt;h3&gt;Kurt Kemple ・ Oct 5 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#management&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#teambuilding&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#leadership&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-responsibility-of-accessibility"&gt;
  &lt;/a&gt;
  The Responsibility of Accessibility
&lt;/h2&gt;

&lt;p&gt;"Many times, I've tried to find a comprehensive, yet, not too detailed technical first-temps guide to accessibility for the team. So I decided to put together this one." &lt;br&gt;
Great job with this, &lt;a class="mentioned-user" href="https://dev.to/alenanik"&gt;@alenanik&lt;/a&gt;
!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/alenanik" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WP8EhbGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--i3zBUTgY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/135491/54c8854e-48fb-4e49-9379-526061ad7edc.jpg" alt="alenanik"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/alenanik/accessibility-a-gentle-introduction-1398" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;✨ Accessibility: a gentle introduction ✨ &lt;/h2&gt;
      &lt;h3&gt;Alena Nik ・ Oct 7 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#frontend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#inclusive&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#a-friendly-breakdown-of-rest-amp-api"&gt;
  &lt;/a&gt;
  A friendly breakdown of REST &amp;amp; API
&lt;/h2&gt;

&lt;p&gt;If you caught &lt;a class="mentioned-user" href="https://dev.to/whitep4nth3r"&gt;@whitep4nth3r&lt;/a&gt;
's &lt;a href="https://community.codenewbie.org/whitep4nth3r/on-demand-talk-this-box-will-change-your-life-1jb5"&gt;talk at CodeLand 2021&lt;/a&gt;, you know that they have a knack for breaking down complex topics into fun and engaging lessons. This post is no exception!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/whitep4nth3r" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gFhxX9YI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--89x-qD1I--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/492757/d64f2cf8-616d-4a73-af1c-17273b0c8545.png" alt="whitep4nth3r"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/whitep4nth3r/what-is-a-rest-api-51h" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What is a REST API?&lt;/h2&gt;
      &lt;h3&gt;Salma Alam-Naylor ・ Oct 5 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#api&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#informed-vsc-opinions"&gt;
  &lt;/a&gt;
  (Informed) VSC Opinions
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/neer17"&gt;@neer17&lt;/a&gt;
's hot takes on Visual Studio Code may or may not accord with your own thoughts. Either way, this post is worth a read!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/neer17" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--49K8sxmf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--krlM6unm--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/591905/5aaa876f-96ba-443c-8a3b-48a7ce17f0f7.jpeg" alt="neer17"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/neer17/opinionated-guide-on-tweaking-vs-code-for-productivity-1o53" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Opinionated guide on tweaking VS Code for productivity&lt;/h2&gt;
      &lt;h3&gt;Neeraj Sewani ・ Oct 6 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#vscode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#aria-first-development-approach"&gt;
  &lt;/a&gt;
  ARIA First Development Approach
&lt;/h2&gt;

&lt;p&gt;"In order to understand the tangled web of ARIA that is being seen in web development," says &lt;a class="mentioned-user" href="https://dev.to/steady5063"&gt;@steady5063&lt;/a&gt;
 "we must first understand the first rule of ARIA."&lt;/p&gt;

&lt;p&gt;Let's do it! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/steady5063" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BdwDBszY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--FBhoIlZl--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/595171/c35104f3-1dc2-4747-94ab-88dd5e9574b3.png" alt="steady5063"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/steady5063/a-tangled-web-of-aria-50nk" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A Tangled Web of ARIA&lt;/h2&gt;
      &lt;h3&gt;Mark Steadman ・ Oct 9 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#game-on"&gt;
  &lt;/a&gt;
  Game on
&lt;/h2&gt;

&lt;p&gt;Video games are often what spark a software developer's interest in the field but the path of game development is often shrouded in mystery and misinformation. &lt;a class="mentioned-user" href="https://dev.to/unitybuddy"&gt;@unitybuddy&lt;/a&gt;
 is taking steps to change that with this article.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/unitybuddy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NvRSC38G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--DO5OoUcD--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/591960/6633f01a-43b1-4df8-bfe2-1e05cb4587b8.png" alt="unitybuddy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/unitybuddy/become-a-game-designer-step-by-step-guide-90a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Become a Game Designer: Step by Step Guide&lt;/h2&gt;
      &lt;h3&gt;Mr. Unity Buddy ・ Oct 8 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#gamedev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>How to practice Javascript?</title>
      <author>Duomly</author>
      <pubDate>Tue, 12 Oct 2021 19:19:15 +0000</pubDate>
      <link>https://dev.to/duomly/how-to-practice-javascript-4lii</link>
      <guid>https://dev.to/duomly/how-to-practice-javascript-4lii</guid>
      <description>&lt;p&gt;This article was originally published at &lt;a href="https://www.blog.duomly.com/how-to-practice-javascript/"&gt;https://www.blog.duomly.com/how-to-practice-javascript/&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro-on-how-to-practice-javascript"&gt;
  &lt;/a&gt;
  Intro on How to Practice Javascript?
&lt;/h2&gt;

&lt;p&gt;Javascript is a programming language that has been used for decades. It's how you make interactive websites, how you build mobile apps. And it's how most of us interact with our smartphones' virtual assistants like Siri and Alexa.&lt;/p&gt;

&lt;p&gt;Javascript is now everywhere in software development, which makes it one of the most in-demand skills on the market. That's also the reason why many people start learning Javascript. It's  very often chosen as a first coding language.&lt;/p&gt;

&lt;p&gt;To become proficient in any coding language, one needs to be familiar with the concepts of the particular language as well as syntax and algorithms- but when you already read many books and did lots of courses or one big course, you have to start getting experience and practice your new skills. &lt;/p&gt;

&lt;p&gt;Practicing Javascript is very important, because it can help you to understand everything that may seem complicated in theory. And it works the other way, when you start practicing you understand how important it is to know the theory.&lt;/p&gt;

&lt;p&gt;When I started learning how to code in Javascript objects and inheritance seemed difficult to understand, and I couldn’t imagine when I can use it in real project, but when I started to write the projects, I realized how important is to know the theory of the programming language to be able to provide a high-quality solution for the problem.&lt;/p&gt;

&lt;p&gt;Many people don't have an idea how to sharpen your Javascript skills. I already went through this stage, and I'd like to share with you my ideas on how to practice Javascript online and offline.&lt;/p&gt;

&lt;p&gt;P.S. I prepared a Youtube video about the ways I’m going to describe here, so feel free to watch it and leave me your feedback.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/U56dGJP2bxU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-build-javascript-projects"&gt;
  &lt;/a&gt;
  1. Build Javascript Projects
&lt;/h3&gt;

&lt;p&gt;Building projects as Javascript exercise is probably the most obvious point in this list, but it’s important. &lt;/p&gt;

&lt;p&gt;Don’t worry if you are a beginner and you don't know how to write the whole app. You don’t have to start from anything advanced, you can create a simple piece of code, like a function changing the colors of the button. &lt;/p&gt;

&lt;p&gt;The most important in the process is to create a code and understand how it works. This will help you to understand the theory that you already know from books, and teach you how to choose the best solutions. &lt;/p&gt;

&lt;p&gt;If you don't want to start with setting all the environment by yourself, and just want to start coding, try to use ready playgrounds, like CodePen for example.&lt;/p&gt;

&lt;p&gt;Besides experience which you can get by writing the code, you can gather all this in the repository and create your programming portfolio, which is very important when you apply for a job.&lt;/p&gt;

&lt;p&gt;Here you can find lists of projects that you can do as an exercise for practicing Javascript.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#projects"&gt;
  &lt;/a&gt;
  Projects:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://dev.to/9-javascript-project-ideas-for-beginners-that-help-you-to-build-an-amazing-coding-portfolio/"&gt;Javascript projects for portfolio&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/9-react-js-projects-for-beginners-that-will-help-you-to-build-an-amazing-portfolio-and-get-hired/"&gt;React projects for portfolio&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/vue-js-project-ideas-for-beginners/"&gt;VueJS projects for portfolio&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/node-js-project-ideas-for-beginners/"&gt;NodeJS projects for beginners&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-improve-existing-projects"&gt;
  &lt;/a&gt;
  2. Improve Existing Projects
&lt;/h3&gt;

&lt;p&gt;As the first point, I wrote about creating projects. The next thing you can do to train your Javascript knowledge is to improve the program you created. It's a really good exercise. &lt;/p&gt;

&lt;p&gt;If you've learned some more advanced things and have an idea how you can change what you created, do it. Try different ways to solve the same problems, measure the performance and pay attention to the coding best practices, then you are able to learn to build a high-quality solutions. &lt;/p&gt;

&lt;p&gt;The other approach is expand your projects, and adding another functionalities.&lt;/p&gt;

&lt;p&gt;For example, if you were learning HTML and CSS first and you build a layout, you can add functionality in Javascript later, or you created a listing of products, try to add a basket and make e-commerce. If you created a simple function, try to write some simple app, using that function.&lt;/p&gt;

&lt;p&gt;Remember that the main goal of the project is to learn, get some experience and improve Javascript skills. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-complete-code-challenges"&gt;
  &lt;/a&gt;
  3. Complete Code Challenges
&lt;/h3&gt;

&lt;p&gt;It may happen that you won’t be able to find an idea for a project to build, or maybe you are more advanced and would like to solve more advanced problems. &lt;/p&gt;

&lt;p&gt;Than a good idea may be to find some groups or website where you can solve code challenges. It’s also possible to find those kinds of challenges in blog posts, articles, forums, online applications and website, etc. &lt;/p&gt;

&lt;p&gt;Solving more advances issues will bring you a lot of fun and can be helpful during a technical interview as you may be asked to explain something similar. &lt;/p&gt;

&lt;p&gt;Some websites provide even real examples from interviews in such companies as Google, Amazon, or Uber. &lt;/p&gt;

&lt;p&gt;Another advantage of solving coding challenges is that you often don’t have to build an entire application to practice solving a particular issue, especially if you are solving it in a ready platform with ready test cases. It also teaches you best practices in coding.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-join-an-open-source-project"&gt;
  &lt;/a&gt;
  4. Join an Open Source Project
&lt;/h3&gt;

&lt;p&gt;Joining an open source project is an advice for those who have the junior level knowledge at least. Joining to the existing, open-source project will allow you to learn on a real-life application, and learn from other developers who work with you on the project. It’s also a huge plus in your resume.&lt;/p&gt;

&lt;p&gt;Joining an open source project will teach you the way development is done. You can  get experience with tools and practices used in many jobs, like git, code reviews, etc.&lt;/p&gt;

&lt;p&gt;Besides that, collaborating with others on a project makes you learn the process of development as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-join-the-coding-community"&gt;
  &lt;/a&gt;
  5. Join the Coding Community
&lt;/h3&gt;

&lt;p&gt;Javascript, as one of the most popular programming languages, has a huge, friendly community, and you can become a part of if. There are a lot of forums, groups, or even live meetups where you can participate, read interesting content, and try solving different programming problems. &lt;/p&gt;

&lt;p&gt;This is a great way to learn from other programmers in real-life situations, and it’s always a great thing to listen to advice and tips from people with more significant experience. &lt;/p&gt;

&lt;p&gt;Also, you can start sharing your knowledge with those who start learning and need some help or advice, which will give you the feeling of achieving the next level. &lt;/p&gt;

&lt;p&gt;You can start building your profile on StackOverflow, and answer some questions, or help beginners on Reddit, or Quora as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-share-your-javascript-learning-journey-with-others"&gt;
  &lt;/a&gt;
  6. Share your Javascript Learning Journey with Others
&lt;/h3&gt;

&lt;p&gt;Nowadays, media like blogs or vlogs are really popular, and people share their everyday life with others. Why couldn’t you share your learning journey? &lt;/p&gt;

&lt;p&gt;I think it’s a great idea to start documenting what you’ve learned. It’s motivating while you get the community around your content of people who keep fingers crossed for your progress.&lt;/p&gt;

&lt;p&gt;Besides writing blog posts, or vlogging, you can start building a coding Instagram profile as well.&lt;/p&gt;

&lt;p&gt;Besides it, you can create blog posts about some Javascript programming concepts, and tips to help others, and explain it in your own way. Or do a video tutorial on how you practice your knowledge and build the application, or do a live coding stream.&lt;/p&gt;

&lt;p&gt;Possibilities are really huge, and by doing content you are learning new things as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-write-coding-articles-and-share-knowledge"&gt;
  &lt;/a&gt;
  7. Write Coding Articles and Share Knowledge
&lt;/h3&gt;

&lt;p&gt;Besides sharing your coding journey, your successes and failures, you can aslo share tips and tricks about coding. &lt;/p&gt;

&lt;p&gt;There are a number of ways you share your Javascript articles without setting up your own blog. One option is to set up an account on Medium and start sharing knowledge with people who may really need it while going through the process as well! Writing about syntax errors, parent function, arrow functions, object oriented programming can also teach you a lot. &lt;/p&gt;

&lt;p&gt;Sometimes it happens, that a Medium blog with big audience will reach out to you, and ask you to publish your content on their blog. It will give you huge visibility, and can also be a great achievement in your resume.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-you-need-to-start-practicing-javascript"&gt;
  &lt;/a&gt;
  What do you need to start practicing Javascript?
&lt;/h3&gt;

&lt;p&gt;You already know a few methods on how you can train your Javascript skills. Now, let's clarify what exactly do you need to start.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#code-editor"&gt;
  &lt;/a&gt;
  Code editor
&lt;/h4&gt;

&lt;p&gt;If you decided to create your own project, you can set up your own code editor, like Visual Studio Code with plugins that will help you a lot with writing project.&lt;/p&gt;

&lt;p&gt;To start coding without big preparation, you can use any online playground.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#browser"&gt;
  &lt;/a&gt;
  Browser
&lt;/h4&gt;

&lt;p&gt;Good browser with nice developer tools will be requiered as well, because with Javascript you can easily debug by console.log a lot of things. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#list-of-code-challenges-resources"&gt;
  &lt;/a&gt;
  List of code challenges resources
&lt;/h4&gt;

&lt;p&gt;Creating a list of websites or mobile apps with coding challenges, will be another step in your career.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#list-of-community-resources"&gt;
  &lt;/a&gt;
  List of community resources
&lt;/h4&gt;

&lt;p&gt;Setting accounts on platforms with Javascript communities, like StackOverflow or Reddit is something what you should do as well. &lt;/p&gt;

&lt;p&gt;Of course all steps depend on which methods you decide to select for yourself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion-on-how-to-practice-javascript"&gt;
  &lt;/a&gt;
  Conclusion on How to Practice Javascript
&lt;/h3&gt;

&lt;p&gt;In this article, I went through the six ideas on how to train Javascript online and offline, but most of the ideas may be used to improve different programming languages skills as well.&lt;/p&gt;

&lt;p&gt;If you need some help with building your first projects, you can join an e-learning platform where you will get a ready environment and some instructions to start, like in some of the &lt;a href="https://www.duomly.com"&gt;Duomly&lt;/a&gt; practice courses.&lt;/p&gt;

&lt;p&gt;I hope you will find this list helpful, and I encourage everyone who started learning the theory of programming to practice it as much as possible because it’s a great way to remember everything you already know in theory, and become a better programmer.&lt;/p&gt;

&lt;p&gt;Thank you for reading,&lt;br&gt;
Anna from Duomly&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>JavaScript Clock | CSS Neumorphism Working Analog Clock UI Design</title>
      <author>ziontutorial</author>
      <pubDate>Tue, 12 Oct 2021 19:00:41 +0000</pubDate>
      <link>https://dev.to/ziontutorial/javascript-clock-css-neumorphism-working-analog-clock-ui-design-5037</link>
      <guid>https://dev.to/ziontutorial/javascript-clock-css-neumorphism-working-analog-clock-ui-design-5037</guid>
      <description>&lt;p&gt;In this article we will design a very beautiful neumorphism Analog Clock UI design using javascript css &amp;amp; html. I am Daman sure you all are familiar with this type of design. However i think there are many beginner who do not know  &lt;a href="https://ziontutorial.com/"&gt;How to create a Working Analog Clock UI Design using html css and javascript&lt;/a&gt;. Hopefully this article will help you. &lt;/p&gt;

&lt;p&gt;So lets understand the concepts of what is basically a neumorhism design .&lt;/p&gt;

&lt;p&gt;Neumorphism is a modern design that is currently in great demand. It is much more beautiful and attractive than the general design. &lt;/p&gt;

&lt;p&gt;If you want you can &lt;a href="https://ziontutorial.com/"&gt;you can watch the live demo&lt;/a&gt; with this link  .&lt;/p&gt;

&lt;p&gt;if you are a beginner do follow my steps what i am doing to create this beautiful Analog Clock UI Design using html css and javascript. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1: Basic HTML Code&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
First of all add the basic html code to create this Analog Clock UI Design using html css and javascript .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"script.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;The Best clocking system using css&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"background"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"shape"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"shape"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hour hand"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"hour"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"minute hand"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"minute"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"seconds hand"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"seconds"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 2: Basic CSS Code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#080710&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.background&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;430px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;520px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.background&lt;/span&gt; &lt;span class="nc"&gt;.shape&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;240px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;240px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.shape&lt;/span&gt;&lt;span class="nd"&gt;:first-child&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="m"&gt;#84fab0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="m"&gt;#8fd3f4&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-90px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.shape&lt;/span&gt;&lt;span class="nd"&gt;:last-child&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="m"&gt;#e6b980&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="m"&gt;#eacda3&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.clock&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;content-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.07&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="py"&gt;backdrop-filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;320px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;320px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.07&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;35px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.hand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.hour&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.minute&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#84fab0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.seconds&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f8fc30&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 3: JavaScript Code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hour&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hour&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;minute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;minute&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;seconds&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;set_clock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;date_now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date_now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date_now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date_now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;calc_hr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;calc_min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;calc_sec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="nx"&gt;hour&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`rotate(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;calc_hr&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;deg)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;minute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`rotate(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;calc_min&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;deg)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`rotate(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;calc_sec&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;deg)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 4: Detail explanation of some code&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. setInterval() function&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The setInterval() method, offered on the Window and Worker interfaces, repeatedly calls a function or executes a code snippet, with a fixed time delay between each call.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. new Date() function&lt;/strong&gt;&lt;br&gt;
When called as a function, returns a string representation of the current date and time, exactly as new Date().toString() does.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hope you like this design and you have learned how to make it from this article. You can watch the live demo of this design if you want and download the source code if necessary. You can also see the designs I have made many more.&lt;br&gt;
If there is any difficulty, of course you can comment.&lt;/p&gt;

&lt;p&gt;You can visit my blog for more tutorials like this.&lt;br&gt;
&lt;a href="https://ziontutorial.com/"&gt;https://ziontutorial.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Colorize your CLI output in Node.js</title>
      <author>coder4life</author>
      <pubDate>Tue, 12 Oct 2021 18:31:51 +0000</pubDate>
      <link>https://dev.to/coder4_life/colorize-your-cli-output-in-nodejs-2c1p</link>
      <guid>https://dev.to/coder4_life/colorize-your-cli-output-in-nodejs-2c1p</guid>
      <description>&lt;p&gt;Tired of the same boring console.log output? Need to highlight some output in cli app? Here you will get some examples for red, yellow, and green colored output.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/m56GZTSXcKs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Python - Input and Output</title>
      <author>Introschool</author>
      <pubDate>Tue, 12 Oct 2021 18:24:21 +0000</pubDate>
      <link>https://dev.to/introschool/python-input-and-output-3amc</link>
      <guid>https://dev.to/introschool/python-input-and-output-3amc</guid>
      <description>&lt;p&gt;&lt;strong&gt;Input and Output&lt;/strong&gt;&lt;br&gt;
In this section, we will learn about how to take input and give output in Python. Till now we were writing static programs, it means that we were not taking any input from the user.&lt;/p&gt;

&lt;p&gt;But in the real world, A developer often interacts with the user, in order to get data or show the user some result. For example, you are making a program which takes a name as an input from the user and shows a greeting message with the user’s name on the screen. For this program, you need to know two things. First, how to take input from the user and second is how to show output. &lt;/p&gt;

&lt;p&gt;Python provides lots of built-in functions. We will discuss Functions in detail later in the course. But for now, Functions are a reusable unit of code that is designed to perform single or related actions.  You have already seen a &lt;strong&gt;print()&lt;/strong&gt; function that is used to show output. Similarly, there is built-in function &lt;strong&gt;input()&lt;/strong&gt; for taking input from the user.&lt;br&gt;
How to Take Input from the User&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Take Input from the User&lt;/strong&gt;&lt;br&gt;
We will use Python’s built-in function &lt;strong&gt;input()&lt;/strong&gt; for taking input from the user. Let’s see how it works.&lt;br&gt;
Input takes a string as an optional parameter. Usually it's a description of what input you want to take from the user. See the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# get the name from a user
name = input('Enter your name : ') 
Enter your name : 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you try to run this program the following thing will happen:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you execute input() function, the program will stop until the user provides the required input.&lt;/li&gt;
&lt;li&gt;Once user enters the name it will save it in the variable &lt;strong&gt;name.&lt;/strong&gt;
&lt;strong&gt;How To Show Output&lt;/strong&gt;
Now we have the user input that we can show on the input. To show input on the screen we use Python’s built-in function print() is used&lt;/li&gt;
&lt;li&gt;In print function, you can pass multiple objects in the print functions
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# print() function

print(2, 'helo', 3, True)
# Output: 2 hello 3 True

a = 2,

print('a =', a)
# Output
# a = 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using &lt;strong&gt;sep&lt;/strong&gt; and &lt;strong&gt;end&lt;/strong&gt; parameter in print function.&lt;br&gt;
&lt;strong&gt;sep&lt;/strong&gt;&lt;br&gt;
    The sep parameter is used to separate objects. Default value is a space character(‘ ‘).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# sep 

print(2, 'Hello', 3, True, sep=', ')
# Output: 2, Hello, 3, True
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;br&gt;
The end parameter is printed at the last.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# end

a = 'Hello world'
print('a =', a, end='!')
# Output: a = Hello world!

print('code =', 3, sep='0', end='0')
# output: code =030
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>EuroPython 2021: All edited videos now available</title>
      <author>whykay 👩🏻‍💻🐈🏳️‍🌈 (she/her)</author>
      <pubDate>Tue, 12 Oct 2021 18:21:24 +0000</pubDate>
      <link>https://dev.to/europython/europython-2021-all-edited-videos-now-available-4f80</link>
      <guid>https://dev.to/europython/europython-2021-all-edited-videos-now-available-4f80</guid>
      <description>&lt;p&gt;We’re happy to release another batch of 41 cut videos of &lt;a href="https://ep2021.europython.eu/"&gt;EuroPython 2021&lt;/a&gt; covering the &lt;a href="https://ep2021.europython.eu/schedule/30-july"&gt;third day sessions of the conference&lt;/a&gt; and a number of edited videos for the previous days. In total, we now have 118 videos waiting for you. You can watch them on &lt;a href="http://europython.tv/"&gt;our YouTube channel&lt;/a&gt;. We have created a &lt;a href="https://www.youtube.com/playlist?list=PL8uoeex94UhFuRtXhkqOrROsdNI6ejuiq"&gt;EuroPython 2021 playlist&lt;/a&gt; for this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bHWgKeSh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rbw056oarddxod0gkdc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bHWgKeSh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rbw056oarddxod0gkdc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#all-europython-videos"&gt;
  &lt;/a&gt;
  All EuroPython Videos
&lt;/h2&gt;

&lt;p&gt;Our YouTube channel has videos of all EuroPython conferences going back to 2011. Check out &lt;a href="https://www.youtube.com/playlist?list=UU98CzaYuFNAA_gOINFB0e4Q"&gt;more than 1500 Python videos&lt;/a&gt; covering 10 conference years.&lt;/p&gt;

&lt;p&gt;In the coming weeks, we'll upload the EuroPython 2021 videos to &lt;a href="https://archive.org/details/@europythonvideos"&gt;our archive.org channel&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;Enjoy,&lt;br&gt;
&lt;a href="https://ep2021.europython.eu/europython/team/"&gt;EuroPython 2021 Team&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.europython-society.org/"&gt;EuroPython Society&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ep2021.europython.eu/"&gt;EuroPython 2021 Website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>europython</category>
      <category>videos</category>
      <category>python</category>
    </item>
    <item>
      <title>BUILD A SIMPLE RESEARCH ASSISTANT WITH PYTHON</title>
      <author>Geof</author>
      <pubDate>Tue, 12 Oct 2021 18:21:10 +0000</pubDate>
      <link>https://dev.to/geofspot/build-a-simple-research-assistant-with-python-4idb</link>
      <guid>https://dev.to/geofspot/build-a-simple-research-assistant-with-python-4idb</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/bS6QuQ2S4yulVQnAbO/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/bS6QuQ2S4yulVQnAbO/giphy.gif" alt="research gify img"&gt;&lt;/a&gt;&lt;br&gt;
Among other great stuffs we can do with python, research and information sourcing can be done better and faster with python. In this tutorial we are going to build a simple research assistant with a few lines of code.&lt;/p&gt;

&lt;p&gt;Meanwhile, we’ll be using a few python modules like Wikipedia and Pywhatkit to make this brief project fun and effective.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#firstly-lets-make-use-of-pywhatkit"&gt;
  &lt;/a&gt;
  Firstly Let's Make Use Of Pywhatkit
&lt;/h2&gt;

&lt;p&gt;Pywhatkit is a Python library with various helpful features. It is an easy to use library which does not require you to do some additional setup.&lt;/p&gt;

&lt;p&gt;This module could also be used to send images and messages via whatsapp, play youtube videos, search the web, convert text to handwritten images and more. But for this brief tutorial we are basically going to use it to make a simple research assistant.&lt;/p&gt;

&lt;p&gt;To get the full documentation on pywhatkit module click &lt;a href="https://pypi.org/project/pywhatkit/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pywhatkit doesn’t come preinstalled with python, but can install it with pip or pip3 by simply running: &lt;strong&gt;pip install pywhakit&lt;/strong&gt; on your command line.&lt;/p&gt;

&lt;p&gt;Then import the module whenever you want to use it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#import pywhatkit
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pywhatkit&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;kit&lt;/span&gt;

&lt;span class="c1"&gt;#Get information about python in 5 lines/paragraphs
&lt;/span&gt;&lt;span class="n"&gt;kit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'python'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above will give the following output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Python is an interpreted high-level general-purpose programming language. Its design philosophy emphasizes code readability with its use of significant indentation. Its language constructs as well as its object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects.Python is dynamically-typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly, procedural), object-oriented and functional programming. It is often described as a "batteries included" language due to its comprehensive standard library.Guido van Rossum began working on Python in the late 1980s, as a successor to the ABC programming language, and first released it in 1991 as Python 0.9.0.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That sounds like fun right? However, the 5 is for number of lines you need, you change it to whatever number you need.&lt;br&gt;
But there is a little limitation here: Normally you’d want to save the output to a variable or to a file and probably do something with it. However, before you do that, try and check the return type first. If you run save the search result to a variable and print the type, it'll be NonetType&lt;/p&gt;

&lt;p&gt;Something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pywhatkit&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;kit&lt;/span&gt;

&lt;span class="n"&gt;sourced&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'python'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourced&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fortunately there is another better way, in case you'd like to save your search results to a variable, file or even send it as an email then you should use &lt;a href="https://pypi.org/project/wikipedia/"&gt;&lt;strong&gt;Wikipedia&lt;/strong&gt;&lt;/a&gt; instead&lt;/p&gt;

&lt;p&gt;It’s actually similar to pywhatkit. You just install with pip: pip install wikipedia via command line, then you import the module.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#working-with-wikipedia"&gt;
  &lt;/a&gt;
  Working With Wikipedia
&lt;/h2&gt;

&lt;p&gt;Now let's code up something real fun:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#import wikipedia
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;wikipedia&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;wk&lt;/span&gt;

&lt;span class="c1"&gt;# #create a function to ask for language, word and sentence lines. Use the inputs to generate basic information
# for the word entered
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Please choose a language: "fr" for france, "es" for spanish and "en" for english:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;wk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_lang&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Enter a word, space, followed by the number of lines you want(in figures):&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt; '&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Searching wikipedia for &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;sourced&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourced&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Please make sure you entered a wikipedia compatible valid information with the following format: Programming 5. Separating the inputs with a space only. Also make sure you selected a valid LANGUAGE!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;......................................................&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Research done!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="c1"&gt;#run the function
&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Apparently both pywhatkit.info and wikipedia.summary are using the same knowledge base which is the official wikipedia, so you should not put any phrase or words that you wouldn’t normally search on wikipedia. It’s not google search engine. You may use .search instead of .summary to get search results from google(list format).&lt;/p&gt;

&lt;p&gt;If haven't used the wikipedia library before, try and read the documentation &lt;a href="https://pypi.org/project/wikipedia/"&gt;here&lt;/a&gt;, it's actually precise and easy to understand, I strongly believe reading things up when necessary should be a major part of every programmer's skills.&lt;/p&gt;

&lt;p&gt;OK guys.. This is just a simple research assistant program with python. Expect something more advanced on this same topic in the future.&lt;/p&gt;

&lt;p&gt;If you'd like a more explained version of this post please visit the post page on my blog &lt;a href="https://pythgenie.geofsphere.com/research-assistant-program/"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally am kinda new here and this happens to be my first post on Dev, I'll be publishing more pythonic posts and your following up would be appreciated and would also make you see more of my posts.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>#7 Best Artificial intelligence technologies and there Websites🔥</title>
      <author>Deepak Gupta</author>
      <pubDate>Tue, 12 Oct 2021 17:54:17 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/7-best-artificial-intelligence-technologies-and-there-websites-2p9o</link>
      <guid>https://dev.to/deepakguptacoder/7-best-artificial-intelligence-technologies-and-there-websites-2p9o</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone! 🖤
&lt;/h1&gt;

&lt;p&gt;In this article, we look into Best Artificial intelligence technologies.&lt;br&gt;
We are using Artificial intelligence in our daily life I will tell you the best #7th website of the artificial intelligence it's help you to grow and build your knowledge.&lt;br&gt;
.&lt;br&gt;
Website are are given below and disruption also.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1robotic-process-automation"&gt;
  &lt;/a&gt;
  1.&lt;a href="https://www.turbotic.com/campaigns/robotics-operations-center?gclid=Cj0KCQjw5JSLBhCxARIsAHgO2Se8atXKde8vsqTV23wLSVqGJi2Rgi-gHu3N-IKKZ6jtvoazKSdKlTsaArgBEALw_wcB"&gt;Robotic Process Automation&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S1eIL2z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07u63lqg71r952g5epnj.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1eIL2z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07u63lqg71r952g5epnj.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Robotic process is the process of the machine work in our world every place to using this AI to saving time and making process easy.&lt;br&gt;
.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2cyber-defense"&gt;
  &lt;/a&gt;
  2.&lt;a href="https://www.google.com/search?q=cyber+defense+artificial+intelligence&amp;amp;client=ms-android-vivo&amp;amp;sxsrf=AOaemvL4EpPYi4ctNMhmmAO55Q2qhIbzyw%3A1634022805536&amp;amp;ei=lTVlYYaGILib4t4P1KGhGA&amp;amp;oq=Cyber+Defense+art&amp;amp;gs_lcp=ChNtb2JpbGUtZ3dzLXdpei1zZXJwEAEYADIGCAAQFhAeMgYIABAWEB4yBQghEKABOgQIABBHOg0ILhDHARDRAxBDEJMCOgQIABBDOgoILhDHARDRAxBDOgUIABCABDoICAAQgAQQyQNQljFYgTpguURoAHABeACAAZICiAHVBpIBBTAuMi4ymAEAoAEByAEIwAEB&amp;amp;sclient=mobile-gws-wiz-serp#fpstate=form_ad_n1s0p1"&gt;Cyber Defense&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XayIhDJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2k4p098st7cve36ivgmk.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XayIhDJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2k4p098st7cve36ivgmk.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Cyber Defense is the Cyber Security to save and protect your data and personal thing from the hacker's.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3machine-learning-platforms"&gt;
  &lt;/a&gt;
  3.&lt;a href="https://www.simplilearn.com/sem-landing/master-program/bundle_id/117/template/2?utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_term=%2Bmachine%20%2Blearning&amp;amp;utm_content=1428905907-78938469271-362537006817&amp;amp;utm_device=m&amp;amp;utm_campaign=Search-DataCluster-DSAI-AIML-IN-Main-AllDevice-adgroup-AIML-Machinelearning-Course-BMM-New&amp;amp;gclid=Cj0KCQjw5JSLBhCxARIsAHgO2ScDBtTYsGlu3H2y8AseAbEOB880mODf4DSc3wIhSiJKSjsiR_F4gosaAhWXEALw_wcB"&gt;Machine Learning Platforms&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HRaF18D---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc2jutyqe90aqa066wct.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HRaF18D---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc2jutyqe90aqa066wct.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Machine Learning Platforms&lt;br&gt;
A platform for automating and accelerating the delivery lifecycle of predictive applications capable of processing big data using machine learning or related techniques.”&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4biometrics"&gt;
  &lt;/a&gt;
  4.&lt;a href="https://www.kentcam.com/camattendance/?gclid=Cj0KCQjw5JSLBhCxARIsAHgO2ScnSa4-0o8Qpgwqy16W1BsFCcGQoygil5hJaRTA3A48Px2tYwCBfosaAqKrEALw_wcB"&gt;Bio-metrics&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZK_8zWg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mz6hilvg7cij3ksxg2v0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZK_8zWg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mz6hilvg7cij3ksxg2v0.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Biometrics is one of the AI which is Using your daily life example; school, company, factories, college etc.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5emotion-recognition"&gt;
  &lt;/a&gt;
  5.&lt;a href="https://www.neom.com/en-us/whatistheline?utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=2195_AO_RPL_Search_Clicks_IN_CPC_Text_T1_EN_27Apr21_30Nov21_3242_SmartCity&amp;amp;utm_content=SmartCity&amp;amp;gclid=Cj0KCQjw5JSLBhCxARIsAHgO2Sd0WoSvj9Y2EVIkj1bgthnbPSwPrgszyhEnnB6ATOeEvj0n2bKvEXEaAt9rEALw_wcB"&gt;Emotion Recognition&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IuHbJ_GC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfb5yltu54tnw1693yvp.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IuHbJ_GC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfb5yltu54tnw1693yvp.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Emotion AI refers to artificial intelligence that detects your face and emotion reaction also and interprets human emotional signals. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6content-creation"&gt;
  &lt;/a&gt;
  6.&lt;a href="https://mydukaan.io/blog/ai-content-creation-tools/"&gt;Content Creation&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E3bT6K79--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqiibs44utaqrq0tj72v.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E3bT6K79--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqiibs44utaqrq0tj72v.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Content Intelligence is a subset of AI that allows marketers to use machine learning algorithms to optimize content for consumption and distribution.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7speech-recognition"&gt;
  &lt;/a&gt;
  7.&lt;a href="https://www.hpe.com/in/en/solutions/artificial-intelligence.html?jumpid=ps_pwnsy6fgh7_aid-520042864&amp;amp;ef_id=Cj0KCQjw5JSLBhCxARIsAHgO2SdlfrepFz0VI6QcFhqHCPYHap3mTIoeTpb142YC81w8KnvwoBdrSUUaAml6EALw_wcB:G:s&amp;amp;s_kwcid=AL!13472!3!541195828265!p!!g!!ai%20intelligence!14386686690!127123177875&amp;amp;"&gt;Speech Recognition&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ArB1w-mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5imzs43l5kr0kringuv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ArB1w-mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5imzs43l5kr0kringuv.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Speech recognition is the voice command to your device&lt;br&gt;
It's the most of the people are using children's also using this AI..&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#i-hope-you-found-this-article-useful-if-you-need-any-help-please-let-me-know-in-the-comment-section"&gt;
  &lt;/a&gt;
  I hope you found this article useful, if you need any help please let me know in the comment section.💯
&lt;/h3&gt;

</description>
      <category>showdev</category>
      <category>webdev</category>
      <category>techtalks</category>
      <category>webpack</category>
    </item>
    <item>
      <title>Learn programming from absolute zero</title>
      <author>Marinsborg</author>
      <pubDate>Tue, 12 Oct 2021 17:45:20 +0000</pubDate>
      <link>https://dev.to/marinsborg/learn-programming-from-absolute-zero-amj</link>
      <guid>https://dev.to/marinsborg/learn-programming-from-absolute-zero-amj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;It is 2021 and there are so many people working as programmers. If you want to be part of that world, you need to know the programming basics. &lt;/p&gt;

&lt;p&gt;Why is this post better than most of the other posts or video courses on the internet? And also how can this be a post about programming when there is not any programming language in it? &lt;/p&gt;

&lt;p&gt;Well, there is a difference between learning to program and learning some programming language. You could 'learn' two programming languages and there is a chance that you would still not know how to program.&lt;/p&gt;

&lt;p&gt;Learning a programming language is the same as learning a foreign language. Learning to program is like learning to think. When people are born they have the ability to think. That ability naturally gets better and better with time. That means most people would react in the same way in the same situation no matter where are they from. For example, if they see an accident on the road, they would call an ambulance. The only difference is that they would use their own language to describe the accident. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The ability to think is not bounded or dictated by some language&lt;/strong&gt;. If you learn a new language, your ability to think would not change at all. The same thing is with programming. Programming concepts are independent of programming languages.&lt;/p&gt;

&lt;p&gt;In this post, I will teach you programming concepts that will help you learn any programming language. Learning this way is much faster and you are not distracted by the syntax of the programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-think-like-a-programmer"&gt;
  &lt;/a&gt;
  How to think like a programmer?
&lt;/h2&gt;

&lt;p&gt;This is a question that is asked by many people who wants to start with programming. And to answer it straight away - you need to use an &lt;strong&gt;algorithmic approach&lt;/strong&gt; to solving problems. What does that mean exactly? I will explain it in this chapter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Computer_programming"&gt;Computer programming&lt;/a&gt; is the process of designing and building an executable computer program. A computer program is a &lt;strong&gt;collection of instructions&lt;/strong&gt; that can be executed by a computer to perform a specific task. &lt;/p&gt;

&lt;p&gt;In layman's terms, programming is just telling a computer what it needs to do. To describe to a computer what it needs to do, programmers use various programming languages. &lt;/p&gt;

&lt;p&gt;Now, I would require you to take a pen and paper or just open your favorite text editor and write down all steps you need to do to make a bowl of cereals. I will do the same thing, but I will do it in a way that is similar to describing it to a computer. After you are done you can compare yours and my result:&lt;br&gt;

  My result
  &lt;ul&gt;
    &lt;li&gt;go to the fridge and open its door&lt;/li&gt;
    &lt;li&gt;take out a bottle of milk and put it on the table&lt;/li&gt;
    &lt;li&gt;close the fridge door&lt;/li&gt;
    &lt;li&gt;go to a cupboard (or cabinet) and open its door&lt;/li&gt;
    &lt;li&gt;take out a cereal box and bowl and put those to the table, next to milk (this step depends on where you are keeping bowls and cereals)&lt;/li&gt;
    &lt;li&gt;close the cupboard door&lt;/li&gt;
    &lt;li&gt;go to the drawer with spoons and open it&lt;/li&gt;
    &lt;li&gt;take one spoon and close the drawer&lt;/li&gt;
    &lt;li&gt;go to the table, put the spoon next to a bowl&lt;/li&gt;
    &lt;li&gt;grab cereal box and take the plastic bag out of it (let's assume that cereals are inside a plastic bag)&lt;/li&gt;
    &lt;li&gt;pour cereal out of the plastic bag into a bowl until the bowl is half-full or one-third full&lt;/li&gt;
    &lt;li&gt;return the plastic bag to the cereal box (or throw it away if it is empty)&lt;/li&gt;
    &lt;li&gt;grab a bottle of milk and open it&lt;/li&gt;
    &lt;li&gt;pour milk over the cereal that is inside the bowl until the bowl is half full&lt;/li&gt;
    &lt;li&gt;close the bottle of milk and put it on the table&lt;/li&gt;
  &lt;/ul&gt;




&lt;br&gt;
And this is it, breakfast is ready. &lt;/p&gt;

&lt;p&gt;This is how programmers think. You can see that it is not anything complicated and that everybody can do that. In the steps above there are some extra cases that I left out for simplicity of demonstration like what if milk is not in the fridge, what if you run out of milk or cereal, what if you don't have any clean spoon or bowls, what if you dropped and broke a bowl, etc. &lt;/p&gt;

&lt;p&gt;But you got the idea. And in the following video, you will see what happens if you are not specific and detailed when you are writing instructions (or code).&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/cDA3_5982h8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This is how programming works most of the time. You know what you have to do, you write code for that, and then you test does it work what it needs to do. If not, then you know that you did something wrong. You change your code and try again until you get the right solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#algorithm"&gt;
  &lt;/a&gt;
  Algorithm
&lt;/h2&gt;

&lt;p&gt;In this chapter, I will explain things in a formal way. &lt;/p&gt;

&lt;p&gt;An &lt;a href="https://www.verywellmind.com/what-is-an-algorithm-2794807"&gt;algorithm&lt;/a&gt; is a defined set of step-by-step procedures that provides the correct answer to a particular problem. &lt;/p&gt;

&lt;p&gt;The algorithm needs to satisfy the following conditions to be valid:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;same inputs always need to produce the same output&lt;/li&gt;
&lt;li&gt;must be unambiguous meaning that is explicitly defined and only one interpretation is possible&lt;/li&gt;
&lt;li&gt;must be finite meaning that it needs to be done in finite time and use finite space&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best example of an algorithm that you saw in your life is a meal recipe. You know how long it will take to cook that meal, what groceries you need, and in what order you need to prepar them. And if you follow that recipe twice and make the meal in the exact same way both times you will get the same meal.&lt;/p&gt;

&lt;p&gt;To solve tasks with programming, the first thing we need to do is to devise an algorithm. When you are doing that, it is a good idea to write it down. There are two ways to write an algorithm - with flowchart and with pseudocode.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flowchart"&gt;
  &lt;/a&gt;
  Flowchart
&lt;/h3&gt;

&lt;p&gt;A &lt;a href="https://en.wikipedia.org/wiki/Flowchart"&gt;flowchart&lt;/a&gt; is a type of diagram that represents a workflow or process. A flowchart can also be defined as a diagrammatic representation of an algorithm, a step-by-step approach to solving a task. &lt;/p&gt;

&lt;p&gt;Each flowchart consists of its building blocks. To understand a flowchart, you first need to know what each building block means. I created this simple table so you can always return here until you learn them all. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--70jVY1zT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhgcg6q9lqxfavrztok9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--70jVY1zT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhgcg6q9lqxfavrztok9.jpg" alt="Flowchart table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, there are not a lot of them. Some other exists but they are not important right now. I will show you how to solve tasks using only these symbols. Let's start with examples.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sequence"&gt;
  &lt;/a&gt;
  Sequence
&lt;/h3&gt;

&lt;p&gt;Instructions in programs are executed in the sequence in which they are written. Let's create a flowchart for a simple task in which the user will input two numbers and the program will print out a sum of those two numbers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t_k4iVeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efbddieinn5fjxbjs8md.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t_k4iVeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efbddieinn5fjxbjs8md.jpg" alt="Sequence diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#branching"&gt;
  &lt;/a&gt;
  Branching
&lt;/h3&gt;

&lt;p&gt;If some part of code in the algorithm we need to execute only in case if some condition is fulfilled then we need to use branching. With branching, we can split the code into two or more paths. To show an example of branching let's create a flowchart for a program that takes the user's input which is a number and prints "Number is positive" or "Number is negative".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hOzA6aCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9p8ze21w8058xhqyzuiw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hOzA6aCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9p8ze21w8058xhqyzuiw.jpg" alt="Branching diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loops"&gt;
  &lt;/a&gt;
  Loops
&lt;/h3&gt;

&lt;p&gt;Sometimes in code, we need to do the same thing several times. We always have two choices. One is to write the same code several times and the other is to use a loop. The problem with writing the same code several times is that is it not clean and it is time-consuming. That is why we should use loops.&lt;/p&gt;

&lt;p&gt;In computer programming, a loop is a sequence of instructions that is continually repeated until a certain condition is reached. Most of the time we write a loop with some kind of a counter so the loop knows how many times it needs to execute the same code and when to stop. Let's create a flowchart for a program that takes a number as the user's input and prints all (whole) numbers between 0 and that number.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PK3yFXUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6h1rra9prbtpy3oanv29.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PK3yFXUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6h1rra9prbtpy3oanv29.jpg" alt="Loops"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the loop repeats three steps: checking if variable A is lower than variable Counter, print value of variable Counter, and increase the value of variable Counter by one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now try to solve this task by yourself:&lt;/strong&gt; Make a program that takes the user's input and check if it is number 0. If it is not, then print the square of that number and if it is 0 then finish the program. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#variables"&gt;
  &lt;/a&gt;
  Variables
&lt;/h3&gt;

&lt;p&gt;In previous tasks I always mentioned variables but I never explained what it is. Variables are locations in memory that have some name and in which we save data from the input. The value of each variable can be changed during program execution. To access the value of a variable we only need to write its name. &lt;/p&gt;

&lt;p&gt;Each variable has a name, a value, and a type. I will talk about data types a bit later. To assign value to a variable we need to write the name of the variable then equality sign '=' and then the value.&lt;/p&gt;

&lt;p&gt;For example: &lt;/p&gt;

&lt;p&gt;To assign a value 10 to a variable with the name 'age' we just need to write&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;age = 10&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;If we want to change the value of the variable 'age' we can do it in the same way&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;age = 30&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
 That is called re-assigning.&lt;/p&gt;

&lt;p&gt;It is always a good idea to name variables in a descriptive way instead of using just one letter like 'A' or 'x'.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#data-types"&gt;
  &lt;/a&gt;
  Data types
&lt;/h3&gt;

&lt;p&gt;In computer science and computer programming, a &lt;a href="https://en.wikipedia.org/wiki/Data_type"&gt;data type&lt;/a&gt; or simply type is an attribute of data that tells the computer how the programmer intends to use the data. I will not bother you with the details, you just need to remember these five common data types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integer (int) - this data type is used for whole numbers. For example int age = 20 or int size = 10&lt;/li&gt;
&lt;li&gt;String - this data type is used for text or sequence of characters. For example string name = "John Doe" or string sentence = "Today is a sunny day." Usually, a string is always surrounded with quotation marks&lt;/li&gt;
&lt;li&gt;Character (char) - this data type is used for a single letter. char letter = 'a'&lt;/li&gt;
&lt;li&gt;Float - this data type is used for numbers that contain a decimal point. For example float number = 3.14&lt;/li&gt;
&lt;li&gt;Boolean (bool) - this data type is used for True or False only ( yes or no, 0 or 1). For example bool flag = True&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I mentioned before - Each variable has a name, a value, and a type. When I write&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;int age = 10&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;int is the type of the variable, age is the name of the variable, and 10 is the value of that variable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arithmetic-operators"&gt;
  &lt;/a&gt;
  Arithmetic operators
&lt;/h3&gt;

&lt;p&gt;In programming, you can use arithmetic operators between variables or some concrete value. Addition, subtraction, multiplication are the same as in math and division is a bit different.&lt;/p&gt;

&lt;p&gt;For example, you can write this:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sum = a + b -&amp;gt; this will save the sum of values a and b into variable sum&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;c = d - 7 -&amp;gt; this will save the result of subtraction to variable c&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;result = 15 * 3 -&amp;gt; this will save 45 in variable result&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;There are three 'types' of division:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;x = a/b -&amp;gt; this is real division&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;y = 13 DIV 5 -&amp;gt; this is integer division and it will save 2 in variable y&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;z = 13 MOD 5 -&amp;gt; this is remainder and it will save 3 in variable z&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#relational-operators"&gt;
  &lt;/a&gt;
  Relational operators
&lt;/h3&gt;

&lt;p&gt;In computer science, a &lt;a href="https://en.wikipedia.org/wiki/Relational_operator"&gt;relational operator&lt;/a&gt; is a programming language construct or operator that tests or defines some kind of relation between two entities. These include numerical equality (e.g., 5 = 5) and inequalities (e.g., 4 ≥ 3).&lt;/p&gt;

&lt;p&gt;The result of the evaluation is either true or false. Relational operators are used for branching which I explained above.  &lt;/p&gt;

&lt;p&gt;Operators are: equal to (==), not equal to (≠), greater than (&amp;gt;), less than (&amp;lt;), greater than or equal to (≥), less than or equal to (≤). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boolean-operations"&gt;
  &lt;/a&gt;
  Boolean operations
&lt;/h3&gt;

&lt;p&gt;Boolean operations come from &lt;a href="https://en.wikipedia.org/wiki/Boolean_algebra"&gt;Boolean algebra&lt;/a&gt; in which which the values of the variables are either true or false (1 or 0). I don't want to bother you much with Boolean algebra but there are three main operations you need to know about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AND - conjunction - the result of this operation is true only when both conditions are true, otherwise false&lt;/li&gt;
&lt;li&gt;OR - disjunction - the result of this operation is true when either of the conditions is true&lt;/li&gt;
&lt;li&gt;NOT - negation - this operation inverts the value of the condition. If the condition is true then negation will result in false and vice versa.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Boolean operations are also mostly used for branching and can be combined with relational operators. For example, if you have a task in which you need to check if the number is lower than 50 and it is not 7 then you would do that in a flowchart like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRInKPkb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yi1e6j8w1mfp3p21itv9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRInKPkb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yi1e6j8w1mfp3p21itv9.jpg" alt="Branching operator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this is it. If you have understood everything so far &lt;strong&gt;you can say that now YOU can think like a programmer&lt;/strong&gt;. This is the bare minimum you need to know to start with programming. This is the foundation on which you build more and more knowledge. &lt;/p&gt;

&lt;p&gt;You might notice that we did not start with any programming language. It is because everything above can apply to most programming languages. Now when you understand the foundation you can easily start with any programming language. &lt;/p&gt;

&lt;p&gt;If you do not understand some part or you need extra explanation you can always search on Google or you can ask me on &lt;a href="https://www.reddit.com/r/marinsborg/"&gt;Reddit&lt;/a&gt; or &lt;a href="https://twitter.com/marinsborg"&gt;Twitter&lt;/a&gt; - I am going to help you as soon as I can.&lt;/p&gt;

&lt;p&gt;I will give you some tasks to practice, something like homework. I will publish solutions and explanations to those tasks on Reddit in near future. Follow me on Twitter for updates.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#homework-tasks"&gt;
  &lt;/a&gt;
  Homework tasks
&lt;/h3&gt;

&lt;p&gt;To solve these tasks you will use the knowledge from above. For each task, you need to draw a flowchart. You can draw flowcharts online on &lt;a href="https://app.diagrams.net/"&gt;diagrams.net&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a program that allows to user to input three numbers and print the product of that three numbers.&lt;/li&gt;
&lt;li&gt;Create a program that allows to user to input a number. Print if that number is odd or even. Hint - you need to use the remainder operator.&lt;/li&gt;
&lt;li&gt;Create a program that allows to user to input a number. Multiply that number by 2 and print it out. Repeat multiplication and printing until the result of the multiplication is not larger than 1000.&lt;/li&gt;
&lt;li&gt;Create a program that prints all numbers between 1 and 100 that are not divisible by 7 and are divisible by 5.&lt;/li&gt;
&lt;li&gt;Create a program that allows to user to input a number. If the number is 0, end the program and print "The end". Otherwise, multiply that number by itself and check if that new number is larger than 1000. If yes then print "Extra large number". If the number is larger than 500 then print "Large number", otherwise print "Small number"&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h2&gt;

&lt;p&gt;Once you are done with the practice tasks above you might ask what are the next thing to do or learn. It is obvious you can't do much with just a knowledge of drawing flowcharts. &lt;/p&gt;

&lt;p&gt;Now you can select one programming language and learn its syntax. I would recommend learning Python or JavaScript. Both languages are easy to set up on your computer and syntax is straightforward. For know, if you are at this stage of programming experience, I would recommend you to pick either Python or JavaScript and not C#, Java, or any object-oriented programming language. &lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Related post:&lt;/strong&gt; &lt;a href="https://marinsborg.com/2021/10/05/first-programming-language.html"&gt;What programming language to learn first?&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you want to learn JavaScript and explore web development with it, you can start with &lt;a href="https://www.theodinproject.com/paths/foundations/courses/foundations"&gt;The Odin Project&lt;/a&gt;. It is a website that will walk you through the installation of proper tools, explain how the web works, how to use git and there are basics in HTML, CSS, and JavaScript. If you like to watch videos you can find many good JavaScript tutorials on YouTube.&lt;/p&gt;

&lt;p&gt;If you want to learn Python which is a good programming language for multiple stuff you can follow this book - &lt;a href="https://automatetheboringstuff.com/#toc"&gt;Automate the boring stuff with Python.&lt;/a&gt; It starts with Python basics and progresses into some real-world problems that are easily solved with Python. If you don't like it, you can always look for videos on YouTube. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this post, I explained to you the fundamentals that you need to know to start with programming. These fundamentals are applicable to most programming languages and now you need to pick one and learn its syntax.&lt;/p&gt;

&lt;p&gt;Programming is not hard as it might seem. You need to be patient with yourself, invest some time and effort in understanding the basics. &lt;/p&gt;

&lt;p&gt;I just want to point out the importance of starting with easier tasks and then progressing towards some bigger project you might want to build. You can not learn some foreign language over the night but you will get better and better with it over time - it is the same with programming.&lt;/p&gt;

&lt;p&gt;When you learn the syntax of some programming language try to solve tasks from the homework chapter with that programming language. &lt;/p&gt;

&lt;p&gt;Like I said if you have any questions or just want to see solutions to homework tasks follow me on &lt;a href="https://twitter.com/marinsborg"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.reddit.com/r/marinsborg/"&gt;Reddit&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>learning</category>
      <category>programming</category>
    </item>
    <item>
      <title>APIs Are The Prefabrication Of Software</title>
      <author>Micah Zayner</author>
      <pubDate>Tue, 12 Oct 2021 17:31:13 +0000</pubDate>
      <link>https://dev.to/courier/apis-are-the-prefabrication-of-software-3f6g</link>
      <guid>https://dev.to/courier/apis-are-the-prefabrication-of-software-3f6g</guid>
      <description>&lt;p&gt;Whether it’s for building a company, monitoring the news, or even making a grocery list, software penetrates every part of the modern western lifestyle. The demand for software far exceeds what developers (and the tech industry as a whole) are capable of supplying from scratch. In order to keep pace with demand, our industry has been increasingly shifting towards a ‘prefabrication’ model of software development via the utilization of third party APIs. While this trend has been in the making for 10 to 15 years already, the market is poised for continuous aggressive change in the coming years as well. &lt;/p&gt;

&lt;p&gt;We can say this with confidence because history tells us so. At the turn of the century, when large-scale construction was beginning to become common, constructing an office building or factory required bringing together a large group of expert craftsmen at a jobsite. Expert carpenters were needed to build the doors and framing, expert glass blowers for the windows, expert masons to cut and lay the stone, blacksmiths to create the steel structure, and so on. As the 20th century progressed, and demand for construction skyrocketed, various forms of prefabrication were developed in order to make construction faster, cheaper, and more accessible. For high-end, custom buildings, the prefabricated parts components could be limited to the windows, doors, and HVAC system while at the other end of the spectrum entire buildings can be erected in days out of completely prefabricated components. In fact, McDonalds has been known to complete a building in mere weeks this way.&lt;/p&gt;

&lt;p&gt;The evolution of software development has followed a similar trajectory, with APIs serving as the prefabricated software that companies are leaning on to build software faster and more cheaply than ever before. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-apis-came-to-be"&gt;
  &lt;/a&gt;
  How APIs Came To Be
&lt;/h2&gt;

&lt;p&gt;In many ways, Amazon pioneered this ‘prefabrication’ mode for software developers when they &lt;a href="https://techcrunch.com/2016/07/02/andy-jassys-brief-history-of-the-genesis-of-aws/?guccounter=1&amp;amp;guce_referrer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8&amp;amp;guce_referrer_sig=AQAAAKjTagbGmqb5tALtmO9uJRDw6CvoMgqmADXnDo95xyGasEsw6TZalE5GDoqfu0uJnZRW10rlTKH6cOUiEO1iWdivlJG7I4k_NM4MXGy90xgia38Ug7dpfG2TALpGZbEVHe1SVVSy5P2xpLVhbPp3gjI7fHW8HWIssqvhzGffkGp2#:~:text=AWS%20was%20first%20to%20market,share%2C%20at%20least%20for%20now."&gt;released Amazon Web Services&lt;/a&gt; in 2006. By making Amazon’s excess compute resources available to other software companies to use in the form of APIs, the capital and expertise needed to build a software company was reduced dramatically. Do you want to spend your technical resources trying to scale and manage infrastructure better than Amazon? For the vast majority of companies the answer is no, they’d rather spend those resources focusing on the more specialized parts of their software, and that’s why AWS generated $46 billion in revenue last year. &lt;/p&gt;

&lt;p&gt;Since AWS, hundreds of other API-as-a-service companies have emerged to help other software companies build faster and cheaper. Twilio came up for digital communication. Stripe was used for payments. Shopify was available for e-commerce. Okta became important for user authentication. Just these four companies represent over $350 billion in enterprise value and have laid a lot of the groundwork for this industry, but it’s still very early in this movement. There are still many parts of the software stack that have yet to be ‘prefabricated’ and millions of hours of development are still spent on building the same functionality over and over again when it would be far more efficient and lead to more innovation if those hours were spent on building unique value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-vs-buy-has-become-an-important-decision-for-developers"&gt;
  &lt;/a&gt;
  Build Vs. Buy Has Become An Important Decision For Developers
&lt;/h2&gt;

&lt;p&gt;The rise of APIs-as-a-service is increasing both the prevalence and importance of the ‘build vs buy’ decision within engineering teams. Should we roll our own user authentication service or buy Auth0? Should we roll our own payments platform or buy Stripe? As my colleague Tejas controversially argued in &lt;a href="https://www.courier.com/blog/the-three-things-to-never-build-in-your-app"&gt;his post&lt;/a&gt;, user authentication, payments, and notifications are three things that you should never build yourself. While many people did not agree with that particular thesis, the trend of engineering orgs evaluating API solutions in order to get their product to market faster is certainly growing.&lt;/p&gt;

&lt;p&gt;What this means for engineers is that having the ability to effectively evaluate APIs and run a cost benefit analysis as opposed to creating a custom solution is becoming increasingly important. As a company that builds and sells an API, we see it all the time here at Courier. A software company, typically a medium to large startup, begins to run into some pain points around sending and managing product notifications. A decision is made to find a new notification service that meets their needs and tap a senior engineer to decide how this problem should be solved. He or she typically evaluates using Courier rather than rolling out a custom solution and then makes a case for which solution they think is a better fit to their team. &lt;/p&gt;

&lt;p&gt;Having a good understanding of the currently available products and functionality offer, being able to effectively estimate the total cost of ownership for both an API solution as well as a homegrowth solution, and being able to effectively map out the integration strategy for API  products are all skill sets that are becoming ever more valuable in both developers and engineering leaders.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-developer-as-artist"&gt;
  &lt;/a&gt;
  The Developer As Artist
&lt;/h2&gt;

&lt;p&gt;As APIs handle more and more of the monotonous and undifferentiated parts of the software stack, developers' time is being freed to be spent creating new, unique, and highly valuable product experiences. In the past several years we’ve seen brand new software startups take on challenges as diverse and complex as automating and streamlining the mortgage application process, building marketplaces for pretty much any good or service imaginable, democratizing the ownership of publicly traded stock, and much more. &lt;/p&gt;

&lt;p&gt;As the proliferation of APIs continues, software development will be able to focus less on solving low level systems and infrastructure challenges and more on the creative side of product and customer experience. Of course, there will always be a place for the engineers who truly want to dig into systems challenges (someone does have to build these APIs, after all), but the engineer who is adept at leveraging APIs in order to deliver a more differentiated product more quickly will become increasingly valuable and sought after.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-is-only-the-beginning"&gt;
  &lt;/a&gt;
  This Is Only The Beginning
&lt;/h2&gt;

&lt;p&gt;The prefabrication of software via APIs is the next big wave of disruption in the software industry, and while it has already arrived, we’re only in the beginning phases. There are still hundreds, maybe thousands, of technical challenges that are repeatedly solved across nearly every software company or vertical that could be successfully prefabricated via an API. As slower moving industries such as insurance, healthcare, education, and  finance become increasingly digital, additional API services will emerge to serve those industries. As digital regulations around privacy and security continue to mature, we’ll see more APIs focused at helping with compliance. The startup engineers of the future will either be building APIs to help other companies move faster or leveraging those APIs to take their own product to market.&lt;/p&gt;

</description>
      <category>api</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>startup</category>
    </item>
  </channel>
</rss>
