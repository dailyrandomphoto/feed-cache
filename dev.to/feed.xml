<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The world of DOM</title>
      <author>Argen Turatbek</author>
      <pubDate>Mon, 20 Dec 2021 05:19:05 +0000</pubDate>
      <link>https://dev.to/northpolicy/the-world-of-dom-1j71</link>
      <guid>https://dev.to/northpolicy/the-world-of-dom-1j71</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Pre-note: everything that I write here may not be fully correct as it is for my personal learning purposes. Before finding out dev.to, I was purely using paper notes. From now on, I decided to jot down my learning notes from tutorials. As I am still in the process of studying the DOM, the content may keep changing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--59ceQSGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7dc75eve8v8wxqdo9us.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--59ceQSGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7dc75eve8v8wxqdo9us.png" alt="Image description" width="500" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Build A Markdown Editor In Reactjs</title>
      <author>oyedeletemitope</author>
      <pubDate>Mon, 20 Dec 2021 03:52:17 +0000</pubDate>
      <link>https://dev.to/oyedeletemitope/build-a-markdown-editor-in-reactjs-4g0i</link>
      <guid>https://dev.to/oyedeletemitope/build-a-markdown-editor-in-reactjs-4g0i</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;In this tutorial, we'll be building a markdown editor. As we all know that react is one of the most popular frameworks out there so that's what we'll be using, also it's my favorite framework so that's another reason why I'll be using it. We'll also be using a package called &lt;code&gt;remarkable&lt;/code&gt; and also &lt;code&gt;tailwind&lt;/code&gt; cdn. Remarkable library includes a Markdown component that converts Markdown to HTML. It's very simple, nice and easy so let's get started!!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-the-app-and-packages"&gt;
  &lt;/a&gt;
  Installing the app and packages
&lt;/h3&gt;

&lt;p&gt;The first thing we need to do is create our app so let's open up our terminal and navigate to the folder we want to install React and paste this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app react-markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next cd into the just installed folder install &lt;code&gt;remarkable&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;remarkable
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to add tailwind cdn so let's navigate to our &lt;code&gt;public/index.html&lt;/code&gt; and add this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&amp;lt;&lt;span class="nb"&gt;link &lt;/span&gt;&lt;span class="nv"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"stylesheet"&lt;/span&gt; &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.15/tailwind.min.css"&lt;/span&gt; &lt;span class="nv"&gt;referrerpolicy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"no-referrer"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#building-the-markdown"&gt;
  &lt;/a&gt;
  Building the markdown
&lt;/h3&gt;

&lt;p&gt;We need to change some things. so let's head over to our &lt;code&gt;app.js&lt;/code&gt;, delete everything and paste this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Remarkable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;remarkable&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;md&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Remarkable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;p-5 md:max-w-4xl md:mx-auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-gray-900 text-4xl text-center font-bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;markdown&lt;/span&gt; &lt;span class="nx"&gt;editor&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="nx"&gt;htmlFor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;markdown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mt-5 mb-3 block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 
        &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;some&lt;/span&gt; &lt;span class="nx"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;textarea&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;textarea&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;markdown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;10&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;required&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type in some markdown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bg-white p-5 rounded shadow w-full&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/textarea&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/article&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Still in our &lt;code&gt;app.js&lt;/code&gt; the next thing we want to work on is getting the input and displaying it on the output&lt;br&gt;
inside the &lt;code&gt;textarea&lt;/code&gt; let's add a value prop:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means that whatever is typed in our input will be stored in our value prop&lt;br&gt;
we then need to add an &lt;code&gt;onchange&lt;/code&gt; event handler.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next thing we need to do is convert the text to markdown so inside our &lt;code&gt;div&lt;/code&gt; in the output part, add this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;dangerouslySetInnerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;__html&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;md&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or better still replace the &lt;code&gt;div&lt;/code&gt; with this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;dangerouslySetInnerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;__html&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;md&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This &lt;code&gt;render&lt;/code&gt; method is coming from the remarkable package that we imported and initialized&lt;/p&gt;

&lt;p&gt;We want to add background color so let's go back to our &lt;code&gt;index.css&lt;/code&gt; and paste this into our &lt;code&gt;body&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt; &lt;span class="nt"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#68&lt;/span&gt;&lt;span class="nt"&gt;e0e0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll also be pasting at the end of our &lt;code&gt;CSS&lt;/code&gt; codes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt; &lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h4&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h5&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h6&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;36px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;32px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h3&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;28&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;h4&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h6&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;underline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's start up our app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtILxb5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q537iwd74ut8z51boykr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtILxb5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q537iwd74ut8z51boykr.gif" alt="markdown" width="600" height="333"&gt;&lt;/a&gt;&lt;br&gt;
If you have something like that congratulations!!! you just built yourself a markdown editor in React.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;We successfully built a markdown editor in React also using a package called remarkable. we also learned what it is. For those who couldn't get it, here's a &lt;a href="https://github.com/oyedeletemitope/markdown-in-react"&gt;link&lt;/a&gt; to the repo on my Github. Please share if you found this helpful.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to compute the Betweenness Centrality against Nebula Graph</title>
      <author>lisahui</author>
      <pubDate>Mon, 20 Dec 2021 03:48:36 +0000</pubDate>
      <link>https://dev.to/lisahui/how-to-compute-the-betweenness-centrality-against-nebula-graph-3ke2</link>
      <guid>https://dev.to/lisahui/how-to-compute-the-betweenness-centrality-against-nebula-graph-3ke2</guid>
      <description>&lt;p&gt;​Betweenness Centrality (BC for short) reflects the significance of vertices in the entire network. This article will introduce how to compute Betweenness Centrality against Nebula Graph.    &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#relevant-concepts"&gt;
  &lt;/a&gt;
  Relevant Concepts
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Centrality&lt;/strong&gt; represents how central a vertex is in the entire network graph, including Degree Centrality, Closeness Centrality, and Betweenness Centrality, etc. Degree Centrality reflects the popularity of a vertex by counting the number of its incoming and outgoing edges, while Closeness Centrality computes the sum of the length of the shortest paths between a vertex and all other vertices in the graph. Thus, the more central a vertex is, the closer it is to all other vertices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Betweenness Centrality&lt;/strong&gt; counts the number of times a vertex appears on the shortest path between any two other vertices, so as to represent the significance of this vertex to the network connectivity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Betweenness Centrality&lt;/strong&gt; of a vertex is the proportion of the number of paths passing through this vertex in all the shortest paths to the total number of shortest paths.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Computing the Betweenness Centrality of a vertex in a graph can be conducted in a weighted graph or in an unweighted graph.&lt;/strong&gt; For unweighted graphs, Breadth-First Search (BFS for short) is used to find the shortest path, while for weighted graphs, Dijkstra’s algorithm is used.&lt;/p&gt;

&lt;p&gt;The following algorithms are all targeted at undirected graphs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#applicable-scenarios"&gt;
  &lt;/a&gt;
  Applicable Scenarios
&lt;/h2&gt;

&lt;p&gt;Betweenness Centrality reflects the significance of vertices in the entire network by measuring how a vertex bridges all other vertices in a graph or network. As we can see, Vertex C in the following figure acts as an important bridging vertex.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IoCWG1fh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ot1d74lzm97f9a19hmc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IoCWG1fh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ot1d74lzm97f9a19hmc.jpg" alt="Applicable Scenarios" width="200" height="179"&gt;&lt;/a&gt;&lt;br&gt;
Betweenness Centrality can be used to identify&lt;/p&gt;

&lt;p&gt;a. The intermediary entities in anti-fraud scenarios in the field of financial risk control.&lt;/p&gt;

&lt;p&gt;b. Specific disease control genes in the medical field to improve drug targets.&lt;/p&gt;

&lt;p&gt;Betweenness Centrality Algorithm&lt;br&gt;
The Betweenness Centrality of a vertex can be computed as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C_B = \sum_{s{\not=} v {\not=} t \in V} \frac{\sigma_{st}(v)}{\sigma_{st}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 1）&lt;/p&gt;

&lt;p&gt;In this formula,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\sigma_{st}(v)&lt;/code&gt; is the number of shortest paths from Vertex s to Vertex t.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\sigma_{st}&lt;/code&gt; is the number of shortest paths that pass through Vertex v.&lt;/p&gt;

&lt;p&gt;Vertex s and Vertex t are a pair of vertices belonging to the vertex set.&lt;/p&gt;

&lt;p&gt;To make it more convenient, the betweenness of each pair of vertices can be computed as:&lt;br&gt;
&lt;code&gt;\delta_{st}(v) = \frac{\sigma_{st}(v)}{\sigma_{st}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 2）&lt;/p&gt;

&lt;p&gt;So Formula 1 can be replaced by Formula 2, which gives rise to Formula 3 as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C_B(v) = \sum_{s{\not=} v {\not=} t \in V} \delta_{st}(v)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 3）&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-procedure"&gt;
  &lt;/a&gt;
  Solution Procedure
&lt;/h2&gt;

&lt;p&gt;To get the Betweenness Centrality of Vertex v, namely to get &lt;code&gt;$$\frac{&lt;/code&gt;, we need to know whether Vertex v lies on the path from Vertex s to Vertex t.&lt;/p&gt;

&lt;p&gt;(1) To know whether Vertex v lies on the shortest path from Vertex s to Vertex t, use the following formula &lt;code&gt;d_G&lt;/code&gt; represents the shortest path from Vertex s to Vertex t):&lt;/p&gt;

&lt;p&gt;If Vertex v lies on the shortest path from Vertex s to Vertex t, then &lt;code&gt;d_G(s,t) = d_G(s,v) + d_G(v,t)&lt;/code&gt;&lt;br&gt;
is satisfied.&lt;/p&gt;

&lt;p&gt;（Formula 4）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;d_G(s,v)&lt;/code&gt; and &lt;code&gt;d_G(v,t)&lt;/code&gt; are mutually independent. According to the rules of combination, the total number of shortest paths from Vertex s to Vertex t is the product of the number of shortest paths from Vertex s to Vertex t and the number of shortest paths from Vertex s to Vertex t.&lt;/p&gt;

&lt;p&gt;Based on the above two situations, Formula 5 can be inferred:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\sigma_{st}(v) = \begin{cases}&lt;br&gt;
\sigma_{sv} \times \sigma_{vt} &amp;amp;\text{if } d(s,v) + d(v,t) = d(s,t) \&lt;br&gt;
0 &amp;amp;\text{if } other&lt;br&gt;
\end{cases}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 5）&lt;/p&gt;

&lt;p&gt;（2）According to the above formula, we can get the conclusion that the number of shortest paths from Vertex s to Vertex t that pass through Vertex w is the result of &lt;code&gt;\sigma_{st}(w) = \sigma_{sw} \times \sigma_{wt}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;. In the graph, Vertex v is the preceding vertex of Vertex w. Therefore, the formula to count the number of shortest paths from Vertex s to Vertex t passing through Vertex v to Vertex w is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\sigma_{st}(v,{v,w}) = \sigma_{sv} \times \sigma_{wt}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 6）&lt;/p&gt;

&lt;p&gt;Here are two situations, &lt;code&gt;t = w&lt;/code&gt;&lt;br&gt;
and &lt;code&gt;t \not= w&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;a. If &lt;code&gt;t = w&lt;/code&gt;&lt;br&gt;
, then &lt;code&gt;\sigma_{wt}&lt;/code&gt;&lt;br&gt;
will not exist and we can get&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\delta(v,{v,w}) = \frac{\sigma_{sv}}{\sigma_{sw}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 7）&lt;/p&gt;

&lt;p&gt;b. If &lt;code&gt;t \not= w&lt;/code&gt;&lt;br&gt;
, then we can get&lt;br&gt;
&lt;code&gt;\delta(v,{v,w}) = \frac{\sigma_{sw}(v)}{\sigma_{sw}} \times&lt;br&gt;
\frac{\sigma_{st}(w)}{\sigma_{st}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 8）&lt;/p&gt;

&lt;p&gt;(3) So considering the above two situations, we can get&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\delta_s(v) = \sum_{w:v \in P_s(w)}(\frac{\sigma_{sw}(v)}{\sigma_{sw}} + \sum_{t \not= w \in V}\frac{\sigma_{sw}(v)}{\sigma_{sw}} \times \frac{\sigma_{st}(w)}{\sigma_{st}}) \&lt;br&gt;
= \sum_{w:v \in P_s(w)}\frac{\sigma_{sw}(v)}{\sigma_{sw}}(1 + \sum_{t \not= w \in V} \frac{\sigma_{st}(w)}{\sigma_{st}}) \&lt;br&gt;
= \sum_{w:v \in P_s(w)}\frac{\sigma_{sw}(v)}{\sigma_{sw}} (1 + \delta_s(w))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;（Formula 9）&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;w:v \in P_s(w)&lt;/code&gt;&lt;br&gt;
, Vertex v is the predecessor of Vertex w in the path from Vertex s to Vertex w.&lt;/p&gt;

&lt;p&gt;(4) According to the above formula that gets the result of , the algorithm workflow of Betweenness Centrality in unweighted graphs can be given as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OzbjRodr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rr8dw9hsg6b0dz2fugkf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OzbjRodr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rr8dw9hsg6b0dz2fugkf.png" alt="Image description" width="378" height="118"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cN9PsoWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pwg481s5v0e0nb3s24b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cN9PsoWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pwg481s5v0e0nb3s24b.jpg" alt="Image description" width="880" height="1132"&gt;&lt;/a&gt;&lt;br&gt;
For unweighted graphs, follow the above process.&lt;/p&gt;

&lt;p&gt;To compute the Betweenness Centrality in weighted graphs requires Dijkstra’s algorithm, that is, to change the code in the first while loop.&lt;/p&gt;

&lt;p&gt;The Betweenness Centrality against Nebula Graph has achieved the algorithms for both weighted and unweighted graphs. For the code, see &lt;a href="https://github.com/vesoft-inc/nebula-algorithm/blob/master/nebula-algorithm/src/main/scala/com/vesoft/nebula/algorithm/lib/BetweennessCentralityAlgo.scala"&gt;https://github.com/vesoft-inc/nebula-algorithm/blob/master/nebula-algorithm/src/main/scala/com/vesoft/nebula/algorithm/lib/BetweennessCentralityAlgo.scala&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#computation-examples"&gt;
  &lt;/a&gt;
  Computation Examples
&lt;/h2&gt;

&lt;p&gt;Firstly, read the graph data in Nebula Graph to specify the edge data for data reading.&lt;/p&gt;

&lt;p&gt;Secondly, make a topological graph based on the edge data of Nebula Graph and perform centrality computation.&lt;/p&gt;

&lt;p&gt;The graph data read in Nebula Graph can be illustrated in the following unweighted graph:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iasey-VM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujbiqqrfrtkx97rrystd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iasey-VM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujbiqqrfrtkx97rrystd.jpg" alt="Image description" width="600" height="452"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Compute the BC of Vertex 1:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;The vertex pair with the shortest path passing through Vertex 1&lt;/th&gt;
&lt;th&gt;The total number of shortest paths between the vertex pair&lt;/th&gt;
&lt;th&gt;The number of the shortest path passing through Vertex 1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2-4&lt;/td&gt;
&lt;td&gt;3 （2-3-4, 2-5-4, 2-1-4）&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The BC of Vertex 1:&lt;/td&gt;
&lt;td&gt;1/3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Compute the BC of Vertex 2:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;The vertex pair with the shortest path passing through Vertex 2&lt;/th&gt;
&lt;th&gt;The total number of shortest paths between the vertex pair&lt;/th&gt;
&lt;th&gt;The number of the shortest path passing through Vertex 2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1-3&lt;/td&gt;
&lt;td&gt;2 （1-2-3, 1-4-3）&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3-5&lt;/td&gt;
&lt;td&gt;2（3-2-5, 3-4-5）&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The BC of Vertex 2:&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Compute the BC of Vertex 3:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;The vertex pair with the shortest path passing through Vertex 3&lt;/th&gt;
&lt;th&gt;The total number of shortest paths between the vertex pair&lt;/th&gt;
&lt;th&gt;The number of the shortest path passing through Vertex 3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2-4&lt;/td&gt;
&lt;td&gt;3 （2-3-4, 2-5-4, 2-1-4）&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The BC of Vertex 3:&lt;/td&gt;
&lt;td&gt;1/3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Compute the BC of Vertex 4:&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;The vertex pair with the shortest path passing through Vertex 4&lt;/th&gt;
&lt;th&gt;The total number of shortest paths between the vertex pair&lt;/th&gt;
&lt;th&gt;The number of the shortest path passing through Vertex 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1-3&lt;/td&gt;
&lt;td&gt;2 （1-4-3, 1-2-3）&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3-5&lt;/td&gt;
&lt;td&gt;2（3-4-5, 3-2-5)&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The BC of Vertex 4:&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Compute the BC of Vertex 5:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;The vertex pair with the shortest path passing through Vertex 5&lt;/th&gt;
&lt;th&gt;The total number of shortest paths between the vertex pairs&lt;/th&gt;
&lt;th&gt;The number of the shortest path passing through Vertex 5&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2-4&lt;/td&gt;
&lt;td&gt;3 （2-3-4, 2-5-4, 2-1-4）&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The BC of Vertex 5:&lt;/td&gt;
&lt;td&gt;1/3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Therefore, the BC of each vertex is: Vertex 1: 1/3 Vertex 2: 1 Vertex 3: 1/3 Vertex 4: 1 Vertex 5: 1/3&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#result-examples"&gt;
  &lt;/a&gt;
  Result Examples
&lt;/h2&gt;

&lt;p&gt;Data: Read the edge data in the Nebula Graph test, and take srcId, dstId, and rank as the triplet of edges in the topological graph (Source Vertex, Destination Vertex, and Rank).&lt;/p&gt;

&lt;p&gt;(root@nebula) [test]&amp;gt; match (v:node) -[e:relation] -&amp;gt; ()  return e&lt;br&gt;
+------------------------------------+&lt;br&gt;
| e                                  |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "3"-&amp;gt;"4" @1 {col: "f"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "2"-&amp;gt;"3" @2 {col: "d"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "2"-&amp;gt;"5" @4 {col: "e"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "4"-&amp;gt;"5" @2 {col: "g"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "1"-&amp;gt;"5" @1 {col: "a"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "1"-&amp;gt;"2" @3 {col: "b"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
| [:relation "1"-&amp;gt;"4" @5 {col: "c"}] |&lt;br&gt;
+------------------------------------+&lt;br&gt;
Read the edge data in Nebula Graph, set the graph as unweighted, and compute the Betweenness Centrality of each vertex. The results are as follows:&lt;/p&gt;

&lt;p&gt;vid: 4 BC: 1.0&lt;br&gt;
vid: 1 BC: 0.3333333333333333&lt;br&gt;
vid: 3 BC: 0.3333333333333333&lt;br&gt;
vid: 5 BC: 0.3333333333333333&lt;br&gt;
vid: 2 BC: 1.0&lt;br&gt;
Read the edge data of Nebula Graph, set the graph as weighted, and compute the Betweenness Centrality of each vertex. The results are as follows:&lt;/p&gt;

&lt;p&gt;vid: 4 BC: 2.0&lt;br&gt;
vid: 1 BC: 0.5&lt;br&gt;
vid: 3 BC: 1.0&lt;br&gt;
vid: 5 BC: 2.0&lt;br&gt;
vid: 2 BC: 0.0&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;Paper: A Faster Algorithm for Betweenness Centrality&lt;br&gt;
The source code of Python’s NetworkX realizing Betweenness Centrality: &lt;a href="https://github.com/networkx/networkx/blob/master/networkx/algorithms/centrality"&gt;https://github.com/networkx/networkx/blob/master/networkx/algorithms/centrality&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>opensource</category>
      <category>devops</category>
    </item>
    <item>
      <title>All You Need To Know About Using Tables on Appsmith </title>
      <author>uma victor</author>
      <pubDate>Mon, 20 Dec 2021 02:52:14 +0000</pubDate>
      <link>https://dev.to/appsmith/all-you-need-to-know-about-using-tables-on-appsmith-2poi</link>
      <guid>https://dev.to/appsmith/all-you-need-to-know-about-using-tables-on-appsmith-2poi</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Statistical data and database information are often represented using table models. These models might be used to represent large amounts of data sets hence there is a need for customization between table sets to help distinguish them. Finding a suitable application to help develop tables that meet up to these requirements is often times an uphill task. Appsmith is an open-source framework that enables developers to easily build internal tools for applications and add functionality to it. With Appsmith we can also build tables, link them up to an API or database and perform crud applications with it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#goals"&gt;
  &lt;/a&gt;
  Goals
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we will learn how to style tables in Appsmith. We will also learn how&lt;br&gt;
to customize different aspects of our table to change the appearance and how the&lt;br&gt;
table data is displayed. We will apply different styles to different tables to help distinguish them.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-do-we-need-to-style-tables"&gt;
  &lt;/a&gt;
  Why do we need to style tables
&lt;/h2&gt;

&lt;p&gt;In situations where we are building numerous tables on Appsmith, to be able to differentiate these tables we will need to add labels to each table. Alternatively, we can also apply different styles to each individual table ranging from: color-gradients, cell colors, borders and box-shadows. Styling helps to improve the overall appearance of tables and when styles are used to identify specifically stored data, it makes it easier for viewers to pinpoint what they need to see in a table. For example, a table may have a specific cell color for table columns reflecting profit or loss in an account and this could be indicated to make the table easier for general access and understandability in an organization.  We can apply lots of styles ranging from shadows, to text and background colors among others.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-styling-works-in-appsmith"&gt;
  &lt;/a&gt;
  How Styling Works in Appsmith
&lt;/h2&gt;

&lt;p&gt;Appsmith tables provide an ordered form of representing data from a data source in rows and columns.  This table can also be used to view large amounts of data, and the data can be arranged in the form of server-side pagination in which the amount of data displayed is limited per page. Below are a few examples of some tables built with Appsmith:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YhXFtClP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1638266320820_screenshot1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YhXFtClP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1638266320820_screenshot1.png" alt="" width="763" height="620"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XexhZ2eq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1638266428001_screenshot2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XexhZ2eq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1638266428001_screenshot2.png" alt="" width="791" height="631"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Appsmith provides us with a property pane. This panel contains the datasource, rows and columns in the table, and actions that can be carried out on them. Numerous styles which can be applied to produce various results with the  widgets can also be found in the property pane. To get to this style pane, select the widget you wish to style and click on the &lt;code&gt;cog-wheel&lt;/code&gt; icon at the top right. The &lt;code&gt;Style&lt;/code&gt; section is located at the bottom of the menu that pops-up.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zc_s4_8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1637334305363_style%2Bpanel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zc_s4_8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1637334305363_style%2Bpanel.png" alt="style pane" width="367" height="567"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This panel may vary based on which widget is selected. The image above is the &lt;code&gt;Style&lt;/code&gt; panel of the Table widget. Starting from the top,  we have the folliowing options: there’s the &lt;code&gt;Cell Background&lt;/code&gt;, the &lt;code&gt;Text Color&lt;/code&gt; , &lt;code&gt;Font Style&lt;/code&gt;, &lt;code&gt;Text Align&lt;/code&gt; and &lt;code&gt;Vertical Alignment&lt;/code&gt;. We will go over these options in the course of this tutorial and discuss the effects of each of them.&lt;/p&gt;

&lt;p&gt;In these style options there is a Javascript toggle button. Clicking on the &lt;code&gt;JS&lt;/code&gt; toggle button changes the mode of input for the options and lets us enter strings of characters or Javacript for the property we wish to apply. For instance, we can set visibility to none by toggling the &lt;code&gt;Js&lt;/code&gt; toggle for the visible property and entering “false” in the field or entering &lt;code&gt;{{false}}&lt;/code&gt;. The latter is Javascript enclosed in mustache syntax. We will talk more about what mustache syntax is and its usage in the later part of this tutorial. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#styling-the-table"&gt;
  &lt;/a&gt;
  Styling the table
&lt;/h2&gt;

&lt;p&gt;Below, I have a table widget with some data in it. If you select your table, you will get a popup with a gear icon that you can use to edit your table&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oO8ropNO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635343538638_table.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oO8ropNO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635343538638_table.jpg" alt="" width="880" height="437"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clicking on the gear icons opens up a property pane to edit the table. If you scroll down the pane, you will see a section to add styles to the table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3q-0Jx7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635343812209_style%2Bsection.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3q-0Jx7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635343812209_style%2Bsection.jpg" alt="" width="880" height="512"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#cell-background-and-text-color"&gt;
  &lt;/a&gt;
  Cell Background and Text Color
&lt;/h2&gt;

&lt;p&gt;In this section, we will learn about the different styles provided by Appsmith and how they can be applied to produce different results with tables. The first two options in the &lt;code&gt;Styles&lt;/code&gt; section provides us with options to change the color of our table’s background and also our text color.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fAfeKpio--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635343996488_change%2Bcolor.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fAfeKpio--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635343996488_change%2Bcolor.jpg" alt="" width="880" height="333"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above, I have selected a black color for my cell’s background and I’ve also set my text color to white.  Alternatively, you can use a different color other than the ones provided here by entering the Hex code for the color in the property field. An example is a purple color with the Hex code: &lt;code&gt;#ed18cd&lt;/code&gt; . If you are looking for a site where you can pick colors from a palette and get the Hex code you can check out Coolors or you can get the extension for your browser.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#changing-font-size"&gt;
  &lt;/a&gt;
  Changing Font Size
&lt;/h2&gt;

&lt;p&gt;The next option gives us the ability to be able to change the font size of the text in our table. There are different options to choose from with “Heading 1” being the largest font size and “Paragraph 2” being the smallest font size.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BYgggHpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635344346493_text%2Bsize.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BYgggHpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635344346493_text%2Bsize.jpg" alt="" width="880" height="299"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, I have increased the font size for my table by setting my “Text size” property to Heading 1. &lt;/p&gt;

&lt;p&gt;Font Style, Text Align and Vertical Alignment&lt;/p&gt;

&lt;p&gt;With the remaining three options, we can customize the font style and justify our text horizontally and vertically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--efoROIa8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635344693356_rest%2Bof%2Bstyles.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--efoROIa8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1635344693356_rest%2Bof%2Bstyles.jpg" alt="" width="880" height="369"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note that it is possible to add both “bold” and “italics” font style at the same time. The text-align property provides you with options to position your text either at the left, center or right of your cell. In other words, it lets us position our text on the horizontal axis. The following property: Vertical Alignment is used to make adjustments to the vertical position of our text in the table. The first option positions text at the top of their cell, the second positions the text at the center and the last positions the text at the bottom of the cell. &lt;/p&gt;

&lt;p&gt;Also, rather than applying these styles to the entire table, it is possible to target only a particular cell to apply these styles.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-styles-based-on-fulfillment-of-a-condition"&gt;
  &lt;/a&gt;
  Adding Styles Based on Fulfillment of a Condition
&lt;/h2&gt;

&lt;p&gt;Appsmith provides us with a feature where we can provide styles to certain table elements that meet a particular criteria. We can define this criteria using Javascript and also state what styles should be applied. To do this, open the property pane on the column you wish to apply this condition to.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yzLEHnD5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1637422755431_final1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yzLEHnD5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1637422755431_final1.png" alt="column selected" width="432" height="542"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above, I have selected the &lt;code&gt;phone&lt;/code&gt; column. We will add a condition to set the text color for this column. We will check if the value of each row in the phone column is even or odd and assign it a particular color. We can add Javascript to the property pane elements using a syntax called &lt;code&gt;mustache&lt;/code&gt;. This is primarily Javascript code enclosed with two curly-braces &lt;code&gt;{{ }}&lt;/code&gt;.  With this syntax we can add Javascript data or even functions to our table.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  {{currentRow.phone %2 == 0? "red" : "blue"}}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Some examples on how to write Javascript functions can be found in Appsmith Documentation. The above command checks if the row is even, if it is it will be assigned a color red else it will be blue. We can add this to the &lt;code&gt;Text Color&lt;/code&gt; option in your column.  Enable the &lt;code&gt;JS&lt;/code&gt; toggle to be able to write Javascript in the field and add the snippet above.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lyno-Zu9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1637423309366_final2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lyno-Zu9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1637423309366_final2.png" alt="" width="880" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here the fields divisble by two in the &lt;code&gt;phone&lt;/code&gt; columns have a text color of red and the others have a text color of blue. This way, you can apply different styles to your table if certain criteria are met.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-gradient-as-cell-background-color"&gt;
  &lt;/a&gt;
  Adding Gradient as Cell Background Color
&lt;/h2&gt;

&lt;p&gt;Appsmith allows us to add gradients as background color as we would normally add in a &lt;code&gt;CSS Stylesheet&lt;/code&gt;.  Here is an example of a &lt;code&gt;CSS&lt;/code&gt; gradient:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;linear-gradient(90deg, hsla(217, 100%, 50%, 1) 0%, hsla(186, 100%, 69%, 1) 100%)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We can add this in our &lt;code&gt;Background&lt;/code&gt; property:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9KUx2NIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1638197666577_new%2Bgradient.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9KUx2NIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_F708AC5751D7C439F3F81F1F18B8F2CC84DABC4B2F4F54F6380D878B7567D7C3_1638197666577_new%2Bgradient.png" alt="gradient color" width="880" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The resulting color change will take place in the table widget.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-applications-of-appsmith-as-an-internal-tool-builder"&gt;
  &lt;/a&gt;
  Other Applications of Appsmith as an Internal Tool Builder
&lt;/h2&gt;

&lt;p&gt;Appsmith offers lots of functionalities for building a lot of internal tools. With Appsmith, we can build Admin panels, dashboards, workflows and applications. Appsmith provides us with options to either create these internal tools from scratch with UI widgets or, you can customize an existing template to create an internal tool of your choice.&lt;/p&gt;

&lt;p&gt;What’s more? with Appsmith you can supply data from  your database or API to your internal tools. Also, you can add updates and perform CRUD operations right from Appsmith.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article we covered how we can style tables in Appsmith for better visual appearance and to serve as a means from distinguishing them from other tables.&lt;/p&gt;

</description>
      <category>adminpanel</category>
      <category>dashboard</category>
    </item>
    <item>
      <title>Frontend Challenge #9, Base Apparel Component</title>
      <author>JC Smiley</author>
      <pubDate>Mon, 20 Dec 2021 02:27:41 +0000</pubDate>
      <link>https://dev.to/jcsmileyjr/frontend-challenge-9-base-apparel-component-3g68</link>
      <guid>https://dev.to/jcsmileyjr/frontend-challenge-9-base-apparel-component-3g68</guid>
      <description>&lt;p&gt;Follow me as I briefly describe my coding journey to build the Base Apparel component from &lt;a href="https://www.frontendmentor.io/home"&gt;Frontend Mentors&lt;/a&gt;. I’m a firm believer in learning in public, not being perfect, and each day improving by 1%. I welcome feedback from anyone and will update the final project as time allows. Frontend Mentors is a online platform that provide front-end challenges that include professional web designs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The goal is to build this:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--icTtoom8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8e3p1f42sq1v5ymim6k7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--icTtoom8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8e3p1f42sq1v5ymim6k7.jpg" alt="desktop design from Frontend Mentors" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-first-stumbling-block-the-mobile-responsive-layout"&gt;
  &lt;/a&gt;
  Step 1: First Stumbling block, the mobile responsive layout
&lt;/h2&gt;

&lt;p&gt;In my mind, the visual layout can be sectioned into a header, main content, and image areas that are layered differently on the mobile and desktop designs. I needed to use CSS-Grid to move them around based on those two different designs.&lt;/p&gt;

&lt;p&gt;This led to my first stumbling block in that I've forgotten how to use CSS-Grid. I revisited several of my favorite resources, &lt;a href="https://css-tricks.com/"&gt;CSS-Tricks&lt;/a&gt; and &lt;a href="https://cssgrid-generator.netlify.app/"&gt;CSS Generator&lt;/a&gt;, for guidance.  &lt;/p&gt;

&lt;p&gt;While these resources were helpful, a simple spelling error cost me several days of frustrations. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kUWOXHt1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jw7pa09kxxpcov3ecpqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kUWOXHt1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jw7pa09kxxpcov3ecpqm.png" alt="CSS Grid code with error" width="466" height="601"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-lessons-relearned-in-every-project"&gt;
  &lt;/a&gt;
  Step 2: Lessons relearned in every project
&lt;/h2&gt;

&lt;p&gt;I’m ashamed to say but I just can’t remember CSS variables and routine styling for background images. So I’m explicitly posting this here so I can pull up next quicker. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Code block showing CSS Variables&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FAuvWF4l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijiuyyhz9v0a76lh2bgf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FAuvWF4l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijiuyyhz9v0a76lh2bgf.PNG" alt="Block of code demoing CSS Variables" width="513" height="140"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G66BnBkB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/955xfxbxxbho9ykogya7.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G66BnBkB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/955xfxbxxbho9ykogya7.PNG" alt="Block of code demoing CSS Variables" width="342" height="92"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Code block showing CSS style for background images&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VCklIR4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jn0ypdfaao5zoxhgbqud.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VCklIR4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jn0ypdfaao5zoxhgbqud.PNG" alt="Block of code demoing CSS style for background images" width="577" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-styling-the-content-in-the-mobile-layout"&gt;
  &lt;/a&gt;
  Step 3: Styling the content in the mobile layout
&lt;/h2&gt;

&lt;p&gt;While this didn't take a long time, I think I gained some valuable experience. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use CSS Variables to apply consistent colors quickly&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are so many ways to style a header. For this project, I needed it's text uppercase, center align, huge font size, spacing between the letters.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XGo-F01y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4ffi444gcqkh0pq4ihy.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XGo-F01y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4ffi444gcqkh0pq4ihy.PNG" alt="Block of code demoing styling H1 element" width="231" height="167"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-major-pain-in-the-neck-was-an-input-field-with-a-svg-inside-of-it"&gt;
  &lt;/a&gt;
  Step 4: Major pain in the neck was an input field with a SVG inside of it
&lt;/h2&gt;

&lt;p&gt;While this looked simple, my first attempt at using CSS to position the SVG inside the input field failed  miserably. So I burned that code to the ground and started over. This time, I use a div with an input and image inside of it with Flexbox to the rescue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--51RMpK71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cso13tbkidx65d81s61l.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--51RMpK71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cso13tbkidx65d81s61l.PNG" alt="mobile design layout" width="403" height="822"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-5-desktop-responsive-layout-design"&gt;
  &lt;/a&gt;
  Step 5: Desktop responsive layout design
&lt;/h1&gt;

&lt;p&gt;This wasn’t hard but a short grind to make tiny changes to each element’s layout and styled based on the larger designs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DsuMsCOE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhlnup2ft2ojzg2hdb05.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DsuMsCOE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhlnup2ft2ojzg2hdb05.PNG" alt="Desktop design layout" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-6-the-final-task-is-developing-an-active-state-with-javascript"&gt;
  &lt;/a&gt;
  Step 6: The final task is developing an active state with JavaScript
&lt;/h1&gt;

&lt;p&gt;The last task is when a user inputs an incorrect email format into the input field, an error image and message is shown.  I’m sure there are better methods but my default is to  add and remove a “hide” class on an element. I added an additional image within the input field and a label for the message below the input field.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;JavaScript functionality&lt;/em&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bNEzmWA8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2hgtyag8lywipb6ecyy.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bNEzmWA8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2hgtyag8lywipb6ecyy.PNG" alt="Block of code showing the functionality" width="725" height="244"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;HTML layout for error handling&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jhnDNcFe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2u4tyy6izf1spd3csda.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jhnDNcFe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2u4tyy6izf1spd3csda.PNG" alt="Block of code showing the HTML of the error" width="880" height="119"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image of the error results&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pi9Zo6KX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nz0cnxn86gte580v1fy.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pi9Zo6KX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nz0cnxn86gte580v1fy.PNG" alt="Live demo of the error handling" width="575" height="150"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-outcome"&gt;
  &lt;/a&gt;
  Final Outcome
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fmYHKPcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gr0t82tj7udkq4cw9jbm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fmYHKPcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gr0t82tj7udkq4cw9jbm.png" alt="Finished Result" width="880" height="413"&gt;&lt;/a&gt;&lt;br&gt;
You can find the completed code &lt;a href="https://github.com/jcsmileyjr/Base-Apparel-Component"&gt;here&lt;/a&gt; and play with site &lt;a href="https://jcsmileyjr.github.io/Base-Apparel-Component/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-learned"&gt;
  &lt;/a&gt;
  What I learned
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;How to change an HTML input's placeholder color. &lt;/li&gt;
&lt;li&gt;CSS Grid is great for creating dynamic layouts.&lt;/li&gt;
&lt;li&gt;I still don’t understand SVG and how to use them properly.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#resources-used"&gt;
  &lt;/a&gt;
  Resources used
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/"&gt;CSS-Tricks blog post on CSS Grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cssgrid-generator.netlify.app/"&gt;CSS Generator tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/almanac/properties/b/background-image/"&gt;CSS-Tricks blog post on Linear gradients&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/a-complete-guide-to-css-gradients/"&gt;CSS-Tricks blog post on CSS gradients&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/howto/howto_css_placeholder.asp"&gt;w3schools documentation on Input's Placeholders with CSS &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/checkValidity"&gt;Mozilla.org documentation on checking validity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event"&gt;Mozilla.org documentation on creating event listeners&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, let's connect:
&lt;/h3&gt;

&lt;p&gt;Obviously, this isn’t a perfect solution. I couldn't figure out the desktop's background image perfectly and other things.&lt;/p&gt;

&lt;p&gt;Thank you for reading my learning journey and if you have tips, please DM me on &lt;a href="https://twitter.com/JCSmiley4"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/in/jcsmileyjr/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>challenge</category>
      <category>devjournal</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Why companies should support their employees side projects</title>
      <author>Wannabe Entrepreneur 🎙️</author>
      <pubDate>Mon, 20 Dec 2021 02:03:12 +0000</pubDate>
      <link>https://dev.to/wbepodcast/why-companies-should-support-their-employees-side-projects-lm5</link>
      <guid>https://dev.to/wbepodcast/why-companies-should-support-their-employees-side-projects-lm5</guid>
      <description>&lt;h3&gt;
  &lt;a href="#being-a-developer-is-99-brain-work"&gt;
  &lt;/a&gt;
  Being a developer is 99% brain work!
&lt;/h3&gt;

&lt;p&gt;We spend most of our time sited on a chair solving bugs, implementing new features, and scrolling through Twitter...&lt;/p&gt;

&lt;p&gt;We must find ways to explain to our CEOs why we need to add a new node to our K8s cluster and to our POs why we should save extra estimation points for unit tests.&lt;/p&gt;

&lt;p&gt;All of this requires a level of creativity and problem solving that many other professions do not require...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-you-do-after-work"&gt;
  &lt;/a&gt;
  What do you do after work?
&lt;/h3&gt;

&lt;p&gt;After a tiring day of work, we can not wait to arrive home, log in to our personal laptop and work on our side project. We can not get enough!! How many domains have you bought this year?? Have you started a youtube channel yet?&lt;/p&gt;

&lt;p&gt;For us knowing how to code is like having a super power! With only just a laptop we get to transform into reality whatever we can imagine. However, there is a downside to this...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#we-get-bored-very-quickly"&gt;
  &lt;/a&gt;
  We get bored very quickly!!
&lt;/h3&gt;

&lt;p&gt;I dare to say that the two most spoken words that come out from the mouth of a developer are: "coffee" and "bored"!&lt;/p&gt;

&lt;p&gt;It's really hard to keep a coder in a company for more than 5 years because it's difficult to keep them motivated.&lt;/p&gt;

&lt;p&gt;There will be a time when a company's product does not need exciting new features or experimental tech. It just needs better logging...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developers-need-a-chance-to-explore-their-entrepreneurial-side"&gt;
  &lt;/a&gt;
  Developers need a chance to explore their entrepreneurial side
&lt;/h3&gt;

&lt;p&gt;Companies should cultivate a culture of entrepreneurism among their developers. Here are some ideas:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Teach them about the business&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Developers are very creative but lack the business and marketing background. By teaching your devs about the business side of the company and encouraging them to understand more about product building and marketing you are building highly valuable assets for your business&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listen to their ideas&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nothing kills the motivation more than being ignored. I have seen many of my colleagues suggesting brilliant ideas to their bosses that end up being ignored and the result was that my peers stopped trying to contribute and end up leaving...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support their side projects&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Many companies fear that by supporting their employee's side projects they will eventually lose their focus and eventually leave. This is wrong for two main reasons:&lt;/p&gt;

&lt;p&gt;1- Is extremely hard to make a developer's salary from your side projects... XD&lt;/p&gt;

&lt;p&gt;2- Being bored is actually the main reason why many developers end up working less and eventually leaving their jobs...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#virtual-coworking-space-for-entrepreneurs"&gt;
  &lt;/a&gt;
  Virtual co-working space for entrepreneurs
&lt;/h3&gt;

&lt;p&gt;If you are an employer that wants to support their employee's entrepreneurial spirit or a developer that wants to build their side projects with other indie makers have a look into the WBE Space.&lt;/p&gt;

&lt;p&gt;It's an online coworking space where people from all backgrounds work together in their projects and support each other with feedback and tips.&lt;/p&gt;

&lt;p&gt;Funny enough most of our members have a full time job and are happy with it :D&lt;/p&gt;

</description>
      <category>career</category>
      <category>sideprojects</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Changelog #0006  — 🎨 Unified style</title>
      <author>Cláudia Delgado</author>
      <pubDate>Mon, 20 Dec 2021 01:24:31 +0000</pubDate>
      <link>https://dev.to/pie/changelog-0006-unified-style-5dd1</link>
      <guid>https://dev.to/pie/changelog-0006-unified-style-5dd1</guid>
      <description>&lt;p&gt;Another week, another update on our mission to provide the best experience to anyone working with APIs. &lt;a href="https://httpie.io/blog/changelog-0005"&gt;Last week&lt;/a&gt; we launched the new Library feature in preview. While we’re busy building its remaining features (from must-haves to superpowers), &lt;a href="https://github.com/httpie/httpie"&gt;HTTPie for Terminal reached 53K stars on GitHub&lt;/a&gt;, and we’ve managed to ship a few other goodies. Check out what's new 👇&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unified-code-style-across-the-platform"&gt;
  &lt;/a&gt;
  🎨 Unified code style across the platform
&lt;/h2&gt;

&lt;p&gt;We designed the new HTTPie brand with the incredibly talented team at &lt;a href="https://koto.studio"&gt;Koto&lt;/a&gt;. Part of the brand is an extended product palette, which we—as a developer tools company—designed with a beautiful code syntax highlighting in mind.&lt;/p&gt;

&lt;p&gt;Below is a page from our style guide and an example of how it cascades down through a Tailwind CSS config to our design system and to the product:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SU1ODSS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://httpie.io/Blog/changelog-0006/httpie-colors-LXXJREAS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SU1ODSS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://httpie.io/Blog/changelog-0006/httpie-colors-LXXJREAS.png" alt="HTTPie colors" width="880" height="591"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You have been able to see the code style (the — 🥁 — Pie style) in action here on the website as well as in the web and desktop apps for a while. Now we’ve added it to the development version of HTTPie for Terminal as well.&lt;/p&gt;

&lt;p&gt;Once the upcoming HTTPie for Terminal v3.0.0 has been released, you’ll be able to use the new &lt;code&gt;--style=pie-dark&lt;/code&gt; and &lt;code&gt;--style=pie-light&lt;/code&gt; styles. If you switch between dark and light terminal schemes often (and don’t mind trading some legibility for the convenience of not having to specify which Pie theme to use) you can use the universal &lt;code&gt;--style=pie&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This way, you’ll have a consistent experience across all HTTPie apps:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CUvZnnfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://httpie.io/Blog/changelog-0006/pie-theme-6QXLSQ44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CUvZnnfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://httpie.io/Blog/changelog-0006/pie-theme-6QXLSQ44.png" alt="pie-theme" width="880" height="676"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Psst, we’ll be also looking into open-sourcing the Pie theme for use in various code editors.)&lt;/p&gt;

&lt;p&gt;By the way, if you’re a designer and find what and how we’re building interesting, you should check out our &lt;a href="https://httpie.io/jobs"&gt;jobs page&lt;/a&gt; 👀&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-improvements"&gt;
  &lt;/a&gt;
  ✨ Other improvements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can now open a collection in its own tab. Just click one in the library to open it. For now, you can see there a list of its requests. Later on, this tab is where all the collection superpowers will grow.&lt;/li&gt;
&lt;li&gt;You could always copy a request or response. But what if you wanted only to copy its body? Fair enough, now you can: copy all, copy headers, copy body.&lt;/li&gt;
&lt;li&gt;The request body type selectors were easy to miss at the bottom of our panels. Now they're more prominent and open by default when none is selected.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#fixes"&gt;
  &lt;/a&gt;
  🪲 Fixes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Drag &amp;amp; drop (used for tabs and header/parameters rows) now works in the desktop app as well.&lt;/li&gt;
&lt;li&gt;The number of parameters and headers displayed in their tabs incorrectly counted disabled items as well; now, it doesn't.&lt;/li&gt;
&lt;li&gt;The sent request view didn't wrap the start-line. But now, you can include as many parameters as you need, and they'll always be visible in the start-line.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#httpie-for-terminal"&gt;
  &lt;/a&gt;
  HTTPie for Terminal
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://httpie.io/cli"&gt;HTTPie for Terminal&lt;/a&gt; has reached 53K stars on GitHub 🌟🎉 Making it the most popular API tool on GitHub, and a top-100 repository out of 200M+ overall.&lt;/p&gt;

&lt;p&gt;Here’s a summary of this week’s improvements to the &lt;a href="https://github.com/httpie/httpie"&gt;development version&lt;/a&gt;, which will be part of the upcoming v3.0.0 release.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improvements"&gt;
  &lt;/a&gt;
  ✨ Improvements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The already mentioned new Pie &lt;code&gt;--style&lt;/code&gt; options. (&lt;a href="https://github.com/httpie/httpie/pull/1238"&gt;#1238&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Decoding is now up to 30% faster when dealing with large streamed responses. (&lt;a href="https://github.com/httpie/httpie/pull/1243"&gt;#1243&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;In addition to already existing &lt;code&gt;install&lt;/code&gt; and &lt;code&gt;uninstall&lt;/code&gt; commands, the &lt;code&gt;httpie plugins&lt;/code&gt; interface can now also &lt;code&gt;upgrade&lt;/code&gt; existing plugins. (&lt;a href="https://github.com/httpie/httpie/pull/1241"&gt;#1241&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#fixes"&gt;
  &lt;/a&gt;
  🪲 Fixes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Automatic syntax highlighting and formatting now works for complex &lt;code&gt;Content-Type&lt;/code&gt; headers (e.g when a charset is specified). (&lt;a href="https://github.com/httpie/httpie/pull/1244"&gt;#1244&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#happy-testing-and-see-you-next-week"&gt;
  &lt;/a&gt;
  Happy testing, and see you next week!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;💁🏻‍♀️ If you’re not on the private beta yet, you can &lt;a href="https://httpie.io/beta"&gt;join the waitlist here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;👉 You can also follow &lt;a href="https://twitter.com/httpie"&gt;@httpie&lt;/a&gt; and join our &lt;a href="https://httpie.io/discord"&gt;Discord community&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;👩‍💻 We’re looking for new colleagues in &lt;a href="https://httpie.io/jobs"&gt;engineering and design roles&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Originally published on &lt;a href="https://httpie.io/blog/changelog-0006"&gt;HTTPie blog&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Lost Ark Gold Founder’s Pack Introduction</title>
      <author>Egio Auditore</author>
      <pubDate>Mon, 20 Dec 2021 01:14:01 +0000</pubDate>
      <link>https://dev.to/egioauditore/lost-ark-gold-founders-pack-introduction-1l52</link>
      <guid>https://dev.to/egioauditore/lost-ark-gold-founders-pack-introduction-1l52</guid>
      <description>&lt;p&gt;People interested in the upcoming MMOARPG Lost Ark should also want to know some information about Founder’s Pack. This is an item package sold at a clearly marked price, divided into four levels: Bronze, Silver, Gold, and Platinum. Their prices are $14.99, $24.99, $49.99 and $99.99. The level of the package is directly proportional to the reward. If players buy Lost Ark Gold in advance, they will definitely take the lead in Lost Ark earlier than ordinary players.&lt;/p&gt;

&lt;p&gt;Although the rewards provided by Bronze Founder’s Pack and Silver Founder’s Pack look very good, it is not enough to compare with Gold Founder’s Pack and Platinum Founder’s Pack. Take Gold Founder’s Pack as an example. Players can get 4,000 Royal Crystals, Gold Supply Crate, Founder’s Exclusive Avatar and Character Expansion Slot from the pack. Players can get 4 times the Royal Crystals, while technically speaking, they can save these prices between wallets and gold bags.&lt;/p&gt;

&lt;p&gt;The Founder’s Exclusive Avatar is very interesting. If players follow the Korean and Russian versions of Lost Ark, they will know that these avatars or skins can bring them a lot of Lost Ark Gold in the future. If this avatar is still exclusive to the founder and becomes unavailable in the future, it will be a rare item. Although the Character Expansion Slot is very useful, players don’t have to buy it in a hurry. You can always buy it in the future. In addition, players must pay more attention to Lost Ark Characters than to other MMO games.&lt;/p&gt;

&lt;p&gt;Players can purchase the Founder’s Pack that suits them according to their level of interest in Lost Ark. For example, people who like Lost Ark very much can buy Gold Founder’s Pack. As for players who want to know about other Founder’s Pack, they can visit IGGM to find out. And these people should be eager to get some achievements in Lost Ark. From this point of view, it is more necessary to buy Lost Ark Gold in advance at IGGM. Check it now!&lt;/p&gt;

&lt;p&gt;Attached link: &lt;a href="https://www.iggm.com/lost-ark-gold"&gt;https://www.iggm.com/lost-ark-gold&lt;/a&gt;&lt;/p&gt;

</description>
      <category>lostarkgold</category>
      <category>iggm</category>
    </item>
    <item>
      <title>Difference between Redux and Context API</title>
      <author>salman6abbas</author>
      <pubDate>Mon, 20 Dec 2021 01:00:51 +0000</pubDate>
      <link>https://dev.to/salman6abbas/difference-between-redux-and-context-api-12bg</link>
      <guid>https://dev.to/salman6abbas/difference-between-redux-and-context-api-12bg</guid>
      <description>&lt;p&gt;So I was having an interview and I was asked to tell about the difference between redux and React's context api. First of all I was blown like nothing came to my mind and then I was like Redux contains a lot of boiler plate while context is very much simpler. I even went after saying even its cofounder Dan Abramov said he doesn't like using Redux.&lt;br&gt;
Well he insisted like no there's other main difference regarding the scope that you have to tell. Well I gave up and then he told me that redux is global scope while context was components scope. Since then I kind of couldn't get over it. Like if this is the case then learning redux (although I don't like it) is essential as more and more companies are using it. What is your stance on it. Will be very glad to see the responses.&lt;/p&gt;

</description>
      <category>react</category>
    </item>
    <item>
      <title>Setting up an Elm project in 2022</title>
      <author>Lindsay Wardell</author>
      <pubDate>Mon, 20 Dec 2021 00:49:47 +0000</pubDate>
      <link>https://dev.to/lindsaykwardell/setting-up-an-elm-project-in-2022-lj4</link>
      <guid>https://dev.to/lindsaykwardell/setting-up-an-elm-project-in-2022-lj4</guid>
      <description>&lt;p&gt;If you haven't used Elm before, it can be a bit intimidating to get started. A pure functional programming language for building web applications, Elm provides a number of tools for writing Elm apps, including &lt;code&gt;elm reactor&lt;/code&gt; for fast recompiling of specific modules and &lt;code&gt;elm make&lt;/code&gt; for building JS assets. But this workflow can feel a bit lacking if you're coming from a Javascript ecosystem, where hot module reload (HMR), automatic bundling, and integration with CSS and other frontend technologies is common.&lt;/p&gt;

&lt;p&gt;Luckily, there are a number of options for setting up a successful Elm application today. Let's explore what's available for building an Elm application in 2022, including ways to get a better development environment, as well as the tooling surrounding Elm that makes working with the language as delightful as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#elm-the-language"&gt;
  &lt;/a&gt;
  Elm (the language)
&lt;/h2&gt;

&lt;p&gt;You can install the Elm language (and its bundled tooling) &lt;a href="https://www.npmjs.com/package/elm"&gt;from npm&lt;/a&gt;. Installing Elm globally gives you access to a handful of useful tools:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-elm-repl-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;elm repl&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This is the command line repl for Elm. You can use it to execute commands in Elm and see what the result would be.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-elm-init-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;elm init&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This is the command to initialize Elm in a folder. Because Elm has its own ecoystem of tooling and libraries separate from Javascript, it also does not use npm for its package management, and as such does not rely on &lt;code&gt;package.json&lt;/code&gt;. If you want to add Elm to a project (or start a new project), you'll need to run this command. When you do, you'll see a message like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ elm init
Hello! Elm projects always start with an elm.json file. I can create them!

Now you may be wondering, what will be in this file? How do I add Elm files to
my project? How do I see it in the browser? How will my code grow? Do I need
more directories? What about tests? Etc.

Check out &amp;lt;https://elm-lang.org/0.19.1/init&amp;gt; for all the answers!

Knowing all that, would you like me to create an elm.json file now? [Y/n]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is an example of how Elm provides helpful information at every opportunity, as well! The link it provides takes you to documentation on how to structure and scaffold an Elm application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-elm-reactor-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;elm reactor&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Running &lt;code&gt;elm reactor&lt;/code&gt; opens an interactive page for navigating your Elm code and previewing it in the browser. Note that is does not render external Javascript, or any values set in your HTML files; it is only displaying what the output is for a given Elm file. Also, it does not support auto refresh, so you will have to manually refresh your browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sVaEopMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lindsaykwardell.com/blog/elm-reactor.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sVaEopMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lindsaykwardell.com/blog/elm-reactor.png" alt="Elm reactor, showing current files in the src folder, source directories, and dependencies" width="880" height="399"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-elm-install-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;elm install&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;As you may expect, this command installs an Elm dependency in your application. Sometimes you will need to install a dependency that is already a sub dependency, in which case Elm will inform you that it's going to move the dependency up in the chain so that you can import its modules directly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-elm-make-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;elm make&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This command lets you build the output Javascript from your Elm code, so that you can import and initialize it in your application. If you are utilizing a tool like Webpack, Parcel, Rollup, or Vite, this is typically not something you'll need to do (more on bundlers later).&lt;/p&gt;

&lt;p&gt;There are other commands available as well. Feel free to run &lt;code&gt;elm --help&lt;/code&gt; to see all the available commands and options.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#editor"&gt;
  &lt;/a&gt;
  Editor
&lt;/h2&gt;

&lt;p&gt;There are a handful of plugins and extension for different editors, the majority of which can be found on an &lt;a href="https://github.com/elm/editor-plugins"&gt;officially updated list&lt;/a&gt; within the Elm organization on Github. My editor of choice is VS Code, and the &lt;a href="https://marketplace.visualstudio.com/items?itemName=Elmtooling.elm-ls-vscode"&gt;VS Code extension for Elm&lt;/a&gt; is an excellent tool for writing in Elm. It provides details on errors when saving, references to where a particular function or value is utilized, and access to function documentation on hover&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bd8yZ7ge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lindsaykwardell.com/blog/elm-vs-code.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bd8yZ7ge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lindsaykwardell.com/blog/elm-vs-code.png" alt="The Elm tooling extension in VS Code" width="880" height="485"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-formatting"&gt;
  &lt;/a&gt;
  Code Formatting
&lt;/h2&gt;

&lt;p&gt;Unlike Javascript, Elm has an &lt;a href="https://elm-lang.org/docs/style-guide"&gt;official Style Guide&lt;/a&gt; for how Elm code should be structured. In addition, some formatting is built into the language itself, such as requiring indents of four spaces. This removes a major point of contention within teams. In addition, the community has put together a wonderful tool called &lt;a href="https://github.com/avh4/elm-format"&gt;&lt;code&gt;elm-format&lt;/code&gt;&lt;/a&gt;. Similar to Prettier, this utility can be used to ensure that all Elm code matches the official style guide. Unlike Prettier, there is no custom configuration, meaning once again that your team can focus on writing code instead of what kind of quotes to use.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linting"&gt;
  &lt;/a&gt;
  Linting
&lt;/h2&gt;

&lt;p&gt;The Elm community has an unofficial linter (called &lt;a href="https://github.com/jfmengels/elm-review/tree/2.6.1"&gt;&lt;code&gt;elm-review&lt;/code&gt;&lt;/a&gt;), which can be used to check your code for potential bugs or mistakes, or highlight a better way to write Elm. Unlike &lt;code&gt;elm-format&lt;/code&gt; (and more similar to tools like ESLint), &lt;code&gt;elm-review&lt;/code&gt; does not come with any default rules to follow:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;All the rules describing problematic code are written in Elm, and elm-review does not come with any built-in rules; instead users are encouraged to write rules themselves and publish them as Elm packages, for everyone to benefit. Search the package registry to find what's out there!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;The de-facto standard for testing an Elm application is &lt;a href="https://github.com/elm-explorations/test"&gt;&lt;code&gt;elm-test&lt;/code&gt;&lt;/a&gt;. However, as noted in the README:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When people say “elm-test” they usually refer to either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This Elm package for writing tests.&lt;/li&gt;
&lt;li&gt;rtfeldman/node-test-runner – a CLI tool (called elm-test) for running tests defined using this package in the terminal.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Elm package (available on the &lt;a href="https://package.elm-lang.org/packages/elm-explorations/test/latest"&gt;Elm package repository&lt;/a&gt;) contains the functions required to write tests, query HTML, and perform assertions. The syntax should be familiar if you've written unit or fuzz tests in other languages, with &lt;code&gt;describe&lt;/code&gt; blocks and individual &lt;code&gt;test&lt;/code&gt; functions being called.&lt;/p&gt;

&lt;p&gt;To actually run the tests, however, there are currently two options. The first, as noted above, is &lt;a href="https://github.com/rtfeldman/node-test-runner"&gt;&lt;code&gt;node-test-runner&lt;/code&gt;&lt;/a&gt;, which is available from npm at &lt;code&gt;elm-test&lt;/code&gt;. This utility will run the tests as defined in your Elm code, and return the results. There is a second option, &lt;a href="https://github.com/mpizenberg/elm-test-rs"&gt;&lt;code&gt;elm-test-rs&lt;/code&gt;&lt;/a&gt;, which is written in Rust instead of Node. It has a handful of features that &lt;code&gt;node-test-runner&lt;/code&gt; does not have, as well as some downsides (see the Github README for details), but in general both tools work very well for testing Elm code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#development-environment"&gt;
  &lt;/a&gt;
  Development Environment
&lt;/h2&gt;

&lt;p&gt;Now's the fun part - writing our app! Using only the above tools, you would be set to build an Elm application that is properly formatted, tested, and compiled to JS. However, that doesn't help you get it onto the page; you'l still have to create an HTML file, import your Elm code along with any other dependencies you may have, and test it in your "live" environment. Found an error? Time to recompile!&lt;/p&gt;

&lt;p&gt;Needless to say, this can get pretty tedious, not to mention that most Javascript developers today are used to more advanced tooling (such as auto refresh or hot module reload). What can we do in order to set up a better development environment for ourselves?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#elmlive"&gt;
  &lt;/a&gt;
  elm-live
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U88TU67T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/wking-io/elm-live/raw/master/elm-live-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U88TU67T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/wking-io/elm-live/raw/master/elm-live-logo.png" alt="elm-live, a flexible dev server for Elm." width="821" height="327"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First on our list is &lt;a href="https://github.com/wking-io/elm-live"&gt;elm-live&lt;/a&gt;. From their README, elm-live provides:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Hot reloading&lt;/li&gt;
&lt;li&gt;Local SSL&lt;/li&gt;
&lt;li&gt;No reload mode&lt;/li&gt;
&lt;li&gt;No server mode&lt;/li&gt;
&lt;li&gt;and more!&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's a pretty great tool for working with an Elm application, removing the tedious step of constantly rebuilding our application. However, there's still a couple drawbacks with using elm-live. First, it exists as a development environment for Elm, which means that changing our HTML, CSS, or Javascript assets will not trigger anything. Second, if you need any dependencies from npm, elm-live will not compile these for you. You'll still need some sort of bundler for the rest of your assets. elm-live is excellent for projects written primarily in Elm, or if you don't mind running two development environments side by side.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#webpackrollupetc"&gt;
  &lt;/a&gt;
  Webpack/Rollup/etc
&lt;/h3&gt;

&lt;p&gt;If you're a Javascript developer, you may have gotten accustomed with importing arbitrary files into your Javascript code. Want to bring in a &lt;code&gt;.vue&lt;/code&gt; file? Go for it! &lt;code&gt;.svelte&lt;/code&gt;? Sure, why not! Our favorite frameworks typically provide some sort of integration with bundlers so that we can import them directly, without having to compile them first to standard Javascript. Can we do that with Elm?&lt;/p&gt;

&lt;p&gt;It turns out, we can! Elm has pretty good support across compilers/bundlers, so that you can import an Elm file directly into your core JS application - no compile step required! Keep in mind that you will still need to initialize the Elm application in order for that code to do anything, but otherwise you are able to treat it like any other compile-to-JS asset.&lt;/p&gt;

&lt;p&gt;Here's a list of common compiler options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Webpack: &lt;a href="https://github.com/elm-community/elm-webpack-loader"&gt;&lt;code&gt;elm-webpack-loader&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Rollup: &lt;a href="https://github.com/ulisses-alves/rollup-plugin-elm#readme"&gt;&lt;code&gt;rollup-plugin-elm&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Vite: &lt;a href="https://github.com/hmsk/vite-plugin-elm"&gt;&lt;code&gt;vite-plugin-elm&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#a-note-on-parcel"&gt;
  &lt;/a&gt;
  A note on Parcel
&lt;/h3&gt;

&lt;p&gt;Unlike other build tools, Parcel provides &lt;a href="https://parceljs.org/languages/elm"&gt;built-in support for Elm&lt;/a&gt; by default, no plugins required. However, please note that there are some issues when using Parcel 2 with Elm, which are a frequent point of discussion on the Elm Slack channel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-elmtooling-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;elm-tooling&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Great! Now we're able to import our Elm code directly into our existing applications, making the integration that much easier. However, there's still one last thing we can do to improve our environment. One problem we may run into is that the tooling described above needs to be installed locally in order to utilize it, which can lead to more work onboarding developers or getting started with a project.&lt;/p&gt;

&lt;p&gt;There is a tool called &lt;a href="https://elm-tooling.github.io/elm-tooling-cli/"&gt;&lt;code&gt;elm-tooling&lt;/code&gt;&lt;/a&gt; which does all the hard work for us. Rather than having to install the Elm language, &lt;code&gt;elm-format&lt;/code&gt;, and &lt;code&gt;elm-test&lt;/code&gt; (or &lt;code&gt;elm-test-rs&lt;/code&gt;) individually, we can run &lt;code&gt;npx elm-tooling install&lt;/code&gt;, and all of the core tooling can be installed at once, significantly faster than if they were installed individually. This can even be added as a postinstall command in your &lt;code&gt;package.json&lt;/code&gt;, ensuring that Elm and its related tools are available with a single install command. This is extremely useful when setting up your local environment, or during CI build steps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frameworks-and-templates"&gt;
  &lt;/a&gt;
  Frameworks and Templates
&lt;/h2&gt;

&lt;p&gt;All this tooling is great, and an excellent way to get writing Elm code and integrating it into your application. But sometimes it's nice to start from a higher level abstraction, much like React developers often start with Create React App, or Vue developers use the Vue CLI. While there are no official templates or frameworks beyond what we've already talked about, there are a few interesting projects that are worth taking a look at.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#elmspa"&gt;
  &lt;/a&gt;
  elm-spa
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.elm-spa.dev/"&gt;elm-spa&lt;/a&gt; is a great way to start working on a single-page Elm application. Browser navigation and handling multiple pages is something that is a bit more difficult in Elm than in pure Javascript, and as such requires more boilerplate code in order to make it work. elm-spa handles all of the complexities of building an SPA for you, while providing a number of great features for building a modern web application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BPLRIOUt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lindsaykwardell.com/blog/elm-spa-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BPLRIOUt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lindsaykwardell.com/blog/elm-spa-image.png" alt="Build reliable applications with Elm. With elm-spa, you can create production-ready application with one command: npx elm-spa new. No need to configure webpack, gulp, or any other NPM dev tools. This zero-configuration CLI comes with a live-reloading dev server, production-ready build commands, and even a few scaffolding commands for new and existing applications." width="880" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#elmpages"&gt;
  &lt;/a&gt;
  elm-pages
&lt;/h3&gt;

&lt;p&gt;Where elm-spa is targeting single-page applications, &lt;a href="https://elm-pages.com/"&gt;elm-pages&lt;/a&gt; is built for generating static sites. Utilizing Elm's type system, elm-pages's goal is to make handling external data for a static site easy. Conceptually, it's similar to what Gatsby or Gridsome do (provide a typesafe interface to access multiple types of data), but utilizing Elm's strengths rather than adding an additional type system such as GraphQL.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jfAbX3ra--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lindsaykwardell.com/blog/elm-pages-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jfAbX3ra--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lindsaykwardell.com/blog/elm-pages-image.png" alt="Pull in typed Elm data to your pages. Whether your data is coming from markdown files, APIs, a CMS, or all of the above, elm-pages lets you pull in just the data you need for a page. No loading spinners, no Msg or update logic, just define your data and use it in your view." width="880" height="238"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-viteelmtemplate-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;vite-elm-template&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This was a template I created to scratch my own itch. As a Vue developer, I love working with Vite, and really wanted a base template for Vite that I could use to build Elm applications. &lt;a href="https://github.com/lindsaykwardell/vite-elm-template"&gt;&lt;code&gt;vite-elm-template&lt;/code&gt;&lt;/a&gt; is a basic Vite template intended to get you started writing in Elm without having to spend time configuring everything yourself. Unlike elm-pages or elm-spa, it's not a framework of any sort. If you want to bring in single-page application features, or other functionalities, you will have to build those in yourself. That said, it's perfect for getting started with a basic environment.&lt;/p&gt;

&lt;p&gt;As of this writing it includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hot Module Reload of all code in the app (including Elm)&lt;/li&gt;
&lt;li&gt;Tooling installation via &lt;code&gt;elm-tooling&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Includes Elm, &lt;code&gt;elm-format&lt;/code&gt;, &lt;code&gt;elm-json&lt;/code&gt;, and &lt;code&gt;elm-test-rs&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Basic unit test examples&lt;/li&gt;
&lt;li&gt;Github Actions CI for running tests&lt;/li&gt;
&lt;li&gt;Recommends the Elm VS Code extension&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If Vite is something you enjoy working with, I hope you'll check it out! There is also a link in the README to set up a workspace using Gitpod if you want to try things out in a sandbox environment first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope that helps you get started building an Elm application! Elm is an amazing language to learn and work with, and the tooling that exists to support it today makes working with it as delightful an experience as the language itself provides. Above all, I hope you enjoy learning and working with Elm in 2022!&lt;/p&gt;

&lt;p&gt;If you're new to Elm, and would like to learn more about it, check out the &lt;a href="https://guide.elm-lang.org/"&gt;official Elm Guide&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>elm</category>
      <category>spa</category>
      <category>vite</category>
    </item>
    <item>
      <title>There's more than just code in the developer</title>
      <author>Antonio Hernandez</author>
      <pubDate>Mon, 20 Dec 2021 00:49:39 +0000</pubDate>
      <link>https://dev.to/antoniohr/theres-more-than-just-code-in-the-developer-45ed</link>
      <guid>https://dev.to/antoniohr/theres-more-than-just-code-in-the-developer-45ed</guid>
      <description>&lt;p&gt;Hello, I am Antonio, I am 21 years old I was born, grew up and still live in Venezuela, my English is not perfect so I am sorry if there is something written in a bad way (google traslate is helping me :D).&lt;/p&gt;

&lt;p&gt;For my first post I honestly did not want to write something directly technical, first because I am still learning and I do not think I have much to teach for now, however there is something that if I feel that I can contribute here, (I hope I do not skip any rules of the community for writing this post).&lt;/p&gt;

&lt;p&gt;**&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-to-program-is-not-difficult-the-difficult-thing-is-to-program-your-mind-to-develop"&gt;
  &lt;/a&gt;
  Learning to program is not difficult, the difficult thing is to program your mind to develop.
&lt;/h2&gt;

&lt;p&gt;**&lt;/p&gt;

&lt;p&gt;Well, this conclusion is mine, it is not an absolute truth, much less do you have to agree.&lt;/p&gt;

&lt;p&gt;Behind all code there is a story and I do not mean the code but the person who wrote it, it was a person or groups of people from different places, different cultures of different thoughts, of a different life ... but the Chance of fate I prepare each one in their own way to achieve a mission and help others.&lt;/p&gt;

&lt;p&gt;It was not easy for anyone to get that I am sure, in some cases you have to learn another language and learn with few resources and sometimes you will even have to change country to look for an opportunity... However, something that you do not know very well what it is makes you continue with this and this path is beautiful, it is full of uncertainty, ignorance and sometimes disappointment but one thing is certain is that if you stay immobile you will never have a chance at anything.&lt;/p&gt;

&lt;p&gt;I really feel that programming is the most beautiful career, I met her recently and fell in love with her, without understanding her I knew what she wanted, so I am studying every day to learn and at some point, understand her.&lt;/p&gt;

&lt;p&gt;I repeat myself, programming is not difficult, the difficult thing is to understand me, understand what my difficulties are, understand what my shortcomings are, what are my learning methods and above all what is my way of living, because at the end of the day, behind all code there are people, like you and me.&lt;/p&gt;

&lt;p&gt;pd: my next post if it will be something technical programming, I love this website, thanks to all who are here.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>productivity</category>
      <category>programming</category>
      <category>life</category>
    </item>
    <item>
      <title>What is an API?</title>
      <author>Natalie Taktachev</author>
      <pubDate>Sun, 19 Dec 2021 23:43:18 +0000</pubDate>
      <link>https://dev.to/stuxnat/what-is-an-api-1con</link>
      <guid>https://dev.to/stuxnat/what-is-an-api-1con</guid>
      <description>&lt;p&gt;A while back, I wrote a post about creating a Rails API. But what IS an API?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does API mean?&lt;/strong&gt;&lt;br&gt;
API stands for "Application Programming Interface". "API" is often used and heard by many users interacting with computers (even far from programming). API is essentially a tool that allows programs to communicate with each other.  &lt;/p&gt;

&lt;p&gt;Programming interface includes functions, classes, methods, and structures that help one application interact with another. The API contains some "bridges" that allow program A to access data from program B or to some of its capabilities. Thus, programmers can expand the functionality of their product and associate it with other developments.&lt;/p&gt;

&lt;p&gt;The API can only work with a permission of the creators of program A and with the observance of all security measures so that developers wishing to use the API could not get access to confidential information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The main principle of the API and why is it called an interface:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In simple terms, an interface is a "layer" between application A and application B. It contains processes that allow two programs to exchange information and perform functions related to both sides, hiding the "internal structure" of programs. &lt;/p&gt;

&lt;p&gt;This approach allows one to establish interaction between several utilities without thinking about how they work, what program logic drives them and how the transmitted data is processed. Interfaces simplify work for both common users and programmers. The former do not have to think about what it is behind the familiar functions in their gadgets, and developers do not need to study the code of other programmers in order to connect someone else's product to their own.&lt;/p&gt;

&lt;p&gt;This is called encapsulation. By hiding part of the functions for the sake of simplifying the work in general and minimizing areas of the software where one of the developers could make a mistake.&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
