<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>APIs and React</title>
      <author>Zach</author>
      <pubDate>Sat, 04 Sep 2021 04:19:03 +0000</pubDate>
      <link>https://dev.to/zbretz/apis-and-react-iee</link>
      <guid>https://dev.to/zbretz/apis-and-react-iee</guid>
      <description>&lt;p&gt;I used the Google Maps API for one of my two Blue Ocean assignments. To interface with the API I used a library to interface between the two. It allowed me to basically build react components that it then translated for the Maps API.&lt;/p&gt;

&lt;p&gt;The primary reason that I used the library was because I didn't know how to insert the API script tag into the head of the html document. Perhaps I should have just done that - hardcode the tag right into our root index.html page. Perhaps I could have found a way to attach the tag dynamically.&lt;/p&gt;

&lt;p&gt;That's what I'm writing about here.&lt;/p&gt;

&lt;p&gt;So I've done a quick search and it looks like the answer is both A) Very easy to find and B) straightforward to implement.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developers.google.com/maps/documentation/javascript/overview#js_api_loader_package"&gt;This page&lt;/a&gt; of the API describes how to load the javascript API.&lt;/p&gt;

&lt;p&gt;There are three different ways.&lt;/p&gt;

&lt;p&gt;The one I was familiar with, and was circumspect about using -- **Inline Loading((:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt;
    &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&amp;amp;callback=initMap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then there's &lt;strong&gt;Dynamic Loading (Manual)&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// Create the script tag, set the appropriate attributes&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;script&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&amp;amp;callback=initMap&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Attach your callback function to the `window` object&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initMap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// JS API is loaded and available&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Append the 'script' element to 'head'&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's the appending-to-head that I mentioned. I noticed a great passage here relating to &lt;code&gt;async&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;async: Asks the browser to asynchronously download and execute the script. When the script is executed, it will call the function specified using the callback parameter.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This makes async easy to understand. I also remember hearing this about async earlier in my coding education. How we drop .js scripts toward the end of the body when we want them to have reference to DOM elements that have loaded. Wait no, I think what I remember is that the script earlier in the body will gold up any following DOM elements until it loads. So the way I'm remembering and interpreting this passage is that you can use async to prevent that hold-up and allow the script to fire when it's ready without holding up the page render. Cool.&lt;/p&gt;

&lt;p&gt;Finally, there the &lt;strong&gt;Dynamic Loading (Package)&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;googlemaps&lt;/span&gt;&lt;span class="sr"&gt;/js-api-loade&lt;/span&gt;&lt;span class="err"&gt;r
&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Loader&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@googlemaps/js-api-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Loader&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR_API_KEY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;weekly&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;additionalOptions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;map&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;34.397&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;150.644&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This looks super compatible with React. I'm not sure why I didn't apply this style off-the-bat with Blue Ocean. But I did find something that works, so it's no stress. And I have this now too -- even better. That's the thing about coding. There's a million ways to reach your goal and good reasons for for each of them. Sometimes that reason is it's the first one you found, ha. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Vocabulary Building Day7</title>
      <author>vindhya Hegde </author>
      <pubDate>Sat, 04 Sep 2021 04:13:06 +0000</pubDate>
      <link>https://dev.to/vindhyasadanand/vocabulary-building-day7-52ji</link>
      <guid>https://dev.to/vindhyasadanand/vocabulary-building-day7-52ji</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;galvanize&lt;/strong&gt;(verb): to excite or inspire to action&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O8JtVRys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thesaurus.plus/img/synonyms/a171/galvanize.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O8JtVRys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thesaurus.plus/img/synonyms/a171/galvanize.png" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=galvanize&amp;amp;oq=galvanize&amp;amp;aqs=chrome.0.69i59j0i512j0i433i512l2j0i512j69i60l3.4738j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;gregarious&lt;/strong&gt;(adjective) :to be likely to socialize with others&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bxb1EwjB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.wordgenius.com/wordgenius/Word%2Bof%2BThe%2BDay%2BImages/Gregarious.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bxb1EwjB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.wordgenius.com/wordgenius/Word%2Bof%2BThe%2BDay%2BImages/Gregarious.jpg" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=gregarious&amp;amp;oq=gre&amp;amp;aqs=chrome.0.35i39l2j69i60l3j69i65l2j69i60.4802j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;profligate&lt;/strong&gt;(adjective): spending resources recklessly or wastefully&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RF_KM7IP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1200/1%2Ay8zSe7TYOg1QDoQPm8JPNg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RF_KM7IP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1200/1%2Ay8zSe7TYOg1QDoQPm8JPNg.jpeg" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=profligate&amp;amp;oq=profligate&amp;amp;aqs=chrome..69i57j0i433i512j0i512l8.3760j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;parsimonious&lt;/strong&gt;(adjective): extremely frugal; miserly&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3SnkQj3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learnbookme.files.wordpress.com/2016/11/parsimonious.jpg%3Fw%3D640" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3SnkQj3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learnbookme.files.wordpress.com/2016/11/parsimonious.jpg%3Fw%3D640" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=parsimonious&amp;amp;oq=parsimonious&amp;amp;aqs=chrome..69i57j0i433i512j0i512l8.8574j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;amenable&lt;/strong&gt;(adjective): easily persuaded&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_I1Rh3B5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thesaurus.plus/img/synonyms/117/amenable_to.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_I1Rh3B5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thesaurus.plus/img/synonyms/117/amenable_to.png" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=amenable&amp;amp;oq=amenable&amp;amp;aqs=chrome..69i57j0i433i512j0i512l8.8945j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;br&gt;
I hope this helps you if you are preparing for GRE exams.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>gre</category>
      <category>day7</category>
    </item>
    <item>
      <title>My Favourite Library For Providing Logging In &amp; Logging Out With Google Functionalities In My React Apps</title>
      <author>Aya Bouchiha</author>
      <pubDate>Sat, 04 Sep 2021 00:40:53 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/my-favourite-library-for-providing-logging-in-logging-out-with-google-functionalities-in-my-react-apps-50l0</link>
      <guid>https://dev.to/ayabouchiha/my-favourite-library-for-providing-logging-in-logging-out-with-google-functionalities-in-my-react-apps-50l0</guid>
      <description>&lt;p&gt;Hi I'm &lt;a href="//developer.aya.b@gmail.com"&gt;Aya Bouchiha&lt;/a&gt;, I decided to share with you my favorite react library for providing logging in and logging out with google functionalities in my react apps which is &lt;em&gt;react-google-login&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reactgooglelogin"&gt;
  &lt;/a&gt;
  react-google-login
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://anthonyjgrove.github.io/react-google-login/?path=/story/google-login-button--default-button"&gt;demo&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/anthonyjgrove/react-google-login"&gt;github&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  installation
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i react-google-login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add react-google-login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#login-code"&gt;
  &lt;/a&gt;
  Login code
&lt;/h2&gt;

&lt;p&gt;If you don't have a client Id, please check this article: &lt;a href="https://www.balbooa.com/gridbox-documentation/how-to-get-google-client-id-and-client-secret"&gt;how to get google client id and client secret&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;GoogleLogin&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-google-login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleSuccess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;you're logged in successfully!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleFailure&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;something went wrong&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GoogleLogin&lt;/span&gt;
                &lt;span class="c1"&gt;// you client Id&lt;/span&gt;
                &lt;span class="na"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CLIENT_ID&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="na"&gt;buttonText&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Login'&lt;/span&gt;
                &lt;span class="na"&gt;onSuccess&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSuccess&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="na"&gt;onFailure&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleFailure&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="c1"&gt;// for calling onSuccess callback when the page load to keep the user logged in.&lt;/span&gt;
                &lt;span class="na"&gt;isSignedIn&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#logout-code"&gt;
  &lt;/a&gt;
  Logout code
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GoogleLogout&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-google-login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Logout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleLogout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;you're logged out!!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GoogleLogout&lt;/span&gt;
            &lt;span class="na"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CLIENT_ID&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="na"&gt;buttonText&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Logout'&lt;/span&gt;
            &lt;span class="na"&gt;onLogoutSuccess&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleLogout&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;GoogleLogout&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Have a nice day&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Accessing Postgres via REST using pRest</title>
      <author>Elton Minetto</author>
      <pubDate>Fri, 03 Sep 2021 23:17:57 +0000</pubDate>
      <link>https://dev.to/eminetto/accessing-postgres-via-rest-using-prest-4fdk</link>
      <guid>https://dev.to/eminetto/accessing-postgres-via-rest-using-prest-4fdk</guid>
      <description>&lt;p&gt;In this post, I'm going to talk about a handy Open Source tool called pRest.&lt;/p&gt;

&lt;p&gt;With pRest, it is possible to create a RESTFul API to access the contents of a Postgres database in a fast and straightforward way. The project, written in Go, can be found on its &lt;a href="https://prestd.com"&gt;official website&lt;/a&gt; and &lt;a href="https://github.com/prest/prest"&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;According to the &lt;a href="https://docs.prestd.com"&gt;documentation&lt;/a&gt;, there are &lt;a href="https://docs.prestd.com/getting-started/installation/"&gt;several ways&lt;/a&gt; to install pRest. To write this post, I chose to use the Docker installation option. To do this, I created a &lt;code&gt;docker-compose.yml&lt;/code&gt; file with a Postgres image to facilitate testing and the configuration of pRest itself:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: "3"
services:
  postgres:
    image: postgres
    volumes:
      - "./data/postgres:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=prest
      - POSTGRES_DB=prest
      - POSTGRES_PASSWORD=prest
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "prest"]
      interval: 30s
      retries: 3
  prest:
    image: prest/prest:v1
    links:
      - "postgres:postgres"
    environment:
      - PREST_DEBUG=true
      - PREST_AUTH_ENABLED=true
      - PREST_PG_HOST=postgres
      - PREST_PG_USER=prest
      - PREST_PG_PASS=prest
      - PREST_PG_DATABASE=prest
      - PREST_PG_PORT=5432
      - PREST_SSL_MODE=disable
      - PREST_AUTH_ENCRYPT=SHA1
      - PREST_QUERIES_LOCATION=/queries
    volumes:
      - "./queries:/queries"
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;a href="https://docs.prestd.com/configurations/"&gt;documentation&lt;/a&gt;, you can see the options available for customizing the pRest installation.&lt;/p&gt;

&lt;p&gt;After running the command &lt;code&gt;docker-compose up -d&lt;/code&gt;, the next step was to create the essential tables that pRest needs to perform API access control. For this, I executed the commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose &lt;span class="nb"&gt;exec &lt;/span&gt;prest prestd migrate up auth
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this, pRest will create the &lt;code&gt;prest_users&lt;/code&gt; table, which we will feed with the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose &lt;span class="nb"&gt;exec &lt;/span&gt;postgres psql &lt;span class="nt"&gt;-d&lt;/span&gt; prest &lt;span class="nt"&gt;-U&lt;/span&gt; prest &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"CREATE EXTENSION IF NOT EXISTS pgcrypto;"&lt;/span&gt;

docker-compose &lt;span class="nb"&gt;exec &lt;/span&gt;postgres psql &lt;span class="nt"&gt;-d&lt;/span&gt; prest &lt;span class="nt"&gt;-U&lt;/span&gt; prest &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"INSERT INTO prest_users (name, username, password) VALUES ('pREST Full Name', 'prest', ENCODE(DIGEST('prest','sha1'),'hex'))"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the username and password created, the next step was to generate the JWT token we will use in the requests. To do this, we can use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-i&lt;/span&gt; &lt;span class="nt"&gt;-X&lt;/span&gt; POST http://127.0.0.1:3000/auth &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Content-Type: application/json"&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{"username": "prest", "password": "prest"}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result is a JSON with the user data and token:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"user_info"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"pREST Full Name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"username"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prest"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"metadata"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"token"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDQ4MzM4MywianRpIjoiMSIsImlhdCI6MTYzMDQ2MTc4MywiaXNzIjoiMSJ9.KHBaxxSUf_mjlj3EUD1H9oegLXLYWmLlo2LYPbwTCmk"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To perform the tests, I created some tables, as shown in the diagram:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://eltonminetto.dev/images/posts/prest_demo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EDZVlWU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eltonminetto.dev/images/posts/prest_demo.png" alt="prest_demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The commands that create the tables are:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose &lt;span class="nb"&gt;exec &lt;/span&gt;postgres psql &lt;span class="nt"&gt;-d&lt;/span&gt; prest &lt;span class="nt"&gt;-U&lt;/span&gt; prest &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"CREATE TABLE users (id serial PRIMARY KEY,email VARCHAR ( 50 ) UNIQUE NOT NULL,first_name VARCHAR ( 255 ),last_name VARCHAR ( 255 ))"&lt;/span&gt;

docker-compose &lt;span class="nb"&gt;exec &lt;/span&gt;postgres psql &lt;span class="nt"&gt;-d&lt;/span&gt; prest &lt;span class="nt"&gt;-U&lt;/span&gt; prest &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"create table books (id serial PRIMARY KEY,title varchar(255),author varchar(255), pages integer,quantity integer)"&lt;/span&gt;

docker-compose &lt;span class="nb"&gt;exec &lt;/span&gt;postgres psql &lt;span class="nt"&gt;-d&lt;/span&gt; prest &lt;span class="nt"&gt;-U&lt;/span&gt; prest &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"create table books_users (user_id INT NOT NULL,book_id INT NOT NULL, created_at TIMESTAMP, PRIMARY KEY (user_id,book_id),FOREIGN KEY (user_id) REFERENCES users(id), FOREIGN KEY (book_id) REFERENCES books (id))"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the tables created, the next step was to perform operations on them, using the API.&lt;/p&gt;

&lt;p&gt;NOTE: for all the following examples, I'm using the token generated above.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#inserting-records-into-the-books-table"&gt;
  &lt;/a&gt;
  Inserting records into the &lt;em&gt;books&lt;/em&gt; table
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-i&lt;/span&gt; &lt;span class="nt"&gt;-X&lt;/span&gt; POST http://127.0.0.1:3000/prest/public/books &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Accept: application/json"&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDQ4MzM4MywianRpIjoiMSIsImlhdCI6MTYzMDQ2MTc4MywiaXNzIjoiMSJ9.KHBaxxSUf_mjlj3EUD1H9oegLXLYWmLlo2LYPbwTCmk"&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{"title": "Dune", "author": "Frank Herbert", "pages":680, "quantity":100}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the result was the JSON of the created record:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;158&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Dune"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Frank Herbert"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nl"&gt;"pages"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;680&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nl"&gt;"quantity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the following examples, I've inserted a batch of books using a shell script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;for &lt;/span&gt;i &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;1..50&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;do
   &lt;/span&gt;curl &lt;span class="nt"&gt;-i&lt;/span&gt; &lt;span class="nt"&gt;-X&lt;/span&gt; POST http://127.0.0.1:3000/prest/public/books &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Accept: application/json"&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDI2MjU0OSwianRpIjoiMSIsImlhdCI6MTYzMDI0MDk0OSwiaXNzIjoiMSJ9.C_j73eaMlNzOy_jKXBAXr6evmhcqKVlPPotwq5nsK9M"&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Book title &lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;author&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Author &lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;pages&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:666, &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;quantity&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="s2"&gt;}"&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#updating-a-record-in-the-books-table"&gt;
  &lt;/a&gt;
  Updating a record in the &lt;em&gt;books&lt;/em&gt; table
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-i&lt;/span&gt; &lt;span class="nt"&gt;-X&lt;/span&gt; PUT http://127.0.0.1:3000/prest/public/books?id&lt;span class="o"&gt;=&lt;/span&gt;103 &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Accept: application/json"&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDI2MjU0OSwianRpIjoiMSIsImlhdCI6MTYzMDI0MDk0OSwiaXNzIjoiMSJ9.C_j73eaMlNzOy_jKXBAXr6evmhcqKVlPPotwq5nsK9M"&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{"title": "updated title", "author": "updated author"}'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#removing-a-record-from-the-books-table"&gt;
  &lt;/a&gt;
  Removing a record from the &lt;em&gt;books&lt;/em&gt; table
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-i&lt;/span&gt; &lt;span class="nt"&gt;-X&lt;/span&gt; DELETE http://127.0.0.1:3000/prest/public/books?id&lt;span class="o"&gt;=&lt;/span&gt;104 &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Accept: application/json"&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDQ4MzM4MywianRpIjoiMSIsImlhdCI6MTYzMDQ2MTc4MywiaXNzIjoiMSJ9.KHBaxxSUf_mjlj3EUD1H9oegLXLYWmLlo2LYPbwTCmk"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#making-queries-on-the-books-table"&gt;
  &lt;/a&gt;
  Making queries on the &lt;em&gt;books&lt;/em&gt; table
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#select-from-books-where-title-like-title"&gt;
  &lt;/a&gt;
  &lt;em&gt;select * from books where title like %title%&lt;/em&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="s2"&gt;"http://127.0.0.1:3000/prest/public/books?title:tsquery=dune"&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Accept: application/json'&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDQ4MzM4MywianRpIjoiMSIsImlhdCI6MTYzMDQ2MTc4MywiaXNzIjoiMSJ9.KHBaxxSUf_mjlj3EUD1H9oegLXLYWmLlo2LYPbwTCmk'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result is a JSON array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;158&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Dune"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Frank Herbert"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"pages"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;680&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"quantity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#select-from-books-where-title"&gt;
  &lt;/a&gt;
  &lt;em&gt;select * from books where title=?&lt;/em&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
curl &lt;span class="s1"&gt;'http://127.0.0.1:3000/prest/public/books?title=$eq.Dune'&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Accept: application/json'&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDQ4MzM4MywianRpIjoiMSIsImlhdCI6MTYzMDQ2MTc4MywiaXNzIjoiMSJ9.KHBaxxSUf_mjlj3EUD1H9oegLXLYWmLlo2LYPbwTCmk'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#select-from-books-where-quantity-gt-1"&gt;
  &lt;/a&gt;
  &lt;em&gt;select * from books where quantity &amp;gt; 1&lt;/em&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="s1"&gt;'http://127.0.0.1:3000/prest/public/books?quantity=$gte.10'&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Accept: application/json'&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDQ4MzM4MywianRpIjoiMSIsImlhdCI6MTYzMDQ2MTc4MywiaXNzIjoiMSJ9.KHBaxxSUf_mjlj3EUD1H9oegLXLYWmLlo2LYPbwTCmk'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#select-from-books-where-quantity-gt-1-order-by-title-desc-limit-5"&gt;
  &lt;/a&gt;
  &lt;em&gt;select * from books where quantity &amp;gt; 1 order by title desc limit 5&lt;/em&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="s1"&gt;'http://127.0.0.1:3000/prest/public/books?quantity=$gte.10&amp;amp;_page_size=5&amp;amp;_page=1&amp;amp;&amp;amp;_order=-title'&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Accept: application/json'&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDQ4MzM4MywianRpIjoiMSIsImlhdCI6MTYzMDQ2MTc4MywiaXNzIjoiMSJ9.KHBaxxSUf_mjlj3EUD1H9oegLXLYWmLlo2LYPbwTCmk'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#inserting-a-record-into-the-users-table"&gt;
  &lt;/a&gt;
  Inserting a record into the &lt;em&gt;users&lt;/em&gt; table
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-i&lt;/span&gt; &lt;span class="nt"&gt;-X&lt;/span&gt; POST http://127.0.0.1:3000/prest/public/users &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Accept: application/json"&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDQ4MzM4MywianRpIjoiMSIsImlhdCI6MTYzMDQ2MTc4MywiaXNzIjoiMSJ9.KHBaxxSUf_mjlj3EUD1H9oegLXLYWmLlo2LYPbwTCmk"&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{"email": "elton@minetto.dev", "first_name":"Elton", "last_name":"Minetto"}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#inserting-a-record-into-the-booksusers-table"&gt;
  &lt;/a&gt;
  Inserting a record into the &lt;em&gt;books_users&lt;/em&gt; table
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-i&lt;/span&gt; &lt;span class="nt"&gt;-X&lt;/span&gt; POST http://127.0.0.1:3000/prest/public/books_users &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Accept: application/json"&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDQ4MzM4MywianRpIjoiMSIsImlhdCI6MTYzMDQ2MTc4MywiaXNzIjoiMSJ9.KHBaxxSUf_mjlj3EUD1H9oegLXLYWmLlo2LYPbwTCmk"&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{"user_id": 1, "book_id":158}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#inner-join-between-tables"&gt;
  &lt;/a&gt;
  Inner Join between tables
&lt;/h2&gt;

&lt;p&gt;To run the query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;books_users&lt;/span&gt;
&lt;span class="k"&gt;inner&lt;/span&gt; &lt;span class="k"&gt;join&lt;/span&gt; &lt;span class="n"&gt;books&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;books_users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;book_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
&lt;span class="k"&gt;inner&lt;/span&gt; &lt;span class="k"&gt;join&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;books_users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
&lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The corresponding API would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="s1"&gt;'http://127.0.0.1:3000/prest/public/books_users?_join=inner:users:books_users.user_id:$eq:users.id&amp;amp;_join=inner:books:books_users.book_id:$eq:books.id&amp;amp;user_id=1'&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Accept: application/json'&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDQ4MzM4MywianRpIjoiMSIsImlhdCI6MTYzMDQ2MTc4MywiaXNzIjoiMSJ9.KHBaxxSUf_mjlj3EUD1H9oegLXLYWmLlo2LYPbwTCmk'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see more examples of query syntax, access the &lt;a href="https://docs.prestd.com/query-statements/"&gt;documentation&lt;/a&gt;. It is powerful and easy to understand.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sql-queries"&gt;
  &lt;/a&gt;
  SQL Queries
&lt;/h2&gt;

&lt;p&gt;Another exciting feature is the possibility of executing saved SQL queries, which make use of the Go's template library. For this, we will create the &lt;code&gt;queries&lt;/code&gt; directory, as configured in the &lt;code&gt;PREST_QUERIES_LOCATION&lt;/code&gt; environment variable of the &lt;code&gt;docker-compose file.yml&lt;/code&gt;. We will also create a subdirectory to make the queries more organized:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir -p queries/books
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Within this directory structure, I created the file: &lt;code&gt;by-user.read.sql&lt;/code&gt; with the content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;books_users&lt;/span&gt;
    &lt;span class="k"&gt;inner&lt;/span&gt; &lt;span class="k"&gt;join&lt;/span&gt; &lt;span class="n"&gt;books&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;books_users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;book_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
    &lt;span class="k"&gt;inner&lt;/span&gt; &lt;span class="k"&gt;join&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;books_users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
&lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;{{&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="err"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now we can run the query, sending the query parameter via the URL:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="s1"&gt;'http://127.0.0.1:3000/_QUERIES/books/by-user?user_id=1'&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Accept: application/json'&lt;/span&gt; &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJpZCI6MSwibmFtZSI6InBSRVNUIEZ1bGwgTmFtZSIsInVzZXJuYW1lIjoicHJlc3QiLCJtZXRhZGF0YSI6bnVsbH0sImV4cCI6MTYzMDQ4MzM4MywianRpIjoiMSIsImlhdCI6MTYzMDQ2MTc4MywiaXNzIjoiMSJ9.KHBaxxSUf_mjlj3EUD1H9oegLXLYWmLlo2LYPbwTCmk'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This feature allows us to create complex queries. To see more examples of query syntax, access the &lt;a href="https://docs.prestd.com/executing-sql-scripts/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In addition to these examples I showed in this post, the tool has other exciting features such as &lt;a href="https://docs.prestd.com/migrations/"&gt;migrations&lt;/a&gt;, &lt;a href="https://docs.prestd.com/permissions/"&gt;permissions control&lt;/a&gt;, and the possibility of creating &lt;a href="https://docs.prestd.com/prest-as-web-framework/"&gt;extensions&lt;/a&gt; through custom middlewares.&lt;/p&gt;

&lt;p&gt;pRest is a powerful tool that can be very useful for creating applications that make intensive use of databases, giving agility to the teams.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Beep Boop 5: Recap and Preview of Season 2</title>
      <author>Ornella Altunyan</author>
      <pubDate>Fri, 03 Sep 2021 22:11:55 +0000</pubDate>
      <link>https://dev.to/azure/beep-boop-5-recap-and-preview-of-season-2-1dfh</link>
      <guid>https://dev.to/azure/beep-boop-5-recap-and-preview-of-season-2-1dfh</guid>
      <description>&lt;p&gt;Thanks to everyone who joined us live for the 5th episode of &lt;a href="//aka.ms/BeepBoopSeries"&gt;Beep Boop with the Microsoft Reactor&lt;/a&gt;- our last episode of Season 1! We finished up our &lt;a href="//aka.ms/beepbooplinks5"&gt;web app that uses AI to translate text in real time&lt;/a&gt;, reflected on our favorite parts of &lt;a href="//aka.ms/beepboopreplay"&gt;Season 1&lt;/a&gt;, and gave a sneak peak of what's to come next month in Season 2 of &lt;a href="//aka.ms/beepbooptube"&gt;Beep Boop&lt;/a&gt;. 👩‍💻👩🏽‍💻&lt;/p&gt;

&lt;p&gt;If you missed the fun live, don't worry- you can watch the replay &lt;a href="//aka.ms/beepboop5"&gt;here on YouTube&lt;/a&gt;, and in the embedded video below!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/AD8b4vxR62w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On this episode we cover:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/AD8b4vxR62w?t=324"&gt;5:24&lt;/a&gt; As usual, we refresh everyone on what &lt;a href="//aka.ms/beepbooptube"&gt;Beep Boop&lt;/a&gt; is all about 💕&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/AD8b4vxR62w?t=461"&gt;7:41&lt;/a&gt; ICYMI (in case you missed it) - we refresh everyone on who Franklin is, and why he is essential to the show 🐶🦴🥰&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/AD8b4vxR62w?t=604"&gt;10:04&lt;/a&gt; Chloe starts off the episode with a costume change 🧢 and a musical interlude 🎶&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/AD8b4vxR62w?t=1200"&gt;20:00&lt;/a&gt; We chat about our favorite moments of the season, like having so many awesome viewers each week, and learning about cool &lt;a href="//aka.ms/beepboopvscode"&gt;VS Code&lt;/a&gt; features 🖥&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/AD8b4vxR62w?t=1920"&gt;32:00&lt;/a&gt; Previously on Beep Boop... we catch folks up on what they missed last episode - we show off the beginning of the &lt;a href="//aka.ms/beepbooplinks5"&gt;web app&lt;/a&gt; we built using Python and Flask in &lt;a href="//aka.ms/beepboopvscode"&gt;VS Code&lt;/a&gt; 🐍&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/AD8b4vxR62w?t=2648"&gt;44:08&lt;/a&gt; We add &lt;a href="//aka.ms/beepboopazurecs"&gt;Azure Cognitive Services&lt;/a&gt; to our web app and &lt;a href="https://docs.microsoft.com/en-us/learn/modules/python-flask-build-ai-web-app/5-exercise-create-translator-service?WT.mc_id=academic-37493-cxa"&gt;create a translator service&lt;/a&gt; so that we can have real-time AI translation in our app! Be sure to set up an &lt;a href="//aka.ms/beepboopazure"&gt;Azure account&lt;/a&gt; so that you can create the translator resource in your portal. 🤖 &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/AD8b4vxR62w?t=2768"&gt;46:08&lt;/a&gt; We interrupt this broadcast to bring you a little lesson on security - we gather our keys and endpoints to configure the service (off screen, of course) 🔐&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/AD8b4vxR62w?t=2940"&gt;49:00&lt;/a&gt; After it's all set up and ready to go, we're able to &lt;a href="https://docs.microsoft.com/en-us/learn/modules/python-flask-build-ai-web-app/6-exercise-call-translator?WT.mc_id=academic-37493-cxa"&gt;call the translator service&lt;/a&gt; to integrate translation services into our web app (with a little help from our friends!) 👯‍♀️&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/AD8b4vxR62w?t=3390"&gt;56:30&lt;/a&gt; Success! We're able to see &lt;a href="//aka.ms/beepboopazurecs"&gt;Azure Cognitive Services&lt;/a&gt; providing real time AI translation in our app ‼️‼️&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/AD8b4vxR62w?t=3600"&gt;1:00:00&lt;/a&gt; Franklin 🐶 hears his name and arrives on-screen, but is very careful not to give any spoilers about Season 2 🤫&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/AD8b4vxR62w?t=3692"&gt;1:01:32&lt;/a&gt; We give a preview of what to expect in Season 2 of &lt;a href="//aka.ms/beepboopseries"&gt;Beep Boop&lt;/a&gt;. Hope to see you there! 🥳&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Did you have fun? Come back for &lt;a href="//aka.ms/beepboopseries"&gt;Season 2 of Beep Boop&lt;/a&gt; where we'll learn more about Artificial Intelligence and Machine Learning, this time with Power Platform!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Essential JavaScript Tooling</title>
      <author>Asjad Anis</author>
      <pubDate>Fri, 03 Sep 2021 21:45:30 +0000</pubDate>
      <link>https://dev.to/asjadanis/essential-javascript-tooling-139a</link>
      <guid>https://dev.to/asjadanis/essential-javascript-tooling-139a</guid>
      <description>&lt;h3&gt;
  &lt;a href="#quick-summary"&gt;
  &lt;/a&gt;
  Quick Summary
&lt;/h3&gt;

&lt;p&gt;Software development is great and fun but it can be a mess and a very bad influence if the developer experience is not given the importance and prioritized. Some standard development practices along with proper tooling can greatly improve this experience. This also aids in keeping the codebase clean and the repository in a good health. In this article, we will cover some development practices and essential tools to help you improve the development experience.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#audience"&gt;
  &lt;/a&gt;
  Audience
&lt;/h3&gt;

&lt;p&gt;This article is essentially for JS developers and covers tooling around the JS ecosystem, however, the same concepts can be applied in other languages with the tooling available there. We will cover the below topics in this article.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Code Linting using &lt;a href="https://eslint.org/"&gt;ESLint&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Code Formatting using &lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Setting up &lt;a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"&gt;Git Hooks&lt;/a&gt; for linting and code-formatting.&lt;/li&gt;
&lt;li&gt;Conventional Commits using &lt;a href="https://github.com/commitizen/cz-cli"&gt;Commitizen&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/features/actions"&gt;Github Actions&lt;/a&gt; for CI/CD&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#codelinting"&gt;
  &lt;/a&gt;
  Code-Linting
&lt;/h3&gt;

&lt;p&gt;Code linting is very essential and important especially when you are working with an interpreted language like JavaScript. Linters are essentially static code analyzers it scans through your code without running it and flags any programmatic errors, stylistic errors, and any suspicious contracts. Properly setting up a linter in your codebase can help catch errors early on and ensure that some standard practices are being followed. This makes the codebase clean and helps in code reviews.&lt;/p&gt;

&lt;p&gt;Linters can enforce code styling and rules like no unused variables or no console.log statements or no unused imports in fact it's a very powerful tool and can do much more than that.&lt;/p&gt;

&lt;p&gt;Setting up Linters can be tedious and tiring but it brings great results once you adopt it and start using it properly in your team. I personally believe that linters and such tools should come with the language itself and developers shouldn't have to worry about setting one up. This experience is much more improved with &lt;a href="https://deno.land/"&gt;deno&lt;/a&gt; (A secure runtime for JavaScript and TypeScript) which ships with a built-in linter and formatter for JavaScript and TypeScript.  &lt;/p&gt;

&lt;p&gt;Now that we have a basic understanding of linters let's see how we can set one up in a TypeScript project. We will be using ESLint which is very popular in the JS ecosystem and is fully pluggable. Every single rule in ESLint is a plugin, this means you can start off with a base configuration and then extend the rules to your needs by adding in more rules as a plugin.&lt;/p&gt;

&lt;p&gt;Create a new folder and run &lt;code&gt;npm init -y&lt;/code&gt; to initialize your project, this will create a &lt;code&gt;package.json&lt;/code&gt; in the root directory with some stub fields.&lt;/p&gt;

&lt;p&gt;Next, install the required &lt;code&gt;dev-dependencies&lt;/code&gt; into the project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; nodemon ts-node eslint typescript @typescript-eslint/eslint-plugin @typescript-eslint/parser
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's first quickly setup TypeScript by running &lt;code&gt;tsc --init&lt;/code&gt; which will initialize the &lt;code&gt;tsconfig.json&lt;/code&gt; file in the project root, the only thing we are going to change is uncommenting &lt;code&gt;outdir&lt;/code&gt; option and change it to &lt;code&gt;dist&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="s2"&gt;"outDir"&lt;/span&gt;: &lt;span class="s2"&gt;"dist"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, add a &lt;code&gt;.eslintrc&lt;/code&gt; file in the project's root directory. This is going to be the configuration file for &lt;code&gt;eslint&lt;/code&gt; where we can customize our rules. To quickly get started let's add a bare minimum configuration to the file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"root"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"parser"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"@typescript-eslint/parser"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"plugins"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"@typescript-eslint"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"extends"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"eslint:recommended"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"plugin:@typescript-eslint/recommended"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's look at some of these options briefly, the &lt;code&gt;root&lt;/code&gt; key basically tells eslint to stop looking for configuration files in the parent directories. By default, eslint looks for config files in all parent folders until the root directory which can lead to unexpected results, plus this option can be very handy when you have a monorepo in place and each project uses a different configuration.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;extends&lt;/code&gt; key lets you add the configuration you want to use for your project this can be a string that specifies a configuration or a path to a configuration file, here we are using two configurations first one is the &lt;a href="https://eslint.org/docs/rules/"&gt;eslint-recommended&lt;/a&gt;, and the next up is typescript-eslint recommended. You can also use &lt;a href="https://www.npmjs.com/package/eslint-config-airbnb-typescript"&gt;airbnb-typescript&lt;/a&gt; config which is also very popular.&lt;/p&gt;

&lt;p&gt;Now let's add some scripts in our &lt;code&gt;package.json&lt;/code&gt; to run our project in dev mode and a script for linting.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon --watch '**/*.ts' --exec 'ts-node' src/index.ts"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eslint . --ext .ts"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And for the sake of testing our eslint setup let's create an &lt;code&gt;index.ts&lt;/code&gt; file and very simple for loop with an intended unused variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;//src/index.ts&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;i : &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's run &lt;code&gt;yarn lint&lt;/code&gt; and we will get a warning on our console.&lt;/p&gt;

&lt;p&gt;This is great our eslint setup is working, but let's say we want to be more strict on our code base and want this to be an error and cause lint to fail, to do that head over to your &lt;code&gt;.eslintrc&lt;/code&gt; file and add the below rule.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"root"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"parser"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"@typescript-eslint/parser"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"plugins"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"@typescript-eslint"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"extends"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"eslint:recommended"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"plugin:@typescript-eslint/recommended"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"no-unused-vars"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"error"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"error"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"warn"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"off"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you run &lt;code&gt;yarn lint&lt;/code&gt; your console will display this as an error and lint won't succeed, also if you have the eslint extension installed on vs code it will highlight this issue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QeSX2A0x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uhay0wlkjppm93w6eqo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QeSX2A0x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uhay0wlkjppm93w6eqo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UIFTGwzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25ps9f2vnkox2sfzn2yf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UIFTGwzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25ps9f2vnkox2sfzn2yf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can also add another script to auto-fix the lint issues, note that not all issues can be auto-fixed and you can get a list of all the rules that can be auto-fixed &lt;a href="https://eslint.org/docs/rules/"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"lint-fix"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eslint . --ext .ts --fix"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's pretty much for the linting setup, I hope you can now create a mental model for yourself and see how useful this tool can be if used properly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-formatting"&gt;
  &lt;/a&gt;
  Code Formatting
&lt;/h3&gt;

&lt;p&gt;Let's accept it, seeing different code styles in a repo is a mess and if not controlled you can see all sorts of code conventions being followed in the repo. This is where code formatters come to our rescue, but before we jump into setting one up in our project we first need to understand that code formatters and linters are essentially not the same things, although there is a very thin line between them but they both serve a different purpose. Code-formatters essentially deal with the formatting of code and apply the code styling you have specified, they don't check code for potential bugs or issues and adhere to the styling. &lt;/p&gt;

&lt;p&gt;Prettier is a very famous tool in the JS ecosystem and we will be setting it up in our project, with prettier we can enforce style rules like max-length, tab width, single-quotes, semicolon, etc. It's basically an opinionated code formatter that takes your code and parses it into an AST (Abstract Syntax Tree) discarding the original styling, after that it just pretty prints the AST with the code-styling you have specified.&lt;/p&gt;

&lt;p&gt;Let get started, first we need to install the dev dependencies&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; prettier eslint-config-prettier eslint-plugin-prettier
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's quickly explain the above dev-dependencies and what purpose do they serve.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;prettier&lt;/code&gt;: opinionated code-formatter.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;eslint-config-prettier&lt;/code&gt;: used to disable all eslint rules that might conflict with prettier.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;eslint-plugin-prettier&lt;/code&gt;: runs prettier as an eslint rule&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now create a &lt;code&gt;.prettierrc&lt;/code&gt; file in the root of your directory and add the below config.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//.prettierrc&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"semi"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"trailingComma"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"none"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"singleQuote"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"printWidth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"tabWidth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"arrowParens"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"always"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"bracketSpacing"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These rules specify to put semicolons at the end, remove trailing commas, use double quotes for strings, etc, you can read more about the rules &lt;a href="https://prettier.io/docs/en/options.html"&gt;here&lt;/a&gt; and set them up to your preference.&lt;/p&gt;

&lt;p&gt;Now that we have the rules set up, let's add a script to format our code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"format"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prettier --config .prettierrc 'src/**/*.ts' --write"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it we have configured prettier in our project, now whenever you run this script it will format all your source code in the &lt;code&gt;src&lt;/code&gt; directory according to the config you defined. Give it a test, use some single quotes or remove semicolons and then run &lt;code&gt;yarn format&lt;/code&gt;. You can also install the prettier vs code extension and set it to format on save. &lt;/p&gt;

&lt;p&gt;Now that we have prettier setup let's configure it with eslint, update your &lt;code&gt;.eslintrc&lt;/code&gt; as below and you'll have prettier working with eslint and configured as a plugin in eslint config.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"root"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"parser"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"@typescript-eslint/parser"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"plugins"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"@typescript-eslint"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prettier"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"extends"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"eslint:recommended"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"plugin:@typescript-eslint/recommended"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"prettier"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"no-unused-vars"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"prettier/prettier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"error"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#git-hooks"&gt;
  &lt;/a&gt;
  Git Hooks
&lt;/h3&gt;

&lt;p&gt;Cool, if you have been following till here this is where it gets the most exciting, you must be wondering it's great that we have set these tools up, but someone can still commit to the repo without running these scripts, this is where git hooks come to our rescue. Git hooks are just scripts that run automatically every time an event occurs in the repository. We will use a tool called &lt;a href="https://github.com/typicode/husky"&gt;husky&lt;/a&gt; that makes working with git-hooks easy. &lt;/p&gt;

&lt;p&gt;Let's quickly install it as a dev dependency.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; husky

// Also add a prepare script to your package.json as below.

&lt;span class="s2"&gt;"prepare"&lt;/span&gt;: &lt;span class="s2"&gt;"husky install"&lt;/span&gt;

// Now run

yarn prepare
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;prepare&lt;/code&gt; is an npm lifecycle script that will run on &lt;code&gt;npm install&lt;/code&gt; and this will ensure that whenever node modules are installed husky is installed too. Read more on life-cycle scrips &lt;a href="https://docs.npmjs.com/cli/v7/using-npm/scripts#life-cycle-scripts"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That's it, husky is now set up in our project, and we can configure it to run our &lt;code&gt;lint&lt;/code&gt; and &lt;code&gt;format&lt;/code&gt; scripts before commit, for that we can use the &lt;code&gt;pre-commit&lt;/code&gt; hook that runs before a commit. Let's add that hook now, head over to the terminal, and run the below command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx husky add .husky/pre-commit &lt;span class="s2"&gt;"yarn lint &amp;amp;&amp;amp; yarn format"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will notice that now there's a &lt;code&gt;.husky&lt;/code&gt; folder in the root of your repo and it contains a file &lt;code&gt;pre-commit&lt;/code&gt; with the below contents. This hook will run every time you commit to your repo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;dirname&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;/_/husky.sh"&lt;/span&gt;

yarn lint &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; yarn format
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try committing something in the repo now, and you will notice that &lt;code&gt;lint&lt;/code&gt; and &lt;code&gt;format&lt;/code&gt; scripts are executed first. If everything looks good, your commit will be added successfully, in case of issues it won't be committed to the repo and you'll have to fix those issues in order to make a commit. You should be able to make a mental model of this now, this ensures that no code with potential bugs or styling issues gets committed to the repo. This can help you save a lot of time in code reviews if these conventions are properly followed.&lt;/p&gt;

&lt;p&gt;This configuration is great but if you notice there is one problem with this approach, if we have a very large codebase and we run linting and formatting on every commit in the code-base it can take up much longer and that's not the intended use case, we only want to run it on the files that have been staged for the commit because ideally only those files should be checked that are being committed to the repo, that's where another tool &lt;code&gt;lint-staged&lt;/code&gt; comes to our rescue and it will ensure that our pre-commit hooks only run on staged files. This can be configured very quickly too.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; lint-staged

// Add below config to your package.json

&lt;span class="s2"&gt;"lint-staged"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"src/**/*.ts"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"yarn lint"&lt;/span&gt;,
    &lt;span class="s2"&gt;"yarn format"&lt;/span&gt;
  &lt;span class="o"&gt;]&lt;/span&gt;,
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And update your &lt;code&gt;pre-commit&lt;/code&gt; hook to run &lt;code&gt;npx lint-staged&lt;/code&gt; instead of running &lt;code&gt;yarn lint &amp;amp;&amp;amp; yarn format&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;dirname&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;/_/husky.sh"&lt;/span&gt;

npx lint-staged
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it, now lint will only run against the staged files, you can quickly test it by creating a file in the repo with some lint-issues and don't stage it while staging some other files that are compliant with the lint rules and you should notice that git commit will run fine, but if you stage the file with the lint issues, it will block the commit and give you the lint errors on the terminal that should be fixed. If you want to lint the entire project you can still do it by running &lt;code&gt;yarn lint&lt;/code&gt;. Now our tooling is set up well enough to ensure that the whole team can follow it and adhere to the same coding standards and style guides.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conventional-commits"&gt;
  &lt;/a&gt;
  Conventional Commits
&lt;/h3&gt;

&lt;p&gt;Our development setup is pretty much complete but there's still one area where the team can adopt different conventions, that will be the commit messages yes that's right people can have different preferences when adding commit messages and we need to ensure that the team conforms to a standard convention. We will be adopting the &lt;a href="https://www.conventionalcommits.org/en/v1.0.0/"&gt;conventional commits specification&lt;/a&gt; in our project and ensure it using a tool named &lt;code&gt;commitizen&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;The general syntax for this specification is as follow&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;type&amp;gt;[optional scope]: &amp;lt;description&amp;gt;

[optional body]

[optional footer(s)]

// Example

feat(landing-page): add new landing page

A new landing page for the website...

Closes #&amp;lt;github-issue-number&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alright now that we have an understanding of the specification let's configure our project to use this tool.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add -D commitizen cz-conventional-changelog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And add this to your &lt;code&gt;pacakge.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"config"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"commitizen"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cz-conventional-changelog"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"cz"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cz"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Note: If you end up naming your script &lt;code&gt;commit&lt;/code&gt; then it might run twice because of &lt;a href="https://github.com/commitizen/cz-cli#optional-install-and-run-commitizen-locally"&gt;this issue&lt;/a&gt; mentioned on the repo.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now try committing to the repo by running &lt;code&gt;yarn cz&lt;/code&gt; and you will be prompted a couple of questions on the terminal to make the proper commit. Great now our conventional-commits are set up we can also set it up as a git hook by running the below command and running commitizen with our &lt;code&gt;prepare-commit-msg&lt;/code&gt; hook which is invoked by &lt;code&gt;git commit&lt;/code&gt; however there's an issue with this approach which triggers the git commit twice when running &lt;code&gt;yarn cz&lt;/code&gt;. The issue is opened on the repo &lt;a href="https://github.com/commitizen/cz-cli/issues/844"&gt;here&lt;/a&gt;, I would advise not to use this approach until this issue is fixed and rely on the previous script &lt;code&gt;yarn cz&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx husky add .husky/prepare-commit-msg &lt;span class="s2"&gt;"exec &amp;lt; /dev/tty &amp;amp;&amp;amp; node_modules/.bin/cz --hook || true"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#github-actions"&gt;
  &lt;/a&gt;
  Github Actions
&lt;/h3&gt;

&lt;p&gt;In the last part, we will focus on setting up a GitHub action to ensure that our lint and format jobs are run on every commit and how Github actions can help in our CI/CD pipeline. Setting up a good and fast CI/CD pipeline is very essential in modern software development now. As your software evolves it might become a very tedious task to compile the builds manually and if it needs to be compiled on multiple platforms you can imagine how time taking this could be.&lt;/p&gt;

&lt;p&gt;Github actions are a handy tool to automate software workflows and provides CI/CD right out of your Github code repo. Github actions are event-driven and basically require a &lt;code&gt;.yaml&lt;/code&gt; file where you can provide your configuration in steps.&lt;/p&gt;

&lt;p&gt;Some key terminologies to keep in consideration when working with Github Actions include&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Workflows:&lt;/strong&gt; automated work procedures that contain one or more jobs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Events:&lt;/strong&gt; an activity that triggers a workflow (e.g push to a branch)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Jobs:&lt;/strong&gt; a set of steps that execute on the same runner.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Step:&lt;/strong&gt; a task that can execute commands on a job.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can read more about these on the official &lt;a href="https://docs.github.com/en/actions/learn-github-actions/introduction-to-github-actions"&gt;docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, initialize a git repo in your project if you haven't already by running &lt;code&gt;git init&lt;/code&gt; and commit your changes to the repo. Make sure you add a &lt;code&gt;.gitignore&lt;/code&gt; file and add &lt;code&gt;node_modules&lt;/code&gt; and &lt;code&gt;dist&lt;/code&gt; to it so they don't get committed to the repo.&lt;/p&gt;

&lt;p&gt;Next, create a repo on your Github account and copy the remote's origin url, now head over to your local repo and run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote add origin &amp;lt;remote-repo-origin&amp;gt;
git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next head over to your Github repo and click on the Actions tab and select set up a workflow yourself&lt;/p&gt;

&lt;p&gt;In the editor name the file &lt;code&gt;lint.yml&lt;/code&gt; and clear the default action and replace it with.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Lint&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;lint&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Setup Node.js environment&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@v2.4.0&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;node-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;14.16.1'&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install Node Modules&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm install&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Lint and format&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;npm run lint&lt;/span&gt;
          &lt;span class="s"&gt;npm run format&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This action file is pretty straight forward and you should be able to navigate through it very easily, we are declaring our workflow name as Lint that has a single job &lt;code&gt;lint&lt;/code&gt;. A workflow can have multiple jobs and by default, jobs run in parallel but can be configured to make them run sequentially by using the &lt;code&gt;needs &amp;lt;job-id&amp;gt;&lt;/code&gt; syntax in the &lt;code&gt;.yml&lt;/code&gt; file&lt;/p&gt;

&lt;p&gt;Next, we are specifying to run the job on Ubuntu's latest version and set up Node v14.16.1 using a &lt;a href="https://github.com/marketplace/actions/setup-node-js-environment"&gt;marketplace action&lt;/a&gt;. After that, we are just installing node modules and running our lint/format scripts. &lt;/p&gt;

&lt;p&gt;Note this is a very simple example but you can extend it to your needs, for example, let's say you have set up tests in your repo then you can define another &lt;code&gt;test&lt;/code&gt; job that runs after &lt;code&gt;linting&lt;/code&gt;, and if the test job succeeds, you can run a &lt;code&gt;build&lt;/code&gt; job to compile a build and deploy to staging. You can basically configure it to adapt to your needs and automate your development workflow. Github actions are indeed a powerful tool and you should definitely explore them.&lt;/p&gt;

&lt;p&gt;You can see all of this in action on my GitHub repo &lt;a href="https://github.com/asjadanis/ts-tooling"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;The idea with this blog was not to go into the depths of each tool but rather give you an overview of all these tools that can help you in our development process and ensure a better development experience. Setting up these tools can be a very boring and cumbersome task but these tools are your friends and once you adopt them properly in your code-base you won't regret it. Feel free to share your thoughts with me in the comment section or connect with me on &lt;a href="https://twitter.com/asjadanis"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>tutorial</category>
      <category>tooling</category>
    </item>
    <item>
      <title>3 TypeScript Tricks You Can Use in JavaScript</title>
      <author>Mastering JS</author>
      <pubDate>Fri, 03 Sep 2021 21:44:59 +0000</pubDate>
      <link>https://dev.to/masteringjs/3-typescript-tricks-you-can-use-in-javascript-1m75</link>
      <guid>https://dev.to/masteringjs/3-typescript-tricks-you-can-use-in-javascript-1m75</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--okr3-sAA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pi8vzugvaadx8g7a223w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--okr3-sAA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pi8vzugvaadx8g7a223w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TypeScript is growing rapidly in popularity, but &lt;a href="https://www.getrevue.co/profile/masteringjs/issues/is-typescript-worth-it-307679"&gt;isn't worth the effort for some projects&lt;/a&gt;. However, even if you're writing JavaScript, there's some patterns you can learn from TypeScript. Here's 3 of our favorite TypeScript-inspired patterns for JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-javascript-enums"&gt;
  &lt;/a&gt;
  1) &lt;a href="https://masteringjs.io/tutorials/fundamentals/enum"&gt;JavaScript Enums&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;TypeScript has support for enums, which are a neat pattern for defining an object whose keys you can use in place of hard-coded strings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;enum&lt;/span&gt; &lt;span class="nx"&gt;Direction&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Up&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Down&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Right&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript doesn't support enums. But TypeScript compiles to JavaScript, so what does the above code turn into? Turns out TypeScript enums compile into &lt;a href="https://masteringjs.io/tutorials/fundamentals/pojo"&gt;JavaScript POJOs&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;Up&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Up&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;Down&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Down&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;Left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Left&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;Right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Right&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also make &lt;code&gt;Direction&lt;/code&gt; immutable using &lt;code&gt;Object.freeze()&lt;/code&gt;, which makes &lt;code&gt;Direction&lt;/code&gt; pretty close to a TypeScript enum. And that means you can do what you expect to do with enums in other languages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get allowed enum values: &lt;code&gt;Object.keys(Direction)&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Check if a value equals an enum value: &lt;code&gt;val === Direction.Up&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Check if a value is in the enum: &lt;code&gt;Object.hasOwnProperty(val)&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-raw-orfail-endraw-helpers-to-avoid-null-checks"&gt;
  &lt;/a&gt;
  2) &lt;a href="http://thecodebarbarian.com/whats-new-in-mongoose-53-orfail-and-global-toobject.html"&gt;&lt;code&gt;orFail()&lt;/code&gt;&lt;/a&gt; helpers to avoid null checks
&lt;/h2&gt;

&lt;p&gt;TypeScript requires you to check for &lt;code&gt;null&lt;/code&gt; query results in Mongoose. This is good practice, but also gets a bit cumbersome if you need to do it over and over again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// TypeScript reports an error "Object is possibly 'null'."&lt;/span&gt;
&lt;span class="c1"&gt;// Need to add a `if (doc != null)` check&lt;/span&gt;
&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Mongoose queries have a neat &lt;code&gt;orFail()&lt;/code&gt; helper that throws an error if there's no result, which means you can go about using &lt;code&gt;doc&lt;/code&gt; &lt;strong&gt;without&lt;/strong&gt; explicitly checking for &lt;code&gt;null&lt;/code&gt;. This is because &lt;code&gt;orFail()&lt;/code&gt; marks the query as resolving to a &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html"&gt;NonNullable&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;orFail&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Works!&lt;/span&gt;
&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use this &lt;code&gt;orFail()&lt;/code&gt; pattern a lot in our TypeScript tests, because it saves us from having to add repetitive &lt;code&gt;if&lt;/code&gt; checks. If the &lt;code&gt;orFail()&lt;/code&gt; is triggered, the error bubbles up to error handling.&lt;/p&gt;

&lt;p&gt;However, there's no reason why you can't use &lt;code&gt;orFail()&lt;/code&gt; in JavaScript! Just because TypeScript isn't there to tell you there's a problem, doesn't mean the problem isn't there.&lt;/p&gt;

&lt;p&gt;Similarly, if you have other functions that may return &lt;code&gt;null&lt;/code&gt; if a value is not found, consider wrapping them in a function that throws an error if the value is not found. It can save you a lot of &lt;code&gt;null&lt;/code&gt; checks!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-use-javascript-maps-for-objects-with-unknown-types"&gt;
  &lt;/a&gt;
  3) Use &lt;a href="https://masteringjs.io/tutorials/fundamentals/map"&gt;JavaScript maps&lt;/a&gt; for objects with unknown types
&lt;/h2&gt;

&lt;p&gt;TypeScript makes it just a little easier to define a map with arbitrary keys than an object with arbitrary keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// An object with string keys and values of type `T`&lt;/span&gt;
&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;AnyObject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="na"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Map with string keys and values of type `T`&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;AnyMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;TypeScript makes working with maps to store arbitrary key/value mappings easier, and with good reason: maps support mapping from keys of arbitrary type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fakeMap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="nx"&gt;fakeMap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fakeMap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fakeMap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// { '1': string }&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Map(2) { 1 =&amp;gt; 'number', '1' =&amp;gt; 'string' }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The issue is that JavaScript object keys can only be strings or symbols, so JavaScript always converts object keys to strings. That's why you should use maps in cases where you aren't sure that the keys you're using are strings.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>A complete beginner friendly Python Flask tutorial 🐍. Learn from basic template rendering to deploying in web servers.</title>
      <author>Siddhartha Roy</author>
      <pubDate>Fri, 03 Sep 2021 20:57:25 +0000</pubDate>
      <link>https://dev.to/sid86dev/a-complete-beginner-friendly-python-flask-tutorial-learn-from-basic-template-rendering-to-deploying-in-web-servers-5ack</link>
      <guid>https://dev.to/sid86dev/a-complete-beginner-friendly-python-flask-tutorial-learn-from-basic-template-rendering-to-deploying-in-web-servers-5ack</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UFNH_GJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://visitor-badge.laobi.icu/badge%3Fpage_id%3Dsid86-dev.flask-tutorial" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UFNH_GJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://visitor-badge.laobi.icu/badge%3Fpage_id%3Dsid86-dev.flask-tutorial" alt="Visitor Badge"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wDlbO9kX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/repo-size/sid86-dev/flask-tutorial" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wDlbO9kX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/repo-size/sid86-dev/flask-tutorial" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#a-complete-flask-tutorial-for-beginners"&gt;
  &lt;/a&gt;
  A complete Flask tutorial for beginners
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#i-made-this-tutorial-to-help-and-teach-my-students-make-awesome-dynamic-websites-using-flask-flask-is-an-api-of-python-that-allows-us-to-build-up-webapplications-it-was-developed-by-armin-ronacher-its-modern-and-very-expressive-i-learned-it-because-its-just-super-useful-and-also-allows-me-to-write-less-code"&gt;
  &lt;/a&gt;
  I made this tutorial to help and teach my students make awesome dynamic websites using Flask. Flask is an API of Python that allows us to build up web-applications. It was developed by Armin Ronacher. It's Modern and very expressive, I learned it because it's just super useful and also allows me to write less code.
&lt;/h4&gt;
&lt;h4&gt;
  &lt;a href="#i-tried-to-remove-the-extra-topics-of-flask-and-made-this-as-beginner-friendly-as-possible-so-lets-get-started-with-installation-and-then-get-an-overview-with-the-quickstart-this-tutorial-will-show-how-to-create-a-small-but-complete-application-with-flask"&gt;
  &lt;/a&gt;
  I tried to remove the extra topics of Flask and made this as beginner friendly as possible. So let's get started with Installation and then get an overview with the Quickstart. This Tutorial will show how to create a small but complete application with Flask.
&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Best of luck to you!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zLDQ9_SE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Flask_logo.svg/1200px-Flask_logo.svg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zLDQ9_SE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Flask_logo.svg/1200px-Flask_logo.svg.png" alt="logo"&gt;&lt;/a&gt; 
&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#minimal-app"&gt;Minimal app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debug-mode"&gt;Debug Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#routing"&gt;Routing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#url-variables"&gt;Url Variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;Required:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A little experience with coding in python (variables, loops, methods/functions, etc)&lt;/li&gt;
&lt;li&gt;Patience&lt;/li&gt;
&lt;li&gt;Time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note this is a tutorial for &lt;strong&gt;Backend Development&lt;/strong&gt;, not Frontend Development. Large software companies like Google, Amazon, &lt;br&gt;
Facebook and Microsoft view Backend Developers as different from  Frontend Developers. Yet, in order to become a good programmer one need to understand the concepts of both. &lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#docs"&gt;
  &lt;/a&gt;
  Docs
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#fask-docs"&gt;
  &lt;/a&gt;
  &lt;a href="https://flask.palletsprojects.com/en/2.0.x/"&gt;Fask Docs&lt;/a&gt;
&lt;/h3&gt;
&lt;h3&gt;
  &lt;a href="#jinja-docs"&gt;
  &lt;/a&gt;
  &lt;a href="https://jinja.palletsprojects.com/en/3.0.x/"&gt;Jinja Docs&lt;/a&gt;
&lt;/h3&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#why-to-choose-flask"&gt;
  &lt;/a&gt;
  Why to choose Flask
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Flask's framework is more explicit than Django's framework and is also easier to learn because it has less base code to implement a simple web-Application.&lt;br&gt;
List of companies using Flask framework - who is using Flask?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#companies-using-flask"&gt;
  &lt;/a&gt;
  Companies using Flask
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://redhat.com"&gt;Red Hat&lt;/a&gt; , &lt;a href="http://rackspace.com"&gt;Rackspace&lt;/a&gt;, &lt;a href="http://airbnb.com"&gt;Airbnb&lt;/a&gt;, &lt;a href="https://medium.com/netflix-techblog/automation-as-a-service-introducing-scriptflask-17a8e4ad954b"&gt;Netflix&lt;/a&gt;, &lt;a href="https://www.pythonanywhere.com/"&gt;PythonAnywhere&lt;/a&gt;, &lt;a href="https://stackshare.io/lyft/lyft"&gt;Lyft&lt;/a&gt;, &lt;a href="https://stackshare.io/reddit/reddit"&gt;Reddit&lt;/a&gt;, &lt;a href="https://stackshare.io/mailgun/mailgun"&gt;Mailgun&lt;/a&gt;, &lt;a href="https://stackshare.io/mit/mit"&gt;MIT&lt;/a&gt;, &lt;a href="https://www.mozilla.org"&gt;Mozilla&lt;/a&gt;, &lt;a href="https://github.com/mozilla/balrog"&gt;Balrog (Application Update Service)&lt;/a&gt;, &lt;a href="https://github.com/mozilla-releng/services"&gt;Release Engineering Services&lt;/a&gt;, &lt;a href="https://stackshare.io/hotjar/hotjar"&gt;Hotjar&lt;/a&gt;, &lt;a href="https://stackshare.io/patreon/patreon"&gt;Patreon&lt;/a&gt;, &lt;a href="https://stackshare.io/teradata/teradata"&gt;Teradata&lt;/a&gt;, &lt;a href="https://stackshare.io/uber/partners-uber-com"&gt;Uber&lt;/a&gt;, &lt;a href="https://stackshare.io/engel80/apkg"&gt;Samsung&lt;/a&gt;, &lt;a href="https://stackshare.io/nginx-inc/nginx-amplify"&gt;Nginx&lt;/a&gt;, +1.5k more companies in &lt;a href="https://stackshare.io/flask/"&gt;https://stackshare.io/flask/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
  &lt;a href="#quickstart"&gt;
  &lt;/a&gt;
  Quickstart
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#-raw-pip-install-flask-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;pip install flask&lt;/code&gt;
&lt;/h3&gt;



&lt;h2&gt;
  &lt;a href="#minimal-app"&gt;
  &lt;/a&gt;
  Minimal app
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/minimal_app"&gt;Code Here ⚙️&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hello, World!&amp;lt;/p&amp;gt;"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#so-what-did-that-code-do"&gt;
  &lt;/a&gt;
  So what did that code do?
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;First we imported the Flask class. An instance of this class will be our WSGI application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next we create an instance of this class. The first argument is the name of the application’s module or package. &lt;strong&gt;name&lt;/strong&gt; is a convenient shortcut for this that is appropriate   for most cases. This is needed so that Flask knows where to look for resources such as templates and static files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We then use the route() decorator to tell Flask what URL should trigger our function.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The function returns the message we want to display in the user’s browser. The default content type is HTML, so HTML in the string will be rendered by the browser.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;



&lt;h2&gt;
  &lt;a href="#debug-mode"&gt;
  &lt;/a&gt;
  Debug Mode
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/debug_mode"&gt;Code Here ⚙️&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hello, World!&amp;lt;/p&amp;gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# debud mode running on 8000 port
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The flask run command can do more than just start the development server. By enabling debug mode, the server will automatically reload if code changes, and will show an          interactive debugger in the browser if an error occurs during a request.&lt;/p&gt;

&lt;p&gt;Warning ⚠️ &lt;br&gt;
The debugger allows executing arbitrary Python code from the browser. It is protected by a pin, but still represents a major security risk. Do not run the development server or   debugger in a production environment.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/routing"&gt;Code Here ⚙️&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'This is Index Page'&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/login'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'This is Login Page'&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/hello'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'Hello, World'&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Modern web applications use meaningful URLs to help users. Users are more likely to like a page and come back if the page uses a meaningful URL they can remember and use to   directly visit a page.&lt;/p&gt;

&lt;p&gt;Use the &lt;code&gt;route()&lt;/code&gt; decorator to bind a function to a URL.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#url-variables"&gt;
  &lt;/a&gt;
  Url Variables
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/url_variables"&gt;Code Here ⚙️&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_template&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'index.html'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# string
&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/string/&amp;lt;string:value&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hi this is a string value &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/p&amp;gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# int
&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/int/&amp;lt;int:value&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hi this is a int value &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/p&amp;gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# float
&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/float/&amp;lt;float:value&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hi this is a float value &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/p&amp;gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# path
&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/path/&amp;lt;path:value&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hi this is a path value &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/p&amp;gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# uuid
&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/uuid/&amp;lt;uuid:value&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hi this is a uuid value &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/p&amp;gt;"&lt;/span&gt;



&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You can add variable sections to a URL by marking sections with &lt;code&gt;&amp;lt;variable_name&amp;gt;&lt;/code&gt;. Your function then receives the &lt;code&gt;&amp;lt;variable_name&amp;gt;&lt;/code&gt; as a keyword argument. Optionally, you can use a  converter to specify the type of the argument like &lt;a&gt;converter:variable_name&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
        &lt;tr&gt;
            &lt;th&gt;Type&lt;/th&gt;
            &lt;th&gt;Value&lt;/th&gt;
            &lt;th&gt;Use&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;string&lt;/td&gt;
            &lt;td&gt;(default) accepts any text without a slash&lt;/td&gt;
            &lt;td&gt;
                string:value
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;int&lt;/td&gt;
            &lt;td&gt;accepts positive integers&lt;/td&gt;
            &lt;td&gt;int:value&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;float&lt;/td&gt;
            &lt;td&gt;accepts positive floating point values&lt;/td&gt;
            &lt;td&gt;float:value&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;path&lt;/td&gt;
            &lt;td&gt;like string but also accepts slashes&lt;/td&gt;
            &lt;td&gt;path:value&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;uuid&lt;/td&gt;
            &lt;td&gt;accepts UUID strings&lt;/td&gt;
            &lt;td&gt;uuid:value&lt;/td&gt;
        &lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>webdev</category>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>🆘 Git tips - comandos úteis para sobreviver no dia a dia</title>
      <author>Lays Hidani</author>
      <pubDate>Fri, 03 Sep 2021 20:38:46 +0000</pubDate>
      <link>https://dev.to/layshidani/git-tips-comandos-uteis-para-sobreviver-no-dia-a-dia-1poo</link>
      <guid>https://dev.to/layshidani/git-tips-comandos-uteis-para-sobreviver-no-dia-a-dia-1poo</guid>
      <description>&lt;p&gt;O versionamento de código ajuda muito nossa vida como desenvolvedores. Porém muitas vezes nos deparamos com algumas situações difíceis com o git no dia a dia...&lt;/p&gt;

&lt;p&gt;Eu gosto de ir tomando notas sobre minhas descobertas conforme vou aprendendo e sobrevivendo para relembrar e consultar sempre que necessário.&lt;/p&gt;

&lt;p&gt;Separei uma lista de comandos úteis (um pouco além dos mais básicos, e aqueles que geralmente a gente esquece), espero que te ajudem também 😉&lt;/p&gt;

&lt;p&gt;Vamos lá...&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Substituir comando entre &amp;lt;&amp;gt;&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-url"&gt;
  &lt;/a&gt;
  # URL
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#verificar-qual-a-url-remota"&gt;
  &lt;/a&gt;
  Verificar qual a URL remota
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#editar-url-remota"&gt;
  &lt;/a&gt;
  Editar url remota
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote set-url origin &amp;lt;https://github.com/USERNAME/REPOSITORY.git&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#stash"&gt;
  &lt;/a&gt;
  Stash
&lt;/h1&gt;

&lt;p&gt;📖 Opções de Git stash (ver &lt;a href="https://www.atlassian.com/git/tutorials/saving-changes/git-stash"&gt;Atlassian&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;O comando git stash é utilizado para armazenar temporariamente as alterações que você fez, para poder trabalhar em outra coisa e depois voltar e reaplicá-las posteriormente.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eqc1tIbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6ovla8ny9rdct0b52mq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eqc1tIbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6ovla8ny9rdct0b52mq.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Fonte da imagem: Atlasian&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#stash-tracked-files"&gt;
  &lt;/a&gt;
  Stash &lt;strong&gt;tracked files&lt;/strong&gt;
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#stash-tamb%C3%A9m-dos-untracked-files"&gt;
  &lt;/a&gt;
  Stash também dos &lt;strong&gt;untracked files&lt;/strong&gt;
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash &lt;span class="nt"&gt;-u&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;onde &lt;code&gt;-u = --include-untracked&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#stash-de-todos-os-arquivos-incluindo-os-ignored-files"&gt;
  &lt;/a&gt;
  Stash de todos os arquivos, incluindo os &lt;strong&gt;ignored files&lt;/strong&gt;
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash &lt;span class="nt"&gt;-a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;onde &lt;code&gt;-a = --all&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#stash-com-descri%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Stash com descrição
&lt;/h2&gt;

&lt;p&gt;É possível adicionar mensagens/descrições aos &lt;em&gt;stashs&lt;/em&gt;, assim como fazemos com os commits:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash save &amp;lt;&lt;span class="s2"&gt;"message"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-stashs"&gt;
  &lt;/a&gt;
  Listar stashs
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deletar-stash-espec%C3%ADfica"&gt;
  &lt;/a&gt;
  Deletar &lt;em&gt;stash&lt;/em&gt; específica
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash drop stash@&lt;span class="o"&gt;{&lt;/span&gt;&amp;lt;index&amp;gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deletar-todas-stash"&gt;
  &lt;/a&gt;
  Deletar todas &lt;em&gt;stash&lt;/em&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash clear
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reaplicando-altera%C3%A7%C3%B5es-que-est%C3%A3o-em-stash"&gt;
  &lt;/a&gt;
  Reaplicando alterações que estão em &lt;em&gt;stash&lt;/em&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#padr%C3%A3o-%C3%BAltimo-stash"&gt;
  &lt;/a&gt;
  Padrão, último &lt;em&gt;stash&lt;/em&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash apply
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#escolher-qual-stash-como-em-um-array-utilize-o-raw-git-stash-list-endraw-para-visualizar-a-lista-de-stashs"&gt;
  &lt;/a&gt;
  Escolher qual &lt;em&gt;stash&lt;/em&gt; (como em um array, utilize o &lt;code&gt;git stash list&lt;/code&gt; para visualizar a lista de &lt;em&gt;stashs&lt;/em&gt;):
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash pop stash@&lt;span class="o"&gt;{&lt;/span&gt;&amp;lt;index&amp;gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#visualizar-stash-diff-stash-show"&gt;
  &lt;/a&gt;
  Visualizar Stash diff (stash show)
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash show
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-ou-para-visualiza%C3%A7%C3%A3o-completa-p-patch"&gt;
  &lt;/a&gt;
  # ou, para visualização completa (-p = --patch):
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash show &lt;span class="nt"&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#criar-branch-a-partir-de-stash"&gt;
  &lt;/a&gt;
  Criar branch a partir de &lt;em&gt;stash&lt;/em&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash branch &amp;lt;branch-name&amp;gt; stash@&lt;span class="o"&gt;{&lt;/span&gt;&amp;lt;index&amp;gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#-cherry-pick"&gt;
  &lt;/a&gt;
  # Cherry Pick
&lt;/h1&gt;

&lt;p&gt;O cherry-pick é um comando para 'Pegar' um commit de uma branch através do hash do commit e aplicá-lo em outra.&lt;/p&gt;

&lt;p&gt;Ex: commitei acidentalmente em outra branch, e desejo trazer o commit para minha branch certa.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pick-1-commit"&gt;
  &lt;/a&gt;
  Pick 1 commit
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git cherry-pick &amp;lt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pick-v%C3%A1rios-commits"&gt;
  &lt;/a&gt;
  Pick vários commits
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git cherry-pick &amp;lt;hash1&amp;gt; &amp;lt;hash2&amp;gt; &amp;lt;hash3&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pick-de-um-commit-at%C3%A9-outro-commit"&gt;
  &lt;/a&gt;
  Pick de um commit até outro commit
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git cherry-pick &amp;lt;hash1...hash3&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#-branchs"&gt;
  &lt;/a&gt;
  # Branchs
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#listar-branchs"&gt;
  &lt;/a&gt;
  Listar Branchs
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-branchs-matching"&gt;
  &lt;/a&gt;
  Listar branchs matching
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch &lt;span class="nt"&gt;--list&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;termo&amp;gt;*'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;exemplo, listar branchs, cujos nomes começam com &lt;strong&gt;fix/:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch &lt;span class="nt"&gt;--list&lt;/span&gt; &lt;span class="s1"&gt;'fix/*'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#renomear-branch"&gt;
  &lt;/a&gt;
  Renomear branch
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#local-e-se-voc%C3%AA-est%C3%A1-nessa-branch"&gt;
  &lt;/a&gt;
  Local, e se você está nessa branch
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch &lt;span class="nt"&gt;-m&lt;/span&gt; &amp;lt;new-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#local-e-se-voc%C3%AA-n%C3%A3o-est%C3%A1-nessa-branch"&gt;
  &lt;/a&gt;
  Local, e se você NÃO está nessa branch
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch &lt;span class="nt"&gt;-m&lt;/span&gt; &amp;lt;old-name&amp;gt; &amp;lt;new-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remota-seguir-os-passos-adicionais"&gt;
  &lt;/a&gt;
  Remota, seguir os passos adicionais
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push origin :&amp;lt;old-name&amp;gt; &amp;lt;new-name&amp;gt;

&lt;span class="c"&gt;# ou&lt;/span&gt;

git push origin &lt;span class="nt"&gt;--delete&lt;/span&gt; &amp;lt;old-name&amp;gt;
git push origin &amp;lt;new-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#resetar-a-branch-upstream-para-o-novo-nome-da-branch"&gt;
  &lt;/a&gt;
  Resetar a branch &lt;em&gt;upstream&lt;/em&gt; para o novo nome da branch
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push origin &lt;span class="nt"&gt;-u&lt;/span&gt; &amp;lt;new-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#remover-tag-de-uma-branch"&gt;
  &lt;/a&gt;
  Remover tag de uma branch
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#remover-tag-branch-remota"&gt;
  &lt;/a&gt;
  Remover tag, branch remota
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push origin :refs/tags/&amp;lt;tag-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remover-tag-branch-local"&gt;
  &lt;/a&gt;
  Remover tag, branch local
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git tag &lt;span class="nt"&gt;-d&lt;/span&gt; &amp;lt;tag-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#mudar-para-branch-anterior-atalho"&gt;
  &lt;/a&gt;
  Mudar para branch anterior [atalho]
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout -
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#-commits"&gt;
  &lt;/a&gt;
  # Commits
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#alterar-reescrever-mensagem-do-%C3%BAltimo-commit"&gt;
  &lt;/a&gt;
  Alterar (Reescrever) mensagem do último commit
&lt;/h2&gt;

&lt;p&gt;para renomear o commit, caso este seja seu último commit:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;nova mensagem de commit&amp;gt;'&lt;/span&gt; &lt;span class="nt"&gt;--amend&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;caso já tenha subido este último commit para a branch remota, será necessário fazer um push force pois estaremos sobreescrevendo a história&lt;/li&gt;
&lt;li&gt;caso não seja o ultimo commit, será necessário renomear através de rebase interativo ou reset —soft&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#refazer-o-%C3%BAltimo-commit-add-arquivos-ao-%C3%BAltimo-commit"&gt;
  &lt;/a&gt;
  Refazer o último commit (add arquivos ao último commit)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#refazer-o-%C3%BAltimo-commit-utilizando-a-mensagem-do-commit-anterior"&gt;
  &lt;/a&gt;
  Refazer o último commit utilizando a mensagem do commit anterior
&lt;/h3&gt;

&lt;p&gt;Considere ter esquecido alguma alteração em um arquivo após ter commitado. Você pode utilizar o &lt;code&gt;amend&lt;/code&gt; para commitar de novo utilizando a mesma mensagem do último commit:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# primeiro add o arquivo (git add &amp;lt;arquivos&amp;gt;) e em seguida:&lt;/span&gt;

git commit &lt;span class="nt"&gt;--amend&lt;/span&gt; &lt;span class="nt"&gt;--reuse-message&lt;/span&gt; HEAD
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ou&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#refazer-o-%C3%BAltimo-commit"&gt;
  &lt;/a&gt;
  Refazer o último commit
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# primeiro add o arquivo (git add &amp;lt;arquivos&amp;gt;) e em seguida:&lt;/span&gt;

git commit &lt;span class="nt"&gt;--amend&lt;/span&gt; &lt;span class="nt"&gt;--no-edit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#desfazer-commits"&gt;
  &lt;/a&gt;
  Desfazer commits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;com &lt;strong&gt;soft&lt;/strong&gt;: apaga só os commits&lt;/li&gt;
&lt;li&gt;com &lt;strong&gt;hard&lt;/strong&gt;: apaga os commits e o código&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#desfazer-o-%C3%BAltimo-commit"&gt;
  &lt;/a&gt;
  Desfazer o último commit
&lt;/h3&gt;

&lt;p&gt;mantendo as alterações do último commit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD^ 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;deletando todas as alterações do último commit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; HEAD^
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#desfazer-commits-por-quantidade-do-mais-atual-para-o-mais-antigo"&gt;
  &lt;/a&gt;
  Desfazer commits por quantidade (do mais atual para o mais antigo)
&lt;/h3&gt;

&lt;p&gt;Desfaz apenas os commits e mantem as alterações&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD~&amp;lt;quantidade de commits&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Desfaz os commits e o código&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; HEAD~&amp;lt;quantidade de commits&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#desfazer-commits-at%C3%A9-o-commit-x-com-soft-ou-hard"&gt;
  &lt;/a&gt;
  Desfazer commits até o commit x (com soft ou hard):
&lt;/h3&gt;

&lt;p&gt;Através de um &lt;code&gt;git log --oneline&lt;/code&gt;podemos verificar os commits, e obter a hash de referência.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD~&amp;lt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;o comando acima irá desfazer todos os commits posteriores à hash especificada.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#-git-log-lista-de-commits"&gt;
  &lt;/a&gt;
  # Git log (lista de commits)
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#listar-commits-resumido"&gt;
  &lt;/a&gt;
  Listar commits resumido
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-gr%C3%A1fico-branch"&gt;
  &lt;/a&gt;
  Listar commits gráfico branch
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--graph&lt;/span&gt; &lt;span class="nt"&gt;--oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-com-refer%C3%AAncias-associadas-branch-tag-etc"&gt;
  &lt;/a&gt;
  Listar commits com referências associadas (branch, tag, etc)
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--decorate&lt;/span&gt;

&lt;span class="c"&gt;# ou&lt;/span&gt;

git log &lt;span class="nt"&gt;--oneline&lt;/span&gt; &lt;span class="nt"&gt;--decorate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-por-quantidade"&gt;
  &lt;/a&gt;
  Listar commits por quantidade
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log -&amp;lt;quantidade&amp;gt;

&lt;span class="c"&gt;# ex: git log -5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-pesquisa-%E2%86%92-procurar-commits-com-uma-mensagempalavra"&gt;
  &lt;/a&gt;
  Listar commits pesquisa → procurar commits com uma mensagem/palavra
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;-S&lt;/span&gt; &amp;lt;&lt;span class="s1"&gt;'string-to-search'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-pesquisa-%E2%86%92-procurar-commits-com-uma-mensagempalavra-do-c%C3%B3digo"&gt;
  &lt;/a&gt;
  Listar commits pesquisa → procurar commits com uma mensagem/palavra do código
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;-S&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;string-to-search&amp;gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-pesquisa-%E2%86%92-procurar-commits-com-uma-mensagempalavra-da-mensagem-de-commit"&gt;
  &lt;/a&gt;
  Listar commits pesquisa → procurar commits com uma mensagem/palavra da mensagem de commit
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--grep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;string-to-search&amp;gt;'&lt;/span&gt;

&lt;span class="c"&gt;# ex: git log --grep='fix'&lt;/span&gt;
&lt;span class="c"&gt;# ex: git log --grep='fix' --oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-pesquisa-%E2%86%92-procurar-commits-por-arquivos"&gt;
  &lt;/a&gt;
  Listar commits pesquisa → procurar commits por arquivos
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--&lt;/span&gt; &amp;lt;file1.extension&amp;gt; &amp;lt;file2.extension&amp;gt; &amp;lt;...n&amp;gt;

&lt;span class="c"&gt;# ex: git log -- foo.ts bar.ts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-por-data"&gt;
  &lt;/a&gt;
  Listar commits por data
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#depois-de"&gt;
  &lt;/a&gt;
  Depois de
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--after&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;date&amp;gt;'&lt;/span&gt;

&lt;span class="c"&gt;# ex: &lt;/span&gt;
&lt;span class="c"&gt;# git log --after='2014-7-1'&lt;/span&gt;
&lt;span class="c"&gt;# git log --after='yesterday'&lt;/span&gt;
&lt;span class="c"&gt;# git log --after='1 week ago'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#depois-de"&gt;
  &lt;/a&gt;
  Depois de
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--before&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;date&amp;gt;'&lt;/span&gt;

&lt;span class="c"&gt;# ex: &lt;/span&gt;
&lt;span class="c"&gt;# git log --before='2014-7-1'&lt;/span&gt;
&lt;span class="c"&gt;# git log --before='yesterday'&lt;/span&gt;
&lt;span class="c"&gt;# git log --before='1 week ago'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#entre-datas"&gt;
  &lt;/a&gt;
  Entre datas
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--since&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;date&amp;gt;'&lt;/span&gt; &lt;span class="nt"&gt;--until&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;date&amp;gt;'&lt;/span&gt;

&lt;span class="c"&gt;# ex: git log --since='&amp;lt;JAN 01 2019&amp;gt;' --until='&amp;lt;DEC 25 2019&amp;gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-commits-por-autor"&gt;
  &lt;/a&gt;
  Listar commits por autor
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-autor"&gt;
  &lt;/a&gt;
  1 autor
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;name&amp;gt;'&lt;/span&gt;

&lt;span class="c"&gt;# ex: &lt;/span&gt;
&lt;span class="c"&gt;#  git log --author='Lays'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#mais-de-1-autor"&gt;
  &lt;/a&gt;
  Mais de 1 autor
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;name1&amp;gt;\|&amp;lt;name2&amp;gt;'&lt;/span&gt;

&lt;span class="c"&gt;# ex: &lt;/span&gt;
&lt;span class="c"&gt;#  git log --author='Lays\|Bruno'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#listar-%C3%BAltimo-commit"&gt;
  &lt;/a&gt;
  Listar último commit
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;-1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#-push"&gt;
  &lt;/a&gt;
  # Push
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#push-force"&gt;
  &lt;/a&gt;
  Push force
&lt;/h2&gt;

&lt;p&gt;Caso a gente reescreva a história de algo que já está commitado na branch remota, como por exemplo um squash, renomear commit etc, será necessário fazer um &lt;code&gt;push force&lt;/code&gt; para forçar a atualização remota, já que ela irá recusar a atualização por &lt;code&gt;push&lt;/code&gt; normal. Ou seja o &lt;code&gt;push force&lt;/code&gt;, sobreescreve tudo o que está na branch remota pelo que está na branch local. Tome cuidado com esse comando, e nunca faça &lt;code&gt;push force&lt;/code&gt; das branchs principais.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push &lt;span class="nt"&gt;--force&lt;/span&gt;

&lt;span class="c"&gt;# ou&lt;/span&gt;

git push &lt;span class="nt"&gt;-f&lt;/span&gt;

&lt;span class="c"&gt;# ou &lt;/span&gt;

git push origin +HEAD
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#fazer-push-sem-digitar-o-nome-da-branch-em-que-voc%C3%AA-est%C3%A1-head-atalho"&gt;
  &lt;/a&gt;
  Fazer push sem digitar o nome da branch em que você está (HEAD) [atalho]
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push origin HEAD
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#-reflog-o-salva-vidas"&gt;
  &lt;/a&gt;
  🆘 # Reflog - o Salva vidas
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#hist%C3%B3rico-listar-tudo-o-que-voc%C3%AA-fez-no-git"&gt;
  &lt;/a&gt;
  Histórico - Listar tudo o que você fez no git
&lt;/h2&gt;

&lt;p&gt;Enquanto o &lt;code&gt;git log&lt;/code&gt; exibe apenas os commits, o &lt;code&gt;git reflog&lt;/code&gt; exibe todo o histórico, incluindo  commits, checkout, merge, rebase etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reflog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;a partir da lista/histórico conseguimos reverter algumas alterações indesejadas.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#algumas-op%C3%A7%C3%B5es-com-git-reflog"&gt;
  &lt;/a&gt;
  Algumas opções com git reflog
&lt;/h2&gt;

&lt;p&gt;Após executar o &lt;code&gt;git reflog&lt;/code&gt;, serão listadas todas as modificações. Procure o hash referente ao ponto que você gostaria de voltar no tempo. Algumas opções para trabalhar com o reflog:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reverter todas as alterações para o hash específico (deleta todas as alterações feitas):&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; &amp;lt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reverter somente um arquivo específico para o estado em que estava a partir de um hash:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &amp;lt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt; &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fazer Cherry-pick a partir do hash:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git cherry-pick &amp;lt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#-merge-tips"&gt;
  &lt;/a&gt;
  # Merge tips
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#sem-fastforward"&gt;
  &lt;/a&gt;
  sem fast-forward
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;ff&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;branch&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The --no-ff flag prevents git merge from executing a "fast-forward" if it detects that your current HEAD is an ancestor of the commit you're trying to merge. A fast-forward is when, instead of constructing a merge commit, git just moves your branch pointer to point at the incoming commit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, occasionally you want to prevent this behavior from happening, typically because you want to maintain a specific branch topology (e.g. you're merging in a topic branch and you want to ensure it looks that way when reading history). In order to do that, you can pass the --no-ff flag and git merge will always construct a merge instead of fast-forwarding.&lt;/p&gt;

&lt;p&gt;_&lt;a href="https://newbedev.com/what-is-the-difference-between-git-merge-and-git-merge-no-ff"&gt;https://newbedev.com/what-is-the-difference-between-git-merge-and-git-merge-no-ff&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8D972skD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvxf2ouab9sllgvv3y4o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8D972skD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvxf2ouab9sllgvv3y4o.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Fonte da imagem: NewBeDev&lt;/em&gt; &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#-arquivos"&gt;
  &lt;/a&gt;
  # Arquivos
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#renomear-arquivo-local"&gt;
  &lt;/a&gt;
  Renomear arquivo local
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#1%C2%AA-op%C3%A7%C3%A3o-renomear-pelo-computador"&gt;
  &lt;/a&gt;
  1ª opção: renomear pelo computador
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;renomeie normalmente o arquivo pela pasta.&lt;/li&gt;
&lt;li&gt;Faça &lt;code&gt;git add do arquivo&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Assim ele irá passar para o estado de RENAMED quando você verificar pelo &lt;code&gt;git status&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Agora faça o commit do arquivo normalmente com &lt;code&gt;git commit&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#2%C2%AA-op%C3%A7%C3%A3o-pelo-git"&gt;
  &lt;/a&gt;
  2ª opção: pelo Git
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;No terminal: &lt;code&gt;git mv nome_antigo.extensão novo_nome.extensão&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Assim ele irá passar para o estado de RENAMED quando você verificar pelo &lt;code&gt;git status&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Agora faça o commit do arquivo normalmente com &lt;code&gt;git commit&lt;/code&gt; para consolidar a mudança&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#unstage-files"&gt;
  &lt;/a&gt;
  Unstage Files
&lt;/h2&gt;

&lt;p&gt;Se você deseja já fez &lt;code&gt;git add&lt;/code&gt; em um arquivo e ele está em STAGE pronto para ser commitado, mas deseja reverter (sem perder as alterações):&lt;/p&gt;

&lt;p&gt;Todos os arquivos:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Arquivo específico:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--&lt;/span&gt; &amp;lt;nome-do-arquivo&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#desfazer-altera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Desfazer alterações
&lt;/h2&gt;

&lt;p&gt;Supondo que você deseja desfazer alterações no arquivo (apagar alterações)… vai depender em que ponto ele está: untracked, modified, commited.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ao invés de desfazer, o mais aconselhado é reverter, para ao invés de apenas deletar a alteração, manter documentado. Ver reverter mais abaixo.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#desfazer-altera%C3%A7%C3%B5es-arquivo-em-untracked"&gt;
  &lt;/a&gt;
  Desfazer alterações: arquivo em :::untracked:::
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;--&lt;/span&gt;&amp;lt;nome_do_arquivo.extensão&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#desfazer-altera%C3%A7%C3%B5es-arquivos-em-modified-j%C3%A1-feito-add-mas-n%C3%A3o-commit"&gt;
  &lt;/a&gt;
  Desfazer alterações: arquivos em :::modified::: (já feito add, mas não commit)
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;1º tira ele de modified e leva de volta para untracked:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &amp;lt;nome_do_arquivo.extensão&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2º já é possível fazer checkout e reverter alterações&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;--&lt;/span&gt;&amp;lt;nome_do_arquivo.extensão&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#desfazer-altera%C3%A7%C3%B5es-arquivos-j%C3%A1-commitados"&gt;
  &lt;/a&gt;
  Desfazer alterações: arquivos já commitados
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1%C2%BA-caso-soft"&gt;
  &lt;/a&gt;
  1º caso SOFT
&lt;/h3&gt;

&lt;p&gt;Tirar arquivo de commit e passar de volta para staged, sem deletar o arquivo, usa-se o comando –soft + a hash do pai, ou seja, a hash do commit anterior ao que eu quero apagar. e depois é possível fazer o checkout.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; &amp;lt;hash_do_pai&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ou através da quantidade de commits (voltar atrás em nº de commits):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD~&amp;lt;numero de commits&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2%C2%BA-caso-mixed"&gt;
  &lt;/a&gt;
  2º caso MIXED
&lt;/h3&gt;

&lt;p&gt;Tirar arquivo de commit e passar para modified (fora do staged), sem deletar o arquivo, usa-se o comando –mixed + a hash do pai, ou seja, a hash do commit anterior ao que eu quero apagar e depois é possível fazer o checkout.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--mixed&lt;/span&gt; &amp;lt;hash_do_pai&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ou&lt;/p&gt;

&lt;p&gt;através da quantidade de commits (voltar atrás em nº de commits):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--mixed&lt;/span&gt; HEAD~&amp;lt;numero de commits&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3%C2%BA-caso-deletar-hard"&gt;
  &lt;/a&gt;
  3º caso DELETAR HARD
&lt;/h3&gt;

&lt;p&gt;Tirar arquivo de commit e deletar o arquivo (todos os commits e arquivos que estão depois do que o commit em questão deixam de existir, são deletados e fica só do commit pai/anterior para baixo). Usa-se o comando –hard + a hash do pai, ou seja, a hash do commit anterior ao que eu quero apagar e depois é possível fazer o checkout.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; &amp;lt;hash_do_pai&amp;gt;&amp;lt;hash_do_commit_a_ser_revertido&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ou&lt;/p&gt;

&lt;p&gt;através da quantidade de commits (voltar atrás em nº de commits):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; HEAD~&amp;lt;numero de commits&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reverter-altera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Reverter alterações
&lt;/h2&gt;

&lt;p&gt;Quase semelhante ao desfazer, mas nesse caso será criado um commit que indica a reversão. É o mais aconselhado.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1%C2%B0-caso"&gt;
  &lt;/a&gt;
  1° caso
&lt;/h3&gt;

&lt;p&gt;Com mensagem sobre a reversão, neste caso o editor de texto irá abrir para que você insira a mensagem sobre o por que da reversão, ou digite (-m “mensagem”) após o hash&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git revert &amp;lt;hash_do_commit_a_ser_revertido&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2%C2%B0-caso"&gt;
  &lt;/a&gt;
  2° caso
&lt;/h3&gt;

&lt;p&gt;Sem mensagem sobre a reversão:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git revert &amp;lt;hash_do_commit_a_ser_revertido&amp;gt; &lt;span class="nt"&gt;--no-edit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#desfazer-arquivo-deletado-da-m%C3%A1quina"&gt;
  &lt;/a&gt;
  Desfazer: arquivo deletado da máquina
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;--&lt;/span&gt; &amp;lt;nome_do_arquivo.extensão&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#remover-arquivopasta-pelo-git"&gt;
  &lt;/a&gt;
  Remover arquivo/pasta pelo Git
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#remover-arquivo"&gt;
  &lt;/a&gt;
  Remover arquivo
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git &lt;span class="nb"&gt;rm&lt;/span&gt; &amp;lt;nome_do_arquivo.extensão&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remover-pasta"&gt;
  &lt;/a&gt;
  Remover pasta
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; &amp;lt;nome da pasta&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#desfazer-altera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Desfazer alterações
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#desfazer-todas-as-altera%C3%A7%C3%B5es-untracked"&gt;
  &lt;/a&gt;
  Desfazer todas as alterações (untracked)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;visualizar arquivos que estão fora da &lt;em&gt;working tree&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clean &lt;span class="nt"&gt;-n&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;deletar arquivos:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clean &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#desfazer-todas-as-altera%C3%A7%C3%B5es-tracked"&gt;
  &lt;/a&gt;
  Desfazer todas as alterações (tracked)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#voltar-para-vers%C3%A3o-anterior-de-arquivo-checkout"&gt;
  &lt;/a&gt;
  Voltar para versão anterior de arquivo (checkout)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &amp;lt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &amp;lt;file-name.extension&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#remover-arquivo-adicionado-acidentalmente"&gt;
  &lt;/a&gt;
  Remover arquivo adicionado acidentalmente
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#arquivo-ainda-n%C3%A3o-commitado"&gt;
  &lt;/a&gt;
  Arquivo ainda não commitado:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &amp;lt;/path/file-name.extension&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#arquivo-j%C3%A1-commitado"&gt;
  &lt;/a&gt;
  Arquivo já commitado:
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#desfazer-merge-e-manter-o-hist%C3%B3rico-de-commits"&gt;
  &lt;/a&gt;
  Desfazer merge e manter o histórico de commits
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD~1

git reset &amp;lt;/path/file-name.extension&amp;gt; 

&lt;span class="nb"&gt;rm&lt;/span&gt; &amp;lt;/path/file-name.extension&amp;gt;

git commit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ir para a branch principal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &amp;lt;master_branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;git log para verificar a hash correta&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;fazer a reversão utilizando a hash do merge correspondente&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git revert &lt;span class="nt"&gt;-m&lt;/span&gt; 1 &amp;lt;merge-commit-hash&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#-squash-comprimir-commits-em-um-s%C3%B3"&gt;
  &lt;/a&gt;
  # Squash (‘comprimir’ commits em um só)
&lt;/h1&gt;

&lt;p&gt;Considerando que você deseja comprimir/transformar seus últimos 1 só.. para isso fazemos o squash.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;desfazer os últimos commits por quantidade (mantendo as alterações):
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD~&amp;lt;commit_quantity&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ex, desfazer 5 commits: &lt;code&gt;git reset --soft HEAD~5&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ou você pode optar por utilizar as hashs dos commits. O comando abaixo listará os commits, assim você pode verificar até qual commit você quer desfazer.&lt;br&gt;
(lembrando que os commits são listados do mais novo para o mais antigo)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--oneline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;em sequida:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; &amp;lt;hash_do_ultimo-commit_que_vc_quer_manter&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ex:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--oneline&lt;/span&gt;

&lt;span class="c"&gt;# listou:&lt;/span&gt;
&amp;lt;x323x32&amp;gt; meu commit 6
&amp;lt;kj56kj5&amp;gt; meu commit 5
&amp;lt;8f7g87f&amp;gt; meu commit 4
&amp;lt;k6k356j&amp;gt; meu commit 3
&amp;lt;jk4hj34&amp;gt; meu commit 2
&amp;lt;hjh2424&amp;gt; meu commit 1

&lt;span class="c"&gt;# supomos que você deseja desfazer os 3 primeiros commits &lt;/span&gt;
&lt;span class="c"&gt;# (hash_6, hash_5, hash_4) e manter a partir do hash_3, então você usará&lt;/span&gt;
&lt;span class="c"&gt;# o código do hash 3&lt;/span&gt;

git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; k6k356j
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;faz o processo de add e commit com a mensagem certa&lt;/li&gt;
&lt;li&gt;faz push para o repositório remoto&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#-configura%C3%A7%C3%B5es-globais"&gt;
  &lt;/a&gt;
  # Configurações globais
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#verificar-e-editar-configura%C3%A7%C3%B5es-globais"&gt;
  &lt;/a&gt;
  Verificar e editar configurações globais
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#configurar-usu%C3%A1rio-e-email"&gt;
  &lt;/a&gt;
  Configurar usuário e email
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &amp;lt;name&amp;gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &amp;lt;email&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#configurar-editor-padr%C3%A3o"&gt;
  &lt;/a&gt;
  Configurar editor padrão
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; core.editor &lt;span class="s1"&gt;'&amp;lt;editor_name&amp;gt; --wait'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;exemplo com o VSCode:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; core.editor &lt;span class="s1"&gt;'code --wait'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#-remover-git-no-reposit%C3%B3rio"&gt;
  &lt;/a&gt;
  # Remover Git no repositório
&lt;/h1&gt;

&lt;p&gt;Se por algum motivo não deseja mais usar o controle de versões e deseja 'desligar/remover' o Git do repositório (esse comando irá remover/deletar o Git do repositório em questão):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-rf&lt;/span&gt; .git/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Este comando irá deletar o arquivo onde o git guarda todas as informações e configurações do repositório. Pode ser feito dessa forma, ou deletando o arquivo manualmente.&lt;/p&gt;

&lt;p&gt;--&lt;br&gt;
&lt;em&gt;Foto de capa: &lt;a href="https://unsplash.com/@yancymin?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Yancy Min&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/git?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>18 amazing 🤩 GitHub repositories that will help you 🪄 make a beautiful project</title>
      <author>Roden</author>
      <pubDate>Fri, 03 Sep 2021 20:31:32 +0000</pubDate>
      <link>https://dev.to/kerthin/18-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-3pgo</link>
      <guid>https://dev.to/kerthin/18-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-3pgo</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Today I would like to give examples of good GitHub repositories that will help you implement complex animations, as well as useful functions in your projects.&lt;/p&gt;

&lt;p&gt;So let's get started&lt;/p&gt;

&lt;h1&gt;1. Lottie-Web/Bodymovin&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/airbnb"&gt;
        airbnb
      &lt;/a&gt; / &lt;a href="https://github.com/airbnb/lottie-web"&gt;
        lottie-web
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Render After Effects animations natively on Web, Android and iOS, and React Native. http://airbnb.io/lottie/
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Lottie for Web, &lt;a href="https://github.com/airbnb/lottie-android"&gt;Android&lt;/a&gt;, &lt;a href="https://github.com/airbnb/lottie-ios"&gt;iOS&lt;/a&gt;, &lt;a href="https://github.com/airbnb/lottie-react-native"&gt;React Native&lt;/a&gt;, and &lt;a href="https://aka.ms/lottie" rel="nofollow"&gt;Windows&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Lottie is a mobile library for Web,  and iOS that parses &lt;a href="http://www.adobe.com/products/aftereffects.html" rel="nofollow"&gt;Adobe After Effects&lt;/a&gt; animations exported as json with &lt;a href="https://github.com/airbnb/lottie-web"&gt;Bodymovin&lt;/a&gt; and renders them natively on mobile!&lt;/p&gt;
&lt;p&gt;For the first time, designers can create &lt;strong&gt;and ship&lt;/strong&gt; beautiful animations without an engineer painstakingly recreating it by hand. They say a picture is worth 1,000 words so here are 13,000:&lt;/p&gt;
&lt;h1&gt;
View documentation, FAQ, help, examples, and more at &lt;a href="http://airbnb.io/lottie/" rel="nofollow"&gt;airbnb.io/lottie&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/airbnb/lottie-webgifs/Example1.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wEX1NtkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/airbnb/lottie-webgifs/Example1.gif" alt="Example1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/airbnb/lottie-webgifs/Example2.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h2LvTS1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/airbnb/lottie-webgifs/Example2.gif" alt="Example2"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/airbnb/lottie-webgifs/Example3.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rNb_2xlp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/airbnb/lottie-webgifs/Example3.gif" alt="Example3"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/airbnb/lottie-webgifs/Community%202_3.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C1iNFeaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/airbnb/lottie-webgifs/Community%25202_3.gif" alt="Community"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/airbnb/lottie-webgifs/Example4.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g24cXe2K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/airbnb/lottie-webgifs/Example4.gif" alt="Example4"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Plugin installation&lt;/h1&gt;
&lt;h3&gt;
Option 1 (Recommended):&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Download it from from aescripts + aeplugins:&lt;/strong&gt;
&lt;a href="http://aescripts.com/bodymovin/" rel="nofollow"&gt;http://aescripts.com/bodymovin/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Option 2:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Or get it from the adobe store&lt;/strong&gt;
&lt;a href="https://creative.adobe.com/addons/products/12557" rel="nofollow"&gt;https://creative.adobe.com/addons/products/12557&lt;/a&gt;
CC 2014 and up.&lt;/p&gt;
&lt;h2&gt;
Other installation options:&lt;/h2&gt;
&lt;h3&gt;
Option 3:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;download the ZIP from the repo.&lt;/li&gt;
&lt;li&gt;Extract content and get the .zxp file from '/build/extension'&lt;/li&gt;
&lt;li&gt;Use the &lt;a href="http://aescripts.com/learn/zxp-installer/" rel="nofollow"&gt;ZXP installer&lt;/a&gt; from aescripts.com.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Option 4:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Close After Effects&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extract the zipped file on &lt;code&gt;build/extension/bodymovin.zxp&lt;/code&gt; to the adobe CEP folder:&lt;br&gt;
WINDOWS:&lt;br&gt;
&lt;code&gt;C:\Program Files&lt;/code&gt;…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/airbnb/lottie-web"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I want to start with my favorite repository. With this library, you can export the animation you created from &lt;code&gt;Adobe After Effects&lt;/code&gt; directly to your &lt;code&gt;website&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aRHtFZVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ab9lw773gbkzx8fd1h3b.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aRHtFZVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ab9lw773gbkzx8fd1h3b.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZytkJi5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/od5sa1hhenf3tebzxf1e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZytkJi5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/od5sa1hhenf3tebzxf1e.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_NIbazi3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3tejdtk8maoiwv17gvao.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_NIbazi3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3tejdtk8maoiwv17gvao.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;2. Parallax.js&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wagerfield"&gt;
        wagerfield
      &lt;/a&gt; / &lt;a href="https://github.com/wagerfield/parallax"&gt;
        parallax
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Parallax Engine that reacts to the orientation of a smart device
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/wagerfield/parallaxlogo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kn8x-3YU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/wagerfield/parallaxlogo.png" alt="Parallax.js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cdnjs.com/libraries/parallax" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3466bbd955a05ca7928ef655b5cd73c0f964db3fdab3503964245e701afa1111/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f706172616c6c61782e737667" alt="CDNJS"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Parallax Engine that reacts to the orientation of a smart device. Where no gyroscope or motion detection hardware is available, the position of the cursor is used instead.&lt;/p&gt;
&lt;p&gt;Check out the &lt;strong&gt;&lt;a href="https://wagerfield.github.com/parallax/"&gt;demo&lt;/a&gt;&lt;/strong&gt; to see it in action!&lt;/p&gt;
&lt;h1&gt;
Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/wagerfield/parallax#1-getting-started"&gt;1. Getting started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#11-installation"&gt;1.1 Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#12-preparations"&gt;1.2 Preparations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#13-run-parallax"&gt;1.3 Run Parallax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wagerfield/parallax#2-configuration"&gt;2. Configuration&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#21-programmatic-vs-declarative"&gt;2.1 Programmatic vs Declarative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#22-configuration-options"&gt;2.2 Configuration Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#3-methods"&gt;3. Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wagerfield/parallax#4-development"&gt;4. Development&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#41-running-the-project"&gt;4.1 Running the Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#42-opening-an-issue"&gt;4.2 Opening an Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#43-known-issues"&gt;4.3 Known Issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#5-faq"&gt;5. FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wagerfield/parallax#6-information"&gt;6. Information&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#61-license"&gt;6.1 License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wagerfield/parallax#62-authors"&gt;6.2 Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
1. Getting started&lt;/h1&gt;
&lt;h2&gt;
1.1 Installation&lt;/h2&gt;
&lt;h3&gt;
1.1 a) Using the CDN&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;&amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/parallax/3.1.0/parallax.min.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; to your markup&lt;/li&gt;
&lt;li&gt;Done!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Many thanks to the fine folks over at &lt;a href="https://cdnjs.com/" rel="nofollow"&gt;cdnjs&lt;/a&gt; for hosting our library.&lt;/p&gt;
&lt;h3&gt;
1.1 b) Beginners&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Head over to the &lt;a href="https://github.com/wagerfield/parallax/releases"&gt;releases&lt;/a&gt; Section&lt;/li&gt;
&lt;li&gt;Download &lt;code&gt;compiled.zip&lt;/code&gt; from the latest release&lt;/li&gt;
&lt;li&gt;Extract the ZIP archive and locate the &lt;code&gt;parallax.js&lt;/code&gt; and &lt;code&gt;parallax.min.js&lt;/code&gt; files
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;parallax.js&lt;/code&gt; if you want to snoop around in the code&lt;/li&gt;
&lt;li&gt;Use…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wagerfield/parallax"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;With this library, you can create a beautiful parallax effect that you can control with the mouse movement. You can also adjust the speed of moving objects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/Wmv1XOIvePuc3qO0Cb/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Wmv1XOIvePuc3qO0Cb/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;3. Flat Surface Shader [FSS]&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wagerfield"&gt;
        wagerfield
      &lt;/a&gt; / &lt;a href="https://github.com/wagerfield/flat-surface-shader"&gt;
        flat-surface-shader
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Flat Surface Shader for rendering illuminated triangles
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Flat Surface Shader [FSS]&lt;/h1&gt;
&lt;p&gt;Simple, lightweight &lt;strong&gt;Flat Surface Shader&lt;/strong&gt; written in &lt;strong&gt;JavaScript&lt;/strong&gt; for rendering lit &lt;strong&gt;Triangles&lt;/strong&gt; to a number of contexts. Currently there is support for &lt;strong&gt;WebGL&lt;/strong&gt;, &lt;strong&gt;Canvas 2D&lt;/strong&gt; and &lt;strong&gt;SVG&lt;/strong&gt;. Check out this &lt;a href="http://wagerfield.github.com/flat-surface-shader/"&gt;demo&lt;/a&gt; to see it in action.&lt;/p&gt;
&lt;h2&gt;
Understanding Lighting&lt;/h2&gt;
&lt;p&gt;Simply put, &lt;strong&gt;FSS&lt;/strong&gt; uses the &lt;a href="http://en.wikipedia.org/wiki/Lambertian_reflectance" rel="nofollow"&gt;Lambertian Reflectance&lt;/a&gt; model to calculate the color of a &lt;strong&gt;Triangle&lt;/strong&gt; based on an array of &lt;strong&gt;Light&lt;/strong&gt; sources within a &lt;strong&gt;Scene&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
Light&lt;/h3&gt;
&lt;p&gt;A &lt;strong&gt;Light&lt;/strong&gt; is composed of a 3D position &lt;strong&gt;Vector&lt;/strong&gt; and 2 &lt;strong&gt;Color&lt;/strong&gt; objects defining its &lt;strong&gt;ambient&lt;/strong&gt; &amp;amp; &lt;strong&gt;diffuse&lt;/strong&gt; emissions. These color channels interact with the &lt;strong&gt;Material&lt;/strong&gt; of a &lt;strong&gt;Mesh&lt;/strong&gt; to calculate the color of a &lt;strong&gt;Triangle&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
Triangle&lt;/h3&gt;
&lt;p&gt;A &lt;strong&gt;Triangle&lt;/strong&gt; is constructed from &lt;strong&gt;3 Vertices&lt;/strong&gt; which each define the &lt;strong&gt;x, y&lt;/strong&gt; and &lt;strong&gt;z&lt;/strong&gt; coordinates of a corner. Based on these &lt;strong&gt;3 Vertices&lt;/strong&gt;, a forth &lt;strong&gt;3D Vector&lt;/strong&gt; is automatically derived at the center of the &lt;strong&gt;Triangle&lt;/strong&gt; – this is…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wagerfield/flat-surface-shader"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--evrHMTVJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/40PrJABm6oBD2neqbG/giphy.gif%3Fcid%3D790b76119f62e40cd0c934d412fc4929c9a71e79e649acbf%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--evrHMTVJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/40PrJABm6oBD2neqbG/giphy.gif%3Fcid%3D790b76119f62e40cd0c934d412fc4929c9a71e79e649acbf%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;4. Hover.css&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/IanLunn"&gt;
        IanLunn
      &lt;/a&gt; / &lt;a href="https://github.com/IanLunn/Hover"&gt;
        Hover
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A collection of CSS3 powered hover effects to be applied to links, buttons, logos, SVG, featured images and so on. Easily apply to your own elements, modify or just use for inspiration. Available in CSS, Sass, and LESS.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Hover.css&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ianlunn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0379394e4207f98955259bf2376cae50095e17ac8dedfed1a3f2087f5bcdd02c/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f6c61746f2d626c75652e706e67" alt="Buy Me A Coffee" width="217" height="51"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A collection of CSS3 powered hover effects to be applied to links, buttons, logos, SVG, featured images and so on. Easily apply to your own elements, modify or just use for inspiration. Available in CSS, Sass, and LESS.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ianlunn.github.io/Hover" rel="nofollow"&gt;Demo&lt;/a&gt;  |
&lt;a href="http://ianlunn.co.uk/articles/hover-css-tutorial-introduction/" rel="nofollow"&gt;Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#downloadinstall"&gt;Download/Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/IanLunn/Hover#how-to-use"&gt;How To Use&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#a-copy-and-paste-an-effect"&gt;A. Copy and Paste an Effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#b-reference-hovercss"&gt;B. Reference Hover.css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#a-note-on-the-display-property"&gt;A Note on the display property&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#using-icon-effects"&gt;Using Icon Effects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/IanLunn/Hover#whats-included"&gt;What's Included?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#css"&gt;css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#scssless"&gt;scss/less&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#other"&gt;Other&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#browser-support"&gt;Browser Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#using-grunt-for-development"&gt;Using Grunt for Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/IanLunn/Hover#using-sassless-for-development"&gt;Using Sass/LESS for Development&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#_hacks"&gt;_hacks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#_mixins"&gt;_mixins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#_options"&gt;_options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#contribute-to-hovercss"&gt;Contribute to Hover.css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/IanLunn/Hover#licenses"&gt;Licenses&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#commercial-license"&gt;Commercial License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#open-source-license"&gt;Open-Source License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover#hire-ian-lunn"&gt;Hire Ian Lunn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Download/Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;NPM: &lt;code&gt;npm install hover.css --save&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Bower: &lt;code&gt;bower install hover --save&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanLunn/Hover/archive/master.zip"&gt;Download Zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
How To Use&lt;/h2&gt;
&lt;p&gt;Hover.css can be used in a number of ways; either copy and paste the effect you'd like to use in your own stylesheet or reference the stylesheet. Then just add the class name of the effect to the element you'd…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/IanLunn/Hover"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;5. Video.js Markers&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/spchuang"&gt;
        spchuang
      &lt;/a&gt; / &lt;a href="https://github.com/spchuang/videojs-markers"&gt;
        videojs-markers
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Displays customizable markers upon progress bars of videojs players
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
Not actively maintained anymore.&lt;/h2&gt;
&lt;h1&gt;
Video.js Markers&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/edbdc625985117492139bf01a5953f9b92c222cd079cfd2f02ae279afed512e9/68747470733a2f2f7261772e6769746875622e636f6d2f7370636875616e672f766964656f6a732d6d61726b6572732f6d61737465722f73637265656e73686f742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/edbdc625985117492139bf01a5953f9b92c222cd079cfd2f02ae279afed512e9/68747470733a2f2f7261772e6769746875622e636f6d2f7370636875616e672f766964656f6a732d6d61726b6572732f6d61737465722f73637265656e73686f742e706e67" alt="Alt text" title="Screen shot of videojs.markers"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A plugin that displays customizable markers upon progress bars of the video with &lt;a href="https://github.com/videojs/video.js/"&gt;Video.js&lt;/a&gt;. This could be used to show video breaks and show overlaid text on the video when playback reaches the specific break point.&lt;/p&gt;
&lt;h2&gt;
Demo and Documentation&lt;/h2&gt;
&lt;p&gt;See &lt;a href="http://www.sampingchuang.com/videojs-markers" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JSBin Demo can be found &lt;a href="http://jsbin.com/vifilen/1/edit" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Display markers on progress bar, with hover-over tooltips&lt;/li&gt;
&lt;li&gt;Display break overlays&lt;/li&gt;
&lt;li&gt;Flexible styling&lt;/li&gt;
&lt;li&gt;Support dynamically adding and removing markers&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Download&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Download master with git -- &lt;code&gt;git clone git@github.com:spchuang/videojs-markers.git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download zip/tar files for newest release&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download through bower -- &lt;code&gt;bower install videojs-markers&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Quick Start&lt;/h2&gt;
&lt;p&gt;Add the 'videojs.markers.js' plugin and stylesheet after including videojs script&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;link href="http://vjs.zencdn.net/4.2/video-js.css" rel="stylesheet"&amp;gt;
&amp;lt;link href="videojs.markers.css" rel="stylesheet"&amp;gt;
&amp;lt;script src="http://vjs.zencdn.net/4.2/video.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src='../src/videojs.markers.js'&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Basic usage: display break markers in the video.&lt;/h3&gt;
&lt;p&gt;To add breaks in the video, simply add a new time (in seconds) in the list of breaks option.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;// initialize video.js
var video&lt;/code&gt;&lt;/pre&gt;…&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/spchuang/videojs-markers"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;With this plugin, you can place the necessary marks on the video that is present on your site, so that you can easily switch to the time codes you need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gLTB8Tyj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ths63oa1tpsxgn25a20.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gLTB8Tyj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ths63oa1tpsxgn25a20.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;6. Magic Grid&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/e-oj"&gt;
        e-oj
      &lt;/a&gt; / &lt;a href="https://github.com/e-oj/Magic-Grid"&gt;
        Magic-Grid
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A simple, lightweight Javascript library for dynamic grid layouts.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/magic-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/843e7b1d658b0d7cc7182815cc780d78537f73379162256a87d9228e08ce7e38/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f6d616769632d677269642e7376673f7374796c653d666f722d7468652d6261646765" alt="MIT License"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/magic-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/89c02f9b8d7bde5145a42d6dfd5e42efe533c8ab628b354889dd0ab8c3e7caf2/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6d616769632d677269642e7376673f7374796c653d666f722d7468652d6261646765" alt="Version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/magic-grid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c74c9f674b30e00f5d4ef3b578c8367a1a7c2ffbc65166baf80aab373e579881/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f6d616769632d677269642e7376673f7374796c653d666f722d7468652d6261646765" alt="Downloads"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/e.oj" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/28aae05a0fba45679e8e27d90609601e249b64a5fe30dfef05495de4f4e318d4/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f76322f64656661756c742d79656c6c6f772e706e67" alt="Buy Me A Coffee" height="40px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Magic Grid &lt;a href="https://twitter.com/intent/tweet?text=Magic%20Grid%20-%20A%20simple,%20lightweight%20Javascript%20library%20for%20dynamic%20grid%20layouts.&amp;amp;url=https://github.com/e-oj/Magic-Grid&amp;amp;hashtags=MagicGrid,GridLayout,JS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;h2&gt;
A simple, lightweight Javascript library for dynamic grid layouts.&lt;/h2&gt;
&lt;p&gt;Creating a dynamic grid layout has never been easier. With Magic Grid, all you have to do is specify a container and listen for changes. A few other configuration options are available for convenience but it's all very simple. Check it out live &lt;b&gt;&lt;a href="https://jsfiddle.net/eolaojo/4pov0rdf/" rel="nofollow"&gt;on JSFIDDLE&lt;/a&gt;&lt;/b&gt;. You can read about the implementation details &lt;b&gt;&lt;a href="https://codeburst.io/magic-grid-f8e2221e7cef" rel="nofollow"&gt;on CodeBurst&lt;/a&gt;&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: Every item in the grid must have the same width.&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;
&lt;a href="https://github.com/e-oj/Magic-Grid/blob/master/test/grid.html"&gt;Sample Usage&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6089b9eda5025251a335de3f78868627760749680e71707efcb0d6da3af9b710/687474703a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d3137324553505a447751496637764c4d656c756e2d5f34526157445f2d6a39342d"&gt;&lt;img src="https://camo.githubusercontent.com/6089b9eda5025251a335de3f78868627760749680e71707efcb0d6da3af9b710/687474703a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d3137324553505a447751496637764c4d656c756e2d5f34526157445f2d6a39342d" alt="demo" width="850"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Why not CSS Grid?&lt;/h3&gt;
&lt;p&gt;This question is addressed in &lt;b&gt;&lt;a href="https://codeburst.io/magic-grid-f8e2221e7cef" rel="nofollow"&gt;the article&lt;/a&gt;&lt;/b&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Implementing a grid layout can quickly turn into a tricky task. If you have grid items that are always the same height, then you can probably make do with a Flexbox grid or some other CSS grid implementation. However, if you’re dealing with user-generated content, chances are, you don’t have the luxury of equal height components. One longer…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/e-oj/Magic-Grid"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This library will help you create an adaptive grid, where you do not have to create separate &lt;code&gt;@media styles&lt;/code&gt;. Just specify the container and that's it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u9Y-32f2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2f9l8iqohheixpi5hl8d.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u9Y-32f2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2f9l8iqohheixpi5hl8d.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;7. Vue/React Content Loader&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/egoist"&gt;
        egoist
      &lt;/a&gt; / &lt;a href="https://github.com/egoist/vue-content-loader"&gt;
        vue-content-loader
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SVG component to create placeholder loading, like Facebook cards loading.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
vue-content-loader&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://npmjs.com/package/vue-content-loader" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/827f587f18e3b16515327ac530b879ca5eb8a6aea64fb4a882578ce87c2cc72d/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7675652d636f6e74656e742d6c6f616465722e7376673f7374796c653d666c6174" alt="NPM version"&gt;&lt;/a&gt; &lt;a href="https://npmjs.com/package/vue-content-loader" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/738272af9a3b7314ed888f604ecd6a77b1d8d7f81e897ffdb32c0a2d66e575ee/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f7675652d636f6e74656e742d6c6f616465722e7376673f7374796c653d666c6174" alt="NPM downloads"&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/egoist/vue-content-loader/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/318ec0138a5f83087ed8112b9c4de1ba015e2c05b24fdfd28bcc2aa16a3e350c/68747470733a2f2f636972636c6563692e636f6d2f67682f65676f6973742f7675652d636f6e74656e742d6c6f616465722f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SVG component to create placeholder loading, like Facebook cards loading.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4838076/34308760-ec55df82-e735-11e7-843b-2e311fa7b7d0.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rm23uFCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/4838076/34308760-ec55df82-e735-11e7-843b-2e311fa7b7d0.gif" alt="preview"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;This is a Vue port for &lt;a href="https://github.com/danilowoz/react-content-loader"&gt;react-content-loader&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Completely customizable: you can change the colors, speed and sizes.&lt;/li&gt;
&lt;li&gt;Create your own loading: use the &lt;a href="https://create-content-loader.now.sh/" rel="nofollow"&gt;online tool&lt;/a&gt; to create your custom loader easily.&lt;/li&gt;
&lt;li&gt;You can use it right now: there are a lot of presets already.&lt;/li&gt;
&lt;li&gt;Performance
&lt;ul&gt;
&lt;li&gt;Tree-shakable and highly optimized bundle.&lt;/li&gt;
&lt;li&gt;Pure SVG, so it's works without any javascript, canvas, etc.&lt;/li&gt;
&lt;li&gt;Pure functional components.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;p&gt;⚠️ &lt;strong&gt;The latest version is compatible with Vue 3 only.&lt;/strong&gt; For Vue 2 &amp;amp; Nuxt 2, use &lt;code&gt;vue-content-loader@^0.2&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;With npm:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm i vue-content-loader&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Or with yarn:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add vue-content-loader&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;CDN: &lt;a href="https://unpkg.com/vue-content-loader/" rel="nofollow"&gt;UNPKG&lt;/a&gt; | &lt;a href="https://cdn.jsdelivr.net/npm/vue-content-loader/" rel="nofollow"&gt;jsDelivr&lt;/a&gt; (available as &lt;code&gt;window.contentLoaders&lt;/code&gt;)&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;👀👉 Demo: &lt;a href="https://codesandbox.io/s/vue-content-loader-igfyf?file=/src/App.vue" rel="nofollow"&gt;CodeSandbox&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-html-vue position-relative js-code-highlight"&gt;
&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;template&lt;/span&gt;&amp;amp;gt
  &amp;lt;&lt;span class="pl-ent"&gt;content-loader&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;content-loader&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;template&lt;/span&gt;&amp;gt;

&lt;span class="pl-s1"&gt;&amp;lt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-s1"&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; { &lt;span class="pl-smi"&gt;ContentLoader&lt;/span&gt; } &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vue-content-loader&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-s1"&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; &lt;span class="pl-c1"&gt;default&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-s1"&gt;  components&lt;span class="pl-k"&gt;:&lt;/span&gt; {&lt;/span&gt;
&lt;span class="pl-s1"&gt;    ContentLoader&lt;/span&gt;
&lt;span class="pl-s1"&gt;  }&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/egoist/vue-content-loader"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;SVG component to create placeholder loading, like Facebook cards loading.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CgjhJ-IB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/EzDts3uOGLkzqB6JMd/giphy.gif%3Fcid%3D790b7611babc983ffdf784eefb5f8ffd3b26eddc3d9011e0%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CgjhJ-IB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/EzDts3uOGLkzqB6JMd/giphy.gif%3Fcid%3D790b7611babc983ffdf784eefb5f8ffd3b26eddc3d9011e0%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Version for &lt;code&gt;React.js&lt;/code&gt;:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/danilowoz"&gt;
        danilowoz
      &lt;/a&gt; / &lt;a href="https://github.com/danilowoz/react-content-loader"&gt;
        react-content-loader
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ⚪ SVG-Powered component to easily create skeleton loadings.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4838076/34419335-5669c3f8-ebea-11e7-9668-c47b7846970b.png"&gt;&lt;img width="350" alt="react-content-loader" src="https://res.cloudinary.com/practicaldev/image/fetch/s--KdUp9yEA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/4838076/34419335-5669c3f8-ebea-11e7-9668-c47b7846970b.png"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4838076/34308760-ec55df82-e735-11e7-843b-2e311fa7b7d0.gif"&gt;&lt;img width="400" alt="Example's react-content-loader" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rm23uFCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/4838076/34308760-ec55df82-e735-11e7-843b-2e311fa7b7d0.gif"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;SVG-Powered component to easily create placeholder loadings (like Facebook's cards loading).&lt;/p&gt;

&lt;h2&gt;
Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
⚙️ &lt;strong&gt;Customizable:&lt;/strong&gt; Feel free to change the colors, speed, sizes, and even &lt;strong&gt;RTL&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;
👌 &lt;strong&gt;Plug and play:&lt;/strong&gt; with many presets to use, see the &lt;a href="http://danilowoz.com/create-content-loader/#gallery" rel="nofollow"&gt;examples&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;
✏️ &lt;strong&gt;DIY:&lt;/strong&gt; use the &lt;a href="https://danilowoz.com/create-content-loader" rel="nofollow"&gt;create-content-loader&lt;/a&gt; to create your own custom loaders easily;&lt;/li&gt;
&lt;li&gt;
📱 &lt;strong&gt;React Native support&lt;/strong&gt;: same API, as same powerful features;&lt;/li&gt;
&lt;li&gt;
⚛️ &lt;strong&gt;Really lightweight:&lt;/strong&gt; less than &lt;strong&gt;2kB&lt;/strong&gt; and &lt;strong&gt;0 dependencies&lt;/strong&gt; for web version;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Index&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#gettingstarted"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/danilowoz/react-content-loader#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#native"&gt;Native&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#options"&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#similarpackages"&gt;Similar packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danilowoz/react-content-loader#development"&gt;Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Getting Started&lt;/h2&gt;

&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm i react-content-loader --save&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add react-content-loader&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
For React Native&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm i react-content-loader react-native-svg --save&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add react-content-loader react-native-svg&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;CDN from &lt;a href="https://www.jsdelivr.com/package/npm/react-content-loader" rel="nofollow"&gt;JSDELIVR&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;There are two ways to use it:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Presets, see the &lt;a href="https://danilowoz.com/react-content-loader/" rel="nofollow"&gt;examples&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;ContentLoader&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;Facebook&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-content-loader'&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-v"&gt;MyLoader&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;ContentLoader&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-v"&gt;MyFacebookLoader&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Facebook&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/danilowoz/react-content-loader"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;8. React Image Gallery&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/xiaolin"&gt;
        xiaolin
      &lt;/a&gt; / &lt;a href="https://github.com/xiaolin/react-image-gallery"&gt;
        react-image-gallery
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      React carousel image gallery component with thumbnail support  🖼
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
React Image Gallery&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://badge.fury.io/js/react-image-gallery" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c3dc34c8244e0987205f2d004aec27b013a0fb293d50262152851151d540e1d/68747470733a2f2f62616467652e667572792e696f2f6a732f72656163742d696d6167652d67616c6c6572792e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/react-image-gallery" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be994b9d7b45d701f09b00e951aae305a059bc9b8bbe191ea7d65a16c51ee7f3/687474703a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f72656163742d696d6167652d67616c6c6572792e7376673f7374796c653d666c6174" alt="Download Count"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/package/react-image-gallery" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1e915030d8f840db3853ce8cc7be315b5c97d0e7f399f1326f1f9e507c43ee2c/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d696d6167652d67616c6c657279" alt="Bundle size"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Live Demo (try it on mobile for swipe support)&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://linxtion.com/demo/react-image-gallery" rel="nofollow"&gt;&lt;code&gt;linxtion.com/demo/react-image-gallery&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/xiaolin/react-image-gallery/raw/master/static/image_gallery_v1.0.2.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vNw0NNxL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/xiaolin/react-image-gallery/raw/master/static/image_gallery_v1.0.2.gif" alt="demo gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React image gallery is a React component for building image galleries and carousels&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Mobile swipe gestures&lt;/li&gt;
&lt;li&gt;Thumbnail navigation&lt;/li&gt;
&lt;li&gt;Fullscreen support&lt;/li&gt;
&lt;li&gt;Custom rendered slides&lt;/li&gt;
&lt;li&gt;RTL support&lt;/li&gt;
&lt;li&gt;Responsive design&lt;/li&gt;
&lt;li&gt;Tons of customization options (see props below)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Getting started&lt;/h2&gt;
&lt;p&gt;React Image Gallery requires &lt;strong&gt;React 16.0.0 or later.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install react-image-gallery
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Style import (with webpack)&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;# SCSS
@import "~react-image-gallery/styles/scss/image-gallery.scss"
# CSS
@import "~react-image-gallery/styles/css/image-gallery.css";
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Example&lt;/h3&gt;
&lt;p&gt;Need more example? See &lt;a href="https://github.com/xiaolin/react-image-gallery/blob/master/example/app.js"&gt;&lt;code&gt;example/app.js&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;ImageGallery&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-image-gallery'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;images&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;
  &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;original&lt;/span&gt;: &lt;span class="pl-s"&gt;'https://picsum.photos/id/1018/1000/600/'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;thumbnail&lt;/span&gt;: &lt;span class="pl-s"&gt;'https://picsum.photos/id/1018/250/150/'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;original&lt;/span&gt;: &lt;span class="pl-s"&gt;'https://picsum.photos/id/1015/1000/600/'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;thumbnail&lt;/span&gt;: &lt;span class="pl-s"&gt;'https://picsum.photos/id/1015/250/150/'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;original&lt;/span&gt;: &lt;span class="pl-s"&gt;'https://picsum.photos/id/1019/1000/600/'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;thumbnail&lt;/span&gt;: &lt;span class="pl-s"&gt;'https://picsum.photos/id/1019/250/150/'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-v"&gt;MyGallery&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;Component&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-en"&gt;render&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;ImageGallery&lt;/span&gt; &lt;span class="pl-c1"&gt;items&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-s1"&gt;images&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h1&gt;
Props&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;items&lt;/code&gt;…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/xiaolin/react-image-gallery"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s-NBwOtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbx76t756fw1ct3g00er.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s-NBwOtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbx76t756fw1ct3g00er.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;9. WebSlides&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/webslides"&gt;
        webslides
      &lt;/a&gt; / &lt;a href="https://github.com/webslides/WebSlides"&gt;
        WebSlides
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Create HTML presentations in seconds —
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
WebSlides = Create stories with Karma&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/83d3746e5881c1867665223424263d8e604df233d0a11aae0813e0414d433943/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="MIT License"&gt;&lt;/a&gt;
&lt;a href="https://github.com/webslides/webslides/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/c6883e1508adedebaaa4c6302f75c8ae627b4be3801d4dd7665638f8a40c478c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f776562736c696465732f776562736c696465732e737667" alt="Release"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/webslides/WebSlides" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/422375738ab6f6dcdb4afd5eab7a5364ba7c0c95184391de46988ec2abb5b118/68747470733a2f2f636f6465636f762e696f2f67682f776562736c696465732f576562536c696465732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.me/jlantunez/8" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2bfa6102e99ff9a137185897b0a566aa0977a4790348c462e6951829e787af8f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d677265656e2e737667" alt="Donate"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/webslides" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da078e6c9d3d5792bff8e49a2e9c9f19be63155c662ed90d91772097fc9d02dd/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f6769746875622e636f6d2f776562736c696465732f776562736c696465732e7376673f7374796c653d736f6369616c" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Finally, everything you need to make HTML presentations, landings, and longforms in a beautiful way. Just a basic knowledge of HTML and CSS is required. Designers, marketers, and journalists can now focus on the content. — &lt;a href="https://webslides.tv/demos" rel="nofollow"&gt;https://webslides.tv/demos&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
Download&lt;/h3&gt;
&lt;p&gt;Simply choose a demo and customize it in seconds. Latest version: &lt;a href="https://webslides.tv/webslides-latest.zip" rel="nofollow"&gt;webslides.tv/webslides-latest.zip&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
What's in the download?&lt;/h3&gt;
&lt;p&gt;The download includes demos and images (devices and logos)
All content is for demo purposes only. Images are property of their respective owners.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;webslides/
├── index.html
├── css/
│   ├── base.css
│   └── colors.css
│   └── svg-icons.css (optional)
├── js/
│   ├── webslides.js
│   └── svg-icons.js (optional)
└── demos/
└── images/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Navigation (horizontal and vertical sliding): remote presenters, touchpad, keyboard shortcuts, and swipe.&lt;/li&gt;
&lt;li&gt;Slide counter.&lt;/li&gt;
&lt;li&gt;Permalinks: go to a specific slide.&lt;/li&gt;
&lt;li&gt;Autoslide.&lt;/li&gt;
&lt;li&gt;Click to nav.&lt;/li&gt;
&lt;li&gt;Simple CSS alignments. Put content wherever you want (vertical centering...)&lt;/li&gt;
&lt;li&gt;40+ components…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/webslides/WebSlides"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--by0jF_Q2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/ZtqYdOuCxPsAHWUyyv/giphy.gif%3Fcid%3D790b76110e13186bab19f9adf313e1d4b3d5f8ca34ba6e62%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--by0jF_Q2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/ZtqYdOuCxPsAHWUyyv/giphy.gif%3Fcid%3D790b76110e13186bab19f9adf313e1d4b3d5f8ca34ba6e62%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;10. SVG.js&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/svgdotjs"&gt;
        svgdotjs
      &lt;/a&gt; / &lt;a href="https://github.com/svgdotjs/svg.js"&gt;
        svg.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The lightweight library for manipulating and animating SVG
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
SVG.js&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/svgdotjs/svg.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0f214ffd86acd53b9470972b3c0809d9166201bb6b5d5b2e1b7f06df52566ca/68747470733a2f2f7472617669732d63692e6f72672f737667646f746a732f7376672e6a732e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/svgdotjs/svg.js?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/150265f2133714cbb7f942a720d23c14f66f332e5d026de6d4cc41ebc92b31bd/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f737667646f746a732f7376672e6a732f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status"&gt;&lt;/a&gt;
&lt;a href="https://cdnjs.com/libraries/svg.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9d522206fe24a9d5bb763c837154221397dc69a7ee03c4ebae49f05d09735be/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f7376672e6a732e737667" alt="Cdnjs"&gt;&lt;/a&gt;
&lt;a href="https://cdn.jsdelivr.net/npm/@svgdotjs/svg.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6f58df3d3235bc102ae4bcfb119cbd912d564235753e0fd562b8737470486115/68747470733a2f2f62616467656e2e6e65742f6a7364656c6976722f762f6e706d2f40737667646f746a732f7376672e6a73" alt="jsdelivr"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/svgdotjs/svg.js?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/826e48be372a07bb7204b2b1522686a7d586b6259a5695da71600b304262b3ac/68747470733a2f2f6261646765732e6769747465722e696d2f737667646f746a732f7376672e6a732e737667" alt="Join the chat at https://gitter.im/svgdotjs/svg.js"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/svg_js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/033473ff239afd32ae7389c36f4f6166d2d5d13fd45b23ec6e7a41a954275107/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f547769747465722d407376675f5f6a732d677265656e2e737667" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A lightweight library for manipulating and animating SVG, without any dependencies.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SVG.js is licensed under the terms of the MIT License.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h4&gt;
Npm:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;npm install @svgdotjs/svg.js&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
Yarn:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;yarn add @svgdotjs/svg.js&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
CDNs:&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://cdnjs.com/libraries/svg.js" rel="nofollow"&gt;https://cdnjs.com/libraries/svg.js&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cdn.jsdelivr.net/npm/@svgdotjs/svg.js" rel="nofollow"&gt;https://cdn.jsdelivr.net/npm/@svgdotjs/svg.js&lt;/a&gt;&lt;br&gt;
&lt;a href="https://unpkg.com/@svgdotjs/svg.js" rel="nofollow"&gt;https://unpkg.com/@svgdotjs/svg.js&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Check &lt;a href="https://svgjs.dev/docs/3.0/" rel="nofollow"&gt;svgjs.dev&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=ulima.ums%40googlemail.com&amp;amp;lc=US&amp;amp;item_name=SVG.JS&amp;amp;currency_code=EUR&amp;amp;bn=PP-DonationsBF%3Abtn_donate_74x21.png%3ANonHostedGuest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2bfa6102e99ff9a137185897b0a566aa0977a4790348c462e6951829e787af8f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d677265656e2e737667" alt="Donate"&gt;&lt;/a&gt; or &lt;a href="https://github.com/sponsors/Fuzzyma"&gt;&lt;img src="https://camo.githubusercontent.com/4a9167617917bd53e45d9bd102338687bb359d582e557a8d750d2d7b4b91c868/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53706f6e736f722d7376672e6a732d677265656e2e737667" alt="Sponsor"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/svgdotjs/svg.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;&lt;strong&gt;Open Result&lt;/strong&gt;&lt;br&gt;
&lt;iframe src="https://jsfiddle.net/Fuzzy/f2wbgx5a//embedded//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;11. React Motion&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/chenglou"&gt;
        chenglou
      &lt;/a&gt; / &lt;a href="https://github.com/chenglou/react-motion"&gt;
        react-motion
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A spring that solves your animation problems.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
React-Motion&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/chenglou/react-motion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/51eb92b7d5a7c065ab6af56ef17717f2ed8b119582a0b3e6fff1a6b46581088c/68747470733a2f2f7472617669732d63692e6f72672f6368656e676c6f752f72656163742d6d6f74696f6e2e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/react-motion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/21672335dfb8e778325227dcd4c45af5085d4b00126860adc974cae91203caf1/68747470733a2f2f62616467652e667572792e696f2f6a732f72656163742d6d6f74696f6e2e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="http://badge.fury.io/bo/react-motion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4df8e8c8cecec455587b7be48253ffbaa6757a523ccd52b2ed8ead4ede4939d5/68747470733a2f2f62616467652e667572792e696f2f626f2f72656163742d6d6f74696f6e2e737667" alt="Bower version"&gt;&lt;/a&gt;
&lt;a href="https://discordapp.com/invite/0ZcbPKXt5bYzmcI0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/af82efa899ccd52614a5ab0980af8176b7eeac8eb0710b0cff1dbbf11543c1d7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646973636f72642d72656163742d2d6d6f74696f6e253430726561637469666c75782d3733386264372e7376673f7374796c653d666c6174" alt="react-motion channel on discord"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-v"&gt;Motion&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;spring&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-motion'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// In your render...&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Motion&lt;/span&gt; &lt;span class="pl-c1"&gt;defaultStyle&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;style&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-en"&gt;spring&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;x&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;Motion&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Animate a counter from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;10&lt;/code&gt;. For more advanced usage, see below.&lt;/p&gt;
&lt;h3&gt;
Install&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Npm: &lt;code&gt;npm install --save react-motion&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bower: &lt;strong&gt;do not install with &lt;code&gt;bower install react-motion&lt;/code&gt;, it won't work&lt;/strong&gt;. Use &lt;code&gt;bower install --save https://unpkg.com/react-motion/bower.zip&lt;/code&gt;. Or in &lt;code&gt;bower.json&lt;/code&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-json position-relative js-code-highlight"&gt;
&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dependencies&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;react-motion&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://unpkg.com/react-motion/bower.zip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }
}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;then include as&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;bower_components/react-motion/build/react-motion.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;1998 Script Tag:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://unpkg.com/react-motion/build/react-motion.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
(Module exposed as `ReactMotion`)&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Works with React-Native v0.18+&lt;/strong&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/chenglou/react-motion"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;h1&gt;What does this library try to solve?&lt;/h1&gt;

&lt;p&gt;For 95% of use-cases of animating components, we don't have to resort to using hard-coded easing curves and duration. Set up a stiffness and damping for your UI element, and let the magic of physics take care of the rest. This way, you don't have to worry about petty situations such as interrupted animation behavior. It also greatly simplifies the API.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FtMddm5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/5UFoMZysidoVnERZQI/giphy.gif%3Fcid%3D790b76116ad776fcb8c42b1634d2baa5527c18973e6d69f6%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FtMddm5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/5UFoMZysidoVnERZQI/giphy.gif%3Fcid%3D790b76116ad776fcb8c42b1634d2baa5527c18973e6d69f6%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MdM3cPGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/J7i7arvCqD2odP2jn7/giphy.gif%3Fcid%3D790b7611b88b5b8670057396ed9d257100de01c7066015c2%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MdM3cPGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/J7i7arvCqD2odP2jn7/giphy.gif%3Fcid%3D790b7611b88b5b8670057396ed9d257100de01c7066015c2%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TVsN6orE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/Pbb6RK6yFezhCo71zo/giphy.gif%3Fcid%3D790b76117a7d69fb498be4839971ae3d68b6ae552d487312%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TVsN6orE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/Pbb6RK6yFezhCo71zo/giphy.gif%3Fcid%3D790b76117a7d69fb498be4839971ae3d68b6ae552d487312%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;12. RELLAX&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dixonandmoe"&gt;
        dixonandmoe
      &lt;/a&gt; / &lt;a href="https://github.com/dixonandmoe/rellax"&gt;
        rellax
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Lightweight, vanilla javascript parallax library
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
RELLAX&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.org/package/rellax" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5bd9fedd6d6e0bacfba3d51ed394d0de1e659a87b11b1d5c84afc70cf42143f1/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656c6c61782e737667" alt="NPM Package"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=rellax" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/de228f666028300fee0452062fd9cd2949ece3d73a18dceea3d31a7a011834d3/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e2f72656c6c61782e7376673f6c6162656c3d6d696e6966696564" alt="Minified Size"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=rellax" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9452b64737484fa6f7a9fadf8eebf9f1bac92d0f27027eb0b5ddb394c161fd7/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f72656c6c61782e7376673f6c6162656c3d677a6970706564" alt="Gzipped Size"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rellax is a buttery smooth, super lightweight, vanilla javascript parallax library. &lt;strong&gt;Update:&lt;/strong&gt; Rellax now works on mobile (v1.0.0).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dixonandmoe.com/rellax/" rel="nofollow"&gt;Demo Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;h3&gt;
Using npm&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;npm install rellax --save&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
Using yarn&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;yarn add rellax&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
CDN&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;script src="https://cdn.jsdelivr.net/gh/dixonandmoe/rellax@master/rellax.min.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
Download Locally&lt;/h3&gt;
&lt;p&gt;if you're old school like us download and insert &lt;code&gt;rellax.min.js&lt;/code&gt; in your html&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-c1"&gt;class&lt;/span&gt;="&lt;span class="pl-s"&gt;rellax&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  I’m that default chill speed of "-2"
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-c1"&gt;class&lt;/span&gt;="&lt;span class="pl-s"&gt;rellax&lt;/span&gt;" &lt;span class="pl-c1"&gt;data-rellax-speed&lt;/span&gt;="&lt;span class="pl-s"&gt;7&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  I’m super fast!!
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-c1"&gt;class&lt;/span&gt;="&lt;span class="pl-s"&gt;rellax&lt;/span&gt;" &lt;span class="pl-c1"&gt;data-rellax-speed&lt;/span&gt;="&lt;span class="pl-s"&gt;-4&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  I’m extra slow and smooth
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://cdn.jsdelivr.net/gh/dixonandmoe/rellax@master/rellax.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;// Accepts any class name&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;rellax&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;Rellax&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'.rellax'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;// Also can pass in optional settings block&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;rellax&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/dixonandmoe/rellax"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HnEY36_W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/QuE2jqcQ2aiUvZluXx/giphy.gif%3Fcid%3D790b7611a4457fa52ccbdab26f75ae5d94e16e6f642669bc%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HnEY36_W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/QuE2jqcQ2aiUvZluXx/giphy.gif%3Fcid%3D790b7611a4457fa52ccbdab26f75ae5d94e16e6f642669bc%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;13. Dynamics.js&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/michaelvillar"&gt;
        michaelvillar
      &lt;/a&gt; / &lt;a href="https://github.com/michaelvillar/dynamics.js"&gt;
        dynamics.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Javascript library to create physics-based animations
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Dynamics.js&lt;/h1&gt;
&lt;p&gt;Dynamics.js is a JavaScript library to create physics-based animations&lt;/p&gt;
&lt;p&gt;To see some demos, check out &lt;a href="http://dynamicsjs.com" rel="nofollow"&gt;dynamicsjs.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;Download:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/michaelvillar/dynamics.js/releases"&gt;GitHub releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/dynamics.js" rel="nofollow"&gt;npm&lt;/a&gt;: &lt;code&gt;npm install dynamics.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;bower: &lt;code&gt;bower install dynamics.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Include &lt;code&gt;dynamics.js&lt;/code&gt; into your page:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;dynamics.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You can animate CSS properties of any DOM element.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;el&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;document&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;getElementById&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"logo"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-s1"&gt;dynamics&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;animate&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;el&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;translateX&lt;/span&gt;: &lt;span class="pl-c1"&gt;350&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;scale&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;opacity&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;type&lt;/span&gt;: &lt;span class="pl-s1"&gt;dynamics&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;spring&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;frequency&lt;/span&gt;: &lt;span class="pl-c1"&gt;200&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;friction&lt;/span&gt;: &lt;span class="pl-c1"&gt;200&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;duration&lt;/span&gt;: &lt;span class="pl-c1"&gt;1500&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You also can animate SVG properties.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;path&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;document&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;querySelector&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"path"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-s1"&gt;dynamics&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;animate&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;path&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;d&lt;/span&gt;: &lt;span class="pl-s"&gt;"M0,0 L0,100 L100,50 L0,0 Z"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;fill&lt;/span&gt;: &lt;span class="pl-s"&gt;"#FF0000"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;rotateZ&lt;/span&gt;: &lt;span class="pl-c1"&gt;45&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c"&gt;// rotateCX and rotateCY are the center of&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/michaelvillar/dynamics.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XBIU1HF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/FX1skO126IairT4Ioz/giphy.gif%3Fcid%3D790b761199db9ca8a999651e8e0fa58cd75e2b3ee45aa90b%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XBIU1HF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/FX1skO126IairT4Ioz/giphy.gif%3Fcid%3D790b761199db9ca8a999651e8e0fa58cd75e2b3ee45aa90b%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;14. mo · js&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mojs"&gt;
        mojs
      &lt;/a&gt; / &lt;a href="https://github.com/mojs/mojs"&gt;
        mojs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The motion graphics toolbelt for the web
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
mo · js – &lt;a href="https://www.npmjs.com/package/@mojs/core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc583d59478eb20c81962ccddcf7e72ebed40b8f4ec7753db4e93eacbf2c0ef1/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f406d6f6a732f636f72652e737667" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://github.com/mojs/mojs/actions?query=workflow:%22CI%22"&gt;&lt;img src="https://camo.githubusercontent.com/6e08ec368d88d212d5e9662da4f0d96730b9eae452d2f915281b4e3d925c8774/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6d6f6a732f6d6f6a732f4349" alt="ci"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/mojs/mojs?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bea2e546bdb922ce5c30ad7d8371e1833571ae6623c9f57921694e9d7541ed71/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d6f6a732f6d6f6a732f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status"&gt;&lt;/a&gt; &lt;a href="https://join.slack.com/t/mojs/shared_invite/zt-dlyxhupt-VR7eV2uwCnvu3Cx~Yc_L9Q" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f2125bb4be72646dafa9bc30cb8da50d072181b0f378eb9559f3da1376cfca2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374796c652d6a6f696e2d6666363962342e7376673f6c6162656c3d736c61636b" alt="Slack"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The motion graphics toolbelt for the web.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mojs.github.io/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pYp7EGPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mojs/mojslogo.svg" alt="mo · js" title="mo · js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Intro&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;mo · js&lt;/strong&gt; is a javascript motion graphics library that is a &lt;strong&gt;fast, retina ready, modular and open source&lt;/strong&gt;. In comparison to other libraries, it has a different syntax and code animation structure approach. The declarative API provides you a complete control over the animation, making it customizable with ease.&lt;/p&gt;
&lt;p&gt;The library provides &lt;strong&gt;built-in components&lt;/strong&gt; to start animating from scratch like html, shape, swirl, burst and stagger, but also bring you tools to help craft your animation in a most natural way. Using mojs on your site will enhance the user experience, enrich your content visually and create &lt;strong&gt;delightful animations&lt;/strong&gt; precisely.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;h3&gt;
Use with a bundler&lt;/h3&gt;
&lt;p&gt;Mojs is published on the &lt;strong&gt;NPM registry&lt;/strong&gt; and &lt;strong&gt;GPR registry&lt;/strong&gt;, so you can install it through the command line interpreter using your favorite package manager. This is the best way…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mojs/mojs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;The library provides built-in components to start animating from scratch like html, shape, swirl, burst and stagger, but also bring you tools to help craft your animation in a most natural way&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/sol0mka/embed/ogOYJj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;strong&gt;Click on any circle&lt;/strong&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/sol0mka/embed/yNOage?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/sol0mka/embed/pEagoL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;15. Reveal.js&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hakimel"&gt;
        hakimel
      &lt;/a&gt; / &lt;a href="https://github.com/hakimel/reveal.js"&gt;
        reveal.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The HTML Presentation Framework
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://revealjs.com" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/67ab0dc35ff7b5c57c210baeb98b60f2618166f629172b278dbb6e394a0a1e10/68747470733a2f2f68616b696d2d7374617469632e73332e616d617a6f6e6177732e636f6d2f72657665616c2d6a732f6c6f676f2f76312f72657665616c2d626c61636b2d746578742e737667" alt="reveal.js" width="450"&gt;
  &lt;/a&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;a href="https://github.com/hakimel/reveal.js/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7xOafQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/hakimel/reveal.js/workflows/tests/badge.svg"&gt;&lt;/a&gt;
  &lt;a href="https://slides.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a25a9e24942656ec32955d6fd5dca1fc62c1590d6e8e205032b7e089c1b21c05/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f7374617469632e736c69642e65732f696d616765732f736c696465732d6769746875622d62616e6e65722d3332307834302e706e673f31" alt="Slides" width="160" height="20"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;reveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create fully featured and beautiful presentations for free. &lt;a href="https://revealjs.com/" rel="nofollow"&gt;Check out the live demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The framework comes with a broad range of features including &lt;a href="https://revealjs.com/vertical-slides/" rel="nofollow"&gt;nested slides&lt;/a&gt;, &lt;a href="https://revealjs.com/markdown/" rel="nofollow"&gt;Markdown support&lt;/a&gt;, &lt;a href="https://revealjs.com/auto-animate/" rel="nofollow"&gt;Auto-Animate&lt;/a&gt;, &lt;a href="https://revealjs.com/pdf-export/" rel="nofollow"&gt;PDF export&lt;/a&gt;, &lt;a href="https://revealjs.com/speaker-view/" rel="nofollow"&gt;speaker notes&lt;/a&gt;, &lt;a href="https://revealjs.com/math/" rel="nofollow"&gt;LaTeX support&lt;/a&gt;, &lt;a href="https://revealjs.com/code/" rel="nofollow"&gt;syntax highlighted code&lt;/a&gt; and much more.&lt;/p&gt;

&lt;h1&gt;

  &lt;a href="https://revealjs.com/installation" rel="nofollow"&gt;Get Started&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
Documentation&lt;/h2&gt;

&lt;p&gt;The full reveal.js documentation is available at &lt;a href="https://revealjs.com" rel="nofollow"&gt;revealjs.com&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
Online Editor&lt;/h2&gt;

&lt;p&gt;Want to create your presentation using a visual editor? Try the official reveal.js presentation platform for free at &lt;a href="https://slides.com" rel="nofollow"&gt;Slides.com&lt;/a&gt;. It's made by the same people behind reveal.js.&lt;/p&gt;

&lt;h2&gt;
License&lt;/h2&gt;

&lt;p&gt;MIT licensed&lt;/p&gt;

&lt;p&gt;Copyright (C) 2011-2021 Hakim El Hattab, &lt;a href="https://hakim.se" rel="nofollow"&gt;https://hakim.se&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/hakimel/reveal.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qrEm1Z1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/clPn37Z1Ij7iBrTsvg/giphy.gif%3Fcid%3D790b76115eae8065ec2f824fa26cd69c8e4d1079ebb67bcd%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qrEm1Z1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/clPn37Z1Ij7iBrTsvg/giphy.gif%3Fcid%3D790b76115eae8065ec2f824fa26cd69c8e4d1079ebb67bcd%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;16. Animsition&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/blivesta"&gt;
        blivesta
      &lt;/a&gt; / &lt;a href="https://github.com/blivesta/animsition"&gt;
        animsition
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A simple and easy jQuery plugin for CSS animated page transitions.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="http://blivesta.github.io/animsition" rel="nofollow"&gt;Animsition&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0ac0058f6dbffaf25d56c0cd11c7cba82d21eb286b8233a9919659013b6ea15f/68747470733a2f2f696d672e736869656c64732e696f2f626f7765722f762f616e696d736974696f6e2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/0ac0058f6dbffaf25d56c0cd11c7cba82d21eb286b8233a9919659013b6ea15f/68747470733a2f2f696d672e736869656c64732e696f2f626f7765722f762f616e696d736974696f6e2e7376673f7374796c653d666c61742d737175617265" alt="Bower version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/animsition" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab1847b04089e96fe0c079e420595e02451956c634e10643dab3e21e968e6db4/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f616e696d736974696f6e2e7376673f7374796c653d666c61742d737175617265" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/blivesta/animsition" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/06f55ccde97863eb29ea950de52749fce8e2462ff7a52d96da433adca927d902/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f626c6976657374612f616e696d736974696f6e2f6d61737465722e7376673f7374796c653d666c61742d737175617265" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A simple and easy jQuery plugin for CSS animated page transitions.&lt;/p&gt;
&lt;h2&gt;
Demo &amp;amp; Installation&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://git.blivesta.com/animsition/" rel="nofollow"&gt;http://git.blivesta.com/animsition/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Development&lt;/h2&gt;
&lt;p&gt;Install : &lt;code&gt;nodejs&lt;/code&gt; &lt;code&gt;npm&lt;/code&gt; &lt;code&gt;gulp&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ git clone https://github.com/blivesta/animsition.git
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; animsition
$ git checkout -b patch-1
$ npm install &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; gulp&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Build&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ gulp build&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Build -&amp;gt; Watch&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ gulp&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
CDN&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://cdnjs.com/libraries/animsition" rel="nofollow"&gt;cdnjs&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dist/css/animsition.css&lt;/li&gt;
&lt;li&gt;dist/css/animsition.min.css&lt;/li&gt;
&lt;li&gt;dist/js/animsition.js&lt;/li&gt;
&lt;li&gt;dist/js/animsition.min.js&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;To contribute to animsition, clone this repo locally and commit your code.&lt;br&gt;
Please check that everything works before opening a pull-request.&lt;/p&gt;
&lt;h2&gt;
Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/blivesta"&gt;@blivesta&lt;/a&gt; (Maintainer)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ungki"&gt;@ungki&lt;/a&gt; (Maintainer)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gauravpadia"&gt;@gauravpadia&lt;/a&gt; (Maintainer)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/munsonbh"&gt;@munsonbh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/triq6"&gt;@triq6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shgtkshruch"&gt;@shgtkshruch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vburlak"&gt;@vburlak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wpexplorer"&gt;@wpexplorer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/armbull"&gt;@armbull&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kkirsche"&gt;@kkirsche&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/justbartlett"&gt;@justbartlett&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brianmontanaweb"&gt;@brianmontanaweb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Superpencil"&gt;@Superpencil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tegansnyder"&gt;@tegansnyder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvartolomei"&gt;@nvartolomei&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;Released under the &lt;a href="https://github.com/blivesta/animsition/blob/master/LICENSE.md"&gt;MIT&lt;/a&gt; license.&lt;/p&gt;

&lt;h2&gt;
WordPress plugin&lt;/h2&gt;
&lt;h3&gt;
&lt;a href="http://wordpress.org/plugins/page-transition/" title="Page Transition" rel="nofollow"&gt;Page Transition&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;@numixtech&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gauravpadia"&gt;@gauravpadia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;@asalamwp&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/blivesta/animsition"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6QaAKUhq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/UOPBUJCEQtRWgoCeIk/giphy.gif%3Fcid%3D790b761178178021345b7f33f5f12441c337a8cc4e0829af%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6QaAKUhq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/UOPBUJCEQtRWgoCeIk/giphy.gif%3Fcid%3D790b761178178021345b7f33f5f12441c337a8cc4e0829af%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;17. SVG Mesh 3d&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mattdesl"&gt;
        mattdesl
      &lt;/a&gt; / &lt;a href="https://github.com/mattdesl/svg-mesh-3d"&gt;
        svg-mesh-3d
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀 converts a SVG path to a 3D mesh
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
svg-mesh-3d&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://github.com/badges/stability-badges"&gt;&lt;img src="https://camo.githubusercontent.com/5cd3df2dc41de541ea4d16524e39eae78807a7e414c43e3805c080a32bcfa498/687474703a2f2f6261646765732e6769746875622e696f2f73746162696c6974792d6261646765732f646973742f737461626c652e737667" alt="stable"&gt;&lt;/a&gt;&lt;/p&gt;
  [&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c539bb338f9623cc3f197a72b836a94f559d3fd8c648b8be6dfbc30968e2ca4a/687474703a2f2f692e696d6775722e636f6d2f725933625270732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c539bb338f9623cc3f197a72b836a94f559d3fd8c648b8be6dfbc30968e2ca4a/687474703a2f2f692e696d6775722e636f6d2f725933625270732e706e67" width="80%"&gt;&lt;/a&gt;&lt;/p&gt;](&lt;a href="http://mattdesl.github.io/svg-mesh-3d/" rel="nofollow"&gt;http://mattdesl.github.io/svg-mesh-3d/&lt;/a&gt;)
&lt;p&gt;&lt;a href="http://mattdesl.github.io/svg-mesh-3d/" rel="nofollow"&gt;(ThreeJS demo)&lt;/a&gt; - &lt;a href="https://github.com/mattdesl/svg-mesh-3d./demo/index.js"&gt;(source)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A high-level module to convert a SVG &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; string into a 3D triangulated mesh. Best suited for silhouettes, like font icon SVGs.&lt;/p&gt;
&lt;p&gt;Built on top of &lt;a href="https://www.npmjs.com/package/cdt2d" rel="nofollow"&gt;cdt2d&lt;/a&gt; by &lt;a href="https://twitter.com/MikolaLysenko" rel="nofollow"&gt;@mikolalysenko&lt;/a&gt;, and various other modules.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install svg-mesh-3d --save&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Example&lt;/h2&gt;
&lt;p&gt;Here is an example using a simple path:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;svgMesh3d&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'svg-mesh-3d'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;path&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;'M305.214,374.779c2.463,0,3.45,0.493...'&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;mesh&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;svgMesh3d&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;path&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;The returned mesh is a 3D indexed &lt;a href="https://www.npmjs.com/package/mesh-primitives#generic-mesh-modules" rel="nofollow"&gt;"simplicial complex"&lt;/a&gt; that can be used in ThreeJS, StackGL, etc. It uses arrays for vectors and follows the format:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;positions&lt;/span&gt;: &lt;span class="pl-kos"&gt;[&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s1"&gt;x1&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;y1&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;z1&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s1"&gt;x2&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;y2&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;z2&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; ... &lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;cells&lt;/span&gt;: &lt;span class="pl-kos"&gt;[&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s1"&gt;a&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;b&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;c&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s1"&gt;d&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;e&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;f&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt; &lt;span class="pl-kos"&gt;]&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Or, to load a mesh in…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mattdesl/svg-mesh-3d"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;A high-level module to convert a SVG  string into a 3D triangulated mesh. Best suited for silhouettes, like font icon SVGs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TgpVThOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/hllL76HZIEhs7Ir8Gc/giphy.gif%3Fcid%3D790b7611685f483dab7673770057e400f0ae3a1a52d85c5d%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TgpVThOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/hllL76HZIEhs7Ir8Gc/giphy.gif%3Fcid%3D790b7611685f483dab7673770057e400f0ae3a1a52d85c5d%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;18. Zdog&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/metafizzy"&gt;
        metafizzy
      &lt;/a&gt; / &lt;a href="https://github.com/metafizzy/zdog"&gt;
        zdog
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Flat, round, designer-friendly pseudo-3D engine for canvas &amp;amp; SVG
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Zdog&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Round, flat, designer-friendly pseudo-3D engine&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;View complete documentation and live demos at &lt;a href="https://zzz.dog" rel="nofollow"&gt;zzz.dog&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;h3&gt;
Download&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://unpkg.com/zdog@1/dist/zdog.dist.min.js" rel="nofollow"&gt;zdog.dist.min.js&lt;/a&gt; minified, or&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://unpkg.com/zdog@1/dist/zdog.dist.js" rel="nofollow"&gt;zdog.dist.js&lt;/a&gt; un-minified&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
CDN&lt;/h3&gt;
&lt;p&gt;Link directly to Zdog JS on &lt;a href="https://unpkg.com" rel="nofollow"&gt;unpkg&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://unpkg.com/zdog@1/dist/zdog.dist.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Package managers&lt;/h3&gt;
&lt;p&gt;npm: &lt;code&gt;npm install zdog&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Bower: &lt;code&gt;bower install zdog&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
Hello world demo&lt;/h2&gt;
&lt;p&gt;Create 3D models with Zdog by adding shapes. See &lt;a href="https://zzz.dog/getting-started" rel="nofollow"&gt;Getting started&lt;/a&gt; for a walk-through of this demo.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-s1"&gt;isSpinning&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-s1"&gt;illo&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;Zdog&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;Illustration&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;element&lt;/span&gt;: &lt;span class="pl-s"&gt;'.zdog-canvas'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;zoom&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;dragRotate&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c"&gt;// stop spinning when drag starts&lt;/span&gt;
  &lt;span class="pl-en"&gt;onDragStart&lt;/span&gt;: &lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-s1"&gt;isSpinning&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-c"&gt;// circle&lt;/span&gt;
&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;Zdog&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;Ellipse&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;addTo&lt;/span&gt;: &lt;span class="pl-s1"&gt;illo&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;diameter&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;translate&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;z&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;stroke&lt;/span&gt;: &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;color&lt;/span&gt;: &lt;span class="pl-s"&gt;'#636'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/metafizzy/zdog"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;With this library, you can create pseudo-3d elements, while you do not need to know geometry or algebra to create geometric shapes. This library is very easy to learn and learning will not take you much time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PfmrMcle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/WUA2gPXAS9Jewk8vql/giphy.gif%3Fcid%3D790b76115df6beadd5c63c20018a5b35eeceba16bf1a3e66%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PfmrMcle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/WUA2gPXAS9Jewk8vql/giphy.gif%3Fcid%3D790b76115df6beadd5c63c20018a5b35eeceba16bf1a3e66%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can drag it&lt;/strong&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/desandro/embed/vdwMyW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/desandro/embed/YebMXQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/chenxinnn/embed/Xwowxz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/gabriellewee/embed/JjNGvJd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;The End&lt;/h1&gt;

&lt;p&gt;Thank you for taking your time to my post. You can also recommend the GitHub repositories you use. Or suggest a better alternative to the repositories that are presented in this post.&lt;/p&gt;

&lt;p&gt;I also advise novice frontend programmers not to try to implement some complex task on their own, but it is better to use a ready-made solution so as not to generate a lot of problems in their own and third-party projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No need to re-invent the wheel.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wowAxxrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/FVAvmLbptzZpC/giphy.gif%3Fcid%3Decf05e47f7vzwma5yq2wmr20jeteoy2xzokzzrpy47cm52zz%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wowAxxrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/FVAvmLbptzZpC/giphy.gif%3Fcid%3Decf05e47f7vzwma5yq2wmr20jeteoy2xzokzzrpy47cm52zz%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I can advise you to subscribe to my &lt;a href="https://twitter.com/BelichenkoRoden"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;, I also post my works there.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>github</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How &amp; why I built a favicon fetching service</title>
      <author>fiiv</author>
      <pubDate>Fri, 03 Sep 2021 20:27:28 +0000</pubDate>
      <link>https://dev.to/mtimofiiv/how-why-i-built-a-favicon-fetching-service-32nl</link>
      <guid>https://dev.to/mtimofiiv/how-why-i-built-a-favicon-fetching-service-32nl</guid>
      <description>&lt;p&gt;A few days ago, I launched &lt;a href="https://icon.horse"&gt;Icon Horse&lt;/a&gt;, which is a simple, free API to quickly get the favicon of any website. The launch itself went really well, and I had a lot of fun building it.&lt;/p&gt;

&lt;p&gt;But inside the seemingly simple but glamorous life of favicons, there is a lot of complexity. I thought I'd share some of how it works with you all, and some of the hoops I had to hop to build Icon Horse.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-favicon-really"&gt;
  &lt;/a&gt;
  What is a favicon, really?
&lt;/h2&gt;

&lt;p&gt;The year was 1999. Britney Spears and Eminem were at the top of the charts, the world was introduced to Napster for the first time, and the "browser war" was heating up with Microsoft releasing Internet Explorer 5.&lt;/p&gt;

&lt;p&gt;One of IE5's new features was the favicon, or a small icon which was displayed in the "Favourites" menus/bars next to the title of the site someone bookmarked. Things were simple back then, and if the favicon existed, it would be loaded from the site's root like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://mysite.com/favicon.ico
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since then, a number of new circumstances have come up requiring new types of icons – one example is the advent of the smart phone, which allowed people to save a website shortcut on their home screen. But since favicons tended to be low resolution, a number of diverging standards came about and added these on both Android and iOS.&lt;/p&gt;

&lt;p&gt;Now while technically a &lt;em&gt;shortcut icon&lt;/em&gt;, they are usually lumped in with favicons in general internet terminology and also during the process to create them.&lt;/p&gt;

&lt;p&gt;Today, there are three main places to look for icons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;https://mysite.com/favicon.ico&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The HTML of the site in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;A separate Web App Manifest file which is specified in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#so-whats-the-problem"&gt;
  &lt;/a&gt;
  So what's the problem?
&lt;/h2&gt;

&lt;p&gt;I'm currently working on a tool called &lt;a href="https://meetingcanary.app"&gt;Meeting Canary&lt;/a&gt;, from which a note-taking interface is displayed for a given calendar meeting. Many meetings have links to relevant places, such as video conferencing apps (especially since the COVID-19 situation has moved many people to remote work).&lt;/p&gt;

&lt;p&gt;I decided it would be nice to render a small icon next to the links, as a way to tease the content to my users:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p7gOM7We--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E8pFHL8VIAAsUvH%3Fformat%3Djpg%26name%3Dlarge" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p7gOM7We--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E8pFHL8VIAAsUvH%3Fformat%3Djpg%26name%3Dlarge" alt="A meeting invite often has a link"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After hunting for a good way to fetch icons for a given link, I found one that was a JSON API endpoint, but I wasn't very satisfied with this solution – I did &lt;strong&gt;not&lt;/strong&gt; want to complicate my life by using it, since I still needed to write code to figure out the &lt;em&gt;best&lt;/em&gt; icon to display from the list I got back.&lt;/p&gt;

&lt;p&gt;Also, I did not find a single service that provided &lt;strong&gt;fallbacks&lt;/strong&gt;, or an icon that would be shown if the site is unreachable or if it had no icons at all.&lt;/p&gt;

&lt;p&gt;After all, &lt;a href="https://gravatar.com"&gt;Gravatar&lt;/a&gt; does this very well for email addresses, and it was strange that no one had done this with favicons yet! So I got to work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#it-was-really-simple-to-make-right"&gt;
  &lt;/a&gt;
  It was really simple to make, right?
&lt;/h2&gt;

&lt;p&gt;When it comes to standards, the web is pure chaos. When building a product to fetch favicons, you should expect no mercy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hIQ1tPX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://4.bp.blogspot.com/-wv1V-55MoaQ/Uc8rNIqugvI/AAAAAAAAaHg/D0wqb-Fn4cc/w1200-h630-p-nu/1012122_592028560863220_1994359073_n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hIQ1tPX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://4.bp.blogspot.com/-wv1V-55MoaQ/Uc8rNIqugvI/AAAAAAAAaHg/D0wqb-Fn4cc/w1200-h630-p-nu/1012122_592028560863220_1994359073_n.jpg" alt="The web is a hive of scum and villainy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some sites have no icons at all. Some sites have only a few of the icons from the spec. Some sites use strange sizes. Some sites don't even bother to tell you the size (in pixels) of the icons.&lt;/p&gt;

&lt;p&gt;Some sites have completely broken DNS or server issues (like infinite redirect loops). Some send confusing or broken headers. Some sites serve invalid HTML or JSON. Some sites have &lt;code&gt;404 Not Found&lt;/code&gt; errors on their icons. Some sites used weird caching schemes. Some don't specify a MIME type or a file extension so you have to parse the actual image to know what you're dealing with.&lt;/p&gt;

&lt;p&gt;The list of difficulties goes on – for example one prominent clothing retailer's icon is simply not loadable because they have a nasty bug in their site's redirects and headers meaning you cannot simply &lt;code&gt;redirect: 'follow'&lt;/code&gt; your way to the HTML page, but must chain one request after the other manually.&lt;/p&gt;

&lt;p&gt;But I persevered through all those.&lt;/p&gt;

&lt;p&gt;I knew there was going to be even more edge cases I hadn't considered in the future, so it was very important to build in functionality for fallback images. I never wanted to serve a broken image or a timeout.&lt;/p&gt;

&lt;p&gt;I also had to make some decisions. Since my service was making icons available to all who wanted them, there was no telling the different use cases they would be serving. So I made the assumption that the best icon to serve would be the most high fidelity image. Also, for some use cases (such as React Native), SVG format icons would not work out of the box, and needed something like &lt;a href="https://github.com/react-native-svg/react-native-svg"&gt;react-native-svg&lt;/a&gt; to get them to load, so I stuck to raster formats only (for the first version at least, I plan to open up SVGs as well in the future via a query parameter).&lt;/p&gt;

&lt;p&gt;And finally, pulling all this content is time intensive. Consider that to serve an icon, one needs to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Load &lt;code&gt;https://asite.com&lt;/code&gt;'s HTML site&lt;/li&gt;
&lt;li&gt;Parse the HTML and do a query lookup to get relevant icons and the manifest file&lt;/li&gt;
&lt;li&gt;Load the manifest file and parse it&lt;/li&gt;
&lt;li&gt;Check for the existence of the &lt;code&gt;https://asite.com/favicon.ico&lt;/code&gt; icon&lt;/li&gt;
&lt;li&gt;Merge all these icons together in a list and sort them based on a &lt;em&gt;best&lt;/em&gt; to &lt;em&gt;worst&lt;/em&gt; criteria, while also making sure the icons themselves are reachable (and don't &lt;code&gt;404 Not Found&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;If all this fails, generate a JPEG file on the fly as a fallback&lt;/li&gt;
&lt;li&gt;Serve the icon to the user&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So when dealing with a slow server, it's possible that loading that icon could take quite a long time. To help with that, Icon Horse must cache the resulting list of icons and the resulting chosen icon.&lt;/p&gt;

&lt;p&gt;I wanted to keep the functionality super simple, so when someone queried my API to get an icon:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://icon.horse/icon/dev.to
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I ended up with just the icon:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gg6p4N-c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://icon.horse/icon/dev.to" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gg6p4N-c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://icon.horse/icon/dev.to" alt="dev.to icon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#putting-it-all-together"&gt;
  &lt;/a&gt;
  Putting it all together
&lt;/h2&gt;

&lt;p&gt;From the very beginning, I knew I wanted to use a serverless approach to this service. The landing page is built out of Next.js and the service itself sits in a lambda function hosted on Amazon.&lt;/p&gt;

&lt;p&gt;After struggling a little bit with getting the environment set up (it had to have image processing capability as well as a few other things), I managed to get it working and running properly.&lt;/p&gt;

&lt;p&gt;And there you have it. I launched on &lt;a href="https://www.producthunt.com/posts/icon-horse"&gt;ProductHunt&lt;/a&gt; (among other places) and was surprised by the overwhelming positive reception – I got almost 200 upvotes and almost 1000 unique visitors. What surprised me the most is how a favicon fetcher service I thought would be niche and developer only was actually really well understood by all kinds of people.&lt;/p&gt;

&lt;p&gt;I learned a lot about the weird world of favicons and solved my own need, but above all had a lot of fun doing it.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>learning</category>
      <category>writing</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Setting up an API with Rails</title>
      <author>benjaminolmsted</author>
      <pubDate>Fri, 03 Sep 2021 19:46:52 +0000</pubDate>
      <link>https://dev.to/benjaminolmsted/setting-up-an-api-with-rails-59i5</link>
      <guid>https://dev.to/benjaminolmsted/setting-up-an-api-with-rails-59i5</guid>
      <description>&lt;p&gt;In this blog, we go over the steps for setting up a &lt;a href="https://guides.rubyonrails.org/api_app.html"&gt;Rails based API&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;installation&lt;/li&gt;
&lt;li&gt;CORS&lt;/li&gt;
&lt;li&gt;generate resource&lt;/li&gt;
&lt;li&gt;create migration&lt;/li&gt;
&lt;li&gt;add seed data&lt;/li&gt;
&lt;li&gt;add actions to our controller&lt;/li&gt;
&lt;li&gt;testing in Postman&lt;/li&gt;
&lt;li&gt;some validations&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1"&gt;
  &lt;/a&gt;
  1
&lt;/h2&gt;

&lt;p&gt;run &lt;code&gt;rails new this-is-a-blog --api&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This sets up the project for use as an API. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2"&gt;
  &lt;/a&gt;
  2
&lt;/h2&gt;

&lt;p&gt;enable CORS (cross-origin resource sharing)&lt;br&gt;
In the Gemfile, uncomment the gem &lt;code&gt;'rack-cors'&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HfXtvKYg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0mh13sj7uz3u2dgbqsa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HfXtvKYg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0mh13sj7uz3u2dgbqsa.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then head over to &lt;code&gt;config/initializers/cors.rb&lt;/code&gt; and uncomment lines 8-16 and change &lt;code&gt;origins 'example.com'&lt;/code&gt; to &lt;code&gt;origins '*'&lt;/code&gt; to allow requests from anywhere. If the API is meant to be consumed by a specific domain, put that domain here. For development purposes, &lt;code&gt;'*'&lt;/code&gt; is fine. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q1Yq1yBw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62j0c4t1c0t53svt9zcl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q1Yq1yBw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62j0c4t1c0t53svt9zcl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#3"&gt;
  &lt;/a&gt;
  3
&lt;/h2&gt;

&lt;p&gt;we generate our first resource with &lt;code&gt;rails g resource Post&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This generates a &lt;code&gt;post.rb&lt;/code&gt; model, a &lt;code&gt;posts_controller.rb&lt;/code&gt; controller, a &lt;code&gt;CreatePosts&lt;/code&gt; migration, and adds a &lt;code&gt;resources: posts&lt;/code&gt; to our &lt;code&gt;routes.rb&lt;/code&gt; file.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#4"&gt;
  &lt;/a&gt;
  4
&lt;/h2&gt;

&lt;p&gt;we create our migration in &lt;code&gt;db/migrate/{local_time}create_posts.rb&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CreatePosts&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Migration&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;6.1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;change&lt;/span&gt;
    &lt;span class="n"&gt;create_table&lt;/span&gt; &lt;span class="ss"&gt;:posts&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt; &lt;span class="ss"&gt;:title&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt; &lt;span class="ss"&gt;:body&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt; &lt;span class="ss"&gt;:image_url&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;timestamps&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;we could have had this step done automatically if we had run our generation like so:&lt;/em&gt; &lt;code&gt;rails g resource Post title body image_url&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and migrate with &lt;code&gt;rails db:migrate&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5"&gt;
  &lt;/a&gt;
  5
&lt;/h2&gt;

&lt;p&gt;we add some seed data to db/seeds.rb&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s2"&gt;"Editor Basics"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;body: &lt;/span&gt;&lt;span class="s2"&gt;"Use Markdown to write and format posts. You can use Liquid tags to add rich content such as Tweets, YouTube videos, etc.
    In addition to images for the post's content, you can also drag and drop a cover image"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s2"&gt;"Setting up an API with Rails"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="ss"&gt;:"First, run `rails new this-is-a-blog --api`"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s2"&gt;"Writing a Great Post Title"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;body: &lt;/span&gt;&lt;span class="s2"&gt;"Think of your post title as a super short (but compelling!) description — like an overview of the actual post in one short sentence.
Use keywords where appropriate to help ensure people can find your post by search."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and run &lt;code&gt;rails db:seed&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6"&gt;
  &lt;/a&gt;
  6
&lt;/h2&gt;

&lt;p&gt;we head over to app/controllers/posts_controller.rb and lay out our actions&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PostsController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationController&lt;/span&gt;
&lt;span class="n"&gt;rescue_from&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;RecordNotFound&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: :record_not_found_response&lt;/span&gt;
&lt;span class="n"&gt;rescue_from&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;RecordInvalid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: :record_invalid_response&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;
        &lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;json: &lt;/span&gt;&lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: :ok&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find_post&lt;/span&gt;
        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;json: &lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: :ok&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find_post&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;json: &lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: :accepted&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;json: &lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: :created&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;destroy&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find_post&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;destroy&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="ss"&gt;:no_content&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="kp"&gt;private&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_post&lt;/span&gt;
        &lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post_params&lt;/span&gt;
        &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;permit&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:image_url&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;record_not_found_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;json: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;error: &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="ss"&gt;status: :not_found&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;record_invalid_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;invalid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;json: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;errors: &lt;/span&gt;&lt;span class="n"&gt;invalid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;full_messages&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="ss"&gt;status: :unprocessable_entity&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#7"&gt;
  &lt;/a&gt;
  7
&lt;/h2&gt;

&lt;p&gt;now it's time to check our work using &lt;a href="https://www.postman.com/"&gt;Postman&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fire up your server with &lt;code&gt;rails s&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uPavGG-R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0aqvfd4tswqrlfi48vb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uPavGG-R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0aqvfd4tswqrlfi48vb.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Index is working!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x23MI5aB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8m76pqtnn86sabosyru.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x23MI5aB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8m76pqtnn86sabosyru.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our Show route works!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gZuIYEYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2khonaudulqxeny83w3j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZuIYEYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2khonaudulqxeny83w3j.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So does the create route.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6IdAcwwY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6jzo1ot5c1dgldui72b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6IdAcwwY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6jzo1ot5c1dgldui72b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;our patch updates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tw3jiGCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gw6athbb7on5gfwukvm7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tw3jiGCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gw6athbb7on5gfwukvm7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our delete deletes. &lt;br&gt;
Our happy routes work! Excellent. Now let's check our error handling. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vzzfLVn5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h82j9sop6x4bgfdnxanc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vzzfLVn5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h82j9sop6x4bgfdnxanc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we try to find an :id that does not exist, we get our helpful error!&lt;/p&gt;

&lt;p&gt;Excellent! We made an API in rails. &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#8"&gt;
  &lt;/a&gt;
  8
&lt;/h2&gt;

&lt;p&gt;now, let's put in some &lt;a href="https://guides.rubyonrails.org/active_record_validations.html"&gt;validations&lt;/a&gt; on our model.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationRecord&lt;/span&gt;
    &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;length: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;minimum: &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's see what happens if we try to post something without a body!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7nX6F0FI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25rl6fdo76uc87v12lf8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7nX6F0FI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25rl6fdo76uc87v12lf8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We cannot, thanks to the validations. We get that error thanks to our &lt;code&gt;rescue_from  ActiveRecord::RecordInvalid&lt;/code&gt; and our use of &lt;code&gt;create!&lt;/code&gt; and &lt;code&gt;update!&lt;/code&gt;, which will throw an ActiveRecord::RecordInvalid error if the request fails any validations. &lt;/p&gt;

&lt;p&gt;The very basics of setting up an API in Rails, complete.&lt;/p&gt;

&lt;p&gt;Resources:&lt;br&gt;
&lt;a href="https://guides.rubyonrails.org/active_record_validations.html"&gt;https://guides.rubyonrails.org/active_record_validations.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guides.rubyonrails.org/api_app.html"&gt;https://guides.rubyonrails.org/api_app.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/lisahjung/beginner-s-guide-to-creating-an-api-from-scratch-using-rails-2eie"&gt;https://dev.to/lisahjung/beginner-s-guide-to-creating-an-api-from-scratch-using-rails-2eie&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
