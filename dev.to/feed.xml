<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network. Open source and radically transparent.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>AWS Heroes React to  AWS re:Invent 2020 Announcements ü§Ø</title>
      <author>Andrew Brown üá®üá¶</author>
      <pubDate>Thu, 03 Dec 2020 23:03:43 +0000</pubDate>
      <link>https://dev.to/aws-heroes/aws-heroes-react-to-aws-re-invent-2020-announcements-l67</link>
      <guid>https://dev.to/aws-heroes/aws-heroes-react-to-aws-re-invent-2020-announcements-l67</guid>
      <description>&lt;h3&gt;
  &lt;a href="#during-reinvent-this-article-is-being-constantly-updated" class="anchor"&gt;
  &lt;/a&gt;
  üö® During re:Invent this article is being constantly updated.
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#keep-checking-in-to-see-new-reactions" class="anchor"&gt;
  &lt;/a&gt;
  üëã Keep checking in to see new reactions!
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#jump-to-the-reactions" class="anchor"&gt;
  &lt;/a&gt;
  üëâüëâ &lt;a href="#aws-hero-reactions-and-analysis"&gt;Jump to the reactions&lt;/a&gt; üëàüëà
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#preamble" class="anchor"&gt;
  &lt;/a&gt;
  Preamble
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-reinvent" class="anchor"&gt;
  &lt;/a&gt;
  What is re:Invent?
&lt;/h3&gt;

&lt;p&gt;re:Invent is Amazon Web Service's (AWS) 5-day technology conference held in Las Vegas Nevada. Last year's conference had &lt;strong&gt;65,000+ attendance&lt;/strong&gt; from around the world.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-is-reinvent-so-important" class="anchor"&gt;
  &lt;/a&gt;
  Why is re:Invent so important?
&lt;/h3&gt;

&lt;p&gt;re:Invent is when AWS announces new features, improvements and cloud services. It's also a lot of fun, with hands-on training, creative demos project, lucrative swag and more!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-different-this-year" class="anchor"&gt;
  &lt;/a&gt;
  What is different this year?
&lt;/h3&gt;

&lt;p&gt;Due to the world situation AWS has made a few changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The conference is 100% virtual&lt;/li&gt;
&lt;li&gt;Attendance is free (you still need to &lt;a href="https://register.virtual.awsevents.com/?sc_icampaign=event_reInvent_RegisterNow&amp;amp;sc_ichannel=ha&amp;amp;sc_icontent=eventsite_reinvent20&amp;amp;sc_ioutcome=Strategic_Events&amp;amp;sc_iplace=evnav&amp;amp;trk=direct"&gt;register&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The conference is 3 weeks long&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-an-aws-hero" class="anchor"&gt;
  &lt;/a&gt;
  What is an AWS Hero?
&lt;/h3&gt;

&lt;p&gt;An AWS Hero is a recognized community leader in a specific category of cloud technologies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-this-article" class="anchor"&gt;
  &lt;/a&gt;
  What is this article?
&lt;/h3&gt;

&lt;p&gt;There are thousands of talks and hundreds of announcements, and if you live a busy life, it can be hard to find the time to digest all the changes.&lt;/p&gt;

&lt;p&gt;This reaction article is to help contextualize the AWS announcements with some personal thoughts or expert opinion so you have an idea of how you can apply these in your future workloads.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-hero-reactions-and-analysis" class="anchor"&gt;
  &lt;/a&gt;
  AWS Hero Reactions and Analysis
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#andy-jassy-keynote-aws-reinvent-2020" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://markn.ca/2020/andy-jassy-keynote-aws-reinvent/"&gt;Andy Jassy Keynote, AWS Re:Invent 2020&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;No longer do we really have to worry about significant up front entry costs, capacity limits, or start up times. We have more power available via one API call than an entire data center from ten years ago. But if you don‚Äôt change how you approach using these tools, you won‚Äôt see... &lt;a href="https://markn.ca/2020/andy-jassy-keynote-aws-reinvent/"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/mark-nunnikhoven/"&gt;Mark Nunnikhoven&lt;/a&gt;, AWS Community Hero&lt;/em&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-announces-babelfish-open-source-postgres-with-sql-server-compatibility" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.ongres.com/blog/aws_announces_open_source_postgres_with_sql_server_compatibility/"&gt;AWS announces Babelfish: open source Postgres with SQL Server compatibility&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;But if it weren‚Äôt enough, SQL Server equivalent catalogs and also the SQL Server wire protocol (TDS) has been implemented. This means that you will be able to talk to Postgres Babelfish as if it were... &lt;a href="https://www.ongres.com/blog/aws_announces_open_source_postgres_with_sql_server_compatibility/"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/alvaro-hernandez/"&gt;√Ålvaro Hern√°ndez&lt;/a&gt;, AWS Data Hero&lt;/em&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serverless-comes-to-machine-learning-with-container-image-support-in-aws-lambda" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://towardsdatascience.com/serverless-comes-to-machine-learning-with-container-image-support-in-aws-lambda-ee9d729d48d7"&gt;Serverless comes to machine learning with container image support in AWS Lambda&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;AWS announced a long-awaited update for AWS Lambda by many developers and data scientists because it could change the way we build functions. It comes with bonus features that make this release something very welcome in the serverless world: starting from today it is possible to... &lt;a href="https://towardsdatascience.com/serverless-comes-to-machine-learning-with-container-image-support-in-aws-lambda-ee9d729d48d7"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/luca-bianchi/"&gt;Luca Bianchi&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#andy-jassys-8-keys-to-success-aws-reinvent-2020-keynote" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://medium.com/cloud-security/keys-to-aws-success-3a4ab2abebb9"&gt;Andy Jassy‚Äôs 8 keys to success ~ AWS re:Invent 2020 Keynote&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;AWS is at the top of the Gartner Magic Quadrant in 2020 ‚Äî again. In fact, they widened the gap between themselves and next closest provider in the past year. Andy Jassy provided some keys to success at the AWS in his... &lt;a href="https://medium.com/cloud-security/keys-to-aws-success-3a4ab2abebb9"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/teri-radichel/"&gt;Teri Radichel&lt;/a&gt;, AWS Community Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-takeaways-from-andy-jassys-big-reinvent-keynote" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://acloudguru.com/blog/engineering/5-takeaways-from-andy-jassys-big-reinvent-keynote"&gt;5 takeaways from Andy Jassy‚Äôs big re:Invent keynote&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;To tie all that together, we got AWS Proton ‚Äì a fully managed deployment service for containers and serverless apps. Notice how those two concepts are starting to blend together? Watch for that trend to... &lt;a href="https://acloudguru.com/blog/engineering/5-takeaways-from-andy-jassys-big-reinvent-keynote"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/forrest-brazeal/"&gt;Forrest Brazeal&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-lambda-can-now-run-php-using-docker-containers" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://mnapoli.fr/aws-lambda-php-docker-containers/"&gt;AWS Lambda can now run PHP using Docker Containers&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The good news is that while Lambda functions are limited to 250MB, containers can be up to 10GB. That will certainly help when deploying large monoliths to Lambda. One limitation to keep in mind is that after... &lt;a href="https://mnapoli.fr/aws-lambda-php-docker-containers/"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/matthieu-napoli/"&gt;Matthieu Napoli&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wait-did-aws-just-rewrite-the-manual-again-for-building-apps" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.stackery.io/blog/reinvent-2020-andy-jassy-keynote-modern-architecture/"&gt;Wait, did AWS just rewrite the manual again for building apps?&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Andy Jassy's re:Invent keynote today was chock full of new features and services. I'm here to help break down the most important news related to modern application architecture‚Ä¶ &lt;a href="https://www.stackery.io/blog/reinvent-2020-andy-jassy-keynote-modern-architecture/"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/chase-douglas/"&gt;Chase Douglas&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serverless-at-reinvent-2020-hot-takes-1" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://theburningmonk.com/2020/12/serverless-at-reinvent-2020-hot-takes-1/"&gt;Serverless at re:Invent 2020 ‚Äì hot takes #1&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Lambda now bills you by the ms as opposed to 100 ms. So if your function runs for 42ms you will be billed for 42ms, not 100ms. This instantly makes everyone‚Äôs lambda bills cheaper without anyone having to lift a finger. It‚Äôs the best kind of optimization! However, this might not mean much in‚Ä¶ &lt;a href="https://theburningmonk.com/2020/12/serverless-at-reinvent-2020-hot-takes-1/"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/yan-cui/"&gt;Yan Cui&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#database-announcements-at-reinvent-2020" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://blog.dbi-services.com/database-announcements-at-reinvent-2020/"&gt;Database announcements at re:Invent 2020&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;There are 3 important new launches announced around databases: Babelfish for Aurora, Aurora Serverless v2 and AWS Glue Elastic Views but let‚Äôs start by a recap of the pre-reInvent new features from this year‚Ä¶ &lt;a href="https://blog.dbi-services.com/database-announcements-at-reinvent-2020/"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/franck-pachot/"&gt;Franck Pachot&lt;/a&gt;, AWS Data Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deploying-a-ml-model-using-the-new-aws-lambda-container-image-functionality" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://dev.to/aws-heroes/deploying-a-ml-model-using-the-new-aws-lambda-container-image-functionality-4e7o"&gt;Deploying a ML model using the new AWS Lambda Container Image Functionality&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This week at re:Invent we saw AWS announce the ability to bring your own container to Lambda functions. The scenario that gets me super excited is the deployment of ML models inside Lambda. Before, it was just too awkward for most use cases to do ML in Lambda but I will demonstrate below that it is very easy now‚Ä¶ &lt;a href="https://dev.to/aws-heroes/deploying-a-ml-model-using-the-new-aws-lambda-container-image-functionality-4e7o"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/matt-coulter/"&gt;Matt Coulter&lt;/a&gt;, AWS DevTools Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#an-aws-hero-reacts-to-the-io2-block-express-announcement" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://dev.to/aws-heroes/an-aws-hero-reacts-to-the-io2-block-express-announcement-4d70"&gt;An AWS Hero reacts to the io2 Block Express announcement&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;I want to talk about the elegance that is io2 Block Express and why it truly is the first "Cloud SAN". In a traditional high performance and highly available Storage Area Network, data traffic between a storage array and the consuming server rides on a dedicated network‚Ä¶ &lt;a href="https://dev.to/aws-heroes/an-aws-hero-reacts-to-the-io2-block-express-announcement-4d70"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/dave-stauffacher/"&gt;Dave Stauffacher&lt;/a&gt;, AWS Community Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-container-images-with-aws-lambda" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://hichaelmart.medium.com/using-container-images-with-aws-lambda-7ffbd23697f1"&gt;Using container images with AWS Lambda&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Container Image Support has just been announced for AWS Lambda and it‚Äôs a pretty big deal ‚Äî I‚Äôm very excited because it‚Äôs something I‚Äôve wanted for years‚Ä¶ &lt;a href="https://hichaelmart.medium.com/using-container-images-with-aws-lambda-7ffbd23697f1"&gt;(read full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/michael-hart/"&gt;Michael Hart&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-year-of-serverless" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.stackery.io/blog/the-year-of-serverless/"&gt;The Year of Serverless&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Danilo and Sheen are incredibly smart engineers and have done great things at the LEGO group. They‚Äôre also both great at sharing their knowledge. From the talk abstract: After experiencing scaling issues on Black Friday, the LEGO team fully refactored its monolith to serverless microservices... &lt;a href="https://www.stackery.io/blog/the-year-of-serverless/"&gt;(read the full article)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By &lt;a href="https://aws.amazon.com/developer/community/heroes/farrah-campbell/"&gt;Farrah Campbell&lt;/a&gt;, AWS Serverless Hero&lt;/em&gt;&lt;/p&gt;

</description>
      <category>aws</category>
    </item>
    <item>
      <title>What do you like and/or hate most about distributed conferences? Answer for the chance to be featured on our podcast!</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 03 Dec 2020 19:45:23 +0000</pubDate>
      <link>https://dev.to/devteam/what-do-you-like-and-or-hate-most-about-distributed-conferences-answer-for-the-chance-to-be-featured-on-our-podcast-146g</link>
      <guid>https://dev.to/devteam/what-do-you-like-and-or-hate-most-about-distributed-conferences-answer-for-the-chance-to-be-featured-on-our-podcast-146g</guid>
      <description>&lt;p&gt;The &lt;a href="https://dev.to/devdiscuss"&gt;DevDiscuss Podcast&lt;/a&gt; begins with an interview and ends with commentary from listeners ‚Äî and we like to feature the actual &lt;em&gt;voices&lt;/em&gt; from our community!&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#this-weeks-prompt-what-do-you-like-andor-hate-most-about-distributed-conferences" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;This week's prompt: ‚ÄúWhat do you like and/or hate most about distributed conferences?‚Äù&lt;/strong&gt;
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;For your chance to appear on an upcoming episode, answer the question above by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Calling our Google Voice at +1 (929)500-1513 and leave a message üìû&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sending a voice memo to &lt;a href="mailto:pod@dev.to"&gt;pod@dev.to&lt;/a&gt; üéô&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OR, leaving a comment here (we'll read your response aloud for you) üó£&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Please send in your recordings by Wednesday, December 9th at Midnight, ET (9 PM PT, 5 AM UTC)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Voice recordings will be given priority placement&lt;/strong&gt;&lt;/em&gt; üòâ &lt;/p&gt;




&lt;p&gt;Don't forget to check out the latest episode &lt;a href="https://dev.to/devdiscuss/s3-e2-demystifying-architecture"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>podcast</category>
    </item>
    <item>
      <title>Salesforce‚Äôs Slackquisition, PHP 8.0, Amazon Sidewalk, &amp; more on DevNews!</title>
      <author>Josh Puetz</author>
      <pubDate>Thu, 03 Dec 2020 19:20:42 +0000</pubDate>
      <link>https://dev.to/devteam/salesforce-s-slackquisition-php-8-0-amazon-sidewalk-more-on-devnews-4k5i</link>
      <guid>https://dev.to/devteam/salesforce-s-slackquisition-php-8-0-amazon-sidewalk-more-on-devnews-4k5i</guid>
      <description>&lt;h3&gt;
  &lt;a href="#were-back-with-another-episode-of-devnews" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;We're back with another episode of DevNews...&lt;/strong&gt;
&lt;/h3&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devnews/s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S2:E6 - Salesforce‚Äôs Slackquisition, PHP 8.0, Amazon Sidewalk, and Computer Fraud and Abuse Act&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devnews"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevNews ¬†

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act" src="/assets/playbutt.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act" src="/assets/pausebutt.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act" alt="DevNews" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJPvwj98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XOSCOlKI--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
  &lt;/div&gt;
  &lt;div class="hidden-audio" id="hidden-audio-s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act"&gt;
    
      
      Your browser does not support the audio element.
    
    &lt;div id="progressBar" class="audio-player-display"&gt;
      &lt;a href="/devnews/s2-e6-salesforce-s-slackquisition-php-8-0-amazon-sidewalk-and-computer-fraud-and-abuse-act"&gt;
        &lt;img id="episode-profile-image" alt="S2:E6 - Salesforce‚Äôs Slackquisition, PHP 8.0, Amazon Sidewalk, and Computer Fraud and Abuse Act" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--84VpOv6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3GWkSFQs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
        &lt;img id="animated-bars" src="/assets/animated-bars.gif" alt="animated volume bars"&gt;
      &lt;/a&gt;
      &lt;span id="barPlayPause"&gt;
        &lt;img class="butt play-butt" src="/assets/playbutt.png" alt="play"&gt;
        &lt;img class="butt pause-butt" src="/assets/pausebutt.png" alt="pause"&gt;
      &lt;/span&gt;
      &lt;span id="volume"&gt;
        &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
          &lt;span id="volbutt"&gt;
            &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--SnhE4kcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/volume.png"&gt;
          &lt;/span&gt;
          &lt;span class="range-wrapper"&gt;
            
          &lt;/span&gt;
        &lt;/span&gt;
        &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
          &lt;img alt="mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--prPRZNLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/volume-mute.png"&gt;
        &lt;/span&gt;
        &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
      &lt;/span&gt;
      &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
        &lt;span id="buffer"&gt;&lt;/span&gt;
        &lt;span id="progress"&gt;&lt;/span&gt;
        &lt;span id="time"&gt;initializing...&lt;/span&gt;
        &lt;span id="closebutt"&gt;√ó&lt;/span&gt;
      &lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#this-week-saronyitbarek-and-i-covered" class="anchor"&gt;
  &lt;/a&gt;
  This week, &lt;a class="comment-mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt;
 and I covered:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Salesforce's $27.7 billion Slack purchase&lt;/li&gt;
&lt;li&gt;Amazon's upcoming Sidewalk feature for IoT devices&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#we-also-spoke-with-the-following-guests-about-two-other-stories" class="anchor"&gt;
  &lt;/a&gt;
  We also spoke with the following guests about two other stories:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/JGamblin"&gt;Jerry Gamblin&lt;/a&gt;, Manager of Security and Compliance at Kenna Security. We chatted with Jerry about the U.S. Supreme Court hearing arguments about The Computer Fraud and Abuse Act.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sgolemon"&gt;Sara Golemon&lt;/a&gt;, Core Developer and Release Manager on the PHP team. Sara joined us to talk about PHP 8.0.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devnews"&gt;follow DevNews&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; ‚Äî or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links" class="anchor"&gt;
  &lt;/a&gt;
  Quick Listening Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s2-e6-salesforces-slackquisition-php-8-0-amazon-sidewalk/id1525581923?i=1000501173129"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/6faNGXVUC6qfEqil7L3BCp"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cDovL2ZlZWRzLmNvZGVuZXdiaWUub3JnL2Rldm5ld3NfcG9kY2FzdC54bWw/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZuZXdzLzE0?sa=X&amp;amp;ved=0CAQQkfYCahcKEwiQ2afivLLtAhUAAAAAHQAAAAAQAw&amp;amp;hl=en"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stitcher.com/show/devnews"&gt;Stitcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devnews/s2e6-salesforces-nsKGFSaiYtb/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevNews-p1352512/?topicId=159179945"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.herokuapp.com/podcasts/devnews/episodes/70"&gt;Transcript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pca.st/detp0o36"&gt;PocketCasts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Our season two sponsors, &lt;a href="https://triplebyte.com/a/YU8fSn0/d"&gt;Triplebyte&lt;/a&gt; and &lt;a href="https://nexmo.dev/devnews2"&gt;Vonage&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#" class="anchor"&gt;
  &lt;/a&gt;
  üóûÔ∏èüóûÔ∏èüóûÔ∏è
&lt;/h1&gt;

</description>
      <category>news</category>
      <category>podcast</category>
    </item>
    <item>
      <title>Do they teach "pointers" in bootcamp? Should they?</title>
      <author>Ben Halpern</author>
      <pubDate>Thu, 03 Dec 2020 19:16:45 +0000</pubDate>
      <link>https://dev.to/ben/do-they-teach-pointers-in-bootcamp-should-they-1g4b</link>
      <guid>https://dev.to/ben/do-they-teach-pointers-in-bootcamp-should-they-1g4b</guid>
      <description>&lt;p&gt;The &lt;em&gt;pointer&lt;/em&gt; is not a thing that every developer &lt;em&gt;needs&lt;/em&gt; to know, but it's still a thing that exists. This question is kind of a stand in for concepts &lt;em&gt;like&lt;/em&gt; pointers and not just that one thing.&lt;/p&gt;

&lt;p&gt;I wonder: Do they teach this concept in bootcamp at all?&lt;/p&gt;

&lt;p&gt;Should they teach stuff like pointers at all to a group learning, say, web development in JavaScript? If so, does it come early or late?&lt;/p&gt;

&lt;p&gt;I imagine the course doesn't need to cover computer science from the ground up, but what should get detailed and when?&lt;/p&gt;


&lt;div class="ltag__wikipedia--container"&gt;
  &lt;div class="ltag__wikipedia--header"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BZyEeiGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/wikipedia-logo-0a3e76624c7b1c3ccdeb9493ea4add6ef5bd82d7e88d102d5ddfd7c981efa2e7.svg" class="ltag__wikipedia--logo" alt="Wikipedia Logo"&gt;
    &lt;a href="https://en.wikipedia.org/wiki/Pointer_(computer_programming)" rel="noopener noreferrer"&gt;Pointer (computer programming)&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class="ltag__wikipedia--extract"&gt;&lt;p&gt;In computer science, a &lt;b&gt;pointer&lt;/b&gt; is an object in many programming languages that stores a memory address. This can be that of another value located in computer memory, or in some cases, that of memory-mapped computer hardware. A pointer &lt;i&gt;references&lt;/i&gt; a location in memory, and obtaining the value stored at that location is known as &lt;i&gt;dereferencing&lt;/i&gt; the pointer. As an analogy, a page number in a book's index could be considered a pointer to the corresponding page; dereferencing such a pointer would be done by flipping to the page with the given page number and reading the text found on that page. The actual format and content of a pointer variable is dependent on the underlying computer architecture.&lt;/p&gt;&lt;/div&gt;
  &lt;div class="ltag__wikipedia--btn--container"&gt;
    
      &lt;a href="https://en.wikipedia.org/wiki/Pointer_(computer_programming)" rel="noopener noreferrer"&gt;View on Wikipedia&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>discuss</category>
      <category>computerscience</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Top VS Code Extensions Every Developer Should Use üõ†</title>
      <author>Darsh Shah</author>
      <pubDate>Thu, 03 Dec 2020 19:14:22 +0000</pubDate>
      <link>https://dev.to/iamdarshshah/top-vs-code-extensions-every-developer-should-use-1man</link>
      <guid>https://dev.to/iamdarshshah/top-vs-code-extensions-every-developer-should-use-1man</guid>
      <description>&lt;p&gt;Are you looking for the amazing VS Code extensions that will help you be more productive while coding? ü§î&lt;/p&gt;

&lt;p&gt;If you said &lt;code&gt;Yes&lt;/code&gt;, then you're at the right place. In this article, I'll be sharing top VS Code Extensions you must-have for making your life easier. üòõ&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-vs-code" class="anchor"&gt;
  &lt;/a&gt;
  What is VS Code? ü§Ø
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Visual Studio Code&lt;/strong&gt; is a free source-code editor made by Microsoft for Windows, Linux, and macOS. Features include support for debugging, syntax highlighting, intelligent code completion, snippets, code refactoring, and embedded Git.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-vs-code" class="anchor"&gt;
  &lt;/a&gt;
  Why VS Code? üßê
&lt;/h3&gt;

&lt;p&gt;Microsoft Visual Studio is a premium and most dominant IDE for programming which is profoundly prevalent among engineers.&lt;/p&gt;

&lt;p&gt;It contains a plethora of different kinds of tools and features which makes testing and compatibility even easier.&lt;/p&gt;

&lt;p&gt;Visual Studio Code is potentially the best JavaScript ide for Windows, Mac, and Linux. Nowadays, VS Code is one of the most popular ides used by developers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#top-vs-code-extensions-you-must-have" class="anchor"&gt;
  &lt;/a&gt;
  Top VS Code Extensions, you must have ü§©
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments"&gt;Better Comments&lt;/a&gt; &lt;br&gt;
The Better Comments extension will help you create more human-friendly comments in your code. If you're the one who loves watching different colored comments, then check it out.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tSsATKKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607017728100/WioXWReu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tSsATKKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607017728100/WioXWReu2.png" alt="1.png"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer"&gt;Bracket Pair Colorizer&lt;/a&gt;&lt;br&gt;
This extension allows matching brackets to be identified with colors. The user can define which characters to match, and which colors to use.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EPwDTPBQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607017981626/4jyq8B7Pi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EPwDTPBQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607017981626/4jyq8B7Pi.png" alt="2.PNG"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome"&gt;Debugger for Chrome&lt;/a&gt;&lt;br&gt;
A VS Code extension to debug your JavaScript code in the Google Chrome browser, or other targets that support the Chrome DevTools Protocol.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets"&gt;ES7 React/Redux/GraphQL/React-Native snippets&lt;/a&gt;&lt;br&gt;
This extension will provide you JavaScript and React/Redux snippets in hand. So, no-more doubting your syntaxes. It will help you code quicker and in a more efficient manner. Also, it will save a lot of time while writing imports or react components (just for the sake of example).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vBDg24hY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607018946871/nIkOt0DYx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vBDg24hY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607018946871/nIkOt0DYx.png" alt="4.PNG"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;ESLint&lt;/a&gt;&lt;br&gt;
ESLint is a fantastic linter that picks up syntax errors for you to spot problems with your code before you run your code. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JW7juYHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020156128/OK1RYY1A_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JW7juYHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020156128/OK1RYY1A_.png" alt="9.PNG"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=file-icons.file-icons"&gt;file-icons&lt;/a&gt;&lt;br&gt;
It provides unique file icons to quickly identify file type in the IDE.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Py5vOo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019122812/76YFjOk2D.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Py5vOo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019122812/76YFjOk2D.png" alt="5.png"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;GitLens ‚Äî Git supercharged&lt;/a&gt;&lt;br&gt;
GitLens supercharges the Git capabilities built into Visual Studio Code. It helps you to visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JRBTQAf3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019325131/v0kfHg2UA.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JRBTQAf3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019325131/v0kfHg2UA.gif" alt="6.gif"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost"&gt;Import Cost&lt;/a&gt;&lt;br&gt;
This extension will display inline in the editor the size of the imported package. The extension utilizes webpack with babili-webpack-plugin in order to detect the imported size.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QJwFPWgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019511801/g7ppxn4vL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QJwFPWgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019511801/g7ppxn4vL.png" alt="7.PNG"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow"&gt;indent-rainbow&lt;/a&gt;&lt;br&gt;
This extension colorizes the indentation in front of your text alternating four different colors on each step.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iagqZc8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019672886/V6IPWTFqq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iagqZc8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607019672886/V6IPWTFqq.png" alt="8.png"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;Live Server&lt;/a&gt;&lt;br&gt;
Launch a local development server with live reload feature for static &amp;amp; dynamic pages. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rSIell4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020306599/sbjaeP4w-.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rSIell4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020306599/sbjaeP4w-.gif" alt="10.gif"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ionutvmi.path-autocomplete"&gt;Path Autocomplete&lt;/a&gt;&lt;br&gt;
Provides path completion for visual studio code. I personally found this extension really helpful.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fXGb8Mxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020465554/7AhC4rHZz.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fXGb8Mxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020465554/7AhC4rHZz.gif" alt="11.gif"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Prettier&lt;/a&gt;&lt;br&gt;
Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pZhUZEZ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020589495/r27jdZMnb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pZhUZEZ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020589495/r27jdZMnb.gif" alt="12.gif"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h4&gt;
  &lt;a href="#vs-code-theme-i-use" class="anchor"&gt;
  &lt;/a&gt;
  VS Code Theme I use üíú
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=sdras.night-owl"&gt;Night Owl&lt;/a&gt; by &lt;a href="https://twitter.com/sarah_edo"&gt;Sarah Drasner&lt;/a&gt; &lt;br&gt;
A VS Code theme for the night owls out there. Now introducing Light Owl theme for daytime usage. Decisions were based on meaningful contrast for reading comprehension and for optimal razzle-dazzle. ‚ú®&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y435LsZn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020754862/FyYkLZiUE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y435LsZn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1607020754862/FyYkLZiUE.png" alt="13.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are the extensions that I make use of in my day to day work life. Woohoo! We did it! üéâ&lt;/p&gt;

&lt;p&gt;Are you done setting up your VS Code? Obviously, isn't it üëÄ &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Is there any other extension that you make use of while coding? Please let me know in the comments section.‚úçÔ∏è&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Thanks, for reading it till the end.&lt;/em&gt; üôè&lt;/p&gt;




&lt;p&gt;Hope you find that helpful! Let me know your thoughts on this in the comments section. Don't forget to share this article with your friends or colleagues. Feel free to connect with me on any of the platforms below! üöÄ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/iamdarshshah"&gt;Twitter&lt;/a&gt;  |  &lt;a href="https://www.linkedin.com/in/iamdarshshah/"&gt;LinkedIn&lt;/a&gt;  |  &lt;a href="https://github.com/iamdarshshah"&gt;GitHub&lt;/a&gt; &lt;/p&gt;




</description>
      <category>vscode</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Tailwind CSS - Free starters coded in React, Vue, Svelte, and Angular</title>
      <author>Sm0ke</author>
      <pubDate>Thu, 03 Dec 2020 19:07:48 +0000</pubDate>
      <link>https://dev.to/sm0ke/tailwind-css-free-starters-coded-in-react-vue-svelte-and-angular-3e1p</link>
      <guid>https://dev.to/sm0ke/tailwind-css-free-starters-coded-in-react-vue-svelte-and-angular-3e1p</guid>
      <description>&lt;p&gt;Hello Coders, &lt;/p&gt;

&lt;p&gt;This article presents a short-list with open-source starters styled with Tailwind, the popular &lt;em&gt;utility-first CSS framework&lt;/em&gt;, in different technologies: React, Vue, Angular, Svelte, and plain Javascript.&lt;br&gt;&lt;br&gt;
The starters, provided and actively supported by Creative-Tim, are released under the MIT license and can be downloaded from Github (no account required). &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! TL;DR;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;(Free) &lt;a href="https://bit.ly/36Ce789"&gt;Tailwind React Starter&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://bit.ly/2L8GuCV"&gt;Tailwind Vue Starter&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://bit.ly/2Vzx5WQ"&gt;Tailwind Angular Starter&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://bit.ly/2SAbKLs"&gt;Tailwind Svelte Starter&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://bit.ly/3lDyEh4"&gt;Tailwind Vanilla JS&lt;/a&gt; - product page&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;The full index provided by &lt;a href="https://bit.ly/3fKQZaL"&gt;Creative-Tim&lt;/a&gt; can be found at this address: &lt;a href="https://bit.ly/2JBeeYV"&gt;Tailwind Templates&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--00lSSxmk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-free-starters-intro.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--00lSSxmk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-free-starters-intro.gif" alt="Tailwind CSS Templates - A curated index provided by Creative-Tim."&gt;&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-tailwind-css" class="anchor"&gt;
  &lt;/a&gt;
  What is &lt;strong&gt;Tailwind CSS&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Short-note&lt;/strong&gt; - Tailwind CSS is the most popular utility-first CSS framework in the world for rapidly building custom user interfaces for the web. It is a highly customizable collection of low-level CSS utility classes written in PostCSS destined to be customized using JavaScript.&lt;/p&gt;

&lt;p&gt;This CSS framework created by Adam Wathan, downloaded 10 million times until Aug.2020, comes with a new concept: it‚Äôs utility-based, which means you start with a collection of CSS primitives and code the entire UI from the bottom. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Links to read more about Tailwind:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt; - the official website&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://themesberg.com/blog/tailwind-css/tutorial"&gt;Tailwind CSS tutorial&lt;/a&gt; - a nice article published by Themesberg&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mattburgess.medium.com/getting-started-with-tailwindcss-3190def35361"&gt;Getting Started With TailwindCSS&lt;/a&gt; - more Tailwind stuff&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Once we have a basic idea about Tailwind, we can move on with our list. Let's go!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-react-starter" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/36Ce789"&gt;Tailwind React Starter&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Provider: Creative-Tim&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Notus React&lt;/strong&gt; is built with over frontend 100 individual components, giving you the freedom to choose and combine. All components can take variations in colors that you can easily modify using Tailwind CSS classes.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Product Page - &lt;a href="https://bit.ly/36Ce789"&gt;Tailwind React Starter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kSQqxd7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-react-notus-free-starter.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kSQqxd7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-react-notus-free-starter.jpg" alt="Tailwind CSS React - Free starter provided by Creative-Tim."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-vue-starter" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/2L8GuCV"&gt;Tailwind Vue Starter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The previous design can be downloaded also in Vue, another popular UI Framework. This Free Tailwind CSS and VueJS Template is coming with prebuilt examples, so the development process is seamless, switching from our pages to the real website is very easy to be done.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Product page - &lt;a href="https://bit.ly/2L8GuCV"&gt;Tailwind Vue Starter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RbwFmasi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-vue-notus-free-starter.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RbwFmasi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-vue-notus-free-starter.jpg" alt="Tailwind CSS Vue - Free starter provided by Creative-Tim."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-angular-starter" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/2Vzx5WQ"&gt;Tailwind Angular Starter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Angular is also present in our list used to animate the same UI Kit. Notus Angular is built with over frontend 100 individual components, giving you the freedom to choose and combine. All components can take variations in colors that you can easily modify using Tailwind CSS classes.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Product page - &lt;a href="https://bit.ly/2Vzx5WQ"&gt;Tailwind Angular Starter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBCfNoP1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-angular-notus-free-starter.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBCfNoP1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-angular-notus-free-starter.jpg" alt="Tailwind CSS Angular - Free starter provided by Creative-Tim."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-svelte-starter" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/2SAbKLs"&gt;Tailwind Svelte Starter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This version is my favorite and I'm playing a lot with it, mostly for my own learning activities. The product is nicely &lt;a href="https://bit.ly/3g7PELc"&gt;documented&lt;/a&gt; and anyone with basic Javascript knowledge can code a small project with ease. &lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;Product page - &lt;a href="https://bit.ly/2SAbKLs"&gt;Tailwind Svelte Starter&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_AoUfQ0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-svelte-notus-free-starter.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_AoUfQ0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/admin-dashboards/tailwind-css-free-starters/main/media/tailwind-css-svelte-notus-free-starter.jpg" alt="Tailwind CSS Angular - Free starter provided by Creative-Tim."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thank you! Btw, my (nick)name is &lt;strong&gt;Sm0ke&lt;/strong&gt; and I'm pretty active also on &lt;a href="https://twitter.com/Sm0keDev"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;P.S. Feel free to suggest more Tailwind starters in the comments. &lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>react</category>
      <category>vue</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Build HTML Forms Right: Security</title>
      <author>Austin Gil</author>
      <pubDate>Thu, 03 Dec 2020 18:58:11 +0000</pubDate>
      <link>https://dev.to/austingil/how-to-build-html-forms-right-security-3701</link>
      <guid>https://dev.to/austingil/how-to-build-html-forms-right-security-3701</guid>
      <description>&lt;p&gt;This is the last article in a series covering all the various aspects of creating forms for the web. Each article can be read independently, but I wrote them in the order that makes the most sense. If you have not read the others, I would encourage you to take a look.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://austingil.com/how-to-build-html-forms-right-semantics/"&gt;Part 1: Semantics&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://austingil.com/how-to-build-html-forms-right-accessibility/"&gt;Part 2: Accessibility&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://austingil.com/build-html-forms-right-styling/"&gt;Part 3: Styling&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://austingil.com/build-html-forms-right-user-experience/"&gt;Part 4: User Experience&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Part 5: Security&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This final article in the series is arguably the most important. It covers security. While the other articles were mainly focused on the frontend, security goes beyond that. We have to consider the current user, other users, and our own security. As such, we will look at the whole application architecture from frontend to backend and beyond.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#encrypt-traffic-ssl" class="anchor"&gt;
  &lt;/a&gt;
  Encrypt Traffic (SSL)
&lt;/h2&gt;

&lt;p&gt;Before we get too far, I will be using the term ‚ÄúSSL‚Äù to refer to a technology used to encrypt traffic on the internet. Technically, I mean Transport Layer Security (TLS), but ‚ÄúSSL‚Äù is commonly used and understood to mean the same thing. It‚Äôs what gives websites the little green lock in the URL bar and why they start with ‚Äúhttp*&lt;em&gt;s&lt;/em&gt;*‚Äù instead of ‚Äúhttp‚Äù (no ‚Äús‚Äù).&lt;/p&gt;

&lt;p&gt;Installing an SSL certificate is a best practice for several reason, security being the most important. Having an SSL certificate lets you encrypt the data passed between the client (your user) and the server (you).&lt;/p&gt;

&lt;p&gt;A hacker snooping on a network may inspect the packets of data a user sends. Without an SSL certificate, that data may be easily read as plain text. With an SSL certificate, the data can still be intercepted, but it would be sent as encrypted text which is pretty much useless.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Without an SSL certificate: username:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;NuggetTheMighty; password:  ILoveSquirrels&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With an SSL certificate (encrypted):&lt;br&gt;
&lt;code&gt;SIUFJaYQNtsn+y73mfBYv3fVfjJ2GdHl4A7XnTJXxgUyd4/TrU3nN+g3aJ4BVXSJL/E7&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is especially important when creating forms because the whole point of a form is to send data. We owe it to our users to protect their data.&lt;/p&gt;

&lt;p&gt;Getting and installing an SSL certificate used to cost time, money, and some technical know-how. Today, many hosting services will provide and install a certificate for you for free. In many cases, they even do so automatically.&lt;/p&gt;

&lt;p&gt;If your hosting service does not provide SSL certificates, there are other options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.cloudflare.com/"&gt;Cloudflare&lt;/a&gt; provides a ‚Äúflexible‚Äù SSL through their DNS. It‚Äôs free and easy, but probably better to have your own.&lt;/li&gt;
&lt;li&gt;  If your site uses &lt;a href="https://wordpress.org/"&gt;WordPress&lt;/a&gt;, there are a few &lt;a href="https://wordpress.org/plugins/ssl-zen/"&gt;plugins&lt;/a&gt; that will set up a certificate in under a minute, via &lt;a href="https://letsencrypt.org/"&gt;Let‚Äôs Encrypt&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;  You can use &lt;a href="https://certbot.eff.org/"&gt;Certbot&lt;/a&gt; to generate and install a certificate for you via &lt;a href="https://letsencrypt.org/"&gt;Let‚Äôs Encrypt&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you still don‚Äôt have an SSL certificate because your host doesn‚Äôt provide one, and you don‚Äôt have control of the DNS or server code‚Ä¶well, you‚Äôre kind of out of luck. You‚Äôre going to have to switch hosts, or talk to your server admin, or do something because this should be a hard requirement for any project these days.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understand-get-vs-post" class="anchor"&gt;
  &lt;/a&gt;
  Understand GET vs. POST
&lt;/h2&gt;

&lt;p&gt;In &lt;a href="https://austingil.com/how-to-build-html-forms-right-semantics/"&gt;a previous article&lt;/a&gt;, I said you should always include the &lt;code&gt;method&lt;/code&gt; attribute on your forms. The &lt;code&gt;method&lt;/code&gt; attribute tells the form to submit data with the &lt;code&gt;GET&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers"&gt;HTTP header&lt;/a&gt; on the request. If you omit the &lt;code&gt;method&lt;/code&gt;, the browser will default to using the &lt;code&gt;GET&lt;/code&gt; method. This is important because there are significant differences between &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; requests.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-request" class="anchor"&gt;
  &lt;/a&gt;
  GET Request
&lt;/h3&gt;

&lt;p&gt;Take a look at the following form using a GET method. When you submit the form, the data will be submitted to example.com (spoiler alert, it doesn‚Äôt actually do anything).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"https://example.com"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"GET"&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Send some sweet data&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"some-sweet-data"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Submit&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The key thing to notice is the URL after you submit the form. Although the form‚Äôs &lt;code&gt;action&lt;/code&gt; is ‚Äúexample.com‚Äù, the submission URL is ‚Äúexample.com?&lt;strong&gt;some-sweet-data&lt;/strong&gt;=blahblahblah‚Äù. Those query parameters correspond to the form inputs name attributes. This is how forms using the &lt;code&gt;GET&lt;/code&gt; method transfer data; query string parameters.&lt;/p&gt;

&lt;p&gt;Passing data as a URL parameter is relevant to security for a couple of reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; For many users, URL‚Äôs get saved in the browser‚Äôs history. Consider if form was sending a credit card number by query parameter, and the user was on a public computer, like at a library. Their private data could end up in the browser‚Äôs history for the next user to see.&lt;/li&gt;
&lt;li&gt; Many servers keep logs of the URL‚Äôs that received traffic. If sensitive information ends up in server log files, anyone with access to those files could see the data.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#post-request" class="anchor"&gt;
  &lt;/a&gt;
  POST Request
&lt;/h3&gt;

&lt;p&gt;Fortunately, you can use the &lt;code&gt;POST&lt;/code&gt; method to send data without using query parameters. Let‚Äôs look at the same form, but using the &lt;code&gt;POST&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"https://example.com"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Send some sweet data&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"some-sweet-data"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Submit&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Notice how submitting this form also loads example.com, but this time there is nothing in the query parameters. That‚Äôs because on a &lt;code&gt;POST&lt;/code&gt; request, data is sent as part of the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Request"&gt;request&lt;/a&gt; body. This makes it more difficult to accidentally leak private information.&lt;/p&gt;

&lt;p&gt;As a rule of thumb, I use the &lt;code&gt;POST&lt;/code&gt; method on all forms for the reasons listed above. The few exceptions to this rule, are if I want to let users bookmark their form submission, or share it with someone else. For example, check out this form that submits search to &lt;a href="https://duckduckgo.com/"&gt;DuckDuckGo&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"https://duckduckgo.com/"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"GET"&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"query"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Search&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"query"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"q"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Submit&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;After the form is submitted, DuckDuckGo will open with a query parameter in the URL. Then you could, if you wanted, copy this URL and share it with a colleague, or bookmark it for later. This pattern can very useful to keep it in mind unless you‚Äôre dealing with sensitive data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prevent-spam" class="anchor"&gt;
  &lt;/a&gt;
  Prevent Spam
&lt;/h2&gt;

&lt;p&gt;No one likes spam. And I‚Äôll admit it‚Äôs only marginally related to security. It‚Äôs worth mentioning here because any time we add a form to a public web page, we are opening up the doors to spam. Forms are meant to be filled out, but sometimes they get filled out by someone, or some*&lt;em&gt;thing&lt;/em&gt;*, for nefarious reasons.&lt;/p&gt;

&lt;p&gt;So how do we prevent it?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#honeypots" class="anchor"&gt;
  &lt;/a&gt;
  Honeypots
&lt;/h3&gt;

&lt;p&gt;One rudimentary way of preventing spam is called a ‚Äú&lt;a href="https://en.wikipedia.org/wiki/Honeypot_(computing)"&gt;honeypot&lt;/a&gt;‚Äù and the concept is quite simple. If you include a hidden input in your form, you know that a real human should never modify that field. Therefore, if the form is submitted with data for that input, you can assume it was a bot and reject the submission.&lt;/p&gt;

&lt;p&gt;In practice, here‚Äôs what that input might look like:&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;  The &lt;code&gt;name&lt;/code&gt; is important so you know what to check on the backend. I used ‚Äòhoneypot‚Äô, but most folks would recommend calling it something that sounds more legitimate.&lt;/li&gt;
&lt;li&gt;  I used a &lt;code&gt;visually-hidden&lt;/code&gt; class to hide the input from users (you can read more about this in the article on &lt;a href="https://austingil.com/how-to-build-html-forms-right-accessibility/"&gt;accessibility&lt;/a&gt; or &lt;a href="https://austingil.com/build-html-forms-right-styling/"&gt;styling&lt;/a&gt;). Bots will still see it.&lt;/li&gt;
&lt;li&gt;  The &lt;code&gt;tabindex="-1"&lt;/code&gt; removes the input from keyboard navigation. This is important for assistive technology users (more on this in the &lt;a href="https://austingil.com/how-to-build-html-forms-right-accessibility/"&gt;accessibility post&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;  Finally, we want to prevent the browser form filling the input automatically, so we disable &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete"&gt;&lt;code&gt;autocomplete&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The good news about this approach is that it can cost very little time and effort to implement. The bad news is that many bots are smart enough to tell when an input is a honeypot and they will skip over it. But hey, even if this stops 10% of spam, the level of effort is worth it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-challenge" class="anchor"&gt;
  &lt;/a&gt;
  Security Challenge
&lt;/h3&gt;

&lt;p&gt;A more robust way of preventing spam is to include a challenge that users need to complete to prove they are human. Some basic examples are inputs that ask you to complete an easy math question like ‚ÄúWhat is 10 + 6?‚Äù. Only data with the correct answer will be accepted.&lt;/p&gt;

&lt;p&gt;The problem with this method is that, once again, bots can be sophisticated enough to solve these challenges.&lt;/p&gt;

&lt;p&gt;The spam dilemma is a constantly evolving game of cat and mouse that has seen challenges become more complex through time. First math questions, then detecting letters or numbers in images.&lt;/p&gt;

&lt;p&gt;Probably the most familiar security challenge is &lt;a href="https://developers.google.com/recaptcha/"&gt;reCAPTCHA&lt;/a&gt;. It‚Äôs a service now owned by Google that shows users a bunch of images they need to identify. It works very well, and it‚Äôs free. If you are concerned about user-privacy, you may not want to use Google products. The good news is that there is another service called &lt;a href="https://www.hcaptcha.com/"&gt;hCaptcha&lt;/a&gt; which is a drop-in replacement. The security challenge technique is not without downsides:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  They are more technical to implement.&lt;/li&gt;
&lt;li&gt;  You may need to rely on a 3rd party service.&lt;/li&gt;
&lt;li&gt;  They can have a negative impact on &lt;a href="https://austingil.com/build-html-forms-right-user-experience/"&gt;user experience&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#waf-amp-apis" class="anchor"&gt;
  &lt;/a&gt;
  WAF &amp;amp; APIs
&lt;/h3&gt;

&lt;p&gt;If spam is becoming a major issue in your forms, you may want to consider reaching for a 3rd party service.&lt;/p&gt;

&lt;p&gt;One option is to set up a &lt;a href="https://en.wikipedia.org/wiki/Web_application_firewall"&gt;Web Application Firewall (WAF)&lt;/a&gt;. A WAF sits in front of your server and prevents traffic from bad actors getting to your website in the first place.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.cloudflare.com/"&gt;Cloudflare&lt;/a&gt; is my preferred vendor. They work at the DNS level and have a very generous free tier. I use this on every domain I own, and so far I haven‚Äôt had any problem with spam.&lt;/p&gt;

&lt;p&gt;Another option is to use an API service to test incoming form submissions. The most common one I know is &lt;a href="https://akismet.com/development/api/"&gt;Akismet&lt;/a&gt; which is part of the &lt;a href="https://automattic.com/"&gt;Automattic&lt;/a&gt; products (they make &lt;a href="https://wordpress.org/"&gt;WordPress&lt;/a&gt;). I‚Äôve used this on some WordPress sites and can say that it works well. They also have an API if you don‚Äôt use WordPress. CSS Tricks has &lt;a href="https://css-tricks.com/spam-detection-apis/"&gt;an article&lt;/a&gt; that goes into more depth on 3rd party spam APIs if you‚Äôre interested in other options.&lt;/p&gt;

&lt;p&gt;I wouldn‚Äôt trust any spam prevention technique to be 100% guaranteed. The field is ever-evolving with spammers getting more advanced every year. However, it‚Äôs also not the sort of problem I would try to solve until I have it. In which case, you can start with some of the low-hanging fruit and work your way up to a more involved solution.&lt;/p&gt;

&lt;p&gt;Considering the level of effort, user experience, cost, and everything else, I would approach things like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Setup Cloudflare on your DNS (or some other WAF)&lt;/li&gt;
&lt;li&gt; Use honeypots&lt;/li&gt;
&lt;li&gt; Integrate a spam detection API&lt;/li&gt;
&lt;li&gt; Setup hCaptcha (last resort due to the user experience)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#validate-data" class="anchor"&gt;
  &lt;/a&gt;
  Validate Data
&lt;/h2&gt;

&lt;p&gt;Validation is when you enforce that the data you receive matches what you expect. For example, if I am registering a new user, I want to make sure the email they provide is actually an email address.&lt;/p&gt;

&lt;p&gt;There are generally two places that you validate data: client-side and server-side.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clientside-validation" class="anchor"&gt;
  &lt;/a&gt;
  Client-Side Validation
&lt;/h3&gt;

&lt;p&gt;Validation on the front end is usually done with &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation"&gt;HTML attributes&lt;/a&gt; or with JavaScript.&lt;/p&gt;

&lt;p&gt;For example, if we wanted an input that must be filled out as an email with a maximum length, we could implement it like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"example.com"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Email
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt; &lt;span class="na"&gt;maxlength=&lt;/span&gt;&lt;span class="s"&gt;"20"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If a user tries to submit the form without satisfying our requirements, the browser will prevent it and show the user an error message.&lt;/p&gt;

&lt;p&gt;If we don‚Äôt want to show the built-in validation UI, we can add the &lt;a href="https://www.w3schools.com/TAGs/att_form_novalidate.asp"&gt;&lt;code&gt;novalidate&lt;/code&gt;&lt;/a&gt; attribute to our form. This will prevent the default validation logic, and we can replace it with our own.&lt;/p&gt;

&lt;p&gt;One approach is to use the form‚Äôs &lt;code&gt;checkValidity&lt;/code&gt; method to see if the form has any invalid inputs. If the form is invalid, we could loop over each input and see exactly what rule is being broken with the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/ValidityState"&gt;ValidityState API&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;form&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkValidity&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Do some validation logic with the input&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;ValidityState&lt;/code&gt; is very handy because it will give us an object where each key/value pair represents a validation attribute and it‚Äôs validity status:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  badInput: Boolean
  customError: Boolean
  patternMismatch: Boolean
  rangeOverflow: Boolean
  rangeUnderflow: Boolean
  stepMismatch: Boolean
  tooLong: Boolean
  tooShort: Boolean
  typeMismatch: Boolean
  valid: Boolean
  valueMissing: Boolean
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This can get us pretty far. We could show specific error messages for each invalid property, or modify the class names on the input (in fact, this is how &lt;a href="https://vuetensils.stegosource.com/"&gt;Vuetensils&lt;/a&gt; does validation).&lt;/p&gt;

&lt;p&gt;I can‚Äôt make assumptions about your implementation so you‚Äôll have to take it from here. If you need something more robust, you can use one of the &lt;a href="https://www.npmjs.com/search?q=validation&amp;amp;ranking=popularity"&gt;many JavaScript validation libraries on NPM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Whether it‚Äôs your own implementation or a third-party library, client-side suffers from one major flaw.&lt;/p&gt;

&lt;p&gt;Any technical user could modify HTML validation attributes, or bypass client-side validation altogether by making an HTTP request outside of your form. This is why it‚Äôs important to &lt;strong&gt;never trust data from the client&lt;/strong&gt;. Let me repeat.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Never trust data from the client!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Client-side validation should be used to &lt;a href="https://austingil.com/build-html-forms-right-user-experience/"&gt;improve user experience&lt;/a&gt; by providing immediate feedback. It should not be your only line of defense for securing your application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serverside-validation" class="anchor"&gt;
  &lt;/a&gt;
  Server-Side Validation
&lt;/h3&gt;

&lt;p&gt;Since we cannot trust data that comes in from the client, we should always validate data on the server side. For simple applications, you can create your own validation logic, but for serious projects I recommend using a dedicated library. Libraries are great for several reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Validation is a solved problem. No need to reinvent the wheel.&lt;/li&gt;
&lt;li&gt; Libraries often work better than custom implementation because they have been tested on more projects.&lt;/li&gt;
&lt;li&gt; A library can future-proof validation requirements. They can provide features we don‚Äôt need now but may need later.&lt;/li&gt;
&lt;li&gt; For server-side projects, we don‚Äôt need to worry about bundle size. The impact of adding more dependencies is not as high as on the client.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;My preferred validation library at the moment is &lt;a href="https://www.npmjs.com/package/yup"&gt;Yup&lt;/a&gt;. I &lt;em&gt;love&lt;/em&gt; it!&lt;/p&gt;

&lt;p&gt;How you end up doing server-side validation is up to you. In any case, there are some important considerations to make which relate to the front-end. Consider these point when you experience a validation error on the server:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Respond with the appropriate &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status"&gt;HTTP status code&lt;/a&gt; (&lt;code&gt;400&lt;/code&gt; in most cases).&lt;/li&gt;
&lt;li&gt;  Provide some sort of clear message on what was invalid.&lt;/li&gt;
&lt;li&gt;  If there are many things to validate (like a JSON object), validate the entire package. Don‚Äôt throw an error immediately for the first invalid value. Respond with all the validation issues to avoid multiple requests.&lt;/li&gt;
&lt;li&gt;  Providing unique error codes (ie. &lt;code&gt;{ error: INVALID_EMAIL }&lt;/code&gt;) can help the front-end create their own dictionary for error messages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sanitizeescape-data" class="anchor"&gt;
  &lt;/a&gt;
  Sanitize/Escape Data
&lt;/h2&gt;

&lt;p&gt;Like validation, data sanitizing (also known as escaping) is a practice that belongs on the server. Sanitizing data is when you transform or remove dangerous data. It‚Äôs different than validation because you don‚Äôt reject the input. You modify it so it‚Äôs safe to use.&lt;/p&gt;

&lt;p&gt;For example, let‚Äôs say you have a form that asks for a first name and last name. A user might enter the following:&lt;/p&gt;

&lt;p&gt;First name: &lt;code&gt;l33t; DROP TABLE user&lt;/code&gt;&lt;br&gt;&lt;br&gt;
Last name: &lt;code&gt;&amp;lt;script&amp;gt;alert('h4x0r')&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This person is most likely a liar that should not be trusted. Also, their data could subject you to TWO types of attacks: &lt;a href="https://en.wikipedia.org/wiki/SQL_injection"&gt;SQL injection&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Cross-site_scripting"&gt;cross-site scripting (XSS)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you try adding the user‚Äôs first name to the database as is, you might drop the entire &lt;code&gt;user&lt;/code&gt; table. Hello SQL Injection. If you save the last name as is, your database would be fine, but if you add that last name to your HTML, it could inject arbitrary JavaScript onto the page. The JavaScript in the example is harmless, but what if it transferred user secrets? Oof, XSS attack.&lt;/p&gt;

&lt;p&gt;This series focuses on HTML forms so we won‚Äôt get into the depths of XSS or SQL Injection. For in-depth prevention, I would recommend the &lt;a href="https://cheatsheetseries.owasp.org/"&gt;OWASP cheatsheet series&lt;/a&gt; for &lt;a href="https://cheatsheetseries.owasp.org/cheatsheets/DOM_based_XSS_Prevention_Cheat_Sheet.html"&gt;XSS&lt;/a&gt; and &lt;a href="https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html"&gt;SQL Injection&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The point I want to focus on is we could avoid both of the scenarios above by sanitizing the data. My advice, once again, is to lean on libraries that specialize in talking to databases.&lt;/p&gt;

&lt;p&gt;For SQL databases, I recommend using an &lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping"&gt;Object-relational Mapping (ORM)&lt;/a&gt; library instead of writing raw SQL. Many of them automatically sanitize data. For JavaScript projects, I really like &lt;a href="http://knexjs.org/"&gt;Knex.js&lt;/a&gt; and &lt;a href="https://vincit.github.io/objection.js/"&gt;Objection.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Whenever you are adding user-generated content to HTML you must sanitize strings to avoid XSS attacks. A library I‚Äôve used before is &lt;a href="https://jsxss.com/en/index.html"&gt;XSS&lt;/a&gt;. You can sanitize content in a few different places:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Before you save it to your database.&lt;/li&gt;
&lt;li&gt;  After you read it from your database.&lt;/li&gt;
&lt;li&gt;  Before you write it to an HTML document.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The safest place sanitize content is right before adding it to the HTML document. However, I like to follow a &lt;a href="https://en.wikipedia.org/wiki/Zero_Trust_Networks"&gt;zero-trust&lt;/a&gt; pattern and just assume the worst-case scenario. In which case, it‚Äôs best to do all three. Call me paranoid.&lt;/p&gt;

&lt;p&gt;It‚Äôs also worth mentioning that using a front-end framework to create your HTML documents can help as well. Many frameworks, such as &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt; and &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; automatically escape content before adding it to the page, unless you explicitly tell them not to.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#handle-jwts-properly" class="anchor"&gt;
  &lt;/a&gt;
  Handle JWTs Properly
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://jwt.io/"&gt;JSON Web Tokens (JWT)&lt;/a&gt; is a really cool technology that was created to solve the modern challenge of sending data around to several services while avoiding the need for a centralized service to check the validity of the data.&lt;/p&gt;

&lt;p&gt;In other words, we can store authentication details about a user inside a JWT and we can be certain that the contents of that token cannot be changed. Then we can send this token to an API, and that API does not need to check with any central database to know which user made the request. The API can simple open the JWT and see the authentication details for the user. It‚Äôs great.&lt;/p&gt;

&lt;p&gt;Authentication is one of the main ways JWTs are used today. However, JWTs do have some significant downsides:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  The contents of the JWT are not hidden to anyone that gains access to it.&lt;/li&gt;
&lt;li&gt;  JWTs can have an expiration date, but they cannot be programmatically invalidated.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For these two reasons, we should be especially thoughtful when working with JWT. Unfortunately, most of the tutorials I‚Äôve seen instruct developers to create authentication tokens (JWT) with somewhat long expiration dates and to store save tokens in &lt;code&gt;localStorage&lt;/code&gt;. I have issues with this.&lt;/p&gt;

&lt;p&gt;The problem with storing sensitive data in a JWT on the client &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"&gt;&lt;code&gt;localStorage&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage"&gt;&lt;code&gt;sessionStorage&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API"&gt;&lt;code&gt;IndexedDB&lt;/code&gt;&lt;/a&gt;, etc.) is that it‚Äôs accessible to any JavaScript on the page. It may be a cross-site script as well as any script we did not write ourselves: libraries and frameworks, assets from public CDNs, 3rd party snippets, even browser extensions.&lt;/p&gt;

&lt;p&gt;My other issue relates to token expiration. If a user with an ‚ÄúADMIN‚Äù role logs into our application, they would receive an auth token that says they are an ‚ÄúADMIN‚Äù. They could therefore perform ‚ÄúADMIN‚Äù related actions (like create or delete other users) until the token is lost or expires. If our auth token has an expiry time a week into the future, it could theoretically take a week for any change we make to be finalized. What if the ‚ÄúADMIN‚Äù role was a human error, and we actually meant to assign the ‚ÄúGUEST‚Äù role to this user? Do you see the problem?&lt;/p&gt;

&lt;p&gt;This brings me to my cardinal rules for JWT handling:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Any JWT that contains sensitive/private/authentication data (user ID, personal identifying information, etc) should only be stored in memory.&lt;/li&gt;
&lt;li&gt; Every JWT should have an expiration date. Any JWT used for &lt;strong&gt;authentication&lt;/strong&gt; or &lt;strong&gt;authorization&lt;/strong&gt; (‚Äòauth‚Äô) should have a very short expiration (ie. 15min, 24hr, etc.).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These rules solve our security issues, but present us with a couple of user experience challenges. By only storing auth tokens in memory, the user will have to log in every time the application loads. And if our auth tokens use a 15-minute expiration, then the user will effectively be ‚Äòlogged out‚Äô every 15 minutes.&lt;/p&gt;

&lt;p&gt;The solution to these issues is best explained by the excellent article, ‚Äú&lt;a href="https://hasura.io/blog/best-practices-of-using-jwt-with-graphql/"&gt;The Ultimate Guide to handling JWTs on frontend clients (GraphQL)&lt;/a&gt;‚Äù written by &lt;a href="https://twitter.com/VladimirNovick"&gt;Vladimir Novick&lt;/a&gt;. It‚Äôs a bit complicated, but I‚Äôll try my best to simplify things in an example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  You create two authentication routes. One for logging into the application (&lt;code&gt;/login&lt;/code&gt;) and one for generating a new auth token (&lt;code&gt;/refresh&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;  When a user logs in, and auth token is returned that contains any data required to authorize a request (eg. &lt;code&gt;{userId:  5, role:  'admin'}&lt;/code&gt;). It has a short expiry (eg. 15 minutes).&lt;/li&gt;
&lt;li&gt;  The login response also returns a refresh token. This token only contains the information necessary to recreate a new auth token (eg, &lt;code&gt;{userId:  5}&lt;/code&gt;). It can have a longer expiry to match how long you want a user to stay ‚Äòlogged in‚Äô for. Let‚Äôs say a week.&lt;/li&gt;
&lt;li&gt;  A user logs in by sending their credentials to the login route, and in return, they get one auth token and one refresh token.&lt;/li&gt;
&lt;li&gt;  The auth token gets saved in memory, and the refresh token can be put in &lt;code&gt;localStorage&lt;/code&gt; (it doesn‚Äôt usually matter if someone knows my user‚Äôs ID).&lt;/li&gt;
&lt;li&gt;  After login, we also set an interval for 14 minutes (less than the auth token expiry). On this interval, we send the refresh token to the &lt;code&gt;/refresh&lt;/code&gt; route, and exchange it for a new auth token.&lt;/li&gt;
&lt;li&gt;  This new auth token can replace the old one, and the user remains ‚Äòlogged in‚Äô.&lt;/li&gt;
&lt;li&gt;  The last step is to make sure to check &lt;code&gt;localStorage&lt;/code&gt; for existing refresh tokens any time the application starts. If there is a refresh token, we hit the &lt;code&gt;/refresh&lt;/code&gt; route before the app loads. That way we can keep a user ‚Äòlogged in‚Äô across multiple sessions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This JWT login flow is quite complicated, but I hope I did it justice. To fully describe it requires a dedicated article, so I would invite you to read &lt;a href="https://hasura.io/blog/best-practices-of-using-jwt-with-graphql/"&gt;the article&lt;/a&gt; I mentioned above. It‚Äôs excellent.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#protect-against-csrf-attacks" class="anchor"&gt;
  &lt;/a&gt;
  Protect Against CSRF Attacks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Cross-site_request_forgery"&gt;Cross-Site Request Forgery (CSRF)&lt;/a&gt; attacks are a bit complicated to understand, but they work by tricking users into making a request on the attacker‚Äôs behalf. A theoretical example is probably best to explain.&lt;/p&gt;

&lt;p&gt;Imagine your bank has a form to send money from your account to another user‚Äôs account. This form sends money by making a &lt;code&gt;POST&lt;/code&gt; request to some endpoint such as &lt;code&gt;yourbank.com/send-money&lt;/code&gt; with two data values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;to&lt;/code&gt;: The user ID receiving the money&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;amount&lt;/code&gt;: The amount you want to send (obviously).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For security reasons, this only works if you are logged in (also obviously). The server could authenticate the request via &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies"&gt;HTTP cookies&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this hypothetical scenario, this form may be vulnerable to CSRF attacks. If an attacker knows enough about how the bank‚Äôs backend works, they could create a form disguised as a button that promises kittens.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"http://example.com/send-money"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"hidden"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"to"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"123456"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"hidden"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"amount"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;Click for Kittens!!!&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Notice how the form above takes advantage of a couple of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/hidden"&gt;&lt;code&gt;hidden&lt;/code&gt;&lt;/a&gt; inputs with the values setting the &lt;code&gt;to&lt;/code&gt; and &lt;code&gt;amount&lt;/code&gt; data. To an unsuspecting user, this form will visually present as a button promising kittens (evil, I know).&lt;/p&gt;

&lt;p&gt;If you were to click this button, it would submit the form to your bank‚Äôs &lt;code&gt;/send-money&lt;/code&gt; endpoint, and if you‚Äôre already logged in with a valid cookie in your browser, that cookie will be sent along with the form submission. This could be enough to trick a user to send money to someone else.&lt;/p&gt;

&lt;p&gt;It‚Äôs also worth noting that this attack could happen in a number of ways. It could exist on a random website, within an email, in a browser extension, and more. And if JavaScript is enabled, which it most likely is, it can even happen without any user interaction. So how do we protect against this?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#csrf-tokens" class="anchor"&gt;
  &lt;/a&gt;
  CSRF Tokens
&lt;/h3&gt;

&lt;p&gt;One way to prevent this from happening is by using ‚ÄúCSRF tokens‚Äù. These are unique values that are generated on the server that only the server knows about. They are provided to a form in order to be used as the value of a hidden input like this:&lt;/p&gt;



&lt;p&gt;With the input containing the CSRF token in place, the form can be submitted, and the backend can check the validity of the token. Any form that includes a valid token can continue on the request. Any form submitted with an invalid or missing token is rejected.&lt;/p&gt;

&lt;p&gt;If a hacker wants to create the same form as the one above, they will not be able to generate their own CSRF token (assuming you do have a way to validate the tokens).&lt;/p&gt;

&lt;p&gt;The tricky part here is getting the CSRF token in a way no one else can. If you are creating the form on the same server, it‚Äôs easy enough to generate a token and then pop it into the HTML. If you are working with an API then you need a route that provides valid CSRF tokens. You should configure this route to only allow traffic from known domains. That way you can make a request for a token from a valid domain, but hackers will not be able to.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#validate-request-origin" class="anchor"&gt;
  &lt;/a&gt;
  Validate Request Origin
&lt;/h3&gt;

&lt;p&gt;A basic but clever approach to prevent CSRF attacks is to check the request‚Äôs &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin"&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; and/or &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer"&gt;&lt;code&gt;Referer&lt;/code&gt;&lt;/a&gt; headers. These &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers"&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/a&gt; contain the URL from which the request was made.&lt;/p&gt;

&lt;p&gt;The best thing about these headers is that they are set by the browser and cannot be programmatically modified. So no funny business. How you access these headers will depend on the technology you use. For example, if I am using &lt;a href="https://expressjs.com/"&gt;Express&lt;/a&gt;, I can create a &lt;a href="https://expressjs.com/en/guide/using-middleware.html#using-middleware"&gt;middleware&lt;/a&gt; that looks something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;allowedHosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;referer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;origin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;referer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;referer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;referer&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;origin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;allowedHosts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;origin&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;referer&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Unallowed origin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  Create a list of all the allowed hosts (in our case, only our same app domain is valid)&lt;/li&gt;
&lt;li&gt;  Check if the &lt;code&gt;referer&lt;/code&gt; and/or &lt;code&gt;origin&lt;/code&gt; headers are present. If so, grab their URL&lt;/li&gt;
&lt;li&gt;  If neither the &lt;code&gt;origin&lt;/code&gt; nor the &lt;code&gt;referer&lt;/code&gt; URLs are within our list of allowed hosts, we reject the request.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This snippet is good for an example, but you may need something more robust for production purposes. In any case, it can be implemented with few lines of code, which I always appreciate.&lt;/p&gt;

&lt;p&gt;For more details on CSRF attacks, OWASP has &lt;a href="https://owasp.org/www-community/attacks/csrf"&gt;an excellent article&lt;/a&gt; with more descriptions. They also have &lt;a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"&gt;an article&lt;/a&gt; in their cheatsheet series with more details on preventing CSRF attacks. In fact, they are an excellent resource for &lt;a href="https://owasp.org/www-community/attacks/"&gt;anything related to security&lt;/a&gt; and I would highly recommend you take some time to read through their content.&lt;/p&gt;

&lt;p&gt;For my fellow JavaScript developers out there, &lt;a href="https://auth0.com/"&gt;Auth0&lt;/a&gt; has &lt;a href="https://auth0.com/blog/cross-site-request-forgery-csrf/"&gt;a nice article&lt;/a&gt; specific to Node.js development and CSRF prevention.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#secure-cookies" class="anchor"&gt;
  &lt;/a&gt;
  Secure Cookies
&lt;/h2&gt;

&lt;p&gt;As mentioned above, CSRF attacks use cookies as part of their attack vector. So it makes sense that a good way to protect against cookie-based attacks is to make sure our cookies are secure.&lt;/p&gt;

&lt;p&gt;For those unfamiliar, a cookie is an &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers"&gt;HTTP header&lt;/a&gt;. More specifically, cookies are assigned with the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie"&gt;&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/a&gt; header and look like this: &lt;code&gt;Set-Cookie:  &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;;  &amp;lt;attributes&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An example might look like:&lt;/p&gt;

&lt;p&gt;Set-Cookie: sessionId=38afes7a8;  Domain=example.com;  Max-Age=2592000;  Secure;  HttpOnly;  SameSite=strict;  &lt;/p&gt;

&lt;p&gt;Some of the attributes relevant to security are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;Expires&lt;/code&gt; and &lt;code&gt;Max-Age&lt;/code&gt;: Allows you to set a time limit on the cookie‚Äôs validity.&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#Secure"&gt;&lt;code&gt;Secure&lt;/code&gt;&lt;/a&gt;: Ensures that the cookie will only be sent if the request is made over a secure (HTTPS) connection. Useful for preventing &lt;a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack"&gt;man-in-the-middle attacks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#HttpOnly"&gt;&lt;code&gt;HttpOnly&lt;/code&gt;&lt;/a&gt;: Prevents JavaScript from having access to the cookie. Useful for preventing XSS attacks.&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite"&gt;&lt;code&gt;SameSite&lt;/code&gt;&lt;/a&gt;: Can be set to only send cookies if the request origin matches the target domain. Useful for preventing CSRF attacks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are all the attributes that I think relate to security. But as you can see, only the &lt;code&gt;SameSite&lt;/code&gt; cookie attribute is relevant for CSRF attacks. This is a relatively recent addition to the web platform and is great news for security. However, because it‚Äôs somewhat new, it won‚Äôt be effective on older browsers.&lt;/p&gt;

&lt;p&gt;If you want to can read more about working with cookies, I would recommend the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies"&gt;MDN docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts" class="anchor"&gt;
  &lt;/a&gt;
  Closing Thoughts
&lt;/h2&gt;

&lt;p&gt;I realize that some of the content in this post is only tangentially related to writing forms. Some of the advice here is not directly related forms at all. However, I hope you agree that it‚Äôs relevant information. We must keep these things in mind as we are writing forms for the web. Even if we are not the ones implementing these changes, we should think about our software holistically in order to keep ourselves and our users safe.&lt;/p&gt;

&lt;p&gt;This article took about 20 hours to research and create. The best way to show me that you enjoyed it is to &lt;a href="https://twitter.com/share?via=Stegosource"&gt;share it&lt;/a&gt;. You can also &lt;a href="https://austingil.com/newsletter/"&gt;sign up for my newsletter&lt;/a&gt; or &lt;a href="https://twitter.com/Stegosource"&gt;follow me on Twitter&lt;/a&gt; if you want to be the first to know when new articles come out.&lt;/p&gt;

&lt;p&gt;And if you missed any of the other articles, please consider giving them a read. I think you‚Äôll enjoy those too.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://austingil.com/how-to-build-html-forms-right-semantics/"&gt;Part 1: Semantics&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://austingil.com/how-to-build-html-forms-right-accessibility/"&gt;Part 2: Accessibility&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://austingil.com/build-html-forms-right-styling/"&gt;Part 3: Styling&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://austingil.com/build-html-forms-right-user-experience/"&gt;Part 4: User Experience&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-part-5-security" class="anchor"&gt;
  &lt;/a&gt;
  -   &lt;strong&gt;Part 5: Security&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;This article was originally published on &lt;a href="https://austingil.com"&gt;austingil.com&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>development</category>
      <category>html</category>
      <category>javascript</category>
      <category>security</category>
    </item>
    <item>
      <title>WebSocket Explained (By a Non-Developer)</title>
      <author>Kaylan Stock</author>
      <pubDate>Thu, 03 Dec 2020 17:11:21 +0000</pubDate>
      <link>https://dev.to/harperdb/websocket-explained-by-a-non-developer-3naj</link>
      <guid>https://dev.to/harperdb/websocket-explained-by-a-non-developer-3naj</guid>
      <description>&lt;p&gt;Welcome back! It‚Äôs been a minute since I explained something most of you probably know better than me üôÇ. For WebSocket, I knew very little before I did my research. I understood that it was widely used and that it was a tool for two way communication, but had no knowledge beyond that. So let‚Äôs get right to it! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-evolution-of-the-websocket" class="anchor"&gt;
  &lt;/a&gt;
  The Evolution of the WebSocket
&lt;/h3&gt;

&lt;p&gt;History time! What came before WebSocket? &lt;a href="https://hackernoon.com/everything-you-ever-wanted-to-know-about-websockets-literally-a05f36432999"&gt;HTTP of course!&lt;/a&gt; HTTP is a stateless request-response mechanism that stands for ‚Äúhypertext transfer protocol‚Äù and it worked well for many years and is still a great option for certain use cases today, think websites, HTTP is a great fit for this use case. The request/response mechanism was basically used for the same thing WebSocket is used for today, albeit some use cases have far outgrown HTTP.  If the connection dropped between the request/response with HTTP, it wasn‚Äôt a problem. You could restore communication at any point thanks to its stateless nature. Back in the olden days, &lt;a href="https://www.ably.io/topic/websockets#enter-web-sockets"&gt;there was only a need for dealing with text docs&lt;/a&gt; and a limited amount of additional assets, so HTTP was all that was needed.&lt;/p&gt;

&lt;p&gt;Evolution is inevitable when it comes to the world of tech, and applications quickly evolved beyond what HTTP could offer. Developers needed more because applications were shifting towards real-time implementations, and latency from the high frequency of request/response was making it impossible to achieve the real-time communication needed. Thus came long polling which allowed the TCP connection to stay a little longer than HTTP, but this was really just a temporary bandaid rather than a full solution. There were still issues with latency and overhead‚Ä¶ so Hello World, WebSockets were born!&lt;/p&gt;

&lt;p&gt;Before WebSocket was called WebSocket it was &lt;a href="https://en.wikipedia.org/wiki/WebSocket"&gt;referenced as TCPConnection&lt;/a&gt; in the &lt;a href="https://en.wikipedia.org/wiki/HTML5"&gt;HTML5&lt;/a&gt; specification, as a placeholder for a TCP-based socket API. WebSocket came to be in June of 2008 when &lt;a href="https://en.wikipedia.org/wiki/Michael_Carter_(entrepreneur)"&gt;Micheal Carter&lt;/a&gt;, a tech entrepreneur, led discussions around the protocol that would become WebSocket. What‚Äôs behind the name? Carter and a fellow by the name Ian Hickerson coined WebSocket in a chat room. One could even say they named the two way communication protocol using a two way communication tool (see what I did there)! By the end of 2009, Google shipped full support for WebSocket with their Chrome 4 release and it became widely available through multiple browsers by 2011. Even iOS and Android support WebSocket as of 2013, so there are really endless possibilities when using the protocol. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#websocket-to-transport-or-to-protocol" class="anchor"&gt;
  &lt;/a&gt;
  WebSocket: To Transport or To Protocol
&lt;/h3&gt;

&lt;p&gt;So now that we have the history, let‚Äôs break down the technology. &lt;a href="https://crossbario.com/blog/Websocket-Persistent-Connections/#:~:text=WebSocket%20offers%20persistent%20connections%20and,client%2Dto%2Dserver%20communication.&amp;amp;text=A%20WebSocket%20connection%20only%20persists,(not%20navigated%20away%20from)."&gt;WebSocket opens a bi-directional communication path&lt;/a&gt; between a server and client. This path is persistent which is a fancy way to say continuous and in both directions, so there is very low latency and high efficiency within the communication path. You don‚Äôt have to worry about individual responses and requests, instead it‚Äôs like the infinite loop that is always on as long as parties have agreed to an initial ‚Äúhandshake‚Äù (which is actually a response/request  HTTP call, meaning there is a touch of old school thrown in with the new). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.ably.io/topic/websockets#so-what-exactly-are-web-sockets-anyway"&gt;One article I found&lt;/a&gt; described WebSocket as a thin transport layer built on top of a TCP/IP stack. They also mentioned that some refer to WebSocket as a protocol (i.e. me) while some refer to it as a transport. The author says transport is more accurate and I actually found this very interesting because I never had heard it called a transport before and will call it a transport going forward in my blog. I don‚Äôt want to divulge too much into this argument, but take a read for yourself and then let me know what sounds more accurate to you in the comments! &lt;em&gt;Side note: if you want a really in depth read from someone with a technical background on WebSocket, &lt;a href="https://www.ably.io/topic/websockets"&gt;this article is overall an excellent resource&lt;/a&gt; and I found it to be the most in-depth resource out there.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PK7oXw3X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_AC26F9B4DC4A3907CFDF8CE20DC948EBF4E434DEEE08CAFE7C74E1CF4E638D2B_1606850232151_image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PK7oXw3X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_AC26F9B4DC4A3907CFDF8CE20DC948EBF4E434DEEE08CAFE7C74E1CF4E638D2B_1606850232151_image.png" alt="Image Source:  https://hackernoon.com/everything-you-ever-wanted-to-know-about-websockets-literally-a05f36432999"&gt;&lt;/a&gt;&lt;/p&gt;Image Source:  &lt;a href="https://hackernoon.com/everything-you-ever-wanted-to-know-about-websockets-literally-a05f36432999"&gt;https://hackernoon.com/everything-you-ever-wanted-to-know-about-websockets-literally-a05f36432999&lt;/a&gt;

&lt;p&gt;There are &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API"&gt;three main interfaces&lt;/a&gt; when it comes to WebSocket: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;WebSocket&lt;/code&gt;-primary interface for the connection of the server to send/receive messages &lt;br&gt;
&lt;code&gt;CloseEvent&lt;/code&gt;-event when a WebSocket connection closes&lt;br&gt;
&lt;code&gt;MessageEvent&lt;/code&gt;-event when a message is received from the server&lt;/p&gt;

&lt;p&gt;WebSocket has provided a standardized way for client applications and browsers to talk to servers without tedious requests every time. Work smarter not harder is what I always say and WebSocket lives by this code!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#websocket-use-cases" class="anchor"&gt;
  &lt;/a&gt;
  WebSocket Use Cases
&lt;/h3&gt;

&lt;p&gt;The main purpose of WebSockets has already been stated: a communication path from your application to your server. &lt;a href="https://www.infoworld.com/article/2071232/9-killer-uses-for-websockets.html"&gt;Here are some more specific ideas&lt;/a&gt; for using WebSockets that follow the server to app path:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Social feeds, news feeds, and chat rooms!&lt;/li&gt;
&lt;li&gt;Games that are for multiplayer&lt;/li&gt;
&lt;li&gt;Collaboration tools like Dropbox or tools for collaborative coding&lt;/li&gt;
&lt;li&gt;Location based apps (hello Find My Friends- is this stalker status or cool? Thoughts?) &lt;/li&gt;
&lt;li&gt;E-learning- well that seems relevant in 2020! &lt;/li&gt;
&lt;li&gt;Many others! Anything you can think of that I missed?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://medium.com/the-developer-journal/10-most-amazing-use-cases-of-websockets-go-real-time-166b71e0e711"&gt;Data visualization&lt;/a&gt; is another use case for WebSockets, again due to the real-time nature that can be needed for data visualizations, like say, for maps that show real-time weather data so that you always know whether to rock your flip flops or your snow boots (if you live in Colorado like me then you wear flip flops regardless because we are hardcore here)!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#review-websockets-with-actual-developers" class="anchor"&gt;
  &lt;/a&gt;
  Review WebSockets with Actual Developers üôÇ
&lt;/h3&gt;

&lt;p&gt;Next week, the HarperDB team is putting on one &lt;a href="https://harperdb.io/casne-and-harperdb-websocket-event/link/kaylandevto/content"&gt;final virtual event&lt;/a&gt; to close out 2020. If you want to go deeper into WebSocket and what it can do for you, you should RSVP! We will be joined by &lt;a href="https://casne.com/"&gt;Casne Systems Engineer&lt;/a&gt;, Carl Argabright, to chat about all things WebSocket and explore a case study using WebSocket as the fastest method for collecting high resolution data for analytics. The event will be on December 8th (that‚Äôs only FIVE days away!) at 5:00pm PST. (No worries if you can‚Äôt make it live, if you &lt;a href="https://harperdb.io/casne-and-harperdb-websocket-event/link/kaylandevto/content"&gt;RSVP&lt;/a&gt; you‚Äôll receive a recording of the event afterwards!) &lt;/p&gt;

&lt;p&gt;If you prefer written tutorials and content, &lt;a href="https://dev.to/ethanarrowood"&gt;Ethan Arrowood&lt;/a&gt; just wrote this &lt;a href="https://dev.to/ethanarrowood/harperdb-and-websockets-3p6k"&gt;excellent tutorial on HarperDB and WebSocket&lt;/a&gt;. You can check out the &lt;a href="https://studio.harperdb.io/resources/marketplace/active"&gt;HarperDB WebSocket Client&lt;/a&gt; in the HarperDB Developer Marketplace. As always, send me feedback and tell me what I missed when it comes the wonderful world of WebSocket. Or if you have suggestions for what I should cover next in this series please LMK! &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>websockets</category>
    </item>
    <item>
      <title>9 cool tips/tricks for Web Developers</title>
      <author>Mehul Lakhanpal</author>
      <pubDate>Thu, 03 Dec 2020 16:25:53 +0000</pubDate>
      <link>https://dev.to/318097/9-cool-tips-tricks-for-web-developers-48m7</link>
      <guid>https://dev.to/318097/9-cool-tips-tricks-for-web-developers-48m7</guid>
      <description>&lt;h3&gt;
  &lt;a href="#1-search-for-files-on-github-repository" class="anchor"&gt;
  &lt;/a&gt;
  1. Search for files on GitHub repository
&lt;/h3&gt;

&lt;p&gt;Press &lt;strong&gt;&lt;code&gt;t&lt;/code&gt;&lt;/strong&gt; in the repo to enter &lt;strong&gt;&lt;code&gt;search mode&lt;/code&gt;&lt;/strong&gt; for the project's file structure&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5tuVfOaF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4g5zqeskl0ybifiximc2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5tuVfOaF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4g5zqeskl0ybifiximc2.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-highlightreply-shortcut-in-github" class="anchor"&gt;
  &lt;/a&gt;
  2. Highlight/Reply shortcut in Github
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;When in an issue, Highlight the line which needs a reply.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E_DMIfb4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ico4fu84bcyqp5lcd1km.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E_DMIfb4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ico4fu84bcyqp5lcd1km.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Then press &lt;code&gt;r&lt;/code&gt; to reply to that from the comment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NdS6vWZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/l04qk0j9zdxyjexumpzw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NdS6vWZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/l04qk0j9zdxyjexumpzw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-shortcut-to-use-lodash" class="anchor"&gt;
  &lt;/a&gt;
  3. Shortcut to use Lodash
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Go to the Lodash homepage&lt;/li&gt;
&lt;li&gt;Open devtools&lt;/li&gt;
&lt;li&gt;Lodash library is available for use from &lt;code&gt;_&lt;/code&gt; variable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q8W_d56m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/obags6jwggutm0pzpr6k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q8W_d56m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/obags6jwggutm0pzpr6k.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-nullish-coalescing-operator" class="anchor"&gt;
  &lt;/a&gt;
  4. Nullish coalescing operator
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 100&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Nullish coalescing operator&lt;/code&gt; (??) returns the right-hand side value only if the left-hand side value is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-convert-a-number-from-decimal-to-binary" class="anchor"&gt;
  &lt;/a&gt;
  5. Convert a number from decimal to binary
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;toString()&lt;/code&gt; can be used to convert numbers to different bases. It takes a param, which specifies the base to convert to.&lt;br&gt;
To convert a number to binary, the base would be &lt;code&gt;2&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;decimal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;decimal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;binary&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 101&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-add-properties-to-functions" class="anchor"&gt;
  &lt;/a&gt;
  6. Add Properties to functions
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Called &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; times`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Called 2 times&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-change-array-size-using-the-length-property" class="anchor"&gt;
  &lt;/a&gt;
  7. Change array size using the length property
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1, 2]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-prevent-an-objects-properties-value-from-updating" class="anchor"&gt;
  &lt;/a&gt;
  8. Prevent an object's properties value from updating
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Codedrops&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Codedrops&lt;/span&gt;

&lt;span class="cm"&gt;/* Set the 'writable' descriptor to false for the 'name' key  */&lt;/span&gt;
&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defineProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;writable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ABC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Codedrops&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-maps-can-store-any-type-of-key" class="anchor"&gt;
  &lt;/a&gt;
  9. Maps can store any type of key
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myMap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numberKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stringKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;str&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arrayKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;objectKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;abc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;myMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numberKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Number Key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;myMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stringKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;String Key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;myMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arrayKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Array Key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;myMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;objectKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Object Key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;myMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="cm"&gt;/*
Output:
1 : Number Key
str : String Key
1,2,3 : Array Key
[object Object] : Object Key
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Thanks for reading üíô&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Follow &lt;strong&gt;@codedrops.tech&lt;/strong&gt; for daily posts.&lt;br&gt;&lt;br&gt;
&lt;a href="https://www.instagram.com/codedrops.tech/"&gt;Instagram&lt;/a&gt; ‚óè &lt;a href="https://twitter.com/codedrops_tech"&gt;Twitter&lt;/a&gt; ‚óè &lt;a href="https://www.facebook.com/codedrops.tech/"&gt;Facebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Micro-Learning ‚óè Web Development ‚óè Javascript ‚óè MERN stack ‚óè Javascript&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.codedrops.tech/"&gt;codedrops.tech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The UX of Proving Our Humanity To Machines</title>
      <author>shawn swyx wang üá∏üá¨</author>
      <pubDate>Thu, 03 Dec 2020 16:13:27 +0000</pubDate>
      <link>https://dev.to/swyx/the-ux-of-proving-our-humanity-to-machines-nf</link>
      <guid>https://dev.to/swyx/the-ux-of-proving-our-humanity-to-machines-nf</guid>
      <description>&lt;p&gt;If you swung by my Twitter profile in the last week, you probably saw this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z6W6Sfcr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/olflh5jfvk5clb15p5z9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z6W6Sfcr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/olflh5jfvk5clb15p5z9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm not sure of the precise causes of me being locked out, but I have several abnormal usage factors that probably put me on the high end of Twitter's bot risk system:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I currently live in Singapore but am primarily active during US hours and have a US Phone Number&lt;/li&gt;
&lt;li&gt;I post about 30 tweets a day, probably on the high end of most Twitter users. (30 sounds like a lot, but it's mostly replies, and I maybe post 2-3 actual top tweets a day)&lt;/li&gt;
&lt;li&gt;I switch between and manage three different accounts (&lt;a href="https://twitter.com/Coding_Career"&gt;Coding Career&lt;/a&gt; and &lt;a href="https://twitter.com/SvelteSociety"&gt;Svelte Society&lt;/a&gt;) multiple times a day&lt;/li&gt;
&lt;li&gt;As far as I know I have not been reported on, but I do have people that strongly dislike me and they may have used the report button against me. Can't rule that out as a factor.&lt;/li&gt;
&lt;li&gt;Anecdotally &lt;a href="https://twitter.com/b2m9/status/1295748479713779712?s=20"&gt;some IPs seem more risky&lt;/a&gt; than others - I also use a VPN for work which probably shows me jumping across multiple countries in a single day, which is certainly suspicious on the face of it&lt;/li&gt;
&lt;li&gt;I have also noticed I get verification checks more often when I use scheduled tweets.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you clicked through my scary profile you also saw this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KCdNn3EW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6xjg8jxiwgidwffvwsnu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KCdNn3EW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6xjg8jxiwgidwffvwsnu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I swear that I haven't mass unfollowed everybody! Most people see this and assume that I used some script to mass unfollow everyone and therefore got flagged as a bot. &lt;strong&gt;The reality is the exact opposite&lt;/strong&gt; - I got flagged as a bot, and by default Twitter temporarily removes all follows. &lt;/p&gt;

&lt;p&gt;It will be restored once I regain my Twitter account (I've filed a support ticket and am trying to reach out to friends at Twitter for help), but this is the exact user experience I wanted to talk about for this post.&lt;/p&gt;

&lt;p&gt;First, a quick detour for a personal anecdote.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aside-my-time-as-a-cuban-detainee" class="anchor"&gt;
  &lt;/a&gt;
  Aside: My Time As A Cuban Detainee
&lt;/h2&gt;

&lt;p&gt;A long time ago I visited Havana with some college friends. Right after landing we headed into a restaurant, all our luggage in tow. After we were done eating, I stood up and turned around - only to find all my luggage gone! Someone had stolen it while we were eating. The restaurant staff of course swore up and down that they had not seen who had taken it.&lt;/p&gt;

&lt;p&gt;Losing all your luggage on day 1 of a weeklong trip sucks, but what is worse is that &lt;strong&gt;my passport was in my luggage&lt;/strong&gt;. I needed it to head back to the US at the end of my trip. &lt;/p&gt;

&lt;p&gt;If you've never lost a passport while traveling before, it's a quick trip to bureaucratic hell. If your country has an embassy where you are traveling, you can usually get it reissued in the embassy. But we were in &lt;em&gt;Cuba&lt;/em&gt; - and my country had no embassy here. We reported my case to the authorities, but they had no idea what to do. I was an edge case. Worse still, because I said I had come from the US and couldn't produce any papers to prove my identity, I was detained at the police headquarters for questioning on suspicion of being a spy. (&lt;em&gt;I was never really at any risk - being Asian and speaking poor Spanish, I would have made for a pretty lousy spy&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;There was a lot to figure out over the ensuing &lt;em&gt;month&lt;/em&gt; of my ordeal - money, lodging, language barriers, administrative hurdles. My family and friends hit the panic button for me and my case reached the ears of both Arlen Specter on the US Senate Foreign Relations Committee and George Yeo, the Singapore Foreign Affairs Minister. We eventually worked it out, but every night for 4 weeks I would wander up and down &lt;a href="https://en.wikipedia.org/wiki/Malec%C3%B3n,_Havana"&gt;the Malec√≥n&lt;/a&gt;, listening to the crashing waves, not knowing when I could ever leave the country. If I could swim &lt;a href="https://en.wikipedia.org/wiki/Southernmost_point_buoy"&gt;the 90 miles to Key West&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Wet_feet,_dry_feet_policy"&gt;dry my feet&lt;/a&gt;, I might theoretically make it back to the US on my own.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CE3cxScV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3i8nh2cgaoj3jlrl9ecm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CE3cxScV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3i8nh2cgaoj3jlrl9ecm.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But most of all, I thought a lot about &lt;strong&gt;the humanity of having a piece of paper be more important than the human it represents&lt;/strong&gt;. I could be physically standing in front of the immigration officer with a lie detector test on and steadfastly stating all manner of provable personal detail, and they would not let me through unless I had a small piece of paper the size of my hand.&lt;/p&gt;

&lt;p&gt;We do this a lot - passports, voter registration cards, national ID systems, licenses, and insurance proofs - mostly because some humans are untrustworthy and try to exploit the system. &lt;/p&gt;

&lt;p&gt;But we often fail to design for people who are innocent and simply don't fit the system in some way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-consequences-of-not-being-provably-human" class="anchor"&gt;
  &lt;/a&gt;
  The Consequences of Not Being Provably Human
&lt;/h2&gt;

&lt;p&gt;Twitter has a way in which they expect you to verify you are human - you should get a call or text message with a code, that you then enter to prove humanity. This is what I normally get (about once every 1-2 months), and I can receive text messages from Twitter, so I can usually prove humanity with no issue.&lt;/p&gt;

&lt;p&gt;This time, for some reason, I am on a code path that doesn't offer a text message option, and Twitter somehow doesn't make international US number calls, leading to this infinite loop that I think is a bug:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WZFs-QUq2bg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;As a result of this unfortunate design:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My friends think I mass unfollowed them, because Twitter temporarily reduced my follow count to 0&lt;/li&gt;
&lt;li&gt;People who DM me think I am ignoring them, because Twitter doesn't inform them that I am currently locked out&lt;/li&gt;
&lt;li&gt;None of my past tweets show up at all in &lt;a href="https://twitter.com/search?q=from%3Aswyx&amp;amp;src=typed_query"&gt;Twitter search&lt;/a&gt;, which is problematic because I &lt;a href="https://twitter.com/swyx/status/1245281982797373441?lang=en"&gt;use Twitter as a Second Brain&lt;/a&gt;. If you read any of my blogposts, you will see that the rich link density of my references mainly come from taking notes in public over an extended period of time.&lt;/li&gt;
&lt;li&gt;I was unable to engage in the normal personal and professional activity I would do during Black Friday and AWS Re:invent&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've filed a support ticket with Twitter, but you can imagine that support for a 330 million user service isn't very responsive. People who have been through this tell me the only way to resolve it is to hit up a Twitter employee to get past the masses of unrelated and less urgent support issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#humans-proving-humanity-to-machines" class="anchor"&gt;
  &lt;/a&gt;
  Humans Proving Humanity To Machines
&lt;/h2&gt;

&lt;p&gt;In the grand scheme of things, I know this is minor. I've actually taken it as a welcome social media detox, which I usually take voluntarily in December anyways. But when it's not on my terms, I lose the ability to manage the personal and professional relationships I've painstakingly built up over the past 3-4 years.&lt;/p&gt;

&lt;p&gt;Above all, I think there's an &lt;em&gt;indignity&lt;/em&gt; in humans having to prove to machines that they are human, and the error resolution mechanism is to send a ticket to a faceless and unresponsive support email, and the only real way to get around it is again to re-establish human connections. &lt;/p&gt;

&lt;p&gt;I think more about all the other ways that we as software developers and designers fail to honor the dignity of humans trying to interact with the systems we create. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.theverge.com/2019/2/1/18205610/google-captcha-ai-robot-human-difficult-artificial-intelligence"&gt;In 2014&lt;/a&gt;, Google pitted one of its machine learning algorithms against humans in solving the most distorted text CAPTCHAs: the computer got the test right 99.8 percent of the time, while the humans got a mere 33 percent. It doesn't impact everyone equally - if you as a sighted, able bodied user struggle with CAPTCHAs, imagine the elderly or differently abled. Most services do not offer any alternative resolution when you cannot prove you are human. This is a problem when your service has essentially killed off the offline alternative and is essential for their basic needs. &lt;/p&gt;

&lt;p&gt;You could imagine th&lt;/p&gt;

&lt;p&gt;In Eric Meyer's &lt;a href="https://meyerweb.com/eric/thoughts/2016/01/25/designing-for-crisis-design-for-real-life/"&gt;Designing for Crisis&lt;/a&gt;, he describes how an inaccessible hospital website nearly risked the life of his daughter. I shudder to think how it might be made worse by perfectly well meaning software engineers who don't think about the humanity of the failure path. Imagine if you had to log in to something to save your child's life, and it presented you with a CAPTCHA you couldn't pass.&lt;/p&gt;

</description>
      <category>reflections</category>
      <category>ux</category>
    </item>
    <item>
      <title>Design Pattern in Python (2): Observer</title>
      <author>jemaloQ</author>
      <pubDate>Thu, 03 Dec 2020 15:25:03 +0000</pubDate>
      <link>https://dev.to/jemaloq/design-pattern-in-python-2-observer-j4</link>
      <guid>https://dev.to/jemaloq/design-pattern-in-python-2-observer-j4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Today I worked a little on &lt;strong&gt;Observer&lt;/strong&gt; pattern. I'd like to note down all that I have done today in this post. &lt;/p&gt;

&lt;p&gt;Firstly I want to cite a short introduction of &lt;strong&gt;Observer&lt;/strong&gt; pattern copied from &lt;a href="https://www.tutorialspoint.com/design_pattern/observer_pattern.htm"&gt;this website:&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Observer pattern is used when there is one-to-many relationship between objects such as if one object is modified, its dependent objects are to be notified automatically. Observer pattern falls under behavioral pattern category.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am reading this chinese book about Design patterns and my coding work has been inspired by this book:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a8V9ezwt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gnw87iemupfg6mmo4tsy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a8V9ezwt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gnw87iemupfg6mmo4tsy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The scheme of &lt;strong&gt;Observer&lt;/strong&gt; pattern presented in the book is like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yzb6T7tl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tpqzkedzbana0wsytcsk.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yzb6T7tl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tpqzkedzbana0wsytcsk.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#scenario" class="anchor"&gt;
  &lt;/a&gt;
  Scenario
&lt;/h2&gt;

&lt;p&gt;Imagine a common scenario this year: John has unfortunately been infected with Covid-19 and he is being monitored closely and carefully in clinic by medical workers. They mounted several medical devices to monitor his temperature, heart rate, oxygen saturation, etc. These smart devices can transmit an alert signal if the measured value surpasses or goes below a certain threshold. Today I want to simulate this scenario using &lt;strong&gt;Observer&lt;/strong&gt; pattern in &lt;strong&gt;Python&lt;/strong&gt;. &lt;br&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl4BQjT7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2hiraph2g8fvp11p562z.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl4BQjT7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2hiraph2g8fvp11p562z.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#start-coding" class="anchor"&gt;
  &lt;/a&gt;
  Start coding
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#abstract-classes" class="anchor"&gt;
  &lt;/a&gt;
  Abstract classes
&lt;/h3&gt;

&lt;p&gt;Firstly write the abstract classes: &lt;code&gt;abstractSubject&lt;/code&gt; and &lt;code&gt;abstractObserver&lt;/code&gt;.&lt;br&gt;&lt;br&gt;
Class &lt;code&gt;abstractSubject&lt;/code&gt; is the abstract base class for all observable subjects; it has a list member which contains all attached observers; it has methods &lt;code&gt;addObs()&lt;/code&gt;/&lt;code&gt;removeObs()&lt;/code&gt; for adding/removing an observer in its list. It has another method  &lt;code&gt;notifyObservers()&lt;/code&gt; for communicating its state change to observers.&lt;/p&gt;

&lt;p&gt;Class &lt;code&gt;abstractObserver&lt;/code&gt; is the abstract base class for all observers. It has only one empty method &lt;code&gt;update()&lt;/code&gt; which shall be overridden and realized by its derived classes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;abstractSubject&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="s"&gt;"""
        Abstract Subject - Abstract patient in this demo
    """&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__observers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;addObs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__observers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;removeObs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__observers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;notifyObservers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__observers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;abstractObserver&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="s"&gt;"""
        Abstract Observer - Abstract medical device in this demo
    """&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  &lt;span class="c1"&gt;## shall be overridden 
&lt;/span&gt;        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#patient-to-be-observed" class="anchor"&gt;
  &lt;/a&gt;
  Patient to be observed
&lt;/h3&gt;

&lt;p&gt;Then I create &lt;code&gt;covidPatient&lt;/code&gt; class which is a concrete class derived from &lt;code&gt;abstractSubject&lt;/code&gt; class. This class has a public member "name" and a private dict-type member containing its real-time physiological parameters. Its method &lt;code&gt;setValue()&lt;/code&gt; serves for updating a chosen parameter and calling the inherited method &lt;code&gt;notifyObservers()&lt;/code&gt;. Method &lt;code&gt;setValue()&lt;/code&gt; returns the real-time value of a chosen physiologic parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;covidPatient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;abstractSubject&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="s"&gt;"""
        Concrete Subject - Patient in this demo
    """&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__physioParams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"temperature"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"heartrate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"oxygen"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"respiration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;## function to the observed subject's state
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;measureType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;measureType&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__physioParams&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__physioParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;measureType&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;
            &lt;span class="c1"&gt;# print("{}'s {} set to: {}".format(self.name, measureType, str(val)) )
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notifyObservers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Parameter type &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s"&gt; not yet supported."&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;measureType&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;measureType&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;measureType&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__physioParams&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__physioParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;measureType&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#observers" class="anchor"&gt;
  &lt;/a&gt;
  Observers
&lt;/h3&gt;

&lt;p&gt;Now define two observers as below, each of them implements method &lt;code&gt;update()&lt;/code&gt; which obtains and processes a certain physiological parameter of the covid patient.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;thermometer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;abstractObserver&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;      
    &lt;span class="s"&gt;"""
        Concrete Observer - Thermometer
    """&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;tt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;covidPatient&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"temperature"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;37.8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"EMCY - "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"Temperature too high: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mf"&gt;36.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"EMCY - "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"Temperature too slow: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"INFO - "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"Temperature normal: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;heartbeatMonitor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;abstractObserver&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;      
    &lt;span class="s"&gt;"""
        Concrete Observer - heartbeat monitor
    """&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;tt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;covidPatient&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"heartrate"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"EMCY - "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"Heart rate too high: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hr&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"EMCY - "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"Heart rate too slow:  "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hr&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"INFO - "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"Heart rate normal: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hr&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#simulation-kicks-off" class="anchor"&gt;
  &lt;/a&gt;
  Simulation kicks off
&lt;/h3&gt;

&lt;p&gt;OK, it's time to start the simulation. I create an instance of &lt;code&gt;covidPatient&lt;/code&gt; whose name is &lt;em&gt;John&lt;/em&gt;, an instance of &lt;code&gt;thermometer&lt;/code&gt; and an instance of &lt;code&gt;heartbeatMonitor&lt;/code&gt;. This main function below is clear enough so I will do no more explanation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;covidPatient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;o1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;thermometer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;o2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;heartbeatMonitor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


    &lt;span class="c1"&gt;## now kick off the simulation 
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"====== Time step {} ======="&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="c1"&gt;# At rount #3: thermometer is added for monitoring temperature
&lt;/span&gt;        &lt;span class="c1"&gt;# At rount #5: heartbeatMonitor is added for monitoring heart rate
&lt;/span&gt;        &lt;span class="c1"&gt;# At rount #10: thermometer is removed
&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addObs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        
            &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addObs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;removeObs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# simulating the variation of patient's physiological parameters
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"temperature"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;35.5&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"heartrate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"oxygen"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Execution output:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5wPBaZBM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6rko7s0usbp2njiyvdc9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5wPBaZBM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6rko7s0usbp2njiyvdc9.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As one can see, the patient's physiological parameters vary in each time step. The two observers have been mounted one by one during the simulation and one of them has then been removed in step #10. Both observers have sent emergency signals as soon as they have detected an abnormal value. &lt;br&gt;
May John recover soon from this annoying coronavirus...&lt;/p&gt;

</description>
      <category>python</category>
      <category>designpattern</category>
      <category>observer</category>
      <category>architecture</category>
    </item>
    <item>
      <title>How I saved 8 Hours, Automating my Gov Appointment Hunt Using Python + Selenium</title>
      <author>Calvin T</author>
      <pubDate>Thu, 03 Dec 2020 14:10:24 +0000</pubDate>
      <link>https://dev.to/calvin087/how-i-saved-8-hours-automating-my-gov-appointment-hunt-using-python-selenium-4e81</link>
      <guid>https://dev.to/calvin087/how-i-saved-8-hours-automating-my-gov-appointment-hunt-using-python-selenium-4e81</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-european-situation" class="anchor"&gt;
  &lt;/a&gt;
  The European Situation
&lt;/h2&gt;

&lt;p&gt;So any British expat / foreigner, like me, that lives in Spain knows how incredibly difficult it is to book an appointment and get your paperwork in order.&lt;/p&gt;

&lt;p&gt;There's always something.&lt;/p&gt;

&lt;p&gt;You get your ID number, then you have to get your social security number, then you have to register where you live (padron), using these numbers and a rental contract, but that only lasts for a few months before renewing it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOW&lt;/strong&gt; because of Brexit, I had to go and get my fingerprints done and register as a long term resident before my European status gets nullified!&lt;/p&gt;

&lt;p&gt;Failure to acquire this ID card update will have some pretty annoying implications with my ability to continue working in this country and build a life here!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-dreaded-office" class="anchor"&gt;
  &lt;/a&gt;
  The Dreaded Office
&lt;/h2&gt;

&lt;p&gt;Enter the infamous &lt;strong&gt;Aluche&lt;/strong&gt; office, where expats spend hours / days / weeks trying to find an appointment, the office that's way out of town and takes ages to arrive to, the office that sends you home crying unless you have 17 photocopies of each document.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I'm also not joking about old housemates coming home crying after the Aluche trip.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you have to do any paperwork in Spain, plan to book half a day to a full day off work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-perfect-set-up" class="anchor"&gt;
  &lt;/a&gt;
  The Perfect Set Up
&lt;/h2&gt;

&lt;p&gt;I was lucky enough to waste a complete afternoon in summer looking for appointments to get my fingerprints done. I even took my native Girlfriend with me as backup for the problems they were bound to give me (as always).....Done, all done.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;"Come back 1 month from now and collect your new ID card"&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Perfect&lt;/strong&gt;, I couldn't believe how flawlessly easy it was to get this done. We were both surprised! All I had to do was swing by in a month and pick up my shiny new ID.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-idiot-that-i-am" class="anchor"&gt;
  &lt;/a&gt;
  The Idiot That I am
&lt;/h2&gt;

&lt;p&gt;So obviously my brain only has enough space to hold vitally important information and anything else just falls out unless there are 3 alarms set to remind me.&lt;/p&gt;

&lt;p&gt;My Girlfriend asks&lt;/p&gt;

&lt;p&gt;"When was your appointment to pick up your card......?"&lt;/p&gt;

&lt;p&gt;We both looked at each other knowing that I had royally messed up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I was 1 month late to pick up my ID and the cut-off date for British expats was in 1 month.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I called the infamous office to see if I could just &lt;em&gt;swing by&lt;/em&gt; and pick up my card..&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;"NO! You book an appointment. If there are no appointments, you try again the next day"&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So as I mentioned earlier &lt;em&gt;"hours / days / weeks trying to find an appointment"&lt;/em&gt; and my European status on the brink of death. Not a good place to be.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-to-the-rescue" class="anchor"&gt;
  &lt;/a&gt;
  Python To The Rescue
&lt;/h2&gt;

&lt;p&gt;The long and short of it - I have just started a new job, so I'm not in a position to waste hours refreshing the government page, hoping I can snatch someone's cancelled appointment.&lt;/p&gt;

&lt;p&gt;SO - I built a small script that automated the appointment hunting for me - If there was anything available, my Mac would start shouting at me from the other room where I could run over, check the available appointments and book it.&lt;/p&gt;

&lt;p&gt;I was able to comfortably get on with work, knowing that at some point, my mac will start shouting in its beautiful robotic voice and everything would be ok.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-set-up" class="anchor"&gt;
  &lt;/a&gt;
  The set up
&lt;/h3&gt;

&lt;p&gt;For this I decided to use Selenium, a Python module that is used to run automated tests on websites.&lt;/p&gt;

&lt;p&gt;You can set it up to open pages, click around, fill in forms, wait around and check if certain things appear on the page or not.&lt;/p&gt;

&lt;p&gt;I had &lt;a href="https://github.com/Calvin087/site-testing"&gt;just spent 13 hours on a code test&lt;/a&gt; doing just that, so I wasn't going to pass up this opportunity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#imports" class="anchor"&gt;
  &lt;/a&gt;
  Imports
&lt;/h3&gt;

&lt;p&gt;I learned a few things about using Selenium effectively. One thing was importing the Expected Conditions. It allows you to automatically wait until a specific element appears on the page.&lt;/p&gt;

&lt;p&gt;If the website in question is slow to load, your program won't crash because it can't find the button it's looking for.&lt;/p&gt;

&lt;p&gt;You also don't need to program in wait times of 3 seconds for example, while the page loads.&lt;/p&gt;

&lt;p&gt;I also pulled in the WAIT module, because I didn't want to rush through the site like a bot would,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;"let's fake being a human and wait for 4 seconds right here"&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AMCti6cj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://calvint1.sg-host.com/wp-content/uploads/2020/12/imports.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AMCti6cj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://calvint1.sg-host.com/wp-content/uploads/2020/12/imports.png" alt="https://calvint1.sg-host.com/wp-content/uploads/2020/12/imports.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wrote all of the automation code before hand and then stuck it in a while loop.&lt;/p&gt;

&lt;p&gt;If there are no appointments, "lets_go" will always be &lt;strong&gt;True&lt;/strong&gt;, otherwise if we do find an appointment, we'll cut the program and change "lets_go" to False.&lt;/p&gt;

&lt;p&gt;We .get() the website in question and get this party started.&lt;/p&gt;

&lt;p&gt;It's crude, but I was in a race against time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clicking-typing-waiting" class="anchor"&gt;
  &lt;/a&gt;
  Clicking / Typing / Waiting
&lt;/h3&gt;

&lt;p&gt;Here's an example of clicking around a website.&lt;/p&gt;

&lt;p&gt;In most cases, you can use the page inspector to find the element you want to click on, then copy it's XPATH.&lt;/p&gt;

&lt;p&gt;Pairing this XPATH with Expected Conditions ie: EC, waiting a max of 10 seconds until the element's presence is located, we have automatically told python to wait until it can find the button in question.&lt;/p&gt;

&lt;p&gt;Once it's found, save it to a variable and then we can do bad things to it.&lt;/p&gt;

&lt;p&gt;.click() is one of those bad things.&lt;/p&gt;

&lt;p&gt;.send_keys() is another (this inputs text into a form field)&lt;/p&gt;

&lt;p&gt;You'll notice that I'm pretending to be Human by waiting 2 seconds after filling in a form field. It's easier to pretend to be human in the real world - in Python it just feels forced.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#executing-js" class="anchor"&gt;
  &lt;/a&gt;
  Executing JS
&lt;/h3&gt;

&lt;p&gt;Sometimes certain elements are not available until you scroll them into view. So we can execute Javascript and fake like we're actually scrolling like a real Human.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1HwU0Fb5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://calvint1.sg-host.com/wp-content/uploads/2020/12/send-keys-1024x750.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1HwU0Fb5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://calvint1.sg-host.com/wp-content/uploads/2020/12/send-keys-1024x750.png" alt="https://calvint1.sg-host.com/wp-content/uploads/2020/12/send-keys-1024x750.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-fun-part" class="anchor"&gt;
  &lt;/a&gt;
  The Fun Part
&lt;/h3&gt;

&lt;p&gt;So when we get all the way through the form and realise there are no appointments, we are told that there will be more at some point in the future, but who knows when.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tcs4J_Wp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://calvint1.sg-host.com/wp-content/uploads/2020/12/shoutout-1024x719.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tcs4J_Wp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://calvint1.sg-host.com/wp-content/uploads/2020/12/shoutout-1024x719.png" alt="https://calvint1.sg-host.com/wp-content/uploads/2020/12/shoutout-1024x719.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's when we start the process over and hope that in the last 5 minutes we've wasted, something has become available - so we try over and over.&lt;/p&gt;

&lt;p&gt;You know, because....Brexit in 25 days.&lt;/p&gt;

&lt;p&gt;Now for a crude, improperly written test.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-appointments-amp-being-a-good-internet-citizen" class="anchor"&gt;
  &lt;/a&gt;
  No Appointments &amp;amp; Being A Good Internet Citizen
&lt;/h3&gt;

&lt;p&gt;At this point when most people would be in a panic and feel deflated, I just ask Python to rinse and repeat.&lt;/p&gt;

&lt;p&gt;So the typical scenario is that we get a message (in Spanish obviously) every time there isn't an appointment - If that happens&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Close the browser&lt;/li&gt;
&lt;li&gt;Wait for 2100 seconds (35mins) to try again and again and again and again.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Why did I choose 35 mins? In order not to repeatedly hit the site, possibly triggering some kind of bot blocker and overall just being a responsible internet citizen by not overloading other people's servers with automated requests.&lt;/p&gt;

&lt;p&gt;To be honest, real humans probably hit that site more often than every 35 mins to secure an appointment and I probably would to - manually, but yea - responsible automation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;However&lt;/strong&gt;, if the no appointments turns out to be false and that message is not displayed on the page, it means there ARE appointments. In that case&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tell the Mac to repeatedly shout at max volume "&lt;strong&gt;Appointments Available&lt;/strong&gt;"&lt;/li&gt;
&lt;li&gt;change lets_go to false and exit the program.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tcs4J_Wp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://calvint1.sg-host.com/wp-content/uploads/2020/12/shoutout-1024x719.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tcs4J_Wp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://calvint1.sg-host.com/wp-content/uploads/2020/12/shoutout-1024x719.png" alt="https://calvint1.sg-host.com/wp-content/uploads/2020/12/shoutout-1024x719.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-hours-of-life-saved" class="anchor"&gt;
  &lt;/a&gt;
  8 Hours Of Life Saved
&lt;/h3&gt;

&lt;p&gt;In total, this program was started at 7am and ran through the site every 35 mins until 3pm, continuously looking for open appointments.&lt;/p&gt;

&lt;p&gt;I would have loved to have automatically booked on at a time that suited me, but without access to the booking pages, I wasn't able to find the "codes" to target and automate, so this was a best case scenario.&lt;/p&gt;

</description>
      <category>python</category>
      <category>automation</category>
      <category>selenium</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
