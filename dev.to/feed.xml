<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Host your images on Google Drive for free [Step By Step].</title>
      <author>Narottam04</author>
      <pubDate>Tue, 20 Jul 2021 07:25:03 +0000</pubDate>
      <link>https://dev.to/narottam04/host-your-images-on-google-drive-for-free-step-by-step-25m1</link>
      <guid>https://dev.to/narottam04/host-your-images-on-google-drive-for-free-step-by-step-25m1</guid>
      <description>&lt;p&gt;When you want to share a photo or gallery with friends, family, or even on the entire internet, an image hosting site is the best way to upload, store, and share your files. However, there are many image hosting sites, all with different features, some are free and some are paid, with free ones there is a risk of security and with paid ones, the problem is you have to pay money monthly. In this article, we will be hosting our images on good old trustable Google Drive.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://i.giphy.com/media/5wWf7GMbT1ZUGTDdTqM/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/5wWf7GMbT1ZUGTDdTqM/giphy.gif" alt="https://media.giphy.com/media/5wWf7GMbT1ZUGTDdTqM/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-1-open-google-drive-and-get-the-link-of-the-image"&gt;
  &lt;/a&gt;
  Step 1: Open Google drive and get the link of the image.
&lt;/h2&gt;



&lt;p&gt;First, log into your Google account and open Google Drive. Navigate to the image you want to host&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vgXwvKjn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1xKUD3LuvNQfQ89E1VqpDh9-qVUSmHDoy" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vgXwvKjn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1xKUD3LuvNQfQ89E1VqpDh9-qVUSmHDoy" alt="google drive" title="google drive"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;As an eg. I will be hosting my Instagram post 2.png which is stored on my google drive.&lt;/p&gt;



&lt;p&gt;PS: if you want to learn more about web development consider following my Instagram @_webdrip&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-2-get-the-sharable-link"&gt;
  &lt;/a&gt;
  Step 2: Get the sharable link
&lt;/h2&gt;



&lt;p&gt;Right-click on the image you want to host, and click on &lt;strong&gt;'Get Link'&lt;/strong&gt;.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bfbiBvCy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1ZJkm9liESDRwlpRDCh7Xg0spseTS7Nx8" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bfbiBvCy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1ZJkm9liESDRwlpRDCh7Xg0spseTS7Nx8" alt="drive" title="drive"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Change the &lt;strong&gt;'Restricted'&lt;/strong&gt; option to &lt;strong&gt;'Anyone with link'.&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j62CXLBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1rH5_jwOz3qdoLTX8dkzTTmeaLPcU6yJn" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j62CXLBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1rH5_jwOz3qdoLTX8dkzTTmeaLPcU6yJn" alt="link" title="link"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-3-copy-the-link"&gt;
  &lt;/a&gt;
  Step 3: Copy the link
&lt;/h2&gt;



&lt;p&gt;Copy the link by clicking &lt;strong&gt;'Copy Link&lt;/strong&gt;' button or by selecting the link and pressing &lt;strong&gt;'CTRL + C'&lt;/strong&gt; on your keyboard&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--50h5_bmr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1nzH17fhEPk9r0Rd4u7w8rpmra-HZeKS_" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--50h5_bmr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1nzH17fhEPk9r0Rd4u7w8rpmra-HZeKS_" alt="copy link" title="copy link"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-4-go-to%C2%A0hostdriveimagepagesdev"&gt;
  &lt;/a&gt;
  Step 4: Go to &lt;a href="https://hostdriveimage.pages.dev/"&gt;hostdriveimage.pages.dev&lt;/a&gt;
&lt;/h2&gt;



&lt;p&gt;Now go to this website &lt;a href="https://hostdriveimage.pages.dev/"&gt;https://hostdriveimage.pages.dev/&lt;/a&gt; and paste the image link that you have copied from the drive and click on the 'generate' button.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K3-ZGRm---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1DStz-HiSiTA2YlLVelcDpJxwwcIdTdnA" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K3-ZGRm---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1DStz-HiSiTA2YlLVelcDpJxwwcIdTdnA" alt="website" title="website"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5-check-if-it-is-working"&gt;
  &lt;/a&gt;
  Step 5: Check if it is working
&lt;/h2&gt;



&lt;p&gt;Voila! if you have followed the steps properly your image will be hosted and will be live to be shared on the internet or with your friends.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eI0CBbBC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1DYxzoxX8vsWonFmu7rsLlMXaivB1vqSI" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eI0CBbBC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1DYxzoxX8vsWonFmu7rsLlMXaivB1vqSI" alt="final link" title="final link"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;To check the image I have hosted click on this link: &lt;a href="https://drive.google.com/uc?id=1MVHhp5WBHwhR1k-S0V52lajFs3Q4GPaa"&gt;&lt;/a&gt;&lt;a href="https://drive.google.com/uc?id=1MVHhp5WBHwhR1k-S0V52lajFs3Q4GPaa"&gt;https://drive.google.com/uc?id=1MVHhp5WBHwhR1k-S0V52lajFs3Q4GPaa&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fTIRCC_o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1f04-CXNoX3kXMU4LmH7pBn9LTqnKk3M9" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fTIRCC_o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1f04-CXNoX3kXMU4LmH7pBn9LTqnKk3M9" alt="hosted image" title="hosted image"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;If you any doubts feel free to comment down below, would love to help you.&lt;/p&gt;



&lt;p&gt;PS: All the images on my blog website &lt;a href="https://blog.webdrip.in/"&gt;https://blog.webdrip.in/&lt;/a&gt; are hosted on google drive, Do give a visit!&lt;/p&gt;

</description>
      <category>tutorial</category>
    </item>
    <item>
      <title>How do we browse on internet? </title>
      <author>Narottam04</author>
      <pubDate>Tue, 20 Jul 2021 07:20:11 +0000</pubDate>
      <link>https://dev.to/narottam04/how-do-we-browse-on-internet-1234</link>
      <guid>https://dev.to/narottam04/how-do-we-browse-on-internet-1234</guid>
      <description>&lt;p&gt;When you type &lt;a href="http://youtube.com/"&gt;youtube.com&lt;/a&gt; into your browser (Chrome, Internet Explorer, Firefox, etc.), the browser makes an HTTP request. HTTP stands for HyperText Transfer Protocol, it is responsible for communication between web servers and clients.&lt;/p&gt;



&lt;p&gt;HTTP is a protocol( a set of rules or procedures for transmitting data between electronic devices) for browsers and servers to talk to each other. Humans, too, have protocols for talking to each other. Consider that when you meet someone, you often greet him or her with a handshake. Browsers and servers also greet and acknowledge each other according to HTTP.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://i.giphy.com/media/2HtWpp60NQ9CU/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/2HtWpp60NQ9CU/giphy.gif" alt="https://media.giphy.com/media/2HtWpp60NQ9CU/giphy.gif" title="Shake Hands"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Whenever you submit a form or click a button on the website you are using HTTP and going through the request and response cycle. Clients and servers communicate by exchanging individual messages (as opposed to a stream of data). The messages sent by the client, usually a Web browser, are called requests, and the messages sent by the server as an answer are called responses.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eVajEO4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1Vy4KDMqoGd_Dn8X2087JFOxNDqhJJQaq" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eVajEO4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1Vy4KDMqoGd_Dn8X2087JFOxNDqhJJQaq" alt="how we search on internet" title="browser search"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;HTTP is stateless, which means that every request is completely independent eg. when you reload the page on the website or navigate to different pages on the website it doesn't remember anything about previous requests/response cycle, you can visualize this as transactions.&lt;/p&gt;



&lt;p&gt;We can use local storage, cookies, sessions to enhances user experiences but HTTP at its core is stateless.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o6Mb9TkJc357aDUo8/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o6Mb9TkJc357aDUo8/giphy.gif" alt="https://media.giphy.com/media/3o6Mb9TkJc357aDUo8/giphy.gif" title="I don't remember"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#https"&gt;
  &lt;/a&gt;
  HTTPS
&lt;/h2&gt;



&lt;p&gt;HTTPS stands for Hyper Text Transfer Protocol Secure. Data sent back and forth through HTTPS is encrypted with SSL/TLS (SSL stands for Secure Sockets Layer, TLS stands for Transport Security Layer). Anytime the user is sending sensitive information it should be always through HTTPS eg. contact information/contact form, credit card detail, social security number. You can add HTTPS&lt;/p&gt;



&lt;p&gt;by installing an SSL certificate on your web host.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZmdnxP9---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1MrSjryRACaoDjCC6svmKE84CwqyQecy-" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZmdnxP9---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1MrSjryRACaoDjCC6svmKE84CwqyQecy-" alt="https" title="https"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#http-request-methods"&gt;
  &lt;/a&gt;
  HTTP Request Methods
&lt;/h2&gt;



&lt;p&gt;So when you type &lt;a href="https://www.youtube.com/"&gt;https://www.youtube.com/&lt;/a&gt; on the browser, you are sending a message from the client (your browser) to the server, the server receives the message and responds by sending the webpage to us.&lt;/p&gt;



&lt;p&gt;The request sent by the browser looks like something as shown below&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;HTTP/1.1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Host:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;www.youtube.com&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;When a request is made to a server, it has some method attached to it, like GET in the above example. We are going to see 4 such methods but you can find more on the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods"&gt;MDN Docs&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#get"&gt;
  &lt;/a&gt;
  GET
&lt;/h2&gt;



&lt;p&gt;A get request is used when you need to fetch data from the server. eg. loading a HTML page, loading assets like CSS, JS, XML page etc.&lt;/p&gt;



&lt;p&gt;When you visit a webpage you make a GET request to a server by HTTP.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#post"&gt;
  &lt;/a&gt;
  POST
&lt;/h2&gt;



&lt;p&gt;A POST request is used when you are adding data to the server. eg. When you submit a contact form on the website or when you post a blog, You are sending data to the server and it will store data in your database.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#put"&gt;
  &lt;/a&gt;
  PUT
&lt;/h2&gt;



&lt;p&gt;A PUT request is used when you want to update data that is already on the server. eg. change the text, image of the blog post.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#delete"&gt;
  &lt;/a&gt;
  DELETE
&lt;/h2&gt;



&lt;p&gt;A DELETE request delete data from the server.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#http-status-code"&gt;
  &lt;/a&gt;
  HTTP Status Code
&lt;/h2&gt;



&lt;p&gt;The response sent by the server when you request for youtube.com is shown below.&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;HTTP/1.1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;200&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;OK&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Content-Type:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;application/binary&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;These unusual numbers send by the server are called as status code which tells the status of the request as it is 200 OK you will get &lt;a href="http://youtube.com/"&gt;the youtube.com&lt;/a&gt; homepage. Other common status codes are as follows.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZilognMY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1dZVkp3BwKeSiB8z4m5l3wxSL3-utrodQ" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZilognMY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1dZVkp3BwKeSiB8z4m5l3wxSL3-utrodQ" alt="status code" title="status code"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#common-status-codes"&gt;
  &lt;/a&gt;
  Common Status Codes
&lt;/h2&gt;



&lt;p&gt;200 - OK&lt;/p&gt;

&lt;p&gt;201 - OK created&lt;/p&gt;

&lt;p&gt;301 - Moved to new URL&lt;/p&gt;

&lt;p&gt;304 - Not modified(Cached version)&lt;/p&gt;

&lt;p&gt;400 - Bad Request&lt;/p&gt;

&lt;p&gt;401 - Unauthorized&lt;/p&gt;

&lt;p&gt;404 - Not found&lt;/p&gt;

&lt;p&gt;418 - I'm a teapot (April fools joke in 1998)&lt;/p&gt;

&lt;p&gt;500 - Internal Server Error&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#http-header-files"&gt;
  &lt;/a&gt;
  HTTP Header Files
&lt;/h2&gt;



&lt;p&gt;The response given by the server is in two parts i.e. header and a body.&lt;/p&gt;



&lt;p&gt;The header gives a status of the request, server name on which it is running, with detail about the content that has been requested as shown below.&lt;/p&gt;



&lt;p&gt;The body is a response that is gonna be an HTML page that you are trying to load, data that is sent from the server to the website, etc.&lt;/p&gt;



&lt;p&gt;There are three types of header, general, response, request.&lt;/p&gt;



&lt;p&gt;You can read more about HTTP header files on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers"&gt;MDN docs&lt;/a&gt;.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#ip"&gt;
  &lt;/a&gt;
  IP
&lt;/h2&gt;



&lt;p&gt;So we learned, how the server and client respond to each other through HTTP but how the message sent by the client will be sent to the browser and vice versa. It is done through IP (internet protocol), every phone, laptop, and desktop in the world has a unique address and that unique address is called an IP address. In the real world, you can think of it as an address of a famous place or shop in your city, it will be always unique.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RxR__2Pu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1La1YhOQEtEf-kTR3pPAhGUTbZda4u82u" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RxR__2Pu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1La1YhOQEtEf-kTR3pPAhGUTbZda4u82u" alt="IP" title="IP"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;An IP address is a set of numbers and has 4 parts, and each part can take a value from 0 to 255(8bit).&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="mf"&gt;255.255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;255&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#dhcp"&gt;
  &lt;/a&gt;
  DHCP
&lt;/h2&gt;



&lt;p&gt;Back in the day, to get internet on your computer, your internet service provider had to provide you IP address manually. This was not scalable as it requires extra work. So we have a protocol called DHCP (Dynamic Host Configuration Protocol) so when you boot your laptop or mobile phone, if it has support for that protocol it will automatically assign IP addresses and other communication parameters to devices connected to the network using a client-server architecture.&lt;/p&gt;



&lt;p&gt;You can read more about DHCP on &lt;a href="https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xoblmPLW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1GR1OSuiJNELcciAzBI5UzjnJt8OBxNPn" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xoblmPLW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1GR1OSuiJNELcciAzBI5UzjnJt8OBxNPn" alt="dhcp" title="dhcp"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#dns"&gt;
  &lt;/a&gt;
  DNS
&lt;/h2&gt;



&lt;p&gt;DNS (Domain Name System) will convert the domain name of the website to an IP address, it is necessary because we know the website by their name but the internet knows from their IP addresses.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cGKolzsi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1LQNF0wSbd_H-aN7dT9hThqpo0FK09ZB6" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGKolzsi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1LQNF0wSbd_H-aN7dT9hThqpo0FK09ZB6" alt="dns" title="dns"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;If you want to look up the IP addresses of a website you can do that by opening the command prompt and typing as shown below&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;nslookup&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;google.com&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you can copy that address and on your browser type http://[ip address] you will be redirected to &lt;a href="http://google.com/"&gt;google.com&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;You can read more about it on &lt;a href="https://en.wikipedia.org/wiki/Domain_Name_System"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#router"&gt;
  &lt;/a&gt;
  Router
&lt;/h2&gt;



&lt;p&gt;Let's say you type &lt;a href="http://google.com"&gt;google.com&lt;/a&gt; on the browser you are sending an envelope i.e. a request with ip address of the server in this case it will be google.com and your own ip address so that server can send the response to you. But how this request will get to google datacenter which might be far away from your home. The answer is it is done through millions of router around the globe.&lt;/p&gt;



&lt;p&gt;If you are using the internet in your house you might have one too, its sole purpose is to take data from your house to the internet and to send the response from the server back to your laptop, mobile or desktop, etc.&lt;/p&gt;



&lt;p&gt;You can check the route of the website from your command prompt by typing as shown below.&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;traceroute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;google.com&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;if that doesn't work type 'tracert' instead of traceroute.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#tcp"&gt;
  &lt;/a&gt;
  TCP
&lt;/h2&gt;



&lt;p&gt;Now we have figured out how we can get the IP address of the server and the client and how we send them using routers all across the world. But how does the server know which data to send back to you? The data you have requested might be a webpage, voicemail, image, video, etc. For this, We need another protocol on our request envelope which we send to the server, it is called TCP (Transmission Control Protocol). TCP is a number that corresponds to a number which is a service that you want to send or access on your computer.&lt;/p&gt;

&lt;p&gt;for example,&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#22-ssh"&gt;
  &lt;/a&gt;
  22 SSH
&lt;/h3&gt;



&lt;h3&gt;
  &lt;a href="#53-dns"&gt;
  &lt;/a&gt;
  53 DNS
&lt;/h3&gt;



&lt;h3&gt;
  &lt;a href="#80-http"&gt;
  &lt;/a&gt;
  80 HTTP
&lt;/h3&gt;



&lt;h3&gt;
  &lt;a href="#443-https"&gt;
  &lt;/a&gt;
  443 HTTPS
&lt;/h3&gt;



&lt;h3&gt;
  &lt;a href="#587-smtp"&gt;
  &lt;/a&gt;
  587 SMTP
&lt;/h3&gt;



&lt;p&gt;when we access the webpage we use 80 or 443 TCP protocol.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;You can test this by typing &lt;a href="http://google.com/"&gt;http://google.com:80/&lt;/a&gt; or &lt;a href="https://google.com/"&gt;https://google.com:443/&lt;/a&gt; it will redirect you to &lt;a href="http://google.com/"&gt;google.com&lt;/a&gt; page.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;You can also test it on the command line as shown below&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;curl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-I&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;https://www.google.com:443/&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
It should return with 200 OK Status code and with content type as text/html and with other stuff.&lt;/p&gt;



&lt;p&gt;You can read more about TCP on &lt;a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#tcpip"&gt;
  &lt;/a&gt;
  TCP/IP
&lt;/h2&gt;



&lt;p&gt;When you request a video or a high-quality image from the internet, it will not send you a whole image or video at once but with pieces of information using TCP/IP protocol. IP ensures every computer on the internet that speaks this protocol has an address, TCP ensures delivery of the data to the users.&lt;/p&gt;



&lt;p&gt;You can read more about TCP/IP in &lt;a href="https://en.wikipedia.org/wiki/Internet_protocol_suite"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;HTTP/1.1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Host:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;www.youtube.com&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more such insights, checkout my blog website blog.webdrip.in&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="mf"&gt;255.255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;255&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Create a simple Facebook and Instagram AR filter</title>
      <author>mrunankpawar</author>
      <pubDate>Tue, 20 Jul 2021 07:02:58 +0000</pubDate>
      <link>https://dev.to/mrunankpawar/create-a-simple-facebook-and-instagram-ar-filter-36fm</link>
      <guid>https://dev.to/mrunankpawar/create-a-simple-facebook-and-instagram-ar-filter-36fm</guid>
      <description>&lt;p&gt;Hello folks!&lt;/p&gt;

&lt;p&gt;We all are using social media and have used various AR Filters which are available on Facebook and Instagram. Well, what if I tell you that we can create our own AR Filter and publish it so that everyone can use it.&lt;/p&gt;

&lt;p&gt;This blog post will go through all the steps needed to create a simple AR Filter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-install-sparkar-studio-and-sparkar-player"&gt;
  &lt;/a&gt;
  Step 1: Install SparkAR Studio and SparkAR player
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Spark AR Studio: Spark AR Studio is the place where we will be creating the effect&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spark AR Player: Spark AR Player is the place where we will be testing our effect (Android and iOS)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-2-keep-your-assets-ready"&gt;
  &lt;/a&gt;
  Step 2: Keep your assets ready
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;I recommend that all the images you want in your effect must be ready in one folder so that it will be easy to just add those images as material later.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can create the assets with the help of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Photoshop&lt;/li&gt;
&lt;li&gt;AR Library &lt;/li&gt;
&lt;li&gt;Canva&lt;/li&gt;
&lt;li&gt;Any editing app you wish to use&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-3-open-spark-ar-studio"&gt;
  &lt;/a&gt;
  Step 3: Open Spark AR studio
&lt;/h3&gt;

&lt;p&gt;Create a blank project&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5W9VyOsY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626447809765/dChEYZNau.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5W9VyOsY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626447809765/dChEYZNau.png" alt="Home.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is how our working environment looks like.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-add-a-face-tracker"&gt;
  &lt;/a&gt;
  Step 4: Add a face tracker
&lt;/h3&gt;

&lt;p&gt;By adding a Face Tracker to your effect you can track the face movement of the user.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Right-click in the scene panel and add a Face tracker.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_qvSm937--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626489712243/uya9_OPdq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_qvSm937--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626489712243/uya9_OPdq.png" alt="facetracker.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-add-planes"&gt;
  &lt;/a&gt;
  Step 5: Add planes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Once again right-click in the scenes panel and add a plane to your project.&lt;/li&gt;
&lt;li&gt;And drag it under the face-tracker. This will sync the plane with your face movement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GSZ0dBUj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626489820677/7N4kYxwP1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GSZ0dBUj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626489820677/7N4kYxwP1.png" alt="plane.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-6-add-material-to-the-plane"&gt;
  &lt;/a&gt;
  Step 6: Add material to the plane.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Click on the plane in the scenes panel&lt;/li&gt;
&lt;li&gt;Now add material to your plane. (on the right side).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zx1DsgEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626490011689/2c6XHJqed.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zx1DsgEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626490011689/2c6XHJqed.png" alt="material.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Try to rename the materials such that you will be able to understand them later.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#step-7-adding-texture-to-the-material"&gt;
  &lt;/a&gt;
  Step 7: Adding texture to the material.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;On the right side you will be able to see the texture. &lt;/li&gt;
&lt;li&gt;Select your assets from the drop-down or by choosing the file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FbLBm11P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626490153731/EGV9x7T0c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FbLBm11P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626490153731/EGV9x7T0c.png" alt="texture.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-8-adjustments"&gt;
  &lt;/a&gt;
  Step 8: Adjustments
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can adjust the position of the plane by playing around with the x, y, and z axes.&lt;/li&gt;
&lt;li&gt;You can also perform image transformations by changing the values.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5P9ugopw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626490644124/UiJTSnJCvF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5P9ugopw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626490644124/UiJTSnJCvF.png" alt="adjustments.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-9-testing"&gt;
  &lt;/a&gt;
  Step 9: Testing
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; Now, we are ready with our filter and it's time for testing.&lt;/li&gt;
&lt;li&gt;You can test it using Spark AR Player.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U-jxfr9f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626490706686/0ZqI8JHly.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U-jxfr9f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626490706686/0ZqI8JHly.png" alt="test.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-10-publish-your-effect"&gt;
  &lt;/a&gt;
  Step 10: Publish your effect
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Now it's time for the world to use your AR Filter. &lt;/li&gt;
&lt;li&gt;Click on the Publish button.&lt;/li&gt;
&lt;li&gt;You have to provide the required details for publishing the filter and you're done from your side.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wrj4MgWo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626490844243/TX6gtFD-y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wrj4MgWo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626490844243/TX6gtFD-y.png" alt="publish.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Keep a small AR Filter demo video and also a logo for your AR Filter ready before clicking the Publish button&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#congratulations-you-can-now-create-and-publish-your-own-ar-filters"&gt;
  &lt;/a&gt;
  Congratulations, you can now create and publish your own AR Filters.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank you.
&lt;/h4&gt;

</description>
      <category>arfilter</category>
      <category>sparkar</category>
      <category>augmentedreality</category>
      <category>facebook</category>
    </item>
    <item>
      <title>Best 5 Startup Ideas For Developers And Programmers</title>
      <author>motivatedman</author>
      <pubDate>Tue, 20 Jul 2021 06:44:57 +0000</pubDate>
      <link>https://dev.to/motivatedman/best-5-startup-ideas-for-developers-and-programmers-4a37</link>
      <guid>https://dev.to/motivatedman/best-5-startup-ideas-for-developers-and-programmers-4a37</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Zhz5pUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/svpekucq94nezyq4sc1f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Zhz5pUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/svpekucq94nezyq4sc1f.jpg" alt="startup ideas for developers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can't survive without cash so everyone has to struggle for it. Some go for jobs, and some do business but everyone has to work somehow. Developers have two options, either to go for a job or choose to start a business.&lt;/p&gt;

&lt;p&gt;Starting a business should be ones’ ultimate goal and one can start working on it anytime. Even kids, there are &lt;a href="https://sturdybusiness.com/businesses-for-kids/"&gt;some practical businesses for kids&lt;/a&gt; that they can start in the early ages. But, I am never against doing jobs.&lt;/p&gt;

&lt;p&gt;Because a job is a place where you learn and grow. If you're a new developer who hasn't worked with companies then it's far better to work for them because they will teach you in a year that you will learn in a decade yourself.&lt;/p&gt;

&lt;p&gt;But if you're done with doing jobs, and now you have realized that you should give yourself a chance to start your startup, then here are some &lt;em&gt;easy-to-start startup&lt;/em&gt; &lt;em&gt;ideas&lt;/em&gt; for you.&lt;/p&gt;

&lt;p&gt;Before we get started, let me guide you on a significant business tip. According to &lt;a href="https://sturdybusiness.com/primary-reasons-new-businesses-fail/"&gt;SturdyBusiness&lt;/a&gt;, 45% of the new businesses fail in the first 4 years, and the &lt;em&gt;primary reason&lt;/em&gt; for the failure is &lt;em&gt;lack of knowledge&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Once you are ready to start your business, it's far better to learn to start an online business from an expert. There could be many things to consider even before you start your business.&lt;/p&gt;

&lt;p&gt;Let's explore easy-to-start startup ideas for developers/programmers now.&lt;/p&gt;

&lt;h2&gt;Start a software house&lt;/h2&gt;

&lt;p&gt;If you can create software, then it's a great opportunity for you to &lt;a href="https://www.wikihow.com/Start-a-Software-Company"&gt;start a software company&lt;/a&gt;. The advantage is that you alone can start with even at your home, it will be a sole proprietorship company. Later on, once you're getting more offers, you can hire others to join you.&lt;/p&gt;

&lt;p&gt;You should keep in mind that great things take time, and hence, it will take a little time to grow and get clients organically, but if you do it properly, you will become a leading company in your industry.&lt;/p&gt;

&lt;h2&gt;Create a cryptocurrency&lt;/h2&gt;

&lt;p&gt;Many things have changed with time. Years ago, &lt;em&gt;Gold&lt;/em&gt; and &lt;em&gt;Silver&lt;/em&gt; had been currencies of the world, and later on, paper currency replaced it. Now the &lt;a href="https://en.wikipedia.org/wiki/Cryptocurrency"&gt;cryptocurrency&lt;/a&gt; market has become the world's largest company in terms of investments.&lt;/p&gt;

&lt;p&gt;That means people have realized that &lt;strong&gt;Crypto&lt;/strong&gt; is the future currency of earth.&lt;/p&gt;

&lt;p&gt;If you are a developer, you have a great chance to create a cryptocurrency for yourself or for someone else. It won’t take much time to understand how to do it. A friend of mine created it easily.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;But, creating it for others could be a great option because in crypto - it's not only introducing a currency, surely you can do that easily - but many other things. You can’t handle everything alone until you have separate investments for your company.&lt;/p&gt;

&lt;p&gt;So there are two options, either to find people who could market your currency, and give it security, etc or do it for companies, both methods work.&lt;/p&gt;

&lt;h2&gt;Technical writer&lt;/h2&gt;

&lt;p&gt;If you're a developer and you are good at writing naturally. It's a great opportunity to become a technical writer. Technical writers are those who help people understand complex programs and software.&lt;/p&gt;

&lt;p&gt;It’s not over yet.&lt;/p&gt;

&lt;p&gt;Companies spend billions of dollars on content marketing each year so you could be an asset for companies, as a co-worker. You can start a marketing company where you shall produce content for them.&lt;/p&gt;

&lt;p&gt;On the other hand, technical writers are in high demand on freelancing platforms, it’s great to start with. Once you work with some companies, surely you could build long-lasting relationships with companies that will help you grow your business massively.&lt;/p&gt;

&lt;h2&gt;Start your own blog&lt;/h2&gt;

&lt;p&gt;Frankly speaking, it's one of the best businesses that I believe everyone can start easily. I don't want to exaggerate that as you will start your blog today, you will start earning from it. But it's a fact that sooner or later, you will find a reason to quit your job.&lt;/p&gt;

&lt;p&gt;The reason behind my strong belief is that as you keep working on your blog, it becomes your long-lasting asset that never ends.&lt;/p&gt;

&lt;p&gt;I recently received an email from an Asian blogger, who is generating $10,000 dollars a month from his blog. That’s a huge amount.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before you give it a shot&lt;/strong&gt;, please, keep in mind, as becoming a developer or programmer, took your time learning it, blogging has also its basics to learn.&lt;/p&gt;

&lt;p&gt;Don't get in it without learning the basics of it. &lt;/p&gt;

&lt;p&gt;For example, every blogger needs to understand SEO (search engine optimization), surely, it won't be harder for you because you're already good at many things. But other than technical SEO, On-Page SEO has its significance.&lt;/p&gt;

&lt;p&gt;On-page will take your week to become master of it, so if you go for it, it won’t stop you keep growing.&lt;/p&gt;

&lt;h2&gt;YouTube vLog&lt;/h2&gt;

&lt;p&gt;Back in 2005, &lt;a href="https://www.youtube.com/"&gt;YouTube&lt;/a&gt; was started as an entertainment platform. No one knew that it would become the biggest visual search engine in the world with the largest database.&lt;/p&gt;

&lt;p&gt;Now people Youtube many things, especially technical things. So as you're good at technical things, you can start your channel where you can discuss software, and many other complex stuff.&lt;/p&gt;

&lt;p&gt;Even &lt;a href="https://dev.to/motivatedman/how-to-choose-a-laptop-for-your-web-development-business-3c0j"&gt;laptops&lt;/a&gt; affiliates are one of the best affiliates that you can start on your channel. You can review &lt;a href="https://500laptops.com/"&gt;the best laptops&lt;/a&gt; on your channel, and it will soon be getting traffic. This can bring you a lot of money by monetizing your content.&lt;/p&gt;

&lt;p&gt;Top 3 ways to earn from Youtube videos are, Adsense, and affiliate links, or sponsored videos.&lt;/p&gt;

&lt;p&gt;But once again, Youtube has also its pattern to rank videos for search queries. Once you're ready to jump in, give it a little time to understand the basic things.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>devjournal</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>Writing a JavaScript Code</title>
      <author>niksin</author>
      <pubDate>Tue, 20 Jul 2021 06:34:15 +0000</pubDate>
      <link>https://dev.to/stuffsuggested/writing-a-javascript-code-209o</link>
      <guid>https://dev.to/stuffsuggested/writing-a-javascript-code-209o</guid>
      <description>&lt;p&gt;We are used to writing JavaScript code for a long time. But we are not updated enough to use an optimized way of coding for JavaScript. With the optimized method of coding, we can be on top of the things which is related to optimized code. With Shorthand methods, lots of things become easy for developers, Like Error tracking, Code management, line of Codes, etc.&lt;/p&gt;

&lt;p&gt;Here the list of javascript shorthands&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Javascript Shorthand for if with multiple OR(||) conditions&lt;/li&gt;
&lt;li&gt;Javascript Shorthand for if with multiple And(&amp;amp;&amp;amp;) conditions&lt;/li&gt;
&lt;li&gt;Javascript Shorthand for checking null, undefined, and empty values of variable&lt;/li&gt;
&lt;li&gt;Javascript Shorthand for switch case to select from multiple options&lt;/li&gt;
&lt;li&gt;Javascript Shorthand for functions for single line function&lt;/li&gt;
&lt;li&gt;Javascript Shorthand for conditionally calling functions &lt;/li&gt;
&lt;li&gt;Javascript Shorthand for To set the default to a variable using if&lt;/li&gt;
&lt;li&gt;Javascript Shorthand for if…else statements&lt;/li&gt;
&lt;li&gt;Javascript Shorthand for traditional for loops to fetch a value from array&lt;/li&gt;
&lt;li&gt;Javascript Shorthand for typecasting, Converting string to number&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-shorthand-for-if-with-multiple-or-conditions"&gt;
  &lt;/a&gt;
  1. Shorthand for if with multiple OR(||) conditions
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (car === 'audi' || car === 'BMW' || car === 'Tesla') {
    //code
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In a traditional way, we used to write code in the above pattern. but instead of using multiple OR conditions we can simply use an array and includes. Check out the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (['audi', 'BMW', 'Tesla', 'grapes'].includes(car)) {
   //code
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-shorthand-for-if-with-multiple-andampamp-conditions"&gt;
  &lt;/a&gt;
  2. Shorthand for if with multiple And(&amp;amp;&amp;amp;) conditions
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if(obj &amp;amp;&amp;amp; obj.tele &amp;amp;&amp;amp; obj.tele.stdcode) {
    console.log(obj.tele .stdcode)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use optional chaining (?.) to replace this snippet.&lt;br&gt;
console.log(obj?.tele?.stdcode);&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-shorthand-for-checking-null-undefined-and-empty-values-of-variable"&gt;
  &lt;/a&gt;
  3. Shorthand for checking null, undefined, and empty values of variable
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (name !== null || name !== undefined || name !== '') {
    let second = name;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The simple way to do it is...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const second = name || '';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-shorthand-for-switch-case-to-select-from-multiple-options"&gt;
  &lt;/a&gt;
  4. Shorthand for switch case to select from multiple options
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;switch (number) {
  case 1:
     return 'Case one';
  case 2:
     return 'Case two';
  default:
     return;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use a map/ object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const data = {
  1: 'Case one',
  2: 'Case two'
};
//Access it using
data[num]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-shorthand-for-functions-for-single-line-function"&gt;
  &lt;/a&gt;
  5. Shorthand for functions for single line function
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; function example(value) {

  return 2 * value;

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the arrow function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const example = (value) =&amp;gt; 2 * value
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-shorthand-for-conditionally-calling-functions"&gt;
  &lt;/a&gt;
  6. Shorthand for conditionally calling functions
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function height() {
    console.log('height');
}
function width() {
    console.log('width');
}
if(type === 'heigth') {
    height();
} else {
    width();
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Simple way&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; (type === 'heigth' ? height : width)()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#7-shorthand-for-to-set-the-default-to-a-variable-using-if"&gt;
  &lt;/a&gt;
  7. Shorthand for To set the default to a variable using if
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if(amount === null) {
    amount = 0;
}
if(value === undefined) {
    value = 0;
}
console.log(amount); //0
console.log(value); //0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just Write&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(amount || 0); //0

console.log(value || 0); //0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#9-shorthand-for-ifelse-statements"&gt;
  &lt;/a&gt;
  9. Shorthand for if…else statements
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let label;
if (amt &amp;gt; 0) {
    label = 'profit';
} else {
    label = 'loss';
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace it with a ternary operator&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const label = amt &amp;gt; 0 ? 'profit' : 'loss';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#10-shorthand-for-traditional-for-loops-to-fetch-a-value-from-array"&gt;
  &lt;/a&gt;
  10. Shorthand for traditional for loops to fetch a value from array
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arr = [1, 2, 3];
for(let i=0; i&amp;lt;arr.length; i++) {
    console.log(arr[i]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace for with forEach&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arr = [1, 2, 3];
arr.forEach((val) =&amp;gt; console.log(val));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#11-shorthand-for-typecasting-converting-string-to-number"&gt;
  &lt;/a&gt;
  11. Shorthand for typecasting, Converting string to number
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const num1 = parseInt("100");
const num2 =  parseFloat("11.11");
simply use + operator

const num1 = +"100";
const num2 =  +"11.11";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Css Selectors for Input Ranges</title>
      <author>Stacksjar</author>
      <pubDate>Tue, 20 Jul 2021 06:22:28 +0000</pubDate>
      <link>https://dev.to/stacksjar/css-selectors-for-input-ranges-4obb</link>
      <guid>https://dev.to/stacksjar/css-selectors-for-input-ranges-4obb</guid>
      <description>&lt;p&gt;In this post we are going to check Css Selectors for input ranges. This selectors would not be known by many of us.&lt;/p&gt;

&lt;p&gt;We all use input elements in our projects and must be aware of input type="number" this defines a field for entering number.&lt;/p&gt;

&lt;p&gt;This allows in restricting user to enter any other character other than numbers. When we use the tag input and give its type attribute value of "number" as below&lt;/p&gt;



&lt;p&gt;This input box comes with the 2 buttons on the right side which we can use to increase or decrease the number entered in the input.&lt;/p&gt;

&lt;p&gt;We can set the min and max values for the number to be entered in the input as below&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
This will restrict the user to enter only numbers that are between 2 and 5 as we have specified in the min and max attributes of the input.&lt;/p&gt;

&lt;p&gt;Now we can use the CSS Selector to detect if the user has not entered between the specified min and max values and apply css for the same.&lt;/p&gt;

&lt;p&gt;//html&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;//css&lt;br&gt;
input:in-range {&lt;br&gt;
  border: 1px solid green;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;input:out-of-range {&lt;br&gt;
border: 1px solid red;&lt;br&gt;
}﻿&lt;/p&gt;

&lt;p&gt;The above css code will check all the values entered in the Input Box, If the number entered in the input box is not between the range specified by min and max values it changes the color of input box to red.&lt;/p&gt;

&lt;p&gt;If the number entered is between the min and max values it will change the input box's color to green.&lt;/p&gt;

&lt;p&gt;This was the usage of in-range and out-of-range css selectors, hope you find this usefull.&lt;/p&gt;

&lt;p&gt;Checkout Complete Article Here: &lt;a href="https://stacksjar.com/post/css-selectors-for-input-ranges"&gt;Psuedo Selectors for Inputs in Css&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>ux</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>I Recreated my VSCode Theme 🔥</title>
      <author>Shaan Alam</author>
      <pubDate>Tue, 20 Jul 2021 06:03:49 +0000</pubDate>
      <link>https://dev.to/shaan71845/i-recreated-my-vscode-theme-33p6</link>
      <guid>https://dev.to/shaan71845/i-recreated-my-vscode-theme-33p6</guid>
      <description>&lt;p&gt;Hi guys!&lt;br&gt;
So, couple of months back I wrote a blog "I created a VSCode theme" describing about the VS Code theme called "Martian Night" that I made. Fast forward to present, I am here to announce that I recreated my VS Code theme. But wait, what do I mean by "recreate" ?&lt;br&gt;
Actually the thing is I wanted to update my theme, but for some reasons I was unable to release an update on the marketplace, so I had to unpublish the previous one and again publish the new one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-new-in-this-theme"&gt;
  &lt;/a&gt;
  What's new in this Theme??
&lt;/h2&gt;

&lt;p&gt;There are lot of things which are new in this theme. Previously I had used only 2-3 colours for the syntax, but now I tried to introduce more colours to the syntax. Also, I introduced three variants of the theme - Normal, &lt;strong&gt;Bold&lt;/strong&gt;, &amp;amp; &lt;em&gt;italics&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#normal"&gt;
  &lt;/a&gt;
  Normal
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3-khXeKV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7n53p01mo7a8ss65fiyo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3-khXeKV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7n53p01mo7a8ss65fiyo.png" alt="Normal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bold"&gt;
  &lt;/a&gt;
  Bold
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--atA7F42V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u55v8lerydbphwmowbjo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--atA7F42V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u55v8lerydbphwmowbjo.png" alt="Bold"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#italics"&gt;
  &lt;/a&gt;
  Italics
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--58KyZFDB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxi06tdpobkvvph8v8as.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--58KyZFDB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxi06tdpobkvvph8v8as.png" alt="Italics"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, I changed the previous boring logo into something new!!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oqOEy8kZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34pu2kz5j21wj5qhmkac.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oqOEy8kZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34pu2kz5j21wj5qhmkac.png" alt="Logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-did-i-upgrade"&gt;
  &lt;/a&gt;
  Why did I upgrade?
&lt;/h2&gt;

&lt;p&gt;The previous one had a lot of issues like lack of colours, high contrast colours and no italics or bold fonts used. This is because I was pretty new to creating VS code theme that time, so I decided to improve my theme, hence I created this one!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-you-try-it"&gt;
  &lt;/a&gt;
  How can you try it?
&lt;/h2&gt;

&lt;p&gt;Below are some relevant links for you to try!!&lt;/p&gt;

&lt;p&gt;Install it from here (Marketplace) - &lt;a href="https://marketplace.visualstudio.com/items?itemName=shaanalam718.martian-night"&gt;https://marketplace.visualstudio.com/items?itemName=shaanalam718.martian-night&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Repo - &lt;a href="https://github.com/shaan71845/martian-night-vscode-theme"&gt;https://github.com/shaan71845/martian-night-vscode-theme&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to leave a ⭐on the repo!!&lt;br&gt;
Feedbacks and comments are appreciated!!&lt;br&gt;
Thank you!!&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>codepen</category>
    </item>
    <item>
      <title>Migrating to Redshift RA3 nodes</title>
      <author>Tom Milner</author>
      <pubDate>Tue, 20 Jul 2021 06:00:52 +0000</pubDate>
      <link>https://dev.to/aws-builders/migrating-to-redshift-ra3-nodes-fn7</link>
      <guid>https://dev.to/aws-builders/migrating-to-redshift-ra3-nodes-fn7</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-ra3"&gt;
  &lt;/a&gt;
  What is RA3?
&lt;/h1&gt;

&lt;p&gt;RA3 is the latest family of Redshift node types launched at re:Invent 2019. The other node types are Dense Storage (DS2) and Dense Compute (DC2). The primary difference with RA3 is that it has a completely separate storage layer called Redshift Managed Storage (RMS). RMS uses high performance SSDs for your hot data and Amazon S3 for cold data. In addition, it uses high bandwidth networking built on the AWS Nitro System to reduce the time taken for data to be offloaded to and retrieved from Amazon S3.&lt;br&gt;
With the DC2 and DS2 node types, storage is tightly coupled to the compute nodes using EBS volumes attached to each individual node.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-move-to-ra3"&gt;
  &lt;/a&gt;
  Why move to RA3?
&lt;/h1&gt;

&lt;p&gt;There are a number of reasons to consider migrating your existing cluster to the RA3 node types and I have listed what I believe are the main ones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#decoupled-storage"&gt;
  &lt;/a&gt;
  Decoupled Storage
&lt;/h2&gt;

&lt;p&gt;Every organization is different but the main reason for ours to migrate to RA3 was to take advantage of the increased storage to compute ratio. For every ra3.4xl or ra3.16xl node you add to the your cluster, you get access to 128TB storage capacity. Plus you only pay for what you consume. You are not paying for the full 128TB every month.&lt;br&gt;
By migrating one ds2.8xl node to 2 ra3.4xl nodes, we have increased our storage capacity by 1600% from 16TB to 256TB. While storage is still actually coupled to a compute node, there is so much of it that it has effectively become decoupled.&lt;br&gt;
This table lists the difference in technical specifications between 1 ds2.8xl node and 2 ra3.4xl nodes.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Node Type&lt;/th&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;vCPU&lt;/th&gt;
&lt;th&gt;Memory&lt;/th&gt;
&lt;th&gt;Storage&lt;/th&gt;
&lt;th&gt;I/O&lt;/th&gt;
&lt;th&gt;Slices&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ds2.8xl&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;244 GiB&lt;/td&gt;
&lt;td&gt;16TB HDD&lt;/td&gt;
&lt;td&gt;3.30 GB/s&lt;/td&gt;
&lt;td&gt;160&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ra3.4xl&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;192 GiB&lt;/td&gt;
&lt;td&gt;256TB RMS&lt;/td&gt;
&lt;td&gt;4.00 GB/s&lt;/td&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;It may look like you are taking a reduction in vCPU and Memory but that hasn't had any noticeable impact on the performance of our clusters. Our typical queries are running in the same time or slightly faster. The combination of newer hardware and SSDs makes up for this apparent reduction.&lt;br&gt;
With the DS2 and DC2 node types storage is tightly coupled to vCPU and memory. To purchase more storage, you also have to purchase the attached vCPU and memory. The pushes up the cost of purchasing 1TB storage for these node types to between $77 and $306 per month, depending on purchase plan. With RA3, storage is priced separately to vCPU and memory and 1TB of RMS costs $24 per month, regardless of purchase plan. In our case, we had previously expanded a cluster from 5 to 7 ds2.8xl nodes purely for storage requirements. When we migrated to ra3.4xl, we were able to reduce what should have been 14 nodes (using a 1:2 ratio) to 10 nodes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#operational-overhead"&gt;
  &lt;/a&gt;
  Operational Overhead
&lt;/h2&gt;

&lt;p&gt;The increased storage to compute ratio means that you can now scale storage and compute separately. With our previous 10 node ds2.8xl cluster, we were bound to 160TB. Storage capacity on the cluster bounced between 60% and 80% used depending on the time of year. Working with our business customers to keep used storage capacity below 80% at peak times of activity was a fulltime job. This added more overhead to IT and the business teams taking time away from value creation. Not having to chase business users to delete data from the cluster has been a relief for both the technical and business teams.&lt;br&gt;
If you are purchasing RIs on a 3 or even 1 year term, having different renewal dates on different nodes within the same cluster complicates your cost management. Nodes will come up for renewal at different times of the year and it also makes any future plans you may have for your cluster size have more complicated. Imagine you started with a 5 node cluster purchased on a 3 year term. 1.5 years in, you realize that you need to increase your cluster size to 7 nodes so you purchase 2 more nodes on a 3 year term. Effectively, you have now extended the lifetime of your cluster to 4.5 years. And when the original 5 nodes come up for renewal, what do you do? Extend for another 1 or 3 years?&lt;br&gt;
There is no RI plan for RMS so this reduces complexity here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#availability"&gt;
  &lt;/a&gt;
  Availability
&lt;/h2&gt;

&lt;p&gt;If you are running a two node cluster for availability purposes, you may be able to scale down to a smaller RA3 cluster. In our case, we were able to resize a 2 node ds2.8xl cluster to 2 node ra3.4xl cluster. It gives us the same availability profile with 256TB storage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-features"&gt;
  &lt;/a&gt;
  New Features
&lt;/h2&gt;

&lt;p&gt;Other reasons to upgrade to RA3 nodes are that a number of features are only and will only be available on this node type. The new storage model is making possible a number of new features that couldn't be supported on the DC2 and DS2 node types.&lt;/p&gt;

&lt;p&gt;1) AQUA: As outlined, RMS stores all data on S3 and then moves data to an SSD layer when requested by compute layer. AQUA pushes more predicates down to RMS and reduces data movement between storage and compute layers. The first iteration of AQUA supports scan and aggregation operations when they contain at least one predicate that contains a LIKE or SIMILAR TO expression. This should greatly enhance query performance where you have these types of queries. We recently turned it on but most of our queries do not match this profile and we have seen very little benefit. However, we hope that AWS will add more support for other expressions in the future and we are now best place to take advantage of any future optimizations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/redshift/latest/mgmt/managing-cluster-aqua-understanding.html"&gt;https://docs.aws.amazon.com/redshift/latest/mgmt/managing-cluster-aqua-understanding.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) Data sharing: This feature allows you to share live data stored on RMS between different Redshift clusters. For example, you can have one cluster that writes your data to RMS and separate clusters for consuming that data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/blogs/big-data/announcing-amazon-redshift-data-sharing-preview/"&gt;https://aws.amazon.com/blogs/big-data/announcing-amazon-redshift-data-sharing-preview/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3) Cross-AZ Cluster Relocation. Up to now, Redshift was hosted entirely in a single AZ. A failure in the host AZ would mean you would have to restore a snapshot to a new cluster in a separate AZ, generally via a bespoke process. However, RMS is not bound to a single AZ. Therefore, in case of a failure, you will only need to restore your compute nodes in a separate AZ. AWS is making this a setting in the backup details called Cluster relocation. Enabling this feature allows Redshift to relocate your cluster when certain AZ level issues arise.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/redshift/latest/mgmt/managing-cluster-recovery.html"&gt;https://docs.aws.amazon.com/redshift/latest/mgmt/managing-cluster-recovery.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4) Some existing features may work more effectively with RA3 and RMS specifically. We are currently re-testing concurrency scaling with RA3 as we expect this should work differently with RA3.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#storage-tiering"&gt;
  &lt;/a&gt;
  Storage Tiering
&lt;/h2&gt;

&lt;p&gt;With the restricted storage capacity of the DS2 and DC2 nodes, one storage saving pattern that could be applied is to offload the older data on the cluster to S3 and expose them in Redshift using the Spectrum service. Storing 1TB of data in S3 Standard class would cost $23.55 per month. Storing this data in RMS would only cost slightly more at $24.58 per month. However this ignores the operational cost of supporting a bespoke solution using Spectrum.&lt;br&gt;
If you choose a different S3 storage class, the Spectrum pattern may be more cost-effective. For example, if you went for Standard-Infrequent Access, the price would be almost halved to $12.8. However be careful with Standard-IA storage class. Data stored in Standard-IA costs more to access and your costs could quickly exceed Standard if you access it too frequently. A GET request against Standard-IA costs 2.5 times more than against Standard. This can add up quickly.&lt;br&gt;
I would say that RMS offers an easy way to take advantage of S3 storage pricing without any of the operational overhead of explicitly archiving data to S3.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h1&gt;

&lt;p&gt;Pricing is a tricky beast here. On-demand and 1yr terms are almost the same even when you include storage cost. However, if you compare 3 year terms for ds2.8xl nodes versus ra3.4xl, prices are 44% more expensive for the newer hardware. &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Node Type&lt;/th&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;On Demand&lt;/th&gt;
&lt;th&gt;1yr&lt;/th&gt;
&lt;th&gt;3yr&lt;/th&gt;
&lt;th&gt;Storage (16TB * 0.8)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ds2.8xl&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;$7.60 per Hour&lt;/td&gt;
&lt;td&gt;$5.00&lt;/td&gt;
&lt;td&gt;$2.27&lt;/td&gt;
&lt;td&gt;$0.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ra3.4xl&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;$7.212 per Hour&lt;/td&gt;
&lt;td&gt;$4.84&lt;/td&gt;
&lt;td&gt;$2.84&lt;/td&gt;
&lt;td&gt;$0.44&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Cost Difference&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0.65%&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;5.6%&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;44%&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CG0SnKS7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbqi6otuop5kivjr50so.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CG0SnKS7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbqi6otuop5kivjr50so.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pricing for backup storage is also different. For DS2 and DC2 clusters the charge is only applied to the amount of manual snapshot storage above the amount of provisioned storage on the cluster. All manual snapshots taken for RA3 clusters are billed as backup storage at standard Amazon S3 rates. However, automated snapshots are priced the same.&lt;/p&gt;

&lt;p&gt;All of these pricing scenarios are based on the theory that you upgrade on 1:2 ratio. In theory, if you replace 1 ds2.8xl with 2 ra3.4xl nodes, it will cost you more over a 3 year term. This ignores the main benefit of the decoupled compute and storage that upgrading to RA3 provides. In practice, we were able to reduce the number of nodes we were using and our monthly Redshift costs dropped by 12%.&lt;br&gt;
Other cost savings with reduced operational overhead are harder to quantify but worth taking into account if assessing a move to RA3.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#migration"&gt;
  &lt;/a&gt;
  Migration
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;The migration process is straightforward. The only technical decision you need to make is whether you wish to use elastic or classic resize. Classic resize provisions a new cluster and copies the data from the original cluster to the new cluster. Elastic resize works by changing or adding nodes to your existing cluster. Elastic resize is the AWS recommended approach and they have improved it a lot recently especially with the ability to change node types. It is also the fastest way to add and remove nodes. Classic resize can take several hours or days depending on the size and configuration of your cluster.&lt;br&gt;
The main reason to use classic over elastic resize is if the new cluster configuration isn't possible with an elastic resize. Elastic resize is an opinionated option and only allows you to add or remove nodes within certain parameters. For example,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For dc2.8xlarge, ds2.8xlarge, ra3.4xlarge, or ra3.16xlarge node types, you can change the number of nodes to half the current number or double the current number of nodes. A 4-node cluster can be resized to 2, 3, 5, 6, 7, or 8 nodes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The easiest way to check what cluster size is available via elastic resize is to check within the console. &lt;br&gt;
Go to Actions --&amp;gt; Resize. Elastic resize (recommended) is chosen by default. Scroll down to the Nodes dropdown and you can see the number of nodes you can upgrade to.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bsibzy4Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0pml0h7wi9vn3hk0u236.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bsibzy4Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0pml0h7wi9vn3hk0u236.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more information, AWS have a good page with the details you'll need on resizing your cluster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/redshift/latest/mgmt/managing-cluster-operations.html"&gt;https://docs.aws.amazon.com/redshift/latest/mgmt/managing-cluster-operations.html&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#execution"&gt;
  &lt;/a&gt;
  Execution
&lt;/h2&gt;

&lt;p&gt;At the time of our upgrade, we were able to choose elastic resize for 2 of our larger clusters. Elastic resize was not available as an option for moving from a 2 node ds2.8xl cluster to 2 node ra3.4xl cluster so we went with classic resize for those. However, that option is now available via the console.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Original Node Type&lt;/th&gt;
&lt;th&gt;New Node Type&lt;/th&gt;
&lt;th&gt;Elastic vs Classic&lt;/th&gt;
&lt;th&gt;Data Size&lt;/th&gt;
&lt;th&gt;Time&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;10 ds2.8xl&lt;/td&gt;
&lt;td&gt;20 ra3.4xl&lt;/td&gt;
&lt;td&gt;Elastic&lt;/td&gt;
&lt;td&gt;120tb&lt;/td&gt;
&lt;td&gt;30 minutes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7 ds2.8xl&lt;/td&gt;
&lt;td&gt;10 ra3.4xl&lt;/td&gt;
&lt;td&gt;Elastic&lt;/td&gt;
&lt;td&gt;70tb&lt;/td&gt;
&lt;td&gt;32 minutes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2 ds2.8xl&lt;/td&gt;
&lt;td&gt;2 ra3.4xl&lt;/td&gt;
&lt;td&gt;Classic&lt;/td&gt;
&lt;td&gt;2.66tb&lt;/td&gt;
&lt;td&gt;8 hours&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2 ds2.8xl&lt;/td&gt;
&lt;td&gt;2 ra3.4xl&lt;/td&gt;
&lt;td&gt;Classic&lt;/td&gt;
&lt;td&gt;9.86tb&lt;/td&gt;
&lt;td&gt;35 hours&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;As you can see from the table above, there is a huge difference in execution times of elastic versus classic resize. While there may be reasons to use classic, an elastic resize makes the entire upgrade simple and quick.&lt;/p&gt;

&lt;p&gt;One thing to note is that while we were able to run both elastic resizes in parallel, the classic resizes cannot run in parallel. If you kick off a second classic resize, it will wait until the first completes before executing. It will be in read-only mode while waiting so you may want to only kick off 2nd resize after the 1st resize completes.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#postmigration"&gt;
  &lt;/a&gt;
  Post-migration
&lt;/h1&gt;

&lt;p&gt;As stated previously, the migration to RA3 did not bring a massive lift in performance. It is a very stable and easy migration that brings a lot of benefits to reduce your operational and management load in relation to Redshift. That stability was apparent in the Redshift CloudWatch Dashboard where we saw large drops in our Read and WriteIOPS combined with a drop in Read and WriteLatency but no major changes overall. This was expected with the move to RMS plus a slight increase in CPU Utilisation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g-0BqcY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebo469mexp9ndik07mc9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g-0BqcY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebo469mexp9ndik07mc9.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h1&gt;

&lt;p&gt;Upgrading your Redshift cluster to RA3 node types simplifies the management of your cluster. This is primarily enabled through the massive increase in storage available per node. This increase in storage comes without any trade-off in performance. We are 4 months after the upgrade and the best word I can use to describe our experience is stability. The upgrades on our largest clusters took 30 minutes using an elastic resize. The upgrade required no code changes and had no impact on our customers.&lt;br&gt;
From AWS, we see all the new features being enabled on RA3 first. The new storage architecture enables new features that would not be possible in the older node types and such features will never be available on the DC2 or DS2 node types.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>analytics</category>
      <category>database</category>
    </item>
    <item>
      <title>🧐Most Confusing Part Of JavaScript.</title>
      <author>Chetan Atrawalkar👉CA.</author>
      <pubDate>Tue, 20 Jul 2021 05:57:51 +0000</pubDate>
      <link>https://dev.to/chetan_atrawalkar/most-confusing-part-of-javascript-3d80</link>
      <guid>https://dev.to/chetan_atrawalkar/most-confusing-part-of-javascript-3d80</guid>
      <description>&lt;p&gt;If you are working with javascript for a while, you will agree with me. This &lt;strong&gt;&lt;code&gt;‘this’&lt;/code&gt;&lt;/strong&gt; keyword is very confusing when you are writing code, especially when you read others code.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--smUIZwLP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ujarymxgyuqp94hzm0w.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--smUIZwLP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ujarymxgyuqp94hzm0w.gif" alt="confused"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This may be controversial, but for me it's the &lt;code&gt;this&lt;/code&gt; keyword.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;➡️ &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt; has a different values depending on where it is used.&lt;br&gt;
➡️ Inside a method &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt; refers to the owner object.&lt;br&gt;
➡️ When alone &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt; refers to the global object.&lt;br&gt;
➡️ Inside a function &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
this refers to the global object too.&lt;br&gt;
➡️ In a function, in strict mode &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt; is undefined.&lt;br&gt;
➡️ In a event &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt; refers to the element that received the event.&lt;/p&gt;

&lt;p&gt;However, since 2019 I've been using &lt;strong&gt;React Hooks&lt;/strong&gt;, I haven't had to use the &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt; keyword once.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7slcLLnz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m47qrekg0gm9le692wyk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7slcLLnz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m47qrekg0gm9le692wyk.png" alt="hooks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn More About React Hooks On official website.&lt;br&gt;
&lt;a href="https://reactjs.org/docs/hooks-intro.html"&gt;React Hooks.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you like React Hooks too?&lt;/strong&gt;&lt;br&gt;
Let's discuss it more in the comments section. If you agree don't forget to like ❤️ and save 📌&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;😎Keep Focused And Just Code It!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to get the most out of programming courses</title>
      <author>Pasca Vlad</author>
      <pubDate>Tue, 20 Jul 2021 05:52:40 +0000</pubDate>
      <link>https://dev.to/pascavld/how-to-get-the-most-out-of-programming-courses-3mfi</link>
      <guid>https://dev.to/pascavld/how-to-get-the-most-out-of-programming-courses-3mfi</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found value in this thread you will most likely enjoy my tweets too so make sure you follow me on &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;  for more information about web development and how to improve as a developer. This article was first published on my &lt;a href="https://vladpasca.hashnode.dev/"&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-watch-the-entire-course-and-take-notes"&gt;
  &lt;/a&gt;
  1. Watch the entire course and take notes
&lt;/h3&gt;

&lt;p&gt;In this part, you just need to watch the course and take notes&lt;/p&gt;

&lt;p&gt;Note the concepts you didn't understand from the beginning or the important ones&lt;/p&gt;

&lt;p&gt;Make sure that you stay focused while you do all this&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-go-over-the-notes-you-took"&gt;
  &lt;/a&gt;
  2. Go over the notes you took
&lt;/h3&gt;

&lt;p&gt;Now after you finished watching the course and taking notes you go and read all the notes once again&lt;/p&gt;

&lt;p&gt;If you still can't understand some concepts go on and research more about them&lt;/p&gt;

&lt;p&gt;Do this until you understand what every concept does&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-go-through-the-course-once-again"&gt;
  &lt;/a&gt;
  3. Go through the course once again
&lt;/h3&gt;

&lt;p&gt;Now you need to go through the course once again and code along&lt;/p&gt;

&lt;p&gt;Look over your notes from time to time&lt;/p&gt;

&lt;p&gt;Also, make sure that you break the code and play around with it&lt;/p&gt;

&lt;p&gt;Maybe building something similar after each lesson/video&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-build-a-project-after-each-chaptersection"&gt;
  &lt;/a&gt;
  4. Build a project after each chapter/section
&lt;/h3&gt;

&lt;p&gt;Let's say that you finished learning about if/else statements and all that&lt;/p&gt;

&lt;p&gt;Before you continue with the course build a project with these&lt;/p&gt;

&lt;p&gt;Use some concepts you learned in the past too&lt;/p&gt;

&lt;p&gt;Don't overthink this, just build something&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-build-the-projects-from-the-end"&gt;
  &lt;/a&gt;
  5. Build the projects from the end
&lt;/h3&gt;

&lt;p&gt;These days most of the courses out there have some projects at the end&lt;/p&gt;

&lt;p&gt;If the course you're taking doesn't have any projects, search for some on Youtube to practice&lt;/p&gt;

&lt;p&gt;Now, how to go about these projects?&lt;/p&gt;

&lt;p&gt;First, you build the entire project along with the teacher&lt;/p&gt;

&lt;p&gt;Then you build it once again on your own&lt;/p&gt;

&lt;p&gt;And then you either add more features to it or build something similar&lt;/p&gt;

&lt;p&gt;Make sure you follow these steps because this is where you'll learn the most&lt;/p&gt;

&lt;p&gt;Best of luck!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Watch the entire course and take notes&lt;/li&gt;
&lt;li&gt;Go over the notes you took&lt;/li&gt;
&lt;li&gt;Go through the course once again and code along&lt;/li&gt;
&lt;li&gt;Build a project after each chapter/section&lt;/li&gt;
&lt;li&gt;Build the projects from the end&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The end
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;I hope found this useful and if you did please let me know. If you have any question feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt; .&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top anime shows Flutter app</title>
      <author>Chris Bongers</author>
      <pubDate>Tue, 20 Jul 2021 05:26:25 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/top-anime-shows-flutter-app-3na3</link>
      <guid>https://dev.to/dailydevtips1/top-anime-shows-flutter-app-3na3</guid>
      <description>&lt;p&gt;Today we'll be building a Top anime shows Flutter app. This app will call an API and retrieve a list of the top-rated shows.&lt;br&gt;
Then we'll loop over these results and output them to the app.&lt;/p&gt;

&lt;p&gt;A high-level overview of what we'll be doing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add HTTP package&lt;/li&gt;
&lt;li&gt;Create a show class&lt;/li&gt;
&lt;li&gt;Call an API&lt;/li&gt;
&lt;li&gt;Map API results to our new class&lt;/li&gt;
&lt;li&gt;Future builder to retrieve results&lt;/li&gt;
&lt;li&gt;Render a Listview with the shows&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And all that will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aR3wsHck--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626758760627/YfY7NYhaB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aR3wsHck--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626758760627/YfY7NYhaB.png" alt="Top anime shows Flutter app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: This tutorial focuses on how it works. To keep it easy, I'll place all the code in the main.dart file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#adding-the-http-package-dependency"&gt;
  &lt;/a&gt;
  Adding the HTTP package dependency
&lt;/h2&gt;

&lt;p&gt;Let's start by using our &lt;a href="https://github.com/rebelchris/flutter/tree/hello-world"&gt;basic Flutter starting template&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Before we can interact with any API or external website resource, we need to add the HTTP package to our Flutter project.&lt;/p&gt;

&lt;p&gt;The easiest way to do this is to run the following command. It will always pick the latest version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;flutter pub add http
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will also make sure the package get's added to the pub spec file.&lt;/p&gt;

&lt;p&gt;The next thing we'll do is import the package in our &lt;code&gt;main.dart&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:http/http.dart'&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-a-new-class-for-our-data"&gt;
  &lt;/a&gt;
  Creating a new class for our data
&lt;/h2&gt;

&lt;p&gt;Let's have a look at the API we'll be using today. It's a free-to-use API (but be wise about using it!).&lt;/p&gt;

&lt;p&gt;The endpoint we'll be calling is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://api.jikan.moe/v3/top/anime/1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And it returns a JSON object as such:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"request_hash"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"request:top:58399c95e55435d6ccef63eef7ce609974e4f2d5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"request_cached"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"request_cache_expiry"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;77456&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"top"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"mal_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5114&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"rank"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Fullmetal Alchemist: Brotherhood"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"https:&lt;/span&gt;&lt;span class="se"&gt;\/\/&lt;/span&gt;&lt;span class="s2"&gt;myanimelist.net&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;anime&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;5114&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;Fullmetal_Alchemist__Brotherhood"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"image_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"https:&lt;/span&gt;&lt;span class="se"&gt;\/\/&lt;/span&gt;&lt;span class="s2"&gt;cdn.myanimelist.net&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;images&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;anime&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;1223&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;96541.jpg?s=faffcb677a5eacd17bf761edd78bfb3f"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"TV"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"episodes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"start_date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Apr 2009"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"end_date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Jul 2010"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"members"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2504975&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"score"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;9.17&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The part we are interested in is the &lt;code&gt;top&lt;/code&gt; items, this is the actual data set, and it comes as an array of objects.&lt;/p&gt;

&lt;p&gt;Let's create a &lt;code&gt;Show&lt;/code&gt; class to map some of this data that we can use for our app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Show&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;malId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;imageUrl&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;Show&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;malId&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;imageUrl&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;score&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;factory&lt;/span&gt; &lt;span class="n"&gt;Show&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fromJson&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;dynamic&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Show&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;malId:&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'mal_id'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
      &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
      &lt;span class="nl"&gt;imageUrl:&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'image_url'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
      &lt;span class="nl"&gt;score:&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'score'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't get spooked here. It's more understandable than you would think.&lt;/p&gt;

&lt;p&gt;We define a new class called &lt;code&gt;Show,&lt;/code&gt; and we define the variables it has. In our case, we only need those described.&lt;/p&gt;

&lt;p&gt;Then we call a construct method to define the required files and make them stable.&lt;/p&gt;

&lt;p&gt;The last part is a factory, where we can map JSON data as a new Show construct!&lt;br&gt;
How this works, I'll show you in a bit when we are retrieving our data.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#calling-an-api-in-flutter"&gt;
  &lt;/a&gt;
  Calling an API in Flutter
&lt;/h2&gt;

&lt;p&gt;The next part is actually to call the API to retrieve some data.&lt;/p&gt;

&lt;p&gt;We'll create a Future that should return a list of shows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Show&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;fetchShows&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
      &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'https://api.jikan.moe/v3/top/anime/1'&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;statusCode&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;topShowsJson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jsonDecode&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="o"&gt;)[&lt;/span&gt;&lt;span class="s"&gt;'top'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;topShowsJson&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Show&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fromJson&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;toList&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Failed to load shows'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we first create a variable that will retrieve the data as plain text.&lt;br&gt;
Then we check if this response is correct. If so, we decode the body as a list.&lt;br&gt;
However, this is now just a list of objects.&lt;/p&gt;

&lt;p&gt;Remember we made that factory in the show class?&lt;/p&gt;

&lt;p&gt;We'll map each result into a Show type and return a list.&lt;/p&gt;

&lt;p&gt;So the return value of this function is a list containing show objects.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#putting-it-together-as-an-app"&gt;
  &lt;/a&gt;
  Putting it together as an app
&lt;/h2&gt;

&lt;p&gt;Alright, now let's see how we can use all of this in an app.&lt;/p&gt;

&lt;p&gt;Flutter always starts with the main function, in our case, that will run our app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;runApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AnimeApp&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's make this AnimeApp, and make it a stateful widget, since it will be rerendered once it receives data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AnimeApp&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatefulWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;AnimeApp&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;_AnimeAppState&lt;/span&gt; &lt;span class="n"&gt;createState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_AnimeAppState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's move on to making this state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;_AnimeAppState&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;AnimeApp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;late&lt;/span&gt; &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Show&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;shows&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;initState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;shows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fetchShows&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;MaterialApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="s"&gt;'Anime app'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;debugShowCheckedModeBanner:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;home:&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Anime app'&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
        &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
             &lt;span class="c1"&gt;// TODO&lt;/span&gt;
          &lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the basic setup of our app. It defines a future variable called shows.&lt;br&gt;
Then we use the initState to call the fetchShows future and assign the return value to our shows variable.&lt;/p&gt;

&lt;p&gt;So in plain English: When this widget gets initialized. It calls our fetchShows function and assigns the return value to our shows variable.&lt;/p&gt;

&lt;p&gt;From here, we need to return some rendered data in the body part.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;FutureBuilder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AsyncSnapshot&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Show&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hasData&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// TODO&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hasError&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Something went wrong :('&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;CircularProgressIndicator&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="nl"&gt;future:&lt;/span&gt; &lt;span class="n"&gt;shows&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside this body, we added a FutureBuilder. This is a super cool part of Flutter that can return a snapshot.&lt;br&gt;
This snapshot can have various states on which we can control.&lt;/p&gt;

&lt;p&gt;The first thing we check is that the &lt;code&gt;hasData&lt;/code&gt; variable is set. If so, we can render this data!&lt;/p&gt;

&lt;p&gt;But, if the snapshot has an error, we return a text widget to notify the user.&lt;/p&gt;

&lt;p&gt;Suppose none of these are matched. We are still waiting for the data to be returned and show a loading indicator.&lt;/p&gt;

&lt;p&gt;Now, let's work on the part if we do get some data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Center&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;ListView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;separated&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;padding:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nl"&gt;itemCount:&lt;/span&gt; &lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="o"&gt;!.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="nl"&gt;itemBuilder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ListTile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;leading:&lt;/span&gt; &lt;span class="n"&gt;CircleAvatar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;backgroundImage:&lt;/span&gt;
              &lt;span class="n"&gt;NetworkImage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;${snapshot.data?[index].imageUrl}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;${snapshot.data?[index].title}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;subtitle:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Score: &lt;/span&gt;&lt;span class="si"&gt;${snapshot.data?[index].score}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="nl"&gt;separatorBuilder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Divider&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
  &lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In there, we can return a ListView. I'm using the separated version.&lt;/p&gt;

&lt;p&gt;As the itemCount we use the snapshot data attribute, which is an array, making the length available.&lt;/p&gt;

&lt;p&gt;Then we use the itemBuilder function to loop over each data item for the length of itemCount.&lt;/p&gt;

&lt;p&gt;And add a &lt;code&gt;ListTile&lt;/code&gt; widget containing the avatar, title, and score.&lt;/p&gt;

&lt;p&gt;And with that, we get our list of top anime shows in our Flutter app.&lt;/p&gt;

&lt;p&gt;If you want to view the complete demo code, check out the &lt;a href="https://github.com/rebelchris/flutter/tree/fetch-anime-shows"&gt;GitHub repo&lt;/a&gt; for this code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>ios</category>
      <category>android</category>
    </item>
    <item>
      <title>Placements &amp; Interviews 😲 [resources &amp; tips]</title>
      <author>Devang Agarwal</author>
      <pubDate>Tue, 20 Jul 2021 04:28:34 +0000</pubDate>
      <link>https://dev.to/devangagarwal7/placements-interviews-resources-tips-4abd</link>
      <guid>https://dev.to/devangagarwal7/placements-interviews-resources-tips-4abd</guid>
      <description>&lt;p&gt;Hello guys! &lt;strong&gt;This is my first blog ever&lt;/strong&gt;. And it is be going to about interview preparation as this is the most [probably only] talked topic among undergrads right now. So please have a look and do comment your suggestions.&lt;/p&gt;

&lt;p&gt;Coming to the main part, myself being an undergrad, I have looked and studied all over the internet about dos and don'ts for the upcoming season. With all the knowledge I have gained I will briefly list out main points and provide you guys with some good resources to go deeper if you want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7R-3aal4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lnwrbjq5eeuk8u8yvqf6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7R-3aal4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lnwrbjq5eeuk8u8yvqf6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dos-and-donts-"&gt;
  &lt;/a&gt;
  Dos and don'ts -
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#first-of-all-get-yourself-to-interview-round"&gt;
  &lt;/a&gt;
  First of all get yourself to interview round
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Make one good &lt;strong&gt;resume&lt;/strong&gt; [CVs not necessary for undergrads] and tailor it according to the job/position you are applying for. Remember tailoring is important.&lt;/li&gt;
&lt;li&gt;Resume must have contact details, brief summary, most recent education, project, skills, work experience[if] contained in a &lt;strong&gt;single page&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://techinterviewhandbook.org/resume"&gt;What to include and what not to in resume&lt;/a&gt;&lt;br&gt;
&lt;a href="https://novoresume.com/"&gt;Free resume builder&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#forduring-interview-round"&gt;
  &lt;/a&gt;
  For/during interview round
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Thoroughly go through the job requirements, expectations, skillset, company background - this will help in tailoring your answers during the interview.&lt;/li&gt;
&lt;li&gt;Prepare basics specific to the job and have a good understanding of the skills you mentioned in your resume.&lt;/li&gt;
&lt;li&gt;Get an idea of the selection procedure of the company you have applied to.&lt;/li&gt;
&lt;li&gt;Prepare answers to common questions beforehand.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Most imp&lt;/strong&gt; - Be confident and honest during the interview!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://techinterviewhandbook.org/interview-formats"&gt;Interview formats and details&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.grammarly.com/blog/common-interview-questions/"&gt;Common Interview questions&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#post-interview"&gt;
  &lt;/a&gt;
  Post interview
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Do not think about if your interview was bad or good or how you will stand with others, let this headache be on the interviewer's side.&lt;/li&gt;
&lt;li&gt;Do check your mails regularly.&lt;/li&gt;
&lt;li&gt;If selected, say yes to the offer only after understanding compensation breakdown. If not, then do a brief introspection upon the domain you can improve.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;More Resources - &lt;br&gt;
&lt;a href="https://www.30dayscoding.com/"&gt;30 days of coding (best and compact)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://leverageedu.com/blog/how-to-prepare-for-placements/"&gt;How to prepare for placemnets&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.interviewbit.com/coding-interview-questions/"&gt;DSA Questions (coding interview)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Most of the important stuff is simplified. Readers, please share your views and resources in the comments to help peers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/devangagarwal7/"&gt;My linkedin&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/dmachine7"&gt;My Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Peace ✌&lt;/p&gt;

</description>
      <category>placement</category>
      <category>interview</category>
      <category>resources</category>
      <category>preparation</category>
    </item>
  </channel>
</rss>
