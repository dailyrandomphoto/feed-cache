<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>I prepared a portfolio with Nuxt.JS ...</title>
      <author>AdemCan</author>
      <pubDate>Thu, 13 May 2021 20:59:18 +0000</pubDate>
      <link>https://dev.to/ademcan/i-prepared-a-portfolio-with-nuxt-js-3k07</link>
      <guid>https://dev.to/ademcan/i-prepared-a-portfolio-with-nuxt-js-3k07</guid>
      <description>&lt;p&gt;It may be a little inexperienced but now I'm developing a new portfolio, yes it will be more professional. The same will happen for NuxtJS Vuejs. css famework also using tailwindcss windics sass in new portfolio&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oOsNojes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj4hot0m6gmg5ksbfgo3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oOsNojes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj4hot0m6gmg5ksbfgo3.png" alt="Portfolio"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/AdemCanCertel/website"&gt;Portfolio GitHub Repository&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ademcancertel.tech"&gt;Portfolio Website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>portfolio</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>XState: Why I Love Invoked Callbacks</title>
      <author>Matt Pocock</author>
      <pubDate>Thu, 13 May 2021 20:57:49 +0000</pubDate>
      <link>https://dev.to/mpocock1/xstate-why-i-love-invoked-callbacks-2f6i</link>
      <guid>https://dev.to/mpocock1/xstate-why-i-love-invoked-callbacks-2f6i</guid>
      <description>&lt;p&gt;XState offers several primitives for representing long-running application processes. These are usually expressed as &lt;a href="https://xstate.js.org/docs/guides/communication.html"&gt;services&lt;/a&gt;. I've written a bit about services &lt;a href="https://dev.to/mpocock1/xstate-should-this-be-an-action-or-a-service-2cp0"&gt;here&lt;/a&gt; - but today I wanted to talk about my favourite way of expressing services: the Invoked Callback.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://xstate.js.org/docs/guides/communication.html#invoking-callbacks"&gt;Invoked Callback&lt;/a&gt; combines immense flexibility with good readability and a solid Typescript experience. They look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onReceive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Run any code you like inside here&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Any code inside here will be called when&lt;/span&gt;
        &lt;span class="c1"&gt;// you leave this state, or the machine is stopped&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's break this down. You get access to &lt;code&gt;context&lt;/code&gt; and &lt;code&gt;event&lt;/code&gt;, just like promise-based services. But &lt;code&gt;send&lt;/code&gt; is where things really get interesting. Let's break down what makes &lt;code&gt;send&lt;/code&gt; useful with an example.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#file-uploads"&gt;
  &lt;/a&gt;
  File Uploads
&lt;/h2&gt;

&lt;p&gt;Imagine you need to build a file uploader, and you have a handy function called &lt;code&gt;startUpload&lt;/code&gt; that uploads some data, and exposes an &lt;code&gt;onProgressUpdate&lt;/code&gt; parameter to update the progress.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;progress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;idle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;states&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;idle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;START&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pending&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;pending&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;PROGRESS_UPDATED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;progress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;progress&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;}),&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;CANCEL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;idle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uploader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;startUpload&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;onProgressUpdate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;progress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;PROGRESS_UPDATED&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;progress&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;

          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;uploader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cancel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
          &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This machine starts in the &lt;code&gt;idle&lt;/code&gt; state, but on the &lt;code&gt;START&lt;/code&gt; event begins its invoked service, which uploads the file. It then listens for &lt;code&gt;PROGRESS_UPDATED&lt;/code&gt; events, and updates the context based on its updates.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;CANCEL&lt;/code&gt; event will trigger the &lt;code&gt;uploader.cancel()&lt;/code&gt; function, which gets called when the state is left. React users may recognise this syntax - it's the same as the cleanup function in the &lt;a href="https://reactjs.org/docs/hooks-reference.html#useeffect"&gt;useEffect hook&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note how simple and idiomatic it is to cancel the uploader - just exit the state, and the service gets cleaned up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#event-listeners"&gt;
  &lt;/a&gt;
  Event Listeners
&lt;/h2&gt;

&lt;p&gt;The invoked callback's cleanup function makes it very useful for event listeners, for instance &lt;code&gt;window.addEventListener()&lt;/code&gt;. XState Catalogue's &lt;a href="https://xstate-catalogue.com/machines/tab-focus"&gt;Tab Focus Machine&lt;/a&gt; is a perfect example of this - copied here for ease:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;userIsOnTab&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;states&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;userIsOnTab&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;checkForDocumentBlur&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;REPORT_TAB_BLUR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;userIsNotOnTab&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;userIsNotOnTab&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;checkForDocumentFocus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;REPORT_TAB_FOCUS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;userIsOnTab&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;checkForDocumentBlur&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;REPORT_TAB_BLUR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blur&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blur&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;checkForDocumentFocus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;REPORT_TAB_FOCUS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;focus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;focus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When in the &lt;code&gt;userIsOnTab&lt;/code&gt; state, we listen for the window's &lt;code&gt;blur&lt;/code&gt; event. When that happens, and &lt;code&gt;REPORT_TAB_BLUR&lt;/code&gt; is fired, we clean up the event listener and head right on over to &lt;code&gt;userIsNotOnTab&lt;/code&gt;, where we fire up the other service.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#websockets"&gt;
  &lt;/a&gt;
  Websockets
&lt;/h2&gt;

&lt;p&gt;Invoked callbacks can also receive events via the &lt;code&gt;onReceive&lt;/code&gt; function. This is perfect when you need to communicate to your service, such as sending events to websockets.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;forwardTo&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;xstate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;SEND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;forwardTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;websocket&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;websocket&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onReceive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;websocket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;connectWebsocket&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

      &lt;span class="nx"&gt;onReceive&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SEND&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;websocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;websocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disconnect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to receive events, services need an &lt;code&gt;id&lt;/code&gt;. Not all events are forwarded to the invoked service, only those which we select via the &lt;code&gt;forwardTo&lt;/code&gt; action.&lt;/p&gt;

&lt;p&gt;Here, we can connect to the websocket, establish two-way communication, and clean it up all in a few lines of code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-love-letter"&gt;
  &lt;/a&gt;
  My Love Letter
&lt;/h2&gt;

&lt;p&gt;Invoked callbacks are a concise, flexible method of invoking services in XState. There isn't a case they can't cover - and they're one of my favourite parts of the XState API.&lt;/p&gt;

</description>
      <category>xstate</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Strengths and Weaknesses of Online Bootcamps in 2021</title>
      <author>Anthony</author>
      <pubDate>Thu, 13 May 2021 20:48:43 +0000</pubDate>
      <link>https://dev.to/toymachine/strengths-and-weaknesses-of-online-bootcamps-in-2021-3pi</link>
      <guid>https://dev.to/toymachine/strengths-and-weaknesses-of-online-bootcamps-in-2021-3pi</guid>
      <description>&lt;p&gt;Just like every other teaching method, online education comes with its own set of pros and cons. With the "new normal" dictating increased usage of online tools, a better understanding of these tools helps educational institutions in devising better strategies for their students and students better strategies for learning. &lt;/p&gt;

&lt;p&gt;Let us discuss the various pros and cons of online education in detail, especially as the possibility of returning to in-person colleges, bootcamps, seminars, training sessions, tutors, and other modes of learning starts to open back up in 2021.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-online-learning"&gt;
  &lt;/a&gt;
  Advantages Of Online Learning
&lt;/h2&gt;

&lt;p&gt;With the shifting of dynamics in the post-pandemic era, online education has proved to be a boon for many. The advantages of this learning method are many and can be discussed as follows...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Efficient: In-person learning is limited to the size of the room and how far a teacher's voice will carry. When online one teacher can teach hundreds of people. This brings down costs and removes barriers. &lt;/li&gt;
&lt;li&gt;Asynchronous: In-person learning has to be done on a fixed, inflexible schedule. Online learning can be done in your time around working hours and household responsibilities. The online lectures can also be recorded, shared, and viewed for future reference at a time of their choice by the students.
Innovative: Online education offers teachers an efficient way of delivering lessons by incorporating a range of tools into lesson plans. These include podcasts, videos, online tools, and more. The tools are adapting with the times. &lt;/li&gt;
&lt;li&gt;Accessible: Online education allows students to attend classes irrespective of their location. It also helps the schools in building an extensive network of students without any geographical restrictions. Thus, it offers better accessibility in terms of both time and place.&lt;/li&gt;
&lt;li&gt;Affordable: Online education is also beneficial in terms of reduced financial costs in comparison to physical learning. This is because several cost points get eliminated in the process such as student meals, transportation, and real estate. All the course and study material is also available online thus creating a paperless environment making it all the more affordable for the students.&lt;/li&gt;
&lt;li&gt;Improved attendance: With the liberty of taking classes from any location, online classes have better attendance, leading to fewer students missing out on lectures.&lt;/li&gt;
&lt;li&gt;Universal: With a range of tools available for personalization and customization of online classes, they are suitable for students of all ages and styles.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-online-learning"&gt;
  &lt;/a&gt;
  Disadvantages Of Online Learning
&lt;/h2&gt;

&lt;p&gt;Though online learning platforms have flourished today, there are several disadvantages or weaknesses of this system that should be kept in mind. This helps in devising better teaching and learning strategies for the students and teachers alike.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inability to focus: One of the biggest challenges in the case of the online education system is the inability of the students to focus on the screen for long time periods. This inability also increases the risk of the student getting distracted by social media, &lt;a href="https://helpatmyhome.com/best-non-smart-tv/"&gt;a nearby TV&lt;/a&gt;, or the internet in general. In order to curb this problem, it is important for the teachers to keep the interaction going and keep their classes engaging and crisp.&lt;/li&gt;
&lt;li&gt;Technical issues: Another key weakness of this system is the over-dependence on technology. Though internet penetration has increased by leaps and bounds in the last few years, consistent internet connection is still a big problem in many towns and with some parts of the population for whom &lt;a href="https://55pl.us/affordable-home-internet-for-seniors/"&gt;affordable high-speed internet&lt;/a&gt; is still a challenge.&lt;/li&gt;
&lt;li&gt;Isolation: One of the major aspects of learning is not just the lectures but the peers. The online education model has reduced the physical interactions between teacher and student to a minimal level causing a &lt;a href="https://cyberbullying.org/coronavirus-online-learning-social-isolation-cyberbullying"&gt;sense of isolation among students&lt;/a&gt;. This affects adults just as much as it does children, even it adult students might be less likely to admit it (or even notice it)&lt;/li&gt;
&lt;li&gt;Managing screen time: Increased screen time has become a health hazard. This can also cause bad posture, lack of focus, headaches and several other issues. &lt;a href="https://dev.to/toymachine/secret-weapons-pen-and-paper-1nhb"&gt;Taking paper notes&lt;/a&gt; can help, but the build up of screen time is inevitable.&lt;/li&gt;
&lt;li&gt;Academic Integrity: This is more of an issue with college than with career-focused education, but the lack of classroom tests and in-person assignments means the temptation to look something up or get help on solo assignment is raised when you don't have the standard classroom environment. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;Remember, the online education system might never replace the physical learning system. However, they can be seen as their extension and can be used to complement the learning and understanding process of the students. This will help students in getting the best of all worlds.   &lt;/p&gt;

</description>
      <category>bootcamp</category>
      <category>education</category>
      <category>learning</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Creating a Form with React Hook Form</title>
      <author>Simon Xiong</author>
      <pubDate>Thu, 13 May 2021 20:24:33 +0000</pubDate>
      <link>https://dev.to/simonxcode/creating-a-form-with-react-hook-form-3595</link>
      <guid>https://dev.to/simonxcode/creating-a-form-with-react-hook-form-3595</guid>
      <description>&lt;p&gt;In this tutorial we will build a form with React Hook Form allowing users to create an account. We will also be styling our form with Styled Components. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://react-hook-form.com/"&gt;React Hook Form&lt;/a&gt; is a library for creating forms utilizing concepts from React and HTML. Key features and benefits of React Hook Form includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hooks for reusable state logic&lt;/li&gt;
&lt;li&gt;HTML client-side validations&lt;/li&gt;
&lt;li&gt;minimal rendering(uncontrolled form)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below are the &lt;a href="https://react-hook-form.com/api"&gt;APIs&lt;/a&gt; we will be using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;useForm:&lt;/strong&gt; hook with access to different methods from library&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;register:&lt;/strong&gt; method to register inputs and apply validation rules&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;handleSubmit&lt;/strong&gt;: function that will pass data after validation
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;errors&lt;/strong&gt;: object containing error message corresponding to input field&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;reset&lt;/strong&gt;: method to reset all fields on form &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://styled-components.com/"&gt;Styled Components&lt;/a&gt; is a library for styling UI components. It utilizes template literals for declaring styling directly to a component. Key features and benefits of Styled Components includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ease of maintenance with styling bound to component
&lt;/li&gt;
&lt;li&gt;dynamic styling using props or global themes&lt;/li&gt;
&lt;li&gt;compatible with HTML and CSS naming standards &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below are the &lt;a href="https://styled-components.com/docs/api"&gt;APIs&lt;/a&gt; we will be using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;styled:&lt;/strong&gt; default export for using library&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TaggedTemplateLiteral:&lt;/strong&gt; CSS properties and values passed into styled calls&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;createGlobalStyle:&lt;/strong&gt; function that generates a global styling component&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are links to the &lt;a href="https://github.com/simonxcode/hook-form"&gt;repo&lt;/a&gt; and &lt;a href="https://hook-form.netlify.app/"&gt;live site&lt;/a&gt; to get a better idea on what will be built. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#setting-up-project"&gt;
  &lt;/a&gt;
  Setting Up Project
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;My IDE setup and package manager for this project was VSCode and Yarn. If you are using a different setup your commands will be slightly different. &lt;/p&gt;

&lt;p&gt;This project was built with React Hook Form &lt;em&gt;6.13.0&lt;/em&gt; and Styled Components &lt;em&gt;5.2.1&lt;/em&gt;. Keep this in mind as syntax may be different from other versions. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The quickest way to get started is with &lt;a href="https://github.com/facebook/create-react-app"&gt;Create React App&lt;/a&gt;. This will allow us to work on the project right away without having to install preliminary dependencies and make configurations. On the command line in VSCode navigate to the directory where you would like to have the project stored. Type &lt;code&gt;yarn create react-app "project name"&lt;/code&gt; to initialize the project.&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NEK1DKLk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyp7bmefva3ps2sngsjy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NEK1DKLk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyp7bmefva3ps2sngsjy.png" alt="Command Line"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting Up Component&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We are going to make some minor changes to our files and create a function component that will render a basic form. Below are key highlights along with code snippet and DOM output:  &lt;/p&gt;

&lt;p&gt;Key Highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rename &lt;strong&gt;App.js&lt;/strong&gt; file to &lt;strong&gt;Form.js&lt;/strong&gt; file&lt;/li&gt;
&lt;li&gt;rename &lt;strong&gt;App&lt;/strong&gt; component to &lt;strong&gt;Form&lt;/strong&gt; and have it return a basic form containing

&lt;ul&gt;
&lt;li&gt;title, username, email, password and submit button &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;rename &lt;strong&gt;App&lt;/strong&gt; component to &lt;strong&gt;Form&lt;/strong&gt; component in &lt;strong&gt;index.js&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Code Snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Form.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Almost&lt;/span&gt; &lt;span class="nx"&gt;There&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Create Account&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//index.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Form&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Form&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;DOM Output:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HURnsLnt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3duzu0mw2xrsj5nqk4c8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HURnsLnt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3duzu0mw2xrsj5nqk4c8.png" alt="Basic Form"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#using-react-hook-form"&gt;
  &lt;/a&gt;
  Using React Hook Form
&lt;/h3&gt;

&lt;p&gt;To get started with React Hook Form we will install the library with &lt;code&gt;yarn add react-hook-form&lt;/code&gt;. We then import &lt;code&gt;useForm&lt;/code&gt; Hook into &lt;strong&gt;Form.js&lt;/strong&gt;. Now we can start integrating some of the features from this library into our project. Below are key highlights along with code snippet: &lt;/p&gt;

&lt;p&gt;Key Highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;import and use &lt;code&gt;register&lt;/code&gt;, &lt;code&gt;handleSubmit&lt;/code&gt;, &lt;code&gt;errors&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods&lt;/li&gt;
&lt;li&gt;assign register for each input field to track changes to inputs &lt;/li&gt;
&lt;li&gt;setup validation rules and error handling within input fields&lt;/li&gt;
&lt;li&gt;declare &lt;code&gt;onSubmit&lt;/code&gt; event listener that will log data to console&lt;/li&gt;
&lt;li&gt;reset all data after form is submitted&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Code Snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Form.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useForm&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-hook-form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reset&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useForm&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Almost&lt;/span&gt; &lt;span class="nx"&gt;There&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
              &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;a-z&lt;/span&gt;&lt;span class="se"&gt;][&lt;/span&gt;&lt;span class="sr"&gt;a-z0-9&lt;/span&gt;&lt;span class="se"&gt;]{3,14}&lt;/span&gt;&lt;span class="sr"&gt;$/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Username must be 5 - 15 characters long, must start with a letter, only alphanumeric characters allowed, only lowercase letters allowed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;})}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;em&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/em&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
              &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;A-Z0-9._%+-&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+@&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;A-Z0-9.-&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;\.[&lt;/span&gt;&lt;span class="sr"&gt;A-Z&lt;/span&gt;&lt;span class="se"&gt;]{1,64}&lt;/span&gt;&lt;span class="sr"&gt;$/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Please enter a valid email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;})}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;em&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/em&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
              &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;(?=&lt;/span&gt;&lt;span class="sr"&gt;.*&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;a-z&lt;/span&gt;&lt;span class="se"&gt;])(?=&lt;/span&gt;&lt;span class="sr"&gt;.*&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;A-Z&lt;/span&gt;&lt;span class="se"&gt;])(?=&lt;/span&gt;&lt;span class="sr"&gt;.*&lt;/span&gt;&lt;span class="se"&gt;\d)(?=&lt;/span&gt;&lt;span class="sr"&gt;.*&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;@$!%*?&amp;amp;&lt;/span&gt;&lt;span class="se"&gt;])[&lt;/span&gt;&lt;span class="sr"&gt;A-Za-z&lt;/span&gt;&lt;span class="se"&gt;\d&lt;/span&gt;&lt;span class="sr"&gt;@$!%*?&amp;amp;&lt;/span&gt;&lt;span class="se"&gt;]{8,15}&lt;/span&gt;&lt;span class="sr"&gt;$/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Password must be 8 - 15 characters long, must contain one UPPERCASE letter, must contain one lowercase letter, must contain one number, must contain one special character: @$! % * ? &amp;amp;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;})}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;em&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/em&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Create Account&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Testing the Form&lt;/strong&gt;&lt;br&gt;
Now we will test the form to make sure the following functionalities are working properly: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;error handling for empty fields&lt;/li&gt;
&lt;li&gt;error handling for invalid fields&lt;/li&gt;
&lt;li&gt;data logging after validation
&lt;/li&gt;
&lt;li&gt;reset of all fields after validation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dom Output:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;error handling for empty fields&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3imEnyrr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okq2mcw6lftnj2094rsl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3imEnyrr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okq2mcw6lftnj2094rsl.png" alt="Empty Field Error Message"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;error handling for invalid fields&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WXPUvivX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1hg9swkgxpwk3sqw0fn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WXPUvivX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1hg9swkgxpwk3sqw0fn.png" alt="Invalid Field Error Message"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;data logging to Console&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aPHq4BjY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jfg6r9fazsjcn7qnnpxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aPHq4BjY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jfg6r9fazsjcn7qnnpxc.png" alt="Data Logging to Console"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;reset of all fields after validation&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RiYep8R4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a7u56jubrl2dhc6n8ctr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RiYep8R4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a7u56jubrl2dhc6n8ctr.png" alt="Form Reset"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#using-styled-component"&gt;
  &lt;/a&gt;
  Using Styled Component
&lt;/h3&gt;

&lt;p&gt;To get started with Styled Component we will install the Styled Component library with &lt;code&gt;yarn add styled-components&lt;/code&gt;. We then import &lt;code&gt;styled&lt;/code&gt; method into &lt;strong&gt;Form.js&lt;/strong&gt;. As noted in the &lt;a href="https://styled-components.com/docs/basics#installation"&gt;documentation&lt;/a&gt;, if using Yarn, it is recommended to include a resolution field in &lt;strong&gt;package.json&lt;/strong&gt;. This will help prevent issues that may result from having multiple versions installed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//package.json&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resolution&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;^5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Below are key highlights along with code snippet and DOM output for styling the &lt;strong&gt;Title&lt;/strong&gt; of the form. The same work flow can be applied to all other elements. &lt;/p&gt;

&lt;p&gt;Key Highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;declare a &lt;strong&gt;Title&lt;/strong&gt; container and assign it to the styled method&lt;/li&gt;
&lt;li&gt;attach &lt;strong&gt;h1&lt;/strong&gt; to styled method to define the element type&lt;/li&gt;
&lt;li&gt;define the CSS properties values within template literal &lt;/li&gt;
&lt;li&gt;In the return statement replace h1 tag with &lt;strong&gt;Title&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Code Snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Form.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="s2"&gt;`
  color: #00805b;
  font-size: 3rem;
  letter-spacing: 0.0625rem;
  margin-bottom: 0rem;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt; 
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Almost&lt;/span&gt; &lt;span class="nx"&gt;There&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Title&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;DOM Output:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VHJ-hmqM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iamrmhpccpiiwjgpbpjv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VHJ-hmqM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iamrmhpccpiiwjgpbpjv.png" alt="Styled Title"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#styling-font"&gt;
  &lt;/a&gt;
  Styling Font
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;This step is optional and is not required if you are planing to use default &lt;a href="https://www.w3schools.com/cssref/css_websafe_fonts.asp"&gt;Web Safe Fonts&lt;/a&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Styling the fonts for this project was a little tricky because I wanted to use the &lt;em&gt;Roboto&lt;/em&gt; from &lt;a href="https://fonts.google.com/"&gt;Google Fonts&lt;/a&gt;. From Styled Component's &lt;a href="https://styled-components.com/docs/faqs#note-regarding-css-import-and-createglobalstyle"&gt;documentation&lt;/a&gt; it was not recommended to use &lt;code&gt;@import&lt;/code&gt; CSS Rule with version(5.2.1). The work around was to install &lt;a href="https://github.com/nfl/react-helmet"&gt;React Helmet&lt;/a&gt; in order to reference the url to in a Link tag. &lt;br&gt;
Here are key highlights along with code snippet and DOM output:&lt;/p&gt;

&lt;p&gt;Key Highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;install React Helmet library and import into &lt;strong&gt;Form.js&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;reference Google Font urls in Link tags&lt;/li&gt;
&lt;li&gt;import createGlobalStyle method from Styled Component library&lt;/li&gt;
&lt;li&gt;declare &lt;code&gt;GlobalStyle&lt;/code&gt; container with font family property and values&lt;/li&gt;
&lt;li&gt;import self-enclosed &lt;code&gt;GlobalStyle&lt;/code&gt; element into &lt;strong&gt;Form&lt;/strong&gt; return statement &lt;/li&gt;
&lt;li&gt;make changes to font weight in the &lt;strong&gt;Title&lt;/strong&gt; container&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Code Snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Helmet&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-helmet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createGlobalStyle&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GlobalStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createGlobalStyle&lt;/span&gt;&lt;span class="s2"&gt;`
  body {
    font-family: 'Roboto', sans-serif;
  };
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="s2"&gt;`
  color: #00805b;
  font-size: 3rem;
  font-weight: 500
  letter-spacing: 0.0625rem;
  margin-bottom: 0rem;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;GlobalStyle&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Helmet&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;preconnect&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://fonts.gstatic.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;
          &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;500&amp;amp;display=swap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stylesheet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Helmet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Almost&lt;/span&gt; &lt;span class="nx"&gt;There&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Title&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;DOM Output:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--754pNUQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xe1xy1ozpr3d9vn59uib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--754pNUQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xe1xy1ozpr3d9vn59uib.png" alt="Styled With Google Font"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#final-touches"&gt;
  &lt;/a&gt;
  Final Touches
&lt;/h3&gt;

&lt;p&gt;To make sure that our form renders consistently across multiple browsers we will use &lt;a href="https://github.com/necolas/normalize.css/"&gt;Normalize.CSS&lt;/a&gt;. This library will preserve user defaults styling and help maintain cross browser consistency. Install the library with &lt;code&gt;yarn add Normalize.CSS&lt;/code&gt; and import it into &lt;strong&gt;Form.js.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Form.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;normalize.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Final Testing&lt;/strong&gt; &lt;br&gt;
Now that our form application is complete we are going to perform the same test from &lt;strong&gt;Testing the Form&lt;/strong&gt;. The purpose of performing the test again is to verify that layout and UI components are functioning and rendering correctly after styling. Here was the list of requirements for testing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;error handling for empty fields&lt;/li&gt;
&lt;li&gt;error handling for invalid fields&lt;/li&gt;
&lt;li&gt;data logging after validation
&lt;/li&gt;
&lt;li&gt;reset of all fields after validation &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dom Output:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;error handling for empty fields&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vfd-Nxhp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/koc209wdtlmqtuirmv73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vfd-Nxhp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/koc209wdtlmqtuirmv73.png" alt="Empty Field Error Message"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;error handling for invalid fields&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d_i6ZwUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olgztq1296y1pjv79u76.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d_i6ZwUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olgztq1296y1pjv79u76.png" alt="Invalid Field Error Message"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;data logging to Console&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tur9VADQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2itcg7k864f4wxwbkuwr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tur9VADQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2itcg7k864f4wxwbkuwr.png" alt="Data Logging to Console"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;reset of all fields after validation&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R2U5CHoW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkbcr3940msm2gndmc96.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R2U5CHoW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkbcr3940msm2gndmc96.png" alt="Form Reset"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps:
&lt;/h3&gt;

&lt;p&gt;Forms are the most common and effective tools for collecting data from users. This form can be integrated into any website or full stack application. For best practice in development lifecycle, I am planning to write either an integration or unit test for this project. Stay Tuned! 🙌&lt;/p&gt;

</description>
      <category>reacthookform</category>
      <category>formvalidations</category>
      <category>styledcomponents</category>
    </item>
    <item>
      <title>How to Speed Up Load Times In A Rails App - What I Wish I Knew Four Months Ago </title>
      <author>nicklevenson</author>
      <pubDate>Thu, 13 May 2021 19:55:33 +0000</pubDate>
      <link>https://dev.to/nicklevenson/how-to-speed-up-load-times-in-a-rails-app-what-i-wish-i-knew-four-months-ago-28g0</link>
      <guid>https://dev.to/nicklevenson/how-to-speed-up-load-times-in-a-rails-app-what-i-wish-i-knew-four-months-ago-28g0</guid>
      <description>&lt;p&gt;Not too long ago I was introduced to Ruby on Rails through my time as a Flatiron student. To those familiar with the Ruby framework, Rails makes creating complex MVC web applications very simple. It wasn't long before I started developing fairly complicated apps with Rails. However, after gaining a fair amount of users on my Heroku hosted app &lt;a href="https://memix.herokuapp.com/"&gt;MeMix&lt;/a&gt;, I ran into some big problems. My application kept crashing. It hadn't been crashing before, and after some diagnostics with the &lt;a href="https://one.newrelic.com/"&gt;New Relic&lt;/a&gt; analytics tool, the problem became clear - slow database loading times. Heroku will automatically crash you app if your load time takes more than 30 seconds. I clearly had a big problem with my database queries, something that is referred to as N+1 queries. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Problem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A big cog in the Rails machine is something called Active Record. Let's say we had two models that are associated with each other: (I actually made a &lt;a href="https://github.com/nicklevenson/includes-blog"&gt;Github repo&lt;/a&gt; with this sample so you can easily try it yourself)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class User &amp;lt; ActiveRecord::Base
  has_many :posts
end

class Post &amp;lt; ActiveRecord::Base
  belongs_to :user
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With Active Record, a typical and easy way to access a list of a user's posts, and what I learned at bootcamp, would be to write &lt;code&gt;User.posts&lt;/code&gt;. But what if we want to iterate over a list of Users and then iterate over each user's posts? We could write something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;User.all.each do |user|
  user.posts.each do |post|
    puts post.content
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will work just fine. However for each user we are querying the database for their posts. Which means our query complexity has become N+1. N being the number of users, since for each user we make a request to the database for its associated posts, and plus one query for getting all users. &lt;/p&gt;

&lt;p&gt;This is totally fine if you have a small database. However, once your database grows, and if you have complicated associations, it will start to slow down. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Solution&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guides.rubyonrails.org/active_record_querying.html#eager-loading-multiple-associations"&gt;ActiveRecord has a method&lt;/a&gt; called includes. Basically it allows you to load a model's associations in a single query. So in our example before, you would write:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;User.includes(:posts).all.each do |user|
  user.posts.each do |post|
    post.content
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's the difference between the queries when looking at the database output in the console:&lt;/p&gt;

&lt;p&gt;Bad Query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;User.bad_query
  User Load (0.2ms)  SELECT "users".* FROM "users"
  Post Load (0.1ms)  SELECT "posts".* FROM "posts" WHERE "posts"."user_id" = ?  [["user_id", 1]]
hello
  Post Load (0.1ms)  SELECT "posts".* FROM "posts" WHERE "posts"."user_id" = ?  [["user_id", 2]]
hello
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good Query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;User.good_query
  User Load (0.2ms)  SELECT "users".* FROM "users"
  Post Load (0.2ms)  SELECT "posts".* FROM "posts" WHERE "posts"."user_id" IN (?, ?)  [[nil, 1], [nil, 2]]
hello
hello
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Can you spot the extra db call in the bad query? This is just with two users, but its easy to imagine a complicated db structure causing major speed issues. The cool thing about includes is that you can chain on as many associations as you want - &lt;code&gt;User.includes(:posts, :followers, :likes).all&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Sometimes, however, using this handy active record method could slow down your app if the database query is very complicated (e.g. nested associations, many-to-many, etc). It can be hard to know when it is more efficient to use it. However, there is a gem called &lt;a href="https://github.com/flyerhzm/bullet"&gt;Bullet&lt;/a&gt; that is designed to help with this exact issue. It will tell you when your query chains are inefficient and what to do about it. &lt;/p&gt;

&lt;p&gt;After implementing this technique on my slow Rails app, the average load time went down from 10-15 seconds to 2-3 seconds. So if you're experiencing slow load times, please consider checking your query methods, and look for N+1 queries. I wish I knew this when I built my first Rails app.  &lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>database</category>
      <category>activerecord</category>
    </item>
    <item>
      <title>Work Smarter, Not Harder With ReacType</title>
      <author>Kevin Park</author>
      <pubDate>Thu, 13 May 2021 19:49:07 +0000</pubDate>
      <link>https://dev.to/xkevinpark/work-smarter-not-harder-with-reactype-49mg</link>
      <guid>https://dev.to/xkevinpark/work-smarter-not-harder-with-reactype-49mg</guid>
      <description>&lt;h1&gt;
  &lt;a href="#excited-to-announce-the-launch-of-reactype"&gt;
  &lt;/a&gt;
  Excited to announce the launch of ReacType!
&lt;/h1&gt;

&lt;p&gt;This morning, my team released ReacType 7.0, a rapid prototyping tool that enables developers to build React components via an intuitive drag-and-drop canvas, apply CSS styles, and generate custom boilerplates.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="https://xkevinpark.medium.com/work-smarter-not-harder-to-create-a-react-app-with-reactype-94dd60be5873" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lsD7VqJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/fit/c/56/56/1%2A90I88K-dmoUsyf4TQ8E-nA.jpeg" alt="Kevin Park"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://xkevinpark.medium.com/work-smarter-not-harder-to-create-a-react-app-with-reactype-94dd60be5873" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Work Smarter, Not Harder To Create A React App With ReacType | by Kevin Park | May, 2021 | Medium&lt;/h2&gt;
      &lt;h3&gt;Kevin Park ・ &lt;time&gt;May 13, 2021&lt;/time&gt; ・ 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ze5yh_2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium_icon-90d5232a5da2369849f285fa499c8005e750a788fdbf34f5844d5f2201aae736.svg" alt="Medium Logo"&gt;
        xkevinpark.Medium
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
Cheers!

&lt;p&gt;&lt;strong&gt;HOW DOES IT WORK?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build React components via drag-and-drop interface&lt;/li&gt;
&lt;li&gt;Generate code dynamically in a real-time code preview&lt;/li&gt;
&lt;li&gt;Design collaboratively via built-in annotations&lt;/li&gt;
&lt;li&gt;Save &amp;amp; share templates&lt;/li&gt;
&lt;li&gt;Pass props and manage state in table view&lt;/li&gt;
&lt;li&gt;Customize styles via CSS editor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;WHY REACTYPE?&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Eases learning curve for developers new to React frameworks&lt;/li&gt;
&lt;li&gt;Accelerates development while maintaining product vision&lt;/li&gt;
&lt;li&gt;Streamlines communication between developers and designers&lt;/li&gt;
&lt;/ol&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/open-source-labs"&gt;
        open-source-labs
      &lt;/a&gt; / &lt;a href="https://github.com/open-source-labs/ReacType"&gt;
        ReacType
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🧪 Prototyping Tool for exporting React/Typescript Applications!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/331b486f2bf536524639521506ae8de9b5c26ec3cb57979f6f940d4b5a1b6a1d/68747470733a2f2f692e696d6775722e636f6d2f596e37307471492e706e67"&gt;&lt;img width="50" src="https://camo.githubusercontent.com/331b486f2bf536524639521506ae8de9b5c26ec3cb57979f6f940d4b5a1b6a1d/68747470733a2f2f692e696d6775722e636f6d2f596e37307471492e706e67"&gt;&lt;/a&gt;
  &lt;/p&gt;

&lt;h1&gt;
ReacType &lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/team-reactype/ReacType/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/b0ad703a46e8b249ef2a969ab95b2cb361a2866ecb8fe18495a2229f5847102d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667" alt="PRs Welcome"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5fab2edf3816ef9fb3ebcaf6e613fa7b40ff7652ec69e5f6e7f695aa24bf5ce6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/5fab2edf3816ef9fb3ebcaf6e613fa7b40ff7652ec69e5f6e7f695aa24bf5ce6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667" alt="License: MIT"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1a264f94a05d257e45805d5ab7650c122c930003e11e06eccf9607a6008a2eae/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52656c656173652d372e302e302d6c69676874677265792e737667"&gt;&lt;img src="https://camo.githubusercontent.com/1a264f94a05d257e45805d5ab7650c122c930003e11e06eccf9607a6008a2eae/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52656c656173652d372e302e302d6c69676874677265792e737667" alt="Version 7.0.0"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReacType&lt;/strong&gt; is a rapid prototyping tool for developers employing &lt;strong&gt;React&lt;/strong&gt; component architecture alongside the comprehensive type-checking of &lt;strong&gt;TypeScript&lt;/strong&gt;
In other words, &lt;strong&gt;you can draw prototypes and export React / TypeScript code!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReacType&lt;/strong&gt; allows users to &lt;em&gt;visualize&lt;/em&gt; their application architecture dynamically, employing a &lt;em&gt;drag-and-drop canvas display&lt;/em&gt; , a &lt;em&gt;real-time demo render&lt;/em&gt; , a &lt;em&gt;real-time component code preview&lt;/em&gt;. Users can create components and drag &lt;em&gt;instances&lt;/em&gt; of these components, as well as HTML elements, onto the canvas. This architecture can then be &lt;em&gt;exported&lt;/em&gt; as TypeScript application files to be used as a starter template for any repository.&lt;/p&gt;

&lt;p&gt;Download for &lt;a href="https://github.com/team-reactype/ReacType/releases"&gt;MacOS&lt;/a&gt;, &lt;a href="https://github.com/team-reactype/ReacType/releases/"&gt;Windows&lt;/a&gt;, &lt;a href="https://github.com/team-reactype/ReacType/releases/"&gt;Linux&lt;/a&gt;.&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;Mac users&lt;/strong&gt;: After opening the dmg and dragging ReacType into your Applications folder, ctrl+click the icon and select 'Open' from the context menu to run the app. This extra step is necessary since we don't have an Apple developer license yet.&lt;/p&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;Windows users&lt;/strong&gt;…&lt;/p&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/open-source-labs/ReacType"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Cheers!

</description>
      <category>react</category>
      <category>typescript</category>
      <category>javascript</category>
    </item>
    <item>
      <title>The Android Photos Forensics App: XFace</title>
      <author>Jagar</author>
      <pubDate>Thu, 13 May 2021 19:45:04 +0000</pubDate>
      <link>https://dev.to/jagaryousef/the-android-photos-forensics-app-xface-4f1n</link>
      <guid>https://dev.to/jagaryousef/the-android-photos-forensics-app-xface-4f1n</guid>
      <description>&lt;p&gt;In my first post, I wanted to show you my new app that I have developed fully including backend server configuration and APIs. &lt;/p&gt;

&lt;p&gt;It is called &lt;code&gt;XFace: Photo forensics&lt;/code&gt; and my goal was to have a handy app that will try to detect Photoshop (or other photo manipulating apps) in any photograph using 4 different ways to do so.&lt;/p&gt;

&lt;p&gt;All that should be done in one click so you can get details that could help you if you are a professional DFIR or only a curious person that wants to do some surprise for your friends.&lt;/p&gt;

&lt;p&gt;In all cases, it will be a great opportunity for me if I got some reviews from you on it: &lt;a href="https://play.google.com/store/apps/details?id=me.jagar.xface"&gt;https://play.google.com/store/apps/details?id=me.jagar.xface&lt;/a&gt;&lt;/p&gt;

</description>
      <category>android</category>
      <category>kotlin</category>
      <category>programming</category>
      <category>deeplearning</category>
    </item>
    <item>
      <title>Vulnerability allows cross-browser tracking in Chrome, Firefox, Safari, and Tor</title>
      <author>Savannah Copland 👋</author>
      <pubDate>Thu, 13 May 2021 19:28:40 +0000</pubDate>
      <link>https://dev.to/savannahjs/vulnerability-allows-cross-browser-tracking-in-chrome-firefox-safari-and-tor-39ma</link>
      <guid>https://dev.to/savannahjs/vulnerability-allows-cross-browser-tracking-in-chrome-firefox-safari-and-tor-39ma</guid>
      <description>&lt;p&gt;&lt;em&gt;In this article we introduce a scheme flooding vulnerability, explain how the exploit works across four major desktop browsers and show why it's a threat to anonymous browsing.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zsUm93b9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwtcjvswhog1dql4fxoi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zsUm93b9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwtcjvswhog1dql4fxoi.png" alt="Exploiting custom protocol handlers for cross-browser tracking in Tor, Safari, Chrome and Firefox" title="Scheme flood vulnerability overview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DISCLAIMER:&lt;/strong&gt; FingerprintJS does not use this vulnerability in our products and does not provide third-party tracking services. We focus on stopping fraud and support modern privacy trends for removing third-party tracking entirely. We believe that vulnerabilities like this one should be discussed in the open to help browsers fix them as quickly as possible. To help fix it, we have submitted bug reports to all affected browsers, created a live demo and have made a &lt;a href="https://github.com/fingerprintjs/external-protocol-flooding" rel="noopener"&gt;public source code repository&lt;/a&gt; available to all.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-the-vulnerability-on-our-live-demo-site-works-on-desktop-browsers-only"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Test the vulnerability on our &lt;a href="https://schemeflood.com/" rel="noopener"&gt;live demo site&lt;/a&gt;. Works on desktop browsers only.&lt;/strong&gt;
&lt;/h3&gt;



&lt;p&gt;In our research into anti-fraud techniques, we have discovered a vulnerability that allows websites to identify users reliably across different desktop browsers and link their identities together. The desktop versions of Tor Browser, Safari, Chrome, and Firefox are all affected.&lt;/p&gt;

&lt;p&gt;We will be referring to this vulnerability as scheme flooding, as it uses custom URL schemes as an attack vector. The vulnerability uses information about installed apps on your computer in order to assign you a permanent unique identifier even if you switch browsers, use incognito mode, or use a VPN.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-does-this-matter%C2%A0"&gt;
  &lt;/a&gt;
  Why does this matter? 
&lt;/h2&gt;

&lt;p&gt;The scheme flooding vulnerability allows for third party tracking across different browsers and thus is a violation of privacy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-crossbrowser-anonymity"&gt;
  &lt;/a&gt;
  No cross-browser anonymity
&lt;/h3&gt;

&lt;p&gt;Cross-browser anonymity is something that even a privacy conscious internet user may take for granted. Tor Browser is known to offer the ultimate in privacy protection, though due to its slow connection speed and performance issues on some websites, users may rely on less anonymous browsers for their every day surfing. They may use Safari, Firefox or Chrome for some sites, and Tor for sites where they want to stay anonymous. A website exploiting the scheme flooding vulnerability could create a stable and unique identifier that can link those browsing identities together.&lt;/p&gt;

&lt;p&gt;Even if you are not a Tor Browser user, all major browsers are affected. It’s possible to link your Safari visit to your Chrome visit, identify you uniquely and track you across the web.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#profiling-based-on-installed-apps"&gt;
  &lt;/a&gt;
  Profiling based on installed apps
&lt;/h3&gt;

&lt;p&gt;Additionally, the scheme flood vulnerability allows for targeted advertisement and user profiling without user consent. The list of installed applications on your device can reveal a lot about your occupation, habits, and age. For example, if a Python IDE or a PostgreSQL server is installed on your computer, you are very likely to be a backend developer. &lt;/p&gt;

&lt;p&gt;Depending on the apps installed on a device, it may be possible for a website to identify individuals for more sinister purposes. For example, a site may be able to detect a government or military official on the internet based on their installed apps and associate browsing history that is intended to be anonymous.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unknown-impact-on-the-web"&gt;
  &lt;/a&gt;
  Unknown impact on the web
&lt;/h3&gt;

&lt;p&gt;This vulnerability has been possible for more than 5 years and its true impact is unknown. In a quick search of the web, we couldn’t find any website actively exploiting it but we still felt the need to report it as soon as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-it-work-technical-overview"&gt;
  &lt;/a&gt;
  How does it work? (technical overview)
&lt;/h2&gt;

&lt;p&gt;Note: You may skip this section if you are not interested in the technical implementation details. The source code of the &lt;a href="https://schemeflood.com/" rel="noopener"&gt;demo&lt;/a&gt; application is available on &lt;a href="https://github.com/fingerprintjs/external-protocol-flooding" rel="noopener"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The scheme flooding vulnerability allows an attacker to determine which applications you have installed. In order to generate a 32-bit cross-browser device identifier, a website can test a list of 32 popular applications and check if each is installed or not. On average, the identification process takes a few seconds and works across desktop Windows, Mac and Linux operating systems. &lt;/p&gt;

&lt;p&gt;To check if an application is installed, browsers can use built-in custom URL scheme handlers. You can see this feature in action by entering skype:// in your browser address bar. If you have Skype installed, your browser will open a confirmation dialog that asks if you want to launch it. This feature is also known as deep linking and is widely used on mobile devices, but is available within desktop browsers as well. Any application that you install can register its own scheme to allow other apps to open it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LSGi9L5X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71z0lr0okuvq7avl74ee.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LSGi9L5X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71z0lr0okuvq7avl74ee.png" alt="An example of a custom URL scheme handler for Zoom" title="Scheme handler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to detect if an application is installed, we can test an application's custom URL scheme and then check if a popup has been shown. &lt;/p&gt;

&lt;p&gt;To make this vulnerability possible, the following steps are required:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Prepare a list of application URL schemes that you want to test. The list may depend on your goals, for example, if you want to check if some industry or interest-specific applications are installed.&lt;/li&gt;
&lt;li&gt;Add a script on a website that will test each application from your list. The script will return an ordered array of boolean values. Each boolean value is true if the application is installed or false if it is not.&lt;/li&gt;
&lt;li&gt;Use this array to generate a permanent cross-browser identifier. &lt;/li&gt;
&lt;li&gt;Optionally, use machine learning algorithms to guess your website visitors’ occupation, interests, and age using installed application data.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The steps above may sound easy, but most browsers have safety mechanisms in place designed to prevent such exploits. Weaknesses in these safety mechanisms are what makes this vulnerability possible. A combination of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS" rel="noopener"&gt;CORS policies&lt;/a&gt; and browser window features can be used to bypass it.&lt;/p&gt;

&lt;p&gt;The actual implementation of the exploit varies by browser, however the basic concept is the same. It works by asking the browser to show a confirmation dialog in a popup window. Then the JavaScript code can detect if a popup has just been opened and detect the presence of an application based on that.&lt;/p&gt;

&lt;p&gt;Let’s walk through some of the browser differences.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chrome"&gt;
  &lt;/a&gt;
  Chrome
&lt;/h3&gt;

&lt;p&gt;Of the four major browsers impacted, only Chrome developers appear to be aware of the scheme flooding vulnerability. The issue has been discussed on the &lt;a href="https://bugs.chromium.org/p/chromium/issues/detail?id=1096610" rel="noopener"&gt;Chromium bug-tracker&lt;/a&gt; and is planned to be fixed soon.&lt;/p&gt;

&lt;p&gt;Additionally, only the Chrome browser had any form of scheme flood protection which presented a challenge to bypass. It prevents launching any application unless requested by a user gesture, like a mouse click. There is a global flag that allows (or denies) websites to open applications, which is set to false after handling a custom URL scheme.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n910VFqi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j62wlimstn1mutp7t8ji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n910VFqi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j62wlimstn1mutp7t8ji.png" alt="An example of how the Chrome browser protects against scheme flooding by requiring a user gesture" title="Scheme flood protection in Chrome"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, you can use Chrome extensions to reset this flag and bypass the scheme flood protection. By &lt;a href="https://chromium.googlesource.com/chromium/src/+/refs/heads/main/chrome/browser/external_protocol/external_protocol_handler.h#125" rel="noopener"&gt;specification&lt;/a&gt;, extensions need to be able to open custom URLs, such as mailto: links, without confirmation dialogs. The scheme flood protection conflicts with extension policies so there is a loophole that resets this flag every time any extension is triggered.&lt;/p&gt;

&lt;p&gt;The built-in Chrome PDF Viewer is an extension, so every time your browser opens a PDF file it resets the scheme flood protection flag. Opening a PDF file before opening a custom URL makes the exploit functional.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#firefox"&gt;
  &lt;/a&gt;
  Firefox
&lt;/h3&gt;

&lt;p&gt;Every time you navigate to an unknown URL scheme, Firefox will show you an internal page with an error. This internal page has a different origin than any other website, so it is impossible to access it because of the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy" rel="noopener"&gt;Same-origin policy&lt;/a&gt; limitation. On the other hand, a known custom URL scheme will be opened as about:blank, whose origin will be accessible from the current website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--24qRFEN8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcp793rhx0oi1t8vvsyr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--24qRFEN8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcp793rhx0oi1t8vvsyr.png" alt="An example of how you can check if an application is installed based on the origin URL" title="URL scheme examples"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By opening a popup window with a custom URL scheme and checking if its document is available from JavaScript code, you can detect if the application is installed on the device.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#safari"&gt;
  &lt;/a&gt;
  Safari
&lt;/h3&gt;

&lt;p&gt;Despite privacy being a main development focus for the Safari browser, it turned out to be the easiest browser of the four to exploit. Safari doesn’t have scheme flood protection and allows to easily enumerate all installed applications.&lt;/p&gt;

&lt;p&gt;The same-origin policy trick as used for the Firefox browser was used here as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tor-browser"&gt;
  &lt;/a&gt;
  Tor Browser
&lt;/h3&gt;

&lt;p&gt;Tor Browser has confirmation dialogs disabled entirely as a privacy feature, which, ironically, exposed a more damaging vulnerability for this particular exploit. Nothing is shown while the exploit runs in the background, contrasting with other browsers that show pop-ups during the process. This oversight allows the exploit to check through installed applications without users even realizing it.&lt;/p&gt;

&lt;p&gt;Tor Browser is based on the Firefox source code, so the Same-origin policy trick was used here as well. But because Tor Browser does not show pop-ups, we used the same-origin policy trick with iframe elements instead.&lt;/p&gt;

&lt;p&gt;By creating an iframe element with a custom URL scheme and checking if its document is available you can check if the application is installed or not.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tJh5ibkB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8iex3eoikf53jf2yz4y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tJh5ibkB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8iex3eoikf53jf2yz4y.png" alt="An example of how you can use an iframe element to check if an application is installed" title="iframe element with custom URL scheme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of the four browsers, the scheme flooding vulnerability takes the longest to successfully run in Tor.  It can take up to 10 seconds for each application to be checked due to Tor Browser policies. Still, the exploit can be made to work in the background and track you over a longer browsing session. If you left a Tor Browser window on a web page only for 4 minutes, it could be enough to expose your identity.&lt;/p&gt;

&lt;p&gt;It’s possible to remove the 10-second limitation by running each application test inside a user-triggered gesture. A fake captcha is an ideal candidate: 24 characters entered by a user makes it possible to reset that 10-second limitation 24 times in a row and enumerate 24 installed applications instantaneously.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The exact steps to make the scheme flooding vulnerability possible may vary by browser, but the end result is the same. Getting a unique array of bits associated with a visitor’s identity is not only possible, but can be used on malicious websites in practice. Even Tor Browser can be effectively exploited by tricking a user into typing one character per application we want to test.&lt;/p&gt;

&lt;p&gt;Until this vulnerability is fixed, the only way to have private browsing sessions not associated with your primary device is to use another device altogether. &lt;/p&gt;

&lt;p&gt;By submitting these bug reports, writing this article and building our demo application, we hope that this vulnerability is fixed across all browsers as soon as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://schemeflood.com/" rel="noopener"&gt;Demo&lt;/a&gt; (works only on desktop)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fingerprintjs/external-protocol-flooding" rel="noopener"&gt;Repository with all sources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugs.webkit.org/show_bug.cgi?id=225769" rel="noopener"&gt;Bug report for Safari&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugs.chromium.org/p/chromium/issues/detail?id=1096610" rel="noopener"&gt;Bug report for Chrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1711084" rel="noopener"&gt;Bug report for Firefox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you enjoyed reading this article, consider joining our fully remote team to work on exciting research in online security: &lt;a href="//mailto:work@fingerprintjs.com"&gt;work@fingerprintjs.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>privacy</category>
      <category>javascript</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How do I disable GoLang's auto-formatting on file save in VSCode?</title>
      <author>Calin Baenen</author>
      <pubDate>Thu, 13 May 2021 19:19:40 +0000</pubDate>
      <link>https://dev.to/baenencalin/how-do-i-disable-the-golang-s-auto-formatting-on-file-save-in-vscode-1nh</link>
      <guid>https://dev.to/baenencalin/how-do-i-disable-the-golang-s-auto-formatting-on-file-save-in-vscode-1nh</guid>
      <description>&lt;p&gt;I'm new to Go, and trying to make something using it, however, each time I press the save button (or use the shortcut &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;S&lt;/code&gt;) (so basically, whenever I save the file &lt;b&gt;MANUALLY&lt;/b&gt;).&lt;/p&gt;

&lt;p&gt;Though, the strange thing is, I have autosave turned on in VSCode, and the file will save after like a second or two, and whenever VSC saves the file, it doesn't get formatted (contrast to when I try to save it myself (as I've just stated)).&lt;br&gt;
There are the GoLang related settings in VSCode's &lt;code&gt;settings.json&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"go.lintOnSave"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"off"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"[go]"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.formatOnSave"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.defaultFormatter"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"go.languageServerExperimentalFeatures"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"format"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Property&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"format"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;allowed.&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Can someone please tell me what I'm doing wrong? I looked at &lt;a href="https://github.com/microsoft/vscode-go/issues/2902"&gt;this&lt;/a&gt; and even looked at what Go themselves had to say on their &lt;a href="https://code.visualstudio.com/docs/languages/go#_formatting"&gt;VSCode extension page&lt;/a&gt;, but neither of these are helping.&lt;/p&gt;

&lt;p&gt;Thanks a lot in advance!&lt;br&gt;
Cheers!&lt;/p&gt;

</description>
      <category>go</category>
      <category>beginners</category>
      <category>vscode</category>
      <category>help</category>
    </item>
    <item>
      <title>The Best Way To Learn JavaScript – 100Days of JavaScript</title>
      <author>Ewomazino Akpareva</author>
      <pubDate>Thu, 13 May 2021 19:01:36 +0000</pubDate>
      <link>https://dev.to/zinotrust/the-best-way-to-learn-javascript-100days-of-javascript-54c9</link>
      <guid>https://dev.to/zinotrust/the-best-way-to-learn-javascript-100days-of-javascript-54c9</guid>
      <description>&lt;p&gt;Hello, my name is zino and I am a web developer.&lt;br&gt;
I started learning JavaScript a few years back and at first, I didn’t like the language. It seemed like there was too much theory to understand before one could really understand JavaScript enough to build decent projects.&lt;br&gt;
So, I got discouraged and left it.&lt;br&gt;
But a few months later, I heard someone say that the best way to learn JavaScript is to first learn the fundamentals and then, start building projects.&lt;br&gt;
I decided to try this approach to learning JavaScript.&lt;br&gt;
Initially, it was hard because I didn’t yet know how to think like a programmer and break problems into small pieces, but after a while, I started to gain clarity with JavaScript&lt;/p&gt;

&lt;p&gt;Since then I have built 100’s of projects with JavaScript.&lt;br&gt;
Here is a list of JavaScript Projects you can build:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Counter App&lt;/li&gt;
&lt;li&gt; Random Hex Color Generator&lt;/li&gt;
&lt;li&gt; Random Number Generator&lt;/li&gt;
&lt;li&gt; Modal/Popup&lt;/li&gt;
&lt;li&gt; Palindrome Checker&lt;/li&gt;
&lt;li&gt; Vowel Counter App&lt;/li&gt;
&lt;li&gt; Click to Copy&lt;/li&gt;
&lt;li&gt; Google Drive Download Link Generator&lt;/li&gt;
&lt;li&gt; Weather App&lt;/li&gt;
&lt;li&gt;Input Field Character Counter&lt;/li&gt;
&lt;li&gt;Lyrics Search App&lt;/li&gt;
&lt;li&gt;Internet Connection Status Detector&lt;/li&gt;
&lt;li&gt;Quiz App&lt;/li&gt;
&lt;li&gt;Music player&lt;/li&gt;
&lt;li&gt;HTTP Request Project&lt;/li&gt;
&lt;li&gt;Random Quote Generator&lt;/li&gt;
&lt;li&gt;List Search Project&lt;/li&gt;
&lt;li&gt;Date Countdown&lt;/li&gt;
&lt;li&gt;Time Countdown&lt;/li&gt;
&lt;li&gt;Tip Calculator&lt;/li&gt;
&lt;li&gt;Smooth Scroll Effect&lt;/li&gt;
&lt;li&gt;Sticky Nav Bar on Scroll&lt;/li&gt;
&lt;li&gt;Active Menu Switcher&lt;/li&gt;
&lt;li&gt;Responsive Mobile Menu&lt;/li&gt;
&lt;li&gt;Responsive Mobile Menu with Submenu&lt;/li&gt;
&lt;li&gt;Page Scroll Indicator&lt;/li&gt;
&lt;li&gt;Newsletter Form on Scroll&lt;/li&gt;
&lt;li&gt;Password Generator&lt;/li&gt;
&lt;li&gt;Simple ToDo App&lt;/li&gt;
&lt;li&gt;Todo App with Local Storage&lt;/li&gt;
&lt;li&gt;Notes App&lt;/li&gt;
&lt;li&gt;BMI Calculator&lt;/li&gt;
&lt;li&gt;Calculator&lt;/li&gt;
&lt;li&gt;Digital Clock&lt;/li&gt;
&lt;li&gt;Weight Converter&lt;/li&gt;
&lt;li&gt;Temperature Converter&lt;/li&gt;
&lt;li&gt;Running Game&lt;/li&gt;
&lt;li&gt;Word Count Tool&lt;/li&gt;
&lt;li&gt;Accordion&lt;/li&gt;
&lt;li&gt;Async Await - Random Joke Generator&lt;/li&gt;
&lt;li&gt;Speech to text app&lt;/li&gt;
&lt;li&gt;GitHub Profile Search App&lt;/li&gt;
&lt;li&gt;Wikipedia Search App&lt;/li&gt;
&lt;li&gt;Image Slider&lt;/li&gt;
&lt;li&gt;Lyrics App&lt;/li&gt;
&lt;li&gt;Product Filter&lt;/li&gt;
&lt;li&gt;Product Carousel Slider&lt;/li&gt;
&lt;li&gt;Vertical Tabs&lt;/li&gt;
&lt;li&gt;Count Up App&lt;/li&gt;
&lt;li&gt;Form Validation
These are some projects you can try out.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I created a course titled 100 Days of JavaScript that can help you sharpen your JavaScript skills by building a project everyday for 100Days.&lt;/p&gt;

&lt;p&gt;Feel free to check it here -  &lt;a href="https://www.udemy.com/course/100-days-of-javascript/?referralCode=9FB1A91BA3B143B2A261"&gt;100 Days of JavaScript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>If you had a time machine what is ONE thing you would tell yourself when you started coding?</title>
      <author>Fum</author>
      <pubDate>Thu, 13 May 2021 18:55:55 +0000</pubDate>
      <link>https://dev.to/inspirezone/if-you-had-a-time-machine-what-is-one-thing-you-would-tell-yourself-when-you-started-coding-2jn2</link>
      <guid>https://dev.to/inspirezone/if-you-had-a-time-machine-what-is-one-thing-you-would-tell-yourself-when-you-started-coding-2jn2</guid>
      <description>&lt;p&gt;I would probably tell myself to look up what imposter syndrome is so I can be relieved from all my doubts... Only discovered it was a real thing years into my career.&lt;/p&gt;

&lt;p&gt;What about you? I’m very curious to know!&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>beginners</category>
      <category>reflect</category>
    </item>
    <item>
      <title>Novedades de Angular v12</title>
      <author>Ricardo Chavarria</author>
      <pubDate>Thu, 13 May 2021 18:53:22 +0000</pubDate>
      <link>https://dev.to/ricardochl/novedades-de-angular-v12-1j3n</link>
      <guid>https://dev.to/ricardochl/novedades-de-angular-v12-1j3n</guid>
      <description>&lt;p&gt;Ayer 12 de mayo del 2021, se lanzo el release de Angular v12.&lt;/p&gt;

&lt;p&gt;En este post quiero compartir algunas de las novedades de esta versión.&lt;/p&gt;

&lt;p&gt;Empecemos...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#migrando-a-ivy-por-completo"&gt;
  &lt;/a&gt;
  Migrando a Ivy por completo
&lt;/h2&gt;

&lt;p&gt;La nueva evolución de Angular que llego con Ivy ahora se esta completando, el equipo se esta moviendo por completo a Ivy.&lt;/p&gt;

&lt;p&gt;Al antiguo view engine de Angular ha quedado obsoleto y se eliminará en una versión futura. &lt;/p&gt;

&lt;p&gt;Aunque view engine está obsoleto, existen algunas librerías que lo utilizan y que seguirán funcionando con Ivy. (No se requiere que los desarrolladores hagan algún cambio especifico para obtener este soporte), pero los autores de las librerías deben preocuparse por realizar la transición a Ivy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#id-de-mensajes-de-i18n"&gt;
  &lt;/a&gt;
  ID de mensajes de i18n
&lt;/h2&gt;

&lt;p&gt;Actualmente, hay varios formatos de identificación de mensajes que son legacy los cuales se utilizan en el sistema i18n. Con estos identificadores pueden surgir algunos problemas (con los espacios en blanco por ejemplo). Para resolver esos problemas el equipo de Angular esta migrando por completo a los nuevos ID de mensajes. El nuevo formato de identificación de mensajes es mucho más intuitivo.&lt;/p&gt;

&lt;p&gt;Desde v11, los nuevos proyectos se configuran automáticamente para usar los nuevos ID de mensajes. &lt;a href="https://angular.io/guide/migration-legacy-message-id"&gt;aquí&lt;/a&gt; una guía para la migración de legacy ids al nuevo formato.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#el-futuro-de-protactor"&gt;
  &lt;/a&gt;
  El futuro de Protactor
&lt;/h2&gt;

&lt;p&gt;El equipo de Angular ha optado por no incluir Protactor en nuevos proyectos, y está brindando soluciones de terceros que son bastante populares como Cypress, esto para ayudar a que los desarrolladores tengan soluciones alternativas.&lt;/p&gt;

&lt;p&gt;También el equipo ha estado en constante trabajo con la comunidad para escuchar sus comentarios sobre Protactor y en base a eso poder tomar una decisión en el futuro.&lt;/p&gt;

&lt;p&gt;Más información &lt;a href="https://github.com/angular/protractor/issues/5502"&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#operador-nullcoalescing-"&gt;
  &lt;/a&gt;
  Operador null-coalescing (??)
&lt;/h2&gt;

&lt;p&gt;El operador null-coalescing (??) ha permitido a los desarrolladores escribir un código mas limpio y práctico en TypeScript. Ahora con el release de Angular v12 tenemos soporte para utilizar este operador en las plantillas de los componentes.&lt;/p&gt;

&lt;p&gt;Entonces, eso quiere decir que si tenemos una sintaxis como la siguiente:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;impuesto&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;impuesto&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;impuesto&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;calcularImpuesto&lt;/span&gt;&lt;span class="p"&gt;()}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Se convierte en lo siguiente:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;impuesto&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="nx"&gt;calcularImpuesto&lt;/span&gt;&lt;span class="p"&gt;()}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#mejoras-en-la-documentaci%C3%B3n"&gt;
  &lt;/a&gt;
  Mejoras en la documentación
&lt;/h2&gt;

&lt;p&gt;Siempre hay mucha gente queriendo aprender Angular y no sabe por donde iniciar, el equipo de Angular ha identificado algunas oportunidades de mejora y ha realizado un gran esfuerzo por mejorar documentación oficial &lt;a href="//angular.io"&gt;angular.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Han escrito varias guías para los que vienen iniciando con el framework, esto está en un apartado llamado "Understanding Angular", si bien estas guías no son nuevas, el equipo ha estado en constante mejora de este contenido y agregando cada vez más, tal es el caso de la guía &lt;a href="https://angular.io/guide/content-projection"&gt;Content projection&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;También se actualizo la &lt;a href="https://angular.io/guide/contributors-guide-overview"&gt;guía para contribuciones&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sass-en-l%C3%ADnea"&gt;
  &lt;/a&gt;
  Sass en línea
&lt;/h2&gt;

&lt;p&gt;A partir de la v12, los componentes de Angular ahora admitirán Sass en línea en el campo &lt;strong&gt;styles&lt;/strong&gt; del decorador &lt;strong&gt;@component&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Anteriormente, Sass solo estaba disponible en recursos externos debido al compilador Angular. Para activar esta función en las aplicaciones existentes tenemos que añadir "inlineStyleLanguage": "scss”a angular.json. De lo contrario, estará disponible para nuevos proyectos que utilicen SCSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#angular-cdk-y-angular-material"&gt;
  &lt;/a&gt;
  Angular CDK y Angular Material
&lt;/h2&gt;

&lt;p&gt;Angular CDK y Angular Material han adoptado internamente el nuevo sistema de módulos de Sass. Los desarrolladores deben asegurarse de cambiar el paquete "node-sass" al paquete "sass".&lt;/p&gt;

&lt;p&gt;El node-sass ya no esta al día con la nuevas funciones de sass.&lt;/p&gt;

&lt;p&gt;Ademas, ambos (Angular CDK y Angular Material) exponen una nueva API diseñada para se consumida con la nueva sintaxis &lt;strong&gt;@use&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Cuando se actualiza una aplicación a la v12, la app cambiara automáticamente a la nueva API de sass.&lt;/p&gt;

&lt;p&gt;Visita la documentación oficial de &lt;a href="https://material.angular.io/"&gt;Angular Material&lt;/a&gt; para obtener mas información.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#soporte-de-webpack-5-en-produci%C3%B3n"&gt;
  &lt;/a&gt;
  Soporte de Webpack 5 en produción
&lt;/h2&gt;

&lt;p&gt;En la v11 se agrego soporte experimental para Webpack 5, ahora con la v12 tenemos soporte de Webpack 5 para su uso en producción.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#modo-producci%C3%B3n-y-modo-estricto-por-defecto-typescript-42"&gt;
  &lt;/a&gt;
  Modo producción y modo estricto por defecto, TypeScript 4.2
&lt;/h2&gt;

&lt;p&gt;La ejecución ng build ahora tiene como valor predeterminado &lt;strong&gt;producción&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;El modo estricto está habilitado de forma predeterminada en la CLI.&lt;/p&gt;

&lt;p&gt;Angular v12 es compatible con TypeScript 4.2&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#desactivaci%C3%B3n-del-soporte-para-ie11"&gt;
  &lt;/a&gt;
  Desactivación del soporte para IE11
&lt;/h2&gt;

&lt;p&gt;El equipo esta enfocado en brindar soluciones modernas para el framework, eliminar el soporte de esta compatibilidad permite que se puedan enfocar en otras soluciones  y brindar una mejor experiencias a los usuarios y desarrolladores.&lt;/p&gt;

&lt;p&gt;Angular v12 incluye un nuevo mensaje de advertencia en navegadores IE11, este soporte de eliminará por completo en Angular v13.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#actualizar-a-la-v12"&gt;
  &lt;/a&gt;
  Actualizar a la v12
&lt;/h2&gt;

&lt;p&gt;Angular nos brinda un comando para actualizar nuestras aplicaciones de una manera sencilla el cual es &lt;strong&gt;ng update&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Si tenemos aplicaciones un poco mas complejas podemos seguir la guía para actualizar, la pueden encontrar &lt;a href="https://update.angular.io/"&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusiones"&gt;
  &lt;/a&gt;
  Conclusiones
&lt;/h3&gt;

&lt;p&gt;Me alegra mucho que el equipo de Angular ahora este mas conectado con la comunidad, escuchando sus comentarios y trabajando en conjunto.&lt;/p&gt;

&lt;p&gt;Angular v12 llego con muchas características importantes que sin duda nos ayudaran a mejorar nuestra experiencia como desarrolladores, y a su vez la de los usuarios.&lt;/p&gt;

&lt;p&gt;Gracias por leer está publicación.&lt;/p&gt;

</description>
      <category>angular</category>
    </item>
  </channel>
</rss>
